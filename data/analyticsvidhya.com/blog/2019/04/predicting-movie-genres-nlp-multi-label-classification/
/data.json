{"url": "https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/\n", "time": 1683019843.656401, "path": "analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/\n/", "webpage": {"metadata": {"title": "Movie Genre Prediction Using Multi Label Classification", "h1": "Predicting Movie Genres using NLP \u2013 An Awesome Introduction to Multi-Label Classification", "description": "Multi label classification model for predicting movie genres.In this article learn about predicting movie genres multi label classification model in NLP."}, "outgoing_paragraph_urls": [{"url": "https://www.analyticsvidhya.com/blog/2019/04/build-first-multi-label-image-classification-model-python/https://www.analyticsvidhya.com/blog/2019/04/build-first-multi-label-image-classification-model-python/?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "this amazing article on building a multi-label image classification model", "paragraph_index": 0}, {"url": "https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "Natural Language Processing (NLP)", "paragraph_index": 0}, {"url": "https://www.analyticsvidhya.com/blog/2018/06/comprehensive-guide-recommendation-engine-python/https://www.analyticsvidhya.com/blog/2019/04/build-first-multi-label-image-classification-model-python/?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "several ways of building a recommendation engine", "paragraph_index": 9}, {"url": "http://www.cs.cmu.edu/~ark/personas/", "anchor_text": "CMU Movie Summary Corpus", "paragraph_index": 14}, {"url": "http://www.cs.cmu.edu/~ark/personas/data/MovieSummaries.tar.gz", "anchor_text": "link", "paragraph_index": 14}, {"url": "https://gist.github.com/prateekjoshi565/eb03e2dd2715b1a45c25f0bf4fc32089", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/a9c0f9002da437786ae0cc4745e1b051", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/98731f9c43ce5bf6e0c1db2e3cf61201", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/a873315ce932e89d17342868a7bab735", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/609b5ae0b81cfe9d76aae52ce003ec8c", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/1ac72f1d5b276d291cdd3f229bad37cd", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/639d2c53109b5f592056048b7d74f49a", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://cdn.analyticsvidhya.com/wp-content/uploads/2019/04/img_10.png", "anchor_text": "", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/3adef1a5cfe443a79515a2a9c5227215", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://cdn.analyticsvidhya.com/wp-content/uploads/2019/04/img_11.png", "anchor_text": "", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/b7ff8a0c721a1d5f70fbd2f48d7718c4", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://cdn.analyticsvidhya.com/wp-content/uploads/2019/04/img_12.png", "anchor_text": "", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/30821151888d76abbcaaceee458c4929", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/829183e711354dd0d7c98bfb23660c41", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://www.analyticsvidhya.com/blog/2017/06/word-embeddings-count-word2veec/?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "An Intuitive Understanding of Word Embeddings: From Count Vectors to Word2Vec", "paragraph_index": 18}, {"url": "https://www.analyticsvidhya.com/blog/2019/03/learn-to-use-elmo-to-extract-features-from-text/?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "A Step-by-Step NLP Guide to Learn ELMo for Extracting Features from Text", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/a49ce71ece25fd4cdef42d22369d8b26", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://cdn.analyticsvidhya.com/wp-content/uploads/2019/04/img_14.png", "anchor_text": "", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/187b95c55d5d4789fb1d33075d17564b", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://gist.github.com/prateekjoshi565/97df97b3c7c54fa904bd4daa37437266", "anchor_text": "Gist", "paragraph_index": 18}, {"url": "https://cdn.analyticsvidhya.com/wp-content/uploads/2019/04/img_15.png", "anchor_text": "", "paragraph_index": 18}, {"url": "https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "Certified Course: Natural Language Processing (NLP) using Python", "paragraph_index": 18}, {"url": "https://courses.analyticsvidhya.com/bundles/nlp-combo?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "Certified Program: NLP for Beginners", "paragraph_index": 18}, {"url": "https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "The Ultimate AI & ML BlackBelt Program", "paragraph_index": 18}, {"url": "https://github.com/prateekjoshi565/movie_genre_prediction/blob/master/Movie_Genre_Prediction.ipynb", "anchor_text": "here", "paragraph_index": 18}, {"url": "https://github.com/prateekjoshi565/movie_genre_prediction/blob/master/Movie_Genre_Prediction.ipynb", "anchor_text": "here", "paragraph_index": 75}], "all_paragraphs": ["I was intrigued going through this amazing article on building a multi-label image classification model last week. The data scientist in me started exploring possibilities of transforming this idea into a Natural Language Processing (NLP) problem.", "That article showcases computer vision techniques to predict a movie\u2019s genre. So I had to find a way to convert that problem statement into text-based data. Now, most NLP tutorials look at solving single-label classification challenges (when there\u2019s only one label per observation).", "But movies are not one-dimensional. One movie can span several genres. Now THAT is a challenge I love to embrace as a data scientist. I extracted a bunch of movie plot summaries and got down to work using this concept of multi-label classification. And the results, even using a simple model, are truly impressive.", "In this article, we will take a very hands-on approach to understanding multi-label classification in NLP. I had a lot fun building the movie genre prediction model using NLP and I\u2019m sure you will as well. Let\u2019s dig in!", "I\u2019m as excited as you are to jump into the code and start building our genre classification model. Before we do that, however, let me introduce you to the concept of multi-label classification in NLP. It\u2019s important to first understand the technique before diving into the implementation.", "The underlying concept is apparent in the name \u2013 multi-label classification. Here, an instance/record can have multiple labels and the number of labels per instance is not fixed.", "Let me explain this using a simple example. Take a look at the below tables, where \u2018X\u2019 represents the input variables and \u2018y\u2019 represents the target variables (which we are predicting):", "We cannot apply traditional classification algorithms directly on this kind of dataset. Why? Because these algorithms expect a single label for every input, when instead we have multiple labels. It\u2019s an intriguing challenge and one that we will solve in this article.", "You can get a more in-depth understanding of multi-label classification problems in the below article:", "There are several ways of building a recommendation engine. When it comes to movie genres, you can slice and dice the data based on multiple variables. But here\u2019s a simple approach \u2013 build a model that can automatically predict genre tags! I can already imagine the possibilities of adding such an option to a recommender. A win-win for everyone.", "Our task is to build a model that can predict the genre of a movie using just the plot details (available in text form).", "Take a look at the below snapshot from IMDb and pick out the different things on display:", "There\u2019s a LOT of information in such a tiny space:", "Genres tell us what to expect from the movie. And since these genres are clickable (at least on IMDb), they allow us to discover other similar movies of the same ilk. What seemed like a simple product feature suddenly has so many promising options. \ud83d\ude42", "We will use the CMU Movie Summary Corpus open dataset for our project. You can download the dataset directly from this link.", "This dataset contains multiple files, but we\u2019ll focus on only two of them for now:", "We know that we can\u2019t use supervised classification algorithms directly on a multi-label dataset. Therefore, we\u2019ll first have to transform our target variable. Let\u2019s see how to do this using a dummy dataset:", "Here, X and y are the features and labels, respectively \u2013 it is a multi-label dataset. Now, we will use the Binary Relevance approach to transform our target variable, y. We will first take out the unique labels in our dataset:", "Unique labels = [ t1, t2, t3, t4, t5 ]\nThere are 5 unique tags in the data. Next, we need to replace the current target variable with multiple target variables, each belonging to the unique labels of the dataset. Since there are 5 unique labels, there will be 5 new target variables with values 0 and 1 as shown below:\n\nWe have now covered the necessary ground to finally start solving this problem. In the next section, we will finally make an Automatic Movie Genre Prediction System using Python!\n\u00a0\nImplementation: Using Multi-Label Classification to Build a Movie Genre Prediction Model (in Python)\nWe have understood the problem statement and built a logical strategy to design our model. Let\u2019s bring it all together and start coding!\n\u00a0\nImport the required libraries\nWe will start by importing the libraries necessary to our project:\nView the code on Gist.\nLoad Data\nLet\u2019s load the movie metadata file first. Use \u2018\\t\u2019 as the separator as it is a tab separated file (.tsv):\n\ufeff\n\nOh wait \u2013 there are no headers in this dataset. The first column is the unique movie id, the third column is the name of the movie, and the last column contains the movie genre(s). We will not use the rest of the columns in this analysis.\nLet\u2019s add column names to the aforementioned three variables:\n# rename columns\r\nmeta.columns = [\"movie_id\",1,\"movie_name\",3,4,5,6,7,\"genre\"]\nNow, we will load the movie plot dataset into memory. This data comes in a text file with each row consisting of a movie id and a plot of the movie. We will read it line-by-line:\nView the code on Gist.\nNext, split the movie ids and the plots into two separate lists. We will use these lists to form a dataframe:\nView the code on Gist.\nLet\u2019s see what we have in the \u2018movies\u2019 dataframe:\nmovies.head()\n\nPerfect! We have both the movie id and the corresponding movie plot.\n\u00a0\nData Exploration and Pre-processing\nLet\u2019s add the movie names and their genres from the movie metadata file by merging the latter into the former based on the\u00a0movie_id\u00a0column:\nView the code on Gist.\n\nGreat! We have added both movie names and genres. However, the genres are in a dictionary notation. It will be easier to work with them if we can convert them into a Python list. We\u2019ll do this using the first row:\nmovies['genre'][0]\nOutput:\n'{\"/m/07s9rl0\": \"Drama\", \"/m/03q4nz\": \"World cinema\"}'\nWe can\u2019t access the genres in this row by using just\u00a0.values( ). Can you guess why? This is because this text is a string, not a dictionary. We will have to convert this string into a dictionary. We will take the help of the json library here:\ntype(json.loads(movies['genre'][0]))\nOutput:\ndict\nWe can now easily access this row\u2019s genres:\njson.loads(movies['genre'][0]).values()\nOutput:\ndict_values(['Drama', 'World cinema'])\nThis code helps us to extract all the genres from the movies data. Once done, add the extracted genres as lists back to the movies dataframe:\nView the code on Gist.\nSome of the samples might not contain any genre tags. We should remove those samples as they won\u2019t play a part in our model building process:\n# remove samples with 0 genre tags\r\nmovies_new = movies[~(movies['genre_new'].str.len() == 0)]\nmovies_new.shape, movies.shape\nOutput:\n((41793, 5), (42204, 5))\nOnly 411 samples had no genre tags. Let\u2019s take a look at the dataframe once again:\nmovies.head()\n\nNotice that the genres are now in a list format. Are you curious to find how many movie genres have been covered in this dataset? The below code answers this question:\n# get all genre tags in a list\r\nall_genres = sum(genres,[])\r\nlen(set(all_genres))\nOutput:\n363\nThere are over 363 unique genre tags in our dataset. That is quite a big number. I can hardy recall 5-6 genres! Let\u2019s find out what are these tags. We will use FreqDist( ) from the nltk library to create a dictionary of genres and their occurrence count across the dataset:\nView the code on Gist.\nI personally feel visualizing the data is a much better method than simply putting out numbers. So, let\u2019s plot the distribution of the movie genres:\nView the code on Gist.\n\nNext, we will clean our data a bit. I will use some very basic text cleaning steps (as that is not the focus area of this article):\nView the code on Gist.\nLet\u2019s apply the function on the movie plots by using the apply-lambda duo:\nmovies_new['clean_plot'] = movies_new['plot'].apply(lambda x: clean_text(x))\nFeel free to check the new versus old movie plots. I have provided a few random samples below:\n\nIn the clean_plot column, all the text is in lowercase and there are also no punctuation marks. Our text cleaning has worked like a charm.\nThe function below will visualize the words and their frequency in a set of documents. Let\u2019s use it to find out the most frequent words in the movie plots column:\nView the code on Gist.\n\nMost of the terms in the above plot are stopwords. These stopwords carry far less meaning than other keywords in the text (they just add noise to the data). I\u2019m going to go ahead and remove them from the plots\u2019 text. You can download the list of stopwords from the nltk library:\nnltk.download('stopwords')\nLet\u2019s remove the stopwords:\nView the code on Gist.\nCheck the most frequent terms sans the stopwords:\nfreq_words(movies_new['clean_plot'], 100)\n\nLooks much better, doesn\u2019t it? Far more interesting and meaningful words have now emerged, such as \u201cpolice\u201d, \u201cfamily\u201d, \u201cmoney\u201d, \u201ccity\u201d, etc.\n\u00a0\nConverting Text to Features\nI mentioned earlier that we will treat this multi-label classification problem as a Binary Relevance problem. Hence, we will now one hot encode the target variable, i.e.,\u00a0genre_new by using sklearn\u2019s MultiLabelBinarizer( ). Since there are 363 unique genre tags, there are going to be 363 new target variables.\nView the code on Gist.\n\n\nNow, it\u2019s time to turn our focus to extracting features from the cleaned version of the movie plots data. For this article, I will be using TF-IDF features. Feel free to use any other feature extraction method you are comfortable with, such as Bag-of-Words, word2vec, GloVe, or ELMo.\nI recommend checking out the below articles to learn more about the different ways of creating features from text:\n\nAn Intuitive Understanding of Word Embeddings: From Count Vectors to Word2Vec\nA Step-by-Step NLP Guide to Learn ELMo for Extracting Features from Text\n\ntfidf_vectorizer = TfidfVectorizer(max_df=0.8, max_features=10000)\nI have used the 10,000 most frequent words in the data as my features. You can try any other number as well for the\u00a0max_features parameter.\nNow, before creating TF-IDF features, we will split our data into train and validation sets for training and evaluating our model\u2019s performance. I\u2019m going with a 80-20 split \u2013 80% of the data samples in the train set and the rest in the validation set:\n\n\nView the code on Gist.\nNow we can create features for the train and the validation set:\n# create TF-IDF features\r\nxtrain_tfidf = tfidf_vectorizer.fit_transform(xtrain)\r\nxval_tfidf = tfidf_vectorizer.transform(xval)\n\u00a0\nBuild Your Movie Genre Prediction Model\nWe are all set for the model building part! This is what we\u2019ve been waiting for.\nRemember, we will have to build a model for every one-hot encoded target variable. Since we have 363 target variables, we will have to fit 363 different models with the same set of predictors (TF-IDF features).\nAs you can imagine, training 363 models can take a considerable amount of time on a modest system. Hence, I will build a Logistic Regression model as it is quick to train on limited computational power:\nfrom sklearn.linear_model import LogisticRegression\r\n\r\n# Binary Relevance\r\nfrom sklearn.multiclass import OneVsRestClassifier\r\n\r\n# Performance metric\r\nfrom sklearn.metrics import f1_score\nWe will use sk-learn\u2019s OneVsRestClassifier class to solve this problem as a Binary Relevance or one-vs-all problem:\nlr = LogisticRegression()\r\nclf = OneVsRestClassifier(lr)\nFinally, fit the model on the train set:\n# fit model on train data\r\nclf.fit(xtrain_tfidf, ytrain)\nPredict movie genres on the validation set:\n# make predictions for validation set\r\ny_pred = clf.predict(xval_tfidf)\nLet\u2019s check out a sample from these predictions:\ny_pred[3]\n\nIt is a binary one-dimensional array of length 363. Basically, it is the one-hot encoded form of the unique genre tags. We will have to find a way to convert it into movie genre tags.\nLuckily, sk-learn comes to our rescue once again. We will use the\u00a0inverse_transform( ) function along with the MultiLabelBinarizer( ) object to convert the predicted arrays into movie genre tags:\nmultilabel_binarizer.inverse_transform(y_pred)[3]\nOutput:\n('Action', 'Drama')\n\n\nWow! That was smooth.\nHowever, to evaluate our model\u2019s overall performance, we need to take into consideration all the predictions and the entire target variable of the validation set:\n\n\n# evaluate performance\r\nf1_score(yval, y_pred, average=\"micro\")\nOutput:\n0.31539641943734015\nWe get a decent F1 score of 0.315. These predictions were made based on a threshold value of 0.5, which means that the probabilities greater than or equal to 0.5 were converted to 1\u2019s and the rest to 0\u2019s.\nLet\u2019s try to change this threshold value and see if that improves our model\u2019s score:\n# predict probabilities\r\ny_pred_prob = clf.predict_proba(xval_tfidf)\nNow set a threshold value:\nt = 0.3 # threshold value\r\ny_pred_new = (y_pred_prob >= t).astype(int)\nI have tried 0.3 as the threshold value. You should try other values as well. Let\u2019s check the F1 score again on these new predictions.\n# evaluate performance\r\nf1_score(yval, y_pred_new, average=\"micro\")\nOutput:\n0.4378456703198025\nThat is quite a big boost in our model\u2019s performance. A better approach to find the right threshold value would be to use a k-fold cross validation setup and try different values.\n\u00a0\nCreate Inference Function\nWait \u2013 we are not done with the problem yet. We also have to take care of the new data or new movie plots that will come in the future, right? Our movie genre prediction system should be able to take a movie plot in raw form as input and generate its genre tag(s).\nTo achieve this, let\u2019s build an inference function. It will take a movie plot text and follow the below steps:\n\nClean the text\nRemove stopwords from the cleaned text\nExtract features from the text\nMake predictions\nReturn the predicted movie genre tags\n\nView the code on Gist.\nLet\u2019s test this inference function on a few samples from our validation set:\nView the code on Gist.\n\nYay! We\u2019ve built a very serviceable model. The model is not yet able to predict rare genre tags but that\u2019s a challenge for another time (or you could take it up and let us know the approach you followed).\n\u00a0\nWhere to go from here?\nIf you are looking for similar challenges, you\u2019ll find the below links useful. I have solved a Stackoverflow Questions Tag Prediction problem using both machine learning and deep learning models in our course on Natural Language Processing.\nThe links to the course are below for your reference:\n\nCertified Course: Natural Language Processing (NLP) using Python\nCertified Program: NLP for Beginners\nThe Ultimate AI & ML BlackBelt Program\n\n\u00a0\nEnd Notes\nI would love to see different approaches and techniques from our community to achieve better results. Try to use different feature extraction methods, build different models, fine-tune those models, etc. There are so many things that you can try. Don\u2019t stop yourself here \u2013 go on and experiment!\nFeel free to discuss and comment in the comment section below. The full code is available here.\n\nRelated\n ", "There are 5 unique tags in the data. Next, we need to replace the current target variable with multiple target variables, each belonging to the unique labels of the dataset. Since there are 5 unique labels, there will be 5 new target variables with values 0 and 1 as shown below:", "We have now covered the necessary ground to finally start solving this problem. In the next section, we will finally make an Automatic Movie Genre Prediction System using Python!", "We have understood the problem statement and built a logical strategy to design our model. Let\u2019s bring it all together and start coding!", "We will start by importing the libraries necessary to our project:", "Let\u2019s load the movie metadata file first. Use \u2018\\t\u2019 as the separator as it is a tab separated file (.tsv):", "Oh wait \u2013 there are no headers in this dataset. The first column is the unique movie id, the third column is the name of the movie, and the last column contains the movie genre(s). We will not use the rest of the columns in this analysis.", "Let\u2019s add column names to the aforementioned three variables:", "Now, we will load the movie plot dataset into memory. This data comes in a text file with each row consisting of a movie id and a plot of the movie. We will read it line-by-line:", "Next, split the movie ids and the plots into two separate lists. We will use these lists to form a dataframe:", "Let\u2019s see what we have in the \u2018movies\u2019 dataframe:", "Perfect! We have both the movie id and the corresponding movie plot.", "Let\u2019s add the movie names and their genres from the movie metadata file by merging the latter into the former based on the\u00a0movie_id\u00a0column:", "Great! We have added both movie names and genres. However, the genres are in a dictionary notation. It will be easier to work with them if we can convert them into a Python list. We\u2019ll do this using the first row:", "We can\u2019t access the genres in this row by using just\u00a0.values( ). Can you guess why? This is because this text is a string, not a dictionary. We will have to convert this string into a dictionary. We will take the help of the json library here:", "We can now easily access this row\u2019s genres:", "This code helps us to extract all the genres from the movies data. Once done, add the extracted genres as lists back to the movies dataframe:", "Some of the samples might not contain any genre tags. We should remove those samples as they won\u2019t play a part in our model building process:", "Only 411 samples had no genre tags. Let\u2019s take a look at the dataframe once again:", "Notice that the genres are now in a list format. Are you curious to find how many movie genres have been covered in this dataset? The below code answers this question:", "There are over 363 unique genre tags in our dataset. That is quite a big number. I can hardy recall 5-6 genres! Let\u2019s find out what are these tags. We will use FreqDist( ) from the nltk library to create a dictionary of genres and their occurrence count across the dataset:", "I personally feel visualizing the data is a much better method than simply putting out numbers. So, let\u2019s plot the distribution of the movie genres:", "Next, we will clean our data a bit. I will use some very basic text cleaning steps (as that is not the focus area of this article):", "Let\u2019s apply the function on the movie plots by using the apply-lambda duo:", "Feel free to check the new versus old movie plots. I have provided a few random samples below:", "In the clean_plot column, all the text is in lowercase and there are also no punctuation marks. Our text cleaning has worked like a charm.", "The function below will visualize the words and their frequency in a set of documents. Let\u2019s use it to find out the most frequent words in the movie plots column:", "Most of the terms in the above plot are stopwords. These stopwords carry far less meaning than other keywords in the text (they just add noise to the data). I\u2019m going to go ahead and remove them from the plots\u2019 text. You can download the list of stopwords from the nltk library:", "Check the most frequent terms sans the stopwords:", "Looks much better, doesn\u2019t it? Far more interesting and meaningful words have now emerged, such as \u201cpolice\u201d, \u201cfamily\u201d, \u201cmoney\u201d, \u201ccity\u201d, etc.", "I mentioned earlier that we will treat this multi-label classification problem as a Binary Relevance problem. Hence, we will now one hot encode the target variable, i.e.,\u00a0genre_new by using sklearn\u2019s MultiLabelBinarizer( ). Since there are 363 unique genre tags, there are going to be 363 new target variables.", "Now, it\u2019s time to turn our focus to extracting features from the cleaned version of the movie plots data. For this article, I will be using TF-IDF features. Feel free to use any other feature extraction method you are comfortable with, such as Bag-of-Words, word2vec, GloVe, or ELMo.", "I recommend checking out the below articles to learn more about the different ways of creating features from text:", "I have used the 10,000 most frequent words in the data as my features. You can try any other number as well for the\u00a0max_features parameter.", "Now, before creating TF-IDF features, we will split our data into train and validation sets for training and evaluating our model\u2019s performance. I\u2019m going with a 80-20 split \u2013 80% of the data samples in the train set and the rest in the validation set:", "Now we can create features for the train and the validation set:", "We are all set for the model building part! This is what we\u2019ve been waiting for.", "Remember, we will have to build a model for every one-hot encoded target variable. Since we have 363 target variables, we will have to fit 363 different models with the same set of predictors (TF-IDF features).", "As you can imagine, training 363 models can take a considerable amount of time on a modest system. Hence, I will build a Logistic Regression model as it is quick to train on limited computational power:", "We will use sk-learn\u2019s OneVsRestClassifier class to solve this problem as a Binary Relevance or one-vs-all problem:", "Finally, fit the model on the train set:", "Predict movie genres on the validation set:", "Let\u2019s check out a sample from these predictions:", "It is a binary one-dimensional array of length 363. Basically, it is the one-hot encoded form of the unique genre tags. We will have to find a way to convert it into movie genre tags.", "Luckily, sk-learn comes to our rescue once again. We will use the\u00a0inverse_transform( ) function along with the MultiLabelBinarizer( ) object to convert the predicted arrays into movie genre tags:", "However, to evaluate our model\u2019s overall performance, we need to take into consideration all the predictions and the entire target variable of the validation set:", "We get a decent F1 score of 0.315. These predictions were made based on a threshold value of 0.5, which means that the probabilities greater than or equal to 0.5 were converted to 1\u2019s and the rest to 0\u2019s.", "Let\u2019s try to change this threshold value and see if that improves our model\u2019s score:", "I have tried 0.3 as the threshold value. You should try other values as well. Let\u2019s check the F1 score again on these new predictions.", "That is quite a big boost in our model\u2019s performance. A better approach to find the right threshold value would be to use a k-fold cross validation setup and try different values.", "Wait \u2013 we are not done with the problem yet. We also have to take care of the new data or new movie plots that will come in the future, right? Our movie genre prediction system should be able to take a movie plot in raw form as input and generate its genre tag(s).", "To achieve this, let\u2019s build an inference function. It will take a movie plot text and follow the below steps:", "Let\u2019s test this inference function on a few samples from our validation set:", "Yay! We\u2019ve built a very serviceable model. The model is not yet able to predict rare genre tags but that\u2019s a challenge for another time (or you could take it up and let us know the approach you followed).", "If you are looking for similar challenges, you\u2019ll find the below links useful. I have solved a Stackoverflow Questions Tag Prediction problem using both machine learning and deep learning models in our course on Natural Language Processing.", "The links to the course are below for your reference:", "I would love to see different approaches and techniques from our community to achieve better results. Try to use different feature extraction methods, build different models, fine-tune those models, etc. There are so many things that you can try. Don\u2019t stop yourself here \u2013 go on and experiment!", "Feel free to discuss and comment in the comment section below. The full code is available here.", "Data Scientist at Analytics Vidhya with multidisciplinary academic background. Experienced in machine learning, NLP, graphs & networks. Passionate about learning and applying data science to solve real world problems.", " Notify me of follow-up comments by email.", " Notify me of new posts by email.", "Make Money While Sleeping: Side Hustles to Generate Passive Income..", "Google Bard Learnt Bengali on Its Own: Sundar Pichai", "FreedomGPT: Personal, Bold and Uncensored Chatbot Running Locally on Your..", "Understand Random Forest Algorithms With Examples (Updated 2023)", " A verification link has been sent to your email id ", " If you have not recieved the link please goto\nSign Up  page again\n", "This email id is not registered with us. Please enter your registered email id."], "all_outgoing_urls": [{"url": "https://www.analyticsvidhya.com/blog/", "anchor_text": ""}, {"url": "https://courses.analyticsvidhya.com/courses/Machine-Learning-Certification-Course-for-Beginners?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "Machine Learning"}, {"url": "https://courses.analyticsvidhya.com/courses/getting-started-with-neural-networks?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "Deep Learning"}, {"url": "https://courses.analyticsvidhya.com/courses/Intro-to-NLP?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/guide/?utm_source=blog_navbar&utm_medium=machine_learning_button", "anchor_text": "Guides"}, {"url": "https://www.analyticsvidhya.com/blog/category/machine-learning/?utm_source=blog_navbar&utm_medium=machine_learning_button", "anchor_text": "Machine Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/deep-learning/?utm_source=blog_navbar&utm_medium=deep_learning_button", "anchor_text": "Deep Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/nlp/?utm_source=blog_navbar&utm_medium=_button", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/computer-vision/?utm_source=blog_navbar&utm_medium=article_button", "anchor_text": "Computer Vision"}, {"url": "https://www.analyticsvidhya.com/blog/category/data-visualization/?utm_source=blog_navbar&utm_medium=_button", "anchor_text": "Data Visualization"}, {"url": "https://www.analyticsvidhya.com/blog/category/interview-questsions/?utm_source=blog_navbar&utm_medium=career_button", "anchor_text": "Interview Questions"}, {"url": "https://www.analyticsvidhya.com/blog/category/infographics/?utm-source=blog-navbar", "anchor_text": "Infographics"}, {"url": "https://jobsnew.analyticsvidhya.com/?utm-source=blog-navbar", "anchor_text": "Jobs"}, {"url": "https://www.analyticsvidhya.com/blog/category/podcast/?utm-source=blog-navbar", "anchor_text": "Podcasts"}, {"url": "https://courses.analyticsvidhya.com/courses/ebook-machine-learning-simplified?utm_source=bolg-navbar&utm_medium=homepage&utm_campaign=ebook", "anchor_text": "E-Books"}, {"url": "https://www.analyticsvidhya.com/corporate/?utm-source=blog-navbar", "anchor_text": "For Companies"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2019/?utm-source=blog-navbar", "anchor_text": "Datahack Summit"}, {"url": "https://dsat.analyticsvidhya.com/?utm-source=blog-navbar", "anchor_text": "DSAT"}, {"url": "https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/?utm-source=blog-navbar", "anchor_text": "Glossary"}, {"url": "https://www.analyticsvidhya.com/blog-archive/?utm-source=blog-navbar", "anchor_text": "Archive"}, {"url": "https://lekhak.analyticsvidhya.com/write/", "anchor_text": "Write an Article"}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=blog_navbar&utm_medium=blackbelt_button", "anchor_text": "Certified AI & ML BlackBelt Plus"}, {"url": "https://bootcamp.analyticsvidhya.com/?utm_source=blog_navbar&utm_medium=bootcamp_button", "anchor_text": "Data Science Immersive Bootcamp"}, {"url": "https://courses.analyticsvidhya.com/collections?utm_source=blog_navbar&utm_medium=all_courses_button", "anchor_text": "All Courses"}, {"url": "https://datahack.analyticsvidhya.com/blogathon/?utm_source=blog&utm_medium=nav_bar", "anchor_text": "Blogathon"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2023/?utm_source=Blogs&utm_medium=Nav_Bar", "anchor_text": "Conference"}, {"url": "https://lekhak.analyticsvidhya.com/write/", "anchor_text": "Write an Article"}, {"url": "https://www.analyticsvidhya.com/creators-club/?utm-medium=blog-navbar&utm_source=creator_club_button", "anchor_text": "Creators Club"}, {"url": "https://id.analyticsvidhya.com/accounts/profile/", "anchor_text": "Manage your AV Account"}, {"url": "https://datahack.analyticsvidhya.com/user/?utm-source=blog-navbar", "anchor_text": "My Hackathons"}, {"url": "https://profile.analyticsvidhya.com/accounts/bookmarks/", "anchor_text": "My Bookmarks"}, {"url": "https://courses.analyticsvidhya.com/enrollments/?utm-source=blog-navbar", "anchor_text": "My Courses"}, {"url": "https://jobsnew.analyticsvidhya.com/jobs/myactive/?utm-source=blog-navbar", "anchor_text": "My Applied Jobs"}, {"url": "https://www.analyticsvidhya.com/blog/", "anchor_text": "Home"}, {"url": "https://www.analyticsvidhya.com/blog/", "anchor_text": ""}, {"url": "https://courses.analyticsvidhya.com/courses/Machine-Learning-Certification-Course-for-Beginners?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "Machine Learning"}, {"url": "https://courses.analyticsvidhya.com/courses/getting-started-with-neural-networks?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "Deep Learning"}, {"url": "https://courses.analyticsvidhya.com/courses/Intro-to-NLP?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/guide/?utm_source=blog_navbar&utm_medium=machine_learning_button", "anchor_text": "Guides"}, {"url": "https://www.analyticsvidhya.com/blog/category/machine-learning/?utm_source=blog_navbar&utm_medium=machine_learning_button", "anchor_text": "Machine Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/deep-learning/?utm_source=blog_navbar&utm_medium=deep_learning_button", "anchor_text": "Deep Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/nlp/?utm_source=blog_navbar&utm_medium=_button", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/computer-vision/?utm_source=blog_navbar&utm_medium=article_button", "anchor_text": "Computer Vision"}, {"url": "https://www.analyticsvidhya.com/blog/category/data-visualization/?utm_source=blog_navbar&utm_medium=_button", "anchor_text": "Data Visualization"}, {"url": "https://www.analyticsvidhya.com/blog/category/interview-questsions/?utm_source=blog_navbar&utm_medium=career_button", "anchor_text": "Interview Questions"}, {"url": "https://www.analyticsvidhya.com/blog/category/infographics/?utm-source=blog-navbar", "anchor_text": "Infographics"}, {"url": "https://jobsnew.analyticsvidhya.com/?utm-source=blog-navbar", "anchor_text": "Jobs"}, {"url": "https://www.analyticsvidhya.com/blog/category/podcast/?utm-source=blog-navbar", "anchor_text": "Podcasts"}, {"url": "https://courses.analyticsvidhya.com/courses/ebook-machine-learning-simplified?utm_source=bolg-navbar&utm_medium=homepage&utm_campaign=ebook", "anchor_text": "E-Books"}, {"url": "https://www.analyticsvidhya.com/corporate/?utm-source=blog-navbar", "anchor_text": "For Companies"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2019/?utm-source=blog-navbar", "anchor_text": "Datahack Summit"}, {"url": "https://dsat.analyticsvidhya.com/?utm-source=blog-navbar", "anchor_text": "DSAT"}, {"url": "https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/?utm-source=blog-navbar", "anchor_text": "Glossary"}, {"url": "https://www.analyticsvidhya.com/blog-archive/?utm-source=blog-navbar", "anchor_text": "Archive"}, {"url": "https://lekhak.analyticsvidhya.com/write/", "anchor_text": "Write an Article"}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=blog_navbar&utm_medium=blackbelt_button", "anchor_text": "Certified AI & ML BlackBelt Plus"}, {"url": "https://bootcamp.analyticsvidhya.com/?utm_source=blog_navbar&utm_medium=bootcamp_button", "anchor_text": "Data Science Immersive Bootcamp"}, {"url": "https://courses.analyticsvidhya.com/collections?utm_source=blog_navbar&utm_medium=all_courses_button", "anchor_text": "All Courses"}, {"url": "https://datahack.analyticsvidhya.com/blogathon/?utm_source=blog&utm_medium=nav_bar", "anchor_text": "Blogathon"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2023/?utm_source=Blogs&utm_medium=Nav_Bar", "anchor_text": "Conference"}, {"url": "https://lekhak.analyticsvidhya.com/write/", "anchor_text": "Write an Article"}, {"url": "https://www.analyticsvidhya.com/creators-club/?utm-medium=blog-navbar&utm_source=creator_club_button", "anchor_text": "Creators Club"}, {"url": "https://id.analyticsvidhya.com/accounts/profile/", "anchor_text": "Manage your AV Account"}, {"url": "https://datahack.analyticsvidhya.com/user/?utm-source=blog-navbar", "anchor_text": "My Hackathons"}, {"url": "https://profile.analyticsvidhya.com/accounts/bookmarks/", "anchor_text": "My Bookmarks"}, {"url": "https://courses.analyticsvidhya.com/enrollments/?utm-source=blog-navbar", "anchor_text": "My Courses"}, {"url": "https://jobsnew.analyticsvidhya.com/jobs/myactive/?utm-source=blog-navbar", "anchor_text": "My Applied Jobs"}, {"url": "http://www.facebook.com/sharer.php?u=https%3A%2F%2Fwww.analyticsvidhya.com%2Fblog%2F2019%2F04%2Fpredicting-movie-genres-nlp-multi-label-classification%2F", "anchor_text": "Facebook"}, {"url": "http://twitter.com/share?text=Predicting Movie Genres using NLP \u2013 An Awesome Introduction to Multi-Label Classification&url=https%3A%2F%2Fwww.analyticsvidhya.com%2Fblog%2F2019%2F04%2Fpredicting-movie-genres-nlp-multi-label-classification%2F", "anchor_text": "Twitter"}, {"url": "http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.analyticsvidhya.com%2Fblog%2F2019%2F04%2Fpredicting-movie-genres-nlp-multi-label-classification%2F", "anchor_text": "Linkedin"}, {"url": "https://www.analyticsvidhya.com/blog/author/pjoshi15/", "anchor_text": "Prateek Joshi"}, {"url": "https://www.analyticsvidhya.com/blog/category/advanced/", "anchor_text": "Advanced"}, {"url": "https://www.analyticsvidhya.com/blog/category/classification/", "anchor_text": "Classification"}, {"url": "https://www.analyticsvidhya.com/blog/category/machine-learning/", "anchor_text": "Machine Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/nlp/", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/project/", "anchor_text": "Project"}, {"url": "https://www.analyticsvidhya.com/blog/category/python-2/", "anchor_text": "Python"}, {"url": "https://www.analyticsvidhya.com/blog/category/supervised/", "anchor_text": "Supervised"}, {"url": "https://www.analyticsvidhya.com/blog/category/technique/", "anchor_text": "Technique"}, {"url": "https://www.analyticsvidhya.com/blog/category/telecom/", "anchor_text": "Telecom"}, {"url": "https://www.analyticsvidhya.com/blog/category/text/", "anchor_text": "Text"}, {"url": "https://www.analyticsvidhya.com/blog/category/unstructured-data/", "anchor_text": "Unstructured Data"}, {"url": "https://www.analyticsvidhya.com/blog/2019/04/build-first-multi-label-image-classification-model-python/https://www.analyticsvidhya.com/blog/2019/04/build-first-multi-label-image-classification-model-python/?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "this amazing article on building a multi-label image classification model"}, {"url": "https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "Natural Language Processing (NLP)"}, {"url": "https://cdn.analyticsvidhya.com/wp-content/uploads/2019/04/featured_image.jpg", "anchor_text": ""}, {"url": "https://cdn.analyticsvidhya.com/wp-content/uploads/2019/04/img_1.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/2017/08/introduction-to-multi-label-classification/https://www.analyticsvidhya.com/blog/2019/04/build-first-multi-label-image-classification-model-python/?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "Solving Multi-Label Classification Problems (using Case Studies)"}, {"url": "https://www.analyticsvidhya.com/blog/2018/06/comprehensive-guide-recommendation-engine-python/https://www.analyticsvidhya.com/blog/2019/04/build-first-multi-label-image-classification-model-python/?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "several ways of building a recommendation engine"}, {"url": "http://www.cs.cmu.edu/~ark/personas/", "anchor_text": "CMU Movie Summary Corpus"}, {"url": "http://www.cs.cmu.edu/~ark/personas/data/MovieSummaries.tar.gz", "anchor_text": "link"}, {"url": "https://gist.github.com/prateekjoshi565/eb03e2dd2715b1a45c25f0bf4fc32089", "anchor_text": "Gist"}, {"url": "https://gist.github.com/prateekjoshi565/a9c0f9002da437786ae0cc4745e1b051", "anchor_text": "Gist"}, {"url": "https://gist.github.com/prateekjoshi565/98731f9c43ce5bf6e0c1db2e3cf61201", "anchor_text": "Gist"}, {"url": "https://gist.github.com/prateekjoshi565/a873315ce932e89d17342868a7bab735", "anchor_text": "Gist"}, {"url": "https://gist.github.com/prateekjoshi565/609b5ae0b81cfe9d76aae52ce003ec8c", "anchor_text": "Gist"}, {"url": "https://gist.github.com/prateekjoshi565/1ac72f1d5b276d291cdd3f229bad37cd", "anchor_text": "Gist"}, {"url": "https://gist.github.com/prateekjoshi565/639d2c53109b5f592056048b7d74f49a", "anchor_text": "Gist"}, {"url": "https://cdn.analyticsvidhya.com/wp-content/uploads/2019/04/img_10.png", "anchor_text": ""}, {"url": "https://gist.github.com/prateekjoshi565/3adef1a5cfe443a79515a2a9c5227215", "anchor_text": "Gist"}, {"url": "https://cdn.analyticsvidhya.com/wp-content/uploads/2019/04/img_11.png", "anchor_text": ""}, {"url": "https://gist.github.com/prateekjoshi565/b7ff8a0c721a1d5f70fbd2f48d7718c4", "anchor_text": "Gist"}, {"url": "https://cdn.analyticsvidhya.com/wp-content/uploads/2019/04/img_12.png", "anchor_text": ""}, {"url": "https://gist.github.com/prateekjoshi565/30821151888d76abbcaaceee458c4929", "anchor_text": "Gist"}, {"url": "https://gist.github.com/prateekjoshi565/829183e711354dd0d7c98bfb23660c41", "anchor_text": "Gist"}, {"url": "https://www.analyticsvidhya.com/blog/2017/06/word-embeddings-count-word2veec/?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "An Intuitive Understanding of Word Embeddings: From Count Vectors to Word2Vec"}, {"url": "https://www.analyticsvidhya.com/blog/2019/03/learn-to-use-elmo-to-extract-features-from-text/?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "A Step-by-Step NLP Guide to Learn ELMo for Extracting Features from Text"}, {"url": "https://gist.github.com/prateekjoshi565/a49ce71ece25fd4cdef42d22369d8b26", "anchor_text": "Gist"}, {"url": "https://cdn.analyticsvidhya.com/wp-content/uploads/2019/04/img_14.png", "anchor_text": ""}, {"url": "https://gist.github.com/prateekjoshi565/187b95c55d5d4789fb1d33075d17564b", "anchor_text": "Gist"}, {"url": "https://gist.github.com/prateekjoshi565/97df97b3c7c54fa904bd4daa37437266", "anchor_text": "Gist"}, {"url": "https://cdn.analyticsvidhya.com/wp-content/uploads/2019/04/img_15.png", "anchor_text": ""}, {"url": "https://courses.analyticsvidhya.com/courses/natural-language-processing-nlp/?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "Certified Course: Natural Language Processing (NLP) using Python"}, {"url": "https://courses.analyticsvidhya.com/bundles/nlp-combo?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "Certified Program: NLP for Beginners"}, {"url": "https://courses.analyticsvidhya.com/bundles/ai-blackbelt-beginner-to-master?utm_source=blog&utm_medium=predicting-movie-genres-nlp-multi-label-classification", "anchor_text": "The Ultimate AI & ML BlackBelt Program"}, {"url": "https://github.com/prateekjoshi565/movie_genre_prediction/blob/master/Movie_Genre_Prediction.ipynb", "anchor_text": "here"}, {"url": "https://www.analyticsvidhya.com/blog/tag/machine-learning/", "anchor_text": "machine learning"}, {"url": "https://www.analyticsvidhya.com/blog/tag/multi-label-classification/", "anchor_text": "multi-label classification"}, {"url": "https://www.analyticsvidhya.com/blog/tag/natural-language-processing/", "anchor_text": "Natural language processing"}, {"url": "https://www.analyticsvidhya.com/blog/tag/nlp/", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/tag/python/", "anchor_text": "python"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2023/?utm_source=blog_india&utm_medium=side_banner&utm_campaign=27-Apr-2023||&utm_content=generativeAI", "anchor_text": ""}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=blog_outside_india&utm_medium=side_banner&utm_campaign=24-Mar-2023||&utm_content=project#ReinforceProject", "anchor_text": ""}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=ReadingList&utm_medium=blog", "anchor_text": "Become a full stack data scientist"}, {"url": "https://www.analyticsvidhya.com/blog/2017/01/ultimate-guide-to-understand-implement-natural-language-processing-codes-in-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "What is NLP?"}, {"url": "https://www.analyticsvidhya.com/blog/2020/07/top-10-applications-of-natural-language-processing-nlp/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Applications of NLP"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/text-preprocessing-in-nlp-with-python-codes/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Understanding Text Pre-processing"}, {"url": "https://www.analyticsvidhya.com/blog/2019/07/how-get-started-nlp-6-unique-ways-perform-tokenization/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Tokenization in NLP"}, {"url": "https://www.analyticsvidhya.com/blog/2020/05/what-is-tokenization-nlp/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Byte Pair Encoding"}, {"url": "https://www.analyticsvidhya.com/blog/2022/09/tokenizer-free-language-modeling-with-pixels/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Tokenizer Free Language Modeling with Pixels"}, {"url": "https://www.analyticsvidhya.com/blog/2019/08/how-to-remove-stopwords-text-normalization-nltk-spacy-gensim-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Stopword Removal"}, {"url": "https://www.analyticsvidhya.com/blog/2022/06/stemming-vs-lemmatization-in-nlp-must-know-differences/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Stemming vs Lemmatization"}, {"url": "https://www.analyticsvidhya.com/blog/2021/05/how-to-build-word-cloud-in-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Text Mining"}, {"url": "https://www.analyticsvidhya.com/blog/2020/03/spacy-tutorial-learn-natural-language-processing/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Spacy Tutorials"}, {"url": "https://www.analyticsvidhya.com/blog/2022/02/topic-identification-with-gensim-library-using-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Gensim Tutorials"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/regex-cheatsheet-for-natural-language-processing-tasks/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "What are Regular Expressions?"}, {"url": "https://www.analyticsvidhya.com/blog/2020/01/4-applications-of-regular-expressions-that-every-data-scientist-should-know-with-python-code/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Regular Expressions"}, {"url": "https://www.analyticsvidhya.com/blog/2021/07/fuzzy-string-matching-a-hands-on-guide/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "String Similarity"}, {"url": "https://www.analyticsvidhya.com/blog/2021/11/autocorrect-feature-using-nlp-in-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Spelling Correction"}, {"url": "https://www.analyticsvidhya.com/blog/2016/08/beginners-guide-to-topic-modeling-in-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Introduction to Topic Modeling"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/part-2-topic-modeling-and-latent-dirichlet-allocation-lda-using-gensim-and-sklearn/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Latent Dirichlet Allocation (LDA)"}, {"url": "https://www.analyticsvidhya.com/blog/2022/08/supervised-topic-models/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Implement Topic Modeling"}, {"url": "https://www.analyticsvidhya.com/blog/2021/04/a-guide-to-feature-engineering-in-nlp/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Introduction to Feature Engineering for Text Data"}, {"url": "https://www.analyticsvidhya.com/blog/2015/10/6-practices-enhance-performance-text-classification-model/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Implement Text Feature Engineering Techniques"}, {"url": "https://www.analyticsvidhya.com/blog/2020/03/one-hot-encoding-vs-label-encoding-using-scikit-learn/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Introduction to One Hot Encoding"}, {"url": "https://www.analyticsvidhya.com/blog/2021/05/how-to-perform-one-hot-encoding-for-multi-categorical-variables/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Implement One Hot Encoding"}, {"url": "https://www.analyticsvidhya.com/blog/2020/08/types-of-categorical-data-encoding/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Limitations of One Hot Encoding"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/part-5-step-by-step-guide-to-master-nlp-text-vectorization-approaches/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Count Vectorizer and TF-IDF"}, {"url": "https://www.analyticsvidhya.com/blog/2018/07/hands-on-sentiment-analysis-dataset-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Solving Text classification using TF-IDF"}, {"url": "https://www.analyticsvidhya.com/blog/2020/06/nlp-project-information-extraction/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Information Retrieval System Explained in Simple terms!"}, {"url": "https://www.analyticsvidhya.com/blog/2015/04/pagerank-explained-simple/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "How does Google Rank Search Results?"}, {"url": "https://www.analyticsvidhya.com/blog/2019/10/how-to-build-knowledge-graph-text-using-spacy/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Knowledge Graph"}, {"url": "https://www.analyticsvidhya.com/blog/2017/06/word-embeddings-count-word2veec/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Understanding Word2Vec"}, {"url": "https://www.analyticsvidhya.com/blog/2020/03/pretrained-word-embeddings-nlp/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Understanding Skip Gram and Continous Bag Of Words"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/practical-guide-to-word-embedding-system/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Word2Vec Implementation in Gensim"}, {"url": "https://www.analyticsvidhya.com/blog/2019/07/how-to-build-recommendation-system-word2vec-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Visualizing Word2Vec"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/word-sense-disambiguation-importance-in-natural-language-processing/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Word Senses and Word Sense Ambiguity"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/part-11-step-by-step-guide-to-master-nlp-syntactic-analysis/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Why Are We Interested in Syntatic Strucure?"}, {"url": "https://www.analyticsvidhya.com/blog/2020/07/part-of-speechpos-tagging-dependency-parsing-and-constituency-parsing-in-nlp/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "What is a Dependency Grammar?"}, {"url": "https://www.analyticsvidhya.com/blog/2019/02/stanfordnlp-nlp-library-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Neural Dependency Parsing"}, {"url": "https://www.analyticsvidhya.com/blog/2019/08/comprehensive-guide-language-model-nlp-python-code/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Introduction to Language Models"}, {"url": "https://www.analyticsvidhya.com/blog/2021/09/what-are-n-grams-and-how-to-implement-them-in-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "N-Gram Language Models"}, {"url": "https://www.analyticsvidhya.com/blog/2020/08/build-a-natural-language-generation-nlg-system-using-pytorch/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Neural Language models"}, {"url": "https://www.analyticsvidhya.com/blog/2019/01/sequence-models-deeplearning/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Why Sequence models?"}, {"url": "https://www.analyticsvidhya.com/blog/2018/03/essentials-of-deep-learning-sequence-to-sequence-modelling-with-attention-part-i/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Usecases of Sequence models"}, {"url": "https://www.analyticsvidhya.com/blog/2022/03/a-brief-overview-of-recurrent-neural-networks-rnn/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Introduction to RNN"}, {"url": "https://www.analyticsvidhya.com/blog/2022/01/tutorial-on-rnn-lstm-gru-with-implementation/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Implement RNN"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/a-visual-guide-to-recurrent-neural-networks/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Shortcomings of RNN"}, {"url": "https://www.analyticsvidhya.com/blog/2017/12/fundamentals-of-deep-learning-introduction-to-lstm/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "What is Long Short Term Memory (LSTM)"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/lstm-for-text-classification/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Implementing LSTM"}, {"url": "https://www.analyticsvidhya.com/blog/2021/07/detecting-fake-news-with-natural-language-processing/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Build Your Own Fake News Classification Model"}, {"url": "https://www.analyticsvidhya.com/blog/2021/03/introduction-to-gated-recurrent-unit-gru/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "What is Gated Recurrent Unit (GRU)?"}, {"url": "https://www.analyticsvidhya.com/blog/2018/04/a-comprehensive-guide-to-understand-and-implement-text-classification-in-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Implementing GRU"}, {"url": "https://www.analyticsvidhya.com/blog/2019/01/neural-machine-translation-keras/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Introduction to Machine Translation"}, {"url": "https://www.analyticsvidhya.com/blog/2020/01/3-important-nlp-libraries-indian-languages-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Multilingualism in NLP"}, {"url": "https://www.analyticsvidhya.com/blog/2020/08/a-simple-introduction-to-sequence-to-sequence-models/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Drawbacks of Seq2Seq model"}, {"url": "https://www.analyticsvidhya.com/blog/2019/11/comprehensive-guide-attention-mechanism-deep-learning/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Mathematical Calculation of Attention"}, {"url": "https://www.analyticsvidhya.com/blog/2021/09/an-explanatory-guide-to-bert-tokenizer/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Understand Positional Encoding"}, {"url": "https://www.analyticsvidhya.com/blog/2019/06/understanding-transformers-nlp-state-of-the-art-models/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Introducing Transformers Model"}, {"url": "https://www.analyticsvidhya.com/blog/2021/01/implementation-of-attention-mechanism-for-caption-generation-on-transformers-using-tensorflow/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Key Query Value Attention in Tranformer Encoder"}, {"url": "https://www.analyticsvidhya.com/blog/2019/03/pretrained-models-get-started-nlp/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Pretrained Language Models in NLP"}, {"url": "https://www.analyticsvidhya.com/blog/2021/09/building-a-machine-learning-model-for-title-generation/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Generative Pre-training (GPT) for Natural Language Understanding(NLU)"}, {"url": "https://www.analyticsvidhya.com/blog/2019/07/openai-gpt2-text-generator-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Finetuning GPT-2"}, {"url": "https://www.analyticsvidhya.com/blog/2019/09/demystifying-bert-groundbreaking-nlp-framework/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Understanding BERT"}, {"url": "https://www.analyticsvidhya.com/blog/2021/12/fine-tune-bert-model-for-sentiment-analysis-in-google-colab/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Finetune Masked language Modeling in BERT"}, {"url": "https://www.analyticsvidhya.com/blog/2020/07/transfer-learning-for-nlp-fine-tuning-bert-for-text-classification/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Implement Text Classification using BERT"}, {"url": "https://www.analyticsvidhya.com/blog/2022/06/fine-tune-bert-model-for-named-entity-recognition-in-google-colab/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Finetuning BERT for NER"}, {"url": "https://www.analyticsvidhya.com/blog/2022/10/albert-model-for-self-supervised-learning/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Extensions of BERT: Roberta, Spanbert, ALBER"}, {"url": "https://www.analyticsvidhya.com/blog/2020/07/mobilebert/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "MobileBERT"}, {"url": "https://www.analyticsvidhya.com/blog/2021/05/hands-on-experience-with-gpt3/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "GPT-3"}, {"url": "https://www.analyticsvidhya.com/blog/2022/05/prompt-engineering-in-gpt-3/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Prompt Engineering in GPT-3"}, {"url": "https://www.analyticsvidhya.com/blog/2022/11/an-introduction-to-bigbird/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Bigbird"}, {"url": "https://www.analyticsvidhya.com/blog/2020/03/6-pretrained-models-text-classification/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "T5 and large language models"}, {"url": "https://www.analyticsvidhya.com/blog/2021/11/end-to-end-question-answering-system-using-nlp-and-squad-dataset/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Implement Question Answering on SQUAD"}, {"url": "https://www.analyticsvidhya.com/blog/2019/06/comprehensive-guide-text-summarization-using-deep-learning-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Text Summarization"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/nlp-application-named-entity-recognition-ner-in-python-with-spacy/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "A Beginner\u00e2\u20ac\u2122s Introduction to NER (Named Entity Recognition)"}, {"url": "https://www.analyticsvidhya.com/blog/2021/07/new-anaphora-and-co-reference-resolution-technique-for-biographies/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Coreference Resolution"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/visualizing-sounds-librosa/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Visualizing Sounds Using Librosa Machine Learning Library!"}, {"url": "https://www.analyticsvidhya.com/blog/2017/08/audio-voice-processing-deep-learning/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Audio Processing"}, {"url": "https://www.analyticsvidhya.com/blog/2022/01/analysis-of-zero-crossing-rates-of-different-music-genre-tracks/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Audio Analysis"}, {"url": "https://www.analyticsvidhya.com/blog/2020/01/how-to-perform-automatic-music-generation/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Audio Classification using Deep Learning"}, {"url": "https://www.analyticsvidhya.com/blog/2021/01/introduction-to-automatic-speech-recognition-and-natural-language-processing/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Automatic Speech Recognition"}, {"url": "https://www.analyticsvidhya.com/blog/2019/07/learn-build-first-speech-to-text-model-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Implement Automatic Speech Recognition"}, {"url": "https://www.analyticsvidhya.com/blog/2022/09/can-voice-conversion-improve-asr-in-low-resource-settings/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Underlying Engineering Behind Alexa\u00e2\u20ac\u2122s Contextual ASR"}, {"url": "https://www.analyticsvidhya.com/blog/2021/08/speech-separation-by-facebook-ai-research/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Audio Separation"}, {"url": "https://www.analyticsvidhya.com/blog/2021/12/creating-chatbot-building-using-python/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Building Chatbots"}, {"url": "https://www.analyticsvidhya.com/blog/2019/04/learn-build-chatbot-rasa-nlp-ipl/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Building Chatbots using Rasa"}, {"url": "https://www.analyticsvidhya.com/blog/2021/04/automate-nlp-tasks-using-evalml-library/?utm_source=reading_list&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Automate NLP Tasks using EvalML Library"}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=RelatedArticles&utm_medium=blog", "anchor_text": "Become a full stack data scientist"}, {"url": "https://www.analyticsvidhya.com/blog/2022/12/top-10-blogs-on-nlp-in-analytics-vidhya-2022/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Top 10 blogs on NLP in Analytics Vidhya 2022"}, {"url": "https://www.analyticsvidhya.com/blog/2020/12/understanding-text-classification-in-nlp-with-movie-review-example-example/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Understanding text classification in NLP with Movie Review Example Example"}, {"url": "https://www.analyticsvidhya.com/blog/2020/07/build-text-categorization-model-with-spark-nlp/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Build Text Categorization Model with Spark NLP"}, {"url": "https://www.analyticsvidhya.com/blog/2021/05/top-8-python-libraries-for-natural-language-processing-nlp-in-2021/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Top 8 Python Libraries For Natural Language Processing (NLP) in 2021"}, {"url": "https://www.analyticsvidhya.com/blog/2023/03/name-based-gender-identification-using-nlp-and-python/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Name Based Gender Identification Using NLP and Python"}, {"url": "https://www.analyticsvidhya.com/blog/2022/01/master-natural-language-processing-in-2022-with-best-resources/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/", "anchor_text": "Master Natural Language Processing in 2022 with Best Resources"}, {"url": "https://www.analyticsvidhya.com/blog/author/pjoshi15/", "anchor_text": "Prateek Joshi"}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/rahul105/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/sion/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/chirag676/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/barney6/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/arnab1408/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/prateekmaj21/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/shanthababu/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/creators/?utm-medium=blog-footer&utm_source=top-authors", "anchor_text": "view more"}, {"url": "https://play.google.com/store/apps/details?id=com.analyticsvidhya.android", "anchor_text": ""}, {"url": "https://apps.apple.com/us/app/analytics-vidhya/id1470025572", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/2019/04/introduction-deep-q-learning-python/", "anchor_text": "A Hands-On Introduction to Deep Q-Learning using OpenAI Gym in Python"}, {"url": "https://www.analyticsvidhya.com/blog/2019/04/datahack-radio-exploring-computer-vision-data-engineering-podcast-dat-tran/", "anchor_text": "DataHack Radio #22: Exploring Computer Vision and Data Engineering with Dat Tran"}, {"url": "https://www.analyticsvidhya.com/blog/2019/04/predicting-movie-genres-nlp-multi-label-classification/#respond", "anchor_text": "Cancel reply"}, {"url": "https://www.analyticsvidhya.com/blog/2023/04/how-to-make-money-with-chatgpt/", "anchor_text": "Make Money While Sleeping: Side Hustles to Generate Passive Income.."}, {"url": "https://www.analyticsvidhya.com/blog/author/aayush1/", "anchor_text": "Aayush Tyagi -"}, {"url": "https://www.analyticsvidhya.com/blog/2023/04/google-bard-learnt-bengali-on-its-own-sundar-pichai/", "anchor_text": "Google Bard Learnt Bengali on Its Own: Sundar Pichai"}, {"url": "https://www.analyticsvidhya.com/blog/author/yana_khare/", "anchor_text": "Yana Khare -"}, {"url": "https://www.analyticsvidhya.com/blog/2023/04/freedomgpt-personal-bold-and-uncensored-chatbot-running-locally-on-your-pc/", "anchor_text": "FreedomGPT: Personal, Bold and Uncensored Chatbot Running Locally on Your.."}, {"url": "https://www.analyticsvidhya.com/blog/author/sabreena/", "anchor_text": "K.sabreena -"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/understanding-random-forest/", "anchor_text": "Understand Random Forest Algorithms With Examples (Updated 2023)"}, {"url": "https://www.analyticsvidhya.com/blog/author/sruthi94/", "anchor_text": "Sruthi E R -"}, {"url": "https://www.analyticsvidhya.com/", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.analyticsvidhya.android", "anchor_text": ""}, {"url": "https://apps.apple.com/us/app/analytics-vidhya/id1470025572", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/about/", "anchor_text": "About Us"}, {"url": "https://www.analyticsvidhya.com/team/", "anchor_text": "Our Team"}, {"url": "https://www.analyticsvidhya.com/careers/", "anchor_text": "Careers"}, {"url": "https://www.analyticsvidhya.com/contact/", "anchor_text": "Contact us"}, {"url": "https://www.analyticsvidhya.com/blog/", "anchor_text": "Blog"}, {"url": "https://datahack.analyticsvidhya.com/", "anchor_text": "Hackathon"}, {"url": "https://discuss.analyticsvidhya.com/", "anchor_text": "Discussions"}, {"url": "https://jobsnew.analyticsvidhya.com/", "anchor_text": "Apply Jobs"}, {"url": "https://www.analyticsvidhya.com/corporate/", "anchor_text": "Post Jobs"}, {"url": "https://courses.analyticsvidhya.com/", "anchor_text": "Trainings"}, {"url": "https://datahack.analyticsvidhya.com/", "anchor_text": "Hiring Hackathons"}, {"url": "https://www.analyticsvidhya.com/contact/", "anchor_text": "Advertising"}, {"url": "https://www.facebook.com/AnalyticsVidhya/", "anchor_text": ""}, {"url": "https://www.linkedin.com/company/analytics-vidhya/", "anchor_text": ""}, {"url": "https://www.youtube.com/channel/UCH6gDteHtH4hg3o2343iObA", "anchor_text": ""}, {"url": "https://twitter.com/analyticsvidhya", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/privacy-policy/", "anchor_text": "Privacy Policy"}, {"url": "https://www.analyticsvidhya.com/terms/", "anchor_text": "Terms of Use"}, {"url": "https://www.analyticsvidhya.com/refund-policy/", "anchor_text": "Refund Policy"}, {"url": "https://www.analyticsvidhya.com/terms", "anchor_text": "I accept the Terms and Conditions"}, {"url": "https://www.analyticsvidhya.com/terms", "anchor_text": "I accept the Terms and Conditions"}, {"url": "https://www.analyticsvidhya.com/terms", "anchor_text": "I accept the Terms and Conditions"}, {"url": "https://www.analyticsvidhya.com/privacy-policy/", "anchor_text": "Privacy Policy"}, {"url": "https://www.analyticsvidhya.com/terms/", "anchor_text": "Terms of Use"}]}, "scrape_status": {"code": "1"}}