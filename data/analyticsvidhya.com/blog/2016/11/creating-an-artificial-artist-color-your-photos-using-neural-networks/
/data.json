{"url": "https://www.analyticsvidhya.com/blog/2016/11/creating-an-artificial-artist-color-your-photos-using-neural-networks/\n", "time": 1683020675.784598, "path": "analyticsvidhya.com/blog/2016/11/creating-an-artificial-artist-color-your-photos-using-neural-networks/\n/", "webpage": {"metadata": {"title": "Neural Art | AI Generated Art | Neural network Painting", "h1": "Creating an artificial artist: Color your photos using Neural Networks", "description": "Introduction to neural art. In this article you will learn neural network painting and creating colorful images with AI generated art using Theano & keras."}, "outgoing_paragraph_urls": [{"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/neural-art-1.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/blog/2016/03/introduction-deep-learning-fundamentals-neural-networks/", "anchor_text": "this article", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Broyden%E2%80%93Fletcher%E2%80%93Goldfarb%E2%80%93Shanno_algorithm", "anchor_text": "this article", "paragraph_index": 5}, {"url": "http://mashable.com/2012/11/12/fake-image-india-diwali-space/#GRFylOP48kqs", "anchor_text": "\u201cIndia on Diwali night\u201d", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/reference_image.jpg", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/base_image.jpg", "anchor_text": "", "paragraph_index": 5}, {"url": "https://keras.io/#installation", "anchor_text": "Keras", "paragraph_index": 5}, {"url": "https://keras.io/#switching-from-tensorflow-to-theano", "anchor_text": "here", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/1.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/2.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/3.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/4.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/5.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://discuss.analyticsvidhya.com/t/pre-trained-deep-learning/11003", "anchor_text": "this discussion", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/6.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/7.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/8.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/9.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/10.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/11.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/12.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/13.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/14.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/15.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/17.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/at_iteration_0.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://github.com/faizankshaikh/Random_Projects/tree/master/keras_NeuralStyle", "anchor_text": "here", "paragraph_index": 5}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "this implementation", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_mask_face.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_mask_face_inv.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/okeffe_red_canna.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/okeffe_iris.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270.jpg", "anchor_text": "", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_output.png", "anchor_text": "", "paragraph_index": 5}, {"url": "https://github.com/jcjohnson", "anchor_text": "Neural Art implementation using Torch", "paragraph_index": 5}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "Neural Art implementation in Tensorflow", "paragraph_index": 5}, {"url": "https://github.com/titu1994/Neural-Style-Transfer", "anchor_text": "Another noteworthy Neural Art implementation in Keras", "paragraph_index": 5}, {"url": "https://twitter.com/deepforger?lang=en", "anchor_text": "Deep Forger: A twitter bot that generates Neural Art on demand", "paragraph_index": 5}, {"url": "https://github.com/mbartoli/neural-animation", "anchor_text": "Neural Art on Videos", "paragraph_index": 5}, {"url": "https://deepart.io/", "anchor_text": "DEEPART.io: A webapp for Neural Art", "paragraph_index": 5}, {"url": "http://prisma-ai.com/", "anchor_text": "Prisma-ai: A mobile app for Neural Art", "paragraph_index": 5}, {"url": "https://arxiv.org/abs/1508.06576", "anchor_text": "Neural Artistic Style research paper", "paragraph_index": 5}, {"url": "https://github.com/fchollet/keras/blob/master/examples/neural_style_transfer.py", "anchor_text": "Keras Neural Style", "paragraph_index": 5}, {"url": "https://datahack.analyticsvidhya.com/contest/practice-problem-identify-the-digits/", "anchor_text": "Identify the Digits", "paragraph_index": 5}, {"url": "http://datahack.analyticsvidhya.com/contest/all", "anchor_text": "Live Competitions", "paragraph_index": 5}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/neural-art-1.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/blog/2016/03/introduction-deep-learning-fundamentals-neural-networks/", "anchor_text": "this article", "paragraph_index": 8}, {"url": "https://en.wikipedia.org/wiki/Broyden%E2%80%93Fletcher%E2%80%93Goldfarb%E2%80%93Shanno_algorithm", "anchor_text": "this article", "paragraph_index": 8}, {"url": "http://mashable.com/2012/11/12/fake-image-india-diwali-space/#GRFylOP48kqs", "anchor_text": "\u201cIndia on Diwali night\u201d", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/reference_image.jpg", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/base_image.jpg", "anchor_text": "", "paragraph_index": 8}, {"url": "https://keras.io/#installation", "anchor_text": "Keras", "paragraph_index": 8}, {"url": "https://keras.io/#switching-from-tensorflow-to-theano", "anchor_text": "here", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/1.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/2.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/3.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/4.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/5.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://discuss.analyticsvidhya.com/t/pre-trained-deep-learning/11003", "anchor_text": "this discussion", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/6.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/7.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/8.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/9.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/10.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/11.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/12.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/13.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/14.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/15.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/17.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/at_iteration_0.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://github.com/faizankshaikh/Random_Projects/tree/master/keras_NeuralStyle", "anchor_text": "here", "paragraph_index": 8}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "this implementation", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_mask_face.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_mask_face_inv.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/okeffe_red_canna.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/okeffe_iris.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270.jpg", "anchor_text": "", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_output.png", "anchor_text": "", "paragraph_index": 8}, {"url": "https://github.com/jcjohnson", "anchor_text": "Neural Art implementation using Torch", "paragraph_index": 8}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "Neural Art implementation in Tensorflow", "paragraph_index": 8}, {"url": "https://github.com/titu1994/Neural-Style-Transfer", "anchor_text": "Another noteworthy Neural Art implementation in Keras", "paragraph_index": 8}, {"url": "https://twitter.com/deepforger?lang=en", "anchor_text": "Deep Forger: A twitter bot that generates Neural Art on demand", "paragraph_index": 8}, {"url": "https://github.com/mbartoli/neural-animation", "anchor_text": "Neural Art on Videos", "paragraph_index": 8}, {"url": "https://deepart.io/", "anchor_text": "DEEPART.io: A webapp for Neural Art", "paragraph_index": 8}, {"url": "http://prisma-ai.com/", "anchor_text": "Prisma-ai: A mobile app for Neural Art", "paragraph_index": 8}, {"url": "https://arxiv.org/abs/1508.06576", "anchor_text": "Neural Artistic Style research paper", "paragraph_index": 8}, {"url": "https://github.com/fchollet/keras/blob/master/examples/neural_style_transfer.py", "anchor_text": "Keras Neural Style", "paragraph_index": 8}, {"url": "https://datahack.analyticsvidhya.com/contest/practice-problem-identify-the-digits/", "anchor_text": "Identify the Digits", "paragraph_index": 8}, {"url": "http://datahack.analyticsvidhya.com/contest/all", "anchor_text": "Live Competitions", "paragraph_index": 8}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/neural-art-1.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/blog/2016/03/introduction-deep-learning-fundamentals-neural-networks/", "anchor_text": "this article", "paragraph_index": 12}, {"url": "https://en.wikipedia.org/wiki/Broyden%E2%80%93Fletcher%E2%80%93Goldfarb%E2%80%93Shanno_algorithm", "anchor_text": "this article", "paragraph_index": 12}, {"url": "http://mashable.com/2012/11/12/fake-image-india-diwali-space/#GRFylOP48kqs", "anchor_text": "\u201cIndia on Diwali night\u201d", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/reference_image.jpg", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/base_image.jpg", "anchor_text": "", "paragraph_index": 12}, {"url": "https://keras.io/#installation", "anchor_text": "Keras", "paragraph_index": 12}, {"url": "https://keras.io/#switching-from-tensorflow-to-theano", "anchor_text": "here", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/1.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/2.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/3.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/4.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/5.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://discuss.analyticsvidhya.com/t/pre-trained-deep-learning/11003", "anchor_text": "this discussion", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/6.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/7.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/8.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/9.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/10.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/11.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/12.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/13.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/14.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/15.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/17.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/at_iteration_0.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://github.com/faizankshaikh/Random_Projects/tree/master/keras_NeuralStyle", "anchor_text": "here", "paragraph_index": 12}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "this implementation", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_mask_face.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_mask_face_inv.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/okeffe_red_canna.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/okeffe_iris.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270.jpg", "anchor_text": "", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_output.png", "anchor_text": "", "paragraph_index": 12}, {"url": "https://github.com/jcjohnson", "anchor_text": "Neural Art implementation using Torch", "paragraph_index": 12}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "Neural Art implementation in Tensorflow", "paragraph_index": 12}, {"url": "https://github.com/titu1994/Neural-Style-Transfer", "anchor_text": "Another noteworthy Neural Art implementation in Keras", "paragraph_index": 12}, {"url": "https://twitter.com/deepforger?lang=en", "anchor_text": "Deep Forger: A twitter bot that generates Neural Art on demand", "paragraph_index": 12}, {"url": "https://github.com/mbartoli/neural-animation", "anchor_text": "Neural Art on Videos", "paragraph_index": 12}, {"url": "https://deepart.io/", "anchor_text": "DEEPART.io: A webapp for Neural Art", "paragraph_index": 12}, {"url": "http://prisma-ai.com/", "anchor_text": "Prisma-ai: A mobile app for Neural Art", "paragraph_index": 12}, {"url": "https://arxiv.org/abs/1508.06576", "anchor_text": "Neural Artistic Style research paper", "paragraph_index": 12}, {"url": "https://github.com/fchollet/keras/blob/master/examples/neural_style_transfer.py", "anchor_text": "Keras Neural Style", "paragraph_index": 12}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/neural-art-1.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/blog/2016/03/introduction-deep-learning-fundamentals-neural-networks/", "anchor_text": "this article", "paragraph_index": 15}, {"url": "https://en.wikipedia.org/wiki/Broyden%E2%80%93Fletcher%E2%80%93Goldfarb%E2%80%93Shanno_algorithm", "anchor_text": "this article", "paragraph_index": 15}, {"url": "http://mashable.com/2012/11/12/fake-image-india-diwali-space/#GRFylOP48kqs", "anchor_text": "\u201cIndia on Diwali night\u201d", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/reference_image.jpg", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/base_image.jpg", "anchor_text": "", "paragraph_index": 15}, {"url": "https://keras.io/#installation", "anchor_text": "Keras", "paragraph_index": 15}, {"url": "https://keras.io/#switching-from-tensorflow-to-theano", "anchor_text": "here", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/1.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/2.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/3.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/4.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/5.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://discuss.analyticsvidhya.com/t/pre-trained-deep-learning/11003", "anchor_text": "this discussion", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/6.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/7.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/8.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/9.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/10.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/11.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/12.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/13.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/14.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/15.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/17.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/at_iteration_0.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://github.com/faizankshaikh/Random_Projects/tree/master/keras_NeuralStyle", "anchor_text": "here", "paragraph_index": 15}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "this implementation", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_mask_face.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_mask_face_inv.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/okeffe_red_canna.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/okeffe_iris.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270.jpg", "anchor_text": "", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_output.png", "anchor_text": "", "paragraph_index": 15}, {"url": "https://github.com/jcjohnson", "anchor_text": "Neural Art implementation using Torch", "paragraph_index": 15}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "Neural Art implementation in Tensorflow", "paragraph_index": 15}, {"url": "https://github.com/titu1994/Neural-Style-Transfer", "anchor_text": "Another noteworthy Neural Art implementation in Keras", "paragraph_index": 15}, {"url": "https://twitter.com/deepforger?lang=en", "anchor_text": "Deep Forger: A twitter bot that generates Neural Art on demand", "paragraph_index": 15}, {"url": "https://github.com/mbartoli/neural-animation", "anchor_text": "Neural Art on Videos", "paragraph_index": 15}, {"url": "https://deepart.io/", "anchor_text": "DEEPART.io: A webapp for Neural Art", "paragraph_index": 15}, {"url": "http://prisma-ai.com/", "anchor_text": "Prisma-ai: A mobile app for Neural Art", "paragraph_index": 15}, {"url": "https://arxiv.org/abs/1508.06576", "anchor_text": "Neural Artistic Style research paper", "paragraph_index": 15}, {"url": "https://github.com/fchollet/keras/blob/master/examples/neural_style_transfer.py", "anchor_text": "Keras Neural Style", "paragraph_index": 15}, {"url": "https://www.analyticsvidhya.com/blog/2016/03/introduction-deep-learning-fundamentals-neural-networks/", "anchor_text": "this article", "paragraph_index": 18}, {"url": "http://mashable.com/2012/11/12/fake-image-india-diwali-space/#GRFylOP48kqs", "anchor_text": "\u201cIndia on Diwali night\u201d", "paragraph_index": 20}, {"url": "https://keras.io/#installation", "anchor_text": "Keras", "paragraph_index": 21}, {"url": "https://keras.io/#switching-from-tensorflow-to-theano", "anchor_text": "here", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/1.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/2.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/3.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/4.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/5.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://discuss.analyticsvidhya.com/t/pre-trained-deep-learning/11003", "anchor_text": "this discussion", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/6.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/7.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/8.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/9.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/10.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/11.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/12.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/13.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/14.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/15.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/17.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/at_iteration_0.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://github.com/faizankshaikh/Random_Projects/tree/master/keras_NeuralStyle", "anchor_text": "here", "paragraph_index": 21}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "this implementation", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_mask_face.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_mask_face_inv.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/okeffe_red_canna.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/okeffe_iris.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270.jpg", "anchor_text": "", "paragraph_index": 21}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_output.png", "anchor_text": "", "paragraph_index": 21}, {"url": "https://github.com/jcjohnson", "anchor_text": "Neural Art implementation using Torch", "paragraph_index": 21}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "Neural Art implementation in Tensorflow", "paragraph_index": 21}, {"url": "https://github.com/titu1994/Neural-Style-Transfer", "anchor_text": "Another noteworthy Neural Art implementation in Keras", "paragraph_index": 21}, {"url": "https://twitter.com/deepforger?lang=en", "anchor_text": "Deep Forger: A twitter bot that generates Neural Art on demand", "paragraph_index": 21}, {"url": "https://github.com/mbartoli/neural-animation", "anchor_text": "Neural Art on Videos", "paragraph_index": 21}, {"url": "https://deepart.io/", "anchor_text": "DEEPART.io: A webapp for Neural Art", "paragraph_index": 21}, {"url": "http://prisma-ai.com/", "anchor_text": "Prisma-ai: A mobile app for Neural Art", "paragraph_index": 21}, {"url": "https://arxiv.org/abs/1508.06576", "anchor_text": "Neural Artistic Style research paper", "paragraph_index": 21}, {"url": "https://github.com/fchollet/keras/blob/master/examples/neural_style_transfer.py", "anchor_text": "Keras Neural Style", "paragraph_index": 21}, {"url": "https://keras.io/#installation", "anchor_text": "Keras", "paragraph_index": 23}, {"url": "https://keras.io/#switching-from-tensorflow-to-theano", "anchor_text": "here", "paragraph_index": 23}, {"url": "https://github.com/faizankshaikh/Random_Projects/tree/master/keras_NeuralStyle", "anchor_text": "here", "paragraph_index": 26}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "this implementation", "paragraph_index": 27}, {"url": "https://datahack.analyticsvidhya.com/contest/practice-problem-identify-the-digits/", "anchor_text": "Identify the Digits", "paragraph_index": 32}], "all_paragraphs": ["Art has always transcended eons of human existence. We can see its traces from pre-historic time as the Harappan art in the Indus Valley Civilization to the contemporary art in modern times. Mostly, art has been a means to express one\u2019s creativity, viewpoints of how we perceive the world. As legendary Leonardo Da Vinci has said,", "\u201cPainting is poetry that is seen rather than felt\u201d.", "What we sometimes forget that most of the art follows a pattern. A pattern that pleases us and makes sense in our brain. The next time you see a painting, try to notice the brush strokes in it. You will see a pattern arising out of the painting. We as humans are skilled in recognising these patterns. Our neural mechanisms has developed to be exceptionally great over the years recognising patterns in the wild.", "Now you may ask why I am ranting away about art and patterns? This is because I will show you how to create art with the help of artificial brains! In this article, we will build an artificial neural network which will extract style from one image and replicate it on the other. So are you ready?", "Let\u2019s try to understand this topic with an example.", "Source [1]\nThe above image is the famous \u201cThe Starry Night\u201d by Vincent Van Gogh. Just look at the painting for a few minutes. What do you see? Do you notice the bush strokes? Do you see the curves and edges that define each and every object which makes it so easy for you to recognise them?\nNow let\u2019s do a quick assignment. Try to remember the patterns you see. Just cram your brain with every little detail. Done? Ok now take a look at the next image.\n\nSource [2]\nThis is a photograph taken of a town called \u201cTubingen\u201d located in Germany. For the next step of the assignment, just close your eyes and try to replicate the style of a\u00a0starry night with this image. Ask yourself, if you are Van Gogh (hypothetically of course!) and are asked to draw this photograph keeping in mind the styles you memorized before, how would you do it?\nThink\n.\n.\n.\n.\nDid you do it? Great! You just made a neural art!\n.\n.\n.\nWant to see what an artificial neural network can do?\n\nSource [2]\nYou may ask how did a machine accomplish such a task. It\u2019s simple once you get the gist of it!\nWhat neural network does is, it tries to extract the \u201cimportant points\u201d from the both the images, that is it tries to recognize which attributes define the picture and learns from it. These learned attributes are an internal representation of the neural network, which can be seen as below.\nSource [2]\nSo you got to know the theoretical concepts involved in neural art, now let\u2019s get to know the practical aspects of implementing it.\n\u00a0\nGetting into the brain of artificial artist:\nNeural Art works in the following way:\n\nWe first define the loss functions necessary to generate our result, namely the style loss, content loss and the total variational loss\nWe define our optimization function, i.e. back propagation algorithm. Here we use L-BFGS because it\u2019s faster and more efficient for smaller data.\nThen we set our style and content attributes of our model\nThen we pass an image to our model (preferably our base image) and optimize it to minimize all the losses we defined above.\n\nWe will get to know some of the important points you ought to know before we jump in. While most of the fundamentals of Neural Networks are covered in this article, I will reiterate some of them and explain a few extra things.\n\nWhat is a loss function? Loss function is a function that calculates the difference of the predicted values from the original values. It essentially says how much error has occurred in a\u00a0calculation. In any machine learning algorithm, loss function is used to estimate how the model performs on data. This is especially helpful in case of neural networks, where you iteratively try to make your model perform better. When implementing neural art, you have to keep check of three loss functions, namely:\n\nContent loss, i.e. the difference between \u201ccontent\u201d of resulting image and base image. This is done to ensure that your model does not get much deviated from the base image\nStyle loss, i.e. the difference between \u201cstyle\u201d of resulting image and base image. To do this, you have to first calculate gram matrix of both the images and then find their difference. Gram matrix is nothing but finding covariance of an image with itself. This is done to maintain style in the resulting image.\nTotal Validation loss, i.e. the difference between a pixel of resulting image with its neighbouring pixel. This is done so that the image remains visually coherent.\n\n\n\n\nWhat is an optimization function? When we have calculated the loss function, we try to minimize our losses by changing parameters. Optimization function helps us find out how much change is required so that our model is better \u201coptimized\u201d. Here we implement a method of optimization called Broyden\u2013Fletcher\u2013Goldfarb\u2013Shanno algorithm (BFGS). BFGS is a variant of gradient descent algorithm in which you do a second order differentiation to find the local minimum. Read this article to get a mathematical perspective of the algorithm.\n\nNow that we\u2019ve understood what our flow will be to build a neural art, let\u2019s get down and start hacking stuff!\n\u00a0\nCoding it up!\nThis Diwali was an interesting one for me. I decided to do some research on neural art and how India illuminates during the Diwali day. I came across this image \u00a0\u201cIndia on Diwali night\u201d. And I thought of creating something similar on the same lines. To do that, we will be combining the two images below with the help of neural art.\n \nSource [3]\nSo first we will first set the groundworks.\nStep 0: Install Keras and its dependencies . For this, we will be using a Theano backend. Change your backend by following the steps mentioned here. Also additionally you have to set the proper ordering for image. In the keras.json file, where you have changed the backend, replace image_dim_ordering with \u2018tr\u2019. So it should look like this,\n\"image_dim_ordering\": \"th\"\nStep 1: Then go to your working directory and set your directory structure as below\n|-- keras_NeuralStyle                 # this is your working directory\r\n|\u00a0\u00a0 |-- base_image.jpg                # this is your base image\r\n|\u00a0\u00a0 |-- reference_image.jpg           # this is your reference image\nStep 2:\u00a0 Start a jupyter notebook in your working directory by typing jupyter notebook and implement the following code. I will just provide you a step by step overview of what each block does.\n\nFirst, you have to import all the modules necessary to implement the code\n\n\n\nThen set the paths of the images you want to carry out the project on.\n\n\n\nDefine the necessary variables and give them values as below. Note that these values can be changed but that may change the output drastically. Also, make sure the value of img_nrows variable is same as img_ncols. This is necessary for gram matrix to work.\n\n\n\u00a0\n\nThen we define a helper functions. These are responsible for handling image preprocessing.\n\n\n\u00a0\n\nCreate input placeholders to pass images to the model\n\n\n\u00a0\n\nLoad a pre-trained neural network model (If you don\u2019t know what pre-training is, go through this discussion)\n\n\n\u00a0\n\nPrint the model summary to see what the model is\n\n\n\u00a0\n\nStore the names of all the layers of the neural network as a dictionary along with their outputs\n\n\n\u00a0\n\nAs defined above, we set the loss functions\n\n\n\u00a0\n\nWe then set the content and style attributes \u2026\n\n \n\u00a0\n\nAnd set the gradients and final output function for neural art\n\n \n\u00a0\n\nWe define the functions to calculate loss and gradients\n\n \n\u00a0\n\nNow we take the base image as input and iterate through it to get our final image. On my local machine, it takes a minute to get the output in one iteration. Based on your resources (and patience) it would take at most 5 minutes to get the output. You can also increase the number of iterations to more optimize the result.\n\n\n\nAnd after a long wait, we will get this beautiful image!\n\n\u00a0\n\nNOTE: The code file can be viewed on github here.\n\u00a0\nWhere to go from here?\nWe have seen a small demo of a significant discovery in the art world. There have been many modifications done to this method to make it aesthetically pleasing. For example, I really like this implementation in which they have taken different styles and applied them to different regions.\n  \nThe first two images are the masks, which help to set which part should be stylized. The next two images represent the styles to be used. The last image is the base image that has to be stylized.\nBelow is the output that is generated by neural art.\n\nLooks awesome, doesn\u2019t it? I am sure like me, you are also fascinated to try your hands on neural art. To help you get started with it, I have covered the basics of neural art and how can you create your first image. I am sure you are eager to explore more and hence I am adding some additional resources only for you.\n\u00a0\nAdditional Resources\nThese are some of the best resources I have come across on neural art. Go ahead and enter the fascinating world of neural art.\n\nNeural Art implementation using Torch\nNeural Art implementation in Tensorflow\nAnother noteworthy Neural Art implementation in Keras\nDeep Forger: A twitter bot that generates Neural Art on demand\nNeural Art on Videos\nDEEPART.io: A webapp for Neural Art\nPrisma-ai: A mobile app for Neural Art\n\n\u00a0\nReferences\n\nNeural Artistic Style research paper\nKeras Neural Style by Fran\u00e7ois Chollet\n\n\u00a0\nImage Sources\n[1] https://www.wikiart.org/en/vincent-van-gogh/the-starry-night-1889\n[2] https://arxiv.org/abs/1508.06576\n[3] Google\n\u00a0\nEnd Notes\nI hope you found this article inspiring. Now, it\u2019s time for you to go through it and make art yourself! If you create an art do share it with the community. If you have any doubts, I\u2019d love to interact with you in comments. And to gain expertise in working in neural network don\u2019t forget to try out our deep learning practice problem \u2013\u00a0Identify the Digits.\nYou can\u00a0test your skills and knowledge.\u00a0Check out\u00a0Live\u00a0Competitions\u00a0and compete with best\u00a0Data Scientists from all over the world.\n\nRelated\n ", "The above image is the famous \u201cThe Starry Night\u201d by Vincent Van Gogh. Just look at the painting for a few minutes. What do you see? Do you notice the bush strokes? Do you see the curves and edges that define each and every object which makes it so easy for you to recognise them?", "Now let\u2019s do a quick assignment. Try to remember the patterns you see. Just cram your brain with every little detail. Done? Ok now take a look at the next image.", "Source [2]\nThis is a photograph taken of a town called \u201cTubingen\u201d located in Germany. For the next step of the assignment, just close your eyes and try to replicate the style of a\u00a0starry night with this image. Ask yourself, if you are Van Gogh (hypothetically of course!) and are asked to draw this photograph keeping in mind the styles you memorized before, how would you do it?\nThink\n.\n.\n.\n.\nDid you do it? Great! You just made a neural art!\n.\n.\n.\nWant to see what an artificial neural network can do?\n\nSource [2]\nYou may ask how did a machine accomplish such a task. It\u2019s simple once you get the gist of it!\nWhat neural network does is, it tries to extract the \u201cimportant points\u201d from the both the images, that is it tries to recognize which attributes define the picture and learns from it. These learned attributes are an internal representation of the neural network, which can be seen as below.\nSource [2]\nSo you got to know the theoretical concepts involved in neural art, now let\u2019s get to know the practical aspects of implementing it.\n\u00a0\nGetting into the brain of artificial artist:\nNeural Art works in the following way:\n\nWe first define the loss functions necessary to generate our result, namely the style loss, content loss and the total variational loss\nWe define our optimization function, i.e. back propagation algorithm. Here we use L-BFGS because it\u2019s faster and more efficient for smaller data.\nThen we set our style and content attributes of our model\nThen we pass an image to our model (preferably our base image) and optimize it to minimize all the losses we defined above.\n\nWe will get to know some of the important points you ought to know before we jump in. While most of the fundamentals of Neural Networks are covered in this article, I will reiterate some of them and explain a few extra things.\n\nWhat is a loss function? Loss function is a function that calculates the difference of the predicted values from the original values. It essentially says how much error has occurred in a\u00a0calculation. In any machine learning algorithm, loss function is used to estimate how the model performs on data. This is especially helpful in case of neural networks, where you iteratively try to make your model perform better. When implementing neural art, you have to keep check of three loss functions, namely:\n\nContent loss, i.e. the difference between \u201ccontent\u201d of resulting image and base image. This is done to ensure that your model does not get much deviated from the base image\nStyle loss, i.e. the difference between \u201cstyle\u201d of resulting image and base image. To do this, you have to first calculate gram matrix of both the images and then find their difference. Gram matrix is nothing but finding covariance of an image with itself. This is done to maintain style in the resulting image.\nTotal Validation loss, i.e. the difference between a pixel of resulting image with its neighbouring pixel. This is done so that the image remains visually coherent.\n\n\n\n\nWhat is an optimization function? When we have calculated the loss function, we try to minimize our losses by changing parameters. Optimization function helps us find out how much change is required so that our model is better \u201coptimized\u201d. Here we implement a method of optimization called Broyden\u2013Fletcher\u2013Goldfarb\u2013Shanno algorithm (BFGS). BFGS is a variant of gradient descent algorithm in which you do a second order differentiation to find the local minimum. Read this article to get a mathematical perspective of the algorithm.\n\nNow that we\u2019ve understood what our flow will be to build a neural art, let\u2019s get down and start hacking stuff!\n\u00a0\nCoding it up!\nThis Diwali was an interesting one for me. I decided to do some research on neural art and how India illuminates during the Diwali day. I came across this image \u00a0\u201cIndia on Diwali night\u201d. And I thought of creating something similar on the same lines. To do that, we will be combining the two images below with the help of neural art.\n \nSource [3]\nSo first we will first set the groundworks.\nStep 0: Install Keras and its dependencies . For this, we will be using a Theano backend. Change your backend by following the steps mentioned here. Also additionally you have to set the proper ordering for image. In the keras.json file, where you have changed the backend, replace image_dim_ordering with \u2018tr\u2019. So it should look like this,\n\"image_dim_ordering\": \"th\"\nStep 1: Then go to your working directory and set your directory structure as below\n|-- keras_NeuralStyle                 # this is your working directory\r\n|\u00a0\u00a0 |-- base_image.jpg                # this is your base image\r\n|\u00a0\u00a0 |-- reference_image.jpg           # this is your reference image\nStep 2:\u00a0 Start a jupyter notebook in your working directory by typing jupyter notebook and implement the following code. I will just provide you a step by step overview of what each block does.\n\nFirst, you have to import all the modules necessary to implement the code\n\n\n\nThen set the paths of the images you want to carry out the project on.\n\n\n\nDefine the necessary variables and give them values as below. Note that these values can be changed but that may change the output drastically. Also, make sure the value of img_nrows variable is same as img_ncols. This is necessary for gram matrix to work.\n\n\n\u00a0\n\nThen we define a helper functions. These are responsible for handling image preprocessing.\n\n\n\u00a0\n\nCreate input placeholders to pass images to the model\n\n\n\u00a0\n\nLoad a pre-trained neural network model (If you don\u2019t know what pre-training is, go through this discussion)\n\n\n\u00a0\n\nPrint the model summary to see what the model is\n\n\n\u00a0\n\nStore the names of all the layers of the neural network as a dictionary along with their outputs\n\n\n\u00a0\n\nAs defined above, we set the loss functions\n\n\n\u00a0\n\nWe then set the content and style attributes \u2026\n\n \n\u00a0\n\nAnd set the gradients and final output function for neural art\n\n \n\u00a0\n\nWe define the functions to calculate loss and gradients\n\n \n\u00a0\n\nNow we take the base image as input and iterate through it to get our final image. On my local machine, it takes a minute to get the output in one iteration. Based on your resources (and patience) it would take at most 5 minutes to get the output. You can also increase the number of iterations to more optimize the result.\n\n\n\nAnd after a long wait, we will get this beautiful image!\n\n\u00a0\n\nNOTE: The code file can be viewed on github here.\n\u00a0\nWhere to go from here?\nWe have seen a small demo of a significant discovery in the art world. There have been many modifications done to this method to make it aesthetically pleasing. For example, I really like this implementation in which they have taken different styles and applied them to different regions.\n  \nThe first two images are the masks, which help to set which part should be stylized. The next two images represent the styles to be used. The last image is the base image that has to be stylized.\nBelow is the output that is generated by neural art.\n\nLooks awesome, doesn\u2019t it? I am sure like me, you are also fascinated to try your hands on neural art. To help you get started with it, I have covered the basics of neural art and how can you create your first image. I am sure you are eager to explore more and hence I am adding some additional resources only for you.\n\u00a0\nAdditional Resources\nThese are some of the best resources I have come across on neural art. Go ahead and enter the fascinating world of neural art.\n\nNeural Art implementation using Torch\nNeural Art implementation in Tensorflow\nAnother noteworthy Neural Art implementation in Keras\nDeep Forger: A twitter bot that generates Neural Art on demand\nNeural Art on Videos\nDEEPART.io: A webapp for Neural Art\nPrisma-ai: A mobile app for Neural Art\n\n\u00a0\nReferences\n\nNeural Artistic Style research paper\nKeras Neural Style by Fran\u00e7ois Chollet\n\n\u00a0\nImage Sources\n[1] https://www.wikiart.org/en/vincent-van-gogh/the-starry-night-1889\n[2] https://arxiv.org/abs/1508.06576\n[3] Google\n\u00a0\nEnd Notes\nI hope you found this article inspiring. Now, it\u2019s time for you to go through it and make art yourself! If you create an art do share it with the community. If you have any doubts, I\u2019d love to interact with you in comments. And to gain expertise in working in neural network don\u2019t forget to try out our deep learning practice problem \u2013\u00a0Identify the Digits.\nYou can\u00a0test your skills and knowledge.\u00a0Check out\u00a0Live\u00a0Competitions\u00a0and compete with best\u00a0Data Scientists from all over the world.\n\nRelated\n ", "This is a photograph taken of a town called \u201cTubingen\u201d located in Germany. For the next step of the assignment, just close your eyes and try to replicate the style of a\u00a0starry night with this image. Ask yourself, if you are Van Gogh (hypothetically of course!) and are asked to draw this photograph keeping in mind the styles you memorized before, how would you do it?", "Did you do it? Great! You just made a neural art!", "Want to see what an artificial neural network can do?\n", "Source [2]\nYou may ask how did a machine accomplish such a task. It\u2019s simple once you get the gist of it!\nWhat neural network does is, it tries to extract the \u201cimportant points\u201d from the both the images, that is it tries to recognize which attributes define the picture and learns from it. These learned attributes are an internal representation of the neural network, which can be seen as below.\nSource [2]\nSo you got to know the theoretical concepts involved in neural art, now let\u2019s get to know the practical aspects of implementing it.\n\u00a0\nGetting into the brain of artificial artist:\nNeural Art works in the following way:\n\nWe first define the loss functions necessary to generate our result, namely the style loss, content loss and the total variational loss\nWe define our optimization function, i.e. back propagation algorithm. Here we use L-BFGS because it\u2019s faster and more efficient for smaller data.\nThen we set our style and content attributes of our model\nThen we pass an image to our model (preferably our base image) and optimize it to minimize all the losses we defined above.\n\nWe will get to know some of the important points you ought to know before we jump in. While most of the fundamentals of Neural Networks are covered in this article, I will reiterate some of them and explain a few extra things.\n\nWhat is a loss function? Loss function is a function that calculates the difference of the predicted values from the original values. It essentially says how much error has occurred in a\u00a0calculation. In any machine learning algorithm, loss function is used to estimate how the model performs on data. This is especially helpful in case of neural networks, where you iteratively try to make your model perform better. When implementing neural art, you have to keep check of three loss functions, namely:\n\nContent loss, i.e. the difference between \u201ccontent\u201d of resulting image and base image. This is done to ensure that your model does not get much deviated from the base image\nStyle loss, i.e. the difference between \u201cstyle\u201d of resulting image and base image. To do this, you have to first calculate gram matrix of both the images and then find their difference. Gram matrix is nothing but finding covariance of an image with itself. This is done to maintain style in the resulting image.\nTotal Validation loss, i.e. the difference between a pixel of resulting image with its neighbouring pixel. This is done so that the image remains visually coherent.\n\n\n\n\nWhat is an optimization function? When we have calculated the loss function, we try to minimize our losses by changing parameters. Optimization function helps us find out how much change is required so that our model is better \u201coptimized\u201d. Here we implement a method of optimization called Broyden\u2013Fletcher\u2013Goldfarb\u2013Shanno algorithm (BFGS). BFGS is a variant of gradient descent algorithm in which you do a second order differentiation to find the local minimum. Read this article to get a mathematical perspective of the algorithm.\n\nNow that we\u2019ve understood what our flow will be to build a neural art, let\u2019s get down and start hacking stuff!\n\u00a0\nCoding it up!\nThis Diwali was an interesting one for me. I decided to do some research on neural art and how India illuminates during the Diwali day. I came across this image \u00a0\u201cIndia on Diwali night\u201d. And I thought of creating something similar on the same lines. To do that, we will be combining the two images below with the help of neural art.\n \nSource [3]\nSo first we will first set the groundworks.\nStep 0: Install Keras and its dependencies . For this, we will be using a Theano backend. Change your backend by following the steps mentioned here. Also additionally you have to set the proper ordering for image. In the keras.json file, where you have changed the backend, replace image_dim_ordering with \u2018tr\u2019. So it should look like this,\n\"image_dim_ordering\": \"th\"\nStep 1: Then go to your working directory and set your directory structure as below\n|-- keras_NeuralStyle                 # this is your working directory\r\n|\u00a0\u00a0 |-- base_image.jpg                # this is your base image\r\n|\u00a0\u00a0 |-- reference_image.jpg           # this is your reference image\nStep 2:\u00a0 Start a jupyter notebook in your working directory by typing jupyter notebook and implement the following code. I will just provide you a step by step overview of what each block does.\n\nFirst, you have to import all the modules necessary to implement the code\n\n\n\nThen set the paths of the images you want to carry out the project on.\n\n\n\nDefine the necessary variables and give them values as below. Note that these values can be changed but that may change the output drastically. Also, make sure the value of img_nrows variable is same as img_ncols. This is necessary for gram matrix to work.\n\n\n\u00a0\n\nThen we define a helper functions. These are responsible for handling image preprocessing.\n\n\n\u00a0\n\nCreate input placeholders to pass images to the model\n\n\n\u00a0\n\nLoad a pre-trained neural network model (If you don\u2019t know what pre-training is, go through this discussion)\n\n\n\u00a0\n\nPrint the model summary to see what the model is\n\n\n\u00a0\n\nStore the names of all the layers of the neural network as a dictionary along with their outputs\n\n\n\u00a0\n\nAs defined above, we set the loss functions\n\n\n\u00a0\n\nWe then set the content and style attributes \u2026\n\n \n\u00a0\n\nAnd set the gradients and final output function for neural art\n\n \n\u00a0\n\nWe define the functions to calculate loss and gradients\n\n \n\u00a0\n\nNow we take the base image as input and iterate through it to get our final image. On my local machine, it takes a minute to get the output in one iteration. Based on your resources (and patience) it would take at most 5 minutes to get the output. You can also increase the number of iterations to more optimize the result.\n\n\n\nAnd after a long wait, we will get this beautiful image!\n\n\u00a0\n\nNOTE: The code file can be viewed on github here.\n\u00a0\nWhere to go from here?\nWe have seen a small demo of a significant discovery in the art world. There have been many modifications done to this method to make it aesthetically pleasing. For example, I really like this implementation in which they have taken different styles and applied them to different regions.\n  \nThe first two images are the masks, which help to set which part should be stylized. The next two images represent the styles to be used. The last image is the base image that has to be stylized.\nBelow is the output that is generated by neural art.\n\nLooks awesome, doesn\u2019t it? I am sure like me, you are also fascinated to try your hands on neural art. To help you get started with it, I have covered the basics of neural art and how can you create your first image. I am sure you are eager to explore more and hence I am adding some additional resources only for you.\n\u00a0\nAdditional Resources\nThese are some of the best resources I have come across on neural art. Go ahead and enter the fascinating world of neural art.\n\nNeural Art implementation using Torch\nNeural Art implementation in Tensorflow\nAnother noteworthy Neural Art implementation in Keras\nDeep Forger: A twitter bot that generates Neural Art on demand\nNeural Art on Videos\nDEEPART.io: A webapp for Neural Art\nPrisma-ai: A mobile app for Neural Art\n\n\u00a0\nReferences\n\nNeural Artistic Style research paper\nKeras Neural Style by Fran\u00e7ois Chollet\n\n\u00a0\nImage Sources\n[1] https://www.wikiart.org/en/vincent-van-gogh/the-starry-night-1889\n[2] https://arxiv.org/abs/1508.06576\n[3] Google", "You may ask how did a machine accomplish such a task. It\u2019s simple once you get the gist of it!", "What neural network does is, it tries to extract the \u201cimportant points\u201d from the both the images, that is it tries to recognize which attributes define the picture and learns from it. These learned attributes are an internal representation of the neural network, which can be seen as below.", "Source [2]\nSo you got to know the theoretical concepts involved in neural art, now let\u2019s get to know the practical aspects of implementing it.\n\u00a0\nGetting into the brain of artificial artist:\nNeural Art works in the following way:\n\nWe first define the loss functions necessary to generate our result, namely the style loss, content loss and the total variational loss\nWe define our optimization function, i.e. back propagation algorithm. Here we use L-BFGS because it\u2019s faster and more efficient for smaller data.\nThen we set our style and content attributes of our model\nThen we pass an image to our model (preferably our base image) and optimize it to minimize all the losses we defined above.\n\nWe will get to know some of the important points you ought to know before we jump in. While most of the fundamentals of Neural Networks are covered in this article, I will reiterate some of them and explain a few extra things.\n\nWhat is a loss function? Loss function is a function that calculates the difference of the predicted values from the original values. It essentially says how much error has occurred in a\u00a0calculation. In any machine learning algorithm, loss function is used to estimate how the model performs on data. This is especially helpful in case of neural networks, where you iteratively try to make your model perform better. When implementing neural art, you have to keep check of three loss functions, namely:\n\nContent loss, i.e. the difference between \u201ccontent\u201d of resulting image and base image. This is done to ensure that your model does not get much deviated from the base image\nStyle loss, i.e. the difference between \u201cstyle\u201d of resulting image and base image. To do this, you have to first calculate gram matrix of both the images and then find their difference. Gram matrix is nothing but finding covariance of an image with itself. This is done to maintain style in the resulting image.\nTotal Validation loss, i.e. the difference between a pixel of resulting image with its neighbouring pixel. This is done so that the image remains visually coherent.\n\n\n\n\nWhat is an optimization function? When we have calculated the loss function, we try to minimize our losses by changing parameters. Optimization function helps us find out how much change is required so that our model is better \u201coptimized\u201d. Here we implement a method of optimization called Broyden\u2013Fletcher\u2013Goldfarb\u2013Shanno algorithm (BFGS). BFGS is a variant of gradient descent algorithm in which you do a second order differentiation to find the local minimum. Read this article to get a mathematical perspective of the algorithm.\n\nNow that we\u2019ve understood what our flow will be to build a neural art, let\u2019s get down and start hacking stuff!\n\u00a0\nCoding it up!\nThis Diwali was an interesting one for me. I decided to do some research on neural art and how India illuminates during the Diwali day. I came across this image \u00a0\u201cIndia on Diwali night\u201d. And I thought of creating something similar on the same lines. To do that, we will be combining the two images below with the help of neural art.\n \nSource [3]\nSo first we will first set the groundworks.\nStep 0: Install Keras and its dependencies . For this, we will be using a Theano backend. Change your backend by following the steps mentioned here. Also additionally you have to set the proper ordering for image. In the keras.json file, where you have changed the backend, replace image_dim_ordering with \u2018tr\u2019. So it should look like this,\n\"image_dim_ordering\": \"th\"\nStep 1: Then go to your working directory and set your directory structure as below\n|-- keras_NeuralStyle                 # this is your working directory\r\n|\u00a0\u00a0 |-- base_image.jpg                # this is your base image\r\n|\u00a0\u00a0 |-- reference_image.jpg           # this is your reference image\nStep 2:\u00a0 Start a jupyter notebook in your working directory by typing jupyter notebook and implement the following code. I will just provide you a step by step overview of what each block does.\n\nFirst, you have to import all the modules necessary to implement the code\n\n\n\nThen set the paths of the images you want to carry out the project on.\n\n\n\nDefine the necessary variables and give them values as below. Note that these values can be changed but that may change the output drastically. Also, make sure the value of img_nrows variable is same as img_ncols. This is necessary for gram matrix to work.\n\n\n\u00a0\n\nThen we define a helper functions. These are responsible for handling image preprocessing.\n\n\n\u00a0\n\nCreate input placeholders to pass images to the model\n\n\n\u00a0\n\nLoad a pre-trained neural network model (If you don\u2019t know what pre-training is, go through this discussion)\n\n\n\u00a0\n\nPrint the model summary to see what the model is\n\n\n\u00a0\n\nStore the names of all the layers of the neural network as a dictionary along with their outputs\n\n\n\u00a0\n\nAs defined above, we set the loss functions\n\n\n\u00a0\n\nWe then set the content and style attributes \u2026\n\n \n\u00a0\n\nAnd set the gradients and final output function for neural art\n\n \n\u00a0\n\nWe define the functions to calculate loss and gradients\n\n \n\u00a0\n\nNow we take the base image as input and iterate through it to get our final image. On my local machine, it takes a minute to get the output in one iteration. Based on your resources (and patience) it would take at most 5 minutes to get the output. You can also increase the number of iterations to more optimize the result.\n\n\n\nAnd after a long wait, we will get this beautiful image!\n\n\u00a0\n\nNOTE: The code file can be viewed on github here.\n\u00a0\nWhere to go from here?\nWe have seen a small demo of a significant discovery in the art world. There have been many modifications done to this method to make it aesthetically pleasing. For example, I really like this implementation in which they have taken different styles and applied them to different regions.\n  \nThe first two images are the masks, which help to set which part should be stylized. The next two images represent the styles to be used. The last image is the base image that has to be stylized.\nBelow is the output that is generated by neural art.\n\nLooks awesome, doesn\u2019t it? I am sure like me, you are also fascinated to try your hands on neural art. To help you get started with it, I have covered the basics of neural art and how can you create your first image. I am sure you are eager to explore more and hence I am adding some additional resources only for you.\n\u00a0\nAdditional Resources\nThese are some of the best resources I have come across on neural art. Go ahead and enter the fascinating world of neural art.\n\nNeural Art implementation using Torch\nNeural Art implementation in Tensorflow\nAnother noteworthy Neural Art implementation in Keras\nDeep Forger: A twitter bot that generates Neural Art on demand\nNeural Art on Videos\nDEEPART.io: A webapp for Neural Art\nPrisma-ai: A mobile app for Neural Art\n\n\u00a0\nReferences\n\nNeural Artistic Style research paper\nKeras Neural Style by Fran\u00e7ois Chollet\n\n\u00a0\nImage Sources\n[1] https://www.wikiart.org/en/vincent-van-gogh/the-starry-night-1889\n[2] https://arxiv.org/abs/1508.06576", "So you got to know the theoretical concepts involved in neural art, now let\u2019s get to know the practical aspects of implementing it.", "Neural Art works in the following way:", "We will get to know some of the important points you ought to know before we jump in. While most of the fundamentals of Neural Networks are covered in this article, I will reiterate some of them and explain a few extra things.", "Now that we\u2019ve understood what our flow will be to build a neural art, let\u2019s get down and start hacking stuff!", "This Diwali was an interesting one for me. I decided to do some research on neural art and how India illuminates during the Diwali day. I came across this image \u00a0\u201cIndia on Diwali night\u201d. And I thought of creating something similar on the same lines. To do that, we will be combining the two images below with the help of neural art.", "Source [3]\nSo first we will first set the groundworks.\nStep 0: Install Keras and its dependencies . For this, we will be using a Theano backend. Change your backend by following the steps mentioned here. Also additionally you have to set the proper ordering for image. In the keras.json file, where you have changed the backend, replace image_dim_ordering with \u2018tr\u2019. So it should look like this,\n\"image_dim_ordering\": \"th\"\nStep 1: Then go to your working directory and set your directory structure as below\n|-- keras_NeuralStyle                 # this is your working directory\r\n|\u00a0\u00a0 |-- base_image.jpg                # this is your base image\r\n|\u00a0\u00a0 |-- reference_image.jpg           # this is your reference image\nStep 2:\u00a0 Start a jupyter notebook in your working directory by typing jupyter notebook and implement the following code. I will just provide you a step by step overview of what each block does.\n\nFirst, you have to import all the modules necessary to implement the code\n\n\n\nThen set the paths of the images you want to carry out the project on.\n\n\n\nDefine the necessary variables and give them values as below. Note that these values can be changed but that may change the output drastically. Also, make sure the value of img_nrows variable is same as img_ncols. This is necessary for gram matrix to work.\n\n\n\u00a0\n\nThen we define a helper functions. These are responsible for handling image preprocessing.\n\n\n\u00a0\n\nCreate input placeholders to pass images to the model\n\n\n\u00a0\n\nLoad a pre-trained neural network model (If you don\u2019t know what pre-training is, go through this discussion)\n\n\n\u00a0\n\nPrint the model summary to see what the model is\n\n\n\u00a0\n\nStore the names of all the layers of the neural network as a dictionary along with their outputs\n\n\n\u00a0\n\nAs defined above, we set the loss functions\n\n\n\u00a0\n\nWe then set the content and style attributes \u2026\n\n \n\u00a0\n\nAnd set the gradients and final output function for neural art\n\n \n\u00a0\n\nWe define the functions to calculate loss and gradients\n\n \n\u00a0\n\nNow we take the base image as input and iterate through it to get our final image. On my local machine, it takes a minute to get the output in one iteration. Based on your resources (and patience) it would take at most 5 minutes to get the output. You can also increase the number of iterations to more optimize the result.\n\n\n\nAnd after a long wait, we will get this beautiful image!\n\n\u00a0\n\nNOTE: The code file can be viewed on github here.\n\u00a0\nWhere to go from here?\nWe have seen a small demo of a significant discovery in the art world. There have been many modifications done to this method to make it aesthetically pleasing. For example, I really like this implementation in which they have taken different styles and applied them to different regions.\n  \nThe first two images are the masks, which help to set which part should be stylized. The next two images represent the styles to be used. The last image is the base image that has to be stylized.\nBelow is the output that is generated by neural art.\n\nLooks awesome, doesn\u2019t it? I am sure like me, you are also fascinated to try your hands on neural art. To help you get started with it, I have covered the basics of neural art and how can you create your first image. I am sure you are eager to explore more and hence I am adding some additional resources only for you.\n\u00a0\nAdditional Resources\nThese are some of the best resources I have come across on neural art. Go ahead and enter the fascinating world of neural art.\n\nNeural Art implementation using Torch\nNeural Art implementation in Tensorflow\nAnother noteworthy Neural Art implementation in Keras\nDeep Forger: A twitter bot that generates Neural Art on demand\nNeural Art on Videos\nDEEPART.io: A webapp for Neural Art\nPrisma-ai: A mobile app for Neural Art\n\n\u00a0\nReferences\n\nNeural Artistic Style research paper\nKeras Neural Style by Fran\u00e7ois Chollet\n\n\u00a0\nImage Sources\n[1] https://www.wikiart.org/en/vincent-van-gogh/the-starry-night-1889", "So first we will first set the groundworks.", "Step 0: Install Keras and its dependencies . For this, we will be using a Theano backend. Change your backend by following the steps mentioned here. Also additionally you have to set the proper ordering for image. In the keras.json file, where you have changed the backend, replace image_dim_ordering with \u2018tr\u2019. So it should look like this,", "Step 1: Then go to your working directory and set your directory structure as below", "Step 2:\u00a0 Start a jupyter notebook in your working directory by typing jupyter notebook and implement the following code. I will just provide you a step by step overview of what each block does.", "NOTE: The code file can be viewed on github here.", "We have seen a small demo of a significant discovery in the art world. There have been many modifications done to this method to make it aesthetically pleasing. For example, I really like this implementation in which they have taken different styles and applied them to different regions.", "The first two images are the masks, which help to set which part should be stylized. The next two images represent the styles to be used. The last image is the base image that has to be stylized.", "Below is the output that is generated by neural art.", "Looks awesome, doesn\u2019t it? I am sure like me, you are also fascinated to try your hands on neural art. To help you get started with it, I have covered the basics of neural art and how can you create your first image. I am sure you are eager to explore more and hence I am adding some additional resources only for you.", "These are some of the best resources I have come across on neural art. Go ahead and enter the fascinating world of neural art.", "I hope you found this article inspiring. Now, it\u2019s time for you to go through it and make art yourself! If you create an art do share it with the community. If you have any doubts, I\u2019d love to interact with you in comments. And to gain expertise in working in neural network don\u2019t forget to try out our deep learning practice problem \u2013\u00a0Identify the Digits.", "Faizan is a Data Science enthusiast and a Deep learning rookie. A recent Comp. Sc. undergrad, he aims to utilize his skills to push the boundaries of AI research.", " Notify me of follow-up comments by email.", " Notify me of new posts by email.", "Make Money While Sleeping: Side Hustles to Generate Passive Income..", "Google Bard Learnt Bengali on Its Own: Sundar Pichai", "FreedomGPT: Personal, Bold and Uncensored Chatbot Running Locally on Your..", "Understand Random Forest Algorithms With Examples (Updated 2023)", " A verification link has been sent to your email id ", " If you have not recieved the link please goto\nSign Up  page again\n", "This email id is not registered with us. Please enter your registered email id."], "all_outgoing_urls": [{"url": "https://www.analyticsvidhya.com/blog/", "anchor_text": ""}, {"url": "https://courses.analyticsvidhya.com/courses/Machine-Learning-Certification-Course-for-Beginners?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "Machine Learning"}, {"url": "https://courses.analyticsvidhya.com/courses/getting-started-with-neural-networks?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "Deep Learning"}, {"url": "https://courses.analyticsvidhya.com/courses/Intro-to-NLP?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/guide/?utm_source=blog_navbar&utm_medium=machine_learning_button", "anchor_text": "Guides"}, {"url": "https://www.analyticsvidhya.com/blog/category/machine-learning/?utm_source=blog_navbar&utm_medium=machine_learning_button", "anchor_text": "Machine Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/deep-learning/?utm_source=blog_navbar&utm_medium=deep_learning_button", "anchor_text": "Deep Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/nlp/?utm_source=blog_navbar&utm_medium=_button", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/computer-vision/?utm_source=blog_navbar&utm_medium=article_button", "anchor_text": "Computer Vision"}, {"url": "https://www.analyticsvidhya.com/blog/category/data-visualization/?utm_source=blog_navbar&utm_medium=_button", "anchor_text": "Data Visualization"}, {"url": "https://www.analyticsvidhya.com/blog/category/interview-questsions/?utm_source=blog_navbar&utm_medium=career_button", "anchor_text": "Interview Questions"}, {"url": "https://www.analyticsvidhya.com/blog/category/infographics/?utm-source=blog-navbar", "anchor_text": "Infographics"}, {"url": "https://jobsnew.analyticsvidhya.com/?utm-source=blog-navbar", "anchor_text": "Jobs"}, {"url": "https://www.analyticsvidhya.com/blog/category/podcast/?utm-source=blog-navbar", "anchor_text": "Podcasts"}, {"url": "https://courses.analyticsvidhya.com/courses/ebook-machine-learning-simplified?utm_source=bolg-navbar&utm_medium=homepage&utm_campaign=ebook", "anchor_text": "E-Books"}, {"url": "https://www.analyticsvidhya.com/corporate/?utm-source=blog-navbar", "anchor_text": "For Companies"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2019/?utm-source=blog-navbar", "anchor_text": "Datahack Summit"}, {"url": "https://dsat.analyticsvidhya.com/?utm-source=blog-navbar", "anchor_text": "DSAT"}, {"url": "https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/?utm-source=blog-navbar", "anchor_text": "Glossary"}, {"url": "https://www.analyticsvidhya.com/blog-archive/?utm-source=blog-navbar", "anchor_text": "Archive"}, {"url": "https://lekhak.analyticsvidhya.com/write/", "anchor_text": "Write an Article"}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=blog_navbar&utm_medium=blackbelt_button", "anchor_text": "Certified AI & ML BlackBelt Plus"}, {"url": "https://bootcamp.analyticsvidhya.com/?utm_source=blog_navbar&utm_medium=bootcamp_button", "anchor_text": "Data Science Immersive Bootcamp"}, {"url": "https://courses.analyticsvidhya.com/collections?utm_source=blog_navbar&utm_medium=all_courses_button", "anchor_text": "All Courses"}, {"url": "https://datahack.analyticsvidhya.com/blogathon/?utm_source=blog&utm_medium=nav_bar", "anchor_text": "Blogathon"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2023/?utm_source=Blogs&utm_medium=Nav_Bar", "anchor_text": "Conference"}, {"url": "https://lekhak.analyticsvidhya.com/write/", "anchor_text": "Write an Article"}, {"url": "https://www.analyticsvidhya.com/creators-club/?utm-medium=blog-navbar&utm_source=creator_club_button", "anchor_text": "Creators Club"}, {"url": "https://id.analyticsvidhya.com/accounts/profile/", "anchor_text": "Manage your AV Account"}, {"url": "https://datahack.analyticsvidhya.com/user/?utm-source=blog-navbar", "anchor_text": "My Hackathons"}, {"url": "https://profile.analyticsvidhya.com/accounts/bookmarks/", "anchor_text": "My Bookmarks"}, {"url": "https://courses.analyticsvidhya.com/enrollments/?utm-source=blog-navbar", "anchor_text": "My Courses"}, {"url": "https://jobsnew.analyticsvidhya.com/jobs/myactive/?utm-source=blog-navbar", "anchor_text": "My Applied Jobs"}, {"url": "https://www.analyticsvidhya.com/blog/", "anchor_text": "Home"}, {"url": "https://www.analyticsvidhya.com/blog/", "anchor_text": ""}, {"url": "https://courses.analyticsvidhya.com/courses/Machine-Learning-Certification-Course-for-Beginners?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "Machine Learning"}, {"url": "https://courses.analyticsvidhya.com/courses/getting-started-with-neural-networks?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "Deep Learning"}, {"url": "https://courses.analyticsvidhya.com/courses/Intro-to-NLP?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/guide/?utm_source=blog_navbar&utm_medium=machine_learning_button", "anchor_text": "Guides"}, {"url": "https://www.analyticsvidhya.com/blog/category/machine-learning/?utm_source=blog_navbar&utm_medium=machine_learning_button", "anchor_text": "Machine Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/deep-learning/?utm_source=blog_navbar&utm_medium=deep_learning_button", "anchor_text": "Deep Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/nlp/?utm_source=blog_navbar&utm_medium=_button", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/computer-vision/?utm_source=blog_navbar&utm_medium=article_button", "anchor_text": "Computer Vision"}, {"url": "https://www.analyticsvidhya.com/blog/category/data-visualization/?utm_source=blog_navbar&utm_medium=_button", "anchor_text": "Data Visualization"}, {"url": "https://www.analyticsvidhya.com/blog/category/interview-questsions/?utm_source=blog_navbar&utm_medium=career_button", "anchor_text": "Interview Questions"}, {"url": "https://www.analyticsvidhya.com/blog/category/infographics/?utm-source=blog-navbar", "anchor_text": "Infographics"}, {"url": "https://jobsnew.analyticsvidhya.com/?utm-source=blog-navbar", "anchor_text": "Jobs"}, {"url": "https://www.analyticsvidhya.com/blog/category/podcast/?utm-source=blog-navbar", "anchor_text": "Podcasts"}, {"url": "https://courses.analyticsvidhya.com/courses/ebook-machine-learning-simplified?utm_source=bolg-navbar&utm_medium=homepage&utm_campaign=ebook", "anchor_text": "E-Books"}, {"url": "https://www.analyticsvidhya.com/corporate/?utm-source=blog-navbar", "anchor_text": "For Companies"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2019/?utm-source=blog-navbar", "anchor_text": "Datahack Summit"}, {"url": "https://dsat.analyticsvidhya.com/?utm-source=blog-navbar", "anchor_text": "DSAT"}, {"url": "https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/?utm-source=blog-navbar", "anchor_text": "Glossary"}, {"url": "https://www.analyticsvidhya.com/blog-archive/?utm-source=blog-navbar", "anchor_text": "Archive"}, {"url": "https://lekhak.analyticsvidhya.com/write/", "anchor_text": "Write an Article"}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=blog_navbar&utm_medium=blackbelt_button", "anchor_text": "Certified AI & ML BlackBelt Plus"}, {"url": "https://bootcamp.analyticsvidhya.com/?utm_source=blog_navbar&utm_medium=bootcamp_button", "anchor_text": "Data Science Immersive Bootcamp"}, {"url": "https://courses.analyticsvidhya.com/collections?utm_source=blog_navbar&utm_medium=all_courses_button", "anchor_text": "All Courses"}, {"url": "https://datahack.analyticsvidhya.com/blogathon/?utm_source=blog&utm_medium=nav_bar", "anchor_text": "Blogathon"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2023/?utm_source=Blogs&utm_medium=Nav_Bar", "anchor_text": "Conference"}, {"url": "https://lekhak.analyticsvidhya.com/write/", "anchor_text": "Write an Article"}, {"url": "https://www.analyticsvidhya.com/creators-club/?utm-medium=blog-navbar&utm_source=creator_club_button", "anchor_text": "Creators Club"}, {"url": "https://id.analyticsvidhya.com/accounts/profile/", "anchor_text": "Manage your AV Account"}, {"url": "https://datahack.analyticsvidhya.com/user/?utm-source=blog-navbar", "anchor_text": "My Hackathons"}, {"url": "https://profile.analyticsvidhya.com/accounts/bookmarks/", "anchor_text": "My Bookmarks"}, {"url": "https://courses.analyticsvidhya.com/enrollments/?utm-source=blog-navbar", "anchor_text": "My Courses"}, {"url": "https://jobsnew.analyticsvidhya.com/jobs/myactive/?utm-source=blog-navbar", "anchor_text": "My Applied Jobs"}, {"url": "http://www.facebook.com/sharer.php?u=https%3A%2F%2Fwww.analyticsvidhya.com%2Fblog%2F2016%2F11%2Fcreating-an-artificial-artist-color-your-photos-using-neural-networks%2F", "anchor_text": "Facebook"}, {"url": "http://twitter.com/share?text=Creating an artificial artist: Color your photos using Neural Networks&url=https%3A%2F%2Fwww.analyticsvidhya.com%2Fblog%2F2016%2F11%2Fcreating-an-artificial-artist-color-your-photos-using-neural-networks%2F", "anchor_text": "Twitter"}, {"url": "http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.analyticsvidhya.com%2Fblog%2F2016%2F11%2Fcreating-an-artificial-artist-color-your-photos-using-neural-networks%2F", "anchor_text": "Linkedin"}, {"url": "https://www.analyticsvidhya.com/blog/author/jalfaizy/", "anchor_text": "JalFaizy Shaikh"}, {"url": "https://www.analyticsvidhya.com/blog/category/advanced/", "anchor_text": "Advanced"}, {"url": "https://www.analyticsvidhya.com/blog/category/deep-learning/", "anchor_text": "Deep Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/image/", "anchor_text": "Image"}, {"url": "https://www.analyticsvidhya.com/blog/category/machine-learning/", "anchor_text": "Machine Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/project/", "anchor_text": "Project"}, {"url": "https://www.analyticsvidhya.com/blog/category/python-2/", "anchor_text": "Python"}, {"url": "https://www.analyticsvidhya.com/blog/category/unstructured-data/", "anchor_text": "Unstructured Data"}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/neural-art-1.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/2016/03/introduction-deep-learning-fundamentals-neural-networks/", "anchor_text": "this article"}, {"url": "https://en.wikipedia.org/wiki/Broyden%E2%80%93Fletcher%E2%80%93Goldfarb%E2%80%93Shanno_algorithm", "anchor_text": "this article"}, {"url": "http://mashable.com/2012/11/12/fake-image-india-diwali-space/#GRFylOP48kqs", "anchor_text": "\u201cIndia on Diwali night\u201d"}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/reference_image.jpg", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/base_image.jpg", "anchor_text": ""}, {"url": "https://keras.io/#installation", "anchor_text": "Keras"}, {"url": "https://keras.io/#switching-from-tensorflow-to-theano", "anchor_text": "here"}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/1.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/2.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/3.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/4.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/5.png", "anchor_text": ""}, {"url": "https://discuss.analyticsvidhya.com/t/pre-trained-deep-learning/11003", "anchor_text": "this discussion"}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/6.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/7.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/8.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/9.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/10.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/11.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/12.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/13.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/14.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/15.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/17.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/at_iteration_0.png", "anchor_text": ""}, {"url": "https://github.com/faizankshaikh/Random_Projects/tree/master/keras_NeuralStyle", "anchor_text": "here"}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "this implementation"}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_mask_face.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_mask_face_inv.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/okeffe_red_canna.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/okeffe_iris.png", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270.jpg", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/wp-content/uploads/2016/11/02270_output.png", "anchor_text": ""}, {"url": "https://github.com/jcjohnson", "anchor_text": "Neural Art implementation using Torch"}, {"url": "https://github.com/cysmith/neural-style-tf", "anchor_text": "Neural Art implementation in Tensorflow"}, {"url": "https://github.com/titu1994/Neural-Style-Transfer", "anchor_text": "Another noteworthy Neural Art implementation in Keras"}, {"url": "https://twitter.com/deepforger?lang=en", "anchor_text": "Deep Forger: A twitter bot that generates Neural Art on demand"}, {"url": "https://github.com/mbartoli/neural-animation", "anchor_text": "Neural Art on Videos"}, {"url": "https://deepart.io/", "anchor_text": "DEEPART.io: A webapp for Neural Art"}, {"url": "http://prisma-ai.com/", "anchor_text": "Prisma-ai: A mobile app for Neural Art"}, {"url": "https://arxiv.org/abs/1508.06576", "anchor_text": "Neural Artistic Style research paper"}, {"url": "https://github.com/fchollet/keras/blob/master/examples/neural_style_transfer.py", "anchor_text": "Keras Neural Style"}, {"url": "https://datahack.analyticsvidhya.com/contest/practice-problem-identify-the-digits/", "anchor_text": "Identify the Digits"}, {"url": "http://datahack.analyticsvidhya.com/contest/all", "anchor_text": "Live Competitions"}, {"url": "https://www.analyticsvidhya.com/blog/tag/artificial-neural-network/", "anchor_text": "Artificial Neural Network"}, {"url": "https://www.analyticsvidhya.com/blog/tag/deep-learning/", "anchor_text": "deep learning"}, {"url": "https://www.analyticsvidhya.com/blog/tag/deep-learning-application/", "anchor_text": "deep learning application"}, {"url": "https://www.analyticsvidhya.com/blog/tag/neural-art/", "anchor_text": "neural art"}, {"url": "https://www.analyticsvidhya.com/blog/tag/neural-art-application/", "anchor_text": "neural art application"}, {"url": "https://www.analyticsvidhya.com/blog/tag/neural-art-in-theano/", "anchor_text": "neural art in theano"}, {"url": "https://www.analyticsvidhya.com/blog/tag/neural-networks/", "anchor_text": "neural networks"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2023/?utm_source=blog_india&utm_medium=side_banner&utm_campaign=27-Apr-2023||&utm_content=generativeAI", "anchor_text": ""}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=blog_outside_india&utm_medium=side_banner&utm_campaign=24-Mar-2023||&utm_content=project#ReinforceProject", "anchor_text": ""}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=RelatedArticles&utm_medium=blog", "anchor_text": "Become a full stack data scientist"}, {"url": "https://www.analyticsvidhya.com/blog/2023/02/introduction-to-neural-network-build-your-own-network/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2016/11/creating-an-artificial-artist-color-your-photos-using-neural-networks/", "anchor_text": "Introduction to Neural Network: Build your own Network"}, {"url": "https://www.analyticsvidhya.com/blog/2023/02/neuro-symbolic-ai-enhancing-common-sense-in-ai/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2016/11/creating-an-artificial-artist-color-your-photos-using-neural-networks/", "anchor_text": "Neuro Symbolic AI: Enhancing Common Sense in AI"}, {"url": "https://www.analyticsvidhya.com/blog/2023/01/why-is-sigmoid-function-important-in-artificial-neural-networks/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2016/11/creating-an-artificial-artist-color-your-photos-using-neural-networks/", "anchor_text": "Why is Sigmoid Function Important in Artificial Neural Networks?"}, {"url": "https://www.analyticsvidhya.com/blog/2023/02/deep-residual-learning-for-image-recognition-resnet-explained/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2016/11/creating-an-artificial-artist-color-your-photos-using-neural-networks/", "anchor_text": "Deep Residual Learning for Image Recognition (ResNet Explained)"}, {"url": "https://www.analyticsvidhya.com/blog/2020/02/cnn-vs-rnn-vs-mlp-analyzing-3-types-of-neural-networks-in-deep-learning/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2016/11/creating-an-artificial-artist-color-your-photos-using-neural-networks/", "anchor_text": "CNN vs. RNN vs. ANN \u2013 Analyzing 3 Types of Neural Networks in Deep Learning"}, {"url": "https://www.analyticsvidhya.com/blog/2021/04/artificial-neural-network-its-inspiration-and-the-working-mechanism/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2016/11/creating-an-artificial-artist-color-your-photos-using-neural-networks/", "anchor_text": "Artificial Neural Network, Its inspiration and the Working Mechanism"}, {"url": "https://www.analyticsvidhya.com/blog/author/jalfaizy/", "anchor_text": "JalFaizy Shaikh"}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/rahul105/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/sion/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/chirag676/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/barney6/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/arnab1408/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/prateekmaj21/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/shanthababu/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/creators/?utm-medium=blog-footer&utm_source=top-authors", "anchor_text": "view more"}, {"url": "https://play.google.com/store/apps/details?id=com.analyticsvidhya.android", "anchor_text": ""}, {"url": "https://apps.apple.com/us/app/analytics-vidhya/id1470025572", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/2016/11/an-introduction-to-clustering-and-different-methods-of-clustering/", "anchor_text": "Clustering | Introduction, Different Methods, and Applications (Updated 2023)"}, {"url": "https://www.analyticsvidhya.com/blog/2016/11/tryst-with-deep-learning-in-international-data-science-game-2016/", "anchor_text": "Tryst with Deep Learning in International Data Science Game 2016"}, {"url": "https://www.analyticsvidhya.com/blog/2016/11/creating-an-artificial-artist-color-your-photos-using-neural-networks/#respond", "anchor_text": "Cancel reply"}, {"url": "https://www.analyticsvidhya.com/blog/2023/04/how-to-make-money-with-chatgpt/", "anchor_text": "Make Money While Sleeping: Side Hustles to Generate Passive Income.."}, {"url": "https://www.analyticsvidhya.com/blog/author/aayush1/", "anchor_text": "Aayush Tyagi -"}, {"url": "https://www.analyticsvidhya.com/blog/2023/04/google-bard-learnt-bengali-on-its-own-sundar-pichai/", "anchor_text": "Google Bard Learnt Bengali on Its Own: Sundar Pichai"}, {"url": "https://www.analyticsvidhya.com/blog/author/yana_khare/", "anchor_text": "Yana Khare -"}, {"url": "https://www.analyticsvidhya.com/blog/2023/04/freedomgpt-personal-bold-and-uncensored-chatbot-running-locally-on-your-pc/", "anchor_text": "FreedomGPT: Personal, Bold and Uncensored Chatbot Running Locally on Your.."}, {"url": "https://www.analyticsvidhya.com/blog/author/sabreena/", "anchor_text": "K.sabreena -"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/understanding-random-forest/", "anchor_text": "Understand Random Forest Algorithms With Examples (Updated 2023)"}, {"url": "https://www.analyticsvidhya.com/blog/author/sruthi94/", "anchor_text": "Sruthi E R -"}, {"url": "https://www.analyticsvidhya.com/", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.analyticsvidhya.android", "anchor_text": ""}, {"url": "https://apps.apple.com/us/app/analytics-vidhya/id1470025572", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/about/", "anchor_text": "About Us"}, {"url": "https://www.analyticsvidhya.com/team/", "anchor_text": "Our Team"}, {"url": "https://www.analyticsvidhya.com/careers/", "anchor_text": "Careers"}, {"url": "https://www.analyticsvidhya.com/contact/", "anchor_text": "Contact us"}, {"url": "https://www.analyticsvidhya.com/blog/", "anchor_text": "Blog"}, {"url": "https://datahack.analyticsvidhya.com/", "anchor_text": "Hackathon"}, {"url": "https://discuss.analyticsvidhya.com/", "anchor_text": "Discussions"}, {"url": "https://jobsnew.analyticsvidhya.com/", "anchor_text": "Apply Jobs"}, {"url": "https://www.analyticsvidhya.com/corporate/", "anchor_text": "Post Jobs"}, {"url": "https://courses.analyticsvidhya.com/", "anchor_text": "Trainings"}, {"url": "https://datahack.analyticsvidhya.com/", "anchor_text": "Hiring Hackathons"}, {"url": "https://www.analyticsvidhya.com/contact/", "anchor_text": "Advertising"}, {"url": "https://www.facebook.com/AnalyticsVidhya/", "anchor_text": ""}, {"url": "https://www.linkedin.com/company/analytics-vidhya/", "anchor_text": ""}, {"url": "https://www.youtube.com/channel/UCH6gDteHtH4hg3o2343iObA", "anchor_text": ""}, {"url": "https://twitter.com/analyticsvidhya", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/privacy-policy/", "anchor_text": "Privacy Policy"}, {"url": "https://www.analyticsvidhya.com/terms/", "anchor_text": "Terms of Use"}, {"url": "https://www.analyticsvidhya.com/refund-policy/", "anchor_text": "Refund Policy"}, {"url": "https://www.analyticsvidhya.com/terms", "anchor_text": "I accept the Terms and Conditions"}, {"url": "https://www.analyticsvidhya.com/terms", "anchor_text": "I accept the Terms and Conditions"}, {"url": "https://www.analyticsvidhya.com/terms", "anchor_text": "I accept the Terms and Conditions"}, {"url": "https://www.analyticsvidhya.com/privacy-policy/", "anchor_text": "Privacy Policy"}, {"url": "https://www.analyticsvidhya.com/terms/", "anchor_text": "Terms of Use"}]}, "scrape_status": {"code": "1"}}