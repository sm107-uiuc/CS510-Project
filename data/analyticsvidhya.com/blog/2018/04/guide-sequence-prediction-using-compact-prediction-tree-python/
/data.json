{"url": "https://www.analyticsvidhya.com/blog/2018/04/guide-sequence-prediction-using-compact-prediction-tree-python/\n", "time": 1683020140.194481, "path": "analyticsvidhya.com/blog/2018/04/guide-sequence-prediction-using-compact-prediction-tree-python/\n/", "webpage": {"metadata": {"title": "Sequence Prediction Using Compact Prediction Tree Algorithm", "h1": "A Guide to Sequence Prediction using Compact Prediction Tree (with codes in Python)", "description": "Sequence prediction is the application of deep learning. In this article learn sequence prediction using compact prediction tree algorithms in python."}, "outgoing_paragraph_urls": [{"url": "https://www.analyticsvidhya.com/blog/2018/04/sequence-modelling-an-introduction-with-practical-use-cases/", "anchor_text": "A Must-Read Introduction to Sequence Modelling(with use cases)", "paragraph_index": 3}, {"url": "https://datahack.analyticsvidhya.com/contest/mckinsey-analytics-online-hackathon-recommendation/", "anchor_text": "Sequence Prediction Hackathon", "paragraph_index": 7}, {"url": "https://github.com/analyticsvidhya/CPT", "anchor_text": "here", "paragraph_index": 13}, {"url": "https://en.wikipedia.org/wiki/Trie", "anchor_text": "trie", "paragraph_index": 19}, {"url": "https://github.com/analyticsvidhya/CPT", "anchor_text": "here", "paragraph_index": 41}, {"url": "https://github.com/analyticsvidhya/CPT", "anchor_text": "CPT library", "paragraph_index": 41}, {"url": "https://github.com/analyticsvidhya/CPT", "anchor_text": "here", "paragraph_index": 42}, {"url": "https://github.com/analyticsvidhya/CPT", "anchor_text": "CPT library", "paragraph_index": 42}, {"url": "https://github.com/analyticsvidhya/CPT", "anchor_text": "here", "paragraph_index": 43}, {"url": "https://github.com/analyticsvidhya/CPT", "anchor_text": "CPT library", "paragraph_index": 43}, {"url": "https://github.com/analyticsvidhya/CPT", "anchor_text": "here", "paragraph_index": 52}, {"url": "https://github.com/analyticsvidhya/CPT", "anchor_text": "CPT library", "paragraph_index": 60}], "all_paragraphs": ["Sequence prediction is one of the hottest application of Deep Learning these days. From building recommendation systems to speech recognition and natural language processing, its potential is seemingly endless. This is enabling never-thought-before solutions to emerge in the industry and is driving innovation.", "There are many different ways to perform sequence prediction such as using Markov models, Directed Graphs etc. from the Machine Learning domain and\u00a0 RNNs/LSTMs from the Deep Learning domain.", "In this article, we will see how we can perform sequence prediction using a relatively unknown algorithm called Compact Prediction Tree (CPT). You\u2019ll see how this is a surprisingly simple technique, yet it\u2019s more powerful than some very well known methods, such as Markov Methods, Directed Graphs, etc.", "I recommend reading this article before going further \u2013\u00a0A Must-Read Introduction to Sequence Modelling(with use cases). In this, Tavish\u00a0introduced us to an entirely new class of problems called Sequence Modelling, along with some very good examples of their use cases and applications.", "Sequence prediction is required whenever we can predict that a particular event is likely to be followed by another event and we need to predict that.", "Sequence prediction is an important class of problems which finds application in various industries. For example:", "There are numerous additional areas where Sequence Prediction can be useful.", "To see different kinds of solutions available for solving problems in this field, we had launched the Sequence Prediction Hackathon. The participants came up with different approaches and the most popular of them was LSTMs/RNNs which was used by most of the people in the top 10 on the private leaderboard.", "LSTMs/RNNs have become a popular choice for modelling sequential data, be it text, audio, etc. However, they suffer from two fundamental problems:", "Compact Prediction Tree (CPT) is one such algorithm which I found to be more accurate than traditional Machine Learning models, like Markov Models, and Deep Learning models like Auto-Encoders.", "The USP of CPT algorithm is its fast training and prediction time. I was able to train and make predictions within 4 minutes on the Sequence Prediction Hackathon dataset mentioned earlier.", "Unfortunately, only a Java implementation of the algorithm exists and therefore is not as popular among Data Scientists in general (especially those who use Python).", "So, I have created a Python version of the library using the documentation developed by the algorithm creator. The Java code certainly helped in understanding certain sections of the research paper.", "The library for public usage is present here\u00a0and you are most welcome to make contributions to it. The library is still incomplete in the sense that it does not have all recommendations of the author of the algorithm, but is good enough to get a decent score of 0.185 on the hackathon leaderboard, all within a few minutes. Upon completion, I believe the library should be able to match the performance of RNNs/LSTMs for this task.", "In the next section, we will go through the inner workings of the CPT algorithm, and how it manages to perform better than some of the popular traditional machine learning models like Markov Chains, DG, etc.", "As a prerequisite, it is good to have an understanding of the format of the data accepted by the Python Library CPT. CPT accepts two .csv files \u2013 Train and Test. Train contains the training sequences while the test file contains the sequences whose next 3 items need to be predicted for each sequence. For the purpose of clarity, the sequences in both Train and Test files are defined as below:", "Note that the sequences could be of varying length. Also, One-hot encoded sequences will not give appropriate results.", "The CPT algorithm makes use of three basic data structures, which we will talk about briefly below.", "A prediction tree is a tree of nodes, where each node has three elements:", "A Prediction Tree is basically a trie data structure which compresses the entire training data into the form of a tree. For readers who are not aware of how a trie structure works, the trie structure diagram for the below two sequences will clarify things.", "The Trie data structure starts with the first element A of the sequence A,B,C and adds it to the root node. Then B gets added to A and C to B. The Trie again starts at the root node for every new sequence and if an element is already added to the structure, then it skips adding it again.", "The resulting structure is shown above. So this is how a Prediction Tree compresses the training data effectively.", "Inverted Index is a dictionary where the key is the item in the training set, and value is the set of the sequences in which this item has appeared. For example,", "The Inverted Index for the above sequence will look like the below:", "A LookUp Table is a dictionary with a key as the Sequence ID and value as the terminal node of the sequence in the Prediction Tree. For example:", "We will go through an example to solidify our understanding of the Training and Prediction processes in the CPT algorithm. Below is the training set for this example:", "As you can see, the above training set has 3 sequences. Let us denote the sequences with ids: seq1, seq2 and seq3. A, B, C, and D are the different unique items in the training dataset.", "The training phase consists of building the Prediction Tree, Inverted Index (II), and the LookUp Table (LT) simultaneously. We will now look at the entire training process phase.", "We already have a root node and a current node variable set to root node initially.", "We start with A, and check if A exists as the child of the root node. If it does not, we add A to the child list of the root node, add an entry of A in Inverted Index with value seq1, and then move the current node to A.", "We look at the next item, i.e B, and see if B exists as the child of the current node, i.e, A. If not, we will add B to the child list of A, add an entry of B in the Inverted Index with value seq1 and\u00a0then move the current node to B.", "We repeat the above procedure till we are done adding the last element of seq1. Finally, we will add the last node of seq1, C, to the LookUp table with key = \u201cseq1\u201d and value = node(C).", "We do keep doing this till we exhaust every row in the training dataset (remember, a single row represents a single sequence). We now have all the required data structures in place to start making predictions on the test dataset. Let\u2019s have a look at the prediction phase now.", "The Prediction Phase involves making predictions for each sequence of the data in the test set in an iterative manner. For a single row, we find sequences similar to that row using the Inverted Index(II). Then, we find the consequent of the similar sequences and add the items in the consequent in a Counttable dictionary with their scores. Finally, the Counttable is used to return the item with the highest score as the final prediction. We will see each of these steps in detail to get an in-depth understanding.", "Step 1: Find sequences similar to the Target Sequence.", "Sequences similar to the Target Sequences are found by making use of the Inverted Index. These are identified by:", "Similar sequences to Target Sequence = intersection of set A and set B = {\u2018Seq1\u2019,\u2019Seq2\u2019,\u2019Seq3\u2019}", "Step 2: Finding the consequent of each similar sequence to the Target Sequence", "For each similar sequence, consequent is defined as its longest sub-sequence after the last occurrence of the last item of the Target Sequence in the similar sequence minus the items present in the Target Sequence.", "** Note this is different from what the developers have mentioned in their research paper, but this has worked for me better than their implementation.", "Let\u2019s understand this with the help of an example:", "Target Sequence = [\u2018A\u2019,\u2019B\u2019,\u2019C\u2019]\nSimilar Sequence = [\u2018X\u2019,\u2019A\u2019,\u2019Y\u2019,\u2019B\u2019,\u2019C\u2019,\u2019E\u2019,\u2019A\u2019,\u2019F\u2019]\nLast item in Target Sequence = \u2018C\u2019\nLongest Sub-Sequence after last occurrence of \u2018C\u2019 in Similar Sub-Sequence = [\u2018E\u2019,\u2019A\u2019,\u2019F\u2019]\nConsequent = [\u2018E\u2019,\u2019F\u2019]\n\u00a0\nStep 3: Adding elements of the Consequent to the Counttable dictionary along with their score.\nThe elements of consequent of each similar sequence is added to the dictionary along with a score. Let\u2019s continue with the above example for instance. The score for the items in the Consequent [\u2018E\u2019,\u2019F\u2019] is calculated as below:\ncurrent state of counttable = {}, an empty dictionary\nIf the item is not present in the dictionary, then,\nscore = 1 + (1/number of similar sequences) +(1/number of items currently in the countable dictionary+1)*0.001\notherwise,\nscore = (1 + (1/number of similar sequences) +(1/number of items currently in the countable dictionary+1)*0.001) * oldscore\nSo for element E, i.e. the first item in the consequent, the score will be\nscore[E] = 1 + (1/1) + 1/(0+1)*0.001 = 2.001\nscore[F]\u00a0 1 + (1/1) + 1/(1+1)*0.001 = 2.0005\nAfter the above calculations, counttable looks like,\ncounttable = {'E' : 2.001, 'F': 2.0005}\n\u00a0\nStep 4: Making Prediction using Counttable\nFinally, the key is returned with the greatest value in the Counttable as the prediction. In the case of the above example, E is returned as a prediction.\n\u00a0\nCreating Model and Making Predictions\nStep 1: Clone the GitHub repository from here.\ngit clone https://github.com/NeerajSarwan/CPT.git\n\nStep 2: Use the below code to read the .csv files, train your model and make the predictions.\n#Importing everything from the CPT file\n from CPT import *\n#Importing everything from the CPT file\n from CPT import *\n#Creating an object of the CPT Class\n model = CPT()\n#Reading train and test file and converting them to data and target.\n data, target = model.load_files(\u201c./data/train.csv\u201d,\u201d./data/test.csv\u201d)\n#Training the model\n model.train(data)\n#Making predictions on the test dataset\n predictions = model.predict(data,target,5,1)\n\u00a0\nEnd Notes\nIn this article, we covered a highly effective and accurate algorithm for sequence predictions \u2013 Compact Prediction Tree. I encourage you to try it out yourself on the Sequence Prediction Hackathon dataset and climb higher on the private leaderboard!\nIf you want to contribute to the CPT library, feel free to fork the repository or raise issues. If you know of any other methods to perform Sequence Predictions, write them in the comments section below. And do not forget to star the CPT library. \ud83d\ude42\n\u00a0\n\nRelated\n ", "Last item in Target Sequence = \u2018C\u2019\nLongest Sub-Sequence after last occurrence of \u2018C\u2019 in Similar Sub-Sequence = [\u2018E\u2019,\u2019A\u2019,\u2019F\u2019]\nConsequent = [\u2018E\u2019,\u2019F\u2019]\n\u00a0\nStep 3: Adding elements of the Consequent to the Counttable dictionary along with their score.\nThe elements of consequent of each similar sequence is added to the dictionary along with a score. Let\u2019s continue with the above example for instance. The score for the items in the Consequent [\u2018E\u2019,\u2019F\u2019] is calculated as below:\ncurrent state of counttable = {}, an empty dictionary\nIf the item is not present in the dictionary, then,\nscore = 1 + (1/number of similar sequences) +(1/number of items currently in the countable dictionary+1)*0.001\notherwise,\nscore = (1 + (1/number of similar sequences) +(1/number of items currently in the countable dictionary+1)*0.001) * oldscore\nSo for element E, i.e. the first item in the consequent, the score will be\nscore[E] = 1 + (1/1) + 1/(0+1)*0.001 = 2.001\nscore[F]\u00a0 1 + (1/1) + 1/(1+1)*0.001 = 2.0005\nAfter the above calculations, counttable looks like,\ncounttable = {'E' : 2.001, 'F': 2.0005}\n\u00a0\nStep 4: Making Prediction using Counttable\nFinally, the key is returned with the greatest value in the Counttable as the prediction. In the case of the above example, E is returned as a prediction.\n\u00a0\nCreating Model and Making Predictions\nStep 1: Clone the GitHub repository from here.\ngit clone https://github.com/NeerajSarwan/CPT.git\n\nStep 2: Use the below code to read the .csv files, train your model and make the predictions.\n#Importing everything from the CPT file\n from CPT import *\n#Importing everything from the CPT file\n from CPT import *\n#Creating an object of the CPT Class\n model = CPT()\n#Reading train and test file and converting them to data and target.\n data, target = model.load_files(\u201c./data/train.csv\u201d,\u201d./data/test.csv\u201d)\n#Training the model\n model.train(data)\n#Making predictions on the test dataset\n predictions = model.predict(data,target,5,1)\n\u00a0\nEnd Notes\nIn this article, we covered a highly effective and accurate algorithm for sequence predictions \u2013 Compact Prediction Tree. I encourage you to try it out yourself on the Sequence Prediction Hackathon dataset and climb higher on the private leaderboard!\nIf you want to contribute to the CPT library, feel free to fork the repository or raise issues. If you know of any other methods to perform Sequence Predictions, write them in the comments section below. And do not forget to star the CPT library. \ud83d\ude42\n\u00a0\n\nRelated\n ", "Consequent = [\u2018E\u2019,\u2019F\u2019]\n\u00a0\nStep 3: Adding elements of the Consequent to the Counttable dictionary along with their score.\nThe elements of consequent of each similar sequence is added to the dictionary along with a score. Let\u2019s continue with the above example for instance. The score for the items in the Consequent [\u2018E\u2019,\u2019F\u2019] is calculated as below:\ncurrent state of counttable = {}, an empty dictionary\nIf the item is not present in the dictionary, then,\nscore = 1 + (1/number of similar sequences) +(1/number of items currently in the countable dictionary+1)*0.001\notherwise,\nscore = (1 + (1/number of similar sequences) +(1/number of items currently in the countable dictionary+1)*0.001) * oldscore\nSo for element E, i.e. the first item in the consequent, the score will be\nscore[E] = 1 + (1/1) + 1/(0+1)*0.001 = 2.001\nscore[F]\u00a0 1 + (1/1) + 1/(1+1)*0.001 = 2.0005\nAfter the above calculations, counttable looks like,\ncounttable = {'E' : 2.001, 'F': 2.0005}\n\u00a0\nStep 4: Making Prediction using Counttable\nFinally, the key is returned with the greatest value in the Counttable as the prediction. In the case of the above example, E is returned as a prediction.\n\u00a0\nCreating Model and Making Predictions\nStep 1: Clone the GitHub repository from here.\ngit clone https://github.com/NeerajSarwan/CPT.git\n\nStep 2: Use the below code to read the .csv files, train your model and make the predictions.\n#Importing everything from the CPT file\n from CPT import *\n#Importing everything from the CPT file\n from CPT import *\n#Creating an object of the CPT Class\n model = CPT()\n#Reading train and test file and converting them to data and target.\n data, target = model.load_files(\u201c./data/train.csv\u201d,\u201d./data/test.csv\u201d)\n#Training the model\n model.train(data)\n#Making predictions on the test dataset\n predictions = model.predict(data,target,5,1)\n\u00a0\nEnd Notes\nIn this article, we covered a highly effective and accurate algorithm for sequence predictions \u2013 Compact Prediction Tree. I encourage you to try it out yourself on the Sequence Prediction Hackathon dataset and climb higher on the private leaderboard!\nIf you want to contribute to the CPT library, feel free to fork the repository or raise issues. If you know of any other methods to perform Sequence Predictions, write them in the comments section below. And do not forget to star the CPT library. \ud83d\ude42\n\u00a0\n\nRelated\n ", "Step 3: Adding elements of the Consequent to the Counttable dictionary along with their score.", "The elements of consequent of each similar sequence is added to the dictionary along with a score. Let\u2019s continue with the above example for instance. The score for the items in the Consequent [\u2018E\u2019,\u2019F\u2019] is calculated as below:", "current state of counttable = {}, an empty dictionary", "If the item is not present in the dictionary, then,\nscore = 1 + (1/number of similar sequences) +(1/number of items currently in the countable dictionary+1)*0.001", "So for element E, i.e. the first item in the consequent, the score will be", "After the above calculations, counttable looks like,", "Step 4: Making Prediction using Counttable", "Finally, the key is returned with the greatest value in the Counttable as the prediction. In the case of the above example, E is returned as a prediction.", "Step 1: Clone the GitHub repository from here.", "Step 2: Use the below code to read the .csv files, train your model and make the predictions.", "#Importing everything from the CPT file\n from CPT import *", "#Importing everything from the CPT file\n from CPT import *", "#Creating an object of the CPT Class\n model = CPT()", "#Reading train and test file and converting them to data and target.\n data, target = model.load_files(\u201c./data/train.csv\u201d,\u201d./data/test.csv\u201d)", "#Making predictions on the test dataset\n predictions = model.predict(data,target,5,1)", "In this article, we covered a highly effective and accurate algorithm for sequence predictions \u2013 Compact Prediction Tree. I encourage you to try it out yourself on the Sequence Prediction Hackathon dataset and climb higher on the private leaderboard!", "If you want to contribute to the CPT library, feel free to fork the repository or raise issues. If you know of any other methods to perform Sequence Predictions, write them in the comments section below. And do not forget to star the CPT library. \ud83d\ude42", "I am a perpetual, quick learner and keen to explore the realm of Data analytics and science. I am deeply excited about the times we live in and the rate at which data is being generated and being transformed as an asset. I am well versed with a few tools for dealing with data and also in the process of learning some other tools and knowledge required to exploit data.", " Notify me of follow-up comments by email.", " Notify me of new posts by email.", "Make Money While Sleeping: Side Hustles to Generate Passive Income..", "Google Bard Learnt Bengali on Its Own: Sundar Pichai", "FreedomGPT: Personal, Bold and Uncensored Chatbot Running Locally on Your..", "Understand Random Forest Algorithms With Examples (Updated 2023)", " A verification link has been sent to your email id ", " If you have not recieved the link please goto\nSign Up  page again\n", "This email id is not registered with us. Please enter your registered email id."], "all_outgoing_urls": [{"url": "https://www.analyticsvidhya.com/blog/", "anchor_text": ""}, {"url": "https://courses.analyticsvidhya.com/courses/Machine-Learning-Certification-Course-for-Beginners?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "Machine Learning"}, {"url": "https://courses.analyticsvidhya.com/courses/getting-started-with-neural-networks?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "Deep Learning"}, {"url": "https://courses.analyticsvidhya.com/courses/Intro-to-NLP?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/guide/?utm_source=blog_navbar&utm_medium=machine_learning_button", "anchor_text": "Guides"}, {"url": "https://www.analyticsvidhya.com/blog/category/machine-learning/?utm_source=blog_navbar&utm_medium=machine_learning_button", "anchor_text": "Machine Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/deep-learning/?utm_source=blog_navbar&utm_medium=deep_learning_button", "anchor_text": "Deep Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/nlp/?utm_source=blog_navbar&utm_medium=_button", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/computer-vision/?utm_source=blog_navbar&utm_medium=article_button", "anchor_text": "Computer Vision"}, {"url": "https://www.analyticsvidhya.com/blog/category/data-visualization/?utm_source=blog_navbar&utm_medium=_button", "anchor_text": "Data Visualization"}, {"url": "https://www.analyticsvidhya.com/blog/category/interview-questsions/?utm_source=blog_navbar&utm_medium=career_button", "anchor_text": "Interview Questions"}, {"url": "https://www.analyticsvidhya.com/blog/category/infographics/?utm-source=blog-navbar", "anchor_text": "Infographics"}, {"url": "https://jobsnew.analyticsvidhya.com/?utm-source=blog-navbar", "anchor_text": "Jobs"}, {"url": "https://www.analyticsvidhya.com/blog/category/podcast/?utm-source=blog-navbar", "anchor_text": "Podcasts"}, {"url": "https://courses.analyticsvidhya.com/courses/ebook-machine-learning-simplified?utm_source=bolg-navbar&utm_medium=homepage&utm_campaign=ebook", "anchor_text": "E-Books"}, {"url": "https://www.analyticsvidhya.com/corporate/?utm-source=blog-navbar", "anchor_text": "For Companies"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2019/?utm-source=blog-navbar", "anchor_text": "Datahack Summit"}, {"url": "https://dsat.analyticsvidhya.com/?utm-source=blog-navbar", "anchor_text": "DSAT"}, {"url": "https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/?utm-source=blog-navbar", "anchor_text": "Glossary"}, {"url": "https://www.analyticsvidhya.com/blog-archive/?utm-source=blog-navbar", "anchor_text": "Archive"}, {"url": "https://lekhak.analyticsvidhya.com/write/", "anchor_text": "Write an Article"}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=blog_navbar&utm_medium=blackbelt_button", "anchor_text": "Certified AI & ML BlackBelt Plus"}, {"url": "https://bootcamp.analyticsvidhya.com/?utm_source=blog_navbar&utm_medium=bootcamp_button", "anchor_text": "Data Science Immersive Bootcamp"}, {"url": "https://courses.analyticsvidhya.com/collections?utm_source=blog_navbar&utm_medium=all_courses_button", "anchor_text": "All Courses"}, {"url": "https://datahack.analyticsvidhya.com/blogathon/?utm_source=blog&utm_medium=nav_bar", "anchor_text": "Blogathon"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2023/?utm_source=Blogs&utm_medium=Nav_Bar", "anchor_text": "Conference"}, {"url": "https://lekhak.analyticsvidhya.com/write/", "anchor_text": "Write an Article"}, {"url": "https://www.analyticsvidhya.com/creators-club/?utm-medium=blog-navbar&utm_source=creator_club_button", "anchor_text": "Creators Club"}, {"url": "https://id.analyticsvidhya.com/accounts/profile/", "anchor_text": "Manage your AV Account"}, {"url": "https://datahack.analyticsvidhya.com/user/?utm-source=blog-navbar", "anchor_text": "My Hackathons"}, {"url": "https://profile.analyticsvidhya.com/accounts/bookmarks/", "anchor_text": "My Bookmarks"}, {"url": "https://courses.analyticsvidhya.com/enrollments/?utm-source=blog-navbar", "anchor_text": "My Courses"}, {"url": "https://jobsnew.analyticsvidhya.com/jobs/myactive/?utm-source=blog-navbar", "anchor_text": "My Applied Jobs"}, {"url": "https://www.analyticsvidhya.com/blog/", "anchor_text": "Home"}, {"url": "https://www.analyticsvidhya.com/blog/", "anchor_text": ""}, {"url": "https://courses.analyticsvidhya.com/courses/Machine-Learning-Certification-Course-for-Beginners?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "Machine Learning"}, {"url": "https://courses.analyticsvidhya.com/courses/getting-started-with-neural-networks?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "Deep Learning"}, {"url": "https://courses.analyticsvidhya.com/courses/Intro-to-NLP?utm_source=blog_navbar&utm_medium=start_here_button", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/guide/?utm_source=blog_navbar&utm_medium=machine_learning_button", "anchor_text": "Guides"}, {"url": "https://www.analyticsvidhya.com/blog/category/machine-learning/?utm_source=blog_navbar&utm_medium=machine_learning_button", "anchor_text": "Machine Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/deep-learning/?utm_source=blog_navbar&utm_medium=deep_learning_button", "anchor_text": "Deep Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/nlp/?utm_source=blog_navbar&utm_medium=_button", "anchor_text": "NLP"}, {"url": "https://www.analyticsvidhya.com/blog/category/computer-vision/?utm_source=blog_navbar&utm_medium=article_button", "anchor_text": "Computer Vision"}, {"url": "https://www.analyticsvidhya.com/blog/category/data-visualization/?utm_source=blog_navbar&utm_medium=_button", "anchor_text": "Data Visualization"}, {"url": "https://www.analyticsvidhya.com/blog/category/interview-questsions/?utm_source=blog_navbar&utm_medium=career_button", "anchor_text": "Interview Questions"}, {"url": "https://www.analyticsvidhya.com/blog/category/infographics/?utm-source=blog-navbar", "anchor_text": "Infographics"}, {"url": "https://jobsnew.analyticsvidhya.com/?utm-source=blog-navbar", "anchor_text": "Jobs"}, {"url": "https://www.analyticsvidhya.com/blog/category/podcast/?utm-source=blog-navbar", "anchor_text": "Podcasts"}, {"url": "https://courses.analyticsvidhya.com/courses/ebook-machine-learning-simplified?utm_source=bolg-navbar&utm_medium=homepage&utm_campaign=ebook", "anchor_text": "E-Books"}, {"url": "https://www.analyticsvidhya.com/corporate/?utm-source=blog-navbar", "anchor_text": "For Companies"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2019/?utm-source=blog-navbar", "anchor_text": "Datahack Summit"}, {"url": "https://dsat.analyticsvidhya.com/?utm-source=blog-navbar", "anchor_text": "DSAT"}, {"url": "https://www.analyticsvidhya.com/glossary-of-common-statistics-and-machine-learning-terms/?utm-source=blog-navbar", "anchor_text": "Glossary"}, {"url": "https://www.analyticsvidhya.com/blog-archive/?utm-source=blog-navbar", "anchor_text": "Archive"}, {"url": "https://lekhak.analyticsvidhya.com/write/", "anchor_text": "Write an Article"}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=blog_navbar&utm_medium=blackbelt_button", "anchor_text": "Certified AI & ML BlackBelt Plus"}, {"url": "https://bootcamp.analyticsvidhya.com/?utm_source=blog_navbar&utm_medium=bootcamp_button", "anchor_text": "Data Science Immersive Bootcamp"}, {"url": "https://courses.analyticsvidhya.com/collections?utm_source=blog_navbar&utm_medium=all_courses_button", "anchor_text": "All Courses"}, {"url": "https://datahack.analyticsvidhya.com/blogathon/?utm_source=blog&utm_medium=nav_bar", "anchor_text": "Blogathon"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2023/?utm_source=Blogs&utm_medium=Nav_Bar", "anchor_text": "Conference"}, {"url": "https://lekhak.analyticsvidhya.com/write/", "anchor_text": "Write an Article"}, {"url": "https://www.analyticsvidhya.com/creators-club/?utm-medium=blog-navbar&utm_source=creator_club_button", "anchor_text": "Creators Club"}, {"url": "https://id.analyticsvidhya.com/accounts/profile/", "anchor_text": "Manage your AV Account"}, {"url": "https://datahack.analyticsvidhya.com/user/?utm-source=blog-navbar", "anchor_text": "My Hackathons"}, {"url": "https://profile.analyticsvidhya.com/accounts/bookmarks/", "anchor_text": "My Bookmarks"}, {"url": "https://courses.analyticsvidhya.com/enrollments/?utm-source=blog-navbar", "anchor_text": "My Courses"}, {"url": "https://jobsnew.analyticsvidhya.com/jobs/myactive/?utm-source=blog-navbar", "anchor_text": "My Applied Jobs"}, {"url": "http://www.facebook.com/sharer.php?u=https%3A%2F%2Fwww.analyticsvidhya.com%2Fblog%2F2018%2F04%2Fguide-sequence-prediction-using-compact-prediction-tree-python%2F", "anchor_text": "Facebook"}, {"url": "http://twitter.com/share?text=A Guide to Sequence Prediction using Compact Prediction Tree (with codes in Python)&url=https%3A%2F%2Fwww.analyticsvidhya.com%2Fblog%2F2018%2F04%2Fguide-sequence-prediction-using-compact-prediction-tree-python%2F", "anchor_text": "Twitter"}, {"url": "http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fwww.analyticsvidhya.com%2Fblog%2F2018%2F04%2Fguide-sequence-prediction-using-compact-prediction-tree-python%2F", "anchor_text": "Linkedin"}, {"url": "https://www.analyticsvidhya.com/blog/author/nss/", "anchor_text": "NSS"}, {"url": "https://www.analyticsvidhya.com/blog/category/advanced/", "anchor_text": "Advanced"}, {"url": "https://www.analyticsvidhya.com/blog/category/algorithm/", "anchor_text": "Algorithm"}, {"url": "https://www.analyticsvidhya.com/blog/category/deep-learning/", "anchor_text": "Deep Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/machine-learning/", "anchor_text": "Machine Learning"}, {"url": "https://www.analyticsvidhya.com/blog/category/python-2/", "anchor_text": "Python"}, {"url": "https://www.analyticsvidhya.com/blog/category/sequence-modeling/", "anchor_text": "Sequence Modeling"}, {"url": "https://www.analyticsvidhya.com/blog/category/supervised/", "anchor_text": "Supervised"}, {"url": "https://www.analyticsvidhya.com/blog/2018/04/sequence-modelling-an-introduction-with-practical-use-cases/", "anchor_text": "A Must-Read Introduction to Sequence Modelling(with use cases)"}, {"url": "https://datahack.analyticsvidhya.com/contest/mckinsey-analytics-online-hackathon-recommendation/", "anchor_text": "Sequence Prediction Hackathon"}, {"url": "https://github.com/analyticsvidhya/CPT", "anchor_text": "here"}, {"url": "https://en.wikipedia.org/wiki/Trie", "anchor_text": "trie"}, {"url": "https://github.com/analyticsvidhya/CPT", "anchor_text": "here"}, {"url": "https://github.com/analyticsvidhya/CPT", "anchor_text": "CPT library"}, {"url": "https://www.analyticsvidhya.com/blog/tag/compact-prediction-tree/", "anchor_text": "compact prediction tree"}, {"url": "https://www.analyticsvidhya.com/blog/tag/cpt/", "anchor_text": "CPT"}, {"url": "https://www.analyticsvidhya.com/blog/tag/deep-learning/", "anchor_text": "deep learning"}, {"url": "https://www.analyticsvidhya.com/blog/tag/machine-learning/", "anchor_text": "machine learning"}, {"url": "https://www.analyticsvidhya.com/blog/tag/python/", "anchor_text": "python"}, {"url": "https://www.analyticsvidhya.com/blog/tag/sequence-prediction/", "anchor_text": "sequence prediction"}, {"url": "https://www.analyticsvidhya.com/datahack-summit-2023/?utm_source=blog_india&utm_medium=side_banner&utm_campaign=27-Apr-2023||&utm_content=generativeAI", "anchor_text": ""}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=blog_outside_india&utm_medium=side_banner&utm_campaign=24-Mar-2023||&utm_content=project#ReinforceProject", "anchor_text": ""}, {"url": "https://blackbelt.analyticsvidhya.com/plus?utm_source=RelatedArticles&utm_medium=blog", "anchor_text": "Become a full stack data scientist"}, {"url": "https://www.analyticsvidhya.com/blog/2021/04/best-boosting-algorithm-in-machine-learning-in-2021/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2018/04/guide-sequence-prediction-using-compact-prediction-tree-python/", "anchor_text": "Best Boosting Algorithm In Machine Learning In 2021"}, {"url": "https://www.analyticsvidhya.com/blog/2022/12/analytics-vidhyas-top-10-machine-learning-blogs-in-2022/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2018/04/guide-sequence-prediction-using-compact-prediction-tree-python/", "anchor_text": "Analytics Vidhya\u2019s Top 10 Machine Learning Blogs in 2022"}, {"url": "https://www.analyticsvidhya.com/blog/2015/11/quick-introduction-boosting-algorithms-machine-learning/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2018/04/guide-sequence-prediction-using-compact-prediction-tree-python/", "anchor_text": "Quick Introduction to Boosting Algorithms in Machine Learning"}, {"url": "https://www.analyticsvidhya.com/blog/2021/04/getting-into-random-forest-algorithms/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2018/04/guide-sequence-prediction-using-compact-prediction-tree-python/", "anchor_text": "Getting into Random Forest Algorithms"}, {"url": "https://www.analyticsvidhya.com/blog/2023/01/ensemble-learning-methods-bagging-boosting-and-stacking/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2018/04/guide-sequence-prediction-using-compact-prediction-tree-python/", "anchor_text": "Ensemble Learning Methods: Bagging, Boosting and Stacking"}, {"url": "https://www.analyticsvidhya.com/blog/2022/12/top-10-blogs-on-nlp-in-analytics-vidhya-2022/?utm_source=related_WP&utm_medium=https://www.analyticsvidhya.com/blog/2018/04/guide-sequence-prediction-using-compact-prediction-tree-python/", "anchor_text": "Top 10 blogs on NLP in Analytics Vidhya 2022"}, {"url": "https://www.analyticsvidhya.com/blog/author/nss/", "anchor_text": "NSS"}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/rahul105/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/sion/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/chirag676/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/barney6/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/arnab1408/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/prateekmaj21/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/creators-club/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/author/shanthababu/", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/creators/?utm-medium=blog-footer&utm_source=top-authors", "anchor_text": "view more"}, {"url": "https://play.google.com/store/apps/details?id=com.analyticsvidhya.android", "anchor_text": ""}, {"url": "https://apps.apple.com/us/app/analytics-vidhya/id1470025572", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/blog/2018/04/winning-solutions-codes-from-avs-signature-hackathon-lord-of-the-machines/", "anchor_text": "Winning Solutions & Codes from AV\u2019s Signature Hackathon \u2013 Lord of the Machines"}, {"url": "https://www.analyticsvidhya.com/blog/2018/04/tableau-prep-brand-new-tableau-product-data-cleaning/", "anchor_text": "Tableau Prep \u2013 Redefine Data Cleaning with Tableau"}, {"url": "https://www.analyticsvidhya.com/blog/2018/04/guide-sequence-prediction-using-compact-prediction-tree-python/#respond", "anchor_text": "Cancel reply"}, {"url": "https://www.analyticsvidhya.com/blog/2023/04/how-to-make-money-with-chatgpt/", "anchor_text": "Make Money While Sleeping: Side Hustles to Generate Passive Income.."}, {"url": "https://www.analyticsvidhya.com/blog/author/aayush1/", "anchor_text": "Aayush Tyagi -"}, {"url": "https://www.analyticsvidhya.com/blog/2023/04/google-bard-learnt-bengali-on-its-own-sundar-pichai/", "anchor_text": "Google Bard Learnt Bengali on Its Own: Sundar Pichai"}, {"url": "https://www.analyticsvidhya.com/blog/author/yana_khare/", "anchor_text": "Yana Khare -"}, {"url": "https://www.analyticsvidhya.com/blog/2023/04/freedomgpt-personal-bold-and-uncensored-chatbot-running-locally-on-your-pc/", "anchor_text": "FreedomGPT: Personal, Bold and Uncensored Chatbot Running Locally on Your.."}, {"url": "https://www.analyticsvidhya.com/blog/author/sabreena/", "anchor_text": "K.sabreena -"}, {"url": "https://www.analyticsvidhya.com/blog/2021/06/understanding-random-forest/", "anchor_text": "Understand Random Forest Algorithms With Examples (Updated 2023)"}, {"url": "https://www.analyticsvidhya.com/blog/author/sruthi94/", "anchor_text": "Sruthi E R -"}, {"url": "https://www.analyticsvidhya.com/", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.analyticsvidhya.android", "anchor_text": ""}, {"url": "https://apps.apple.com/us/app/analytics-vidhya/id1470025572", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/about/", "anchor_text": "About Us"}, {"url": "https://www.analyticsvidhya.com/team/", "anchor_text": "Our Team"}, {"url": "https://www.analyticsvidhya.com/careers/", "anchor_text": "Careers"}, {"url": "https://www.analyticsvidhya.com/contact/", "anchor_text": "Contact us"}, {"url": "https://www.analyticsvidhya.com/blog/", "anchor_text": "Blog"}, {"url": "https://datahack.analyticsvidhya.com/", "anchor_text": "Hackathon"}, {"url": "https://discuss.analyticsvidhya.com/", "anchor_text": "Discussions"}, {"url": "https://jobsnew.analyticsvidhya.com/", "anchor_text": "Apply Jobs"}, {"url": "https://www.analyticsvidhya.com/corporate/", "anchor_text": "Post Jobs"}, {"url": "https://courses.analyticsvidhya.com/", "anchor_text": "Trainings"}, {"url": "https://datahack.analyticsvidhya.com/", "anchor_text": "Hiring Hackathons"}, {"url": "https://www.analyticsvidhya.com/contact/", "anchor_text": "Advertising"}, {"url": "https://www.facebook.com/AnalyticsVidhya/", "anchor_text": ""}, {"url": "https://www.linkedin.com/company/analytics-vidhya/", "anchor_text": ""}, {"url": "https://www.youtube.com/channel/UCH6gDteHtH4hg3o2343iObA", "anchor_text": ""}, {"url": "https://twitter.com/analyticsvidhya", "anchor_text": ""}, {"url": "https://www.analyticsvidhya.com/privacy-policy/", "anchor_text": "Privacy Policy"}, {"url": "https://www.analyticsvidhya.com/terms/", "anchor_text": "Terms of Use"}, {"url": "https://www.analyticsvidhya.com/refund-policy/", "anchor_text": "Refund Policy"}, {"url": "https://www.analyticsvidhya.com/terms", "anchor_text": "I accept the Terms and Conditions"}, {"url": "https://www.analyticsvidhya.com/terms", "anchor_text": "I accept the Terms and Conditions"}, {"url": "https://www.analyticsvidhya.com/terms", "anchor_text": "I accept the Terms and Conditions"}, {"url": "https://www.analyticsvidhya.com/privacy-policy/", "anchor_text": "Privacy Policy"}, {"url": "https://www.analyticsvidhya.com/terms/", "anchor_text": "Terms of Use"}]}, "scrape_status": {"code": "1"}}