{"url": "https://towardsdatascience.com/system-design-of-url-shortening-service-b325b18c8f88", "time": 1683014343.219361, "path": "towardsdatascience.com/system-design-of-url-shortening-service-b325b18c8f88/", "webpage": {"metadata": {"title": "System Design of URL Shortening Service | by Ashis Chakraborty | Towards Data Science", "h1": "System Design of URL Shortening Service", "description": "System design is one of the most important and feared aspects of software engineering. This opinion comes from my own learning experience in an associate architecture course. When I started my\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/system-design-101-b8f15162ef7c?source=friends_link&sk=be3d26de1f9d1671b4abe379aae814f8", "anchor_text": "design a system", "paragraph_index": 2}, {"url": "https://medium.com/u/504c7870fdb6?source=post_page-----b325b18c8f88--------------------------------", "anchor_text": "Medium", "paragraph_index": 3}, {"url": "https://rb.gy/ln9zeb", "anchor_text": "rb.gy/ln9zeb", "paragraph_index": 23}, {"url": "https://en.wikipedia.org/wiki/Consistent_hashing", "anchor_text": "Consistent Hashing", "paragraph_index": 39}, {"url": "https://medium.com/@ashchk/all-the-article-links-in-one-place-85c8526ead70?source=friends_link&sk=7e6ee3a65895cc893a32f97d5496bed4", "anchor_text": "link", "paragraph_index": 54}, {"url": "https://tinyurl.com/y57d68fq", "anchor_text": "https://tinyurl.com/y57d68fq", "paragraph_index": 56}], "all_paragraphs": ["System design is one of the most important and feared aspects of software engineering. This opinion comes from my own learning experience in an associate architecture course. When I started my associate architecture course, I had a hard time understanding the idea of designing a system.", "One of the main reasons was that the terms used in software architecture books are pretty hard to understand at first, and there is no clear step by step guidelines. Everybody seems to have a different approach.", "So, I set out to design a system based on my experience of learning architecture courses. This is part of a series on system design for beginners (link is given below). For this one, let\u2019s design the URL shortening service.", "In Medium, we can see the URLs are pretty big, especially the friend links; while sharing an article, we tend to shorten the URL. Some of the known URL shortening services are TinyURL, bit.ly, goo.gl, rb.gy, etc. We are going to design such a URL shortening service.", "We need to clarify the goal of the system. System design is such a vast topic; if we don\u2019t narrow it down to a specific purpose, then it will become complicated to design the system, especially for newbies. URL shortening service provides shorter aliases for long URLs. When users hit the shortened links, they will be redirected to the original URL.", "In this segment, we decide the features of the system. What are the requirements we need to focus on? We may divide the system requirements into two parts:", "The user gives a URL as an input; our service should generate a shorter and unique alias of that URL. When users hit the shorter link, our system should redirect them to the original link. Links may expire after a duration. Users can specify the expiration time. We are not considering custom links by the user here.", "This is a requirement that the system has to deliver. It is the main goal of the system.", "Now for the more critical requirements that need to be analyzed. If we don\u2019t fulfill this requirement, it might be harmful to the business plan of the project. So, let\u2019s define our NFRs:", "The system should be highly available. If the service is down, all the URL redirections will fail. URL redirection should happen in real-time. Nobody should be able to predict the shortened links.", "Performance, modifiability, availability, scalability, reliability, etc. are some important quality requirements in system design. These \u2018ilities\u2019 are what we need to analyze for a system and determine if our system is designed properly.", "In this system, availability is the main quality attribute. Security is another important attribute. Normally, availability and scalability are important features for system design. Performance is by default important, nobody wants to build a system with worse performance, right?!", "Let\u2019s assume, one user may request for a new URL and use it 100 times for redirection. So, the ratio between write and read would be 1:100. So the system is read-heavy.", "How many URL requests do we need to handle in the service? Let\u2019s say we may get 200 URL requests per second. So, for a month\u2019s calculation, we can have 30 days * 24 hours * 3600 seconds*200 =~ 500 M requests.", "So, there can be almost 500M new URL shortening requests per month. Then, the redirection request would be 500M*100 = 50 Billion.", "For year count you have to multiply this number by 12.", "Let\u2019s assume, the system stores all the URL shortening request and their shortened link for 5 years. As we expect to have 500M new URLs every month, the total number of objects we expect to store will be 500 M * (5 * 12) months = 30 B.", "Now let\u2019s assume that each stored object will be approximately 100 bytes. We will need total storage of 30 billion * 100 bytes = 3 TB.", "If we want to cache some of the popular URLs that are frequently accessed and if we follow the 80\u201320 rule, meaning we keep a 20% request from the cache.", "Since we have 20K requests/second, we will be getting", "If we plan to cache 20% of these requests, we will need", "For newbies to system design, please remember, \u201cIf you are confused about where to start for the system design, try to start with the data flow.\u201d", "Now, one of the main tasks of the server-side components is generating a unique key for an input URL. Here, our input data is only a URL. So, we need to store them as a string. The output is another shortened version of the URL. If somebody clicks on that shortened URL, it will redirect to the original URL. Now, each output URL needs to be unique.", "For example, we may take a random shortened URL \u201crb.gy/ln9zeb\u201d. The last characters should form a unique key. So, our input is a long URL given by users.", "We need to compute a unique hash of the input URL. If we use base64 encoding, 6 characters long key will give us 64 ^(6)= ~68.7 billion possible strings, which should be enough for our system.", "Problem: If multiple users enter the same URL, the system should not provide the same shortened URL. What if some strings are duplicated, what would be the system\u2019s behavior?", "Solution: We may append the input URL with an increasing sequence number to each request URL. It should make the URL unique. But, the overflow of sequence numbers might be a problem. We may append user-id to the input URL assuming user-id be unique.", "In the system, user-id should be unique so that we can compute a unique hash. We can have a standalone Unique-key Generation Service(UGS) that generates random id beforehand and stores them in a database.", "Whenever we need a new key, we can take one of the already generated IDs. This approach can make things faster as while a new request comes, we don\u2019t need to create an ID, ensure its uniqueness, etc. UGS will ensure all the IDs are unique, and they can be stored in a database so that the IDs don\u2019t need to be generated every time.", "As we need one byte to store one character, we can store all these keys in:", "If we keep one copy of UGS, it\u2019s a single point of failure. So, we need to make a replica of UGS. If the primary server dies, the secondary one can handle the requests of the users.", "Each UGS server can cache some keys from key-DB. It can speed things up. But, we have to be careful; if one server dies before consuming all the keys, we will lose those keys. But, we may assume, this is acceptable since we have almost 68B unique six-letter keys.", "For ensuring availability, we need to ensure to remove a single point of failure in the system. Replication for Data will remove a single point of failure and provide backup. We can keep multiple replications to ensure database server reliability. And also, for uninterrupted service, other servers also need copies.", "In this system, we need to store billions of records. Each object we keep is possibly less than 1 KB. One URL data is not related to another. So, we can use a NoSQL database like Cassandra, DynamoDB, etc. A NoSQL choice would be easier to scale, which is one of our requirements.", "For supporting billions of URLs, we need to partition our database to divide and store our data into different DB servers.", "i) We can partition the database based on the first letter of the hash key. We can put keys starting with \u2018A\u2019 in one server, \u2018B\u2019 in another server. This is called Range Based Partitioning.", "The problem with this approach is that it can lead to unbalanced partitioning. For example, there are very few words starting with \u2018Z.\u2019 On the other hand; we may have too many URLs that begin with the letter \u2018E.\u2019", "We may combine less frequently occurring letters into one database partition.", "ii) We can also partition based on the hash of the objects we are storing. We may take the hash of the key to determine the partition in which we can store the data object. The hash function will generate a server number, and we will store the key in that server. This process can make the distribution more random. This is Hash-Based Partitioning.", "If this approach still leads to overloaded partitions, we need to use Consistent Hashing.", "We can cache URLs that are frequently accessed by the users. The UGS servers, before making a query to the database, may check if the cache has the desired URL. Then it does not need to make the query again.", "What will happen when the cache is full? We may replace an older not used link with a newer or popular URL. We may choose the Least Recently Used (LRU) cache eviction policy for our system. In this policy, we remove the least recently used URL first.", "We can add a load balancing layer at different places in our system, in front of the URL shortening server, database, and cache servers.", "We may use a simple Round Robin approach for request distribution. In this approach, LB distributes incoming requests equally among backend servers. This approach of LB is simple to implement. If a server is dead, LB will stop sending any traffic to it.", "Problem: If a server is overloaded, the LB will not stop sending a new request to that server in this approach. We might need an intelligent LB later.", "If the expiration time is reached for a URL, what would happen to the link?", "We can search in our datastores and remove them. The problem here is that if we chose to search for expired links to remove them from our data store, it would put a lot of pressure on our database.", "We can do it another way. We can slowly remove expired links periodically. Even if some dead links live longer, it should never be returned to users.", "If a user tries to access an expired link, we can remove the link and return an error to the user. A periodical clean up process can run to remove expired links from our database. As storage is getting cheaper, some links might stay there even if we miss while clean up.", "After removing the link, we can put it back in our database for reuse.", "We can store the access type (public/private) with each URL in the database. If a user tries to access a URL, which he does not have permission, the system can send an error (HTTP 401) back.", "In this system, we did not consider the UI part. And as this is a web service, so no client part is also discussed either. The unique key generation is an important part of this system. So, we added an extra service to create and store unique keys for URLs. For ensuring the availability of services, we used replication of servers so that if one goes down, others can still give service. Databases are also replicated to ensure data reliability. The cache server is used to store some popular queries to speed up the latency. And load balancer is added to distribute incoming requests equally among backend servers.", "Source: Grokking the System Design Interview Course.", "Thank you for reading the article. Have a good day\u00a0\ud83d\ude03", "This article is part of a series of system design for beginners. Here is the link.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Associate Architect, Samsung Electronics | Writer in free time, Like to read about technology & psychology | LinkedIn https://tinyurl.com/y57d68fq"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb325b18c8f88&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b325b18c8f88--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b325b18c8f88--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://ashchk.medium.com/?source=post_page-----b325b18c8f88--------------------------------", "anchor_text": ""}, {"url": "https://ashchk.medium.com/?source=post_page-----b325b18c8f88--------------------------------", "anchor_text": "Ashis Chakraborty"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F577e2119c7f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&user=Ashis+Chakraborty&userId=577e2119c7f2&source=post_page-577e2119c7f2----b325b18c8f88---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb325b18c8f88&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb325b18c8f88&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.pexels.com/@markusspiske?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Markus Spiske"}, {"url": "https://www.pexels.com/photo/working-pattern-internet-abstract-1089438/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Pexels"}, {"url": "https://towardsdatascience.com/system-design-101-b8f15162ef7c?source=friends_link&sk=be3d26de1f9d1671b4abe379aae814f8", "anchor_text": "design a system"}, {"url": "https://medium.com/u/504c7870fdb6?source=post_page-----b325b18c8f88--------------------------------", "anchor_text": "Medium"}, {"url": "https://rb.gy/ln9zeb", "anchor_text": "rb.gy/ln9zeb"}, {"url": "https://en.wikipedia.org/wiki/Consistent_hashing", "anchor_text": "Consistent Hashing"}, {"url": "https://medium.com/@ashchk/all-the-article-links-in-one-place-85c8526ead70?source=friends_link&sk=7e6ee3a65895cc893a32f97d5496bed4", "anchor_text": "link"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----b325b18c8f88---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/programming?source=post_page-----b325b18c8f88---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/technology?source=post_page-----b325b18c8f88---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/tag/design-thinking?source=post_page-----b325b18c8f88---------------design_thinking-----------------", "anchor_text": "Design Thinking"}, {"url": "https://medium.com/tag/software-architecture?source=post_page-----b325b18c8f88---------------software_architecture-----------------", "anchor_text": "Software Architecture"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb325b18c8f88&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&user=Ashis+Chakraborty&userId=577e2119c7f2&source=-----b325b18c8f88---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb325b18c8f88&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&user=Ashis+Chakraborty&userId=577e2119c7f2&source=-----b325b18c8f88---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb325b18c8f88&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b325b18c8f88--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb325b18c8f88&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b325b18c8f88---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b325b18c8f88--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b325b18c8f88--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b325b18c8f88--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b325b18c8f88--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b325b18c8f88--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b325b18c8f88--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b325b18c8f88--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b325b18c8f88--------------------------------", "anchor_text": ""}, {"url": "https://ashchk.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://ashchk.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ashis Chakraborty"}, {"url": "https://ashchk.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1K Followers"}, {"url": "https://tinyurl.com/y57d68fq", "anchor_text": "https://tinyurl.com/y57d68fq"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F577e2119c7f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&user=Ashis+Chakraborty&userId=577e2119c7f2&source=post_page-577e2119c7f2--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fed7e2cc3406e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsystem-design-of-url-shortening-service-b325b18c8f88&newsletterV3=577e2119c7f2&newsletterV3Id=ed7e2cc3406e&user=Ashis+Chakraborty&userId=577e2119c7f2&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}