{"url": "https://towardsdatascience.com/content-based-recommender-systems-28a1dbd858f5", "time": 1683013183.857297, "path": "towardsdatascience.com/content-based-recommender-systems-28a1dbd858f5/", "webpage": {"metadata": {"title": "Building a movie content based recommender using tf-idf | by Alexandre Escol\u00e0 Nixon | Towards Data Science", "h1": "Building a movie content based recommender using tf-idf", "description": "Over time, we rely more and more heavily on online platforms and applications such as Netflix, Amazon, Spotify etc. we are finding ourselves having to constantly choose from a wide range of options\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Netflix_Prize", "anchor_text": "Netflix Prize", "paragraph_index": 7}, {"url": "https://grouplens.org/datasets/movielens/", "anchor_text": "MovieLens dataset", "paragraph_index": 9}, {"url": "https://github.com/AlexanderNixon/Machine-learning-reads/blob/master/Movie-content-based-recommender-using-tf-idf.ipynb", "anchor_text": "here", "paragraph_index": 11}, {"url": "https://grouplens.org/datasets/movielens/", "anchor_text": "MovieLents dataset", "paragraph_index": 13}, {"url": "http://movielens.org", "anchor_text": "MovieLens web site", "paragraph_index": 13}, {"url": "https://en.wikipedia.org/wiki/Tf%E2%80%93idf", "anchor_text": "tf-idf", "paragraph_index": 23}, {"url": "https://en.wikipedia.org/wiki/Vector_space", "anchor_text": "vector representation", "paragraph_index": 24}, {"url": "https://en.wikipedia.org/wiki/Subset", "anchor_text": "superset", "paragraph_index": 31}, {"url": "https://en.wikipedia.org/wiki/Cosine_similarity", "anchor_text": "cosine similarity", "paragraph_index": 34}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise_distances.html", "anchor_text": "sklearn.metrics.pairwise", "paragraph_index": 38}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise.cosine_similarity.html", "anchor_text": "cosine_similarity", "paragraph_index": 38}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise.cosine_similarity.html", "anchor_text": "", "paragraph_index": 38}, {"url": "https://en.wikipedia.org/wiki/Cold_start_(recommender_systems)", "anchor_text": "cold-start", "paragraph_index": 50}], "all_paragraphs": ["Over time, we rely more and more heavily on online platforms and applications such as Netflix, Amazon, Spotify etc. we are finding ourselves having to constantly choose from a wide range of options.", "One may think that having many options is a good thing, as opposed to having very few, but an excess of options can lead to what is known as a \u201cdecision paralysis\u201d. As Barry Schwartz writes in The Paradox of Choice:", "\u201cA large array of options may discourage consumers because it forces an increase in the effort that goes into making a decision. So consumers decide not to decide, and don\u2019t buy the product. Or if they do, the effort that the decision requires detracts from the enjoyment derived from the results.\u201d", "Also resulting in another, more subtle, negative effect:", "\u201cA large array of options may diminish the attractiveness of what people actually choose, the reason being that thinking about the attractions of some of the unchosen options detracts from the pleasure derived from the chosen one.\u201d", "An obvious consequence of this, is that we end up not making any effort in scrutinising among multiple options unless it is made easier for us; in other words, unless these are filtered according to our preferences.", "This is why recommender systems have become a crucial component in platforms as the aforementioned, in which users have a myriad range of options available. Their success will heavily depend on their ability to narrow down the set of options available, making it easier for us to make a choice.", "A major drive in the field is Netflix, which is continuously advancing the state-of-the-art through research and by having sponsored the Netflix Prize between 2006 to 2009, which hugely energised research in the field.", "In addition, the Netflix\u2019s recommender has a huge presence in the platform. When we search for a movie, we immediately get a selection of similar movies which we are likely to enjoy too:", "This post starts by exposing the different paradigms in recommender systems, and goes through a hands on approach to a content based recommender. I\u2019ll be using the well known MovieLens dataset, and show how we could recommend new movies based on their features.", "This is the first in a series of two posts (perhaps more) on recommender systems, the upcoming one will be on Collaborative filtering.", "Find a jupyter notebook version of this post with all the code here.", "Most recommender systems make use of either or both collaborative filtering and content based filtering. Though current recommender systems typically combine several approaches into a hybrid system. Below is a general overview of these methods:", "One of the most used datasets to test recommender systems is the MovieLents dataset, which contains rating data sets from the MovieLens web site. For this blog entry I\u2019ll be using a dataset containing 1M anonymous ratings of approximately 4000 movies made by 6000 MovieLens users, released in 2/2003.", "Let\u2019s get a glimpse of the data contained in this dataset. We have three .csv files: ratings, users, and movies. The files will be loaded as pandas dataframes. We have a ratings file which looks like:", "The movies dataset is as follows:", "Having both a movie_id , title and a string with all genres separated by the character | .", "And the users dataset, with basic information about the user:", "As we\u2019ll explore in the next section, the genres alone can be used to provide a reasonably good content based recommendation. But before that, we need to analyse some important aspects.", "This will be a relevant aspect to take into account when building the content based recommender. We want to understand which genres really are relevant when it comes to defining a user\u2019s taste. A reasonable assumption is that it is precisely the unpopular genres that will be more relevant in characterising the user\u2019s taste.", "Or for a more visual representation we could plot a word-cloud with the genres:", "As you can see, the most frequent genres are Drama, Comedy and Action. We then have some other genres that are way less frequent such as Western, Fantasy or Sci-Fi. As I previously pointed out, the latter are those that we want to give the most importance to when recommending. But, why is that?", "As an example let\u2019s consider a user who wants to find a movie similar to \u201cThe Good, the Bad and the Ugly\u201d, which is a mixture of Western, Action and Adventure. Which genre do you think will be more relevant in terms of recommending a movie to this user? Presumably Western, since there will be many Action or Adventure movies, which are not Western, which could lead to recommending many none Western movies.", "For this post, we will be building quite a simple recommender, based on the movie genres. A fairly common approach for this problem is to use a tf-idf vectorizer.", "While this approach is more commonly used on a text corpus, it possesses some interesting properties that will be useful in order to obtain a vector representation of the data. The expression is defined as follows:", "Here we have the product of the term frequency, i.e. the amount of times a given term (genre) occurs in a document (genres of a movie), times the right side term, which basically scales the term frequency depending on the amount of times a given term appears in all documents (movies).", "The fewer movies that contain a given genre (df_i), the higher the resulting weight. The logarithm is basically there to smooth the result of the division, i.e. avoids huge differences as a result of the right hand term.", "So why is this useful in our case?", "As already mentioned, tf-idf will help capture the important genres of each movie by giving a higher weight to the less frequent genres, which we wouldn\u2019t get with say, a CountVectorizer .", "To obtain the tf-idf vectors I\u2019ll be using sklearn\u2019s TfidfVectorizer . However, we have to take into account some aspects particular to this problem. The usual setup when dealing with text data, is to set a word analyser and perhaps an ngram_range , which will also include the n-grams within the specified range. An example would be:", "However, that doesn\u2019t really make sense in this case, since the order of the genres is not relevant, we want to account for the combinations of genres for a given movie, regardless of the order. So for the example above, we\u2019d want:", "Here we\u2019re finding the sets of combinations of genres up to k (4 here), or in mathematical terms, the superset. Including the n>1 combinations of genres, will mean that the tf-idf vectorizer will also take into account how frequent these combinations are among all movies, assigning a higher score to those that appear the least.", "We can apply the above logic using the analyser parameter, which we can use to obtain the sequence of features from the raw input using a callable:", "This will result in the following tf-idf vectors (note that only a subset of the columns and rows is sampled):", "The next step will be to find similar tf-idf vectors (movies). Recall that we\u2019ve encoded each movie\u2019s genre into a tf-idf representation, now we want to define a proximity measure. A commonly used measure is the cosine similarity.", "This similarity measure owns its name to the fact that it equals to the cosine of the angle between the two vectors being compared. The lower the angle between two vectors, the higher the cosine will be, hence yielding a higher similarity factor. It is expressed as follows:", "Where, since the inner product can be expressed as the product of the magnitudes times the cosine of the angle between the two vectors, it becomes clear that the above can be expressed as the cosine:", "So the measure is obtained by taking the inner product between both vectors, and normalising by their respective magnitudes, resulting in the cosine between both vectors.", "To compute the cosine similarities between all tf-idf vectors, we can again use scikit-learn. sklearn.metrics.pairwise contains many pairwise distance metrics, among them cosine_similarity , which will compute the cosine similarities between all the input rows, in this case tf-idf vectors:", "Now we have to define some logic to find the highest weights or tf-idf scores for a given movie. For that I\u2019ve defined the following function, which takes as input a given movie i, the similarity matrix M, the items dataframe and returns up to k recommendations:", "By usingargpartition we take the k highest values in M(similarity matrix) on a given index (movie) i . We then index on the columns in M , and further slice to get from highest weights to lowest (excluding the the highest, which will be the same item, bare in mind that the matrix is symmetric, hence the 2s in the second line).", "Let\u2019s test the recommender with a few examples. Since the movies dataset contains movies of up to 2000, we will have to be using some all time classics.", "We can see that its genres are Drama|Mystery|Sci-Fi|Thriller . Let\u2019s see what recommendations we get! :)", "As expected, the most similar movies are those which share the most genres. Interestingly, we see that most of them are Sci-Fi movies. Note that this is likely to be influenced by the fact that Sci-Fi will mostly have the higher score among the genres that appear above, since it is the least frequent and hence has a higher weight.", "Let\u2019s try with Contact, of my fave Sci-Fi movies:", "There seem to be many movies that share the same genres, hence we get all Drama|Sci-fi movies recommended.", "Let\u2019s try now with an animation movie like 'The Jungle Book':", "There appear to be two movies that share the exact same combination of genres, and similarly with the rest but without the Comedy genre.", "Or let\u2019s try with a last one, 'Saving private Ryan' :", "Overall, we\u2019ve seen that quite a naive content based recommender can provide fairly good results.", "A clear advantage of content based recommenders is that they don\u2019t suffer from the cold-start problem, since we only need basic information on a user (in this case a single movie) to provide similar recommendations based on the items. Another interesting advantage is that we are able to recommend to users with unique tastes, which can be a lot more challenging with collaborative filtering methods.", "An important drawback however is that it tends to recommend the same type of items to the user. In order to be able to recommend a different type of item, the user would have to have rated or have shown interest in the new type of item. This is a problem that Collaborative Filtering methods don\u2019t have, since the match here is done between neighbouring users with similar tastes, but different items rated.", "Thanks a lot for taking the time to read this post and I hope you enjoyed it :)", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Personal interests \u2014 mainly photography and AI"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F28a1dbd858f5&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://alexandr-nixon.medium.com/?source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": ""}, {"url": "https://alexandr-nixon.medium.com/?source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": "Alexandre Escol\u00e0 Nixon"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6f77c7bf8755&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&user=Alexandre+Escol%C3%A0+Nixon&userId=6f77c7bf8755&source=post_page-6f77c7bf8755----28a1dbd858f5---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F28a1dbd858f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F28a1dbd858f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@lysanderyuen?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Lysander Yuen"}, {"url": "https://unsplash.com/s/photos/books-prague?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://en.wikipedia.org/wiki/Netflix_Prize", "anchor_text": "Netflix Prize"}, {"url": "https://grouplens.org/datasets/movielens/", "anchor_text": "MovieLens dataset"}, {"url": "https://github.com/AlexanderNixon/Machine-learning-reads/blob/master/Movie-content-based-recommender-using-tf-idf.ipynb", "anchor_text": "here"}, {"url": "https://grouplens.org/datasets/movielens/", "anchor_text": "MovieLents dataset"}, {"url": "http://movielens.org", "anchor_text": "MovieLens web site"}, {"url": "https://en.wikipedia.org/wiki/Tf%E2%80%93idf", "anchor_text": "tf-idf"}, {"url": "https://en.wikipedia.org/wiki/Vector_space", "anchor_text": "vector representation"}, {"url": "https://en.wikipedia.org/wiki/Subset", "anchor_text": "superset"}, {"url": "https://en.wikipedia.org/wiki/Cosine_similarity", "anchor_text": "cosine similarity"}, {"url": "https://en.wikipedia.org/wiki/Cosine_similarity", "anchor_text": "source"}, {"url": "https://en.wikipedia.org/wiki/Cosine_similarity", "anchor_text": "source"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise_distances.html", "anchor_text": "sklearn.metrics.pairwise"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise.cosine_similarity.html", "anchor_text": "cosine_similarity"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise.cosine_similarity.html", "anchor_text": ""}, {"url": "https://en.wikipedia.org/wiki/Cold_start_(recommender_systems)", "anchor_text": "cold-start"}, {"url": "https://medium.com/tag/data-science?source=post_page-----28a1dbd858f5---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----28a1dbd858f5---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/recommendation-system?source=post_page-----28a1dbd858f5---------------recommendation_system-----------------", "anchor_text": "Recommendation System"}, {"url": "https://medium.com/tag/recommendations?source=post_page-----28a1dbd858f5---------------recommendations-----------------", "anchor_text": "Recommendations"}, {"url": "https://medium.com/tag/python?source=post_page-----28a1dbd858f5---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F28a1dbd858f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&user=Alexandre+Escol%C3%A0+Nixon&userId=6f77c7bf8755&source=-----28a1dbd858f5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F28a1dbd858f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&user=Alexandre+Escol%C3%A0+Nixon&userId=6f77c7bf8755&source=-----28a1dbd858f5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F28a1dbd858f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F28a1dbd858f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----28a1dbd858f5---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----28a1dbd858f5--------------------------------", "anchor_text": ""}, {"url": "https://alexandr-nixon.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://alexandr-nixon.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Alexandre Escol\u00e0 Nixon"}, {"url": "https://alexandr-nixon.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "115 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6f77c7bf8755&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&user=Alexandre+Escol%C3%A0+Nixon&userId=6f77c7bf8755&source=post_page-6f77c7bf8755--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F61596630de2c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcontent-based-recommender-systems-28a1dbd858f5&newsletterV3=6f77c7bf8755&newsletterV3Id=61596630de2c&user=Alexandre+Escol%C3%A0+Nixon&userId=6f77c7bf8755&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}