{"url": "https://towardsdatascience.com/custom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e", "time": 1683009749.3769758, "path": "towardsdatascience.com/custom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e/", "webpage": {"metadata": {"title": "Custom neural networks in Keras: a street fighter\u2019s guide to build a graphCNN | by Shuyi Yang | Towards Data Science", "h1": "Custom neural networks in Keras: a street fighter\u2019s guide to build a graphCNN", "description": "How to build neural networks with custom structure with Keras Functional API and custom layers with user defined operations. In this tutorial we are going to build a Graph Convolutional Neural Network (GCNN)."}, "outgoing_paragraph_urls": [{"url": "https://tkipf.github.io/graph-convolutional-networks/", "anchor_text": "graphCNN is much more", "paragraph_index": 1}, {"url": "https://relational.fit.cvut.cz/dataset/CORA", "anchor_text": "CORA", "paragraph_index": 4}, {"url": "https://keras.io/guides/functional_api/", "anchor_text": "Keras Functional API", "paragraph_index": 14}, {"url": "https://en.wikipedia.org/wiki/Semi-supervised_learning", "anchor_text": "semi-supervised learning", "paragraph_index": 22}, {"url": "https://github.com/ngshya/tf-notes/blob/master/graphcnn_keras_custom_layer.ipynb", "anchor_text": "here", "paragraph_index": 23}], "all_paragraphs": ["At a certain point in our lives, predefined layers in Tensorflow Keras are not enough anymore! We want more! We want to build custom neural networks with creative structures and bizarre layers! Luckily for us, we can easily perform this task within Keras by defining our custom layers and models. In this step-by-step tutorial we are going to build a neural network with parallel layers including graph convolutional one. Wait a minute! What is the convolution on a graph?", "In a traditional neural network layer we perform a matrix multiplication between the layer input matrix X and the trainable weights matrix W. Then we apply an activation function f. Hence, the input of the next layer (output of the current layer) can be represented as f(XW). In a graph convolutional neural network, we suppose that similar instances are connected in a graph (eg. citation network, distance-based networks, etc.) and the features coming from the neighborhood could be useful in a (un)supervised task. Let A be the adjacency matrix of the graph, then the operation we are going to perform in a convolutional layer is f(AXW). For each node of the graph, we are going to aggregate the features from other connected nodes and then multiply this aggregation by the weights matrix and then apply the activation. This formulation of graph convolution is the simplest one. It\u2019s fine for our tutorial but graphCNN is much more!", "Firstly, we need to import some packages.", "You should receive as output the versions of the imported packages. In my case the output is:", "In this tutorial, we are going to use the CORA dataset:", "The Cora dataset consists of 2708 scientific publications classified into one of seven classes. The citation network consists of 5429 links. Each publication in the dataset is described by a 0/1-valued word vector indicating the absence/presence of the corresponding word from the dictionary. The dictionary consists of 1433 unique words.", "Let\u2019s load the data, create the adjacency matrix and prepare the features matrix.", "Lastly, let\u2019s define some parameters useful for the training of neural networks.", "As you can deduce from the code above, for each model, we are going to perform 50 iterations and in each iteration we will randomly choose a 10% labeled set (training set) and train the model for 100 epochs.", "It is important to point out that the scope of this tutorial is not training the most accurate model on CORA dataset. Instead, we just want to provide an example of implementing custom models with keras custom layers!", "As baseline, we use a standard neural network with sequential layers (a familiar keras sequential model).", "We can plot the model to see the sequential structure.", "Let\u2019s see how this model perform.", "You should obtain an average accuracy of 55%.", "Let\u2019s introduce a small modification to the previous model. This time we want to have a network with two parallel hidden layers. We use Keras Functional API. With the functional API we can build models with non-linear topology, models with shared layers, and models with multiple inputs or outputs. Basically, we need to assign each layer to a variable and then refer to the variable to concatenate different layers in order to create a directed acyclic graph (DAG). Then the model can be built by passing the input layer(s) and the output layer(s).", "The parallel layers m2_dense_layer_1 and m2_dense_layer_2 depend on the same input layer m2_input_layer, and are then concatenated to form a unique layer in m2_merged_layer. This neural network should look like:", "So far, we have seen how to create custom network structure with Keras Functional API. What if we need to define custom layers with user-defined operations? In our case, we would like to define a simple graph convolutional layer as explained at the beginning of this tutorial. To this end, we need to create a subclass from the class Layer and define the methods __init__, build and call.", "During the inititialization, you can require and save any useful parameter (eg. activation function, number of output neurons). In our example, we require also the adjacency matrix A. In the build method, the trainable weights of the layer are initialized. In the call method, the forward pass computation is declared.", "As in the previous model, we define a network with parallel layers.", "It looks like the previous model but one layer is convolutional: intrinsict features of each instance are concatenated with the aggregated features computed from the neighbourhood.", "Further attention should be paid when compiling this model. Since the convolutional layer requires the entire adjacency matrix, we need to pass the entire features matrix (labeled and unlabeled instances) but the model should be trained only on labeled instances. Therefore, we define a custom loss function where the sparse categorical cossentropy is computed only on the labeled instances. Additionally, we randomize the labels of unlabaled instances in order to be sure that they are not used during the training.", "This experiment produces an average accuracy of 63% (+3).", "Interestingly, in this last experiment we are basically performing a semi-supervised learning with graphCNN: information from the unlabeled instances are used altogether with the labeled ones to build a graph-based transductive model.", "The complete Jupyter Notebook containing the code can be found here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "What the caterpillar calls the end, the rest of the world calls a butterfly. \u2014 Lao Tze"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe91f6b05f12e&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@ngshya?source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ngshya?source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": "Shuyi Yang"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5d761ee9c9c9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&user=Shuyi+Yang&userId=5d761ee9c9c9&source=post_page-5d761ee9c9c9----e91f6b05f12e---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe91f6b05f12e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe91f6b05f12e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://tkipf.github.io/graph-convolutional-networks/", "anchor_text": "graphCNN is much more"}, {"url": "https://relational.fit.cvut.cz/dataset/CORA", "anchor_text": "CORA"}, {"url": "https://keras.io/guides/functional_api/", "anchor_text": "Keras Functional API"}, {"url": "https://en.wikipedia.org/wiki/Semi-supervised_learning", "anchor_text": "semi-supervised learning"}, {"url": "https://github.com/ngshya/tf-notes/blob/master/graphcnn_keras_custom_layer.ipynb", "anchor_text": "here"}, {"url": "https://tkipf.github.io/graph-convolutional-networks/", "anchor_text": "https://tkipf.github.io/graph-convolutional-networks/"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras", "anchor_text": "https://www.tensorflow.org/api_docs/python/tf/keras"}, {"url": "https://www.linkedin.com/in/shuyiyang/", "anchor_text": "LinkedIn"}, {"url": "https://twitter.com/deltarule", "anchor_text": "Twitter"}, {"url": "https://medium.com/tag/graphcnn?source=post_page-----e91f6b05f12e---------------graphcnn-----------------", "anchor_text": "Graphcnn"}, {"url": "https://medium.com/tag/gcnn?source=post_page-----e91f6b05f12e---------------gcnn-----------------", "anchor_text": "Gcnn"}, {"url": "https://medium.com/tag/keras?source=post_page-----e91f6b05f12e---------------keras-----------------", "anchor_text": "Keras"}, {"url": "https://medium.com/tag/custom-layer?source=post_page-----e91f6b05f12e---------------custom_layer-----------------", "anchor_text": "Custom Layer"}, {"url": "https://medium.com/tag/keras-functional-api?source=post_page-----e91f6b05f12e---------------keras_functional_api-----------------", "anchor_text": "Keras Functional Api"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe91f6b05f12e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&user=Shuyi+Yang&userId=5d761ee9c9c9&source=-----e91f6b05f12e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe91f6b05f12e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&user=Shuyi+Yang&userId=5d761ee9c9c9&source=-----e91f6b05f12e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe91f6b05f12e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe91f6b05f12e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e91f6b05f12e---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e91f6b05f12e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ngshya?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ngshya?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Shuyi Yang"}, {"url": "https://medium.com/@ngshya/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "269 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5d761ee9c9c9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&user=Shuyi+Yang&userId=5d761ee9c9c9&source=post_page-5d761ee9c9c9--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F9d3f358e1d08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcustom-neural-networks-in-keras-a-street-fighters-guide-to-build-a-graphcnn-e91f6b05f12e&newsletterV3=5d761ee9c9c9&newsletterV3Id=9d3f358e1d08&user=Shuyi+Yang&userId=5d761ee9c9c9&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}