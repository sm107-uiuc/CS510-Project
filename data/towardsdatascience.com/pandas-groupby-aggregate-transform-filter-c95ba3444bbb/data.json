{"url": "https://towardsdatascience.com/pandas-groupby-aggregate-transform-filter-c95ba3444bbb", "time": 1683001309.238792, "path": "towardsdatascience.com/pandas-groupby-aggregate-transform-filter-c95ba3444bbb/", "webpage": {"metadata": {"title": "Pandas\u2019 groupby explained in detail | by Fabian Bosler | Towards Data Science", "h1": "Pandas\u2019 groupby explained in detail", "description": "Learn how to master all Pandas\u2019 groupby functionalities, like agg(regation), transform and filter \u2014 code-along guide plenty of examples. Detailed explanations and multiple examples"}, "outgoing_paragraph_urls": [{"url": "https://github.com/FBosler/GroupByExplained", "anchor_text": "here", "paragraph_index": 3}, {"url": "https://towardsdatascience.com/learn-advanced-features-for-pythons-main-data-analysis-library-in-20-minutes-d0eedd90d086#cfea", "anchor_text": "here", "paragraph_index": 13}, {"url": "http://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases", "anchor_text": "documentation", "paragraph_index": 20}, {"url": "https://pandas.pydata.org/pandas-docs/stable/getting_started/basics.html#descriptive-statistics", "anchor_text": "here", "paragraph_index": 33}, {"url": "https://www.linkedin.com/in/fbosler/", "anchor_text": "LinkedIn", "paragraph_index": 45}, {"url": "https://medium.com/@fabianbosler/membership", "anchor_text": "https://medium.com/@fabianbosler/membership", "paragraph_index": 49}], "all_paragraphs": ["Writing articles about Pandas is the best. The part I love most about it is when I get to search the interwebs for cute panda pictures. Cmon, how can you not love panda bears? And groups of pandas, even better! Anyway, I digress \u2026", "Pandas\u2019 groupby is undoubtedly one of the most powerful functionalities that Pandas brings to the table. However, most users only utilize a fraction of the capabilities of groupby.", "Groupby allows adopting a split-apply-combine approach to a data set. This approach is often used to slice and dice data in such a way that a data analyst can answer a specific question.", "You can find the full Jupyter Notebook here. But I urge you to go through the steps yourself. After all, practice makes perfect.", "We are going to use data from a hypothetical sales division. The data set consists, among other columns, of fictitious sales reps, order leads, the company the deal might close with, order values, and the date of the lead.", "The default approach of calling groupby is by explicitly providing a column name to split the dataset by. However, and this is less known, you can also pass a Series to groupby. The only restriction is that the series has the same length as the DataFrame.Being able to pass a series means that you can group by a processed version of a column, without having to create a new helper column for that.", "First, let\u2019s create a grouped DataFrame, i.e., split the dataset up.", "We have now created a DataFrameGroupBy object. Let\u2019s further investigate:", "Calling groups on the grouped object returns the list of indices for every group (as every row can be uniquely identified via its index)", "By calling get_group with the name of the group, we can return the respective subset of the data.", "To demonstrate some advanced grouping functionalities, we will use the simplest version of the apply step (and count the rows in each group) via the size method. We do this so that we can focus on the groupby operations.", "We will go into much more detail regarding the apply methods in section 2 of the article.", "The following is the first example where we group by a variation of one of the existing columns. I find this is a vast improvement over creating helper columns all the time. It just keeps the data cleaner.", "In this example, we use a string accessor to retrieve the first name. You can read up on accessors here.", "We saw that there seem to be a lot of Williams, lets group all sales reps who have William in their name together.", "This example is \u2014 admittedly \u2014 silly, but it illustrates the point that you can group by arbitrary series quite well.", "In the following example, we apply qcut to a numerical column first. qcut allocates the data equally into a fixed number of bins.", "Like in the previous example, we allocate the data to buckets. This time, however, we also specify the bin boundaries.", "pd.Grouper is important! This one took me way too long to learn, as it is incredibly helpful when working with time-series data.", "In the following example, we are going to use pd.Grouper(key=<INPUT COLUMN>, freq=<DESIRED FREQUENCY>) to group our data based on the specified frequency for the specified column. In our case, the frequency is 'Y' and the relevant column is 'Date'.", "Instead of 'Y' we can use different standard frequencies like 'D','W','M', or 'Q'. For a list of less common usable frequencies, check out the documentation.I found'SM' for semi-month end frequency (15th and end of the month) to be an interesting one.", "So far, we have only grouped by one column or transformation. The same logic applies when we want to group by multiple columns or transformations. All we have to do is to pass a list to groupby.", "In the previous section, we discussed how to group the data based on various conditions. This section deals with the available functions that we can apply to the groups before combining them to a final result.", "If you are anything like me when I started using groupby, you are probably using a combination of \ud83c\udd50 and \ud83c\udd51 along the lines of:", "Where mean could also be another function.", "The good news: All of them work. And most of the time, the result is approximately going to be what you expected it to be.", "The bad news: There are nuances to apply and agg that are worthwhile delving into.", "Additionally, but much more importantly two lesser-known powerful functions can be used on a grouped object, filter and transform.", "Apply is somewhat confusing, as we often talk about applying functions while there also is an apply function. But bear with me. The apply function applies a function along an axis of the DataFrame. The application could be either column-wise or row-wise.apply is not strictly speaking a function that can only be used in the context of groupby. You can also use apply on a full dataframe, like in the following example (where we use the _ as a throw-away variable).", "But apply can also be used in a groupby context. Which makes sense, because each group is a smaller DataFrame in its own right. Keep in mind that the function will be applied to the entire DataFrame. Applying the function to the whole DataFrame means typically that you want to select the columns you are applying a function to. We will leave it at the following two examples and instead focus on agg(regation) which is the \u201cintended\u201d way of aggregating groups.", "Please note that agg and aggregate can be used interchangeably. agg is shorter, so this is what I will be using going forward.", "Aggregate is by and large the most powerful of the bunch. Let\u2019s dissect above image and primarily focus on the righthand part of the process. The following code snippet creates a larger version of the above image.", "We pass a dictionary to the aggregation function, where the keys (i.e. Order Id, Val, Sale) are the columns and the values ('size', ['sum','mean'], ['sum','mean']) are the functions to be applied to the respective columns.", "Note that the functions can either be a single function or a list of functions (where then all of them will be applied). Also, note that agg can work with function names (i.e., strings) or actual function (i.e., Python objects). A non-exhaustive list of functions can be found here. The ones I use most frequently are:", "Now, One problem, when applying multiple aggregation functions to multiple columns this way, is that the result gets a bit messy, and there is no control over the column names. In the past, I often found myself aggregating a DataFrame only to rename the results directly afterward. I always found that a bit inefficient.", "Situations like this are where pd.NamedAgg comes in handy. pd.NamedAgg was introduced in Pandas version 0.25 and allows to specify the name of the target column.", "running the above snippet results in:", "While agg returns a reduced version of the input, transform returns an on a group-level transformed version of the full data. The new output data has the same length as the input data. For users coming from SQL, think of transform as a window function.", "A typical example is to get the percentage of the groups total by dividing by the group-wise sum.", "Unlike agg, transform is typically used by assigning the results to a new column. In our above example, we could do:", "Check out this article to learn how to use transform to get rid of missing values for example.", "Filter, as the name suggests, does not change the data in any capacity, but instead selects a subset of the data. For users coming from SQL, think of filter as the HAVING condition.", "We could for example filter for all sales reps who have at least made 200k", "Or all sales Reps with a conversion rate of > 30%:", "In this article, you learned how to group DataFrames like a real Pandas pro. You learned a plethora of ways to group your data. You learned to differentiate between apply and agg. You learned and applied the most common aggregation functions. You have seen the less commonly used transform and filter put to good use.", "Please connect on LinkedIn if you want to have a chat! I\u2019d love to have a conversation or answer any questions that you might have.", "Also, check out the other articles I wrote on Medium", "Good job, and thanks for reading!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "EX-Consultant turned tech geek! Business intelligence, marketing, advanced analytics, and machine learning. \ud83d\udc49 https://medium.com/@fabianbosler/membership \ud83d\udc48"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fc95ba3444bbb&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@fabianbosler?source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@fabianbosler?source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": "Fabian Bosler"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1a2df7c24f4f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&user=Fabian+Bosler&userId=1a2df7c24f4f&source=post_page-1a2df7c24f4f----c95ba3444bbb---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc95ba3444bbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc95ba3444bbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.economist.com/china/2016/09/08/survival-of-the-cutest", "anchor_text": "Source"}, {"url": "https://github.com/FBosler/GroupByExplained", "anchor_text": "here"}, {"url": "https://unsplash.com/@nasa?utm_source=medium&utm_medium=referral", "anchor_text": "NASA"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://raw.githubusercontent.com/FBosler/Medium-Data-Exploration/master/order_leads.csv'", "anchor_text": "https://raw.githubusercontent.com/FBosler/Medium-Data-Exploration/master/order_leads.csv'"}, {"url": "https://raw.githubusercontent.com/FBosler/Medium-Data-Exploration/master/sales_team.csv'", "anchor_text": "https://raw.githubusercontent.com/FBosler/Medium-Data-Exploration/master/sales_team.csv'"}, {"url": "https://unsplash.com/@chris23?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Chris Child"}, {"url": "https://unsplash.com/s/photos/splitting-wood?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://towardsdatascience.com/learn-advanced-features-for-pythons-main-data-analysis-library-in-20-minutes-d0eedd90d086#cfea", "anchor_text": "here"}, {"url": "http://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases", "anchor_text": "documentation"}, {"url": "https://unsplash.com/@andrewwelch3?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "andrew welch"}, {"url": "https://unsplash.com/s/photos/glue-together?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/getting_started/basics.html#descriptive-statistics", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/using-pandas-transform-and-apply-to-deal-with-missing-data-on-a-group-level-cb6ccf060531", "anchor_text": "Using Panda\u2019s \u201ctransform\u201d and \u201capply\u201d to deal with missing data on a group levelLearn what to do when you don\u2019t want to simply discard missing data.towardsdatascience.com"}, {"url": "https://www.linkedin.com/in/fbosler/", "anchor_text": "LinkedIn"}, {"url": "https://medium.com/tag/data-science?source=post_page-----c95ba3444bbb---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----c95ba3444bbb---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-analytics?source=post_page-----c95ba3444bbb---------------data_analytics-----------------", "anchor_text": "Data Analytics"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----c95ba3444bbb---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/tag/technology?source=post_page-----c95ba3444bbb---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc95ba3444bbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&user=Fabian+Bosler&userId=1a2df7c24f4f&source=-----c95ba3444bbb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc95ba3444bbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&user=Fabian+Bosler&userId=1a2df7c24f4f&source=-----c95ba3444bbb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc95ba3444bbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fc95ba3444bbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----c95ba3444bbb---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----c95ba3444bbb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@fabianbosler?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@fabianbosler?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Fabian Bosler"}, {"url": "https://medium.com/@fabianbosler/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2.3K Followers"}, {"url": "https://medium.com/@fabianbosler/membership", "anchor_text": "https://medium.com/@fabianbosler/membership"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1a2df7c24f4f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&user=Fabian+Bosler&userId=1a2df7c24f4f&source=post_page-1a2df7c24f4f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F85b3b5e26759&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpandas-groupby-aggregate-transform-filter-c95ba3444bbb&newsletterV3=1a2df7c24f4f&newsletterV3Id=85b3b5e26759&user=Fabian+Bosler&userId=1a2df7c24f4f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}