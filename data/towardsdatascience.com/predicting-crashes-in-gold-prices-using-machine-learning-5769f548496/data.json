{"url": "https://towardsdatascience.com/predicting-crashes-in-gold-prices-using-machine-learning-5769f548496", "time": 1683006673.8951318, "path": "towardsdatascience.com/predicting-crashes-in-gold-prices-using-machine-learning-5769f548496/", "webpage": {"metadata": {"title": "Predicting Crashes in Gold Prices Using Machine Learning | by Riazuddin Mohammad | DataDrivenInvestor", "h1": "Predicting Crashes in Gold Prices Using Machine Learning", "description": "In the previous two parts of the Gold Prediction series, we discussed how to import data from free yahoofinancials API and build a regression model to predict the return from Gold over two horizons\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/machine-learning-to-predict-gold-price-returns-4bdb0506b132", "anchor_text": "Gold Prediction", "paragraph_index": 0}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Classification/Gold%20Prediction%20Experiment%20%20Classification-%20PyCaret.ipynb", "anchor_text": "notebook", "paragraph_index": 2}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Training%20Data.csv", "anchor_text": "here", "paragraph_index": 2}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Classification/Gold%20Prediction%20Experiment%20%20Classification-%20PyCaret.ipynb", "anchor_text": "notebook", "paragraph_index": 18}, {"url": "https://towardsdatascience.com/ensemble-methods-bagging-boosting-and-stacking-c9214a10a205", "anchor_text": "\u2018Bagging\u2019 and \u2018Boosting\u2019", "paragraph_index": 23}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Classification/Gold%20Prediction%20Experiment%20%20Classification-%20PyCaret.ipynb", "anchor_text": "notebook", "paragraph_index": 24}, {"url": "https://www.geeksforgeeks.org/stacking-in-machine-learning/", "anchor_text": "Stacking models", "paragraph_index": 27}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Classification/22D%20Classifier.pkl", "anchor_text": "\u201c22D Classifier\u201d", "paragraph_index": 32}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Classification/Gold%20Prediction%20New%20Data%20-%20Classification.ipynb", "anchor_text": "Gold Prediction New Data \u2014 Classification\u2019", "paragraph_index": 33}, {"url": "https://towardsdatascience.com/machine-learning-to-predict-gold-price-returns-4bdb0506b132", "anchor_text": "regression", "paragraph_index": 37}, {"url": "https://thenextderivative.substack.com/", "anchor_text": "https://thenextderivative.substack.com/", "paragraph_index": 39}], "all_paragraphs": ["In the previous two parts of the Gold Prediction series, we discussed how to import data from free yahoofinancials API and build a regression model to predict the return from Gold over two horizons. i.e 14-Day and 22-Day.", "In this part, we will try to predict if there would be a \u2018sharp fall\u2019 or \u2018crash\u2019 in Gold Prices over the next 22-Day period. We would be using a classification technique for this experiment. We will also learn how to use the trained model to make a prediction on new data every day. The steps for this exercise would be:", "This part is exactly the same as we did in Part I. The notebook contains the entire code chunk for data import and manipulation or you can directly start by loading the dataset which can be downloaded from the link here.", "Any classification problem needs labels. Here we need to create labels by defining and quantifying \u2018sharp fall\u2019.", "To define \u2018sharp\u2019, I am defining a threshold such that the probability of returns being lower than the threshold for any window (22 Days here and 14 Days here) is 15% (basically left tail of normal distribution with p=0.15). For this, I will need to assume that the distribution of returns is normal. Looking at the distribution of returns, this is a very reasonable assumption to make.", "To get to the threshold return level for both the windows (14-Day and 22-Day), I would first define the p-value of the left tail of the distribution, which would be 15% in this case. Using this p-value, we get the z-value of the -1.0364 from a standard normal distribution. The following code would do it for us.", "Now, based on the above z-value and Mean and SD of returns for each window, we will get threshold return levels. The forward returns for 14 Day and 22 Day period are in columns \u201cGold-T+14\u201d and \u201cGold-T+22\u201d in the \u2018data\u2019.", "We will use the above threshold levels to create labels. Any returns in the two windows lower than the respective threshold will be labeled as 1, else as 0.", "Out of total 2,379 instances, there have been 338 instances where 14-Day returns have been lower than the threshold of -3.73% and 356 instances for 22-Day when returns have been lower than threshold of -4.63%.", "Once we have these labels, we do not actually need the returns columns and hence we delete the actual returns columns.", "We will start with the 22-Day window here. I will be using PyCaret\u2019s Classification module here for experimentation.", "We import the module above from PyCaret and then delete the label for 14-Day since we are working with a 22-Day window here. Just like in Regression, to begin the classification exercise, we need to run setup() command to point out the data and target column. Remember all the basic pre-processing is taken care of by PyCaret in the background.", "To evaluate the set of all the models, we will run the compare_models() command with turbo set to False because I want to evaluate all the models currently available in the library.", "Before proceeding with the selection of models, we need to understand which metric is most valuable to us. Choosing a metric in a classification experiment depends on the business problem. There is always a trade-off between Precision and Recall. This means we have to choose and favor a balance between True Positives and False Negatives.", "Here, the final model will be used to create a flag for the investor/analyst warning him about the possibility of an impending crash. The investor will then make the decision to hedge his position against the possible fall. Therefore, it is very important that the model is able the predict all/most of the drastic falls. In other words, we want to choose a model with a better ability to have True Positives (better Recall), even if it comes with the cost of some False Positives (lower Precision). In other words, we do not want the model to miss the possibility of a \u2018sharp fall\u2019. We can afford to have some False Positive because if the model predicts that there will be a sharp fall, and the investor hedges his position, but the fall does not occur, the investor will lose the opportunity cost of remaining invested or at most hedge cost (say if he buys out of money Put Options). This cost will be lower than the cost of a false negative where the model predicts no \u2018Sharp Fall\u2019, but a massive fall does happen. We need to however keep a tab on the trade-offs in Precision and AUC.", "We will go ahead and create four models namely MLP Classifier (mlp), Extra-Tree Classifier (et), Cat Boost Classifier (catb), and Light Gradient Boosting Machine (lgbm) with the best Recall and reasonable AUC/Precision.", "Based on the results we have, MLP Classifier appears to be the best choice with the highest recall and very decent AUC of 94.7%.", "Once we have the top four models which we would want to pursue further, we need to find the best hyperparameters for the models. PyCaret has a very convenient function of tune_model() which loops through pre-defined hyper-parameter grids to find the best parameters for our model through 10-fold cross-validation. PyCaret uses the standard Randomized-Grid search to iterate through the parameters. The number of iterations (n_iter) can be specified to a high number based on compute capacity and time constrain. Within the tune_function(), PyCaret also allows us to specify the metric we want to optimize. The default is Accuracy, but we can choose other metrics as well. Like we would choose Recall here since it is the metric we would want to increase/optimize.", "The code above tunes the Cat-Boost classifier to optimize \u2018Recall\u2019 by iterating 50 times over the defined grid and displays the 6 metrics for each fold. We see that Mean Recall has improved from 58.2% in base Cat-Boost to 62.6% here. This is a massive jump, not so common at the tuning stage. However, it still remains lower than 66.6% of the base \u2018mlp\u2019 that we created earlier. For the other three models, we did not see improvement in performance by tuning (example in the notebook). The reason is the random nature of iterating through the parameters. There however would exist a parameter that would equal or exceed the performance of the base model, but for that, we need to increase n_iter even more, which means more compute time.", "So currently our top-4 models are:", "Before moving ahead, let us evaluate the model performance. We will exploit evaluate_model() function of PyCaret to evaluate and highlight important aspects of the winning models.", "Since mlp and catb_tuned do not provide feature importance, we will use lgbm to see which features are most important in our predictions:", "We can see that the \u2018Return from Gold\u2019 in the past 180 days is the most important factor here. This is also intuitive because if the Gold prices have increased a lot in the past, their chances of falling/correcting are higher and vice-versa. The next 3 features are returns from Silver over 250, 60, and 180 days. Again, Silver and Gold are the two most widely traded and correlated precious metals, hence the relationship is very intuitive.", "After having tuned the hyper-parameters of the model, we can try Ensembling methods to improve performance. Two ensembling methods we can try are \u2018Bagging\u2019 and \u2018Boosting\u2019. Models that do not provide probability estimates cannot be used for Boosting. Hence, we can use Boosting with \u2018lgbm\u2019 and \u2018et\u2019 only. For others, we tried bagging to see if there were any improvements in performance or not. Below are the code snapshots and the 10-fold results.", "As we can see above, the results did not improve for the two models. For other models as well, there was a deterioration in performance (check notebook). Hence our winning model remains the same.", "Blending models are basically building a voting classifier on top of estimators. For models that provide prediction probability, we can use soft voting (using their probabilities), while for others, we would use hard voting. The blend_model() function defaults to using hard voting, which can be changed manually. I built two blends to see if there was some additional performance that can be extracted.", "Though none of the models could dethrone \u2018mlp\u2019 from the top position, it is very interesting to see the second blend, \u2018blend2\u2019, which is a soft combination of \u2018lgbm\u2019 and \u2018et\u2019. The performance on Recall and AUC of 62.25% and 97.43% is higher than both \u2018lgbm\u2019 and \u2018et\u2019 individually. This exhibits the benefit of blending models. Now our winner models would be reduced to 3.", "Stacking models is a method where we allow predictions of one models (or set of models) in one layer to be used as a feature for subsequent layers and finally, the meta-model is allowed to train on the predictions of previous layers and the original features (if restack=True) to make the final prediction. PyCaret has a very easy implementation of this where we can build a stack with one layer and one meta-model using stack_model() or multiple layers and one meta-model using create_stacknet(). I have used a different combinations to build different stacks and evaluate performance.", "In the first stack, \u2018stack1\u2019, I used the under-performing models, catb_tuned and blend2 in the first layer to pass on their predictions to the leader model mlp which would help it to make predictions and the prediction of mlp are used by meta-model, which is Logistic-Regression (LR) here by default, to make the final prediction. Since LR did not do very well with complete data (see compare models results) I used restack=False, which means only the predictions from previous models get passed to subsequent estimators, not the original features. What we see here is nothing short of magic. The Recall jumps from 66.63% of our best model \u2018mlp\u2019 to a massive 77.8% and so does AUC and Precision. \u2018stack1\u2019 is definitely far superior to all the models we built earlier. Obviously, I had to try other configurations as well to see if better performance can be achieved. And I did find a better configuration:", "We can use this model to predict the Test-Data, (30% of the total observations) that we separated at the setup stage. We can do that by using predict_model()", "We can see that the performance of the model on test data is even better with Recall of 86.9%", "Since we have \u2018stack3\u2019 as the leading model, we would fit the model on the entire data (including the Test data) and save the model for prediction on new data.", "The code above fits the model on the entire data and using the save_model() function, I have saved the trained model and the pre-processing pipeline in a pkl file named \u201c22D Classifier\u201d in my active directory. This saved model can and will be called on to predict on new data.", "For making predictions we will need to import the raw prices data just the way we did it at the beginning of the exercise to extract the features and then load the model to make the predictions. The only difference would be that we would be importing data till the last trading day to make a prediction on the most recent data, just like we would do in real life. The notebook titled \u2018Gold Prediction New Data \u2014 Classification\u2019 in the repo exhibits the data import, preparation, and prediction codes.", "We will skip the data import and preparation part (check notebook for details) and see the prediction process.", "Using predict_model() we can apply the loaded model to the new set of data to generate the prediction (1 or 0) and the score (the probability attached to the prediction). The \u2018prediction\u2019 dataframe will also contain all the features that we extracted.", "Looking at the Label and Score column of the prediction, the model did not predict a significant fall on any of the days. For example, given the historical returns as of 29th April, the model predicts that a significant fall in Gold Prices over the next 22-Day period is not likely, hence Label = 0, with a probability of a meager 9.19%.", "So here I have walked through steps to create a classifier to predict a significant fall in prices over the next 22-Day period in Gold Prices. The notebook contains codes for 14- Day model as well. You can try to create labels and try to predict similar falls over different windows of time in a similar fashion. Till now, we have created a regression and a classification model. In the future, we will try to use the prediction from classification models as features in the regression problem and see if it improves the performance of regression.", "empowerment through data, knowledge, and expertise. subscribe to DDIntel at https://ddintel.datadriveninvestor.com", "A Finance & Analytics professional striving to make sense of the ever-changing world around us. https://thenextderivative.substack.com/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F5769f548496&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.datadriveninvestor.com/?source=post_page-----5769f548496--------------------------------", "anchor_text": ""}, {"url": "https://medium.datadriveninvestor.com/?source=post_page-----5769f548496--------------------------------", "anchor_text": "DataDrivenInvestor"}, {"url": "https://riazuddin1985.medium.com/?source=post_page-----5769f548496--------------------------------", "anchor_text": ""}, {"url": "https://riazuddin1985.medium.com/?source=post_page-----5769f548496--------------------------------", "anchor_text": "Riazuddin Mohammad"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6238206feeed&operation=register&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&user=Riazuddin+Mohammad&userId=6238206feeed&source=post_page-6238206feeed----5769f548496---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5769f548496&operation=register&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5769f548496&operation=register&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/gold-price-prediction", "anchor_text": "Gold Prediction"}, {"url": "https://towardsdatascience.com/machine-learning-to-predict-gold-price-returns-4bdb0506b132", "anchor_text": "Gold Prediction"}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Training%20Data.csv", "anchor_text": "repo"}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Classification/Gold%20Prediction%20Experiment%20%20Classification-%20PyCaret.ipynb", "anchor_text": "notebook"}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Training%20Data.csv", "anchor_text": "here"}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Classification/Gold%20Prediction%20Experiment%20%20Classification-%20PyCaret.ipynb", "anchor_text": "notebook"}, {"url": "https://towardsdatascience.com/ensemble-methods-bagging-boosting-and-stacking-c9214a10a205", "anchor_text": "\u2018Bagging\u2019 and \u2018Boosting\u2019"}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Classification/Gold%20Prediction%20Experiment%20%20Classification-%20PyCaret.ipynb", "anchor_text": "notebook"}, {"url": "https://www.coursera.org/lecture/competitive-data-science/stacknet-s8RLi", "anchor_text": "Creating StackNet"}, {"url": "https://www.geeksforgeeks.org/stacking-in-machine-learning/", "anchor_text": "Stacking models"}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Classification/22D%20Classifier.pkl", "anchor_text": "\u201c22D Classifier\u201d"}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/blob/master/Classification/Gold%20Prediction%20New%20Data%20-%20Classification.ipynb", "anchor_text": "Gold Prediction New Data \u2014 Classification\u2019"}, {"url": "https://towardsdatascience.com/machine-learning-to-predict-gold-price-returns-4bdb0506b132", "anchor_text": "regression"}, {"url": "https://github.com/Riazone/Gold-Return-Prediction/tree/master/Classification", "anchor_text": "Git-hub Repository"}, {"url": "https://towardsdatascience.com/machine-learning-to-predict-gold-price-returns-4bdb0506b132", "anchor_text": "Part-I and II \u2014 Regression"}, {"url": "https://pycaret.org/", "anchor_text": "PyCaret"}, {"url": "https://www.linkedin.com/in/riazuddin-mohammad/", "anchor_text": "My LinkedIn profile"}, {"url": "https://ddintel.datadriveninvestor.com/", "anchor_text": "Here"}, {"url": "https://www.datadriveninvestor.com/", "anchor_text": "https://www.datadriveninvestor.com"}, {"url": "https://datadriveninvestor.com/collaborate", "anchor_text": "https://datadriveninvestor.com/collaborate"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----5769f548496---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/quant-investing?source=post_page-----5769f548496---------------quant_investing-----------------", "anchor_text": "Quant Investing"}, {"url": "https://medium.com/tag/gold-price-prediction?source=post_page-----5769f548496---------------gold_price_prediction-----------------", "anchor_text": "Gold Price Prediction"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fdatadriveninvestor%2F5769f548496&operation=register&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&user=Riazuddin+Mohammad&userId=6238206feeed&source=-----5769f548496---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fdatadriveninvestor%2F5769f548496&operation=register&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&user=Riazuddin+Mohammad&userId=6238206feeed&source=-----5769f548496---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5769f548496&operation=register&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://medium.datadriveninvestor.com/?source=post_page-----5769f548496--------------------------------", "anchor_text": "More from DataDrivenInvestor"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Fdatadriveninvestor%2F5769f548496&operation=register&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&collection=DataDrivenInvestor&collectionId=32881626c9c9&source=post_page-----5769f548496---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://medium.datadriveninvestor.com/?source=post_page-----5769f548496--------------------------------", "anchor_text": "Read more from DataDrivenInvestor"}, {"url": "https://medium.com/?source=post_page-----5769f548496--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----5769f548496--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----5769f548496--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----5769f548496--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----5769f548496--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----5769f548496--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----5769f548496--------------------------------", "anchor_text": ""}, {"url": "https://riazuddin1985.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://riazuddin1985.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Riazuddin Mohammad"}, {"url": "https://riazuddin1985.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "272 Followers"}, {"url": "https://thenextderivative.substack.com/", "anchor_text": "https://thenextderivative.substack.com/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6238206feeed&operation=register&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&user=Riazuddin+Mohammad&userId=6238206feeed&source=post_page-6238206feeed--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F1546d529eadb&operation=register&redirect=https%3A%2F%2Fmedium.datadriveninvestor.com%2Fpredicting-crashes-in-gold-prices-using-machine-learning-5769f548496&newsletterV3=6238206feeed&newsletterV3Id=1546d529eadb&user=Riazuddin+Mohammad&userId=6238206feeed&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}