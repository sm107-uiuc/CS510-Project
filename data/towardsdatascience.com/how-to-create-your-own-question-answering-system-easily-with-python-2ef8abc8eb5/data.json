{"url": "https://towardsdatascience.com/how-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5", "time": 1682997038.816428, "path": "towardsdatascience.com/how-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5/", "webpage": {"metadata": {"title": "How to create your own Question-Answering system easily with python | by Andr\u00e9 Macedo Farias | Towards Data Science", "h1": "How to create your own Question-Answering system easily with python", "description": "The history of Machine Comprehension (MC) has its origins along with the birth of first concepts in Artificial Intelligence (AI). The brilliant Allan Turing proposed in his famous article \u201cComputing\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Computing_Machinery_and_Intelligence", "anchor_text": "Computing Machinery and Intelligence", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/Turing_test", "anchor_text": "Turing test", "paragraph_index": 0}, {"url": "https://openai.com/blog/better-language-models/", "anchor_text": "OpenAI-GPT", "paragraph_index": 1}, {"url": "https://allennlp.org/elmo", "anchor_text": "ELMo", "paragraph_index": 1}, {"url": "https://github.com/google-research/bert", "anchor_text": "BERT", "paragraph_index": 1}, {"url": "https://arxiv.org/abs/1906.08237", "anchor_text": "XLNet", "paragraph_index": 1}, {"url": "https://cdqa-suite.github.io/cdQA-website/", "anchor_text": "cdQA-suite", "paragraph_index": 2}, {"url": "https://github.com/facebookresearch/DrQA/", "anchor_text": "DrQA", "paragraph_index": 4}, {"url": "https://github.com/cdqa-suite", "anchor_text": "cdQA-suite", "paragraph_index": 5}, {"url": "https://github.com/cdqa-suite", "anchor_text": "cdQA-suite", "paragraph_index": 6}, {"url": "https://github.com/facebookresearch/DrQA/", "anchor_text": "DrQA", "paragraph_index": 9}, {"url": "https://github.com/huggingface/pytorch-pretrained-BERT", "anchor_text": "BERT", "paragraph_index": 10}, {"url": "https://huggingface.co/", "anchor_text": "HuggingFace", "paragraph_index": 10}, {"url": "https://github.com/cdqa-suite/cdQA/releases", "anchor_text": "https://github.com/cdqa-suite/cdQA/releases", "paragraph_index": 17}, {"url": "https://rajpurkar.github.io/SQuAD-explorer/", "anchor_text": "SQuAD 1.1", "paragraph_index": 18}, {"url": "https://github.com/cdqa-suite/cdQA-annotator", "anchor_text": "cdQA-annotator", "paragraph_index": 18}, {"url": "https://github.com/cdqa-suite/cdQA/tree/master/examples", "anchor_text": "https://github.com/cdqa-suite/cdQA/tree/master/examples", "paragraph_index": 20}, {"url": "https://github.com/cdqa-suite/cdQA-annotator", "anchor_text": "cdQA-annotator", "paragraph_index": 21}, {"url": "http://localhost:8080/", "anchor_text": "http://localhost:8080/", "paragraph_index": 24}, {"url": "http://localhost:8080/", "anchor_text": "http://localhost:8080/", "paragraph_index": 31}, {"url": "https://cdqa-suite.github.io/cdQA-website/#demo", "anchor_text": "https://cdqa-suite.github.io/cdQA-website/#demo", "paragraph_index": 35}, {"url": "https://github.com/cdqa-suite", "anchor_text": "https://github.com/cdqa-suite", "paragraph_index": 37}, {"url": "https://github.com/cdqa-suite/cdQA/issues", "anchor_text": "https://github.com/cdqa-suite/cdQA/issues", "paragraph_index": 38}], "all_paragraphs": ["The history of Machine Comprehension (MC) has its origins along with the birth of first concepts in Artificial Intelligence (AI). The brilliant Allan Turing proposed in his famous article \u201cComputing Machinery and Intelligence\u201d what is now called the Turing test as a criterion of intelligence. Almost 70 years later, Question Answering (QA), a sub-domain of MC, is still one of the most difficult tasks in AI.", "However, since last year, the field of Natural Language Processing (NLP) has experienced a fast evolution thanks to the development in Deep Learning research and the advent of Transfer Learning techniques. Powerful pre-trained NLP models such as OpenAI-GPT, ELMo, BERT and XLNet have been made available by the best researchers of the domain.", "With such progress, several improved systems and applications to NLP tasks are expected to come out. One of such systems is the cdQA-suite, a package developed by some colleagues and me in a partnership between Telecom ParisTech, a French engineering school, and BNP Paribas Personal Finance, a European leader in financing for individuals.", "When we think about QA systems we should be aware of two different kinds of systems: open-domain QA (ODQA) systems and closed-domain QA (CDQA) systems.", "Open-domain systems deal with questions about nearly anything, and can only rely on general ontologies and world knowledge. One example of such a system is DrQA, an ODQA developed by Facebook Research that uses a large base of articles from Wikipedia as its source of knowledge. As these documents are related to several different topics and subjects we can understand why this system is considered an ODQA.", "On the other hand, closed-domain systems deal with questions under a specific domain (for example, medicine or automotive maintenance), and can exploit domain-specific knowledge by using a model that is fitted to a unique-domain database. The cdQA-suite was built to enable anyone who wants to build a closed-domain QA system easily.", "The cdQA-suite is comprised of three blocks:", "I will explain how each module works and how you can use it to build your QA system on your own data.", "The cdQA architecture is based on two main components: the Retriever and the Reader. You can see below a schema of the system mechanism.", "When a question is sent to the system, the Retriever selects a list of documents in the database that are the most likely to contain the answer. It is based on the same retriever of DrQA, which creates TF-IDF features based on uni-grams and bi-grams and compute the cosine similarity between the question sentence and each document of the database.", "After selecting the most probable documents, the system divides each document into paragraphs and send them with the question to the Reader, which is basically a pre-trained Deep Learning model. The model used was the Pytorch version of the well known NLP model BERT, which was made available by HuggingFace. Then, the Reader outputs the most probable answer it can find in each paragraph. After the Reader, there is a final layer in the system that compares the answers by using an internal score function and outputs the most likely one according to the scores.", "Before starting using the package, let's install it. You can install it using pip or clone the repository from source. For this tutorial I will also download the BNP Paribas\u2019 dataset (a dataset with articles extracted from their public news webpage).", "Now, you can open a jupyter notebook and follow the steps below to see how cdQA works:", "You should have something like the following as output:", "You can notice that the system not only outputs an answer, but also the paragraph where the answer was found and the title of the document / article.", "In the snippet above, the preprocessing / filtering steps were needed to transform the BNP Paribas dataframe to the following structure:", "If you use your own dataset, please be sure that your dataframe has such structure.", "When using the CPU version of the model, each prediction takes between 10 and 20 seconds to be done. This moderate execution time is due to the BERT Reader, which is a very large deep learning model (~110M parameters). If you have a GPU, you can use directly the GPU version of the model models/bert_qa_vGPU-sklearn.joblib. These pre-trained models are also available on the releases page of cdQA github: https://github.com/cdqa-suite/cdQA/releases", "You can also improve the performance of the pre-trained Reader, which was pre-trained on SQuAD 1.1 dataset. If you have an annotated dataset (that can be generated by the help of the cdQA-annotator) in the same format as SQuAD dataset you can fine-tune the reader on it:", "Please be aware that such fine-tuning should be performed using GPU as the BERT model is too large to be trained with CPU.", "You can also check out other ways to do the same steps on the official tutorials: https://github.com/cdqa-suite/cdQA/tree/master/examples", "In order to facilitate the data annotation, the team has built a web-based application, the cdQA-annotator.", "In order to use it, you should have your dataset transformed to a JSON file with SQuAD-like format:", "Now you can install the annotator and run it:", "Now you can go to http://localhost:8080/ and after loading your JSON file you will see something like this:", "To start annotating question-answer pairs you just need to write a question, highlight the answer with the mouse cursor (the answer will be written automatically), and then click on Add annotation:", "After the annotation, you can download it and use it to fine-tune the BERT Reader on your own data as explained in the previous section.", "The team also has provided a web-based user interface to couple with cdQA. In this section, I will describe how you can use de UI linked to the back-end of cdQA.", "First, you have to deploy a cdQA REST API by executing on your shell (be sure you run it on cdQA folder):", "Second, you should proceed to the installation of the cdQA-ui package:", "Then, you start the develpoment server:", "You can now access the web application on http://localhost:8080/. You will see something like the figure below:", "As the application is well connected to the back-end, via the REST API, you can ask a question and the application will display an answer, the passage context where the answer was found and the title of the article:", "If you want to couple the interface on your website you just need do the following imports in your Vue app:", "Then you insert the cdQA interface component:", "You can also check out a demo of the application on the official website: https://cdqa-suite.github.io/cdQA-website/#demo", "In this article, I presented cdQA-suite, a software suite for the deployment of an end-to-end Closed Domain Question Answering System.", "If you are interested in learning more about the project, feel free to check out the official GitHub repository: https://github.com/cdqa-suite. Do not hesitate to star and to follow the repositories if you liked the project and consider it valuable for you and your applications.", "We recently released the version 1.0.2 of the cdQA package, which is performant and shows very promising results. However, there is still headroom for improvement. If you wish to contribute to the project and help with such improvements, you can take a look at our current issues: https://github.com/cdqa-suite/cdQA/issues. Feel free to choose one and to do a Pull Request :).", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F2ef8abc8eb5&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@andre.lmfarias?source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@andre.lmfarias?source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": "Andr\u00e9 Macedo Farias"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa800706492c5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&user=Andr%C3%A9+Macedo+Farias&userId=a800706492c5&source=post_page-a800706492c5----2ef8abc8eb5---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2ef8abc8eb5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2ef8abc8eb5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://cdqa-suite.github.io/cdQA-website/", "anchor_text": "cdQA-suite"}, {"url": "https://en.wikipedia.org/wiki/Computing_Machinery_and_Intelligence", "anchor_text": "Computing Machinery and Intelligence"}, {"url": "https://en.wikipedia.org/wiki/Turing_test", "anchor_text": "Turing test"}, {"url": "https://openai.com/blog/better-language-models/", "anchor_text": "OpenAI-GPT"}, {"url": "https://allennlp.org/elmo", "anchor_text": "ELMo"}, {"url": "https://github.com/google-research/bert", "anchor_text": "BERT"}, {"url": "https://arxiv.org/abs/1906.08237", "anchor_text": "XLNet"}, {"url": "https://cdqa-suite.github.io/cdQA-website/", "anchor_text": "cdQA-suite"}, {"url": "https://github.com/facebookresearch/DrQA/", "anchor_text": "DrQA"}, {"url": "https://github.com/cdqa-suite", "anchor_text": "cdQA-suite"}, {"url": "https://github.com/cdqa-suite", "anchor_text": "cdQAAn End-To-End Closed Domain Question Answering System. - cdQAgithub.com"}, {"url": "https://github.com/cdqa-suite", "anchor_text": "cdQA-suite"}, {"url": "https://github.com/cdqa-suite/cdQA", "anchor_text": "cdQA"}, {"url": "https://github.com/cdqa-suite/cdQA-annotator", "anchor_text": "cdQA-annotator"}, {"url": "https://github.com/cdqa-suite/cdQA-ui", "anchor_text": "cdQA-ui"}, {"url": "https://github.com/facebookresearch/DrQA/", "anchor_text": "DrQA"}, {"url": "https://github.com/huggingface/pytorch-pretrained-BERT", "anchor_text": "BERT"}, {"url": "https://huggingface.co/", "anchor_text": "HuggingFace"}, {"url": "https://github.com/cdqa-suite/cdQA.git", "anchor_text": "https://github.com/cdqa-suite/cdQA.git"}, {"url": "https://github.com/cdqa-suite/cdQA/releases", "anchor_text": "https://github.com/cdqa-suite/cdQA/releases"}, {"url": "https://rajpurkar.github.io/SQuAD-explorer/", "anchor_text": "SQuAD 1.1"}, {"url": "https://github.com/cdqa-suite/cdQA-annotator", "anchor_text": "cdQA-annotator"}, {"url": "https://github.com/cdqa-suite/cdQA/tree/master/examples", "anchor_text": "https://github.com/cdqa-suite/cdQA/tree/master/examples"}, {"url": "https://github.com/cdqa-suite/cdQA-annotator", "anchor_text": "cdQA-annotator"}, {"url": "http://localhost:8080/", "anchor_text": "http://localhost:8080/"}, {"url": "https://github.com/cdqa-suite/cdQA-ui", "anchor_text": "https://github.com/cdqa-suite/cdQA-ui"}, {"url": "http://localhost:8080/", "anchor_text": "http://localhost:8080/"}, {"url": "https://cdqa-suite.github.io/cdQA-website/#demo", "anchor_text": "https://cdqa-suite.github.io/cdQA-website/#demo"}, {"url": "https://github.com/cdqa-suite", "anchor_text": "https://github.com/cdqa-suite"}, {"url": "https://github.com/cdqa-suite/cdQA/issues", "anchor_text": "https://github.com/cdqa-suite/cdQA/issues"}, {"url": "https://github.com/cdqa-suite", "anchor_text": "https://github.com/cdqa-suite"}, {"url": "https://github.com/google-research/bert", "anchor_text": "https://github.com/google-research/bert"}, {"url": "https://github.com/huggingface/pytorch-pretrained-BERT", "anchor_text": "https://github.com/huggingface/pytorch-pretrained-BERT"}, {"url": "https://rajpurkar.github.io/SQuAD-explorer/", "anchor_text": "https://rajpurkar.github.io/SQuAD-explorer/"}, {"url": "https://github.com/facebookresearch/DrQA/", "anchor_text": "https://github.com/facebookresearch/DrQA/"}, {"url": "https://medium.com/deeppavlov/open-domain-question-answering-with-deeppavlov-c665d2ee4d65", "anchor_text": "https://medium.com/deeppavlov/open-domain-question-answering-with-deeppavlov-c665d2ee4d65"}, {"url": "https://openai.com/blog/better-language-models/", "anchor_text": "https://openai.com/blog/better-language-models/"}, {"url": "https://allennlp.org/elmo", "anchor_text": "https://allennlp.org/elmo"}, {"url": "https://arxiv.org/abs/1906.08237", "anchor_text": "https://arxiv.org/abs/1906.08237"}, {"url": "https://medium.com/tag/question-answering?source=post_page-----2ef8abc8eb5---------------question_answering-----------------", "anchor_text": "Question Answering"}, {"url": "https://medium.com/tag/nlp?source=post_page-----2ef8abc8eb5---------------nlp-----------------", "anchor_text": "NLP"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----2ef8abc8eb5---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----2ef8abc8eb5---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/programming?source=post_page-----2ef8abc8eb5---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2ef8abc8eb5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&user=Andr%C3%A9+Macedo+Farias&userId=a800706492c5&source=-----2ef8abc8eb5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2ef8abc8eb5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&user=Andr%C3%A9+Macedo+Farias&userId=a800706492c5&source=-----2ef8abc8eb5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2ef8abc8eb5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F2ef8abc8eb5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----2ef8abc8eb5---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----2ef8abc8eb5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@andre.lmfarias?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@andre.lmfarias?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Andr\u00e9 Macedo Farias"}, {"url": "https://medium.com/@andre.lmfarias/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "208 Followers"}, {"url": "https://www.linkedin.com/in/andremfarias/", "anchor_text": "https://www.linkedin.com/in/andremfarias/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa800706492c5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&user=Andr%C3%A9+Macedo+Farias&userId=a800706492c5&source=post_page-a800706492c5--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F670f0a90c9b6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-your-own-question-answering-system-easily-with-python-2ef8abc8eb5&newsletterV3=a800706492c5&newsletterV3Id=670f0a90c9b6&user=Andr%C3%A9+Macedo+Farias&userId=a800706492c5&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}