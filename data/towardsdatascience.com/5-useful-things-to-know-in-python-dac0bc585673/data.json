{"url": "https://towardsdatascience.com/5-useful-things-to-know-in-python-dac0bc585673", "time": 1683017935.3663092, "path": "towardsdatascience.com/5-useful-things-to-know-in-python-dac0bc585673/", "webpage": {"metadata": {"title": "5 Useful Things to Know in Python | by Luay Matalka | Towards Data Science", "h1": "5 Useful Things to Know in Python", "description": "Python is one of the best programming languages to learn largely due to its simple syntax and vast versatility. However, due to the large amount of built-in features that it provides, it can be\u2026"}, "outgoing_paragraph_urls": [{"url": "https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions", "anchor_text": "List comprehensions", "paragraph_index": 1}, {"url": "https://www.python.org/dev/peps/pep-0274/", "anchor_text": "dictionary comprehensions", "paragraph_index": 9}, {"url": "https://docs.python.org/3/reference/expressions.html", "anchor_text": "Lambda expressions", "paragraph_index": 17}, {"url": "https://docs.python.org/3/library/functions.html#enumerate", "anchor_text": "enumerate()", "paragraph_index": 28}, {"url": "https://docs.python.org/3/library/functions.html#zip", "anchor_text": "zip()", "paragraph_index": 34}, {"url": "https://lmatalka90.medium.com/membership", "anchor_text": "link", "paragraph_index": 41}], "all_paragraphs": ["Python is one of the best programming languages to learn largely due to its simple syntax and vast versatility. However, due to the large amount of built-in features that it provides, it can be difficult to fully assimilate the particularly useful ones. In this tutorial, we will go over 5 features (including functions and expressions) that are extremely helpful to know in python.", "List comprehensions allow us to create lists from other sequences in a very concise way. We usually use list comprehensions to loop through another sequence, such as a list, and either add the elements that satisfy a certain condition, or add the result of an operation applied to each element in the sequence.", "[ <expression> for <name> in <iterable or sequence> ]", "A list comprehension is made up of brackets, which contain an expression, followed by a for loop, and zero or more for or if clauses. This list comprehension then creates a list that contains the expression evaluated in the context of the for and if clauses that follow it.", "Let\u2019s start with a basic list comprehension that contains only an expression and a for loop to create a list, cube_list, that contains the cubes of another list, num_list:", "First, we notice that we have brackets that contain an expression, num**3, followed by a for loop, for num in num_list. Within the for loop, num is the parameter name we give for the elements that we are looping over in our num_list, just like in the original for loop above. We are basically saying, take num (or the current element) from our num_list, cube it, and then add the result of that operation to our list, similar to cube_list.append(num**3). Thus we are adding the output of the expression num**3 to the list we are making as it iterates over the for loop.", "List Comprehension with ConditionWe can also add a condition to our list comprehensions using an if statement after the for loop:", "[ <expression> for <name> in <iterable or sequence> if <condition> ]", "Notice how we added the if statement at the end. So num**3 will only be added to our cubes_of_odds list if the current element or num is odd using the modulo operator. The modulo operator returns the remainder when num is divided by 2, which would equal zero if num is even.", "Just like we have list comprehensions in python, we also have dictionary comprehensions. We can use dictionary comprehensions in python to create dictionaries in a very concise way as well.", "{ key:value for key, value in iterable or sequence }", "For example, we can use a dictionary comprehension to create a dictionary that contains the counts (the number of times a number occurs) in a list:", "And that\u2019s it! First, we use curly brackets to establish that we want to create a dictionary (as opposed to a list where we would use brackets). Then, as we loop over num_list, we are creating key:value pairs as follows: num:num_list.count(num), where the key is the number (or num), and its value being the count of that number in num_list.", "Dictionary Comprehensions with ConditionJust like in list comprehensions, we can add a condition to our dictionary comprehensions using an if statement after the for loop.", "{ key:value for key, value in iterable or sequence if <condition> }", "For example, if we only want numbers with an even count in our dictionary, we can use the following code:", "As we can see, we added an if statement after the for loop within the dictionary comprehension. If the count of the current number is even, we add the corresponding key:value pair to our dictionary. Otherwise, we don\u2019t add that key:value pair to our dictionary.", "Lambda expressions are used to create anonymous functions, or functions without a name. They are useful when we need to create a function that will only need to be used once (a throw-away function) and can be written in one line. As such, they can be very useful to use in functions that take in another function as an argument.", "Lambda functions can have any number of parameters but can only have one expression. They generally have this format which yields a function object:", "Lambda Expression with One ParameterLet\u2019s create a lambda expression that returns the square of a number:", "And that\u2019s it! We first start with the lambda keyword, then the parameter num, a colon, and what you want that function to return, which is num**2.", "Note that this function is anonymous, or does not have a name. So we cannot invoke the function at a later point. In addition, we did not write the return keyword. Everything after the colon is part of the expression that will be returned.", "If we want to assign a lambda function to a variable so that it can be invoked later, we can do so by using an assignment operator:", "We can then invoke or call this function the same way we would with a function that was defined with the def keyword. For example:", "Lambda Expression with Multiple ParametersLet\u2019s write a lambda function that has two parameters instead of just one. For example, we can write a lambda expression that returns the sum of two numbers:", "As we can see, if we want our function to have multiple parameters in a lambda expression, we would just separate those parameters by a comma.", "Conditional Statements in Lambda ExpressionsWe can also include if else statements in lambda expressions. We would just need to make sure that it is all on one line. For example, let\u2019s create a function that takes in two numbers and returns the greater of those numbers:", "Our lambda expression takes in two numbers, num1 and num2, and returns num1 if num1 is greater than num2, else, it returns num2. Obviously this function doesn\u2019t take into account if the numbers are equal, as it will just return num2 in that case, however, we are just illustrating how we can use conditional statements within a lambda expression.", "enumerate() allows us to iterate through a sequence but it keeps track of both the element and the index.", "The enumerate() function takes in an iterable as an argument, such as a list, string, tuple, or dictionary. In addition, it can also take in an optional argument, start, which specifies the number we want the index to start at (the default is 0).", "Using the enumerate() function, we can write a for loop :", "The enumerate() function returns an enumerate object, which is an iterator. As each element is accessed from this enumerate object, a tuple is returned, containing the index and element at that index: (index, element). Thus, in the above for loop, with each iteration, it is assigning the elements of this returned tuple to the index and element variables. In other words, the returned tuple is being unpacked inside the for-statement.", "We can also specify starting the index at 1 by passing in 1 as the argument for the start parameter of the enumerate() function:", "For more on the enumerate() function and iterators:", "The zip() function is named due to its analogous mechanism as physical zippers. When you zip something, you bring both sides together. And that\u2019s how the zip() function works! It brings elements of the same index from multiple iterable objects, such as lists, together as elements of the same tuples.", "For example, let\u2019s say we have two lists, first_names and last_names, and we want to combine elements of the same index from both lists into a list of tuples as follows:", "We can use python\u2019s built-in zip() function to accomplish this:", "The zip() function takes in iterables as arguments, such as lists, files, tuples, sets, etc. The zip() function will then create an iterator that aggregates elements from each of the iterables passed in. In other words, it will return an iterator of tuples, where the i-th tuple will contain the i-th element from each of the iterables passed in. This iterator will stop once the shortest input iterable has been exhausted.", "Note: Since the zip() function returns an iterator, we need to use the list() function that will use this returned iterator (or zip object) to create a list. In addition, as long as the iterables passed in are ordered (sequences), then the tuples will contain elements in the same left-to-right order of the arguments passed in the zip() function.", "Using the zip() Function to Unzip IterablesIn contrast to zipping, which brings things together, unzipping takes things apart. We can also use the zip() function to unzip iterable objects in python by adding the unpacking operator * as follows:", "The unpacking operator * will unpack the first_and_last_names list of tuples into its tuples. These tuples will then be passed to the zip() function, which will take these separate iterable objects (the tuples), and combines their same-indexed elements together into tuples, making two separate tuples. Lastly, through tuple unpacking, these separated tuples will be assigned to the first_names and last_names variables. We then use the list() function to convert these tuples into lists.", "If you enjoy reading stories like these and want to support me as a writer, consider signing up to become a Medium member. It\u2019s $5 a month, giving you unlimited access to stories on Medium. If you sign up using my link, I\u2019ll earn a small commission.", "In this tutorial, we looked at 5 extremely useful features (including expressions and functions) in python. We first learned how we can use list comprehensions and dictionary comprehensions to create lists and dictionaries, respectively, in a very concise and practical manner. We then saw how to write lambda expressions with one or more parameters and conditions. Next, we looked at how we can zip iterable objects using the zip() function, and unzip iterable objects using the zip() function with the unpacking operator *. Lastly, we learned how we can use the enumerate() function to keep track of both the element and the index as we loop over an iterable object.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Cloud Data Engineer with a passion for teaching."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fdac0bc585673&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----dac0bc585673--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----dac0bc585673--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://lmatalka90.medium.com/?source=post_page-----dac0bc585673--------------------------------", "anchor_text": ""}, {"url": "https://lmatalka90.medium.com/?source=post_page-----dac0bc585673--------------------------------", "anchor_text": "Luay Matalka"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F58bd20ab66d4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&user=Luay+Matalka&userId=58bd20ab66d4&source=post_page-58bd20ab66d4----dac0bc585673---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fdac0bc585673&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fdac0bc585673&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@tma?utm_source=medium&utm_medium=referral", "anchor_text": "Tianyi Ma"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions", "anchor_text": "List comprehensions"}, {"url": "https://towardsdatascience.com/list-comprehensions-in-python-28d54c9286ca", "anchor_text": "List Comprehensions in PythonA more elegant and concise way to create lists in pythontowardsdatascience.com"}, {"url": "https://www.python.org/dev/peps/pep-0274/", "anchor_text": "dictionary comprehensions"}, {"url": "https://towardsdatascience.com/dictionary-comprehensions-in-python-912a453da512", "anchor_text": "Dictionary Comprehensions in PythonHow to use dictionary comprehensions to create dictionaries in pythontowardsdatascience.com"}, {"url": "https://docs.python.org/3/reference/expressions.html", "anchor_text": "Lambda expressions"}, {"url": "https://towardsdatascience.com/lambda-expressions-in-python-9ad476c75438", "anchor_text": "Lambda Expressions in PythonHow to write anonymous functions in pythontowardsdatascience.com"}, {"url": "https://docs.python.org/3/library/functions.html#enumerate", "anchor_text": "enumerate()"}, {"url": "https://towardsdatascience.com/looping-in-python-5289a99a116e", "anchor_text": "Looping in PythonHow to use the enumerate() function in pythontowardsdatascience.com"}, {"url": "https://towardsdatascience.com/iterables-and-iterators-in-python-849b1556ce27", "anchor_text": "Iterables and Iterators in PythonIterables, iterators, and iteration in Pythontowardsdatascience.com"}, {"url": "https://docs.python.org/3/library/functions.html#zip", "anchor_text": "zip()"}, {"url": "https://lmatalka90.medium.com/membership", "anchor_text": "link"}, {"url": "https://lmatalka90.medium.com/membership", "anchor_text": "Join Medium with my referral link \u2014 Luay MatalkaRead every story from Luay Matalka (and thousands of other writers on Medium). Your membership fee directly supports\u2026lmatalka90.medium.com"}, {"url": "https://medium.com/tag/programming?source=post_page-----dac0bc585673---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----dac0bc585673---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/software-development?source=post_page-----dac0bc585673---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/technology?source=post_page-----dac0bc585673---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----dac0bc585673---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fdac0bc585673&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&user=Luay+Matalka&userId=58bd20ab66d4&source=-----dac0bc585673---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fdac0bc585673&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&user=Luay+Matalka&userId=58bd20ab66d4&source=-----dac0bc585673---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fdac0bc585673&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----dac0bc585673--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fdac0bc585673&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----dac0bc585673---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----dac0bc585673--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----dac0bc585673--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----dac0bc585673--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----dac0bc585673--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----dac0bc585673--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----dac0bc585673--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----dac0bc585673--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----dac0bc585673--------------------------------", "anchor_text": ""}, {"url": "https://lmatalka90.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://lmatalka90.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Luay Matalka"}, {"url": "https://lmatalka90.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F58bd20ab66d4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&user=Luay+Matalka&userId=58bd20ab66d4&source=post_page-58bd20ab66d4--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Feb71491826a1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-useful-things-to-know-in-python-dac0bc585673&newsletterV3=58bd20ab66d4&newsletterV3Id=eb71491826a1&user=Luay+Matalka&userId=58bd20ab66d4&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}