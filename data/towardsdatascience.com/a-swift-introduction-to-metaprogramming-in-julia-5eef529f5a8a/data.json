{"url": "https://towardsdatascience.com/a-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a", "time": 1683008189.40684, "path": "towardsdatascience.com/a-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a/", "webpage": {"metadata": {"title": "A Swift Introduction To Metaprogramming in Julia | by Emma Boudreau | Towards Data Science", "h1": "A Swift Introduction To Metaprogramming in Julia", "description": "The Julia language is revered for a lot of features that it has that are relatively useful. However, one feature that I think can often be overlooked in the Julia language is Julia\u2019s meta-programming\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["The Julia language is revered for a lot of features that it has that are relatively useful. However, one feature that I think can often be overlooked in the Julia language is Julia\u2019s meta-programming capabilities. Meta-programming is a way of programming in which one program uses another program as its data. When I say program, what I am referring to is any executable code that can be ran in the language, not a separate language or application.", "Meta-programming can be incredibly useful. There are some things which you can do using code as data that you simply can\u2019t do normally in a programming language. A great example of this I would like to bring into your mind from my portfolio is Hone.jl. Hone.jl uses meta-tags that are simply strings containing code that can subsequently be concatenated and modified to form plots and drawings. Something that might have been impossible without the use of these meta-tags is the ability to extend Hone. If you\u2019d like to learn more about how to write a Hone extension, you can check out this article:", "Fortunately, meta-programming in Julia is pretty easy to get started with. Julia\u2019s meta is one of those things that is very easy to pickup and learn, but much more difficult to master. A big disadvantage to using meta-programming is that it can make it especially hard to debug since your code is all contained within expressions and one small mistake, like leaving out a comma, can render your code inoperable. This is because it is a lot easier to read error returns on lines instead of parse errors.", "One thing that you\u2019re going to need to get used to very quickly in order to meta-program effectively in Julia is a new type. Let me introduce you to:", "The expression type is a type that is meant to store parsed meta code that can be evaluated. In order to do a basic string to expression conversion, you will want to get familiar with the parse() method from Base.Meta.", "Let\u2019s try using this on a string:", "Notice that our output now turns into a symbol. This symbol can be viewed in a way as the application I was talking about earlier. This is an expression that runs the code inside of this symbol. Alternatively, we could also create a symbol of our own to perform this arithmetic.", "As you can see, both of these are expressions, one is parsed and one is created using a symbol with syntax inside. This is effectively code stored in the symbol data-type.", "The Expr type actually has some interesting properties you might not have expected. What is really cool about these is that they allow us to dissect the contents of our data/code and learn more about them. The first property I would like to show you is the head. An Expr type contains two main types of data, the head and the arguments. The head is used to delimit what kind of expression is being passed. In this example, as well as most examples, we are using the :call type. This is not an actual datatype, but just a Symbol stored in the struct that is Expr.", "Next we have args. Args are all of the arguments that our data contains. There are two types of categories that these arguments can fall into. They will either be", "which includes methods and operands. These will be represented by a Symbol data-type. In reality these are the meta part of your meta expression. However, without data these operations are useless, so in addition to operations we have", "We can visualize this by printing the types of all of the args.", "This is essentially what the parser does for us. The parser separate the functions that need to be performed and the data from one another. After that, it will put everything in the right order so it can be properly evaluated. The other thing that should be mentioned is the conversion from the string type to the expression type.", "Now that we understand what parse() does, and how it turns strings into the expression type, we can now start creating some expressions which we can then evaluate with eval():", "This is relatively basic, but there are also some things you should watch out for. Firstly, if all of your data is in a string, how can you use the string data-type? Unfortunately, there is no way to delimit strings inside of strings inside of Julia like there is in Python, so we will need to use a regular expression. If you think about it, regular expressions themselves are meta-programs as well; so we are really going full circle. The easiest way to get a string in Julia without ever creating a string is to use a Symbol:", "The regular expression \\\u201d is used to delimit quotes in strings.", "And that\u2019s really all there is to it!", "Meta-programming is a powerful tool that I believe sometimes can be overlooked. I think the way it is handled in Julia is the perfect way for it to be handled. While it certainly isn\u2019t a huge focus of the language, the implementation is great and using it is super easy. Julia has great meta-programming abilities I have been enjoying the spoils of for quite some time now!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F5eef529f5a8a&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://emmettgb.medium.com/?source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": "Emma Boudreau"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c----5eef529f5a8a---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5eef529f5a8a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5eef529f5a8a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/emmettgb/Emmetts-DS-NoteBooks/blob/master/Julia/intro%20to%20Julian%20meta.ipynb", "anchor_text": "Notebook"}, {"url": "https://towardsdatascience.com/how-i-programmed-the-first-hone-extension-in-julia-edf7813d0e1b", "anchor_text": "How I Programmed The First Hone Extension In JuliaCreating and using an extension to my plotting library in Julia.towardsdatascience.com"}, {"url": "https://medium.com/tag/programming?source=post_page-----5eef529f5a8a---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/metaprogramming?source=post_page-----5eef529f5a8a---------------metaprogramming-----------------", "anchor_text": "Metaprogramming"}, {"url": "https://medium.com/tag/julia?source=post_page-----5eef529f5a8a---------------julia-----------------", "anchor_text": "Julia"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----5eef529f5a8a---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/tag/julialang?source=post_page-----5eef529f5a8a---------------julialang-----------------", "anchor_text": "Julialang"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5eef529f5a8a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&user=Emma+Boudreau&userId=ea170050148c&source=-----5eef529f5a8a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5eef529f5a8a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&user=Emma+Boudreau&userId=ea170050148c&source=-----5eef529f5a8a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5eef529f5a8a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F5eef529f5a8a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----5eef529f5a8a---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----5eef529f5a8a--------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Emma Boudreau"}, {"url": "https://emmettgb.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "4.6K Followers"}, {"url": "https://twitter.com/emmettboudgie", "anchor_text": "https://twitter.com/emmettboudgie"}, {"url": "https://github.com/emmettgb", "anchor_text": "https://github.com/emmettgb"}, {"url": "https://ems.computer/", "anchor_text": "https://ems.computer/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff16bf42bb45f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-swift-introduction-to-metaprogramming-in-julia-5eef529f5a8a&newsletterV3=ea170050148c&newsletterV3Id=f16bf42bb45f&user=Emma+Boudreau&userId=ea170050148c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}