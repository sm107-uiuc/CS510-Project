{"url": "https://towardsdatascience.com/all-about-python-list-comprehension-14dd979ec0d1", "time": 1683007996.936546, "path": "towardsdatascience.com/all-about-python-list-comprehension-14dd979ec0d1/", "webpage": {"metadata": {"title": "All About Python List Comprehension | by Baijayanta Roy | Towards Data Science", "h1": "All About Python List Comprehension", "description": "Python is a language of expressiveness in concise code, which is very elegant and easy to comprehend. List Comprehension provides a concise way to create lists. List Comprehension is the proper\u2026"}, "outgoing_paragraph_urls": [{"url": "http://www.linkedin.com/in/baijayantaroy", "anchor_text": "LinkedIn", "paragraph_index": 18}, {"url": "https://baijayanta.medium.com/membership", "anchor_text": "https://baijayanta.medium.com/membership", "paragraph_index": 19}], "all_paragraphs": ["Python is a language of expressiveness in concise code, which is very elegant and easy to comprehend. List Comprehension provides a concise way to create lists. List Comprehension is the proper \u201cpythonic\u201d way of building an accessible, concise, and fast way to build lists. It allows one to perform complex operations on lists using a single line.", "List comprehensions provide us with a simple way to create a list based on some sequence or another list that we can loop over. In python terminology, anything that we can loop over is called iterable. At its most basic level, list comprehension is a syntactic construct for creating lists from existing lists. In the core of list comprehension, it is the loop (\u2018for\u2019 loop). Any list comprehension we can represent as a for loop, but when we represent it with equivalent list comprehension in a single line, it looks genuinely unique.", "List comprehension has these essential parts :", "For example, if we want to create a square list from a list of variables from 1 to 5, we can do so as below using the standard for loop, but when we use a list comprehension, it becomes concise and lightweight.", "If we break-down the list comprehension parts, it looks as below.", "Thus here iterable is range(1,6), and x is the variable representing each value in the range. For each x (1,2,3,4,5) , output expression x*x calculates a corresponding output (1,4,9,16,25) which ultimately becomes the final output list (refer to above diagram).", "Few Ways of Usage other than the basic construct:", "List comprehensions provide a way to check for conditions and filter out the elements we don\u2019t need from the input list for output. This filtering happens before the output expression takes place. Refer to the below example where we calculate square for only those variables which are divisible by 2.", "List Comprehension can be used to check nested conditions. Refer to the below code, where we want to find which all variables in the input list are divisible by 2,4 & 5.", "We can use an \u201cif-else\u201d in a list comprehension in Python. Refer to the code block below, which finds odd and even for a list of numbers. We need to specify what the output is first, following \u201cif\u201d condition and then \u201celse\u201d followed by what is the output under \u201celse.\u201d", "Note, we can not print input value directly without using a comma and parenthesis.", "Suppose we have to flatten a 2D list. We can easily do it using List Comprehension using a sublist.", "How can we flatten a 3D list? It becomes a bit complex where first we flatten 3D to 2D and then 2D to 1D. In the below example blue underlined portion is the step that makes 2D flatten from a 3D list, and then the outer part does flattening to 1D.", "We can use list comprehension for multiple nested \u201cfor\u201d loops. We have to careful in terms of the order of execution when we use nested list comprehension. Suppose we have a 3x3 square matrix, and we want to create a matrix using this matrix where all diagonal values need to be square while other values need to be zeros. Here the output is 1 dimensional, and we need additional logic to convert to 2D matrix form. Here I used \u201ccolumn\u201d and \u201crow\u201d for explanation purposes but can be used directly in the \u201cfor loop\u201d without the intermediate variables (as used in below List Comprehension).", "Now we see equivalent nested list comprehension (single line only, but for easy understanding, I have made it in 3 lines).", "Now let\u2019s understand this with a picture of how each loop is working. Loop execution order is top to bottom (bold green arrow). Inner loops (dark green ) we complete first, and then control comes back to the outer loop (blue). Here List Comprehension is one line in comparison to 5 lines of ordinary \u201cfor loop,\u201d as shown above code. We can also get the matrix form of output directly by putting brackets after first for loop.", "In Python, we have also \u201cdictionary comprehensions\u201d and \u201cset comprehensions\u201d that are similar in operation but meant for dictionary and set. Python also has \u201cgenerator expression\u201d which uses a \u201cround\u201d bracket.", "When I started my journey with Python, I used to find it challenging to understand how the list comprehension works. Once I understood its elegance and power, I never looked back. Even though it feels intimidating at first, with a bit of practice, every python lover can fall in love with List Comprehension.", "I look forward to your comment and share if you have any unique experience with the list comprehension. Thanks for reading. You can connect me @LinkedIn.", "For only $5/month, get unlimited access to the most inspiring and uplifting content\u2026 Click on the link below to become a Medium member and support my writing. Thank you!https://baijayanta.medium.com/membership", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Science | Machine Learning | Deep Learning | Artificial Intelligence | Quantum Computing"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F14dd979ec0d1&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://baijayanta.medium.com/?source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": ""}, {"url": "https://baijayanta.medium.com/?source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": "Baijayanta Roy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F583a83b12a79&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&user=Baijayanta+Roy&userId=583a83b12a79&source=post_page-583a83b12a79----14dd979ec0d1---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F14dd979ec0d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F14dd979ec0d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://www.linkedin.com/in/baijayantaroy", "anchor_text": "LinkedIn"}, {"url": "https://baijayanta.medium.com/membership", "anchor_text": "https://baijayanta.medium.com/membership"}, {"url": "https://medium.com/tag/python?source=post_page-----14dd979ec0d1---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----14dd979ec0d1---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/list-comprehension?source=post_page-----14dd979ec0d1---------------list_comprehension-----------------", "anchor_text": "List Comprehension"}, {"url": "https://medium.com/tag/programming?source=post_page-----14dd979ec0d1---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----14dd979ec0d1---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F14dd979ec0d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&user=Baijayanta+Roy&userId=583a83b12a79&source=-----14dd979ec0d1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F14dd979ec0d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&user=Baijayanta+Roy&userId=583a83b12a79&source=-----14dd979ec0d1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F14dd979ec0d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F14dd979ec0d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----14dd979ec0d1---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----14dd979ec0d1--------------------------------", "anchor_text": ""}, {"url": "https://baijayanta.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://baijayanta.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Baijayanta Roy"}, {"url": "https://baijayanta.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.3K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F583a83b12a79&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&user=Baijayanta+Roy&userId=583a83b12a79&source=post_page-583a83b12a79--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff205a028dace&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fall-about-python-list-comprehension-14dd979ec0d1&newsletterV3=583a83b12a79&newsletterV3Id=f205a028dace&user=Baijayanta+Roy&userId=583a83b12a79&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}