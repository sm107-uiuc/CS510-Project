{"url": "https://towardsdatascience.com/data-cleaning-using-python-pandas-f6fadc433535", "time": 1683013967.346123, "path": "towardsdatascience.com/data-cleaning-using-python-pandas-f6fadc433535/", "webpage": {"metadata": {"title": "Data Cleaning Using Python Pandas | by Dean McGrath | Towards Data Science", "h1": "Data Cleaning Using Python Pandas", "description": "Over time companies produce and collect a massive amount of data, depending on the company this can come in many different forms such as user-generated content, job applicant data, blog posts, sensor\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.python.org/", "anchor_text": "Python", "paragraph_index": 1}, {"url": "https://pandas.pydata.org/pandas-docs/stable/index.html#", "anchor_text": "Pandas", "paragraph_index": 1}, {"url": "https://www.jetbrains.com/pycharm/", "anchor_text": "PyCharm", "paragraph_index": 2}, {"url": "https://gist.github.com/deanjamesss/f8f5781fb682fb728e9674dda9813982", "anchor_text": "CSV file", "paragraph_index": 4}, {"url": "https://gist.github.com/deanjamesss/3ccb847193ed93c22f7a1df61181d6ff", "anchor_text": "here", "paragraph_index": 4}, {"url": "https://linktr.ee/deanmcgrath", "anchor_text": "https://linktr.ee/deanmcgrath", "paragraph_index": 21}], "all_paragraphs": ["Over time companies produce and collect a massive amount of data, depending on the company this can come in many different forms such as user-generated content, job applicant data, blog posts, sensor data and payroll transactions. Due to the immense number of source systems that can generate data and the number of people that contribute to data generation we can never guarantee that the data we are receiving is a clean record. These records may be incomplete due to missing attributes, they may have an incorrect spelling for user-entered text fields or they may have an incorrect value such as a date of birth in the future.", "As a data scientist, it's important that these data quality issues are recognised early during our exploration phase and cleansed prior to any analysis. By allowing uncleaned data through our analysis tools we run the risk of incorrectly representing companies or users data by delivering poor quality findings based on incorrect data. Today we will be using Python and Pandas to explore a number of built-in functions that can be used to clean a dataset.", "For today's article, we are using PyCharm which is an integrated development environment built for Python. For beginners its an excellent tool to use as it streamlines the creation of virtual environments and the installation of specific Python packages such as Pandas. Using virtual environments allows you to manage your project dependencies without impacting your operating systems default Python installation.", "Begin by opening Pycharm and selecting File > New Project from the navigation bar. Here you can name your project using Location and either create a new virtual environment or reference an existing one.", "To get you started we have created a base Python script below and a CSV file both of which will be referenced throughout the article. Both of these files can be download and saved to your root project directory. The final script can be found here.", "The above script demonstrates a number of DataFrame manipulations after reading a file into memory. On lines 5\u20137, we are overriding a number of Pandas default configurations which when dealing with larger files can clip the console output when printing. To read the data into memory we use Pandas built-in function read_csv() on line 10 which takes a file name as a parameter. On lines 13\u201315, we set the data type of three columns which has a number of benefits. Firstly, setting the data type improves performance when processing DataFrame rows by reducing the memory footprint. Secondly, it enriches the descriptive statistics output we get when running Pandas .describe() built-in function. On line 18, we perform a column rename which is commonly practised to convert a generic column name to something more meaningful.", "In order to get an understanding of which aspects of the dataset need cleaning we first need to see what data we are dealing with. The best way to do this is by using Pandas built-in functions .info() and .describe().", "The result of .info() above clearly shows the amount of non-null elements and therefore the number of null elements can be deduced using the RangeIndex from the first line. A quick way of summarising this is calling df.isnull().sum() which sums the number of null elements in each column.", "If we need to know the percentage of the null elements as a percentage of the whole dataset then we can do the following.", "One element that jumps out after calling .info() and .isnull().sum() is the tax_file_no which across 1,000 records has 1,000 null values. The easiest way to remove these types of rows is by using Pandas .dropna(). The .dropna() function takes the form .dropna(axis=0, how='any', thresh=None, subset=None, inplace=False). The axis parameter determines whether the function is applied to rows axis='index' or columns axis='columns'. The how parameter can be how='any' or how='all', which means that the column or row can be dropped if any or all elements have null values. The thresh parameter allows you to set the minimum number of non-null elements within the column or row that are required otherwise it will be dropped. The subset parameter is optional and can receive a list of column names, if the list is empty then the .dropna() function will be applied across all columns or rows. inplace can either be True or False, if True then None will be returned. For our example, we would use df.dropna(axis='columns', how='all', inplace=True). After executing .dropna() and printing out the DataFrame info to the console you will notice that the tax_file_no column is no longer included.", "After checking for completely null columns it\u2019s worth checking to see if there are any rows that do not contain enough usable elements. We can achieve this by making use of .dropna(thresh=2) to remove any rows that have less than two elements.", "On line 2, we drop any rows that have less than two elements. Line 3 then returns any rows from the original DataFrame whose index does not exist in under_threshold_removed i.e. dropped rows. It accomplishes this by negating ~ pandas built-in .index.isin() function. In our example, one record is returned that only contains the employee number.", "In certain circumstances, we may want to retain rows that contain missing values and instead give them a default value when missing. For this example, we are going to map the null values within the gender column to U for Unknown. Pandas provide a built-in function that can achieve this .fillna(value=None, method=None, axis=None, inplace=False, limit=None, downcast=None).", "Pandas .fillna() is an incredibly powerful function when cleaning data or manipulating a DataFrame. The value parameter can accept a dictionary which will allow you to specify values that will be used on specific columns to fill null values. The benefit of this is when you don\u2019t wish to apply the same null filling value to all null elements within a DataFrame. The method parameter allows you to fill the null values based on other values within a series. You can set the method to ffill which will fill the null with the last valid value that exists in the series. The bfill method option performs a similar function however the filling value is taken from the next valid value that appears in the series. Both the axis and inplace parameters achieve the same outcome as in the .dropna() function discussed above. If you have set the method parameter, you can use the limit parameter to tell .fillna() the maximum number of consecutive null values to check forward/backwards to reach a valid value. If the method parameter is None the limit parameter can be used to set the maximum number of null values in the series that will be filled by the passed values.", "As the gender column has a categorical data type, before we can map missing values to U, we first need to create a new category in the series.", "To add a new category we need to isolate the gender column as a series and call .add_categories(). This will allow you to pass in new categories using new_categories=[] which accepts a list. Once your new category has been created you can then use .fillna() and reference the new category. To view the changes that were made you can call df['gender'].value_counts() which will isolate the gender column and provide a value count for each category within the series.", "In this context we understand the meaning behind the categories M, F and U however, the stakeholders receiving the data may not understand. To improve the readability of the analysis we can rename the categories to something more meaningful.", "The above snippet uses the built-in function .rename_categories() which accepts a dictionary that maps the current categories to a new category. The below shows the results of the renaming.", "As a data scientist, throughout your career, you are going to encounter incomplete and poor quality datasets. To generate high-quality analysis we need to ensure that we are cleaning data in order to accurately represent the dataset. Pandas offer a diverse range of built-in functions that can be used to clean and manipulate datasets prior to analysis. It can allow you to drop incomplete rows and columns, fill missing values and improve the readability of the dataset through category renaming.", "Thank you for taking the time to read our story, we hope you found it valuable.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "\ud83d\udd25 Aspiring Data Scientist | https://linktr.ee/deanmcgrath"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff6fadc433535&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f6fadc433535--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f6fadc433535--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://deanmcgrath.medium.com/?source=post_page-----f6fadc433535--------------------------------", "anchor_text": ""}, {"url": "https://deanmcgrath.medium.com/?source=post_page-----f6fadc433535--------------------------------", "anchor_text": "Dean McGrath"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F63250b873d7d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&user=Dean+McGrath&userId=63250b873d7d&source=post_page-63250b873d7d----f6fadc433535---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff6fadc433535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff6fadc433535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@stanyw?utm_source=medium&utm_medium=referral", "anchor_text": "Stan Y"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.python.org/", "anchor_text": "Python"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/index.html#", "anchor_text": "Pandas"}, {"url": "https://www.jetbrains.com/pycharm/", "anchor_text": "PyCharm"}, {"url": "https://gist.github.com/deanjamesss/f8f5781fb682fb728e9674dda9813982", "anchor_text": "CSV file"}, {"url": "https://gist.github.com/deanjamesss/3ccb847193ed93c22f7a1df61181d6ff", "anchor_text": "here"}, {"url": "https://medium.com/tag/data-science?source=post_page-----f6fadc433535---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/pandas?source=post_page-----f6fadc433535---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/programming?source=post_page-----f6fadc433535---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----f6fadc433535---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-analysis?source=post_page-----f6fadc433535---------------data_analysis-----------------", "anchor_text": "Data Analysis"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff6fadc433535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&user=Dean+McGrath&userId=63250b873d7d&source=-----f6fadc433535---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff6fadc433535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&user=Dean+McGrath&userId=63250b873d7d&source=-----f6fadc433535---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff6fadc433535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f6fadc433535--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff6fadc433535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f6fadc433535---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f6fadc433535--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f6fadc433535--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f6fadc433535--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f6fadc433535--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f6fadc433535--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f6fadc433535--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f6fadc433535--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f6fadc433535--------------------------------", "anchor_text": ""}, {"url": "https://deanmcgrath.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://deanmcgrath.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Dean McGrath"}, {"url": "https://deanmcgrath.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "235 Followers"}, {"url": "https://linktr.ee/deanmcgrath", "anchor_text": "https://linktr.ee/deanmcgrath"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F63250b873d7d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&user=Dean+McGrath&userId=63250b873d7d&source=post_page-63250b873d7d--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F2e719e66d191&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-cleaning-using-python-pandas-f6fadc433535&newsletterV3=63250b873d7d&newsletterV3Id=2e719e66d191&user=Dean+McGrath&userId=63250b873d7d&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}