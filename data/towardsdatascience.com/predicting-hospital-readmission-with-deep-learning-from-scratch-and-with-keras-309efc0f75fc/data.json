{"url": "https://towardsdatascience.com/predicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc", "time": 1683001566.990633, "path": "towardsdatascience.com/predicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc/", "webpage": {"metadata": {"title": "Predicting Hospital Readmission with Deep Learning from Scratch and with Keras | by Andrew Long | Towards Data Science", "h1": "Predicting Hospital Readmission with Deep Learning from Scratch and with Keras", "description": "Recently, I watched a video https://www.youtube.com/watch?v=JPBz7-UCqRo) from my friend Eric Ma on the fundamentals of deep learning. To teach deep learning, he breaks it into 3 key ingredients\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.youtube.com/watch?v=JPBz7-UCqRo", "anchor_text": "https://www.youtube.com/watch?v=JPBz7-UCqRo", "paragraph_index": 0}, {"url": "https://www.linkedin.com/in/ericmjl/", "anchor_text": "Eric Ma", "paragraph_index": 0}, {"url": "https://www.coursera.org/learn/neural-networks-deep-learning", "anchor_text": "class", "paragraph_index": 0}, {"url": "https://archive.ics.uci.edu/ml/datasets/diabetes+130-us+hospitals+for+years+1999-2008", "anchor_text": "https://archive.ics.uci.edu/ml/datasets/diabetes+130-us+hospitals+for+years+1999-2008", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/predicting-hospital-readmission-for-patients-with-diabetes-using-scikit-learn-a2e359b15f0", "anchor_text": "https://towardsdatascience.com/predicting-hospital-readmission-for-patients-with-diabetes-using-scikit-learn-a2e359b15f0", "paragraph_index": 1}, {"url": "https://github.com/andrewwlong/diabetes_readmission_deep", "anchor_text": "github repo", "paragraph_index": 3}, {"url": "https://www.coursera.org/specializations/deep-learning", "anchor_text": "https://www.coursera.org/specializations/deep-learning", "paragraph_index": 6}, {"url": "https://github.com/andrewwlong/diabetes_readmission_deep", "anchor_text": "https://github.com/andrewwlong/diabetes_readmission_deep", "paragraph_index": 48}], "all_paragraphs": ["Recently, I watched a video https://www.youtube.com/watch?v=JPBz7-UCqRo) from my friend Eric Ma on the fundamentals of deep learning. To teach deep learning, he breaks it into 3 key ingredients: model, loss function, and optimization routine. Throughout the tutorial, he uses an automatic differentiation toolbox. However, I find it deeply satisfying to do the derivatives myself (at least for simple cases). Today, I thought I would build a 2-layer neural network from scratch following Eric\u2019s approach but with algebraic derivatives (from Andrew Ng\u2019s Coursera class), and then implement it again using Keras (a deep learning framework).", "For this project, we will use the same dataset as my previous post on prediction hospital admission with the diabetes hospital dataset from UCI (https://archive.ics.uci.edu/ml/datasets/diabetes+130-us+hospitals+for+years+1999-2008). For review of this project and the feature engineering, see my prior post https://towardsdatascience.com/predicting-hospital-readmission-for-patients-with-diabetes-using-scikit-learn-a2e359b15f0", "Predict if a patient with diabetes will be readmitted to the hospital within 30 days.", "We will start this post as if we already completed the feature engineering section of my previous post which includes creating numerical, categorical (one-hot encoding), and ordinal features. These features are conveniently saved with the prior notebook and are included in my github repo.", "For deep learning, it is important to fill in missing values and normalize the data. We will use SimpleImputer and StandardScaler to do this from scikit-learn.", "Here we would like to build a simple two-layer neural network from scratch using the structure introduced by Eric Ma:", "I will try to stick to the notation introduced by Andrew Ng in his Coursera specialization (https://www.coursera.org/specializations/deep-learning).", "The model we will use is a two-layer neural network as shown below:", "Here we will have n_x input variables, n_1 hidden nodes, and an output node including m samples. For this model we will use logistic regression for the activation function in the hidden layer nodes as well as in the output layer.", "Here our activation functions will have the following form", "We will use a vectorized notation for more efficient calculation. In this notation, the first column of X will be all the features for the first sample (note this is opposite of what is loaded in Python at this point, so we will need to Transpose the X matrices).", "The parameters we will use for this model will have the following dimensions", "For simplicity, let\u2019s choose n1 = 64 nodes to approximately halve the number of input variables. Following Eric\u2019s notation, let\u2019s save all these parameters in a dictionary. We will initialize these randomly since setting to 0 will not work as the weights would all be the same node to node.", "To calculate our estimate of y_hat for our m examples, we can feed the information forward through the model with the following equations (note the dimensions are in curly braces).", "We can write this in code using the following feedforward function. Here we will leave the activation function for the hidden layer as an variable to the function.", "Now that we have a method for calculating y_hat given some parameters, we need to find the \u2018best\u2019 parameters. In order to define \u2018best\u2019, we need a cost function to define how good the parameters are. The loss function we use for binary classification is:", "Super obvious where this comes from right?", "I prefer to see where this comes from, so let\u2019s take a short detour and derive this equation. If we think about the output of our model as a probability of y given x, we can write the following for a single example:", "Which can be written more cleverly as:", "If we assume all of our samples are independent, the likelihood of seeing all of our data is the product of the individual probabilities:", "Now all we have to do is find the parameters that maximizes this likelihood. That sounds quite complicated given this has the product term. Fortunately, maximizing the log of the likelihood function also maximizes the likelihood function (since log is monotonically increasing). Before we do this, let\u2019s remind ourselves about a property of logs:", "Applying to our likelihood function gives us:", "This is close to our cost function! The only difference is we multiply by a -1 and divide by m (the number of samples). The negative multiplication switches it from maximization to minimization problem.", "For our optimization routines, we will need the derivative of this cost function J . Eric did this with the python package jax.grad", "but I would like to write this out explicitly to better understand the math.", "To do this derivative, we actually work from right to left in our neural network, a process known as Backpropagation. We can do this with derivative fundamentals: CHAIN RULE!", "Before we dive into this, let\u2019s pull some function derivatives we will use", "Since our cost sums over each sample, for now let\u2019s just drop the notation for each sample from the calculations (and the 1/m multiplier). Here we will use short-hand notation from Andrew Ng with definitions :=", "Now we can take derivatives for the parameters in the output layer (and properly taking into account the matrix math):", "To move backward in the network and considering any activation function g^[layer](Z[layer]) . Here * represents element-wise multiplication and comes into play because we are using chain rule for a single sample.", "As you can see here, there is a clear pattern that would allow us to expand this to any number of hidden layers.", "Let\u2019s write our back propagation function now that takes as inputs the parameters, a function for derivative of activation function, the feedforward values, and the output values.", "Here d_logistic is the derivative of the logistic function with respect to z.", "At this point it is good to verify that our parameters and d_params have the same shapes for each parameter set.", "We will use gradient descent to update our parameters. Gradient descent basically works by updating the parameters iteratively by moving the opposite direction of the gradient by the learning amount alpha . We can run this in a for loop and keep track of the losses. Note tqdmn allows us to see the progress with a progress bar (kind of neat, thanks Eric!).", "We can verify the losses decrease over iterations:", "We can then calculate our predictions for the training and validation sets:", "Using scikit-learn metrics, we can plot the ROC curve:", "The training of this by-scratch model was quite slow. Let\u2019s use Keras instead which has additional more efficient optimization routines like Adam. Keras is also great for building more complex networks in just a few lines of code.", "We will need to adjust our output labels just a bit for Keras to have one column for each label:", "Now we can build our model using Sequential. Here I will use the ReLu activation function instead of logistic function since ReLu tends to work better. I will also add in Dropout which is a form of regularization that helps reduce overfitting.", "Here the final output layer has two nodes (one for each label). These outputs get normalized with the softmax function to convert scores into probabilities.", "We then compile the model with the loss function and optimizer specified. Here \u2018categorical_crossentropy\u2019 is the formula for our loss function defined above. This also can be expanded to include any number of outcomes", "Now we fit the model with", "There are two input parameters here batch_size and epochs that are included with the fitting. Batch size indicates how many samples are used in each iteration. In our by-scratch implementation we included all samples in each iterations, which was took more time to compute. If you run the calculation with a smaller batch, you are able to iterate more quickly. Epoch is defined as how many times you iterate over the entire dataset after breaking it into smaller batches.", "Similar to scikit-learn, we get the predictions with predict proba and just grab the second column:", "I played around with different numbers of nodes in the hidden layer, drop rates and additional layers. The final model then has a validation AUC = 0.66 as shown in the ROC below:", "Unfortunately, this has the same performance as all the other models we trained in the prior post!", "In this post we trained a 2 layer neural network from scratch and with Keras. Please comment below if you have any questions. The code is on my github repo: https://github.com/andrewwlong/diabetes_readmission_deep", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F309efc0f75fc&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----309efc0f75fc--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----309efc0f75fc--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@awlong20?source=post_page-----309efc0f75fc--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@awlong20?source=post_page-----309efc0f75fc--------------------------------", "anchor_text": "Andrew Long"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcfde21be7ef1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&user=Andrew+Long&userId=cfde21be7ef1&source=post_page-cfde21be7ef1----309efc0f75fc---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F309efc0f75fc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F309efc0f75fc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.youtube.com/watch?v=JPBz7-UCqRo", "anchor_text": "https://www.youtube.com/watch?v=JPBz7-UCqRo"}, {"url": "https://www.linkedin.com/in/ericmjl/", "anchor_text": "Eric Ma"}, {"url": "https://www.coursera.org/learn/neural-networks-deep-learning", "anchor_text": "class"}, {"url": "https://archive.ics.uci.edu/ml/datasets/diabetes+130-us+hospitals+for+years+1999-2008", "anchor_text": "https://archive.ics.uci.edu/ml/datasets/diabetes+130-us+hospitals+for+years+1999-2008"}, {"url": "https://towardsdatascience.com/predicting-hospital-readmission-for-patients-with-diabetes-using-scikit-learn-a2e359b15f0", "anchor_text": "https://towardsdatascience.com/predicting-hospital-readmission-for-patients-with-diabetes-using-scikit-learn-a2e359b15f0"}, {"url": "https://github.com/andrewwlong/diabetes_readmission_deep", "anchor_text": "github repo"}, {"url": "https://www.coursera.org/specializations/deep-learning", "anchor_text": "https://www.coursera.org/specializations/deep-learning"}, {"url": "https://github.com/andrewwlong/diabetes_readmission_deep", "anchor_text": "https://github.com/andrewwlong/diabetes_readmission_deep"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----309efc0f75fc---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----309efc0f75fc---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----309efc0f75fc---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/python?source=post_page-----309efc0f75fc---------------python-----------------", "anchor_text": "Python"}, {"url": "http://creativecommons.org/publicdomain/zero/1.0/", "anchor_text": "No rights reserved"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F309efc0f75fc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&user=Andrew+Long&userId=cfde21be7ef1&source=-----309efc0f75fc---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F309efc0f75fc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&user=Andrew+Long&userId=cfde21be7ef1&source=-----309efc0f75fc---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F309efc0f75fc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----309efc0f75fc--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F309efc0f75fc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----309efc0f75fc---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----309efc0f75fc--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----309efc0f75fc--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----309efc0f75fc--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----309efc0f75fc--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----309efc0f75fc--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----309efc0f75fc--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----309efc0f75fc--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----309efc0f75fc--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@awlong20?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@awlong20?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Andrew Long"}, {"url": "https://medium.com/@awlong20/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "946 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcfde21be7ef1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&user=Andrew+Long&userId=cfde21be7ef1&source=post_page-cfde21be7ef1--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ffd1d11fed667&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpredicting-hospital-readmission-with-deep-learning-from-scratch-and-with-keras-309efc0f75fc&newsletterV3=cfde21be7ef1&newsletterV3Id=fd1d11fed667&user=Andrew+Long&userId=cfde21be7ef1&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}