{"url": "https://towardsdatascience.com/automating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8", "time": 1683007627.733643, "path": "towardsdatascience.com/automating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8/", "webpage": {"metadata": {"title": "Automating Sunday Meal Preps Using SQLite Relational Databases and Python | by Jennifer Kim | Towards Data Science", "h1": "Automating Sunday Meal Preps Using SQLite Relational Databases and Python", "description": "Becoming a real adult (and now, being in quarantine) means joining r/MealPrepSundays and recreating all the meal prep recipes. As my recipe repertoire grew, however, so did my need for storage. I had\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/jenniferrkim/recipe_database", "anchor_text": "here", "paragraph_index": 4}, {"url": "https://www.geeksforgeeks.org/normal-forms-in-dbms/", "anchor_text": "rules", "paragraph_index": 6}, {"url": "https://www.sqlite.org/foreignkeys.html", "anchor_text": "here", "paragraph_index": 13}, {"url": "https://www.sqlite.org/different.html", "anchor_text": "ease of setup and lack of a need for a server", "paragraph_index": 15}, {"url": "https://docs.python.org/2.5/lib/sqlite3-Cursor-Objects.html", "anchor_text": "here", "paragraph_index": 16}, {"url": "https://docs.python.org/2/library/sqlite3.html", "anchor_text": "here", "paragraph_index": 20}, {"url": "https://www.w3schools.com/sql/sql_injection.asp", "anchor_text": "SQL injections", "paragraph_index": 28}, {"url": "https://towardsdatascience.com/how-i-diyd-my-budget-using-python-for-selenium-and-beautiful-soup-4d2edc5c519", "anchor_text": "here", "paragraph_index": 45}, {"url": "https://github.com/jenniferrkim/recipe_database", "anchor_text": "here", "paragraph_index": 46}], "all_paragraphs": ["Becoming a real adult (and now, being in quarantine) means joining r/MealPrepSundays and recreating all the meal prep recipes. As my recipe repertoire grew, however, so did my need for storage.", "I had originally been tracking all my attempted recipes in a spreadsheet, meticulously organizing first by course of meal, then by main ingredient. I had also included other attributes I wanted to keep track of, including the cuisine, difficulty, and any dietary restrictions of the recipe. But growth in the number of rows also meant growth in time spent organizing and searching. I needed a new, more powerful storage unit. That\u2019s when I began researching the uses of the spreadsheet\u2019s lightweight (albeit less attractive, UI-wise) cousin, the SQLite relational database.", "I wanted this new recipe database to remedy my spreadsheet woes. I, therefore, designed it to:", "In the end, my recipe database did accomplish all these goals. Did it turn out to be the most user-friendly/workable option? Probably not, and I learned SQLite likely isn\u2019t the best option for a project like this. I did, however, create some fundamental building blocks of a recipe database and develop a newfound appreciation of existing spreadsheet applications. If you\u2019re interested in seeing how SQLite and python\u2019s pandas can be used in the context of recipes, let\u2019s get on to the practicalities.", "The full code can be found at my Github here. I used a Jupyter notebook for easy viewing, but feel free to break it up into the labeled files.", "The first criteria I wanted my database to meet was maximizing room for growth, which is directly affected by its structure. As a database expands, it\u2019s especially important to minimize redundancies that could affect the efficiency of storage. This concept is called normalization.", "While different normalization forms encompass their own specific rules, normalization as a whole generally entails breaking one large table into smaller ones and maintaining connections between these divisions. The structure of these smaller tables is dictated by the relationships of the underlying data, of which there are three types: one-to-one, one-to-many, and many-to-many.", "The simplest database relationship is the one-to-one. This is when one record in Table A is linked to one and only one record in Table B. In a recipe database, a recipe and its instructions have a one-to-one relationship, as it is highly unlikely two recipes would have exactly the same instructions. Therefore a table of recipe names and a table of recipe instructions would have one row of a recipe name correspond to only one row of recipe instructions.", "For most of the other recipe attributes (e.g. difficulty, cuisine, course, and dietary type), there is a one-to-many relationship. One record in Table A is linked to (you guessed it!) multiple records in Table B. For example, one difficulty level (e.g. \u201ceasy\u201d) can have many recipes associated with it, as there can be many \u201ceasy\u201d recipes. The reverse isn\u2019t true however \u2014 one recipe can\u2019t be both \u201ceasy\u201d and \u201cdifficult\u201d (unless my cooking abilities drastically change from one day to the next).", "The final type of relationship between tables is the many-to-many. In the recipes database, one recipe can have many ingredients, and one ingredient can be used in many recipes.", "Implementation of a many-to-many relationship requires a third junction table to comply with normalization rules. Between my Recipes table and Ingredients table, I\u2019ve created a junction table called Recipe_Ingredient. This third table breaks up the many-to-many relationship into two one-to-many relationships.", "On the right side of the drawing, you may have noticed there isn\u2019t just one Ingredients table, but four separate tables, including a Unit table, Quantity table, and Prep Method table. This structure takes advantage of the many-to-many relationships the ingredients\u2019 units, quantities, and preparation methods have with a recipe. While I could have instead utilized the one-to-many relationships between the ingredients and its respective units, quantities and preparation methods, I preferred to congregate all the ingredients-related information in one place in the Recipe_Ingredients table.", "Now that the tables are split, the question of how they can be linked arises. All the previous schema drawings have arrows, stemming from a particular table to its equivalent \u201cid\u201d column in another table. The base of the arrow indicates a primary key, or a unique identifier of a row in its particular table. The tip of the arrow points to a foreign key, or a reference to a primary key.", "These keys help not only to establish relationships, but also to reduce redundancies. When making changes, if I one day wanted to change \u201ceasy\u201d to \u201ceffortless,\u201d I would merely need to make one change in the Difficulty table. If a primary foreign key relationship did not exist, I would need to go through all the rows with an \u201ceasy\u201d and make the change individually. Establishing this link additionally saves orphaned records by preventing any deletions of primary keys with dependent foreign keys. For more information on SQLite foreign keys, check out the docs here.", "Now that the setup is complete, it\u2019s time to implement with Python.", "Database Management System, or DBMS, is a catch-all phrase for systems that that help handle databases. A subset of these can handle relations, categorizing them under RDBMS, with the additional R for relations. As I require relations management, I chose SQLite, an RDBMS, for its ease of setup and lack of a need for a server.", "The Cursor object will come in handy later when we want Python to interact with the database and process SQL queries. More information can be found in the Python docs here.", "Once any changes are made, you want to save using the Commit statement.", "Once you\u2019re done with the connection, close it using:", "Alternatively, you can use the with statement to ensure the connection is closed after you run your necessary code.", "For more setup information straight from the source, visit the Python docs here.", "While I will not cover simple SQL syntax, I\u2019ll explain tips and tricks I\u2019ve found useful when implementing the database structure created at the start of this article.", "The primary and foreign keys established earlier can now be implemented as we created our tables. Below is an example of a Recipe table:", "Applying these FOREIGN KEY constraints ensures all foreign keys in any row of the recipe table will be linked to a primary key of another table. For example, if a row inserted into the recipe table\u2019s difficulty_id does not have a corresponding primary key in the difficulty table, the insertion will fail.", "After setting up tables with primary and foreign keys, we now want to insert some values.", "Thanks to the INTEGER PRIMARY KEY NOT NULL keywords we used, we do not have to insert explicit values for our tables\u2019 primary keys. Simply insert a value for the row, and the table will automatically generate a unique integer to number it.", "To insert a foreign key, I like to use the following syntax:", "Using the SELECT statement this way ensures I find the correct corresponding primary key, even if I don\u2019t know the unique integer off the top of my head.", "I wanted the row entries that were neither primary nor foreign keys to be user given values. Luckily, SQL provides us with prepared statements to insert values we do not know ahead of time. With prepared statements, we can specify parameters as queries, using a question mark as syntax. These are used instead of traditional Python string formatting to protect ourselves from SQL injections. In the following function, I\u2019ve used a prepared statement to insert instructions for a recipe.", "For some attributes, like cuisine, I know there is a high likelihood the value inserted will be one that already exists in the database from previous entries. In keeping up with the theme of efficiency, I wanted to prevent repeats by checking for existence. In select tables I used a SELECT statement within a prepared statement.", "While most of my tables have rows inserted based on user input, I wanted two of my tables, course and diet, to have only the values I pre-selected.", "While SQLite does support None types as NULL, I added the string \u201cNone\u201d as an option. I\u2019ve found SQLite does not consider NULL as a searchable value when I use my select method to insert foreign keys. Therefore I chose to put \u201cNone\u201d as a value so recipes can be indicated as having no dietary restrictions.", "A side note on execute() vs executemany()", "As used in the two examples above, the Cursor object has a Cursor.execute() method for passing SQL queries as strings. What\u2019s not shown above is Cursor.executemany(), which is handy for inserting multiple rows at once. Make sure to pass in the rows you want to insert as a list.", "The greatest challenge when planning this recipe database was ingredients handling, as there are four attributes to just one ingredient: name, quantity, unit, and preparation method. I ultimately chose to group these attributes as a dictionary per ingredient. It seemed like a natural spreadsheet to Python move, with each column translating into a key.", "While a dictionary like this is a pain to manually type, a good user interface can hopefully make this manageable.", "Retrieving and viewing the recipes is crucial for use. To meet my second and third goal for this database, I built two functions in view.py: one to view selected recipes, and another to gather an aggregated list of ingredients.", "The first function I named (very originally) print_recipes(). I wanted to filter and choose recipes based on criteria I selected, and implemented this \u201csearch\u201d function with keyword arguments I then formatted into a SQL SELECT query. The keyword arg would have a category as the key and a category selection as the value. Since the arguments aren\u2019t positional, I can pass in as many criteria as needed.", "SQL queries in Python are unfortunately cumbersome strings, so the rest of the function is dedicated to formatting the arguments. In the case of multiple arguments, I decided to concatenate the search criteria with an OR as opposed to an AND. This is because I knew most of my searches would be of ingredients from the previous week I wanted to use up. To find recipes that included all the ingredients I wanted to use, I needed a union of the ingredients, not an intersection. If you\u2019ll be searching for something that requires an intersection of your criteria, feel free to change this to an AND. If you\u2019re feeling a bit more ambitious, try integrating a toggle between OR and AND searches.", "After all the string formatting, you\u2019ll be rewarded with a function spits out a dataframe of the recipes you\u2019ve selected with your keyword arguments. Now it\u2019s time to put together a shopping list.", "The second function returns my shopping list in a function called convert(). It takes the recipe dataframe created in the previous function, print_recipes(), and returns a dictionary of its ingredients, with all repeating ingredients summed.", "While ingredients with the same units are simple to combine, the ones that require unit conversions are trickier. Using pandas\u2019 groupby()and nunique(), the function first searches the dataframe for unique ingredients. Based on whether that ingredient\u2019s units are convertible (options hard-coded in the dictionary conversion_chart), the function will aggregate (after much dataframe filtering) multiple instances of that ingredient into one unit specified by the user in a convert() argument.", "After all the ingredients are added to the dictionary, you have your shopping list!", "With zero user interface experience, I needed a quick and easy way to access my database. I used Python\u2019s input() function to get user responses and implement rudimentary controls. These inputs are then used to kick off database insertion and retrieval in the main.py file.", "Now you have a fully functioning (and somewhat breakable) recipe database that maximizes room for growth, allows for easy sorting and searching, and simplifies your week\u2019s grocery shopping.", "If you\u2019d rather have a database filled with recipes from the Internet, try using Selenium and Beautiful Soup to scrape recipes from your favorite website. A tutorial for these tools with a different use case can be found here.", "The full code can be found at my Github here. I used a Jupyter notebook for easy viewing, but feel free to break it up into the labeled files.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "newly ex-student sharing post-grad dabbles. alum @ nyu"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fc85821099ca8&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----c85821099ca8--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c85821099ca8--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@jennifer.kim7?source=post_page-----c85821099ca8--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jennifer.kim7?source=post_page-----c85821099ca8--------------------------------", "anchor_text": "Jennifer Kim"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F365eb23e93d8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&user=Jennifer+Kim&userId=365eb23e93d8&source=post_page-365eb23e93d8----c85821099ca8---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc85821099ca8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc85821099ca8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@lvnatikk?utm_source=medium&utm_medium=referral", "anchor_text": "Lily Banse"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/jenniferrkim/recipe_database", "anchor_text": "here"}, {"url": "https://www.geeksforgeeks.org/normal-forms-in-dbms/", "anchor_text": "rules"}, {"url": "https://www.sqlite.org/foreignkeys.html", "anchor_text": "here"}, {"url": "https://www.sqlite.org/different.html", "anchor_text": "ease of setup and lack of a need for a server"}, {"url": "https://docs.python.org/2.5/lib/sqlite3-Cursor-Objects.html", "anchor_text": "here"}, {"url": "https://docs.python.org/2/library/sqlite3.html", "anchor_text": "here"}, {"url": "https://www.w3schools.com/sql/sql_injection.asp", "anchor_text": "SQL injections"}, {"url": "https://towardsdatascience.com/how-i-diyd-my-budget-using-python-for-selenium-and-beautiful-soup-4d2edc5c519", "anchor_text": "here"}, {"url": "https://github.com/jenniferrkim/recipe_database", "anchor_text": "here"}, {"url": "https://medium.com/tag/programming?source=post_page-----c85821099ca8---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/sql?source=post_page-----c85821099ca8---------------sql-----------------", "anchor_text": "Sql"}, {"url": "https://medium.com/tag/pandas?source=post_page-----c85821099ca8---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/meal-planning?source=post_page-----c85821099ca8---------------meal_planning-----------------", "anchor_text": "Meal Planning"}, {"url": "https://medium.com/tag/python?source=post_page-----c85821099ca8---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc85821099ca8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&user=Jennifer+Kim&userId=365eb23e93d8&source=-----c85821099ca8---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc85821099ca8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&user=Jennifer+Kim&userId=365eb23e93d8&source=-----c85821099ca8---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc85821099ca8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c85821099ca8--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fc85821099ca8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----c85821099ca8---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----c85821099ca8--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----c85821099ca8--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----c85821099ca8--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----c85821099ca8--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----c85821099ca8--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----c85821099ca8--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----c85821099ca8--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----c85821099ca8--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jennifer.kim7?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jennifer.kim7?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Jennifer Kim"}, {"url": "https://medium.com/@jennifer.kim7/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "52 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F365eb23e93d8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&user=Jennifer+Kim&userId=365eb23e93d8&source=post_page-365eb23e93d8--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F2de7d3423284&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomating-sunday-meal-preps-using-sqlite-relational-databases-and-python-c85821099ca8&newsletterV3=365eb23e93d8&newsletterV3Id=2de7d3423284&user=Jennifer+Kim&userId=365eb23e93d8&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}