{"url": "https://towardsdatascience.com/julia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1", "time": 1683005145.534934, "path": "towardsdatascience.com/julia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1/", "webpage": {"metadata": {"title": "Julia Oop Vs. Julia Dispatch: Who is the speed king? | by Emma Boudreau | Towards Data Science", "h1": "Julia Oop Vs. Julia Dispatch: Who is the speed king?", "description": "In a previous article I wrote which is linked above, I made a pretty significant advancement in my machine-learning package for Julia, Lathe, which allows for object-oriented programming inside of\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["In a previous article I wrote which is linked above, I made a pretty significant advancement in my machine-learning package for Julia, Lathe, which allows for object-oriented programming inside of the primarily functional multi-paradigm language Julia. The concept itself is quite unique to Julia, as the constructed type is created with no return in place, and no structs that would typically be used to construct the type in sight.", "However useful the concept is, in order to make a significant change to software that has been around for a while, I think that testing is important. Lathe\u2019s niche primarily is machine-learning gurus who are in search of the following parameters:", "These are the pillars of Lathe as a software, and any modification needs to fit these parameters, and outweigh the cost of losing ground in one parameter or another. Before we examine the \u201c new kid on the block,\u201d let\u2019s look at the methodology that Lathe currently employs,", "Julia\u2019s dispatch is a fantastic way to apply methods as properties of structs using a generic programming concept founded out of the functional paradigm with its inclusion in the ML programming language, parametric polymorphism. Rather than utilizing a typical functional approach, where methods interact with static data stored in types, Julia\u2019s dispatch essentially applies a universal rule for directing traffic through a method to the language itself.", "In terms of speed, Julia\u2019s dispatch certainly has it down. Compared to using conditionals, or individual functions, using the lightweight dispatch can double the speed. Julia, to begin with, is a language built with speed in mind, and as a result is pretty fast, however, coupling the natural speed of the language with well-written, dispatched code can make Julia blaze past the competition.", "With the current solution in Lathe, types are easily dispatched through a universal method, the predict() method like so:", "Coupled with the built-in ?() documentation in Lathe, I believe that this is relatively straight-forward and easy to use. On top of that, there hasn\u2019t been much need for exception handling because Lathe was built with tethering to DataFrames.JL in mind, and works with Julia\u2019s base types. This is an issue I have seen in many languages, including Julia, but most often in Python, because of Python\u2019s extendable and minimalist nature as a statistical language (there isn\u2019t much linear algebra without Numpy, so packages built with something else in mind are automatically limited by that.) I have certainly ran into issues whenever trying to pass Numpy arrays through list functions, as well as Pandas Series through all kinds of functions.", "Using Julia\u2019s dispatch allows Lathe to be modified when explicitly imported. This I see as a massive benefit to conjuring a consistent ecosystem. Packages that aren\u2019t related to Lathe still have the potential to extend Lathe\u2019s functions. All extension can easily be done and rerouted using Julia\u2019s dispatch, making extending Lathe straightforward and simple.", "One of the most important things to me as a Data-Scientist is to build something that can scale to large applications, while simultaneously doing very well in the smaller scale applications. Fortunately, through lots of hard work, Lathe models are deploy-able and able to be entirely automated with Genie. Automation can range from retraining and serialization to testing.", "Julia\u2019s dispatch is relatively straightforward in that it needs three key parts:", "This is a relatively lightweight solution, as it does not have a need for large classes with several functions being carried with them, but rather holds the language accountable for the properties of the struct in terms of using the data for actual computation.", "With all of these pillars of Lathe well-covered, could the obscure trick to make Julia do object-oriented programming possibly outmatch the dispatch? The biggest issue in the use of the dispatch is the lack of initialization. The lack of initialization means that without a train function, any values calculated will need to be recalculated prior to using the model again, which is terrible.", "For a lot of cases, however, this isn\u2019t significant, as the Julia language can make up for our sins. The issue arises whenever large neural networks are being trained inside of Lathe\u2019s new neural network framework. Obviously cost can\u2019t be computed each time the model needs to be accessed, and a save state of values is definitely necessary to mitigate that issue.", "Aside from being able to train models on initialization, it is important to test the performance impact this will have on making predictions and dispatching data as a whole, as well as extending the dispatching of the data and allowing it to be mutated.", "In order to test this new functional methodology, I decided to load up a data-set I have sitting on my computer for regression performance testing, formally known as", "We can read this CSV file in using CSV.jl:", "Since Julia omits the printing of columns, the next step is to show every column in the data-frame so we can get an idea of what features we can use to predict a specific target. We can do this using the parameter allcols (bool type) to the show() method which is dispatched to show a DataFrame, like so:", "Since we\u2019re performance testing, I separate the two features I selected, Temperature and Humidity, into a two column DataFrame. This will make viewing the data significantly easier, as well as make the entirety of it relatively more clean.", "Next, I decide on my feature and target and use symbols to access them by variable names (in case we wanted to change features later, for example):", "Now it\u2019s as easy as plugging in those variables we assigned just a second ago:", "Now let\u2019s import what we need from Lathe.models, and predict:", "Now with the same code, but in super-struct form (my previous article shows the source):", "Consistently, in a series of stressful tests that probably made my CPU want to retire early, Julia oop outperformed Julia\u2019s dispatch. More astounding is the allocation drop with around 67% less allocations (70% on average (when repeating the test)), with a time decrease of about 16% (18% on average (when repeating the test)) in calculation time.", "So yes, it is indeed a lot more efficient.", "I think that this new method shows a lot of promise for scalability, however, could but a bullet hole in the idea of extendability. With no clear determined type, we run the risk of methods universally not recognizing the struct and needing to have all functions associated with the type embedded, which is unfortunate. Another unfortunate side effect will be the death of legacy code. Lathe has officially left the long term support that 0.0.1 has had since its inception, which is kind of sad. Fortunately, I do believe that this advancement does more positive than negative, and will certainly allow for expansion in multiple areas of predictive modeling.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fed0fc809d0d1&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://emmettgb.medium.com/?source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": "Emma Boudreau"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c----ed0fc809d0d1---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fed0fc809d0d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fed0fc809d0d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/how-im-using-functional-oop-for-machine-learning-533c1d764628", "anchor_text": "How I\u2019m Using FUNCTIONAL OOP For Machine-LearningHow and why i\u2019m applying the object-oriented paradigm to Julia machine-learning.towardsdatascience.com"}, {"url": "https://github.com/emmettgb/Emmetts-DS-NoteBooks/blob/master/Julia/Super%20struct%20vs%20dispatch%20performance.ipynb", "anchor_text": "Open-Source notebook for this test"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----ed0fc809d0d1---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----ed0fc809d0d1---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----ed0fc809d0d1---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/julia?source=post_page-----ed0fc809d0d1---------------julia-----------------", "anchor_text": "Julia"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----ed0fc809d0d1---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fed0fc809d0d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&user=Emma+Boudreau&userId=ea170050148c&source=-----ed0fc809d0d1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fed0fc809d0d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&user=Emma+Boudreau&userId=ea170050148c&source=-----ed0fc809d0d1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fed0fc809d0d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fed0fc809d0d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----ed0fc809d0d1---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----ed0fc809d0d1--------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Emma Boudreau"}, {"url": "https://emmettgb.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "4.6K Followers"}, {"url": "https://twitter.com/emmettboudgie", "anchor_text": "https://twitter.com/emmettboudgie"}, {"url": "https://github.com/emmettgb", "anchor_text": "https://github.com/emmettgb"}, {"url": "https://ems.computer/", "anchor_text": "https://ems.computer/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff16bf42bb45f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fjulia-oop-vs-julia-dispatch-who-is-the-speed-king-ed0fc809d0d1&newsletterV3=ea170050148c&newsletterV3Id=f16bf42bb45f&user=Emma+Boudreau&userId=ea170050148c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}