{"url": "https://towardsdatascience.com/interactively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de", "time": 1682995186.721183, "path": "towardsdatascience.com/interactively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de/", "webpage": {"metadata": {"title": "Interactively exploring Reddit posts using basic Scala in your browser | by Matt Hagy | Towards Data Science", "h1": "Interactively exploring Reddit posts using basic Scala in your browser", "description": "This is part three of our tour through Scala. If you\u2019re just arriving and would like to start at the beginning, checkout Quickly learning the basics of Scala through Structure and Interpretation of\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/@matthagy/quickly-learning-the-basics-of-scala-through-structure-and-interpretation-of-computer-programs-ed5bfa90e8dc", "anchor_text": "Quickly learning the basics of Scala through Structure and Interpretation of Computer Programs examples", "paragraph_index": 0}, {"url": "http://scala-lang.org", "anchor_text": "scala-lang.org", "paragraph_index": 52}, {"url": "https://pushshift.io/", "anchor_text": "pushshift.io", "paragraph_index": 60}, {"url": "http://matthagy.com", "anchor_text": "matthagy.com", "paragraph_index": 62}], "all_paragraphs": ["This is part three of our tour through Scala. If you\u2019re just arriving and would like to start at the beginning, checkout Quickly learning the basics of Scala through Structure and Interpretation of Computer Programs examples.", "Today we\u2019re going to do some novel programming exercises based around actual Reddit data. I\u2019ve prepared a random sample of roughly ten thousand posts from the month of October 2018 for us to interactively explore by writing basic Scala in widgets within this article.", "Here\u2019s a preview of some of the Scala we\u2019ll be writing to analyze Reddit posts.", "Let\u2019s dive right in and figure out how to access this data, run computations on it, and thereby analyze Redditors by writing and running Scala code directly in our browser.", "The following code fetches the Reddit post data from a web server and shows the first few lines of the Reddit data. There are some new Scala concepts in the code that we won\u2019t need to understand today since we\u2019ll just be using the code to fetch the Reddit data. Instead, we\u2019ll focus on the code we write to explore the data.", "Aside: This is a generally cool feature of programming: we can commonly use functions in libraries developed by other programmers to perform computation for us, even when we don\u2019t understand the details of the code in the library. Professional software engineers commonly use libraries in their work specifically so they don\u2019t have to learn the details of how to solve a programming problem that someone else has already solved.", "Hit \u201cRun\u201d on the following widget to run the code and see the results.", "(Note, you can click \u201cEdit on ScalaFiddle\u201d on any ScalaFiddle widget in this article if you find the ScalaFiddle widget too horizontally compressed in the embedded form. In such cases, you\u2019ll find the presentation on the ScalaFiddle website to be more readable.)", "Pretty cool how easily we can access this interesting data, right? Now let\u2019s figure out how to explore the data and compute novel results that provide interesting insights into Redditors.", "We receive the data as one very long string. You can modify the Scala code in the previous ScalaFiddle widget to call.length on the string and print the number of characters. I.e., we\u2019ll modify our anonymous function at the bottom of the code to have the following form.", "Run that and you\u2019ll see that the data string consists of just under a million characters. Hence, we have some serious data to process here.", "Let\u2019s look at the sample again to see how we\u2019ll want to process this long string.", "This text data is in comma-separated value (CSV) format. Conventionally such data is shown as a table.", "We can see that each single line of the file corresponds to a single post. Hence, first, we\u2019ll want to break this string up by lines to access the individual line for each post. We can split a string into substrings \u2014 based on a specific splitting character \u2014 using the string method split. To split into lines, we\u2019ll use the newline character \"\\n\" as the splitting character.", "Lastly, we\u2019ll convert the return value of split to a list using toList and show the number of lines. You can go back to the ScalaFiddle widget and modify our processing code to be as follows.", "The results show that we have roughly 11,000 Reddit posts in this data.", "Now we still have some more work to do in preparing our data for programmatic exploration because each Reddit submissions contains multiple attributes. Going back to the sample, we see that each line is a comma-separated string of values for each post. In order, the attributes are:", "We\u2019ll again use String.split to access the individual fields of each post, this time using \",\" as the splitting character.", "We want a way to organize together all of the different attributes of a single post and for that, we can create a Scala class. At a high level, a class just allow us to organize together related data elements like the different attributes of a Reddit post. Here\u2019s how we define a class for this data.", "Here\u2019s an example of how we can use the Post class. Modify the code as you like to get a feel for ourPost data type.", "We\u2019ll cover classes in more detail in the future. For now, it\u2019s good enough to know that this class defines a new data type to represent Reddit posts, with each post having four attributes: subreddit, author, title, and score.", "Let\u2019s now modify our processing code to parse our raw data into a list of posts. I.e., create aList[Post].", "Now we have a list of posts in val posts: List[Post]. So let\u2019s start exploring this Reddit post data!", "First, let\u2019s count the number of posts for a single subreddit. You can add the following code to our processor function in the previous ScalaFiddle widget.", "Here we\u2019re using the filter method ofList to create a new list that just contains the posts that are from the subreddit \u201cAskReddit\u201d. In general, we can use filter with any function we write to select elements of a List and thereby create a new List that just contains those elements of interest.", "Feel free to modify the code to count the number of posts in our sample for any subreddit you\u2019re interested in.", "Building off that exercise, let\u2019s compute the number of posts for every single subreddit. In this computation, we\u2019ll build a data structure that associates each subreddit with its posts count. This will require us to introduce a new Scala data structure called Map.", "Map[K, V] is an association between keys of type K to values of type V. In this exercise, we\u2019ll be building a Map[String, Int] to associate subreddit name to count of posts. Here are some examples of how we can work with such a map.", "Can you add code to create forthMap that adds the key \"new key\" with a value of 12 to our val map: Map[String, Int]?", "For people familiar with other programming languages, you may be surprised to see that Map.updated returns another newMap. In general, Scala encourages us to use immutable data structures and therefore we avoid modifying anything in place. Instead, we create new data structures to represent the results of any change. Scala does some really clever things behind the scenes to make such updates efficient in both processing time and memory usage.", "Note that Map[K, V].get(key) returns an Option[V]. Option is used to account for the fact that it\u2019s possible we don\u2019t have a value for the given key. Option is a general data type that can take two forms, Some(value) and None. Some(value) denotes that we do have a value for the key and we can access that value through Some.get. Whereas None denotes that there was no value for the key.", "Option has a useful method getOrElse(alterantive). When called on Some it returns the value contained in Someand ignores alterantive. Whereas None.getOrElse(alternative) returns the value of alternative. We\u2019ll use this method in our code to replace None with zero when we fetch the count for a subreddit that we currently don\u2019t yet have a count for.", "Using Map, here is how we can compute the number of posts for each subreddit.", "Note how we\u2019re using foldLeft, a variant of fold, to process each post and increment the count for the corresponding subreddit in the map. You may recall that fold is used to aggregate all values in a list down to a single value. In this case, the final value is aMap[String, Int] that associates subreddits to their count of posts.", "A quicker refresher on fold functions: We call foldLeft with our initial value of aggregation and our folding function. fold calls our folding function for every element in the list. In each call, the folding function also receives the current value of the aggregation. Our function returns the updated value of the aggregate that incorporates the list element. The fold functions return the final value of aggregation after processing every element in the list using our folding function.", "Spend some time reviewing this code to see if you can reason through how we\u2019re computing the number of posts for each subreddit. As an exercise, can you modify this example code to instead count the number of posts for each user?", "While the current results are nice, we\u2019re more interested in knowing the results for the top subreddits; i.e., those with the most posts in this sample of Reddit posts. To that end, we\u2019ll need a way to order the subreddits by the number of posts so that we can select the top few subreddits to show. In computer science terminology, such a process is referred to as sorting.", "You can add the following code to the preceding example to sort the subreddits by post count and then show the top 10 in this sample of Reddit posts.", "There are a few new things going on here. First, we\u2019re converting subredditCount from Map[String, Int] to List[(String, Int)] using the Map.toList method. This introduces a new concept called tuples in that (String, Int) is the type for a length-two tuple where the first element is a string and the second element is an integer.", "Tuples are a general data type in Scala that can be used to represent fixed length collections of elements whereby each position has a fixed type. E.g., (String, String, String, int) is a length-four tuple. We could\u2019ve used this tuple type instead of the class Post to represent the data in a single Reddit post.", "In general, classes are a more legible way to group together related elements. Tuples can be useful in some cases, particularly in cases where we want to write generic algorithms that use placeholder types. This is the case in wanting a general method to convert a Map[K, V] in a list of associated pairs, List[(K, V)].", "Next, we\u2019re using the method sortBy to sort our list of tuples. The method takes a function that computes a ranking score for each element of the list. The elements of the list are sorted by rank and a new list is returned by sortBy in which the elements are ordered. You can see that our ranking function just fetches the count for each subreddit by accessing the second element of the tuple, t._2.", "The results for our sample of Reddit posts are as follows.", "In thinking about the numbers, we should remember that this is a small random sample of all Reddit posts so the counts are going to be much smaller than the full number of posts. Our sample is 0.1% sample of all Reddit posts in October 2018, so we could multiply these numbers by 1000 to estimate the total number of posts for each subreddit for this month.", "With my passing familiarity with Reddit, I\u2019d say these results seem consistent with my intuition about popular subreddits like \u201cAskReddit\u201d. What do you think?", "Can you modify your earlier exercise code that computes the number of posts per author so that the results are sorted? Who are the top authors in this sample of Reddit posts?", "Next, let\u2019s see if our sample includes any posts with Scala in the title. You can add the following snippet to the previous ScalaFiddle widget to answer this question.", "What do you think about these posts? Is every one of them about Scala or is there a deficiency in using this heuristic to programmatically identify relevant posts? We\u2019ll consider more sophisticated ways to analyze posts soon.", "What other words are interesting to you? Modify the code as you\u2019d like to look for other posts that have certain keywords. In many ways, we\u2019re building a simple, custom search engine to find posts relevant to our interests across this small sample.", "Note, I myself have discovered a non-trivial amount of obscene language. As an exercise, you could write some Scala code to find posts that contain swear words. I\u2019m not including example code for this because I don\u2019t want to have a list of curse words on my blog. :)", "In general, we\u2019d be interested in computing the frequency of different words in post titles across each subreddit. Here\u2019s some moderately sophisticated code that accomplishes such an analysis.", "Take some time and think through this example. It\u2019s a good review of many of the concepts we\u2019ve considered so far in current and past articles. Reminder, that you can click \u201cEdit on ScalaFiddle\u201d on the widget to open the example in a separate window that doesn\u2019t have the horizontal compression of the widget to better read the code.", "The example code includes some concepts we haven\u2019t yet explored. If you\u2019d like, you could explore these concepts on your own \u2014 ahead of our shared journey through Scala \u2014 using resources at scala-lang.org. In general, that website is a great place to learn about Scala concepts. And, of course, a general Google search can also turn up some useful resources, including StackOverflow questions and answers.", "One thing I\u2019d like to explain at present is how this code example uses two cases of using pattern matching to deconstruct data structures. In these cases, we\u2019re accessing the elements of a tuple through pattern matching deconstruction. Here\u2019s an isolated example of deconstructing tuples in a function.", "You can see we\u2019ve defined the function in a non-standard fashion. In general, we\u2019d primarily use this pattern in anonymous functions, which is what we\u2019ve done in the word frequency example.", "In addition to analyzing the Scala code, what do you think of these results? Do the word frequency results seem appropriate given your knowledge of Reddit? Are there any surprising results in highly frequent words for certain subreddits?", "You can modify and extend these examples however you\u2019d like to compute anything that interests you about Reddit posts. Here are some ideas for things you might want to compute for this sample of Reddit posts.", "I hope you\u2019re enjoying applying Scala to analyze Reddit and learn a bit about Redditors. In the future, I\u2019ll be showing you how to perform this analysis on the full set of Reddit posts for the month of October 2018. There are 11,306,843 posts in this month so we\u2019ll need to learn how to apply Scala using the \u201cbig data\u201d technology Spark.", "You\u2019ll be surprised to see how the code we write in these \u201cbig data\u201d exercises is no more complicated than the code we\u2019ve written in today\u2019s exercises. Processing \u201cbig data\u201d can be just as easy as small data when we use powerful technologies like Spark and Scala.", "And thank you for working through another series of Scala exercises with me. I hope this one has been particularly fun because we\u2019re getting to learn about real-world data. I\u2019ll do what I can to create more exercises with this style.", "I\u2019d like to thank pushshift.io for hosting Reddit data dumps. This is a really interesting source of data and it was easy for me to take a small sample from the full dataset for October 2018 for these examples and exercises. You can download this data yourself and write your own Scala code to start performing more sophisticated analyses.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Software Engineer and fmr. Data Scientist and Manager. Ph.D. in Computational Statistical Chemistry. (matthagy.com)"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff394843069de&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f394843069de--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f394843069de--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@matthagy?source=post_page-----f394843069de--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@matthagy?source=post_page-----f394843069de--------------------------------", "anchor_text": "Matt Hagy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3fe708dd30ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&user=Matt+Hagy&userId=3fe708dd30ed&source=post_page-3fe708dd30ed----f394843069de---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff394843069de&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff394843069de&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://medium.com/@matthagy/quickly-learning-the-basics-of-scala-through-structure-and-interpretation-of-computer-programs-ed5bfa90e8dc", "anchor_text": "Quickly learning the basics of Scala through Structure and Interpretation of Computer Programs examples"}, {"url": "http://scala-lang.org", "anchor_text": "scala-lang.org"}, {"url": "https://pushshift.io/", "anchor_text": "pushshift.io"}, {"url": "https://medium.com/tag/programming?source=post_page-----f394843069de---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/scala?source=post_page-----f394843069de---------------scala-----------------", "anchor_text": "Scala"}, {"url": "https://medium.com/tag/social-media?source=post_page-----f394843069de---------------social_media-----------------", "anchor_text": "Social Media"}, {"url": "https://medium.com/tag/data-analysis?source=post_page-----f394843069de---------------data_analysis-----------------", "anchor_text": "Data Analysis"}, {"url": "https://medium.com/tag/data-science?source=post_page-----f394843069de---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff394843069de&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&user=Matt+Hagy&userId=3fe708dd30ed&source=-----f394843069de---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff394843069de&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&user=Matt+Hagy&userId=3fe708dd30ed&source=-----f394843069de---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff394843069de&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f394843069de--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff394843069de&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f394843069de---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f394843069de--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f394843069de--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f394843069de--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f394843069de--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f394843069de--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f394843069de--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f394843069de--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f394843069de--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@matthagy?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@matthagy?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Matt Hagy"}, {"url": "https://medium.com/@matthagy/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "229 Followers"}, {"url": "http://matthagy.com", "anchor_text": "matthagy.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3fe708dd30ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&user=Matt+Hagy&userId=3fe708dd30ed&source=post_page-3fe708dd30ed--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F80fe9ab5a2a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractively-exploring-reddit-posts-using-basic-scala-in-your-browsers-f394843069de&newsletterV3=3fe708dd30ed&newsletterV3Id=80fe9ab5a2a&user=Matt+Hagy&userId=3fe708dd30ed&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}