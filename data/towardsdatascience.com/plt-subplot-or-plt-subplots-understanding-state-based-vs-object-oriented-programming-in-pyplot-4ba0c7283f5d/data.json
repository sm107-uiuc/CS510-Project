{"url": "https://towardsdatascience.com/plt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d", "time": 1683011121.364741, "path": "towardsdatascience.com/plt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d/", "webpage": {"metadata": {"title": "plt.subplot() or plt.subplots()? Understanding state-based vs. object-oriented programming in Pyplot | by Kaleb Nyquist | Towards Data Science", "h1": "plt.subplot() or plt.subplots()? Understanding state-based vs. object-oriented programming in Pyplot", "description": "For new and experienced Python programmers: how to tame Matplotlib\u2019s two-headed monster \"Pyplot\" to achieve the data visualization results you want."}, "outgoing_paragraph_urls": [{"url": "https://matplotlib.org/tutorials/introductory/lifecycle.html#a-note-on-the-object-oriented-api-vs-pyplot", "anchor_text": "best practice for Matplotlib learners to start with the \u201cobject-oriented\u201d approach and stick with it", "paragraph_index": 2}, {"url": "https://doi.org/10.1016/j.ic.2013.08.002", "anchor_text": "Kristen Nygaard and Ole-Johan Dahl created the first version of the Simula programming language", "paragraph_index": 4}, {"url": "http://www.informit.com/articles/article.aspx?p=2036576", "anchor_text": "the rise of the Internet and other computer networks popularized \u201cobject-oriented programming\u201d", "paragraph_index": 4}, {"url": "https://en.wikipedia.org/wiki/MATLAB", "anchor_text": "MATLAB", "paragraph_index": 5}, {"url": "https://matplotlib.org/faq/usage_faq.html#matplotlib-pyplot-and-pylab-how-are-they-related", "anchor_text": "Pylab", "paragraph_index": 8}, {"url": "https://github.com/KalebNyquist/statebased_vs_oop_pyplot", "anchor_text": "You can find this preliminary code on GitHub", "paragraph_index": 11}, {"url": "https://github.com/KalebNyquist/statebased_vs_oop_pyplot", "anchor_text": "a Jupyter Notebook is available on GitHub", "paragraph_index": 21}, {"url": "https://matplotlib.org/tutorials/introductory/lifecycle.html", "anchor_text": "The Lifecycle of a Plot", "paragraph_index": 23}, {"url": "https://pbpython.com/effective-matplotlib.html", "anchor_text": "Effectively Using Matplotlib", "paragraph_index": 23}, {"url": "https://www.freecodecamp.org/news/object-oriented-programming-concepts-21bb035f7260/", "anchor_text": "How to explain Object-Oriented Programming to a Six-Year-Old", "paragraph_index": 23}, {"url": "https://towardsdatascience.com/whats-new-in-matplotlib-3-1b3b03f18ddc", "anchor_text": "helpful resources that contextualize the latest releases of Matplotlib", "paragraph_index": 23}, {"url": "https://medium.com/towards-data-science/downloading-airtable-data-into-python-89e5c7107a24", "anchor_text": "Airtable API-Python tutorial", "paragraph_index": 24}, {"url": "https://towardsdatascience.com/nonprofit-data-management-cb1e4dd2cf0c", "anchor_text": "\u201c5 Best Practices for Nonprofit Data Management\u201d", "paragraph_index": 24}, {"url": "https://www.buymeacoffee.com/kalebnyq", "anchor_text": "bought me a coffee", "paragraph_index": 24}, {"url": "https://medium.com/@kalebnyquist/membership", "anchor_text": "became a Medium subscriber through this referral link", "paragraph_index": 24}, {"url": "https://flatironschool.com/scholarships/2022q2ar/?utm_campaign=ec2a7f51-e911-403e-8e92-50950d9f7c32&utm_source=emailbatch&utm_medium=email&utm_term=txtlink", "anchor_text": "Data Science Fellowship with the Flatiron School\u2019s Washington DC Campus", "paragraph_index": 25}, {"url": "https://flatironschool.com/scholarships/2022q2ar/?utm_campaign=ec2a7f51-e911-403e-8e92-50950d9f7c32&utm_source=emailbatch&utm_medium=email&utm_term=txtlink", "anchor_text": "use this referral link to learn more and support more writing like what you see here", "paragraph_index": 26}], "all_paragraphs": ["When I was learning how to code using the Python programming language, the introduction of the Pyplot module (part of the Matplotlib library, here referred to by the alias plt) was particularly non-intuitive\u2026and, honestly, kind of disorientating. For example, the functions plt.subplot() and plt.subplots() may appear to be off by a single letter s, but typically the former is followed by a plotting function in the form plt.plot(data_x, data_y) whereas the latter is usually followed by ax[0,0].plot(data_x, data_y). Even more confusingly, even though the \u201cjourneys\u201d may be different, the output \u201cdestinations\u201d can often be identical, making anyone wonder what the actual difference is in the end.", "After a deeper dive into the Pyplot documentation and with some help from the internet-at-large, I learned that behind these subtle error-generating differences are two radically different approaches to programming that are accommodated by the Pyplot interface: the first being \u201cstate-based\u201d and the second being \u201cobject-oriented\u201d.", "While it is considered best practice for Matplotlib learners to start with the \u201cobject-oriented\u201d approach and stick with it, taking a moment to work with the \u201cstate-based\u201d approach is a good mini-lesson for better understanding one of the larger conceptual debates in computer science. Pyplot users like myself who do not take time to understand these subtle distinctions might find themselves in a never-ending struggle with a two-headed beast of a module, never quite able to tame it in order to get the data visualizations they envision.", "For Matplotlib novices learning Pyplot, what follows is a brief historical note on why \u201cstate-based\u201d and \u201cobject-oriented\u201d programming philosophies exist, and how they try to exist simultaneously in a single module. In other words, this is the insight I wish I had back when I was first trying to make sense of this seemingly strange and contradictory tool.", "The more Pythonic but also more complicated approach, \u201cobject-oriented programming\u201d, has historical roots in the Norwegian Computing Center during the 1960\u2019s, where Kristen Nygaard and Ole-Johan Dahl created the first version of the Simula programming language designed for programming computer simulations where different actors and unknown factors interacted with each other in complex yet reproducible ways (for example, if a nuclear reactor were to be built in 10,000 parallel universes, in how many of those universes would there be a severe accident?). Decades later, the rise of the Internet and other computer networks popularized \u201cobject-oriented programming\u201d. Python is one of many languages that takes this common approach, along with other mainstays such as Java, C++, and Ruby.", "As Python popularized, the Matplotlib library was created in 2003 to make Python an open-source alternative to the proprietary software MATLAB that had been first developed in the late 1970\u2019s. However, rather than being \u201cobject-oriented\u201d, MATLAB\u2019s approach was closer to something called \u201cstate-based programming\u201d. This simpler approach runs variables through established processes, resulting in a series of states that eventually terminates at a desired result. This is not unlike what happens when one uses a basic calculator. For example:", "(\ud83e\udd26\ud83c\udffc\u200d\u2642\ufe0f I sometimes will accidentally write state-based programming as \u201cstage-based\u201d because in my imagination, I see the procedure as a series of stages each progressing towards a final goal. But the correct terminology is state-based.)", "While being quite literally straight-forward, MATLAB and other state-based languages have the disadvantage of not being as easily able to encapsulate objects and abstract functions, resulting in lengthier and more disorganized code for more complex programs.", "Matplotlib was meant to be a bridge for MATLAB users into Python, and accordingly it was originally designed to accommodate both state-based programming and object-oriented programming. Although some state-based programming features (especially Pylab) have have now been deprecated for the sake of easing confusion, the state-based MATLAB legacy lives on through the Pyplot module.", "These different programming philosophies converge in the Pyplot module. Doing the digital version of an archeological dig, it is possible to contrast the two bring these histories to life by comparing two different sets of code that will eventually arrive at the same result.", "For this example, we will try to create a figure with three subplots, as seen below.", "Note that the following code assumes that Pyplot has been imported, and that data_x and data_y have have already been defined. You can find this preliminary code on GitHub.", "First, we create this graph using the state-based approach.", "I have found that a helpful trick for understanding what is going on here is that \u201csubplot\u201d is a noun and \u201cplot\u201d is a verb. That is, plt.subplot(2,2,1) creates and focuses the program on the first subplot (going left-to-right, up-to-down) in a 2\u00d72 grid. Then plt.plot(data_x, data_Y, 'r-') actively plots a red line using the provided data in the first subplot.", "(\ud83d\udd75\ud83c\udffd\u200d\u2640\ufe0f Careful observers might also notice that the third subplot has been omitted in the above code.)", "Second, the same graph can be achieved through the object-oriented approach:", "Here, the plt.subplots(2,2) (notice the additional s) has generated a comparable figure object (\u201c fig\u201d) that holds a 2\u00d72 array of subplots (or \u201caxes\u201d objects). Now, however, instead of focusing the program on a subplot and then plotting within that subplot, the object-oriented approach first retrieves the \u201caxes\u201d object from the ax array. Then, arguments within the axes method are responsible for the plotting.", "(\ud83d\udd75\ud83c\udffd\u200d\u2640\ufe0f Notice that the third subplot, referred to here in array form as ax[1,0], is created and then deleted in the above code, rather than simply omitted as in the state-based approach.)", "Other than saving a line of code in the object-oriented approach, these subtle differences might seem inconsequential. But, for those still learning Pyplot, they should be warned that unknowingly mixing these methods can make for seemingly inexplicable coding snafus. The animation below shows, line-by-line, the fundamental differences in the state-based versus object-oriented processes. It takes only a little bit of imagination to see how trying to mix-and-match these processes could create quite a headache!", "For further experimentation in how these approaches differ from each other yet arrive at the same (or at least similar) results, plug-and-play with these snippets of Pyplot code for adding axis labels and graph titles:", "(\ud83d\udca1 Hint: when experimenting with the above approaches, note how the position of the code relative to plt.subplot() makes a difference in the state-based approach in determining which axis gets titled, whereas the object-oriented approach is position-agnostic thanks to the array of axes objects.)", "For your convenience, a Jupyter Notebook is available on GitHub, containing the code used to generate the above graphs.", "By now, you should have a solid foundation for understanding the dual nature of Pyplot\u2019s interface, as well as having a small window into the DNA of coding languages.", "If you would like to learn more about Pyplot\u2019s dual nature, there are a number of online readings I found particularly helpful, including \u201cThe Lifecycle of a Plot\u201d and \u201cEffectively Using Matplotlib\u201d. For more on object-oriented programming, \u201cHow to explain Object-Oriented Programming to a Six-Year-Old\u201d was particularly illuminating. Finally, Ankit Gupta has helpful resources that contextualize the latest releases of Matplotlib within their historical development context.", "I write on a wide range of topics that may be of interest to budding data scientists. Be sure to check out my Airtable API-Python tutorial and my list of \u201c5 Best Practices for Nonprofit Data Management\u201d. If you found this article helpful, I would greatly appreciate it if you bought me a coffee or became a Medium subscriber through this referral link to help support more of my writing.", "An earlier draft of this article was completed as part of a 2019 Data Science Fellowship with the Flatiron School\u2019s Washington DC Campus. Special thanks to my fellow cohort members and instructors for providing feedback.", "If you are interested in learning more about the Flatiron School\u2019s data science programs and appreciated this article, use this referral link to learn more and support more writing like what you see here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data-Driven Strategist for Sustainability, Spirituality, & Political Reform"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F4ba0c7283f5d&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@kalebnyquist?source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@kalebnyquist?source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": "Kaleb Nyquist"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F495932917d8c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&user=Kaleb+Nyquist&userId=495932917d8c&source=post_page-495932917d8c----4ba0c7283f5d---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4ba0c7283f5d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4ba0c7283f5d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://commons.wikimedia.org/wiki/File:Uroboros.png", "anchor_text": "Wikimedia Commons"}, {"url": "https://matplotlib.org/tutorials/introductory/lifecycle.html#a-note-on-the-object-oriented-api-vs-pyplot", "anchor_text": "best practice for Matplotlib learners to start with the \u201cobject-oriented\u201d approach and stick with it"}, {"url": "https://doi.org/10.1016/j.ic.2013.08.002", "anchor_text": "Kristen Nygaard and Ole-Johan Dahl created the first version of the Simula programming language"}, {"url": "http://www.informit.com/articles/article.aspx?p=2036576", "anchor_text": "the rise of the Internet and other computer networks popularized \u201cobject-oriented programming\u201d"}, {"url": "http://cs-exhibitions.uni-klu.ac.at/", "anchor_text": "cs-exhibitions.uni-klu.ac.at"}, {"url": "https://en.wikipedia.org/wiki/MATLAB", "anchor_text": "MATLAB"}, {"url": "https://giphy.com/gifs/calculator-calculate-add-up-ghTPBMNczu5BBGbyX5", "anchor_text": "GIPHY"}, {"url": "https://matplotlib.org/faq/usage_faq.html#matplotlib-pyplot-and-pylab-how-are-they-related", "anchor_text": "Pylab"}, {"url": "https://github.com/KalebNyquist/statebased_vs_oop_pyplot", "anchor_text": "You can find this preliminary code on GitHub"}, {"url": "https://creativecommons.org/licenses/by/4.0/", "anchor_text": "CC BY 4.0"}, {"url": "https://github.com/KalebNyquist/statebased_vs_oop_pyplot", "anchor_text": "a Jupyter Notebook is available on GitHub"}, {"url": "https://matplotlib.org/tutorials/introductory/lifecycle.html", "anchor_text": "The Lifecycle of a Plot"}, {"url": "https://pbpython.com/effective-matplotlib.html", "anchor_text": "Effectively Using Matplotlib"}, {"url": "https://www.freecodecamp.org/news/object-oriented-programming-concepts-21bb035f7260/", "anchor_text": "How to explain Object-Oriented Programming to a Six-Year-Old"}, {"url": "https://towardsdatascience.com/whats-new-in-matplotlib-3-1b3b03f18ddc", "anchor_text": "helpful resources that contextualize the latest releases of Matplotlib"}, {"url": "https://medium.com/towards-data-science/downloading-airtable-data-into-python-89e5c7107a24", "anchor_text": "Airtable API-Python tutorial"}, {"url": "https://towardsdatascience.com/nonprofit-data-management-cb1e4dd2cf0c", "anchor_text": "\u201c5 Best Practices for Nonprofit Data Management\u201d"}, {"url": "https://www.buymeacoffee.com/kalebnyq", "anchor_text": "bought me a coffee"}, {"url": "https://medium.com/@kalebnyquist/membership", "anchor_text": "became a Medium subscriber through this referral link"}, {"url": "https://giphy.com/gifs/disney-GmxVp1WocZbck/embed", "anchor_text": "GIPHY"}, {"url": "https://flatironschool.com/scholarships/2022q2ar/?utm_campaign=ec2a7f51-e911-403e-8e92-50950d9f7c32&utm_source=emailbatch&utm_medium=email&utm_term=txtlink", "anchor_text": ""}, {"url": "https://flatironschool.com/scholarships/2022q2ar/?utm_campaign=ec2a7f51-e911-403e-8e92-50950d9f7c32&utm_source=emailbatch&utm_medium=email&utm_term=txtlink", "anchor_text": "Data Science Fellowship with the Flatiron School\u2019s Washington DC Campus"}, {"url": "https://flatironschool.com/scholarships/2022q2ar/?utm_campaign=ec2a7f51-e911-403e-8e92-50950d9f7c32&utm_source=emailbatch&utm_medium=email&utm_term=txtlink", "anchor_text": "use this referral link to learn more and support more writing like what you see here"}, {"url": "https://medium.com/tag/matplotlib?source=post_page-----4ba0c7283f5d---------------matplotlib-----------------", "anchor_text": "Matplotlib"}, {"url": "https://medium.com/tag/object-oriented?source=post_page-----4ba0c7283f5d---------------object_oriented-----------------", "anchor_text": "Object Oriented"}, {"url": "https://medium.com/tag/data-science?source=post_page-----4ba0c7283f5d---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----4ba0c7283f5d---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/python?source=post_page-----4ba0c7283f5d---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4ba0c7283f5d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&user=Kaleb+Nyquist&userId=495932917d8c&source=-----4ba0c7283f5d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4ba0c7283f5d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&user=Kaleb+Nyquist&userId=495932917d8c&source=-----4ba0c7283f5d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4ba0c7283f5d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F4ba0c7283f5d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----4ba0c7283f5d---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----4ba0c7283f5d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@kalebnyquist?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@kalebnyquist?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Kaleb Nyquist"}, {"url": "https://medium.com/@kalebnyquist/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "148 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F495932917d8c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&user=Kaleb+Nyquist&userId=495932917d8c&source=post_page-495932917d8c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F7f52ad97d49d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplt-subplot-or-plt-subplots-understanding-state-based-vs-object-oriented-programming-in-pyplot-4ba0c7283f5d&newsletterV3=495932917d8c&newsletterV3Id=7f52ad97d49d&user=Kaleb+Nyquist&userId=495932917d8c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}