{"url": "https://towardsdatascience.com/beginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af", "time": 1683014970.842988, "path": "towardsdatascience.com/beginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af/", "webpage": {"metadata": {"title": "Beginner\u2019s guide to pymongo using Spotify Top50 2019 songs | by Vinayak Nayak | Towards Data Science", "h1": "Beginner\u2019s guide to pymongo using Spotify Top50 2019 songs", "description": "This post aims to explain how can pymongo be used in order to interface with mongoDB to perform CRUD operations. In order to follow through this post, it\u2019s recommended but not compulsory if you have\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/ElisonSherton/mongoDB_Basics", "anchor_text": "this GitHub repository", "paragraph_index": 6}, {"url": "https://realpython.com/installing-python/", "anchor_text": "this tutorial", "paragraph_index": 7}], "all_paragraphs": ["This post aims to explain how can pymongo be used in order to interface with mongoDB to perform CRUD operations. In order to follow through this post, it\u2019s recommended but not compulsory if you have a basic working knowledge of mongoDB and what it is. The topics covered in this post are as follows", "If you\u2019re interested only in a specific section, click on the topic above to navigate directly to the respective section.", "MongoDB is a NoSQL (Not only SQL) database which is one of the most widely used databases. It\u2019s natively written in C++ which makes it quite fast and efficient while performing CRUD applications.", "To be specific, MongoDB is a document database in which records or entries are stored as documents in a key-value format, very similar to how json or python dictionaries are; thereby allowing the use of object notation to retrieve data from the database.", "One of the plus points of using mongoDB is that being a NoSQL database, one isn\u2019t constrained by the type of data that could be stored in the database as long as it follows a key-value pair. In SQL, there\u2019s a very strict schema that every record has to adhere to making it very rigid whereas MongoDB allows full flexibility in that aspect. In some applications, we don\u2019t know ahead of time what & how much data would come and yet need to store it to the database; mongoDB is the way to go about tackling such use cases.", "A comparative analysis of terminologies involved in mongoDB and SQL can give a better understanding of the mongoDB service for storing data; this is as follows:", "In order to gain more familiarity with mongoDB in particular, I would recommend you to check out this GitHub repository which explains how to get started with the same.", "pymongo is a package in python which helps us to configure with a mongoDB database and retrieve documents from the same. Since for any data related work, python has a ton of support for processing, modelling, wrangling any sort of data, it makes sense to store data in a database like mongoDB and use python for retrieving it on demand and pymongo facilitates this usecase with quite an ease. To install pymongo on your system, you\u2019ll need to have python and pip locally installed on your system; you can follow this tutorial to get the same. Once you have them installed, just run the following command from your terminal or command prompt and you\u2019ll be good to follow through the rest of this post.", "The data we\u2019re using here consists of the top 50 songs according to spotify for the year 2019; a sneak peek in the dataset is as follows:", "The dataset consists of the track name and certain related fields like who sung it, what genre is it and other quantitative parameters like how popular it was, how long the song is in seconds etc. For a deep dive into the dataset visit kaggle here to know about the other parameters, what tasks could be carried out with this dataset and so on. We will be creating a simple scenario to demonstrate CRUD (Create, Read, Update Delete) functionality in mongoDB using this dataset.", "Once you got python, pymongo and mongoDB installed on your system, you can open a python script and start coding.", "The first thing that you\u2019ll need to do is create a connection to your mongoDB server. After installing mongoDB, most systems dedicate the port 27017 on the localhost to host a mongoDB server, if you/your organization have a dedicated server, make sure to get the link to your server and create a connection as follows.", "Once you have this connection you can use the client object in order to perform any CRUD operation, we\u2019ll see in the following sections.", "Using the collection object above, we look at the existing databases, the collections and documents contained in them and also create new databases. Let\u2019s first look at how we can peek at the existing databases and collections.", "If you have only installed mongoDB recently, these three databases are created by default and no other database is there since we haven\u2019t created one yet. Let\u2019s create a database called spotifyData and in it, let\u2019s have a collection named Top50. We can do it as follows", "Now, there\u2019s a catch here. Please note that databases and collections are created lazily in MongoDB. Lazily as in the collections and databases are created only when the first document is inserted into them. So, as of now we have pointers to a database and a collection object but they\u2019re not created yet. Let\u2019s insert the documents from the spotify top 50 songs of 2019 dataset into the Top50 collection.", "There are two primary methods which are used for creating documents inside of a mongoDB collection.", "When you have one document, you can use the insert_one method to create a document in the collection. When you have a fleet of documents all present in one list, you can use the insert_many method to create all those documents in the collection.", "These documents are basically dictionaries in python which have fields as the keys and values are the data. A sample document in this example is as follows:", "The _id field is an important field when it comes to mongoDB. It could be thought of similar to the primary key in SQL. It is a unique identifier for every single document. No collection can have two documents with same _id. If you don\u2019t provide an _id field explicitly, mongoDB will generate one on it\u2019s own which is a random string Object not matching the _id of any other Object.", "Next comes reading or querying from the mongoDB collections. Once we have created a database and a collection to hold our top 50 songs, we can use it to find out any record by imposing constraints on different fields giving us the ability to filter only required data from our collection.", "Let\u2019s say we wanted to see all the Taylor Swift songs which made it to the top 50 songs of 2019, we could execute our query as follows.", "We can see that only one song of Taylor Swift made it to the top 50 list in 2019 which is title \u201cYou need to calm down\u201d.", "Please not that the find method as shown in the code snippet above, without any constraints will look up and return all available documents in the collection. Only when we specify some constraints will it return filtered data.", "Let\u2019s say we wanted to find out all the songs which had a popularity of 90 or more. We could do it with the following query.", "Let\u2019s say we wanted to find out which songs were from the pop genre and query all of them. Now, in the documents, we have many different pop songs prepended by adjectives to describe these sub genres. So we\u2019ll use a regular expression for filtering the documents as below.", "So, in this section we saw how we can query data from mongoDB using pymongo\u2019s find function. It provides some good tools for extracting data based on both numeric and string related constraints as we saw in the examples above. Let\u2019s see how we can update data in documents in mongo collections using pymongo.", "Let\u2019s say we have some data in our collection and we wanted to update one or many fields in one or more documents. It is possible to do so using update_one and update_many functions in pymongo. We will look at the update_many function since the former is anyways a special case of the latter.", "In most of the reviews/feedbacks we see that things are rated on a scale of 1 to 5. However here, we see that the popularity is reviewed on a percentage scale. Let\u2019s say we wanted to update it such that popularity is constrained between 1\u20135 only. This could be done by dividing the popularity field of each and every document by 20 (i.e. multiplying by 0.05). Here\u2019s how we could do it using pymongo.", "Since we want to update all the documents we passed an empty filtering criterion, otherwise if we only want to update a specific set of documents, we could do that as well. Let\u2019s say we wanted to replace all Ed Sheeran Songs to have the name Teddy (his colloquial nickname). That could be done by adding a filtering criterion like this.", "We can see that there were 4 songs by Ed Sheeran in the year 2019 which is quite a lot for a single artist honestly; but all of them were modified to reflect the artist name as teddy. The argument upsert is an interesting one. It basically creates a document if the filtering condition doesn\u2019t match any documents and sets the artist name to teddy if upsert is set to True.", "Let\u2019s say we wanted to delete the songs sung by Drake which are there in top 50 songs of 2019 (Nothing against him, just for the sake of demo), we can use the delete_one or delete_many methods. Since we want to delete all songs, we can use the command delete_many as follows.", "Looks like there was only one song by Drake that made it to top 50 so in this case delete_one and delete_many would have had the same end result.", "Let\u2019s try deleting all the documents which had a popularity of 80 or below (i.e. 4 or less in the new scaled system).", "There were three songs which had a popularity of less than 80 or 4 (in new scale).", "Let\u2019s say we don\u2019t need a particular collection from a database in mongoDB and we want to delete it. It could happen at any point of time because data no longer needs to be accessed by anyone, the data is outdated and has no use or any other reason. Since we have only one collection in our database, it doesn\u2019t make sense to delete it now, but only for sake of demonstration, here\u2019s how we can do it.", "Similarly if we want to drop a database, we can use the client variable which holds connection to the mongo server and delete the database.", "It\u2019s always a good practise to explicitly close the connection which you\u2019ve established for the sake of interacting with mongodb server. You could do it simply by using the command", "This brings us to the end of this post. I hope you have got a good starting point for using pymongo to interact with mongoDB programatically through scripts. If you want to look at the code for this post all at one place or dive deeper or prefer the video medium for tutorials, please look at the references section below.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F6c0eaa80b1af&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://nayakvinayak95.medium.com/?source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": ""}, {"url": "https://nayakvinayak95.medium.com/?source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": "Vinayak Nayak"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9b10ad08afc7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&user=Vinayak+Nayak&userId=9b10ad08afc7&source=post_page-9b10ad08afc7----6c0eaa80b1af---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6c0eaa80b1af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6c0eaa80b1af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@akshayspaceship?utm_source=medium&utm_medium=referral", "anchor_text": "Akshay Chauhan"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/ElisonSherton/mongoDB_Basics", "anchor_text": "this GitHub repository"}, {"url": "https://realpython.com/installing-python/", "anchor_text": "this tutorial"}, {"url": "https://www.kaggle.com/leonardopena/top50spotify2019", "anchor_text": "Spotify top 50 songs of 2019 dataset"}, {"url": "https://www.datacamp.com/community/tutorials/introduction-mongodb-python", "anchor_text": "Datacamp article on pymongo"}, {"url": "https://github.com/ElisonSherton/pymongo-basics", "anchor_text": "Github repo link for code in the post"}, {"url": "https://www.youtube.com/watch?v=rE_bJl2GAY8", "anchor_text": "Video: pymongo basics by techwithtim"}, {"url": "https://medium.com/tag/mongodb?source=post_page-----6c0eaa80b1af---------------mongodb-----------------", "anchor_text": "Mongodb"}, {"url": "https://medium.com/tag/python?source=post_page-----6c0eaa80b1af---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----6c0eaa80b1af---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/database?source=post_page-----6c0eaa80b1af---------------database-----------------", "anchor_text": "Database"}, {"url": "https://medium.com/tag/data-storage?source=post_page-----6c0eaa80b1af---------------data_storage-----------------", "anchor_text": "Data Storage"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6c0eaa80b1af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&user=Vinayak+Nayak&userId=9b10ad08afc7&source=-----6c0eaa80b1af---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6c0eaa80b1af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&user=Vinayak+Nayak&userId=9b10ad08afc7&source=-----6c0eaa80b1af---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6c0eaa80b1af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F6c0eaa80b1af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----6c0eaa80b1af---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----6c0eaa80b1af--------------------------------", "anchor_text": ""}, {"url": "https://nayakvinayak95.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://nayakvinayak95.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Vinayak Nayak"}, {"url": "https://nayakvinayak95.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "80 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9b10ad08afc7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&user=Vinayak+Nayak&userId=9b10ad08afc7&source=post_page-9b10ad08afc7--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fadfaf0b7759f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-pymongo-using-spotify-top50-2019-songs-6c0eaa80b1af&newsletterV3=9b10ad08afc7&newsletterV3Id=adfaf0b7759f&user=Vinayak+Nayak&userId=9b10ad08afc7&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}