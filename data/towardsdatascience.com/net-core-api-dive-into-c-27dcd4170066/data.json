{"url": "https://towardsdatascience.com/net-core-api-dive-into-c-27dcd4170066", "time": 1683004956.998825, "path": "towardsdatascience.com/net-core-api-dive-into-c-27dcd4170066/", "webpage": {"metadata": {"title": ".NET Core API \u2014 Dive into C#. Build a back end web server for the\u2026 | by Richard Peterson | Towards Data Science", "h1": ".NET Core API \u2014 Dive into C#", "description": "If you have been following along from the Series outline, and have a working database, an Angular Tour of Heroes App, and a generic .NET API, we have now come to the meat of the Series, writing the\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/@richardpeterson320/net-core-api-for-the-angular-tour-of-heroes-app-5895a36d2129", "anchor_text": "Series outline", "paragraph_index": 0}, {"url": "https://medium.com/@richardpeterson320/net-core-api-for-the-angular-tour-of-heroes-app-5895a36d2129", "anchor_text": "working database", "paragraph_index": 0}, {"url": "https://angular.io/tutorial", "anchor_text": "Angular Tour of Heroes App", "paragraph_index": 0}, {"url": "https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.1&tabs=visual-studio", "anchor_text": "generic .NET API,", "paragraph_index": 0}, {"url": "https://github.com/rchardptrsn/TourOfHeroes-dotNETCore", "anchor_text": "my GitHub repo.", "paragraph_index": 1}, {"url": "https://medium.com/@richardpeterson320/net-core-api-for-the-angular-tour-of-heroes-app-5895a36d2129", "anchor_text": "Introduction", "paragraph_index": 3}, {"url": "https://towardsdatascience.com/build-a-mssql-docker-container-800166ecca21", "anchor_text": "Docker MSSQL database", "paragraph_index": 12}, {"url": "https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/search?view=aspnetcore-3.1", "anchor_text": "search function to a controller.", "paragraph_index": 21}, {"url": "https://towardsdatascience.com/build-a-mssql-docker-container-800166ecca21", "anchor_text": "database", "paragraph_index": 23}, {"url": "http://localhost:5000/api/Heroes/", "anchor_text": "http://localhost:5000/api/Heroes/", "paragraph_index": 29}, {"url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS", "anchor_text": "Mozilla docs", "paragraph_index": 33}, {"url": "https://developer.mozilla.org/en-US/docs/Glossary/CORS", "anchor_text": "CORS", "paragraph_index": 34}, {"url": "https://developer.mozilla.org/en-US/docs/Glossary/HTTP", "anchor_text": "HTTP", "paragraph_index": 34}, {"url": "https://developer.mozilla.org/en-US/docs/Glossary/origin", "anchor_text": "origin", "paragraph_index": 34}, {"url": "http://localhost:4200", "anchor_text": "http://localhost:4200", "paragraph_index": 38}, {"url": "https://github.com/rchardptrsn/TourOfHeroes-dotNETCore", "anchor_text": "my GitHub repo.", "paragraph_index": 48}], "all_paragraphs": ["If you have been following along from the Series outline, and have a working database, an Angular Tour of Heroes App, and a generic .NET API, we have now come to the meat of the Series, writing the C# code for our .NET API.", "To follow along, you can download a complete version of the .NET API + Docker MSSQL DB + Angular app from my GitHub repo.", "The process we are going to follow for this article is:", "If you have not read the Introduction to this series, I highly recommend it. If you are coming from the Introduction and already have a generic API, great! If you are starting from scratch, simply run from the command line:", "This will create a sample .NET Core API with fake weather forecast data. I have .NET Core 3.0.2 installed on my machine, so all dependencies will be for 3.0.2.", "From the sample API, delete WeatherForecast.cs and WeatherForecastController.cs.", "We will need several packages for our .NET Core app to work. You can install these using the NuGet package manager, or from the command line:", "Create a new folder in the directory called Model, and in the Model Folder, create a new C# class called Hero.cs.", "The Model will define the properties of the data in the database and the application, so we simply add values for id, and name.", "Now, we need to add a database context to manage the connection between our .NET Core data model and the database. We will name our context class HeroesContext and it will inherit from DbContext.HeroesContext will contain a DbSet HeroValues, which corresponds to the name of our table in SQL.", "Create a folder called Data and add a new C# file called HeroesContext.cs. Add the below code to your HeroesContext.cs.", "We also need to add a reference to the DbSet in our Startup.cs file, so that .NET knows to use the HeroesContext as the context for interacting with the database. We will also add the connection string to our database to our appsettings.json file.", "Add this to your Startup.cs file under public void ConfigureServices. In our case, we are using the Docker MSSQL database for testing and development.", "Add the \u201cDockerDB\u201d connection string to appsettings.json.", "To create the HeroesController, we will use the aspnet-codegenerator tool to scaffold the controller for us.", "First, we must install the tool from the command line. Then, from the root directory of your project, run the aspnet-codegenerator.", "When this is complete, you will see a new file has been created under your Controllers folder called HeroesController. Open this up to see the bare bones controller that has been created for you. This tool is extremely useful for getting the basic structure of your controller into place. Now let\u2019s edit the Controller to match what\u2019s coming from our Angular app.", "There is an unintended side effect of using the codegenerator. It adds a value to Startup.cs for the connection string in ConfigureServices:services.AddDbContext of the name of the DbContext, which makes sense, but is not what we want to use for our connection string in this dev environment. Replace the connection string value of \u201cHeroesContext\u201d so that your services.AddDbContext looks like this again:", "While we\u2019re at it, in the Configure method of Startup.cs let\u2019s comment out app.UseHttpsRedirection();. It\u2019s not needed for our app.", "In our controller, we will have 5 essential methods for interacting with the database and returning values to the Angular app. These 5 methods are called by the route that is provided from Angular to the .NET app. What the .NET app is looking for are HTTP requests with a provided route. These routes are:", "The Angular app will use this route to GET an IEnumerable List object of all the heroes from .NET. This method corresponds to the getHeroes() method in Angular\u2019 hero.service.ts.", "Replace the first GET method with the below code, which was greatly informed by the Microsoft docs for adding a search function to a controller. Remember, the Angular app uses a GET: api/Heroes request for several different components. It needs to be able to return a list for the heroes dashboard, the heroes list page, and also search for heroes in the search box on the dashboard.", "We accomplish this with an asynchronous ActionResult<IEnumerable> that is fed information from the query string in the GET request. That query can either be no information, which returns all the heroes, or a search string, which returns only the heroes with a name that contains the string.", "Let\u2019s test our GET controller method using Postman. Postman offers a user-friendly way to test your API. First, fire up your Docker database. Run your .NET Core API by running dotnet watch run from the root directory of your API. When the API has launched and is listening on port 5000, in Postman, we will send 2 requests to test for our desired results:", "Congrats! You have a working API! Let\u2019s build it out to find heroes by Id.", "This is where our aspnet-codegenerator really shines. We do not need to change a single thing about this controller method. It is ready to go, code already generated. It simply finds the hero with the matching id passed to it in the route. Your method should be:", "This is also a method that aspnet-codegenerator scaffolds for us perfectly. Simply run a Postman test to try it out:", "If successful, you will receive a request status of 204 No Content.", "You need to be able to POST new heroes to the database. Also, your API needs to create the Id for the new hero, Angular is only providing the name. Your API uses the current context of the DbSet _context.HeroValueto access values in the database. Use .Max to find the highest Id in the database, enumerate by 1, and assign that new Id to herovalue.id. Then save the new to the database with .Add and .SaveChangesAsync, and return a CreatedAtAction result that produces a status 201 Created response.", "Send a POST request to http://localhost:5000/api/Heroes/ with a JSON body of:", "Observe the Status: 201 Created. Success!", "Finally, you need to be able to delete heroes. This is done when angular sends an HTTP DELETE request to the API with the hero Id to be deleted. Thankfully, our DELETE method was perfectly generated by the aspnet-codegenerator.", "The aspnet-codegenerator really helped us out here. The only methods we really had to think about were the search function in GET: api\\Heroes and the Id generator for our POST: api\\Heroes. Now that we have a functioning Controller that can be tested from Postman, we will add code to allow Cross-Origin Resource Sharing, better known as CORS.", "The Mozilla docs gives us a great definition of CORS.", "Cross-Origin Resource Sharing (CORS) is a mechanism that uses additional HTTP headers to tell browsers to give a web application running at one origin, access to selected resources from a different origin.", "We have an angular app running on one port, and our .NET API running on another port, and .NET does not like another app accessing it\u2019s resources without permission. We need to enable it to receive requests from a specific location, the localhost port of the angular app.", "Above your ConfigureServices class, create a readonly string:", "In your ConfigureServices class, add the AddCors service. Your ConfigureServices class should look like this:", "We are creating a builder that only allows requests from http://localhost:4200, the port at which our angular app is running. Additionally, from that port, we are allowing any header, and any method to access resources available to our .NET API.", "The last thing we need to do for CORS is to add the service we just created to our Configure method in Startup.cs. Add this to your Configure method:", "Your API is finished! Now we just have to point the angular app to your API endpoint.", "We are very close to being done! Only a few changes need to be made to the angular app for it to be able to request data from our API.", "We need to disable the in-memory web api that you build in the Tour Of Heroes tutorial. Comment out these imports in app.module.ts", "Then, comment out the imports from under @ngModule() imports", "Our public HeroService class contains the code needed for our angular app to interact with the .NET API. We should start by changing the heroesURL to match the endpoint at which our API is listening:", "The only other thing I had to change to the HeroService class was to add a const URL for updateHero. The URL that was being passed was not correct, resulting in 405 Method not allowed errors. Add the URL to your updateHero class so that your class looks like this:", "Now run ng serve --open from the root of your Angular app. Success!", "That\u2019s it, you\u2019ve built a .NET API!", "You can download a complete version of the .NET API + Docker MSSQL DB + Angular app from my GitHub repo.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "SQL CSI by day and Northwestern University Master\u2019s in Public Policy Student by night"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F27dcd4170066&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----27dcd4170066--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----27dcd4170066--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://desertdata.medium.com/?source=post_page-----27dcd4170066--------------------------------", "anchor_text": ""}, {"url": "https://desertdata.medium.com/?source=post_page-----27dcd4170066--------------------------------", "anchor_text": "Richard Peterson"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F11303b53d014&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&user=Richard+Peterson&userId=11303b53d014&source=post_page-11303b53d014----27dcd4170066---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F27dcd4170066&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F27dcd4170066&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@archaique?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Archaique Chang"}, {"url": "https://unsplash.com/s/photos/dive?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://medium.com/@richardpeterson320/net-core-api-for-the-angular-tour-of-heroes-app-5895a36d2129", "anchor_text": "Series outline"}, {"url": "https://medium.com/@richardpeterson320/net-core-api-for-the-angular-tour-of-heroes-app-5895a36d2129", "anchor_text": "working database"}, {"url": "https://angular.io/tutorial", "anchor_text": "Angular Tour of Heroes App"}, {"url": "https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-web-api?view=aspnetcore-3.1&tabs=visual-studio", "anchor_text": "generic .NET API,"}, {"url": "https://github.com/rchardptrsn/TourOfHeroes-dotNETCore", "anchor_text": "my GitHub repo."}, {"url": "https://medium.com/@richardpeterson320/net-core-api-for-the-angular-tour-of-heroes-app-5895a36d2129", "anchor_text": "Introduction"}, {"url": "https://towardsdatascience.com/build-a-mssql-docker-container-800166ecca21", "anchor_text": "Docker MSSQL database"}, {"url": "https://docs.microsoft.com/en-us/aspnet/core/tutorials/first-mvc-app/search?view=aspnetcore-3.1", "anchor_text": "search function to a controller."}, {"url": "https://towardsdatascience.com/build-a-mssql-docker-container-800166ecca21", "anchor_text": "database"}, {"url": "http://localhost:5000/api/Heroes,", "anchor_text": "http://localhost:5000/api/Heroe"}, {"url": "http://localhost:5000/api/Heroes/?name=wonder", "anchor_text": "http://localhost:5000/api/Heroes/?name=wonde"}, {"url": "http://localhost:5000/api/Heroes/2", "anchor_text": "http://localhost:5000/api/Heroes/2"}, {"url": "http://localhost:5000/api/Heroes/5", "anchor_text": "http://localhost:5000/api/Heroes/5"}, {"url": "https://github.com/lohithgn/blazor-tour-of-heroes/blob/master/src/BlazorTourOfHeroes/BlazorTourOfHeroes.Server/Controllers/HeroesController.cs", "anchor_text": "https://github.com/lohithgn/blazor-tour-of-heroes/blob/master/src/BlazorTourOfHeroes/BlazorTourOfHeroes.Server/Controllers/HeroesController.cs"}, {"url": "http://localhost:5000/api/Heroes/", "anchor_text": "http://localhost:5000/api/Heroes/"}, {"url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS", "anchor_text": "Mozilla docs"}, {"url": "https://developer.mozilla.org/en-US/docs/Glossary/CORS", "anchor_text": "CORS"}, {"url": "https://developer.mozilla.org/en-US/docs/Glossary/HTTP", "anchor_text": "HTTP"}, {"url": "https://developer.mozilla.org/en-US/docs/Glossary/origin", "anchor_text": "origin"}, {"url": "http://localhost:4200", "anchor_text": "http://localhost:4200"}, {"url": "http://localhost:4200", "anchor_text": "http://localhost:4200"}, {"url": "https://github.com/rchardptrsn/TourOfHeroes-dotNETCore", "anchor_text": "my GitHub repo."}, {"url": "https://medium.com/tag/angular?source=post_page-----27dcd4170066---------------angular-----------------", "anchor_text": "Angular"}, {"url": "https://medium.com/tag/dotnet?source=post_page-----27dcd4170066---------------dotnet-----------------", "anchor_text": "Dotnet"}, {"url": "https://medium.com/tag/docker?source=post_page-----27dcd4170066---------------docker-----------------", "anchor_text": "Docker"}, {"url": "https://medium.com/tag/web-development?source=post_page-----27dcd4170066---------------web_development-----------------", "anchor_text": "Web Development"}, {"url": "https://medium.com/tag/sql?source=post_page-----27dcd4170066---------------sql-----------------", "anchor_text": "Sql"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F27dcd4170066&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&user=Richard+Peterson&userId=11303b53d014&source=-----27dcd4170066---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F27dcd4170066&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&user=Richard+Peterson&userId=11303b53d014&source=-----27dcd4170066---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F27dcd4170066&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----27dcd4170066--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F27dcd4170066&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----27dcd4170066---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----27dcd4170066--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----27dcd4170066--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----27dcd4170066--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----27dcd4170066--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----27dcd4170066--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----27dcd4170066--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----27dcd4170066--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----27dcd4170066--------------------------------", "anchor_text": ""}, {"url": "https://desertdata.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://desertdata.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Richard Peterson"}, {"url": "https://desertdata.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "557 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F11303b53d014&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&user=Richard+Peterson&userId=11303b53d014&source=post_page-11303b53d014--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F28110602750b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnet-core-api-dive-into-c-27dcd4170066&newsletterV3=11303b53d014&newsletterV3Id=28110602750b&user=Richard+Peterson&userId=11303b53d014&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}