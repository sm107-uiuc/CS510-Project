{"url": "https://towardsdatascience.com/space-science-with-python-turbulent-times-of-a-comet-7fecedd78169", "time": 1683008740.9685519, "path": "towardsdatascience.com/space-science-with-python-turbulent-times-of-a-comet-7fecedd78169/", "webpage": {"metadata": {"title": "Space Science with Python \u2014 Turbulent times of a comet | by Thomas Albin | Towards Data Science", "h1": "Space Science with Python \u2014 Turbulent times of a comet", "description": "This is the 13th part of my Python tutorial series \u201cSpace Science with Python\u201d. All codes that are shown here are uploaded on GitHub. Enjoy! Users suggested adding small tasks at the end of every\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/ThomasAlbin/SpaceScienceTutorial", "anchor_text": "GitHub", "paragraph_index": 0}, {"url": "https://github.com/ThomasAlbin/SpaceScienceTutorial", "anchor_text": "GitHub", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/space-science-with-python-a-comet-in-3-d-3774b1d71d9b", "anchor_text": "Space Science with Python \u2014 A comet in 3 D", "paragraph_index": 2}, {"url": "https://www.aanda.org/component/toc/?task=topic&id=977", "anchor_text": "Astronomy & Astrophysics Special Issues", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/comets-visitors-from-afar-4d432cf0f3b", "anchor_text": "Space Science with Python: Comets \u2014 Visitors from afar", "paragraph_index": 4}, {"url": "https://www.minorplanetcenter.net/data", "anchor_text": "Minor Planet Center (MPC)", "paragraph_index": 4}, {"url": "https://naif.jpl.nasa.gov/naif/toolkit.html", "anchor_text": "NASA\u2019s SPICE toolkit", "paragraph_index": 5}, {"url": "https://github.com/AndrewAnnex/SpiceyPy", "anchor_text": "spiceypy", "paragraph_index": 5}, {"url": "https://numpy.org/", "anchor_text": "numpy", "paragraph_index": 5}, {"url": "https://pandas.pydata.org/", "anchor_text": "pandas", "paragraph_index": 5}, {"url": "https://matplotlib.org/", "anchor_text": "matplotlib", "paragraph_index": 5}, {"url": "https://github.com/ThomasAlbin/SpaceScienceTutorial", "anchor_text": "GitHub repository", "paragraph_index": 6}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_sql.html", "anchor_text": "read_sql", "paragraph_index": 7}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.iloc.html", "anchor_text": "iloc", "paragraph_index": 8}, {"url": "https://towardsdatascience.com/space-science-with-python-a-rendezvous-with-jupiter-55713e4ce340", "anchor_text": "Space Science with Python \u2014 A Rendezvous with Jupiter", "paragraph_index": 10}, {"url": "https://naif.jpl.nasa.gov/pub/naif/", "anchor_text": "public kernel repository", "paragraph_index": 12}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/furnsh_c.html", "anchor_text": "furnsh", "paragraph_index": 13}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/bodvcd_c.html", "anchor_text": "bodvcd", "paragraph_index": 14}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Timestamp.html", "anchor_text": "Timestamp", "paragraph_index": 15}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.to_datetime.html", "anchor_text": "to_datetime", "paragraph_index": 15}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/utc2et_c.html", "anchor_text": "utc2et", "paragraph_index": 16}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/spkgeo_c.html", "anchor_text": "spkgeo", "paragraph_index": 16}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/req/naif_ids.html", "anchor_text": "NAIF ID code", "paragraph_index": 16}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/oscltx_c.html", "anchor_text": "oscltx", "paragraph_index": 16}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/oscltx_c.html", "anchor_text": "oscltx", "paragraph_index": 17}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/convrt_c.html", "anchor_text": "convrt", "paragraph_index": 18}, {"url": "https://numpy.org/doc/stable/reference/generated/numpy.degrees.html", "anchor_text": "degrees", "paragraph_index": 18}, {"url": "https://matplotlib.org/", "anchor_text": "matplotlib", "paragraph_index": 19}, {"url": "https://matplotlib.org/api/_as_gen/matplotlib.pyplot.hlines.html", "anchor_text": "hlines", "paragraph_index": 19}, {"url": "https://towardsdatascience.com/space-science-with-python-did-we-observe-everything-617a8221e750", "anchor_text": "Space Science with Python \u2014 Did we observe everything?", "paragraph_index": 22}], "all_paragraphs": ["This is the 13th part of my Python tutorial series \u201cSpace Science with Python\u201d. All codes that are shown here are uploaded on GitHub. Enjoy!", "Users suggested adding small tasks at the end of every Jupyter Notebook to solve scientific or programming questions. Starting with this session I will add these assignments and provide a solution after some time on GitHub. Have fun!", "In the last session (Space Science with Python \u2014 A comet in 3 D) we started to take look at a very particular comet: 67P/Churyumov\u2013Gerasimenko. A comet that was visited by ESA\u2019s Rosetta / Philae mission. From 2014 to 2016 the orbiter explored this icy world and deployed its lander Philae in November 2014. A few hours after approaching the comet humanity gathered more data and insights about comets than all combined missions and observations before. In 2004 a book called Comets 2 was published that summarised all relevant information about these evaporating worlds [1]. Now, we have more scientific findings that are partly freely available online: Astronomy & Astrophysics Special Issues.", "Our last session gave us a detailed overview of the 3 D structure of the comet that was derived by one of Rosetta\u2019s camera systems. Today and in our next session we want to learn more about its trajectory; its movement around the Sun. How does the comet revolve around the Sun? Are there different information resources? And what kind of insights can we derive from it?", "Considering simple 2 body problems, orbital mechanics are quite simple to understand. Two masses are revolving around a common centre of mass. In a previous session (Space Science with Python: Comets \u2014 Visitors from afar) we created an SQLite database that contains the orbital elements of all known comets. The data were obtained from the Minor Planet Center (MPC). These data can be used to compute the trajectory of the comet. But is it really that simple?", "First, we import our required modules. This time, we will need NASA\u2019s SPICE toolkit respectively the Python wrapper spiceypy. Other modules, like numpy, pandas and matplotlib are also being used.", "We establish a connection to our database in line 2. Due to its small size of around 180 kB the database is also stored on my GitHub repository, so you do not need to worry to create this database from scratch.", "What kind of data do we want to describe the trajectory of 67P? Well, obviously we need the orbital elements like the perihelion (line 5), the semi-major axis (line 6), the aphelion and eccentricity (line 7) as well as the argument of perihelion and the inclination (line 8). The comets\u2019 names start with the number and type abbreviation (C, P, X etc.) followed by the actual name. To get the data of a comet by only providing the number we use the SQL command NAME LIKE \u201c67P%\u201d. The where statement searches for names whose strings are \u201clike\u201d 67P with any (sub) string attached (%). The data are stored in a pandas dataframe via the command read_sql.", "Let\u2019s take a look at the data from the database. We simply print the results with the iloc command within an f-string.", "The output is shown below. We successfully extracted the information of the comet 67P. The perihelion is at 1.2 AU, so within the range where the Sun\u2019s heating causes the comets to evaporate [2]. The aphelion is at 5.7 AU; and a small inclination of around 4 degrees indicates that the comet crosses the orbit\u2019s plane of Jupiter, making it a Jupiter-Family-Comet (JFC).", "With these data, we could easily visualise and analyse the comet\u2019s orbit. But consider the article about the Tisserand Parameter (Space Science with Python \u2014 A Rendezvous with Jupiter): The orbit of small bodies is affected by planetary gravitational perturbations (like Jupiter). Perturbations alter the orbital elements, however, the database provides only static results at a certain epoch!", "So shall we generate complex and computational heavy numerical simulations? This is not necessary. Re-consider the already used SPICE kernels. Maybe we find a kernel that already contains some more complex considerations. Let\u2019s have a look.", "The public kernel repository has a sub-folder for the Rosetta mission. There we find the kernels and then spk sub-folders. We take a deeper look at the \u201cold\u201d data in the sub-folder former_versions. The aareadme.txt states:", "Although this is not an official project spk, we use this kernel due to the time coverage between 2004 and 2016. We add the kernel\u2019s path (with some other needed kernels) to the kernel_meta.txt and load the file via furnsh.", "For the orbital elements that were loaded before, we will need the gravitational constant times the mass of the Sun. We extract this information in line 5 and 6 with the command bodvcd.", "What do we want to achieve? The MPC data provide orbital elements that do not change over time. The SPICE kernel, on the other hand, could contain a more sophisticated dataset of the comet\u2019s trajectory. So let\u2019s analyse a time range of 10 years; from 2004 to 2014. First, we need to create an array that contains date-time steps between both years. Line 2 and 3 create pandas Timestamp(s) for the 1st January of each year. Line 6 creates a numpy array with 1000 time steps and line 9 converts it back to a date-time object with pandas to_datetime.", "Now we compute the orbital elements of 67P for each time step, based on the corresponding SPICE kernel. An empty data-frame is created in line 2 that will store all results. The UTC time strings are stored in line 5 and converted to Ephemeris time (ET) in line 8 to 9 with the SPICE function utc2et. Then, the state vector of 67P as seen from the Sun is computed (line 12 to 16). For this computation the function spkgeo is used and ECLIPJ2000 is set as a reference frame. The NAIF ID code for 67P is 1000012 [*]. Finally, line 19 to 23 calculate the state vectors\u2019 corresponding orbital elements with the function oscltx.", "The orbital elements are stored as arrays in the column STATE_VEC_ORB_ELEM. Now, we extract the required orbital elements from the array and assign them to individual dataframe columns. The order of the orbital elements in the arrays is explained in the oscltx documentation:", "Spatial information are given in km and angular information are given in radians. We convert the values to Astronomical Units (using the function convrt in line 3 to 7 and 26 to 30) and degrees (using numpy degrees in line 14\u201315, 18\u201319 and 22\u201323), respectively. In lines 33 to 36 we compute additionally the aphelion using the semi-major axis and eccentricity.", "The results from the SPICE kernel and the static dataset from the MPC dataset can now be displayed. We use matplotlib to visualise and interpret the results. We set a dark-theme in line 4 and increase the font size for better readability in line 7. A for-loop iterates now through 3 different parameters: the perihelion, the eccentricity and the argument of perihelion (line 11 to 50). The SPICE data are plotted in line 22 to 24 and the MPC data are plotted as a horizontal reference line in code line 28 to 29 using the matplotlib function hlines. The plotting routine requires a static y value and the required x axis range (xmin and xmax). A grid (line 35) and axes labels are set (line 38 and 39). Line 43 to 47 adjust the legend settings (the transparency of the lines is being removed for better readability) and the figure is finally stored (line 50).", "Let\u2019s take a look at the resulting plots. The first two figures show the perihelion and eccentricity vs. the date-time given in UTC. The solid line represents the values from the SPICE kernel and the horizontal dashed line is the reference data from the MPC dataset. As you can see, both results differ. Further, the SPICE results change over time. For example, between 2004 and 2008 the perihelion changes from around 1.29 AU to less than 1.25 AU, so around 6 Million kilometres! The smallest difference between the MPC data and the SPICE kernel result is around 0.04 AU for the perihelion data and 0.0125 for the eccentricity. Considering that we did not take an error into account from the MPC data (SPICE kernel did not provide an error for the values) the difference is not significantly large.", "The last figure shows the argument of perihelion vs. the date-time in UTC. You can see that the perihelion\u2019s position of the comet rotated by around 2 degrees within 2 years. Is this \u201ca lot\u201d? Our home planet Earth is also affected by gravitational perturbations. However, due to its larger distance to other planets and its own mass the effects are rather small. The argument of perihelion of the Earth rotates by 360\u00b0 in over 100,000 years [3]!", "How shall one trust the data sources? Is there a way to get the \u201creal\u201d data? This cannot be answered. It always depends on your use case and required degree of detail. For large population analysis of all comets (Space Science with Python \u2014 Did we observe everything?), the MPC data are sufficient. Even for short-term predictions and trajectory computations, static results are fine. However, spacecraft mission design studies and detailed scientific analysis of particular comets require a more sophisticated and \u201ccorrected\u201d view. Numerical analysis that consider gravitational perturbations and the outgassing of the comet are the most detailed ones. Provided SPICE kernels in the public repository are always a first good approach for good data quality.", "But can the perturbations be explained quantitatively? Without too computational-heavy calculations? Yes! And this will be done next time, where we will use SPICE to derive our own solution of the history of 67P.", "As some users suggested I will add small tasks at the end of every tutorial. That way, you can apply the things you learned. Feel free to contact me if you face any issues.", "How does one find out the NAIF IDs without checking the NAIF ID website? What are the time windows or coverages of the SPICE kernels? These questions can be answered with SPICE functions that are shown in a future tutorial, where I will provide a supplementary article on SPICE kernel information extraction.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist and Engineer. Astrophysicist and Solar System researcher \u2014 Now working in the automotive industry"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F7fecedd78169&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----7fecedd78169--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7fecedd78169--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://thomas-albin.medium.com/?source=post_page-----7fecedd78169--------------------------------", "anchor_text": ""}, {"url": "https://thomas-albin.medium.com/?source=post_page-----7fecedd78169--------------------------------", "anchor_text": "Thomas Albin"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe5af1ec51465&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&user=Thomas+Albin&userId=e5af1ec51465&source=post_page-e5af1ec51465----7fecedd78169---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7fecedd78169&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7fecedd78169&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/space-science-with-python", "anchor_text": "Space Science with Python"}, {"url": "https://towardsdatascience.com/tagged/space-science-with-python", "anchor_text": "tutorial series"}, {"url": "https://www.esa.int/ESA_Multimedia/Images/2016/09/Comet_outbursts_annotated", "anchor_text": "ESA/Rosetta/MPS for OSIRIS Team MPS/UPD/LAM/IAA/SSO/INTA/UPM/DASP/IDA"}, {"url": "https://creativecommons.org/licenses/by-sa/3.0/de/deed.en", "anchor_text": "CC BY-SA IGO 3.0"}, {"url": "https://github.com/ThomasAlbin/SpaceScienceTutorial", "anchor_text": "GitHub"}, {"url": "https://github.com/ThomasAlbin/SpaceScienceTutorial", "anchor_text": "GitHub"}, {"url": "https://towardsdatascience.com/space-science-with-python-a-comet-in-3-d-3774b1d71d9b", "anchor_text": "Space Science with Python \u2014 A comet in 3 D"}, {"url": "https://www.aanda.org/component/toc/?task=topic&id=977", "anchor_text": "Astronomy & Astrophysics Special Issues"}, {"url": "https://www.esa.int/ESA_Multimedia/Images/2018/10/Comet_landscape", "anchor_text": "The official ESA image description says"}, {"url": "https://creativecommons.org/licenses/by-sa/4.0/deed.en", "anchor_text": "CC BY SA 4.0"}, {"url": "https://towardsdatascience.com/comets-visitors-from-afar-4d432cf0f3b", "anchor_text": "Space Science with Python: Comets \u2014 Visitors from afar"}, {"url": "https://www.minorplanetcenter.net/data", "anchor_text": "Minor Planet Center (MPC)"}, {"url": "https://naif.jpl.nasa.gov/naif/toolkit.html", "anchor_text": "NASA\u2019s SPICE toolkit"}, {"url": "https://github.com/AndrewAnnex/SpiceyPy", "anchor_text": "spiceypy"}, {"url": "https://numpy.org/", "anchor_text": "numpy"}, {"url": "https://pandas.pydata.org/", "anchor_text": "pandas"}, {"url": "https://matplotlib.org/", "anchor_text": "matplotlib"}, {"url": "https://github.com/ThomasAlbin/SpaceScienceTutorial", "anchor_text": "GitHub repository"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_sql.html", "anchor_text": "read_sql"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.iloc.html", "anchor_text": "iloc"}, {"url": "https://towardsdatascience.com/space-science-with-python-a-rendezvous-with-jupiter-55713e4ce340", "anchor_text": "Space Science with Python \u2014 A Rendezvous with Jupiter"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/", "anchor_text": "public kernel repository"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/furnsh_c.html", "anchor_text": "furnsh"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/bodvcd_c.html", "anchor_text": "bodvcd"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Timestamp.html", "anchor_text": "Timestamp"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.to_datetime.html", "anchor_text": "to_datetime"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/utc2et_c.html", "anchor_text": "utc2et"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/spkgeo_c.html", "anchor_text": "spkgeo"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/req/naif_ids.html", "anchor_text": "NAIF ID code"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/oscltx_c.html", "anchor_text": "oscltx"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/oscltx_c.html", "anchor_text": "oscltx"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/convrt_c.html", "anchor_text": "convrt"}, {"url": "https://numpy.org/doc/stable/reference/generated/numpy.degrees.html", "anchor_text": "degrees"}, {"url": "https://matplotlib.org/", "anchor_text": "matplotlib"}, {"url": "https://matplotlib.org/api/_as_gen/matplotlib.pyplot.hlines.html", "anchor_text": "hlines"}, {"url": "https://towardsdatascience.com/space-science-with-python-did-we-observe-everything-617a8221e750", "anchor_text": "Space Science with Python \u2014 Did we observe everything?"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/spkgps_c.html", "anchor_text": "spkgps"}, {"url": "https://ui.adsabs.harvard.edu/abs/1966GeoJ...11..323V", "anchor_text": "1966GeoJ\u202611..323V"}, {"url": "https://doi.org/10.1111%2Fj.1365-246X.1966.tb03086.x", "anchor_text": "10.1111/j.1365\u2013246X.1966.tb03086.x"}, {"url": "https://medium.com/tag/python?source=post_page-----7fecedd78169---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/space?source=post_page-----7fecedd78169---------------space-----------------", "anchor_text": "Space"}, {"url": "https://medium.com/tag/science?source=post_page-----7fecedd78169---------------science-----------------", "anchor_text": "Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----7fecedd78169---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/space-science-with-python?source=post_page-----7fecedd78169---------------space_science_with_python-----------------", "anchor_text": "Space Science With Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7fecedd78169&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&user=Thomas+Albin&userId=e5af1ec51465&source=-----7fecedd78169---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7fecedd78169&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&user=Thomas+Albin&userId=e5af1ec51465&source=-----7fecedd78169---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7fecedd78169&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7fecedd78169--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F7fecedd78169&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----7fecedd78169---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----7fecedd78169--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----7fecedd78169--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----7fecedd78169--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----7fecedd78169--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----7fecedd78169--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----7fecedd78169--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----7fecedd78169--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----7fecedd78169--------------------------------", "anchor_text": ""}, {"url": "https://thomas-albin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://thomas-albin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Thomas Albin"}, {"url": "https://thomas-albin.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "432 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe5af1ec51465&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&user=Thomas+Albin&userId=e5af1ec51465&source=post_page-e5af1ec51465--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe56e0e06b404&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-turbulent-times-of-a-comet-7fecedd78169&newsletterV3=e5af1ec51465&newsletterV3Id=e56e0e06b404&user=Thomas+Albin&userId=e5af1ec51465&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}