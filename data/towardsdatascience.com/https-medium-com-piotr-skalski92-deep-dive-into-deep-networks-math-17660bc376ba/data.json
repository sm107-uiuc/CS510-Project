{"url": "https://towardsdatascience.com/https-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba", "time": 1682993607.1778939, "path": "towardsdatascience.com/https-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba/", "webpage": {"metadata": {"title": "Deep Dive into Math Behind Deep Networks | by Piotr Skalski | Towards Data Science", "h1": "Deep Dive into Math Behind Deep Networks", "description": "Nowadays, having at our disposal many high-level, specialized libraries and frameworks such as Keras, TensorFlow or PyTorch, we do not need to constantly worry about the size of our weights matrices\u2026"}, "outgoing_paragraph_urls": [{"url": "https://keras.io/", "anchor_text": "Keras", "paragraph_index": 0}, {"url": "https://www.tensorflow.org/", "anchor_text": "TensorFlow", "paragraph_index": 0}, {"url": "https://pytorch.org/", "anchor_text": "PyTorch", "paragraph_index": 0}, {"url": "https://medium.com/@jungyilin?source=responses---------6----------------", "anchor_text": "Jung Yi Lin", "paragraph_index": 1}, {"url": "http://wp.mlab.tw/?p=2613", "anchor_text": "article", "paragraph_index": 1}, {"url": "https://medium.com/@davivc/um-mergulho-profundo-na-matem%C3%A1tica-por-tr%C3%A1s-das-redes-neurais-77994b87a2ab", "anchor_text": "version", "paragraph_index": 1}, {"url": "https://medium.com/@davivc", "anchor_text": "Davi Candido", "paragraph_index": 1}, {"url": "https://github.com/SkalskiP/ILearnDeepLearning.py", "anchor_text": "GitHub", "paragraph_index": 1}, {"url": "https://twitter.com/PiotrSkalski92", "anchor_text": "Twitter", "paragraph_index": 19}, {"url": "https://medium.com/@piotr.skalski92", "anchor_text": "Medium", "paragraph_index": 19}, {"url": "https://github.com/SkalskiP", "anchor_text": "GitHub", "paragraph_index": 19}, {"url": "https://www.kaggle.com/skalskip", "anchor_text": "Kaggle", "paragraph_index": 19}, {"url": "https://towardsdatascience.com/preventing-deep-neural-network-from-overfitting-953458db800a", "anchor_text": "other articles", "paragraph_index": 19}, {"url": "http://makesense.ai", "anchor_text": "makesense.ai", "paragraph_index": 21}], "all_paragraphs": ["Nowadays, having at our disposal many high-level, specialized libraries and frameworks such as Keras, TensorFlow or PyTorch, we do not need to constantly worry about the size of our weights matrices or remembers formula for the derivative of activation function we decided to use. Often all we need to create a neural network, even one with a very complicated structure, is a few imports and a few lines of code. This saves us hours of searching for bugs and streamlines our work. However, the knowledge of what is happening inside the neural network helps a lot with tasks like architecture selection, hyperparameters tuning or optimisation.", "Note: Thanks to the Jung Yi Lin courtesy, you can also read this article in Chinese. You can also check out the Portuguese version of the text thanks to Davi Candido help. The source code used to create visualizations that were used in this article is available on my GitHub.", "To understand more about how neural networks work, I decided to spend some time in this summer and take a look at the mathematics that hides under the surface. I also decided to write an article, a bit for myself \u2014 to organize newly learned information, a bit for others \u2014 to help them understand these sometimes difficult concepts. I will try to be as gentle as possible for those who feel less comfortable with algebra and differential calculus, but as the title suggests, it will be an article with a lot of math.", "As an example, we will solve the problem of the binary classification of the data set, which is presented in the Figure 1. above. Points belonging to two classes form circles \u2014 this arrangement is inconvenient for many traditional ML algorithms, but a small neural network should work just fine. In order to tackle this problem, we will use a NN with the structure shown in Figure 2. \u2014 five fully connected layers, with different numbers of units. For hidden layers we will use the ReLU as the activation function, and Sigmoid for the output layer. It is a quite simple architecture, but complicated enough to be a useful example for our deliberations.", "First, I will present a solution using one of the most popular machine-learning libraries \u2014 KERAS.", "Aaaaand that\u2019s it. As I mentioned in the introduction, a few imports and a few lines of code are enough to create and train a model that is then able to classify the entries from our test set with almost 100% accuracy. Our task boils down to providing hyperparameters (number of layers, the number of neurons in the layer, activation functions or the number of epochs) in accordance with the selected architecture. Let us now look at what happened behind the scenes. Oh\u2026 And a cool visualization I created during the learning process, which hopefully keep you from falling asleep.", "Let us start by answering this key question: What is a neural network? It is a biologically-inspired method of building computer programs that are able to learn and independently find connections in data. As Figure 2. shows, nets are a collection of software \u2018neurons\u2019 arranged in layers, connected together in a way that allows communication.", "Each neuron receives a set of x-values (numbered from 1 to n) as an input and compute the predicted y-hat value. Vector x actually contains the values of the features in one of m examples from the training set. What is more each of units has its own set of parameters, usually referred to as w (column vector of weights) and b (bias) which changes during the learning process. In each iteration, the neuron calculates a weighted average of the values of the vector x, based on its current weight vector w and adds bias. Finally, the result of this calculation is passed through a non-linear activation function g. I will mention a bit about the most popular activation functions in the following part of the article.", "Now let\u2019s zoom out a little and consider how calculations are performed for a whole layer of the neural network. We will use our knowledge of what is happening inside a single unit and vectorize across full layer to combine those calculations in into matrix equations. To unify the notation, the equations will be written for the selected layer [l]. By the way, subscript i mark the index of a neuron in that layer.", "One more important remark: When we wrote the equations for a single unit, we used x and y-hat, which were respectively the column vector of features and the predicted value. When switching to the general notation for layer, we use the vector a \u2014 meaning the activation of the corresponding layer. The x vector is therefore the activation for layer 0 \u2014 input layer. Each neuron in the layer performs a similar calculation according to the following equations:", "For the sake of clarity, let\u2019s write down the equations for example for layer 2:", "As you can see, for each of the layers we have to perform a number of very similar operations. Using for-loop for this purpose is not very efficient, so to speed up the calculation we will use vectorization. First of all, by stacking together horizontal vectors of weights w (transposed) we will build matrix W. Similarly, we will stack together bias of each neuron in the layer creating vertical vector b. Now there is nothing to stop us from building a single matrix equations that allows us to perform calculations for all the neurons of the layer at once. Let\u2019s also write down the dimensions of the matrices and vectors we have used.", "The equation that we have drawn up so far involves only one example. During the learning process of a neural network, you usually work with huge sets of data, up to millions of entries. The next step will therefore be vectorisation across multiple examples. Let\u2019s assume that our data set has m entries with nx features each. First of all, we will put together the vertical vectors x, a, and z of each layer creating the X, A and Z matrices, respectively. Then we rewrite the previously laid-out equation, taking into account the newly created matrices.", "Activation functions are one of the key elements of the neural network. Without them, our neural network would become a combination of linear functions, so it would be just a linear function itself. Our model would have limited expansiveness, no greater than logistic regression. The non-linearity element allows for greater flexibility and creation of complex functions during the learning process. The activation function also has a significant impact on the speed of learning, which is one of the main criteria for their selection. Figure 6 shows some of the commonly used activation functions. Currently, the most popular one for hidden layers is probably ReLU. We still sometimes use sigmoid, especially in the output layer, when we are dealing with a binary classification and we want the values returned from the model to be in the range from 0 to 1.", "The basic source of information on the progress of the learning process is the value of the loss function. Generally speaking, the loss function is designed to show how far we are from the \u2018ideal\u2019 solution. In our case we used binary crossentropy, but depending on the problem we are dealing with different functions can be applied. The function used by us is described by the following formula, and the change of its value during the learning process is visualised in Figure 7. It shows how with each iteration the value of the loss function decreases and accuracy increases.", "The learning process is about changing the values of the W and b parameters so that the loss function is minimized. In order to achieve this goal, we will turn for help to calculus and use gradient descent method to find a function minimum. In each iteration we will calculate the values of the loss function partial derivatives with respect to each of the parameters of our neural network. For those who are less familiar with this type of calculations, I will just mention that the derivative has a fantastic ability to describe the slope of the function. Thanks to that we know how to manipulate variables in order to move downhill in the graph. Aiming to form an intuition about how the gradient descent works (and stop you from falling asleep once again) I prepared a small visualization. You can see how with each successive epoch we are heading towards the minimum. In our NN it works in the same way \u2014 the gradient calculated on each iteration shows us the direction in which we should move. The main difference is that in our exemplary neural network, we have many more parameters to manipulate. Exactly\u2026 How to calculate such complex derivatives?", "Backpropagation is an algorithm that allows us to calculate a very complicated gradient, like the one we need. The parameters of the neural network are adjusted according to the following formulae.", "In the equations above, \u03b1 represents learning rate - a hyperparameter which allows you to control the value of performed adjustment. Choosing a learning rate is crucial \u2014 we set it too low, our NN will be learning very slowly, we set it too high and we will not be able to hit the minimum. dW and db are calculated using the chain rule, partial derivatives of loss function with respect to W and b. The size of dW and db are the same as that of W and b respectively. Figure 9. shows the sequence of operations within the neural network. We see clearly how forward and backward propagation work together to optimize the loss function.", "Hopefully I have managed to explain you the mathematics that takes place inside neural networks. Understanding at least the basics of this process can be very helpful when working with NN. I consider the things I have mentioned to be most important, but they are only the tip of the iceberg. I highly recommend to try to program such a small neural network yourself, without the use of an advanced framework, only with Numpy.", "Congratulations if you managed to get here. It was certainly not the easiest reading. If you like this article follow me on Twitter and Medium and see other projects I\u2019m working on, on GitHub and Kaggle. This article is the second part of the \u201cMysteries of Neural Networks\u201d series, if you haven\u2019t had the opportunity yet, read the other articles. Stay curious!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "ML Growth Engineer @ Roboflow / Founder @ makesense.ai"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F17660bc376ba&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----17660bc376ba--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----17660bc376ba--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://skalskip.medium.com/?source=post_page-----17660bc376ba--------------------------------", "anchor_text": ""}, {"url": "https://skalskip.medium.com/?source=post_page-----17660bc376ba--------------------------------", "anchor_text": "Piotr Skalski"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F11b65705ec0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&user=Piotr+Skalski&userId=11b65705ec0&source=post_page-11b65705ec0----17660bc376ba---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F17660bc376ba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F17660bc376ba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://keras.io/", "anchor_text": "Keras"}, {"url": "https://www.tensorflow.org/", "anchor_text": "TensorFlow"}, {"url": "https://pytorch.org/", "anchor_text": "PyTorch"}, {"url": "https://medium.com/@jungyilin?source=responses---------6----------------", "anchor_text": "Jung Yi Lin"}, {"url": "http://wp.mlab.tw/?p=2613", "anchor_text": "article"}, {"url": "https://medium.com/@davivc/um-mergulho-profundo-na-matem%C3%A1tica-por-tr%C3%A1s-das-redes-neurais-77994b87a2ab", "anchor_text": "version"}, {"url": "https://medium.com/@davivc", "anchor_text": "Davi Candido"}, {"url": "https://github.com/SkalskiP/ILearnDeepLearning.py", "anchor_text": "GitHub"}, {"url": "https://twitter.com/PiotrSkalski92", "anchor_text": "Twitter"}, {"url": "https://medium.com/@piotr.skalski92", "anchor_text": "Medium"}, {"url": "https://github.com/SkalskiP", "anchor_text": "GitHub"}, {"url": "https://www.kaggle.com/skalskip", "anchor_text": "Kaggle"}, {"url": "https://towardsdatascience.com/preventing-deep-neural-network-from-overfitting-953458db800a", "anchor_text": "other articles"}, {"url": "https://github.com/SkalskiP", "anchor_text": ""}, {"url": "https://towardsdatascience.com/preventing-deep-neural-network-from-overfitting-953458db800a", "anchor_text": ""}, {"url": "https://twitter.com/PiotrSkalski92", "anchor_text": ""}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----17660bc376ba---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----17660bc376ba---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----17660bc376ba---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----17660bc376ba---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----17660bc376ba---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F17660bc376ba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&user=Piotr+Skalski&userId=11b65705ec0&source=-----17660bc376ba---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F17660bc376ba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&user=Piotr+Skalski&userId=11b65705ec0&source=-----17660bc376ba---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F17660bc376ba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----17660bc376ba--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F17660bc376ba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----17660bc376ba---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----17660bc376ba--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----17660bc376ba--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----17660bc376ba--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----17660bc376ba--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----17660bc376ba--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----17660bc376ba--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----17660bc376ba--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----17660bc376ba--------------------------------", "anchor_text": ""}, {"url": "https://skalskip.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://skalskip.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Piotr Skalski"}, {"url": "https://skalskip.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "4.7K Followers"}, {"url": "http://makesense.ai", "anchor_text": "makesense.ai"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F11b65705ec0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&user=Piotr+Skalski&userId=11b65705ec0&source=post_page-11b65705ec0--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ffd74b5c17627&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhttps-medium-com-piotr-skalski92-deep-dive-into-deep-networks-math-17660bc376ba&newsletterV3=11b65705ec0&newsletterV3Id=fd74b5c17627&user=Piotr+Skalski&userId=11b65705ec0&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}