{"url": "https://towardsdatascience.com/using-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949", "time": 1683004959.474452, "path": "towardsdatascience.com/using-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949/", "webpage": {"metadata": {"title": "Using faiss to search in multidimensional spaces | by Sgjurano | Towards Data Science", "h1": "Using faiss to search in multidimensional spaces", "description": "In autumn 2019, Avito\u2019s Automated Moderation team launched a fake ads detection service built on top of the the faiss library. It helps us detect whether an image has already been used in another ad\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/avitotech", "anchor_text": "Avito\u2019s", "paragraph_index": 0}, {"url": "https://github.com/facebookresearch/faiss", "anchor_text": "the faiss library", "paragraph_index": 0}, {"url": "https://bugs.python.org/issue21998", "anchor_text": "doesn\u2019t work well", "paragraph_index": 9}, {"url": "https://bugs.python.org/issue21998", "anchor_text": "multiprocessing.Pipe", "paragraph_index": 9}, {"url": "https://mccormickml.com/2017/10/13/product-quantizer-tutorial-part-1/#exhaustive-search-with-approximate-distances", "anchor_text": "Product Quantization", "paragraph_index": 10}, {"url": "http://mccormickml.com/2017/10/22/product-quantizer-tutorial-part-2/", "anchor_text": "Inverted File", "paragraph_index": 11}, {"url": "https://arxiv.org/pdf/1603.09320v4.pdf", "anchor_text": "HNSW", "paragraph_index": 11}, {"url": "https://github.com/facebookresearch/faiss/wiki/Guidelines-to-choose-an-index", "anchor_text": "an index selection guideline", "paragraph_index": 13}, {"url": "https://github.com/facebookresearch/faiss/wiki/Indexing-1G-vectors", "anchor_text": "benchmark", "paragraph_index": 13}, {"url": "https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor", "anchor_text": "ThreadPoolExecutor", "paragraph_index": 22}, {"url": "https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock", "anchor_text": "RWlock", "paragraph_index": 24}, {"url": "https://github.com/elarivie/pyReaderWriterLock", "anchor_text": "this package", "paragraph_index": 24}, {"url": "https://github.com/facebookresearch/faiss/issues/1108", "anchor_text": "respective issue", "paragraph_index": 26}, {"url": "https://github.com/facebookresearch/faiss/wiki/Threads-and-asynchronous-calls", "anchor_text": "this faiss wiki article", "paragraph_index": 27}, {"url": "http://corpus-texmex.irisa.fr/", "anchor_text": "SIFT1M", "paragraph_index": 34}, {"url": "https://github.com/facebookresearch/faiss/issues", "anchor_text": "via issues", "paragraph_index": 37}, {"url": "https://github.com/vearch/vearch", "anchor_text": "at the vearch system by JD.com", "paragraph_index": 38}], "all_paragraphs": ["In autumn 2019, Avito\u2019s Automated Moderation team launched a fake ads detection service built on top of the the faiss library. It helps us detect whether an image has already been used in another ad, even if it was modified in any way \u2014 blurred, cropped, etc.", "I would like to talk about the problems that we encountered in the process of implementing this service and the approaches we took to solving them.", "In this article I will mainly focus on technical aspects, assuming you know a little about searching in multidimensional spaces.", "The first thing I thought about when I was given the task to develop an image retrieval system was its specifications and limitations:", "Since we need to search among hundreds of millions of vectors quickly enough, exhaustive search is not an option \u2014 we need an index that will be in RAM. To fit the vectors there, they need to be compressed.", "Once the index is in RAM, to protect it against loss, we will occasionally make backup copies and store these externally. Backups should not require doubling the memory size, even temporarily, since we are talking about dozens of gigabytes.", "What remains is to provide for horizontal scaling. The easiest solution in our situation is identical eventually consistent indexes. Then the service instances do not need to know about each other\u2019s existence, and the database will be the only synchronization point.", "Our service is written in Python 3.7, PostgreSQL is used to store vectors, and a MinIO has been chosen as backups storage. Faiss plays a key role as an indexing library.", "To interact with the outside world, we use the avio http framework, which is our in-house wrapper around aiohttp.", "Since asyncio doesn\u2019t work well with fork calls that we need for backups and calling long blocking operations in an asynchronous service is bad practice, all interactions with the index have been moved to a separate process, with which we interact using multiprocessing.Pipe.", "For compression, we decided to use Product Quantization. This approach allows us to compress the original vector to 64 bytes.", "To speed up the search process, we chose a mixed approach based on Inverted File and HNSW.", "As a result, we got an index structure, which in terms of faiss is described by the mysterious line: IVF262144_HNSW32,PQ64. This means that we create an Inverted File for 262144 clusters, the closest of which will be selected using HNSW with 32 neighbors, and all vectors are compressed to 64 bytes using the Product Quantization method.", "Here are links to an index selection guideline from the developers of faiss and a benchmark.", "What you should pay attention to when looking at the benchmark results:", "It is most appropriate to estimate memory costs in relative terms \u2014 in bytes per vector. This way, we can identify memory leaks, should these occur, and easily distinguish them from organic growth due to inserts.", "The memory is spent primarily on storing vectors, in the case of IVF262144_HNSW32,PQ64 it is 80 bytes per vector:", "The relative memory costs can be calculated with the following formula:", "Some memory can be consumed by the pre-computed distance table, but it is no longer calculated automatically when the estimated size exceeds 2Gb. Its size can be estimated as nlist \u00d7 pq.M \u00d7 pq.ksub \u00d7 float. In our case, 262,144 \u00d7 64 \u00d7 256 \u00d7 4 \u2248 17Gb, where pq.M is the number of Product Quantization components, pq.ksub is 256, since so many clusters can be described with a single byte.", "What you should pay attention to when estimating memory costs. The above data is for a static index only: if you add and remove items, memory consumption should be multiplied by at least 2. I suspect that this is due to the dynamic memory allocation to vectors in Inverted File, but I have yet to find support for this hypothesis. If you know the answer, please share it in the comments below.", "The convergence of bytes per vector after rolling out the service:", "If the problem you are working on does not involve deleting and modifying vectors, you can move most of them to a static index archive and insert new vectors only in a smaller index, merging it with the larger one from time to time, and send search queries to both indexes. So, basically, the classic approach to information retrieval.", "Despite using OpenMP inside faiss, any long query sent to large clusters can block the index for a substantial amount of time. To avoid system irregularities, we use ThreadPoolExecutor (faiss is friendly and release GIL).", "For faiss to run correctly in a multi-threaded environment, two things need to be done. Firstly, do not allow parallel execution of modifying operations (add, remove) and any other operations. Secondly, limit the number of OpenMP threads during the execution of reading queries in such a way that the total number of threads does not exceed the specified CPU-cores limit. Otherwise, the performance loss is inevitable.", "The most convenient way to separate the writing load from the reading load is RWlock, which allows many readers to enter the critical section, but only one writer. For Python, I recommend this package. The number of running OpenMP threads can be adjusted using the faiss.omp_set_num_threads function.", "For optimal performance, it makes sense to select the batch size per thread in such a way that query-per-second is maximized. We use a batch size of 5.", "It is worth noting that with multithreading, memory consumption increases slightly. It seems like a bug (here is the respective issue).", "For more information on multithreading support, check out this faiss wiki article.", "New vectors are added to the database, from which these are read every 5 seconds by each instance independently and inserted in the index in batches of 10,000 each (or a smaller batch accumulated since the last update). The insertion speed in the index is sufficiently high for the database to become a bottleneck: about 800 thousand vectors per minute.", "One 20-core instance is capable of processing up to 150 rps of searches for 20 nearest neighbors of a single image when we optimizing latency and about 550 qps if we optimizing the througput. Load scaling is very straightforward: just add more instances since they do not know anything about each other.", "Since the index is in RAM, its loss is possible if the machine is down. To avoid this problem, dump it regularly to the external storage. We use MinIO for this purpose.", "The most convenient way is to make a fork and use Copy-on-Write to get a copy of the index that is almost free in terms of memory consumption and impact on the operation time. Then save this index to disk and upload to the storage. Here, I suggest proceeding from the static index size \u2014 in our case, about 80 bytes per vector.", "Accordingly, when starting the application, you only need to load the latest copy from the repository and insert the missing data from the database.", "We do not use GPU search in the production yet, but I took some measurements to understand the ratio of operation times.", "Data: SIFT1M, dimension 128.Query: we are looking for 100 nearest neighbors for 10,000 vectors with different nprobe values.", "What you should pay attention to:", "Faiss is probably the best open-source tool for approximate search today, but like any complex tool, it takes time to get used to.", "It\u2019s best to learn it by checking the code now and then, although the faiss documentation is pretty good. You can also send questions to the developers via issues. Usually, they respond fairly quickly.", "If you are considering deploying this kind of system on a predetermined set of machines, I suggest taking a look at the vearch system by JD.com. They have done most of the dirty work and made their solution available as open-source, although the documentation is still very rudimentary.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fccc80fcbf949&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://sgjurano.medium.com/?source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": ""}, {"url": "https://sgjurano.medium.com/?source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": "Sgjurano"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F362669c73ca2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&user=Sgjurano&userId=362669c73ca2&source=post_page-362669c73ca2----ccc80fcbf949---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fccc80fcbf949&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fccc80fcbf949&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://medium.com/avitotech", "anchor_text": "Avito\u2019s"}, {"url": "https://github.com/facebookresearch/faiss", "anchor_text": "the faiss library"}, {"url": "https://bugs.python.org/issue21998", "anchor_text": "doesn\u2019t work well"}, {"url": "https://bugs.python.org/issue21998", "anchor_text": "multiprocessing.Pipe"}, {"url": "https://mccormickml.com/2017/10/13/product-quantizer-tutorial-part-1/#exhaustive-search-with-approximate-distances", "anchor_text": "Product Quantization"}, {"url": "https://mccormickml.com/2017/10/13/product-quantizer-tutorial-part-1/#exhaustive-search-with-approximate-distances", "anchor_text": "from an article by Chris McCormick"}, {"url": "http://mccormickml.com/2017/10/22/product-quantizer-tutorial-part-2/", "anchor_text": "Inverted File"}, {"url": "https://arxiv.org/pdf/1603.09320v4.pdf", "anchor_text": "HNSW"}, {"url": "http://www-cs-students.stanford.edu/~amitp/game-programming/polygon-map-generation/", "anchor_text": "Red Blob Games"}, {"url": "https://arxiv.org/pdf/1603.09320v4.pdf", "anchor_text": "the article by Yu. A. Malkov, D. A. Yashunin"}, {"url": "https://github.com/facebookresearch/faiss/wiki/Guidelines-to-choose-an-index", "anchor_text": "an index selection guideline"}, {"url": "https://github.com/facebookresearch/faiss/wiki/Indexing-1G-vectors", "anchor_text": "benchmark"}, {"url": "https://docs.python.org/3/library/concurrent.futures.html#threadpoolexecutor", "anchor_text": "ThreadPoolExecutor"}, {"url": "https://www.nginx.com/blog/thread-pools-boost-performance-9x/", "anchor_text": "by nginx"}, {"url": "https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock", "anchor_text": "RWlock"}, {"url": "https://github.com/elarivie/pyReaderWriterLock", "anchor_text": "this package"}, {"url": "https://github.com/facebookresearch/faiss/issues/1108", "anchor_text": "respective issue"}, {"url": "https://github.com/facebookresearch/faiss/wiki/Threads-and-asynchronous-calls", "anchor_text": "this faiss wiki article"}, {"url": "http://corpus-texmex.irisa.fr/", "anchor_text": "SIFT1M"}, {"url": "https://github.com/facebookresearch/faiss/issues", "anchor_text": "via issues"}, {"url": "https://github.com/vearch/vearch", "anchor_text": "at the vearch system by JD.com"}, {"url": "https://medium.com/tag/faiss?source=post_page-----ccc80fcbf949---------------faiss-----------------", "anchor_text": "Faiss"}, {"url": "https://medium.com/tag/multidimensional-search?source=post_page-----ccc80fcbf949---------------multidimensional_search-----------------", "anchor_text": "Multidimensional Search"}, {"url": "https://medium.com/tag/python-programming?source=post_page-----ccc80fcbf949---------------python_programming-----------------", "anchor_text": "Python Programming"}, {"url": "https://medium.com/tag/information-retrieval?source=post_page-----ccc80fcbf949---------------information_retrieval-----------------", "anchor_text": "Information Retrieval"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----ccc80fcbf949---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fccc80fcbf949&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&user=Sgjurano&userId=362669c73ca2&source=-----ccc80fcbf949---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fccc80fcbf949&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&user=Sgjurano&userId=362669c73ca2&source=-----ccc80fcbf949---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fccc80fcbf949&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fccc80fcbf949&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----ccc80fcbf949---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----ccc80fcbf949--------------------------------", "anchor_text": ""}, {"url": "https://sgjurano.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://sgjurano.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sgjurano"}, {"url": "https://sgjurano.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "13 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F362669c73ca2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&user=Sgjurano&userId=362669c73ca2&source=post_page-362669c73ca2--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F362669c73ca2%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-faiss-to-search-in-multidimensional-spaces-ccc80fcbf949&user=Sgjurano&userId=362669c73ca2&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}