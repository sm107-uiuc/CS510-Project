{"url": "https://towardsdatascience.com/why-you-should-wrap-decorators-in-python-5ac3676835f9", "time": 1683010358.2536461, "path": "towardsdatascience.com/why-you-should-wrap-decorators-in-python-5ac3676835f9/", "webpage": {"metadata": {"title": "Why You Should Wrap Decorators in Python | by Yong Cui | Towards Data Science", "h1": "Why You Should Wrap Decorators in Python", "description": "Decorators are an important feature in Python. In essence, decorators are functions that modify the behavior of decorated functions without changing their innate functionalities. In Python, the most\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.manning.com/books/python-how-to", "anchor_text": "https://www.manning.com/books/python-how-to", "paragraph_index": 14}], "all_paragraphs": ["Decorators are an important feature in Python. In essence, decorators are functions that modify the behavior of decorated functions without changing their innate functionalities. In Python, the most common syntax to use decorators is to place the decorator function above the to-be-decorated function. The decorator function name has the @ symbol as its prefix to denote that it\u2019s a decorator function. Let\u2019s see its most basic usage below.", "In the above code, we defined a decorator function called invocation_log, which will log messages before and after the invocation of a particular function. To use this decorator, we just simply placed it above the to-be-decorated function \u2014 say_hello, in the example. Don\u2019t forget the @ symbol before the decorator function name. Let\u2019s call the decorated function to see what will happen.", "These three lines of output are exactly what we can expect from the decoration. Specifically, the decorator just logged two messages \u2014 before and after calling the decorated function. Notably, as mentioned earlier, the decorated function does what it was initially defined, while the decorator function does its own job without affecting the functionality of the decorated function.", "During a debugging process, we sometimes need to inspect particular objects to understand the implementation details better. Let\u2019s consider the following inspection of the above-defined decorated function.", "As you can see, it doesn\u2019t really tell us what it is. Instead, it\u2019s telling us that this function is the decorator function\u2019s inner function. This is not surprising, because the use of @ symbol prefixing the decorator function to decorate a function is equivalent to the following lines of code. In other words, the decorated function is indeed the returned inner function defined within the decorator function.", "If other people use our code, some may need to fetch more details about the invocation of the functions. A handy built-in function is designed for that \u2014 the help() function. But is it helpful for the decorated function? Not really, because it\u2019s showing the information about the inner function.", "Alternatively, some people prefer reviewing the docstrings of the function. However, it doesn\u2019t work as you may think.", "In addition, sometimes we want to save our code using serializers, such as the pickle module in the standard library. However, we can\u2019t serialize the decorated function as its present form, because the module can\u2019t serialize the local object which is in the scope of the decorator function.", "Actually the solution is not difficult at all \u2014 we can take advantage of the wraps function in the functools module in the standard library. Interestingly, the wraps function is a decorator itself, and we\u2019ll use this function to decorate the inner function by configuring the to-be-decorated function. Doesn\u2019t sound straightforward? It\u2019s easy to understand it with the following example.", "As shown above, we just used the decorator wraps function to decorate the inner function by wrapping the say_hello function. It\u2019s just one line of code. Let\u2019s see how things are changed after this seemingly trivial change.", "As shown above, the functionality of the decorator stays as before when we didn\u2019t use the wrapper. The more important question is whether the decorated function has different \u201cpresentations\u201d about itself. Let\u2019s check it out by running the following code.", "As you can see from the output, everything works as expected. For example, the docstrings are showing those defined in the say_hello function. We\u2019re now able to serialize the function for further processing.", "In this article, we reviewed why and how we used the wraps decorator in the functools module to solve several outstanding problems that arose when we work with decorators. With a couple of extra lines of code, the decorated functions have desired behaviors as other regular functions.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Work at the nexus of biomedicine, data science & mobile dev. Author of Python How-to by Manning (https://www.manning.com/books/python-how-to)."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F5ac3676835f9&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----5ac3676835f9--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5ac3676835f9--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://yongcui01.medium.com/?source=post_page-----5ac3676835f9--------------------------------", "anchor_text": ""}, {"url": "https://yongcui01.medium.com/?source=post_page-----5ac3676835f9--------------------------------", "anchor_text": "Yong Cui"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F88ff1e2545d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&user=Yong+Cui&userId=88ff1e2545d0&source=post_page-88ff1e2545d0----5ac3676835f9---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5ac3676835f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5ac3676835f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@vorosbenisop?utm_source=medium&utm_medium=referral", "anchor_text": "Benjamin Voros"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://medium.com/tag/techonology?source=post_page-----5ac3676835f9---------------techonology-----------------", "anchor_text": "Techonology"}, {"url": "https://medium.com/tag/programming?source=post_page-----5ac3676835f9---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----5ac3676835f9---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----5ac3676835f9---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/decorators?source=post_page-----5ac3676835f9---------------decorators-----------------", "anchor_text": "Decorators"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5ac3676835f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&user=Yong+Cui&userId=88ff1e2545d0&source=-----5ac3676835f9---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5ac3676835f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&user=Yong+Cui&userId=88ff1e2545d0&source=-----5ac3676835f9---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5ac3676835f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5ac3676835f9--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F5ac3676835f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----5ac3676835f9---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----5ac3676835f9--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----5ac3676835f9--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----5ac3676835f9--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----5ac3676835f9--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----5ac3676835f9--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----5ac3676835f9--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----5ac3676835f9--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----5ac3676835f9--------------------------------", "anchor_text": ""}, {"url": "https://yongcui01.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://yongcui01.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Yong Cui"}, {"url": "https://yongcui01.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "5.5K Followers"}, {"url": "https://www.manning.com/books/python-how-to", "anchor_text": "https://www.manning.com/books/python-how-to"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F88ff1e2545d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&user=Yong+Cui&userId=88ff1e2545d0&source=post_page-88ff1e2545d0--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fef441bd78519&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-should-wrap-decorators-in-python-5ac3676835f9&newsletterV3=88ff1e2545d0&newsletterV3Id=ef441bd78519&user=Yong+Cui&userId=88ff1e2545d0&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://www.manning.com/books/python-how-to", "anchor_text": "Python How-To2023"}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}