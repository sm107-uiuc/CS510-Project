{"url": "https://towardsdatascience.com/are-void-methods-bad-6d67dedc6600", "time": 1683013460.5608141, "path": "towardsdatascience.com/are-void-methods-bad-6d67dedc6600/", "webpage": {"metadata": {"title": "Are Void Methods bad? Why to avoid them, and also when not to. | by Pratick Roy | Towards Data Science", "h1": "Are Void Methods bad?", "description": "A deep-dive into the nature of void methods and the associated side-effects. Why you should broadly avoid them. And the cases when you shouldn't."}, "outgoing_paragraph_urls": [{"url": "https://pratickroy.github.io/", "anchor_text": "https://pratickroy.github.io/", "paragraph_index": 40}], "all_paragraphs": ["A deep-dive into the nature of void methods and the associated side-effects. Why you should broadly avoid them. And the cases when you shouldn\u2019t.", "While I have tried to make plain the subject of this post with the title, in the above paragraph, I have again added a small description of the post. This serves two purposes.", "Again going by my own reading patterns, sometimes I want to read and take away something from a post, but don\u2019t have the time, or sometimes, I broadly understand and agree with the subject, and so don\u2019t want to wade through all the text, only to see if there is any new information or point of view that I can glean from it. As a result throughout the post, I have marked: Key Takeaway. I would encourage you to read the whole post, but if you prefer, fire up the trusted Ctrl/Cmd+F. :)", "Methods, functions (or whatever you want to call them) that return nothing, i.e. have a return type of void, are a staple of programming. In fact, it is the first return type all Java developers see.", "And if you are not a Java developer, then,", "You sir/madam, are a scoundrel without valour, without valour, I say! \ud83d\ude1b", "But keeping the jests out of service, irrespective of the programming language(s) of your choice, you have doubtless come across the concept of void methods. For in our binary world, void methods are ubiquitous. These methods are so common, and we are so familiar with them that we seldom pause to think, how weird and dare I say, how sinister they are.", "Because think about it, a void method does not provide any output. So why will anyone write a method, and then call it only for nothing to be returned? For Ex,", "No one in their right mind would create a method like this. We can\u2019t use this method, to build anything of value. We can call this method a million times, with different values but it wouldn\u2019t matter. [ Key Takeaway 1 ]", "On their own, Void methods are dead code. It\u2019s like a virus. On its own it cannot \u201clive\u201d in the world of programming. And just like a virus requires a host to be truly alive. Void methods, require side-effects[1][2] to actually survive.", "Let us now modify the above code, to introduce some side-effect.", "Now let us look at this code. Every time add() is called, then as a side-effect the state of the Adder class is changed, and the instance variable cumulativeValue is incremented by value", "So now we can use this for some purpose. In this case, I used it to find the sum of all numbers from 0 to 9. Hence to reiterate.", "Void methods are essentially methods that lives on side-effects. If a method gave no output and produced no side-effects, no one would write it, and no one would call it.", "\u201cHmm\u201d, now may say. \u201cIf there are no side effects, void methods don\u2019t make sense. Cool. I\u2019ll just introduce side-effects and use them\u201d \u2014 Fair point. There will be nothing in the standard programming languages[3] that will stop you from doing so. The compiler will pass it without question. But your code reviewer should stop you. And if the reviewer is me. Then I Will!", "You see, When you write a void method, you essentially declare to the world that, This method works through side-effects. And, Side-effects in code or Stateful Programming, is a code smell. It makes your code hard to read, and even harder to debug and expand upon.", "So by Extension, that begs the question,", "Are void methods bad and should we never use them?", "\u2014 Well, Yes and No. Generally yes. If you can write a method, that can work without side-effects, then you should definitely, do so. And in most standard programming you will be able to avoid voids entirely (see what i did there, eh.. eh.. no-one? alright). But, and this is important, some things are by their nature stateful, and when that is the case, not only will I deem void methods acceptable but also will recommend them.", "Now, I understand, the above answer seems a little confusing and to some extent self-contradictory. So, let us observe some void methods in action, and understand what makes good or bad.", "In general, a bad void is one where the underlying operation need not be state-full, or introduce side-effects. Why? To understand that, let us expand our Adder class a bit.", "Now we have added a simple and logical extension to our Adder class. reset(). This method essentially resets cumulativeValue to 0, so that we can use Adder again.", "Yet, even in this simple example, we start to see the problem. Failing to call the reset() before a subsequent add() means a wrong addition.", "Now in this example, the mistake is simple to avoid. But that is because here we have a significant advantage. We have full knowledge of the inner workings of code, and we are the sole author. How often do we have this advantage in real life? Hardly ever. Just think back,", "Have you closed every resource you have ever opened? More importantly, did you always know whether the resource needed to be closed?", "The point I am trying to make is, introducing state, often leads to a situation where the client must use your code responsibly, else it can lead to issues. And while I am all for trusting your fellow developer, I myself subscribe to the philosophy that, [ Key Takeaway 2],", "The lesser someone needs to know and understand my code, in order to use it as intended, the better. You have deadlines approaching, you made an otherwise reasonable assumption that just didn\u2019t happen to pan out in this case. We are all Human, mistakes happen. The lesser chance I give you to make that mistake when interacting with my code, the better it is for the product, the customer, and the codebase.", "In this particular example, say a bug was introduced, and now our reset method looks like this.", "Now, none of the add() methods will work as expected. You see the problem? [ Key Takeaway 3]", "A slight misuse of void methods, and introduction of a small amount of state-fullness, means that, even code bugs become non-encapsulated. Bugs in one method, can affect the functioning of another. More than anything else, this is scary.", "In our 30 lines of code, this otherwise external dependency is easy to find. But, what if this line was tucked away somewhere deep in the codebase? Furthermore, what if this bug is live in public? And while you are fumbling around from one spaghetti thread to another trying to find and fix this, your customers are seeing wrong price info on all their orders.", "I wouldn\u2019t blame the author or the reviewer for missing this bug really. The code might have been legitimate for the feature that was added, but it caused an unintended consequence in some other part of the code, which was not even part of the commit.", "A method\u2019s influence should be kept as local as possible. A good way to do this is to not change the state of the class/global variables or that of the parameters passed. Doing this means, that unless you then return an output, your code is meaningless, and hence, avoid Void.", "All of these scenarios have one thing in common, the underlying operation or intent of the method is to commit a stateful behaviour. Here we absolutely must change state. It still carries risk. An external change, such as a corruption to the database will lead to our operations failing. And we should put in reasonable validations, idempotency checks and all the works to mitigate that risk, but we cannot eliminate statefulness, and still build our product.", "And in this scenario, when you must have side-effects, not only can you use void. You should use void. For then it highlights the fact the the method in question has side-effects, and it was designed to have side-effects. This does two things,", "If the underlying intent of the method is to commit a stateful behaviour, like writing to a DB, you should use Void methods. It segregates the pure functional methods from those with side-effects, telling us where we need to pay attention and exercise caution, and where we can assume that no intended side-effects will occur on invocation.", "I am leaving out a few points, the most important of which is the performance implications of writing non-stateful methods. In many cases, stateful methods are more performant. Case in point Collections.sort()[4]. By sorting the list in-situ, it doubtless saves memory, and possibly takes lesser time to do so.", "Here I will argue that in most situations I\u2019ll not think twice in taking that performance hit. I have gone into it in much detail in a post, I wrote a while back. So check that out, or if you prefer to discuss directly on this or any other thing, then just drop me a note! :)", "There are 2 kinds of writers, those that write more and those that write less. I am the latter. I obsess over creating value and shun noise. If you want to read such content, consider subscribing.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Love to Code. Love to Write. Love to Write about Code. SDE-III at Amazon. One Word to Live By \u2014 Eudaimonia. Visit Me At : https://pratickroy.github.io/."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F6d67dedc6600&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----6d67dedc6600--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----6d67dedc6600--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://pratickroy.medium.com/?source=post_page-----6d67dedc6600--------------------------------", "anchor_text": ""}, {"url": "https://pratickroy.medium.com/?source=post_page-----6d67dedc6600--------------------------------", "anchor_text": "Pratick Roy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd0e73ebdbb0c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&user=Pratick+Roy&userId=d0e73ebdbb0c&source=post_page-d0e73ebdbb0c----6d67dedc6600---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6d67dedc6600&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6d67dedc6600&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://medium.com/u/d0e73ebdbb0c?source=post_page-----6d67dedc6600--------------------------------", "anchor_text": "Pratick Roy"}, {"url": "https://towardsdatascience.com/what-is-good-code-an-actionable-introduction-1cad30551ad4", "anchor_text": "What is good code?A 10-minute actionable introduction.towardsdatascience.com"}, {"url": "https://pratickroy.medium.com/subscribe", "anchor_text": "Click Here To Subscribe :)Want to get notified when I write new stuff? Get an email whenever I publish!There are 2 kinds of writers, those that write more and those that write less. I am the latter. I obsess over creating value and shun noise. If you want to read such content, consider subscribing."}, {"url": "https://en.wikipedia.org/wiki/Side_effect_(computer_science)", "anchor_text": "Side effect (computer science)"}, {"url": "https://stackoverflow.com/questions/34552710/does-system-out-println-have-a-side-effect-in-java", "anchor_text": "Does System.out.println() have a side effect in Java?"}, {"url": "https://www.geeksforgeeks.org/functional-programming-paradigm/", "anchor_text": "https://www.geeksforgeeks.org/functional-programming-paradigm/"}, {"url": "https://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#sort(java.util.List)", "anchor_text": "https://docs.oracle.com/javase/7/docs/api/java/util/Collections.html#sort(java.util.List)"}, {"url": "https://medium.com/tag/programming?source=post_page-----6d67dedc6600---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-development?source=post_page-----6d67dedc6600---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/coding?source=post_page-----6d67dedc6600---------------coding-----------------", "anchor_text": "Coding"}, {"url": "https://medium.com/tag/best-practices?source=post_page-----6d67dedc6600---------------best_practices-----------------", "anchor_text": "Best Practices"}, {"url": "https://medium.com/tag/clean-code?source=post_page-----6d67dedc6600---------------clean_code-----------------", "anchor_text": "Clean Code"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6d67dedc6600&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&user=Pratick+Roy&userId=d0e73ebdbb0c&source=-----6d67dedc6600---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6d67dedc6600&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&user=Pratick+Roy&userId=d0e73ebdbb0c&source=-----6d67dedc6600---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6d67dedc6600&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----6d67dedc6600--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F6d67dedc6600&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----6d67dedc6600---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----6d67dedc6600--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----6d67dedc6600--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----6d67dedc6600--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----6d67dedc6600--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----6d67dedc6600--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----6d67dedc6600--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----6d67dedc6600--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----6d67dedc6600--------------------------------", "anchor_text": ""}, {"url": "https://pratickroy.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://pratickroy.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Pratick Roy"}, {"url": "https://pratickroy.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "128 Followers"}, {"url": "https://pratickroy.github.io/", "anchor_text": "https://pratickroy.github.io/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd0e73ebdbb0c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&user=Pratick+Roy&userId=d0e73ebdbb0c&source=post_page-d0e73ebdbb0c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F845c21313586&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fare-void-methods-bad-6d67dedc6600&newsletterV3=d0e73ebdbb0c&newsletterV3Id=845c21313586&user=Pratick+Roy&userId=d0e73ebdbb0c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}