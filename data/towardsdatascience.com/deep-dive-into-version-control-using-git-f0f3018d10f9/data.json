{"url": "https://towardsdatascience.com/deep-dive-into-version-control-using-git-f0f3018d10f9", "time": 1682996768.217261, "path": "towardsdatascience.com/deep-dive-into-version-control-using-git-f0f3018d10f9/", "webpage": {"metadata": {"title": "Deep dive into version control using Git | by Mumtahin Monzoor | Towards Data Science", "h1": "Deep dive into version control using Git", "description": "Git is a free tool that allows for efficient code revisions by providing a distributed version control system. It is one of the most helpful tools I learned when I started learning programming\u2026"}, "outgoing_paragraph_urls": [{"url": "https://education.github.com/pack", "anchor_text": "here.", "paragraph_index": 1}, {"url": "https://docs.gitlab.com/ee/user/project/import/github.html", "anchor_text": "here", "paragraph_index": 1}, {"url": "https://git-scm.com/download/linux.", "anchor_text": "here", "paragraph_index": 2}, {"url": "https://git-scm.com/download/mac", "anchor_text": "here", "paragraph_index": 4}, {"url": "https://git-scm.com/download/win", "anchor_text": "here", "paragraph_index": 5}, {"url": "https://desktop.github.com/", "anchor_text": "installation", "paragraph_index": 5}, {"url": "https://github.com/join?source=header-home", "anchor_text": "https://github.com/join?source=header-home", "paragraph_index": 6}, {"url": "https://github.com/twbs/bootstrap", "anchor_text": "https://github.com/twbs/bootstrap", "paragraph_index": 24}, {"url": "https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History", "anchor_text": "small rebase", "paragraph_index": 39}], "all_paragraphs": ["Git is a free tool that allows for efficient code revisions by providing a distributed version control system. It is one of the most helpful tools I learned when I started learning programming. Whether I was working on my side projects, collaborating with friends, or working in a professional setting, Git proved itself to be extremely helpful. The best analogy I can give you is a writing a report for a group project on a platform like Google Doc. Your colleagues can work on their own segment of the report simultaneously without having to directly modify your part. Git achieves this objectives by allowing you to create branches from a master branch and have multiple people collaborate on a project. I will explain what Git branches are after walking through the installation process. If you are just starting out or simply coding on projects solo, Git can still help you track your coding history, revert changes, and maintain an efficient workflow.", "You have choices when working with Git. I started my journey on Github as a student during my undergraduate studies. Signing up as a student has the perk of getting a free private Github account with Github Education. If you are a student, checkout the deals here. Other than Github, I have also used Gitlab to collaborate on projects. You can pick Github or Gitlab since they both provide similar functionalities. This tutorial will focus on setting you up with Github. If you want to migrate repositories from one platform to the other, please refer to the migration documents here or comment below and I will be happy to write a tutorial on it.", "If you have trouble or need installation for other Unix based distributions, visit here.", "First check whether you already have Git installed by running the following:", "If you do not have the latest version, an installation prompt should appear. Otherwise, the installation link can be accessed here for the most recent version.", "For windows, please click here and download should begin automatically. This is Git for windows and according to the official Git documentation, Git for windows is different from Git itself. Git windows comes with Git BASH which has BASH emulator so Git can be easily run on windows using command line features. This way, experience you gain from running git commands on windows can easily be transferred to other systems if needed. Another installation option is to install Github desktop.", "Access the sign up flow and create an account: https://github.com/join?source=header-home", "Once you have created a Github account and you are logged in, you can now create repositories. A repository is a place where you put your project(s) in. You can decide to have a single project per repository or you can have a repository with many branches. For the latter your branches can be related but I have seen users create unrelated branches in the same repository also known as orphan branches.", "If you are brand new to version control and Git, all of this can sound a bit confusing at this point. I like to think of repositories as a meal. Let\u2019s treat it like a thanksgiving dinner. You have the turkey, stuffing, cranberry sauce, and mashed potatoes in your plate. The plate you will serve yourself all the different items of food is the repository. You can choose to pick up four little plates (four repositories) and serve each item of food on a corresponding plate. Your other option maybe to serve yourself each of the four items (branches) on a bigger plate (repository). A branch is a snapshot of your main branch (the master branch resembling the closest vision of my project). You take this particular snapshot and add additional changes/ features without affecting the main (master) branch. No matter which method you prefer, there are choices for you to organize your projects using Git in a clean and concise manner. I personally prefer having a single repository representing a project and then inside the project\u2019s repository I will create branches that add features to my project.", "Git branches are better understood once you get the concept of Git data stores. When you make changes and commit them, Git stores the information as an object holding the snapshot of that change. This is a special attribute for Git as a version control system because other version control systems preserve changes as a list of file-based changes.", "This means that Git will be aware of any and all changes in your local repository once you initialize it (more about initialization below).", "Within a given branch you have files and at any given time your files can be in one of three states:", "Modified state is when changes have been made but none of the changes have been saved as their corresponding snapshots. Picking modified files and identifying them to be items you want in your next saved snapshot is called staging. Committed state is when the intended changes are safely stored in your local database. It is really important to understand the different states any given file is in your local repository in order to safely push changes to the remote repository.", "Now that we have a background on repositories and branches, let\u2019s create our first repository. Click on the top right corner to open the link \u201cnew repository\u201d.", "Give the repository a new name and choose the privacy setting. The third option on this set up page gives you the ability to initialize the repository with a README file. We can skip that for now but README.md files are quite important to use. This is a text file that gets used by users to provide project overview, features, installation instructions, license, and credits. Github will use this file, if available, to create a summary for your project on your main directory page for any given repository.", "Once you have created a repository, this is known as a remote repositories. Git usually provides you with the choices and the commands involved in creating a new repository on your local or use a local folder and initialize it as a repository. For this tutorial, let\u2019s say there is already a folder you already have containing code and documentation. You want to add the content to this newly created repository.", "The command above creates an empty repository in the local folder holding files you want to add to the remote repository. After initialization of the current local directory as a git repository, if you have files living in this local folders, they are in the modified state (see earlier discussion of States). To stage these modified files, we need to mark the intended files.", "Since we are adding to this remote repository for the first time, you need to add the following:", "For commits after this initial process, you can add files with either of the commands below:", "At this point the the files are sitting in the \u201cstaging area\u201d.", "Files should now be safely committed and recorded to the local database. The commits now finally can be pushed to the remote repository with:", "For your initial commit, git push should push your current changes without any problems. However, there maybe instances where you have multiple branches. You want to push all your local branches to a specific remote repository. In that case, use:", "As you gain experience with Git and work through your projects, you may need to use the \u2014 force flag on git push. It is highly recommended that the \u2014 force flag be used only when you are absolutely sure about your suggestions.", "When you push your changes, Git wants to verify the user pushing changes to a remote repository and will ask you for the username and password that you have created earlier during sign up. If you are the global user, configure the username and password in global git config settings as shown later.", "The example above focuses on the scenario that you have development work done on your local machine that you then push to the remote repository. The circumstance can be reversed where you need to use the content of a remote repository to get started on local development. In this case, you are required to clone the repository of interest and to do this, make sure you have the access. For example, you want to develop using bootstrap. You visit the bootstrap github repository: https://github.com/twbs/bootstrap. Click on the clone or download button on the repository to copy the remote repository link.", "Assume that you have submitted your changes but right after your co-worker submitted changes to the same branch. In order to make sure your local branch is up to date with these changes, you need to pull those changes down.", "Git pull brings you the information from the remote repository by using (1)git fetch and (2)git merge under the hood. The fetching happens from the node where the local repository has diverged from the master branch. You can use git fetch at any time if there is need for tracking. Git fetch downloads the information not available in your local repository and then git merge integrates the information into your local repository. Another command very similar to git merge is git rebase. The main advantage of using git rebase over git merge is that the integration of new information happens at the end of the last commit on a branch. This results in a more linear commit history which is not always the case when git merge is being used. In the case of git pull, the second step of merging the changes can also be swapped with a rebase using the following:", "A scenario where as you are making changes to your local repository and you need to git pull new changes from the remote repository, switch to a different branch, etc. You don\u2019t want your local changes to be directly impacted but you want a clean working tree. In that case,", "At this point, you may ask what is the difference between what we are trying to achieve in git clone vs. git pull? First, their purposes are different. Git clone takes information living in a remote repository and makes a local copy. This is a one time action. Git pull is the command used to update your local repository of small changes as the remote branch gets updated. This is used more than once and preferably any time a change has been committed where your local branch is behind.", "We mentioned that during a commit Git wants to verify the details of the user committing the changes to a repository. It can get repetitive always putting in the username and password for each commit. Using the Git global config file you can perform some modifications to mitigate the repetitiveness.", "Example, aliasing git status to just git s:", "It maybe needed to view and manually edit the configuration files that git uses to save the instructions above.", "One of the most useful features of Git is being able easily view your commit history and get constant recap on your work. Interruptions happen constantly during a work day. Being able to simply run a commit log command and see the entire commit history helps you get a summary of all the changes.", "If you just run the git log command, the result can be a bit difficult for the human eye to follow. However, we have options of decorating the logs, passing one-line commit messages, and adding a graph element.", "Searching the commit logs by patterns is another useful feature. If you want to go to a specific change submitted by yourself in a project where there are many collaborators, execute the following:", "If it is a commit message containing specific phrase or patterns, search using:", "Changes for specific files for each commits can be analyzed with stat:", "Using rebase, you can change the commit timelines as well. It is usually advised to not rebase commits that have already been pushed to a public repository. Passing just git rebase will take the commits from the current branch and automatically apply them to the passed branch. I personally appreciate the interactive rebasing feature where you can decide how the commits are to be transferred to a new base.", "The most frequent modifications of history are in relation to changing the last commits. In the staging environment, you can decide that you do not want to add a certain:", "According to the Git documentation it is advised that you use this command carefully and treat it like a small rebase. If you have already pushed your changes, do not amend.", "Say that you got into this habit of adding all changes with git add . and accidentally added a sensitive file that you want to remove from all your commit history. Using the branch filter process you can achieve this:", "The scenario described above should not have occurred if you had made a file called .gitignore and listed your \u201csensitive_file.txt\u201d as an item in that file. Creating this file in your local directory and then adding back up files, configurations, etc. will save you from pushing clutter to your remote repository. Along with specific file names, you can also specify patterns. For example, if you have *.txt in your .gitignore file, it would ignore all text files.", "Changes in current working directory can be directly compared to the last commit on the remote branch with:", "HEAD refers to the last commit in the branch that you are on.", "So far we have thoroughly discussed the three different states for git files. One of those states is staging. If you want to undo a staged file, use", "Once branch has been pushed, we can still undo by changing a specific commit with revert. The <commit> parameter shown below is a specific commit ref. Observe your commit logs with git log (mentioned above) and then use commit ref for command below.", "We have come a long way from learning to create Git repositories to understanding how to undo our \u2018mistakes\u2019. Understanding Git and getting used to the list of commands in this article may take a while but it is only a matter of time and practice. If there are specific commands that are impossible to remember, use the aliasing method we talked about (see section on Git Configurations). Even if you do not have a project to currently use Git for, create a mock repository and work with just text files for practice. Ensure that your projects are well documented with README.md (see section on Create your first repository) and commit often. With this tutorial, you have enough knowledge to now collaborate on projects, change your projects\u2019 histories, and keep a polished portfolio.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Science Professional working in the Canadian Payments Industry. Hobbies include travelling, trying out new food, and reading!"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff0f3018d10f9&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@mmonzoor?source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@mmonzoor?source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": "Mumtahin Monzoor"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc91b37f5823d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&user=Mumtahin+Monzoor&userId=c91b37f5823d&source=post_page-c91b37f5823d----f0f3018d10f9---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff0f3018d10f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff0f3018d10f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://education.github.com/pack", "anchor_text": "here."}, {"url": "https://docs.gitlab.com/ee/user/project/import/github.html", "anchor_text": "here"}, {"url": "https://git-scm.com/download/linux.", "anchor_text": "here"}, {"url": "https://git-scm.com/download/mac", "anchor_text": "here"}, {"url": "https://git-scm.com/download/win", "anchor_text": "here"}, {"url": "https://desktop.github.com/", "anchor_text": "installation"}, {"url": "https://github.com/join?source=header-home", "anchor_text": "https://github.com/join?source=header-home"}, {"url": "https://git-scm.com/book/en/v2/images/deltas.png", "anchor_text": "Image taken from git-scm"}, {"url": "https://git-scm.com/book/en/v2/images/snapshots.png", "anchor_text": "image taken from git-scm"}, {"url": "https://github.com/twbs/bootstrap", "anchor_text": "https://github.com/twbs/bootstrap"}, {"url": "https://github.com/twbs/bootstrap.git", "anchor_text": "https://github.com/twbs/bootstrap.git"}, {"url": "https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History", "anchor_text": "small rebase"}, {"url": "https://medium.com/tag/git?source=post_page-----f0f3018d10f9---------------git-----------------", "anchor_text": "Git"}, {"url": "https://medium.com/tag/version-control?source=post_page-----f0f3018d10f9---------------version_control-----------------", "anchor_text": "Version Control"}, {"url": "https://medium.com/tag/data?source=post_page-----f0f3018d10f9---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----f0f3018d10f9---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----f0f3018d10f9---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff0f3018d10f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&user=Mumtahin+Monzoor&userId=c91b37f5823d&source=-----f0f3018d10f9---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff0f3018d10f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&user=Mumtahin+Monzoor&userId=c91b37f5823d&source=-----f0f3018d10f9---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff0f3018d10f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff0f3018d10f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f0f3018d10f9---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f0f3018d10f9--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@mmonzoor?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@mmonzoor?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Mumtahin Monzoor"}, {"url": "https://medium.com/@mmonzoor/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "29 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc91b37f5823d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&user=Mumtahin+Monzoor&userId=c91b37f5823d&source=post_page-c91b37f5823d--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2Fc91b37f5823d%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeep-dive-into-version-control-using-git-f0f3018d10f9&user=Mumtahin+Monzoor&userId=c91b37f5823d&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}