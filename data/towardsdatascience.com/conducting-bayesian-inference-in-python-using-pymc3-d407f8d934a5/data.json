{"url": "https://towardsdatascience.com/conducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5", "time": 1683018148.9801972, "path": "towardsdatascience.com/conducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5/", "webpage": {"metadata": {"title": "Conducting Bayesian Inference in Python Using PyMC3 | by Dr. Robert K\u00fcbler | Towards Data Science", "h1": "Conducting Bayesian Inference in Python Using PyMC3", "description": "Computing Bayesian Inference by hand can be tricky. In this article, you will learn how to do it using Python and PyMC3 in a beginner-friendly way."}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/a-gentle-introduction-to-bayesian-inference-6a7552e313cb", "anchor_text": "A Gentle Introduction to Bayesian Inference", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/beginner-friendly-bayesian-inference-2e2839a9ae18", "anchor_text": "Beginner-Friendly Bayesian Inference", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo", "anchor_text": "MCMC algorithms", "paragraph_index": 18}, {"url": "https://en.wikipedia.org/wiki/Variational_Bayesian_methods", "anchor_text": "Variational Inference", "paragraph_index": 18}, {"url": "https://arviz-devs.github.io/arviz/", "anchor_text": "arviz", "paragraph_index": 36}, {"url": "https://towardsdatascience.com/beginner-friendly-bayesian-inference-2e2839a9ae18", "anchor_text": "old article", "paragraph_index": 37}, {"url": "https://en.wikipedia.org/wiki/Bayesian_linear_regression", "anchor_text": "Bayesian linear regression", "paragraph_index": 42}, {"url": "https://en.wikipedia.org/wiki/Latent_Dirichlet_allocation", "anchor_text": "Latent Dirichlet allocation", "paragraph_index": 42}, {"url": "https://facebook.github.io/prophet/", "anchor_text": "Facebook\u2019s Prophet", "paragraph_index": 42}, {"url": "https://en.wikipedia.org/wiki/Binomial_distribution", "anchor_text": "binomially distributed", "paragraph_index": 43}, {"url": "https://en.wikipedia.org/wiki/Poisson_distribution", "anchor_text": "Poisson distribution", "paragraph_index": 43}, {"url": "https://dr-robert-kuebler.medium.com/membership", "anchor_text": "via this link", "paragraph_index": 46}, {"url": "https://www.linkedin.com/in/dr-robert-k%C3%BCbler-983859150/", "anchor_text": "LinkedIn", "paragraph_index": 49}], "all_paragraphs": ["We have covered the intuition and basics of Bayesian inference in my article A Gentle Introduction to Bayesian Inference. We then moved on to actually conducting Bayesian inference by hand using a coin example in my article Beginner-Friendly Bayesian Inference.", "If you still feel unsure about this topic, take a look at them, and have fun! \ud83d\ude0a", "Let us recall the problem definition: Imagine that you flip a coin with 0 on one and 1 on the other side a hundred times and write down the results. You end up with", "These are 57 ones and 43 zeroes. We want to answer the following question:", "What is the probability \u03b8 of receiving 1?", "Again, a simple (and the maximum likelihood) answer is 57/100=57%. This approach yields a single number, but we also want to be able to describe the uncertainty of this result. Is this 57% quite safe, or if it is also likely that \u03b8 might be even 65% or 45%? That\u2019s what Bayesian inference is for: we get estimates, including free predictions about the uncertainty of the estimate.", "Let us reiterate a few mathematical details swiftly because it makes following the PyMC3 code much easier.", "In math, we want to find the posterior distribution of our parameter:", "To do Bayesian inference, we always need", "Without these two ingredients, we can\u2019t proceed. So, let us quickly revise what these quantities are.", "The likelihood for a single coin flip (i.e. data = one coin flip) is given by", "We say that the result of a coin flip such as above, which we call C now, is Bernoulli distributed, often denoted as C~Ber(\u03b8). This is all we need to compute the likelihood term in the Bayes formula.", "Regarding the prior, let us choose the one from the last article, i.e. a Beta(2, 2) prior. We have", "and denote this as \u03b8~Beta(2, 2). The 6 is only there to normalize this density, i.e. the integral of f between 0 and 1 is one.", "Alright, everybody, enough with the formulas! Let us finally work with PyMC3 to solve the initial problem without manual calculations, but with a little bit of programming.", "Let us first explain why we even need PyMC3, what the output is, and how it helps us solve our Bayesian inference problem. Then, we will dive right into the code!", "So far, we could easily calculate everything by hand, because the Bernoulli and Beta distributions work together nicely (they are conjugated), meaning that their product is a Beta distribution again. This makes manual computations easy, with no problems at all.", "We have implicitly omitted to deal with the little part in the denominator of the Bayes formula: p(data). However, this one is a serious source of trouble, in general. This term looks simple but it is extremely hard to calculate for", "Anyway, that\u2019s what PyMC3 is there for: Internally, it uses MCMC algorithms or Variational Inference to help us out. Please, don\u2019t be discouraged when you read the Wikipedia articles. It\u2019s difficult but I might write some articles about that in the future.", "In simple terms, PyMC3 can\u2019t give us a formula for the posterior distribution. However, it can give us as many samples as we like from the posterior distribution without explicitly calculating the denominator.", "If we can get samples from a distribution, it\u2019s nearly as good as having a formula for it. Why? Because we can estimate a lot of interesting statistics from these samples, such as the mean (take the average of all elements), median, standard deviation, quantiles, \u2026 and even visualize it by plotting a histogram or density plot.", "The moment you have waited for. First, install PyMC3 via a simple", "Inside the programming environment of your choice, prepare the imports and the coin toss data.", "So far, so good. The actual model is even shorter than this piece of code, so I will just present it to you and explain it afterward.", "Basically, that\u2019s it, the entire Bayesian inference. Probably you expected more, but this speaks even more for the awesomeness of PyMC3. Don\u2019t be fooled, however: Under the hood, a lot of processes are running, more than I can explain.", "Anyway, we end up with this variable trace which contains 500 * #cores_of_your_machine samples, 2000 for me. It involves the number of cores because PyMC3 generates samples in parallel, without us having to specify anything. Reasonable defaults, I love it!", "If you followed this and my older articles that I mentioned in the beginning closely, the code should make kind of sense to you.", "The only weird part should be the context manager in the first line, with pm.Model() as model: . It\u2019s just a programmatic design choice that the PyMC3 people have made. You open up a model (like you open a file in plain Python) and do things inside this context. In our case, we define distributions and sample.", "We then start defining our prior \u03b8 ~ Beta(2, 2), which in PyMC3 language is", "PyMC3 distributions always want a name, that\u2019s always the first parameter you have to specify. Usually, I just use the variable name again. Then the two parameters for the Beta distribution follow, in our case a = 2, b = 2. Done with the prior!", "Then we have to tell the model how the likelihood works. We already established that a coin flip just follows a Bernoulli distribution Ber(\u03b8). The code for this is", "This way, the model knows that each coin flip is a Bernoulli variable with the parameter \u03b8. In addition, we easily pass the observed data of 0/1 tosses as a list.", "What confused me when using PyMC3 for the first time: You don\u2019t have to specify the complete likelihood p(data | \u03b8) for all observed data. A single coin flip is enough, as PyMC3 multiplies these small single coin flip likelihoods together for you, i.e. you specify p(single toss| \u03b8) for each toss and PyMC3 computes", "This is done because we always expect the tosses to be stochastically independent of each other.", "At last, let the sampling begin!", "This step can take quite long in general, but for this example, even a weak computer should finish in a few seconds. We obtain some trace object, but just imagine that it contains a lot of numbers from the posterior distribution. Wanna peek inside? Use trace.get_values('theta') . You will receive a numpy array containing the samples you can then play around with.", "You can use the tool arviz to visualize the posterior distribution, without the need to import matplotlib, seaborn, or pandas. If you type", "You can see that the mean and also the mode of the posterior distribution is around 57%. The 99% HPD (highest posterior density) is a so-called credible interval containing \u03b8 with a probability of 99%. The HDP especially is the shortest interval with this property. Looking back to the old article, we can see that we got the same numbers when calculating everything by hand. Nice!", "So, we can answer the question again:", "If we are expected to give a single number, we would go for 57%. Otherwise, we are able to say that it\u2019s somewhere between 45% and 69% with a probability of 99%.", "IMPORTANT: This is a completely different statement than what you can obtain from confidence intervals when tackling this problem the frequentist way. Confidence intervals let you make statements like: \u201cIf you compute this interval a lot of times for different data samples from the same distribution, in 99% of the cases the true (fixed) parameter \u03b8 lies within the interval.\u201d. This statement is hard to wrap your head around, and actually not what we want to state. But this is a different story. Just remember that a credible interval has an easy inerpretation.", "In this article, we have yet again analyzed the coin problem which we have solved analytically already in the past. This time, however, we used PyMC3 to solve it for us. The code is extremely short and simple (so is the problem), but yields the same results we expected, which is a nice sanity check.", "But the real fun starts now: You can start building more complicated models, such as Bayesian linear regression, where each weight is a parameter, for example with a normally distributed prior for each parameter. By doing this, we have credible intervals around each parameter and even around predictions, which is a great thing to have. You could also implement Latent Dirichlet allocation for unsupervised topic modeling for NLP problems in PyMC3 or Facebook\u2019s Prophet for time series forecasting.", "But you can start smaller. How about you have data that is binomially distributed with parameters n and p, which you want to estimate. You can simulate it via np.random.binomial(n=23, p=0.1, size=100) using numpy, for example. p is a probability again, you know which prior works well for that. n is an integer. Distributions over integers are another binomial distribution, or the Poisson distribution, among others. Just play around a bit!", "I hope that you learned something new, interesting, and useful today. Thanks for reading!", "As the last point, if you", "why not do it via this link? This would help me a lot! \ud83d\ude0a", "To be transparent, the price for you does not change, but about half of the subscription fees go directly to me.", "Thanks a lot, if you consider supporting me!", "If you have any questions, write me on LinkedIn!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Studied Mathematics, graduated in Cryptanalysis, working as a Senior Data Scientist. Interested in algorithms, probability theory, and machine learning."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd407f8d934a5&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://me.dm/@robertkuebler", "anchor_text": "Mastodon"}, {"url": "https://towardsdatascience.com/?source=post_page-----d407f8d934a5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d407f8d934a5--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://kuebler.ai/?source=post_page-----d407f8d934a5--------------------------------", "anchor_text": ""}, {"url": "https://kuebler.ai/?source=post_page-----d407f8d934a5--------------------------------", "anchor_text": "Dr. Robert K\u00fcbler"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6d6b5fb431bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&user=Dr.+Robert+K%C3%BCbler&userId=6d6b5fb431bf&source=post_page-6d6b5fb431bf----d407f8d934a5---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd407f8d934a5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd407f8d934a5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://medium.com/tag/bayesian-statistics", "anchor_text": "Bayesian Statistics"}, {"url": "https://towardsdatascience.com/a-gentle-introduction-to-bayesian-inference-6a7552e313cb", "anchor_text": "A Gentle Introduction to Bayesian Inference"}, {"url": "https://towardsdatascience.com/beginner-friendly-bayesian-inference-2e2839a9ae18", "anchor_text": "Beginner-Friendly Bayesian Inference"}, {"url": "https://towardsdatascience.com/a-gentle-introduction-to-bayesian-inference-6a7552e313cb", "anchor_text": "A gentle Introduction to Bayesian InferenceLearn about the difference between the frequentist and the Bayesian approach of reasoningtowardsdatascience.com"}, {"url": "https://towardsdatascience.com/beginner-friendly-bayesian-inference-2e2839a9ae18", "anchor_text": "Beginner-friendly Bayesian InferenceLet\u2019s do Bayesian inference hands-on with a classical coin example!towardsdatascience.com"}, {"url": "https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo", "anchor_text": "MCMC algorithms"}, {"url": "https://en.wikipedia.org/wiki/Variational_Bayesian_methods", "anchor_text": "Variational Inference"}, {"url": "https://en.wikipedia.org/wiki/Kernel_density_estimation", "anchor_text": "kernel density estimator"}, {"url": "https://arviz-devs.github.io/arviz/", "anchor_text": "arviz"}, {"url": "https://towardsdatascience.com/beginner-friendly-bayesian-inference-2e2839a9ae18", "anchor_text": "old article"}, {"url": "https://en.wikipedia.org/wiki/Bayesian_linear_regression", "anchor_text": "Bayesian linear regression"}, {"url": "https://en.wikipedia.org/wiki/Latent_Dirichlet_allocation", "anchor_text": "Latent Dirichlet allocation"}, {"url": "https://facebook.github.io/prophet/", "anchor_text": "Facebook\u2019s Prophet"}, {"url": "https://en.wikipedia.org/wiki/Binomial_distribution", "anchor_text": "binomially distributed"}, {"url": "https://en.wikipedia.org/wiki/Poisson_distribution", "anchor_text": "Poisson distribution"}, {"url": "https://dr-robert-kuebler.medium.com/membership", "anchor_text": "via this link"}, {"url": "https://www.linkedin.com/in/dr-robert-k%C3%BCbler-983859150/", "anchor_text": "LinkedIn"}, {"url": "https://medium.com/tag/python?source=post_page-----d407f8d934a5---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/editors-pick?source=post_page-----d407f8d934a5---------------editors_pick-----------------", "anchor_text": "Editors Pick"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----d407f8d934a5---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/pymc?source=post_page-----d407f8d934a5---------------pymc-----------------", "anchor_text": "Pymc"}, {"url": "https://medium.com/tag/bayesian-statistics?source=post_page-----d407f8d934a5---------------bayesian_statistics-----------------", "anchor_text": "Bayesian Statistics"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd407f8d934a5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&user=Dr.+Robert+K%C3%BCbler&userId=6d6b5fb431bf&source=-----d407f8d934a5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd407f8d934a5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&user=Dr.+Robert+K%C3%BCbler&userId=6d6b5fb431bf&source=-----d407f8d934a5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd407f8d934a5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d407f8d934a5--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd407f8d934a5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d407f8d934a5---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d407f8d934a5--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d407f8d934a5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d407f8d934a5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d407f8d934a5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d407f8d934a5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d407f8d934a5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d407f8d934a5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d407f8d934a5--------------------------------", "anchor_text": ""}, {"url": "https://kuebler.ai/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://kuebler.ai/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Dr. Robert K\u00fcbler"}, {"url": "https://kuebler.ai/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6d6b5fb431bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&user=Dr.+Robert+K%C3%BCbler&userId=6d6b5fb431bf&source=post_page-6d6b5fb431bf--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F11fae4bef4b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconducting-bayesian-inference-in-python-using-pymc3-d407f8d934a5&newsletterV3=6d6b5fb431bf&newsletterV3Id=11fae4bef4b2&user=Dr.+Robert+K%C3%BCbler&userId=6d6b5fb431bf&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}