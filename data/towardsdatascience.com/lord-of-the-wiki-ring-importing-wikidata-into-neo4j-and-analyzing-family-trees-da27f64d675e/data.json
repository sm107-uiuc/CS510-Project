{"url": "https://towardsdatascience.com/lord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e", "time": 1683008834.17246, "path": "towardsdatascience.com/lord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e/", "webpage": {"metadata": {"title": "Lord of the Wiki Ring: Importing Wikidata into Neo4j and analyzing family trees | by Tomaz Bratanic | Towards Data Science", "h1": "Lord of the Wiki Ring: Importing Wikidata into Neo4j and analyzing family trees", "description": "After so much success with my previous lengthy post about combining NLP techniques and graphs, I have prepared another exhaustive tutorial. We will go over a couple of topics. We will begin by\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/nlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845", "anchor_text": "combining NLP techniques and graphs", "paragraph_index": 0}, {"url": "https://neo4j.com/", "anchor_text": "Neo4j", "paragraph_index": 0}, {"url": "https://www.wikidata.org/wiki/Wikidata:Main_Page", "anchor_text": "WikiData API", "paragraph_index": 0}, {"url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures", "anchor_text": "APOC", "paragraph_index": 5}, {"url": "https://neo4j.com/docs/labs/apoc/current/database-integration/", "anchor_text": "integrations with other databases", "paragraph_index": 5}, {"url": "https://neo4j.com/docs/labs/nsmntx/current/", "anchor_text": "Neosematics", "paragraph_index": 6}, {"url": "https://www.youtube.com/watch?v=kJph4q0Im98", "anchor_text": "tutorial on Youtube", "paragraph_index": 7}, {"url": "https://www.wikidata.org/wiki/Q989255", "anchor_text": "Middle-earth races entity", "paragraph_index": 7}, {"url": "https://www.wikidata.org/wiki/Property:P31", "anchor_text": "P31", "paragraph_index": 8}, {"url": "https://www.wikidata.org/wiki/Q989255", "anchor_text": "Q989255", "paragraph_index": 8}, {"url": "https://lotr.fandom.com/wiki/Fellowship_of_the_Ring_(group)", "anchor_text": "Fellowship of the Ring group", "paragraph_index": 11}, {"url": "https://query.wikidata.org/", "anchor_text": "WikiData query editor", "paragraph_index": 15}, {"url": "https://medium.com/neo4j/5-tips-tricks-for-fast-batched-updates-of-graph-structures-with-neo4j-and-cypher-73c7f693c8cc", "anchor_text": "Tips and tricks blog post", "paragraph_index": 16}, {"url": "https://twitter.com/mesirii", "anchor_text": "Michael Hunger", "paragraph_index": 16}, {"url": "https://lotr.fandom.com/wiki/Melkor", "anchor_text": "LOTR fandom site", "paragraph_index": 34}, {"url": "https://github.com/neo4j/graph-data-science", "anchor_text": "Graph Data Science", "paragraph_index": 36}, {"url": "https://tbgraph.wordpress.com/2020/05/12/nlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc/", "anchor_text": "previous blog post", "paragraph_index": 36}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/wcc/", "anchor_text": "weakly connected component algorithm", "paragraph_index": 38}, {"url": "https://lotr.fandom.com/wiki/Dior", "anchor_text": "LOTR fandom site", "paragraph_index": 45}, {"url": "https://neo4j.com/bloom/", "anchor_text": "Neo4j Bloom", "paragraph_index": 49}, {"url": "https://neo4j.com/blog/announcing-neo4j-for-graph-data-science/", "anchor_text": "Neo4j for Graph Data Science", "paragraph_index": 49}, {"url": "https://medium.com/neo4j/bloom-ing-marvellous-a2be0c3702bb", "anchor_text": "Bloom-ing marvellous", "paragraph_index": 49}, {"url": "https://twitter.com/ellazal", "anchor_text": "Lju Lazarevic", "paragraph_index": 49}, {"url": "https://neo4j.com/download/", "anchor_text": "Neo4j Desktop", "paragraph_index": 50}, {"url": "https://towardsdatascience.com/nlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845", "anchor_text": "a blog post", "paragraph_index": 50}, {"url": "https://www.youtube.com/watch?v=9rL8O0lsuDc", "anchor_text": "Near-natural language search", "paragraph_index": 52}, {"url": "https://neo4j.com/download-center/", "anchor_text": "Neo4j Desktop", "paragraph_index": 66}, {"url": "http://community.neo4j.com", "anchor_text": "Neo4j Community Site", "paragraph_index": 66}, {"url": "https://github.com/tomasonjo/blogs/blob/master/Lord_of_the_wikidata/Part1%20Importing%20Wikidata%20into%20Neo4j%20and%20analyzing%20family%20trees.ipynb", "anchor_text": "GitHub", "paragraph_index": 67}, {"url": "http://mng.bz/GGVN", "anchor_text": "http://mng.bz/GGVN", "paragraph_index": 69}], "all_paragraphs": ["After so much success with my previous lengthy post about combining NLP techniques and graphs, I have prepared another exhaustive tutorial. We will go over a couple of topics. We will begin by importing the data into Neo4j via the WikiData API. By the time we are done, we will scrape most of the LOTR information available on WikiData. In the next step, we will prepare an exploratory data analysis and show how to populate missing values based on some hypothesis. To top it off, we will run a couple of graph algorithms and prepare some beautiful visualizations.", "Make sure you have some popcorn nearby and get ready for some in-depth graph analysis.", "You can always visualize the graph schema in Neo4j Browser with the db.schema.visualization() procedure. It is a convenient procedure that automatically captures the schema of the stored graph.", "p.s. Run it only after we have imported the graph", "We have been using simple graph schemas for quite some time now. I am delighted to say that this time it is a bit more complicated. We have a social network of characters with familial ties like SPOUSE, SIBLING, HAS_FATHER, and even not so familial relationships like ENEMY. We know some additional information about the characters such as their country, race, and any group they are members of.", "As mentioned, we will fetch the data from the WikiData API with the help of the apoc.load.json procedure. If you don't know yet, APOC provides excellent support for importing data into Neo4j. Besides the ability to fetch data from any REST API, it also features integrations with other databases such as MongoDB or relational databases via the JDBC driver.", "P.s. You should check out the Neosematics library if you work a lot with RDF data.", "We will start by importing all the races in the LOTR world. I have to admit I am a total noob when it comes to SPARQL, so I won\u2019t be explaining the syntax in depth. If you need a basic introduction on how to query WikiData, I suggest this tutorial on Youtube. Basically, all the races in the LOTR world are an instance of the Middle-earth races entity with id Q989255. To get the occurrences of a specific item, we use the following SPARQL clause:", "This can be translated as \u201cWe would like to fetch an item, which is an instance of (wdt:P31) an entity with an id Q989255\u201d. After we have downloaded the data with APOC, we store the results to Neo4j.", "That was easy. The next step is to fetch the characters that are an instance of a given Middle-earth race. The SPARQL syntax is almost identical to the previous query, except this time, we iterate over each race and find the characters that are a part of it.", "Did you know that there are at least 700 characters in the Middle-earth world? I would have never guessed there would be so many of them documented on WikiData. Our first exploratory cypher query will be to count them by race.", "The Fellowship of the Ring group is a somewhat representative sample of races in the Middle-earth. Most of the characters are either human or hobbits, with a couple of elves and dwarves strolling by. This is the first time I have heard of Valar and Maiar races, though.", "Now it is time to enrich the graph with information about characters\u2019 gender, country, and manner of death. The SPARQL query will be a bit different than before. This time we will select a WikiData entity directly by its unique id and optionally fetch some of its properties. We can filter a specific item by its id using the following SPARQL clause:", "Similar to the cypher query language, SPARQL also differentiates between a MATCH and an OPTIONAL MATCH. When we want to return multiple properties of an entity, it is best to wrap each property into an OPTIONAL MATCH. This way, we will get results if any of the properties exist. Without the OPTIONAL MATCH, we would only get results for entities where all three properties exist. This is an identical behavior to cypher.", "The wdt:P21 indicates we are interested in the gender property. We also specify that we want to get the English label of an entity instead of its WikiData id. The easiest way to search for the desired property id is to inspect the item on the WikiData web page and hover over a property name.", "Another way is to use the WikiData query editor, which has a great autocomplete function by using the CTRL+T command.", "To store the graph back to Neo4j, we will use the FOREACH trick. Because some of our results will contain null values, we have to wrap the MERGE statement into the FOREACH statement which supports conditional execution. Check the Tips and tricks blog post by Michael Hunger for more information.", "We are connecting additional information to our graph bit by bit and slowly transforming it into a knowledge graph. Let\u2019s first look at the manner of death property.", "Nothing of interest. This is obviously not the Game of Thrones series. Let\u2019s also inspect the results of the country property.", "We have the country information for 236 characters. We could make some hypotheses and try to populate missing country values. Let\u2019s assume that if two persons are siblings, they belong to the same country. This makes a lot of sense. To be able to achieve this, we have to import the familial ties from WikiData. Specifically, we will fetch the father, mother, relative, sibling, and spouse connections.", "Before we begin filling-in missing values, let\u2019s check for promiscuity in the Middle-earth. The first query will search for characters with multiple spouses.", "We actually found a single character with two spouses. It is Finw\u00eb, the first King of the Noldor. We can also take a look if someone has kids with multiple partners", "So it seems that Finw\u00eb has four children with Indis and a single child with M\u00edriel. On the other hand, it is quite weird that Beren has two fathers. I guess Adanel has some explaining to do. We would probably find more death and promiscuity in the GoT world.", "Now that we know that the Middle-earth characters abstain from promiscuity let\u2019s populate the missing country values. Remember, our hypothesis was:", "If two characters are siblings, they belong to the same country.", "Before we fill the missing values for countries, let\u2019s populate the missing values for siblings. We will assume that if two characters have the same mother or father, they are siblings. Let\u2019s look at some sibling candidates.", "Adamanta Chubb has at least six children. Only two of them are marked as siblings. Because all of them are siblings by definition, we will fill in the missing connections.", "The query added 118 missing relationships. I need to learn how to update the WikiData knowledge graph and add the absent connections in bulk. Now we can fill in the missing country values for siblings. We will match all characters with the filled country information and search for their siblings that don\u2019t have the country information. I love how easy it is to express this pattern with the cypher query language.", "There were 49 missing countries added. We could quickly come up with more hypotheses to fill in the missing values. You can try and maybe add some other missing properties yourself.", "We still have to add some information to our graph. In this query, we will add the information about the occupation, language, groups, and events of characters. The SPARQL query is identical to before, where we iterate over each character and fetch additional properties.", "Let\u2019s investigate the results of the groups and the occupation of the characters.", "It was at this moment that I realized the whole Hobbit series are included. Balin was the diarist for the Thorin and Company group. For some reason, I was expecting Bilbo Baggins to be the diarist. Obviously, there can be only one archer in the Fellowship of the Ring group, and that is Legolas. Gandalf seems to be involved in a couple of groups.", "We will execute one more WikiData API call. This time we will fetch the enemies and the items the characters own.", "Finally, we have finished importing our graph. Let\u2019s look at how many enemies are there between direct family members.", "It looks like Morgoth and Manw\u00eb are brothers and enemies. This is the first time I have heard of the two, but LOTR fandom site claims Morgoth was the first Dark Lord. Let\u2019s look at how many enemies are within the second-degree relatives.", "There are not a lot of enemies within the second-degree family. We can observe that Varda has taken her husband\u2019s stance and is also an enemy with Morgoth. This is an example of a stable triangle or triad. The triangle consists of one positive relationship (SPOUSE) and two negatives (ENEMY). In social network analysis, triangles are used to measure the cohesiveness and structural stability of a network.", "If you have read any of my previous blog posts, you know that I just have to include some example use cases of graph algorithms from the Graph Data Science library. If you need a quick refresher on how the GDS library works and what is happening behind the scenes, I suggest you read my previous blog post.", "We will start by projecting the family network. We load all the characters and the familial relationships like SPOUSE, SIBLING, HAS_FATHER, and HAS_MOTHER between them.", "The weakly connected component algorithm is used to find islands or disconnected components within our network. The following visualizations contain two connected components. The first component is composed of Michael, Mark, and Doug, while the second one consists of Alice, Charles, and Bridget.", "In our case, we will use the weakly connected component algorithm to find islands within the family network. All members within the same family component are related to each other somehow. Could be a cousin of the sister-in-law\u2019s grandmother or something more direct like a sibling. To get a rough feeling of the results, we will run the stats mode of the algorithm.", "There are 145 islands in our graph. More than 75% of the components contain only a single character. This means that around 110 (75% * 145) characters don\u2019t have any familial link described in the graph. If they had a single connection, the size of the component would be at least two. The largest component has 328 members. That must be one happy family. Let\u2019s write back the results and further analyze the family components.", "We will start by looking at the top five biggest family components. The first thing we are interested in is which races are present in the family trees. We\u2019ll also add some random members in the results to get a better feeling of the data.", "As mentioned, the largest family has 328 members of various races ranging from elves to humans and even Maiar. It appears that elven and human lives are quite intertwined in the Middle-earth. Also their legs. There is a reason why the half-elven race even exists. Other races, like hobbits and dwarves, stick more to their own kind.", "Let\u2019s examine the interracial marriages in the largest community.", "First of all, I didn\u2019t know that Elrond was a half-elf. It seems like the human and elven \u201calliance\u201d is as old as time itself. I was mainly expecting to see Arwen and Aragorn as I remember that from the movies. It would be interesting to learn how far back do half-elves go. Let\u2019s look who are the half-elves with the most descendants.", "It seems like Dior Eluch\u00edl is the oldest recorded half-elf. I inspected results on the LOTR fandom site, and it seems we are correct. Dior Eluchil was born in the First Age in the year 470. There are a couple of other half-elves who were born within 50 years of Dior.", "We will also take a look at the betweenness centrality algorithm. It is used to find bridge nodes between different communities. If we take a look at the following visualization, we can observe that Captain America has the highest betweenness centrality score. That is because he is the main bridge in the network and connects the left-hand side of the graph to the right-hand side. The second bridge in the network is the Beast. We can easily see that all the information exchanged between the central and right-hand side of the graph has to go through him to reach the right-hand side.", "We will look for the bridge characters in the largest family network. My guess would be that spouses in an interracial marriage will come out on top. This is because all the communication between the races flows through them. We\u2019ve seen that there are only six interracial marriages, so probably some of them will come out on top.", "Interesting to see that Arwen and Aragorn come out on top. Not exactly sure why, but I keep on thinking of them as the modern Romeo and Juliet that have formed an alliance between men and half-elves with their marriage. I have no idea how the JRR Tolkien system for generating names worked, but it seems a bit biased towards names starting with an A.", "So far, we have done the data analysis and gained a few insights. Now it is time to impress our coworkers with a practical application of the graph. Neo4j Bloom is part of the Neo4j for Graph Data Science ecosystem. It is a tool primarily designed to explore the graph and allow the users to do it with little to no cypher knowledge. Check out the Bloom-ing marvellous post by Lju Lazarevic to learn of the latest features.", "Neo4j Bloom comes pre-installed with the Neo4j Desktop package. I have written a blog post on how to get started with it. Once you have opened the Neo4j Bloom, create your first perspective.", "Click on the Generate button to automatically generate the graph perspective. Once you have created the view, hover over it and click the Use Perspective.", "Welcome to Neo4j Bloom. Users with no cypher query knowledge can use the Near-natural language search to explore the graph. Let\u2019s start by typing in the ENEMY in the search bar.", "Bloom automatically provides us with a pattern that might be related to our search query. If we click on it, we will get the following visualization.", "Yes, I know. All the nodes in your network are colored blue. We\u2019ll get to that in a second. The visualization clearly shows two clusters or communities. On the left side of the graph, we have the good guys fighting versus Sauron. This is from the LOTR series. On the right side, we have the good guys fighting versus Morgoth. I guess this must be the Hobbit series then.", "If you want to change the color of the nodes, follow this image. First, you click on the Character label, then select the Rule-based tab and input your rule for colors. In our case, we colored all the female characters red.", "With the near-natural language search, we can also define more precise graph patterns. For example, let\u2019s say we would like to inspect the enemies of mister Frodo Baggins.", "It automatically completes the pattern we are looking for. If we click on it, we get.", "The search phrase mechanism allows us to add custom search functionalities to Neo4j Bloom. We begin by defining how the search phrase should look like. We can add parameters to the search query with the $ sign. The auto-complete support for the search phrase parameters comes out of the box, which is really lovely. We then input the desired cypher query, and we are good to go. We will use the following cypher query to find the shortest path of familial ties between any two characters.", "The filled-out search phrase will look like this:", "Now we can execute our new search phrase in the search box. As mentioned, the application helps us with auto-complete.", "We get the following result for the shortest path of familial ties between Frodo Baggins and Samwise Gamgee. They are related, but like 9 hops away. Frodo\u2019s cousin has a son, that is grandfather to the husband of Sam\u2019s daughter. I hope I didn\u2019t mess it up.", "Last but not least, we will create a search phrase for analyzing the family ancestor tree of a given character. I have prepared two variations for the cypher query. The first variation only traverses HAS_FATHER and HAS_MOTHER relationships.", "The second variation visualizes the whole family component as computed before with the weakly connected component algorithm.", "We will use the first variation as it produces prettier visualizations for a blog post, but I encourage you to try out the second variation yourself.", "We have added yet another search phrase. We can now use it in the search bar.", "I really enjoyed writing this blog post and scraping the WikiData knowledge graph. It contains a wealth of information that we can analyze in Neo4j. I could have broken this blog post in two or even three parts. Still, I like to keep in all in one place to show you how easy it is to complete the whole circle of graph analysis from importing and enriching the graph to basic data exploration and analysis that we top of with some beautiful graph visualizations. Try it out today and download the Neo4j Desktop. If you have any feedback or questions, you can share them on the Neo4j Community Site.", "As always, the code is available on GitHub.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data explorer. Turn everything into a graph. Author of Graph algorithms for Data Science at Manning publication. http://mng.bz/GGVN"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fda27f64d675e&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----da27f64d675e--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----da27f64d675e--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://bratanic-tomaz.medium.com/?source=post_page-----da27f64d675e--------------------------------", "anchor_text": ""}, {"url": "https://bratanic-tomaz.medium.com/?source=post_page-----da27f64d675e--------------------------------", "anchor_text": "Tomaz Bratanic"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F57f13c0ea39a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=post_page-57f13c0ea39a----da27f64d675e---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fda27f64d675e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fda27f64d675e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/nlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845", "anchor_text": "combining NLP techniques and graphs"}, {"url": "https://neo4j.com/", "anchor_text": "Neo4j"}, {"url": "https://www.wikidata.org/wiki/Wikidata:Main_Page", "anchor_text": "WikiData API"}, {"url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures", "anchor_text": "APOC"}, {"url": "https://neo4j.com/docs/labs/apoc/current/database-integration/", "anchor_text": "integrations with other databases"}, {"url": "https://neo4j.com/docs/labs/nsmntx/current/", "anchor_text": "Neosematics"}, {"url": "https://www.youtube.com/watch?v=kJph4q0Im98", "anchor_text": "tutorial on Youtube"}, {"url": "https://www.wikidata.org/wiki/Q989255", "anchor_text": "Middle-earth races entity"}, {"url": "https://www.wikidata.org/wiki/Property:P31", "anchor_text": "P31"}, {"url": "https://www.wikidata.org/wiki/Q989255", "anchor_text": "Q989255"}, {"url": "https://lotr.fandom.com/wiki/Fellowship_of_the_Ring_(group)", "anchor_text": "Fellowship of the Ring group"}, {"url": "https://query.wikidata.org/", "anchor_text": "WikiData query editor"}, {"url": "https://medium.com/neo4j/5-tips-tricks-for-fast-batched-updates-of-graph-structures-with-neo4j-and-cypher-73c7f693c8cc", "anchor_text": "Tips and tricks blog post"}, {"url": "https://twitter.com/mesirii", "anchor_text": "Michael Hunger"}, {"url": "https://lotr.fandom.com/wiki/Melkor", "anchor_text": "LOTR fandom site"}, {"url": "https://github.com/neo4j/graph-data-science", "anchor_text": "Graph Data Science"}, {"url": "https://tbgraph.wordpress.com/2020/05/12/nlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc/", "anchor_text": "previous blog post"}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/wcc/", "anchor_text": "weakly connected component algorithm"}, {"url": "https://lotr.fandom.com/wiki/Dior", "anchor_text": "LOTR fandom site"}, {"url": "https://neo4j.com/bloom/", "anchor_text": "Neo4j Bloom"}, {"url": "https://neo4j.com/blog/announcing-neo4j-for-graph-data-science/", "anchor_text": "Neo4j for Graph Data Science"}, {"url": "https://medium.com/neo4j/bloom-ing-marvellous-a2be0c3702bb", "anchor_text": "Bloom-ing marvellous"}, {"url": "https://twitter.com/ellazal", "anchor_text": "Lju Lazarevic"}, {"url": "https://neo4j.com/download/", "anchor_text": "Neo4j Desktop"}, {"url": "https://towardsdatascience.com/nlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845", "anchor_text": "a blog post"}, {"url": "https://www.youtube.com/watch?v=9rL8O0lsuDc", "anchor_text": "Near-natural language search"}, {"url": "https://neo4j.com/download-center/", "anchor_text": "Neo4j Desktop"}, {"url": "http://community.neo4j.com", "anchor_text": "Neo4j Community Site"}, {"url": "https://github.com/tomasonjo/blogs/blob/master/Lord_of_the_wikidata/Part1%20Importing%20Wikidata%20into%20Neo4j%20and%20analyzing%20family%20trees.ipynb", "anchor_text": "GitHub"}, {"url": "https://medium.com/tag/neo4j?source=post_page-----da27f64d675e---------------neo4j-----------------", "anchor_text": "Neo4j"}, {"url": "https://medium.com/tag/data-science?source=post_page-----da27f64d675e---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/graph?source=post_page-----da27f64d675e---------------graph-----------------", "anchor_text": "Graph"}, {"url": "https://medium.com/tag/social-network?source=post_page-----da27f64d675e---------------social_network-----------------", "anchor_text": "Social Network"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----da27f64d675e---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fda27f64d675e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=-----da27f64d675e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fda27f64d675e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=-----da27f64d675e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fda27f64d675e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----da27f64d675e--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fda27f64d675e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----da27f64d675e---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----da27f64d675e--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----da27f64d675e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----da27f64d675e--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----da27f64d675e--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----da27f64d675e--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----da27f64d675e--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----da27f64d675e--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----da27f64d675e--------------------------------", "anchor_text": ""}, {"url": "https://bratanic-tomaz.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://bratanic-tomaz.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Tomaz Bratanic"}, {"url": "https://bratanic-tomaz.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3.1K Followers"}, {"url": "http://mng.bz/GGVN", "anchor_text": "http://mng.bz/GGVN"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F57f13c0ea39a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=post_page-57f13c0ea39a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Feab586d298c8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flord-of-the-wiki-ring-importing-wikidata-into-neo4j-and-analyzing-family-trees-da27f64d675e&newsletterV3=57f13c0ea39a&newsletterV3Id=eab586d298c8&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}