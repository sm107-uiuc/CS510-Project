{"url": "https://towardsdatascience.com/understand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691", "time": 1683007786.424275, "path": "towardsdatascience.com/understand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691/", "webpage": {"metadata": {"title": "Understand how to use NamedTuple and Dataclass in Python | by Xiaoxu Gao | Towards Data Science", "h1": "Understand how to use NamedTuple and Dataclass in Python", "description": "If I ask you to create a Python class for the transaction record within 10 seconds, how would you do that? Probably creating a class with __init__ is what most people would do. In this article, I\u2026"}, "outgoing_paragraph_urls": [{"url": "https://docs.python.org/3.8/library/collections.html", "anchor_text": "collections", "paragraph_index": 11}, {"url": "https://docs.python.org/3.8/library/collections.html", "anchor_text": "package", "paragraph_index": 11}, {"url": "https://docs.python.org/3/reference/datamodel.html#slots", "anchor_text": "Slots", "paragraph_index": 43}, {"url": "https://docs.python.org/3.8/library/timeit.html", "anchor_text": "timeit", "paragraph_index": 47}, {"url": "http://linkedin.com/in/xiaoxugao/", "anchor_text": "linkedin.com/in/xiaoxugao/", "paragraph_index": 56}], "all_paragraphs": ["If I ask you to create a Python class for the transaction record within 10 seconds, how would you do that? Probably creating a class with __init__ is what most people would do. In this article, I want to share two alternatives in Python to construct a class: Named Tuple and Dataclass. In the end, I will compare the performance of these 3 options and give some suggestions on when to use which.", "I will call the class with __init__ as \u201cregular\u201d Python class in this article. Please let me know if there is an official name to it. If you want to deep dive into Named Tuple and Dataclass, check out the reference links.", "Each payment transaction has a sender, a receiver, a date and the amount. If I use the regular Python class, it might look something like this:", "It\u2019s very straightforward. But to be honest, it\u2019s a lot of code, at least a lot of lines. In a use case which I\u2019m consuming real-time transaction records from a source (e.g. Kafka), I don\u2019t want the flexibility to modify the record. How would I achieve that in a cleaner way?", "Named Tuple can be a great alternative here to construct a class. Named Tuple is basically an extension of the Python built-in tuple data type. Python\u2019s tuple is a simple data structure for grouping objects with different types. Its defining feature is being immutable.", "An immutable object is an object whose state cannot be modified after it is created.", "In Python, immutable types are int, float, bool, str, tuple and unicode.", "However, a downside of the built-in tuple type is that it puts a lot of responsibilities on a programmer. When you access an attribute of the built-in tuple, you need to know its index. It will cause some confusion if you are developing a library which will be used by thousands of users.", "Another possible way is to use built-in dictionary, like {\"sender\":\"\",\"receiver\":\"\",\"date\":\"\",\"amount\":\"\"} . But the problem here is that you need to spell the key names correctly. And it\u2019s not a class at all.", "We can avoid these problems using Named Tuple. Named Tuple allows us to give names to the elements, so we can access the attributes by both attribute name and its index.", "There are actually two types of Named Tuple in Python3.8. One is from collections package which has existed for a long time, the other one is from typing package which has been introduced since Python3.6.", "I will start with collections package. This package provides alternatives to Python\u2019s general built-in types like dict, list, set and tuple.", "This is how to create a namedtuple class. WOW, just one line of code!", "The Transaction we just created is essentially a class. It has attributes sender, receiver, date, amount and _fields, which allow us to access the attribute by both name and index.", "Creating a namedtuple object is as straightforward as creating the class. What I also like is the representation of the namedtuple object. You can also customize it in your regular Python class by overwriting __repr__ method.", "Assigning attributes with a default value is also possible.", "In this example, I assign None to only one attribute as the default value. Which attribute is assigned? Think about it.", "None is assigned to attribute amount, which is the last attribute of the tuple.", "What is happening here? I encourage you to think for a minute before reading further.", "Alright. Essentially, the creation of Named Tuple follows the same syntax as the regular Python class.", "The magic is that when we create a class, non-default argument cannot follow default argument. In the regular Python class, we will immediately notice this error. This syntax rule applies in Named Tuple as well, so the default value will be assigned starting from the last element.", "Back to the sub-topic: creating an object. It\u2019s also possible to create an namedtuple object using _make() method. But you need to remember the order of the attributes.", "Accessing the attribute in namedtuple is also very straightforward. In fact, it\u2019s a tuple, we can access the attribute like how we do it to the basic tuple. A namedtuple can be converted to a dictionary with _asdict().", "Wait? You just said tuple is an immutable data type, how could you assign the attribute in an immutable object?", "But if the attribute itself is mutable like list, you are allowed to change the elements inside the list without letting the tuple be aware of the change.", "In this example, the sender is a list which is a mutable object. Before modifying the attribute, I use Python built-in function id to check the memory address of the list.", "Then I change the second element of the list to \u201cgaga\u201d and print out the id of the same list. It turns out that the id is the same! So, to namedtuple, the state hasn\u2019t been changed.", "But if we create a new list with the same elements: \u201cjojo\u201d and \u201cgaga\u201d and try to assign it to the namedtuple, it won\u2019t work, because they have different ids.", "Sometimes we want to inherit a class and extend the attributes. In namedtuple, you can add a new attribute using @property. It\u2019s just as easy as what you see.", "Assign field names to result in tuples returned by csv or db query", "Another cool feature I like about namedtuple is that it can map the csv record or db query result to a namedtuple object. It can reduce the amount of boilerplate code.", "The second option to create a namedtuple is using typing.NamedTuple. It\u2019s coming from typing package, so every attribute is bound to a type. In my opinion, that\u2019s the only difference between collections.namedtuple and typing.NamedTuple.", "The format looks a bit like the regular Python class but with typing. Make sure that you inherit typing.NamedTuple.", "The class created from typing.NamedTuple has an extra field _field_types which shows the defined type of each attribute.", "Sometimes, if you don\u2019t really want to define a type to certain attributes, you can use type Any. A static type checker will treat every type as being compatiable with Any.", "Create an object, Access the attribute & Assign the attribute", "In terms of creating an object, accessing the attribute and assigning the attribute, typing.NamedTuple is the same as collections.tuple.", "Dataclass is a new feature introduced since Python 3.7. It is used as a decorator. What it does under the hood is implementing __init__, __repr__ , etc for us.", "Named Tuple behaves like a tuple, while dataclass behaves more like a regular Python class. Why do I say that? Because by default, the attributes are all mutable and they can only be accessed by name, not by index.", "When inheriting a dataclass, the attribute of the subclass follows the parent class, so be careful with the default value. If a field in the parent class is assigned with a default value, then all the attributes in the subclass should have default values.", "One of the key features of Named Tuple is being immutable. You can also set attributes immutable in dataclass via frozen=True.", "In a frozen dataclass, FrozenInstanceError exception will be raised if you try to modify the state.", "Last but not least, I want to compare the performance of regular Python class, collections.namedtuple, typing.NamedTuple and dataclass. The comparison includes:", "I have created 5 different classes. The last one is an optimised dataclass with a field __slot__. Slots are used to make classes faster and use less memory.", "Compare the size of the object", "The first step is to compare the size of each created object using sys.getsizeof.", "Compare time to create an object", "Then I use Python built-in function timeit to compare the object creation time.", "Compare time to access an attribute", "Tuple based objects are in general larger due to the fact that they contain both attribute names and indexes. dataclass with slots has the least object creation time. The regular Python class seems to be good at accessing attributes.", "Before making a decision, you must understand your requirements.", "Choose Regular Python class if you \u2026", "Choose collections.namedtuple class if you \u2026", "Choose typing.NamedTuple class if you \u2026", "Hope you enjoy this article! Leave your comments below if you have any thoughts.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I\u2019m a Developer with a focus on Python and Data Engineering. I write stuff to talk to myself and the world. You can find me on linkedin.com/in/xiaoxugao/."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe82e535c3691&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e82e535c3691--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e82e535c3691--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@xiaoxugao?source=post_page-----e82e535c3691--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@xiaoxugao?source=post_page-----e82e535c3691--------------------------------", "anchor_text": "Xiaoxu Gao"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2adc5a07e772&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&user=Xiaoxu+Gao&userId=2adc5a07e772&source=post_page-2adc5a07e772----e82e535c3691---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe82e535c3691&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe82e535c3691&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@hiteshchoudhary", "anchor_text": "Hitesh Choudhary"}, {"url": "https://unsplash.com/", "anchor_text": "Unsplash"}, {"url": "https://gist.github.com/highsmallxu/b469e182998b8a055bc09f3be9a8005a", "anchor_text": "transaction.py"}, {"url": "https://docs.python.org/3.8/library/collections.html", "anchor_text": "collections"}, {"url": "https://docs.python.org/3.8/library/collections.html", "anchor_text": "package"}, {"url": "https://gist.github.com/highsmallxu/26a46e42299300df75f856b50797e5d8", "anchor_text": "collections-namedtuple.py"}, {"url": "https://gist.github.com/highsmallxu/f6349b3bc6731c57bc40e27c5dfad3be", "anchor_text": "namedtuple-create.py"}, {"url": "https://gist.github.com/highsmallxu/06bf2ce8433c220e8175195cf8a26317", "anchor_text": "namedtuple-create-default.py"}, {"url": "https://gist.github.com/highsmallxu/03172fd592d454af8ff3b202975f998d", "anchor_text": "namedtuple-create-default-careful.py"}, {"url": "https://gist.github.com/highsmallxu/23101c2437ff2d63728b4f71f254c9e2", "anchor_text": "namedtuple-create-default-regular-class.py"}, {"url": "https://gist.github.com/highsmallxu/e4595c0b2f7bf67f330b5bb5de55a198", "anchor_text": "namedtuple-create-make.py"}, {"url": "https://gist.github.com/highsmallxu/cba968af7bebb383c6367616c8958f14", "anchor_text": "namedtuple-access.py"}, {"url": "https://gist.github.com/highsmallxu/f81bff245987a758f1eeaec0e9694e56", "anchor_text": "Inherit in namedtuple"}, {"url": "https://gist.github.com/highsmallxu/45d91b7d3f45fcece87007b695eebd3e", "anchor_text": "namedtuple-read-csv-database.py"}, {"url": "https://gist.github.com/highsmallxu/63788271aeafdfa82cad3ce3d538eca0", "anchor_text": "NamedTuple-create.py"}, {"url": "https://gist.github.com/highsmallxu/0882aef3fb73066eddde5b28ba7fdd67", "anchor_text": "NamedTuple-create-any.py"}, {"url": "https://gist.github.com/highsmallxu/a6e3ec176f1845063e85146a00e9b5fa", "anchor_text": "NamedTuple-access.py"}, {"url": "https://gist.github.com/highsmallxu/a87e1901c497e1c95ca8f4edea1733d8", "anchor_text": "dataclass-create.py"}, {"url": "https://gist.github.com/highsmallxu/5bbd894aa21467c863af8b963d8058a3", "anchor_text": "dataclass-inherit.py"}, {"url": "https://gist.github.com/highsmallxu/b55f7262f12ddfad5b397fa844783888", "anchor_text": "dataclass-immutable.py"}, {"url": "https://docs.python.org/3/reference/datamodel.html#slots", "anchor_text": "Slots"}, {"url": "https://gist.github.com/highsmallxu/611cef8f11f31f6e88b8427d420a46c8", "anchor_text": "namedtuple-dataclass-comparsion-init.py"}, {"url": "https://gist.github.com/highsmallxu/38bceca4c75f948d55f03aecd5ff467a", "anchor_text": "namedtuple-dataclass-size-comparsion.py"}, {"url": "https://docs.python.org/3.8/library/timeit.html", "anchor_text": "timeit"}, {"url": "https://gist.github.com/highsmallxu/80097313ce7c27d1cfc114e23378d419", "anchor_text": "namedtuple-dataclass-creation-comparsion.py"}, {"url": "https://gist.github.com/highsmallxu/3035f3e86a32b4df20d14500d1eb6f02", "anchor_text": "namedtuple-dataclass-access-comparsion.py"}, {"url": "https://dbader.org/blog/writing-clean-python-with-namedtuples", "anchor_text": "Writing Clean Python With Namedtuples - dbader.orgNamedtuples can be a great alternative to defining a class manually and they have some other interesting features that\u2026dbader.org"}, {"url": "https://realpython.com/python-data-classes/", "anchor_text": "The Ultimate Guide to Data Classes in Python 3.7 - Real PythonOne new and exciting feature coming in Python 3.7 is the data class. A data class is a class typically containing\u2026realpython.com"}, {"url": "https://docs.python.org/3/library/dataclasses.html", "anchor_text": "dataclasses - Data Classes - Python 3.8.3 documentationThis module provides a decorator and functions for automatically adding generated special method s such as and to\u2026docs.python.org"}, {"url": "https://docs.python.org/3/library/typing.html", "anchor_text": "typing - Support for type hints - Python 3.8.3 documentationSource code: Lib/typing.py Note The Python runtime does not enforce function and variable type annotations. They can be\u2026docs.python.org"}, {"url": "https://docs.python.org/3/library/collections.html", "anchor_text": "collections - Container datatypes - Python 3.8.3 documentationSource code: Lib/collections/__init__.py New in version 3.3. The class can be used to simulate nested scopes and is\u2026docs.python.org"}, {"url": "https://medium.com/tag/programming?source=post_page-----e82e535c3691---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----e82e535c3691---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----e82e535c3691---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/software-development?source=post_page-----e82e535c3691---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/object-oriented?source=post_page-----e82e535c3691---------------object_oriented-----------------", "anchor_text": "Object Oriented"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe82e535c3691&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&user=Xiaoxu+Gao&userId=2adc5a07e772&source=-----e82e535c3691---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe82e535c3691&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&user=Xiaoxu+Gao&userId=2adc5a07e772&source=-----e82e535c3691---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe82e535c3691&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e82e535c3691--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe82e535c3691&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e82e535c3691---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e82e535c3691--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e82e535c3691--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e82e535c3691--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e82e535c3691--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e82e535c3691--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e82e535c3691--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e82e535c3691--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e82e535c3691--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@xiaoxugao?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@xiaoxugao?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Xiaoxu Gao"}, {"url": "https://medium.com/@xiaoxugao/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "9.6K Followers"}, {"url": "http://linkedin.com/in/xiaoxugao/", "anchor_text": "linkedin.com/in/xiaoxugao/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2adc5a07e772&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&user=Xiaoxu+Gao&userId=2adc5a07e772&source=post_page-2adc5a07e772--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F45d7754eac8c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-how-to-use-namedtuple-and-dataclass-in-python-e82e535c3691&newsletterV3=2adc5a07e772&newsletterV3Id=45d7754eac8c&user=Xiaoxu+Gao&userId=2adc5a07e772&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}