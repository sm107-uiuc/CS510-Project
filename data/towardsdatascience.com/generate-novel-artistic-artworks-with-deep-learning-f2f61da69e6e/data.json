{"url": "https://towardsdatascience.com/generate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e", "time": 1683006748.8286662, "path": "towardsdatascience.com/generate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e/", "webpage": {"metadata": {"title": "Generate Novel Artistic Artworks with Deep Learning | by Bryan Tan | Towards Data Science", "h1": "Generate Novel Artistic Artworks with Deep Learning", "description": "In this article, I will go on about using deep learning to compose images in the style of another image (ever wish you could paint like Picasso or Van Gogh?). This is known as neural style transfer\u2026"}, "outgoing_paragraph_urls": [{"url": "https://arxiv.org/abs/1508.06576", "anchor_text": "Leon A. Gatys\u2019 paper, A Neural Algorithm of Artistic Style", "paragraph_index": 0}, {"url": "https://www.coursera.org/learn/convolutional-neural-networks/lecture/4THzO/transfer-learning", "anchor_text": "transfer learning", "paragraph_index": 8}, {"url": "https://arxiv.org/abs/1508.06576", "anchor_text": "original NST paper", "paragraph_index": 9}, {"url": "https://en.wikipedia.org/wiki/Impressionism", "anchor_text": "impressionism", "paragraph_index": 28}, {"url": "https://www.tensorflow.org/api_docs/python/tf/InteractiveSession", "anchor_text": "Interactive Session", "paragraph_index": 54}, {"url": "https://www.deeplearning.ai/", "anchor_text": "deeplearning.ai", "paragraph_index": 72}], "all_paragraphs": ["In this article, I will go on about using deep learning to compose images in the style of another image (ever wish you could paint like Picasso or Van Gogh?). This is known as neural style transfer! This is a technique outlined in Leon A. Gatys\u2019 paper, A Neural Algorithm of Artistic Style, which is a great read, and you should definitely check it out.", "But, what is neural style transfer?", "Neural style transfer is an optimization technique used to take three images, a content image, a style reference image (such as an artwork by a famous painter), and the input image you want to style \u2014 and blend them together such that the input image is transformed to look like the content image, but \u201cpainted\u201d in the style of the style image, bridging the orbits of deep learning and art!", "For example, let\u2019s take an image of this turtle and Katsushika Hokusai\u2019s The Great Wave off Kanagawa:", "Now how would it look like if Hokusai decided to paint the picture of this turtle exclusively with this style? Something like this?", "Is this magic or just deep learning? Fortunately, this doesn\u2019t involve any witchcraft: style transfer is a fun and interesting technique that showcases the capabilities and internal representations of neural networks.", "The principle of neural style transfer is to define two distance functions, one that describes how different the content of two images are , \ud835\udc3f\ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc61\ud835\udc52\ud835\udc5b\ud835\udc61, and one that describes the difference between two images in terms of their style, \ud835\udc3f\ud835\udc60\ud835\udc61\ud835\udc66\ud835\udc59\ud835\udc52. Then, given three images, a desired style image, a desired content image, and the input image (initialized with the content image), we try to transform the input image to minimize the content distance with the content image and its style distance with the style image. In summary, we\u2019ll take the base input image, a content image that we want to match, and the style image that we want to match. We\u2019ll transform the base input image by minimizing the content and style distances (losses) with backpropagation, creating an image that matches the content of the content image and the style of the style image.", "In this article, we will be generating an image of the Louvre museum in Paris (content image C), mixed with a painting by Claude Monet, a leader of the impressionist movement (style image S).", "Neural Style Transfer (NST) uses a previously trained convolutional network, and builds on top of that. The idea of using a network trained on a different task and applying it to a new task is called transfer learning.", "Following the original NST paper, I will be using the VGG network. Specifically, VGG-19, a 19-layer version of the VGG network. This model has already been trained on the very large ImageNet database, and thus has learned to recognize a variety of low-level features (at the shallower layers) and high-level features (at the deeper layers).", "The following code to load parameters from the VGG model (refer to Github repo for more information):", "The model is stored in a python dictionary. The python dictionary contains key-value pairs for each layer in which the \u2018key\u2019 is the variable name and the \u2018value\u2019 is a tensor for that layer.", "We will build the Neural Style Transfer (NST) algorithm in three steps:", "In our running example, the content image C will be the picture of the Louvre Museum in Paris (scaled to 400 x 300)", "The content image (C) shows the Louvre museum\u2019s pyramid surrounded by old Paris buildings, against a sunny sky with a few clouds.", "As aforementioned, the shallower layers of a ConvNet tend to detect lower-level features such as edges and simple textures; the deeper layers tend to detect higher-level features such as more complex textures as well as object classes.", "We would like the generated image G to have similar content as the input image C. Suppose you have chosen some layer\u2019s activations to represent the content of an image. In practice, you\u2019ll get the most visually pleasing results if you choose a layer in the middle of the network \u2014 neither too shallow nor too deep.", "Note: After you have finished this article\u2019s example, feel free to experiment with different layers, to see how the results vary.", "First, we will set the image C as the input to the pre-trained VGG network, and run forward propagation. Let a\u1d9c be the hidden layer activations in the layer you had chosen. This will be an nH \u00d7 nW \u00d7 nC tensor.", "Repeat this process with the image G \u2014 set G as the input, and run forward propagation. Let a\u1d33 be the corresponding hidden layer activation.", "We will then define the content cost function as:", "Here, nH, nW, and nC are respectively the height, width and number of channels of the hidden layer you have chosen. The terms appear in a normalization term in the cost.", "For clarity, note that a\u1d9c and a\u1d33 are the 3D volumes corresponding to a hidden layer\u2019s activations. In order to compute the cost J_content (C, G), it might also be convenient to unroll these 3D volumes into a 2D matrix, as shown below.", "Technically, this unrolling step isn\u2019t needed to compute J_content, but it will be of good practice for when you do need to carry out a similar operation later for computing the style cost J_style.", "compute_content_cost()function computes the content cost using TensorFlow.", "The 3 steps to implement this function are:", "In summary, the content cost takes a hidden layer activation of the neural network, and measures how different a\u1d9c and a\u1d33 are. When we minimize the content cost later, this will help make sure G has similar content as C.", "For our running example, we will use the following style image:", "By Claude Monet, a leader of the impressionist movement, painted in the style of impressionism.", "The style matrix is also called a Gram matrix. In linear algebra, the Gram matrix G of a set of vectors (v\u2081,\u2026, vn) is the matrix of dot products, whose entries are Gij = v\u1d62\u1d40 v\u2c7c= np.dot(v\u1d62, v\u2c7c)", "In other words, Gij compares how similar v\u1d62 is to v\u2c7c. If they are highly similar, you would expect them to have a large dot product, and thus for Gij to be large.", "Note that there is an unfortunate collision in the variable names used here. We are following common terminology used in the literature. G is used to denote the Style matrix (or Gram matrix); G also denotes the generated image. For this example, we will use Ggram to refer to the Gram matrix, and G to denote the generated image.", "In Neural Style Transfer (NST), you can compute the Style matrix by multiplying the \u201cunrolled\u201d filter matrix with its transpose:", "Ggram measures the correlation between two filters:", "The result is a matrix of dimension (nC, nC) where nC is the number of filters (channels). The value Ggram(i, j) measures how similar the activations of filter i are to the activations of filter j.", "Ggram also measures the prevalence of patterns or textures:", "The diagonal elements Ggram(i, i) measure how \u201cactive\u201d a filter i is. For example, suppose filter i is detecting vertical textures in the image. Then Ggram(i, i) measures how common vertical textures are in the image as a whole. If Ggram(i, i) is large, this means that the image has a lot of vertical texture.", "The goal will be to minimize the distance between the Gram matrix of the style image S and the gram matrix of the generated image G.", "For now, we are using only a single hidden layer a\u02e1. The corresponding style cost for this layer is defined as:", "The 3 steps to implement this function are:", "So far, we have captured the style from only one layer. We would get better results if we \u201cmerge\u201d style costs from several different layers. Each layer will be given weights ( \u03bb\u02e1 ) that reflect how much each layer will contribute to the style. By default, we\u2019ll give each layer equal weight, and the weights add up to 1. After completing this example, feel free to experiment with different weights to see how it changes the generated image G.", "You can combine the style costs for different layers as follows:", "where the values for \u03bb\u02e1 are given in STYLE_LAYERS.", "This function calls the compute_layer_style_cost(...)function several times, and weighs their results using the values in STYLE_LAYERS.", "Note: In the inner-loop of the for-loop above, a_G is a tensor and hasn't been evaluated yet. It will be evaluated and updated at each iteration when we run the TensorFlow graph in model_nn() below.", "In summary, the style of an image can be represented using the Gram matrix of a hidden layer\u2019s activations. We get even better results by combining this representation from multiple different layers. This is in contrast to the content representation, where usually using just a single hidden layer is sufficient. In addition, minimizing the style cost will cause the image G to follow the style of the image S.", "Finally, let\u2019s create a cost function that minimizes both the style and the content cost. The formula is:", "The total cost is a linear combination of the content cost J_content(C, G) and the style cost J_style(S, G).", "\u03b1 and \u03b2 are hyperparameters that control the relative weighting between content and style.", "Finally, let\u2019s put everything together to implement Neural Style Transfer!", "Here\u2019s what the program will have to do:", "7. Initialize the TensorFlow graph and run it for a large number of iterations, updating the generated image at every step.", "Let's go through the individual steps in detail.", "We\u2019ve previously implemented the overall cost J(G). We\u2019ll now set up TensorFlow to optimize this with respect to G.", "To do so, our program has to reset the graph and use an \u201cInteractive Session\u201d. Unlike a regular session, the \u201cInteractive Session\u201d installs itself as the default session to build a graph. This allows us to run variables without constantly needing to refer to the session object (calling sess.run()), which simplifies the code.", "Let\u2019s load, reshape, and normalize our content image (the Louvre museum picture):", "Let\u2019s load, reshape and normalize our style image (Claude Monet\u2019s painting):", "Now, we initialize the generated image as a noisy image created from the content_image.", "The generated image is slightly correlated with the content image. By initializing the pixels of the generated image to be mostly noise but slightly correlated with the content image, this will help the content of the generated image more rapidly match the content of the content image.", "Feel free to look in nst_utils.py to see the details of generate_noise_image(...) in the Github repo.", "Next, as explained before, we shall load the VGG19 model.", "To get the program to compute the content cost, we will now assign a_C and a_G to be the appropriate hidden layer activations. We will use layer conv4_2 to compute the content cost. The code below does the following:", "Note: At this point, a_G is a tensor and hasn\u2019t been evaluated. It will be evaluated and updated at each iteration when we run the Tensorflow graph in model_nn() below.", "Now that we have the content cost (J_content) and style cost (J_style), compute the total cost J by calling total_cost().", "Here, I used the Adam optimizer to minimize the total cost J.", "The function initializes the variables of the TensorFlow graph, assigns the input image (initial generated image) as the input of the VGG19 model, and runs the train_step tensor (it was created in the code above this function) for a large number of steps.", "Run the following code snippet to generate an artistic image. It should take about 3min on CPU for every 20 iterations but you start observing attractive results after \u2248140 iterations. Neural Style Transfer is generally trained using GPUs.", "You\u2019re done! After running this, you should see something the image presented below on the right:", "Here are a few other examples:", "You are now able to use Neural Style Transfer to generate artistic images. Neural Style Transfer is an algorithm, that given a content image C and a style image S, can generate an artistic image.", "It uses representations (hidden layer activations) based on a pre-trained ConvNet. The content cost function is computed using one hidden layer\u2019s activations; the style cost function for one layer is computed using the Gram matrix of that layer\u2019s activations. The overall style cost function is obtained using several hidden layers.", "Lastly, optimizing the total cost function results in synthesizing new images.", "Special thanks to deeplearning.ai. Images courtesy of deeplearning.ai.", "The Neural Style Transfer algorithm was due to Gatys et al. (2015). Harish Narayanan and Github user \u201clog0\u201d also have highly readable write-ups from which we drew inspiration. The pre-trained network used in this implementation is a VGG network, which is due to Simonyan and Zisserman (2015). Pre-trained weights were from the work of the MathConvNet team.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "19, Data Science Intern. I write maths & ai."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff2f61da69e6e&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@bryantanjw?source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@bryantanjw?source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": "Bryan Tan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7cdfc2e9a731&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&user=Bryan+Tan&userId=7cdfc2e9a731&source=post_page-7cdfc2e9a731----f2f61da69e6e---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff2f61da69e6e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff2f61da69e6e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://arxiv.org/abs/1508.06576", "anchor_text": "Leon A. Gatys\u2019 paper, A Neural Algorithm of Artistic Style"}, {"url": "https://commons.wikimedia.org/wiki/File:Green_Sea_Turtle_grazing_seagrass.jpg", "anchor_text": "Image of Green Sea Turtle"}, {"url": "https://creativecommons.org/licenses/by-sa/3.0)%5D", "anchor_text": "https://creativecommons.org/licenses/by-sa/3.0)]"}, {"url": "https://en.wikipedia.org/wiki/The_Great_Wave_off_Kanagawa", "anchor_text": "https://en.wikipedia.org/wiki/The_Great_Wave_off_Kanagawa"}, {"url": "https://www.coursera.org/learn/convolutional-neural-networks/lecture/4THzO/transfer-learning", "anchor_text": "transfer learning"}, {"url": "https://arxiv.org/abs/1508.06576", "anchor_text": "original NST paper"}, {"url": "https://en.wikipedia.org/wiki/Impressionism", "anchor_text": "impressionism"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/InteractiveSession", "anchor_text": "Interactive Session"}, {"url": "https://github.com/TheClub4/artwork-neural-style-transfer", "anchor_text": "https://github.com/TheClub4/artwork-neural-style-transfer"}, {"url": "https://www.deeplearning.ai/", "anchor_text": "deeplearning.ai"}, {"url": "https://arxiv.org/abs/1508.06576", "anchor_text": "A Neural Algorithm of Artistic Style"}, {"url": "https://harishnarayanan.org/writing/artistic-style-transfer/", "anchor_text": "Convolutional neural networks for artistic style transfer."}, {"url": "http://www.chioka.in/tensorflow-implementation-neural-algorithm-of-artistic-style", "anchor_text": "TensorFlow Implementation of \u201cA Neural Algorithm of Artistic Style\u201d."}, {"url": "https://arxiv.org/pdf/1409.1556.pdf", "anchor_text": "Very deep convolutional networks for large-scale image recognition"}, {"url": "http://www.vlfeat.org/matconvnet/pretrained/", "anchor_text": "MatConvNet."}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----f2f61da69e6e---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----f2f61da69e6e---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----f2f61da69e6e---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/art?source=post_page-----f2f61da69e6e---------------art-----------------", "anchor_text": "Art"}, {"url": "https://medium.com/tag/neural-style-transfer?source=post_page-----f2f61da69e6e---------------neural_style_transfer-----------------", "anchor_text": "Neural Style Transfer"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff2f61da69e6e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&user=Bryan+Tan&userId=7cdfc2e9a731&source=-----f2f61da69e6e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff2f61da69e6e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&user=Bryan+Tan&userId=7cdfc2e9a731&source=-----f2f61da69e6e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff2f61da69e6e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff2f61da69e6e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f2f61da69e6e---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f2f61da69e6e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@bryantanjw?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@bryantanjw?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Bryan Tan"}, {"url": "https://medium.com/@bryantanjw/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "306 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7cdfc2e9a731&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&user=Bryan+Tan&userId=7cdfc2e9a731&source=post_page-7cdfc2e9a731--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F32dd6de2739d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerate-novel-artistic-artworks-with-deep-learning-f2f61da69e6e&newsletterV3=7cdfc2e9a731&newsletterV3Id=32dd6de2739d&user=Bryan+Tan&userId=7cdfc2e9a731&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}