{"url": "https://towardsdatascience.com/the-essence-of-regular-expression-8c2e0ccf6a25", "time": 1683000442.648256, "path": "towardsdatascience.com/the-essence-of-regular-expression-8c2e0ccf6a25/", "webpage": {"metadata": {"title": "The Basics of Regular Expressions | by SAURABH RANA | Towards Data Science", "h1": "The Basics of Regular Expressions", "description": "Regular Expression is a special text string command which is used to match specific string sequences from huge chunks of data which if done manually by a person can take a lot of time. You can use\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["Regular Expression is a special text string command which is used to match specific string sequences from huge chunks of data which if done manually by a person can take a lot of time. You can use regular expressions to match various patterns of string like:-", "And the list is endless, the above-mentioned cases are the first six scenarios that crossed my mind while writing this article but honestly you can use regular expressions to extract any kind of string pattern from data no matter how big it is within seconds and that is the beauty of regular expressions. These days the importance of regular expression has increased because many companies are using natural language processing techniques where regular expressions are used very frequently.", "The best thing about regular expression is that it is supported by most of the popular programming languages therefore once you understand the syntax and concept of regular expressions, you can use it with various languages.", "So let\u2019s get started with regular expressions, I am using regular expressions with python but you guys can use any language of your choice but it should support regular expressions.", "First is to match only the first time occurrence of a particular string pattern, second is to match all the occurrences of a particular string pattern.", "Now whether you want to match only first occurrence or all the occurrence depends on your requirement. In my experience wherever I have used Regular Expressions most of the problems require all the occurrences to be matched therefore in all the examples in this blog I have intentionally written Regular expressions to match with all the occurrences.", "Let\u2019s get started with the most basic regex expression that is literal characters where you are basically searching a particular alphabet or a word from the data, it is similar to what you get when you search something on a web page or pdf using Ctrl+F. Let\u2019s try one example:-", "Since I am a big marvel fan so I will be using marvel as a reference in my example", "In output \u201ca\u201d is repeated 10 times because there are exactly ten occurrences of the alphabet \u201ca\u201dNow let\u2019s try a combination of alphabets for our next example:-", "Note: The sequence of alphabets is very important, in the above example only those stings will be matched where alphabet \u201ca\u201d is followed by the alphabet \u201cs\u201d.", "\u201c\\w\u201d stands for word character which basically is shorthand for [a-zA-Z0\u20139_] which means it matches with all capital alphabet, small alphabets and all the digits. Let\u2019s try this regular expression in our marvel text to analyse which characters doesn\u2019t match with \u201c\\w\u201d:-", "Even though \u201d\\w\u201d is matching with all the characters in [a-zA-Z0\u20139_] but it matches with them one at a time because of which the output will display one alphabet after another, therefore I have used for loop in python to display them all together because of which there is space between every character that is matched.", "Now let\u2019s move onto the second example where we are searching for two consecutive characters", "I have not copied the whole output but a part of it just to give you an idea", "Note: Words which have an even number of characters are printed fully in groups of two but words where there are odd number of characters the last alphabet is missing in the output(Hint: When you divide an odd number by 2 the output is 1) because the last alphabet could not create a pair with another alphabet.", "Similarly, we can search for three consecutive characters one at a time", "Instead of repeating \u201c\\w\u201d, we can directly mention the number of consecutive alphabets we are searching for using curly({}) brackets about which we will discuss later", "This shorthand character where \u201cW\u201d is capital will match every character except these [a-zA-Z0\u20139_]. So only those characters which were not matching in our previous example where we were using shorthand character class \u201c\\w\u201d (w is small) will match in this case.", "This shorthand character matches all numbers ([0\u20139]) in a source string.", "Now let\u2019s search for two consecutive numbers in source string.", "Similar to \u201c\\W\u201d (W is capital) this regular expression is also the complete opposite of its counterpart \u201c\\d\u201d i.e. it will match only those characters which shorthand character \u201cd\u201d doesn\u2019t matches.", "Following meta characters +, * or ? are used to specify how many times a subpattern can occur. These meta characters act differently in different situations.", "Meta character \u201c+\u201d is used to match with one or more than one occurrences of the preceding symbol.", "Now let\u2019s try out these examples on raw text", "Note: In the output \u201c2\u201d and \u201c788\u201d are not matched together because these two numbers are separated by \u201c.\u201d", "Now, what if want the number\u201c2.788\u201d to be matched, in that case, we can use the following regular expression:-", "Note: In complex regular expressions like the one mentioned above where we search for strings with multiple conditions, the conditions should match consecutively in the same order as mentioned in regular Expression, for instance in the example mentioned above we are searching for numbers which have one or more than one digits, followed by a full stop, followed by one or more than one digits. If these three conditions are not matched consecutively then there won\u2019t be any match.", "Unlike \u201c+\u201d operator which is used to match with one or more repetitions of preceding symbol,\u201d*\u201d is used to match with 0 or more repetitions of the preceding symbol.", "Suppose we are asked to find out of all the user id\u2019s mentioned below only those which have string \u201csaurabh\u201d in it then, in that case, we will have to use \u201c*\u201d", "A string of characters enclosed in square brackets ([]) matches any one character in that string.Let\u2019s try to understand it with the help of an example:-", "Note: As I mentioned before that in regular expressions the conditions should match consecutively in the same order as mentioned in Regular Expression. In the above example \u201crunning\u201d is not matched even though it starts with \u201cr\u201d and ends with \u201cing\u201d because these conditions are not matched consecutively since there are other alphabets between \u201cr\u201d and \u201cing\u201d in running.", "The special character \u201c^\u201d is used inside square brackets when we want to match all characters except for those mentioned in square brackets", "We can use a hyphen(\u201c-\u201d)between two characters set to specify the characters range", "The meta character \u201c.\u201d matches any single character except for return or newline characters", "Here the regular expression is matching with every type of character including the whitespace between alphabet \u201cd\u201d and \u201ce\u201d", "We use curly braces ({}) when we are very specific about the number of occurrences an operator or sub-expression must match in the source string. In the below-mentioned example, we are trying to derive the same output as we did in earlier examples where we wanted to match 3 consecutive digits for which we used regular expression \u201c\\d\\d\\d\u201d, now instead of repeating the expression we can mention the specific number of occurrences that we want inside the curly brackets.", "\u201c?\u201d in regex is used for making the previous group/character optional.", "Let me explain the importance of this expression using an example=>", "Suppose we are asked to extract all the numbers from the text given below, now in the given text there are three types of numbers:-", "Now we want to extract all three types of numbers, let\u2019s try it out", "The caret ^ and dollar $ characters are called \u201canchors\u201d where the caret ^ matches at the beginning of the text, and the dollar $ at the end. They do not match any character at all. Instead, they match a position before, after, or between characters", "Suppose in a data set we want to extract mobile numbers but there are many errors in the data set because of which there might be cases where the mobile number is not valid(Valid mobile number consists of 10 digits). In that case, anchors are very useful. Let\u2019s try to understand this using various cases:-", "Output is null because the number is not ending with a number which makes it an invalid mobile number.", "Output is again null because there is an alphabet in between the numbers", "This time there is no alphabet string in the source string but still, we are getting null output because the length of our source string is not equal to 10.", "In this case, we are getting output because the source string full fills all the conditions of a valid mobile number as we mentioned in our regular expression.", "So these are the most fundamental and important concepts of Regular expressions which I have tried to explain using some interesting examples, some of them were made up but most of them were actual problems that I came across while data cleaning so in future if you are stuck on a problem then just go through the examples once again and you might find the exact answer in one of the examples.", "Apart from the basic regular expressions, you might come across regular expressions like this \u201c /^[a-z0\u20139_-]{6,18}$/\u201d.When people see such long regular expression they just ignore them as if they have seen a Russian word in an English sentence. The trick to understanding the meaning of such regular expressions is to break them down and solve them separately.", "If you are still not confident enough to understand such regular expression then please mention in the comment section, I may upload a second article on Regular Expression to explain how to solve such regular expression.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F8c2e0ccf6a25&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://saurabh-rana.medium.com/?source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": ""}, {"url": "https://saurabh-rana.medium.com/?source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": "SAURABH RANA"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F515e15a3f6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&user=SAURABH+RANA&userId=515e15a3f6f&source=post_page-515e15a3f6f----8c2e0ccf6a25---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8c2e0ccf6a25&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8c2e0ccf6a25&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/decision-tree-behind-the-scenes-e2800f26cba7", "anchor_text": "Machine Learning : Decision Tree-Behind The ScenesDon\u2019t use Machine Learning as Black Box Models. Try to deep dive in and understand what goes on behind the scenes!!towardsdatascience.com"}, {"url": "http://www.linkedin.com/in/saurabh-rana-150496", "anchor_text": "Linkedin"}, {"url": "https://medium.com/tag/regex?source=post_page-----8c2e0ccf6a25---------------regex-----------------", "anchor_text": "Regex"}, {"url": "https://medium.com/tag/regular-expressions?source=post_page-----8c2e0ccf6a25---------------regular_expressions-----------------", "anchor_text": "Regular Expressions"}, {"url": "https://medium.com/tag/data-mining?source=post_page-----8c2e0ccf6a25---------------data_mining-----------------", "anchor_text": "Data Mining"}, {"url": "https://medium.com/tag/data-cleaning?source=post_page-----8c2e0ccf6a25---------------data_cleaning-----------------", "anchor_text": "Data Cleaning"}, {"url": "https://medium.com/tag/python?source=post_page-----8c2e0ccf6a25---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8c2e0ccf6a25&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&user=SAURABH+RANA&userId=515e15a3f6f&source=-----8c2e0ccf6a25---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8c2e0ccf6a25&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&user=SAURABH+RANA&userId=515e15a3f6f&source=-----8c2e0ccf6a25---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8c2e0ccf6a25&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F8c2e0ccf6a25&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----8c2e0ccf6a25---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----8c2e0ccf6a25--------------------------------", "anchor_text": ""}, {"url": "https://saurabh-rana.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://saurabh-rana.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "SAURABH RANA"}, {"url": "https://saurabh-rana.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "10 Followers"}, {"url": "http://www.linkedin.com/in/saurabh-rana-150496", "anchor_text": "www.linkedin.com/in/saurabh-rana-150496"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F515e15a3f6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&user=SAURABH+RANA&userId=515e15a3f6f&source=post_page-515e15a3f6f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F1ea6f8ebbd6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-essence-of-regular-expression-8c2e0ccf6a25&newsletterV3=515e15a3f6f&newsletterV3Id=1ea6f8ebbd6d&user=SAURABH+RANA&userId=515e15a3f6f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}