{"url": "https://towardsdatascience.com/how-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19", "time": 1683011899.884793, "path": "towardsdatascience.com/how-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19/", "webpage": {"metadata": {"title": "How To Teach Programming To People In Prison (Without Computers) | by Alex Wright | Towards Data Science", "h1": "How To Teach Programming To People In Prison (Without Computers)", "description": "How can we teach data science and programming without computers? It may sound backwards today, but it turns out we\u2019ve been doing something like this for many decades. Only recently have we forgotten\u2026"}, "outgoing_paragraph_urls": [{"url": "https://learnlevel.org/", "anchor_text": "Level", "paragraph_index": 2}, {"url": "https://thelastmile.org/", "anchor_text": "The Last Mile", "paragraph_index": 6}, {"url": "https://www.un-loop.org/", "anchor_text": "Unloop", "paragraph_index": 6}, {"url": "https://twitter.com/vboykis/status/830587985087365121?s=20", "anchor_text": "tweet by programmer Vicki Boykis", "paragraph_index": 19}, {"url": "https://veekaybee.github.io/2017/02/22/being-a-woman-in-programming-in-the-soviet-union/", "anchor_text": "Being A Woman In Programming In The Soviet Union", "paragraph_index": 19}, {"url": "https://twitter.com/old_sound/status/1275624186682187776?s=20", "anchor_text": "tweet by programmer Alvaro Videla", "paragraph_index": 21}, {"url": "https://news.ycombinator.com/item?id=10171469", "anchor_text": "Computers were for executing programs, not editing text", "paragraph_index": 21}, {"url": "https://en.wikipedia.org/wiki/Ada_Lovelace#/media/File:Diagram_for_the_computation_of_Bernoulli_numbers.jpg", "anchor_text": "the world\u2019s first algorithm", "paragraph_index": 22}, {"url": "https://dl.acm.org/doi/pdf/10.1145/2930674.2930678", "anchor_text": "Of Elephants and Nested Loops: How to Introduce Computing to Youth in Rural India", "paragraph_index": 23}, {"url": "https://scratch.mit.edu/", "anchor_text": "Scratch", "paragraph_index": 27}, {"url": "https://code.org/", "anchor_text": "code.org", "paragraph_index": 27}, {"url": "https://scratch.mit.edu/projects/411192040/", "anchor_text": "Non-Euclidean Lemon Grab Experiment", "paragraph_index": 27}, {"url": "https://dl.acm.org/doi/abs/10.1145/3137065.3137072", "anchor_text": "To Scratch Or Not To Scratch?: A Controlled Experiment Comparing Plugged First And Unplugged First Programming Lessons", "paragraph_index": 30}, {"url": "https://learnlevel.org/", "anchor_text": "website", "paragraph_index": 43}, {"url": "https://twitter.com/levellearning", "anchor_text": "Twitter", "paragraph_index": 43}, {"url": "https://twitter.com/kierisi", "anchor_text": "Jesse Mostipak", "paragraph_index": 43}, {"url": "https://doi.org/10.1145/2930674.2930678", "anchor_text": "Of Elephants and Nested Loops: How to Introduce Computing to Youth in Rural India", "paragraph_index": 44}, {"url": "https://doi.org/10.1145/3137065.3137072", "anchor_text": "To Scratch or not to Scratch? A controlled experiment comparing plugged first and unplugged first programming lessons", "paragraph_index": 45}, {"url": "http://learnlevel.org", "anchor_text": "learnlevel.org", "paragraph_index": 47}], "all_paragraphs": ["How can we teach data science and programming without computers? It may sound backwards today, but it turns out we\u2019ve been doing something like this for many decades. Only recently have we forgotten just how possible, and even advantageous, it can be to separate the computer from computer science.", "How can we teach data science and programming to people in prison without computers (or internet)? That is a much more complicated question, and answering it goes far into uncharted territory.", "At Level, we create and distribute high quality, free, Creative Commons licensed educational and job training content to incarcerated men and women at mass scale.", "Over the next year, we\u2019ll begin distributing our first programming guides written for incarcerated learners who have no access to computers or the internet. The never-been-done-before aspect of this project led us to look to the past to discover how researchers and programmers have approached these issues before.", "We\u2019re starting with lessons in data science, data visualization and the R programming language. We chose this starting point because it can be more physical and tangible. Data science and data visualization can adapt to different environments better than web development or app design. Individual learners can personalize the data that is collected and analyzed. \u201cData is everywhere\u201d is true even in prisons.", "Teaching programming to incarcerated men and women \u2014 some of the most disconnected people in America \u2014 may seem absurd. But consider this. Every year, 600,000 people are released from state and federal prisons without much of a prospect for a job or a future better than the one they had when they got locked up. That\u2019s a population the size of Baltimore or Las Vegas. Every single year. Well over half are re-arrested and go back to prison, costing all of us over $80 billion a year and tearing up families and communities along the way. Many incarcerated individuals are eager learners dying for new opportunities.", "What people in prison have is time. Lots of time. And creativity. And perseverance. What they don\u2019t have is \u2026 a lot of things, including computers, the internet and access to the kinds of self study courses many of us on the outside take for granted. There are very cool programming courses offered in some select prisons by organizations like The Last Mile and Unloop, but these programs are accessible to only a fraction of America\u2019s prison population. And COVID-19 has locked down even those opportunities.", "How can we introduce the life changing opportunities provided by a career in data science to America\u2019s incarcerated population? And how can we do it at scale so that more of the nation\u2019s 2.3 million incarcerated men and women \u2014 who don\u2019t have access to computers or the internet \u2014 can discover new career opportunities? Absurd as it may be, history is a great guide to make this idea a reality.", "Most of us assume that learning a skill requires access to the tools needed to conduct that skill. Learning to program requires access to a computer and the internet. But does it?", "There\u2019s a growing set of ideas, known as unplugged computer science, that re-thinks the fundamental nature of teaching computational thinking, data literacy and even programming. Getting a foothold in the 1980s and expanding significantly in the 2000s, unplugged computer science theories say quite proudly that not only can we teach computer science without a computer, but in many ways, we should.", "Unplugged computer science began as an exploration about different ways to teach children the basics of programming and computer science. If you have young kids or spend much time around them, it\u2019s immediately apparent that they can\u2019t type very well and don\u2019t sit still long enough to learn to program the way we commonly teach programming.", "Mike Fellows and Tim Bell, two like minded professors and computer scientists from opposite sides of the planet, got together in the late 1980s and developed a new idea for throwing out the computer when teaching computers to children. They devised games and activities that teach children to think about the ideas of programming \u2014 abstraction, decomposition, algorithmic design, generalization, automation, variables, loops, conditionals \u2014 using string, paper and cups instead of screen time.", "The benefits of unplugged computer science were immediate. Teachers didn\u2019t have to have a degree in computer science \u2014 or even an understanding of it \u2014 to help kids learn about computers. Schools didn\u2019t even need to have computers. And kids could do what they do best \u2014 run around and scream \u2014 while actually learning about computational concepts like if / then conditionals.", "It turns out that necessity had been the mother of invention for unplugged computer science long before Mike Fellows and Tim Bell. In the early decades of programming, coders worked with pen and paper to refine and test their algorithms before they got access to rare machines that could execute their code. Mistakes were expensive. Paper wasn\u2019t. Learning to code didn\u2019t start with a keyboard and a screen.", "What can we learn from kids who can figure out the core ideas of programming without computers? If the early days of programming required a lengthy apprenticeship of pen and paper coding, can we teach today\u2019s adults how to be good \u2014 and high earning \u2014 programmers even if they don\u2019t have access to a computer? Is unplugged computer science a pathway to bringing more diverse minds and talents into the field of programming?", "The famous quote \u201cComputer science is no more about computers than astronomy is about telescopes\u201d is attributed to Dutch computer scientist Edsger Dijkstra but actually coined by unplugged co-author Mike Fellows. Astronomy and computer science are concepts, big picture ideas, professions. Telescopes and computers are tools. One big problem with teaching computer science is that the traditional approach has put learning how to use the tool before learning about the concepts, the big picture ideas and the applications.", "Tim Bell explains the metaphor further. \u201cTraditionally, for computer science, we\u2019ve used programming as the gateway to computer science. Students are told \u2018Enroll for computer science and you\u2019ll learn a whole year of programming and then we\u2019ll start showing you some cool stuff you can do with it.\u2019 That\u2019s a bit like saying \u2018There\u2019s this thing called astronomy. You probably don\u2019t know what it\u2019s about. Trust me, it\u2019s really cool. But first of all, learn about telescopes for a year or two. Then we\u2019ll tell you what it\u2019s actually about.\u2019\u201d", "This cart-before-the-horse approach has a lot of problems. One of which is access. If you don\u2019t have access to the tools and the techniques to master them, you can\u2019t proceed on to the career. According to Tim, \u201cOne of the important social things about changing the way we teach computer science is that the traditional view of \u2018learn coding/programming first and then we\u2019ll show you the cool stuff\u2019 blocks out a lot of people who can\u2019t see the point of coding/programming. If you can show them the point, they can see that it is worth learning.\u201d The same applies to those who can\u2019t get ahold of the tools.", "Long before the two started out to change the way computers can be tough to kids, adults had been working with unplugged approaches to computer science out of necessity.", "A tweet by programmer Vicki Boykis about how her mom learned to program in the former USSR led to her mom writing a long form article called Being A Woman In Programming In The Soviet Union documenting how she learned to code in the late 70s and early 80s. The story and visuals are stunning.", "\u201cIn the programming classes, we studied programming the \u2018dry\u2019 way: using paper, pencil and eraser. In fact, this method was so important that students who forgot their pencils were sent to the main office to ask for one \u2026 Our teacher used to go for one week of \u2018practice work and curriculum development,\u2019 to a serious IT shop with more advanced machines every once in a while. At that time, the heavy computing power was in the ES Series, produced by Soviet bloc countries. These machines were clones of the IBM 360. They worked with punch cards and punch tapes. She would bring back tons of papers with printed code and debugging comments for us to learn in the classroom \u2026 After two and half years of rigorous study using pencil and paper, we had six months of practice.\u201d", "A tweet by programmer Alvaro Videla talks of Uruguayan coders in the 1960s who would program the whole week on paper and then take a ferry and go test their programs in Argentina, which was the closest place with a computer. In these early days, young programmers didn\u2019t have access to computers to run their code. \u201cComputers were for executing programs, not editing text\u201d states a programmer who learned the skills according to the original \u201cdry\u201d method, writing on a yellow legal pad.", "Going back even further into the 1840s, we can look to Ada Lovelace, the first programmer, famously known for her work on Charles Babbage\u2019s mechanical general-purpose computer, the Analytical Engine. Ada wrote the world\u2019s first algorithm without ever having used a computer. In the beginning, of course, there were no computers. People invented computers, not the other way around. It\u2019s clear we can teach programming, computer science and coding without computers.", "There\u2019s a fascinating research study about children in rural India called Of Elephants and Nested Loops: How to Introduce Computing to Youth in Rural India. Elephants were used (representative ones, not real ones) because many of the kids had likely not seen a computer, but were familiar with the idea of an elephant trainer giving instructions to be carried out by an elephant. Nested loops is a concept in programming that refers to repeated patterns that are part of larger repeated patterns.", "\u201cThough we all struggle with the feeling that technology controls us (rather than us controlling it), we must also recognize that the global poor have no voice where design decisions are made. They are not in the conversations, companies, conferences or forums along with those who make the technology that run, say, the system they need to claim government grants, or bank online, or even communicate with family and watch entertainment. As they fall to the far end of being receivers not producers, we feel it especially important to find ways to shift this and help them become makers.\u201d [1]", "The researchers\u2019 game, called Haathi Mera Saathi (My Elephant Friend), proved to be an effective approach for taking the children from a state of having no experience with computers to a state where they create interactive applications in a Java based environment. There were several actionable keys to success identified by the researchers.", "One is a need for physicality and tangibility in the early stages of learning to code. Kids sometimes have trouble knowing right from left, so they all started by practicing moves themselves on a large physical gameboard. Then they moved to a small paper gameboard with pieces and instructions that are mapped to actual programming code. Then they moved on to Java processing. The physical representations were critical to put a picture in the childrens\u2019 minds of what was actually happening. By the time the kids were typing, they knew what they were typing, or what it represented, thinking back to the physical, tangible representation of the ideas.", "Another actionable key to success was using localized, understandable metaphors. In the West, a popular introductory coding language is Scratch, developed by MIT and used my many on code.org. Scratch is a block based language that kids can understand. They can look at the physical blocks (not like blocks of wood, but self contained blocks of code) and understand what is going on. Kids use Scratch to make cartoons dance and music loop repeatedly and lots of other fun stuff. Like a really mind bending Non-Euclidean Lemon Grab Experiment.", "\u201cMIT\u2019s Scratch is one of the most notable examples of mini languages, embodying the constructionist ideal of a learner oriented environment offering a rich graphical programming environment. Its interface is easy-to-learn yet we feel there is a lot of scope for creating learning environments that lower the bar even further, especially for third world youth, by making it less abstract and more concrete.\u201d[2]", "The researchers needed to get even more basic than Scratch to get rural youth in India to understand the foundational ideas of programming. Instead, they used paper cutouts of elephants, trees and food and then used basic instruction cards that had helpful coding notation included. And it worked.", "Another recent study called To Scratch Or Not To Scratch?: A Controlled Experiment Comparing Plugged First And Unplugged First Programming Lessons paired two groups of elementary school children, aged 8 to 12. Unlike the study Of Elephants and Nested Loops, the researchers in this study worked with participant children who had no problem accessing computers or understanding how to use them. Rather, the researchers of this study questioned when was the right time to introduce computers into the childrens\u2019 computer science education.", "One group of kids received 4 weeks of unplugged computer science lessons while the other received 4 weeks of traditional plugged in computer science lessons. Then both groups received 4 weeks of Scratch programming lessons.", "\u201cAfter eight weeks there was no difference between the two groups in their mastering of programming concepts. However, the group that started with unplugged lessons was more confident of their ability to understand the concepts \u2014 they demonstrated better self-efficacy beliefs. Furthermore, the children in the unplugged first group used a wider selection of Scratch blocks.\u201d[3]", "There are dozens of Scratch blocks that fall in categories like motion, looks, sound, event, control, sensing, operators and variables. As you might imagine, kids could do fine working with just a subset of the blocks, especially at first. The children that learned unplugged computer science first went on to explore a wider array of different block types, and were more confident doing so.", "The actionable finding from To Scratch Or Not To Scratch is that starting with unplugged teaching strategies can lead to a more nuanced understanding of programming concepts, even among elementary school learners who have regular access to technology. Kids and adults on both sides of the digital divide can benefit from working offline to learn concepts key to a later career in computer science.", "All of this is a great exercise in history and research but doesn\u2019t specifically answer the tougher question. How exactly can we use this reframed thinking to support some of the most digitally disconnected learners on earth \u2014 incarcerated Americans \u2014 to get a foothold into well paying careers that use data science, computational thinking, computer science and programming?", "At Level, we send small booklets directly to people in prison through the US Mail. Doing so, we can reach even incarcerated Americans in solitary confinement and maximum security \u2014 inmates who would never be allowed in a prison education or job training class. So the thing we have to work with is printed paper. No Raspberry Pi. No microbit. No nothing except printed paper. No staples in the paper. Not even blank paper (yes, really).", "During COVID-19, non-essential programs in prisons across most of the country \u2014 including college classes and most other educational courses \u2014 have been suspended to prevent the spread of COVID-19 both into and out of prisons. Many incarcerated individuals are confined to their cells for 23 hours a day and are cut off from traditional educational or career training classes. Even before COVID-19, there was no computer lab that incarcerated men and women could go to.", "So these little printed paper guides are the medium we have. The question now has been reduced down to this \u2014 how far can we go with unplugged computer science training to give instruction to adults without computers? Can we give just a basic introduction to computational thinking? Can we actually get into programming? If so, what does that look like? How can learners check their work? How can they de-bug their code?", "Here\u2019s what we\u2019ve learned from the previous research summarized earlier in this story:", "In addition, here\u2019s what we\u2019ve learned from our past experience working with incarcerated men and women:", "The giant challenge is that all of the unplugged strategies discussed in this article assume that at some point, the learners will integrate their unplugged learning with traditional plugged in methods.", "Tim Bell, when reviewing this article, noted, \u201cJust to clarify \u2014 the evidence is that we should start with unplugged, but moving to actually programming a computer is also important.\u201d His dry, slightly cheeky New Zealand humor is pronounced. Yes, at some point, we need to move on to actually programming a computer. Is that still true, though, when you\u2019re in prison? We\u2019re going to figure that out.", "We\u2019re looking for brave, forward looking and optimistic contributors and partners who are willing to take on a big challenge for a big opportunity. If you\u2019re interested in helping out or joining forces or just want to keep an idea on our progress, hook up with us on our website and our Twitter. We\u2019re excited to partner with Jesse Mostipak on creating these guides, so keep an eye on her Twitter as well. We\u2019re really thrilled to make progress towards these unexplored opportunities.", "[1, 2] R. Unnikrishnan, N. Amrita, Alexander Muir, and Bhavani Rao. 2016. Of Elephants and Nested Loops: How to Introduce Computing to Youth in Rural India. In Proceedings of the The 15th International Conference on Interaction Design and Children (IDC \u201916). Association for Computing Machinery, New York, NY, USA, 137\u2013146.", "[3] Felienne Hermans and Efthimia Aivaloglou. 2017. To Scratch or not to Scratch? A controlled experiment comparing plugged first and unplugged first programming lessons. In Proceedings of the 12th Workshop on Primary and Secondary Computing Education (WiPSCE \u201917). Association for Computing Machinery, New York, NY, USA, 49\u201356.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Managing Director @ Level \u2014 a new nonprofit that creates and mass distributes free educational material for people in prison. More at learnlevel.org"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fc455baca7f19&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----c455baca7f19--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c455baca7f19--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@axlright?source=post_page-----c455baca7f19--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@axlright?source=post_page-----c455baca7f19--------------------------------", "anchor_text": "Alex Wright"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F729227da12b5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&user=Alex+Wright&userId=729227da12b5&source=post_page-729227da12b5----c455baca7f19---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc455baca7f19&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc455baca7f19&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://learnlevel.org/", "anchor_text": "Level"}, {"url": "https://thelastmile.org/", "anchor_text": "The Last Mile"}, {"url": "https://www.un-loop.org/", "anchor_text": "Unloop"}, {"url": "https://www.insidecdcr.ca.gov/?s=education", "anchor_text": "California Department of Corrections and Rehabilitation"}, {"url": "https://commons.wikimedia.org/w/index.php?curid=70317285", "anchor_text": "public domain"}, {"url": "https://unsplash.com/@grakozy?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Greg Rakozy"}, {"url": "https://unsplash.com/s/photos/astronomy?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://commons.wikimedia.org/wiki/File:Diagram_for_the_computation_of_Bernoulli_numbers.jpg", "anchor_text": "Public domain"}, {"url": "https://twitter.com/vboykis/status/830587985087365121?s=20", "anchor_text": "tweet by programmer Vicki Boykis"}, {"url": "https://veekaybee.github.io/2017/02/22/being-a-woman-in-programming-in-the-soviet-union/", "anchor_text": "Being A Woman In Programming In The Soviet Union"}, {"url": "https://twitter.com/old_sound/status/1275624186682187776?s=20", "anchor_text": "tweet by programmer Alvaro Videla"}, {"url": "https://news.ycombinator.com/item?id=10171469", "anchor_text": "Computers were for executing programs, not editing text"}, {"url": "https://en.wikipedia.org/wiki/Ada_Lovelace#/media/File:Diagram_for_the_computation_of_Bernoulli_numbers.jpg", "anchor_text": "the world\u2019s first algorithm"}, {"url": "http://ammachilabs.org", "anchor_text": "AMMACHI labs"}, {"url": "https://dl.acm.org/doi/pdf/10.1145/2930674.2930678", "anchor_text": "Of Elephants and Nested Loops: How to Introduce Computing to Youth in Rural India"}, {"url": "http://ammachilabs.org", "anchor_text": "AMMACHI labs"}, {"url": "https://scratch.mit.edu/projects/411192040/", "anchor_text": "Non-Euclidean Lemon Grab Experiment"}, {"url": "https://scratch.mit.edu/users/griffpatch/", "anchor_text": "griffpatch"}, {"url": "https://scratch.mit.edu/", "anchor_text": "Scratch"}, {"url": "https://code.org/", "anchor_text": "code.org"}, {"url": "https://scratch.mit.edu/projects/411192040/", "anchor_text": "Non-Euclidean Lemon Grab Experiment"}, {"url": "https://dl.acm.org/doi/abs/10.1145/3137065.3137072", "anchor_text": "To Scratch Or Not To Scratch?: A Controlled Experiment Comparing Plugged First And Unplugged First Programming Lessons"}, {"url": "https://learnlevel.org/", "anchor_text": "website"}, {"url": "https://twitter.com/levellearning", "anchor_text": "Twitter"}, {"url": "https://twitter.com/kierisi", "anchor_text": "Jesse Mostipak"}, {"url": "https://doi.org/10.1145/2930674.2930678", "anchor_text": "Of Elephants and Nested Loops: How to Introduce Computing to Youth in Rural India"}, {"url": "https://doi.org/10.1145/3137065.3137072", "anchor_text": "To Scratch or not to Scratch? A controlled experiment comparing plugged first and unplugged first programming lessons"}, {"url": "https://medium.com/tag/data-science?source=post_page-----c455baca7f19---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/prison?source=post_page-----c455baca7f19---------------prison-----------------", "anchor_text": "Prison"}, {"url": "https://medium.com/tag/education?source=post_page-----c455baca7f19---------------education-----------------", "anchor_text": "Education"}, {"url": "https://medium.com/tag/programming?source=post_page-----c455baca7f19---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/creative-commons?source=post_page-----c455baca7f19---------------creative_commons-----------------", "anchor_text": "Creative Commons"}, {"url": "http://creativecommons.org/publicdomain/zero/1.0/", "anchor_text": "No rights reserved"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc455baca7f19&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&user=Alex+Wright&userId=729227da12b5&source=-----c455baca7f19---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc455baca7f19&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&user=Alex+Wright&userId=729227da12b5&source=-----c455baca7f19---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc455baca7f19&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c455baca7f19--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fc455baca7f19&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----c455baca7f19---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----c455baca7f19--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----c455baca7f19--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----c455baca7f19--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----c455baca7f19--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----c455baca7f19--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----c455baca7f19--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----c455baca7f19--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----c455baca7f19--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@axlright?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@axlright?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Alex Wright"}, {"url": "https://medium.com/@axlright/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "83 Followers"}, {"url": "http://learnlevel.org", "anchor_text": "learnlevel.org"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F729227da12b5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&user=Alex+Wright&userId=729227da12b5&source=post_page-729227da12b5--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F729227da12b5%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-teach-programming-to-people-in-prison-without-computers-c455baca7f19&user=Alex+Wright&userId=729227da12b5&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}