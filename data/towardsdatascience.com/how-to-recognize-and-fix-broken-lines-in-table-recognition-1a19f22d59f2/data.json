{"url": "https://towardsdatascience.com/how-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2", "time": 1683012487.052104, "path": "towardsdatascience.com/how-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2/", "webpage": {"metadata": {"title": "How to recognize and fix broken lines in table recognition | by Hucker Marius | Towards Data Science", "h1": "How to recognize and fix broken lines in table recognition", "description": "When documents are digitalized via scanning or via photo, the image quality can suffer from wrong settings or bad conditions. In the case of table recognition, this can lead to a broken table\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/a-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec", "anchor_text": "click here", "paragraph_index": 3}, {"url": "https://towardsdatascience.com/understanding-the-basics-of-digital-image-processing-and-computer-vision-using-opencv-8bc0e67243c8", "anchor_text": "click here", "paragraph_index": 6}, {"url": "https://towardsdatascience.com/understanding-the-basics-of-digital-image-processing-and-computer-vision-using-opencv-8bc0e67243c8", "anchor_text": "Click Here", "paragraph_index": 7}, {"url": "https://towardsdatascience.com/a-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec", "anchor_text": "other article", "paragraph_index": 15}, {"url": "https://medium.com/@hucker.marius/membership", "anchor_text": "https://medium.com/@hucker.marius/membership", "paragraph_index": 18}], "all_paragraphs": ["When documents are digitalized via scanning or via photo, the image quality can suffer from wrong settings or bad conditions. In the case of table recognition, this can lead to a broken table structure. Consequently, some lines might have light flaws or even holes and the table as a whole is not recognized as a coherent system. Sometimes the tables are also created without lines on some sides of the cells. In this case, the system closes the lines with the lines of the cells above. There is a great variety of tables and cell types and as so often the proposed code might not work perfectly for all. Nonetheless, with small adaptations its useful for many cases.", "Most cell recognition algorithms are based on lines and cell structure. Not having lines leads to a bad recognition rate due to \u201cforgotten\u201d cells. The same is the case for this approach. The lines are necessary. In case your table does not have clearly recognizable lines it won\u2019t work. But now, let\u2019s take a look at the code!", "First, we need to do the imports. In this case, it is restricted only to two imports: OpenCV and NumPy.", "Then we need to load the image/document containing the table. In case it is a whole document with text surrounding the table you need to recognize the table first and cut the image to the table size. (To read more about table recognition and cutting to the table size, click here.)", "As you can see in the input image the lines of the cells in the second row are not fully connected. In table recognition, the second row would not be recognized and considered by the algorithm because the cells are not a closed box. The solution proposed in this article works not only for this case of gaps. It works also for other broken lines or holes in tables.", "Now, we need to obtain the size of the image (height and width) and store it in the variables hei and wid.", "The next step is the grayscaling and blurring via a Gaussian Filter. This helps in the recognition of the lines. For more on grayscaling, click here.", "Then we need to threshold our image. If you want to learn a bit more about thresholding, you can read about it in this article: Click Here (It\u2019s all the way down to the section Binarizing an image).", "The findContours algorithm of OpenCV is then used to get the position of all contours. For all contours, a bounding rectangle is drawn to create the boxes/cells of the table. The boxes are then stored in the list box with the four values x, y, width, height.", "All heights, widths, x\u2019s and y\u2019s are then separately stored in lists and the minimum height, width and x and y are computed. Furthermore, the maximum y and x are necessary.", "The stored values are now used to understand where the table is located. The minimum y value can be used to get the uppermost row of the table, which can be regarded as the starting point of the table. The minimum x value is the left edge of the table. To get the approximate size we need to retrieve the maximum y value, which is the cell or row at the bottom of the table. The y-value of the last row represents the upper edge of the cell and not the bottom of the cell. To regard the whole size of the cell and the table it is necessary to add the last rows cell height to the maximum y to retrieve the full height of the table. The maximum x will be the last column and consecutively, the right-most cell/row of the table. The x-value is the left edge of each cell and consecutively, we need to add the width of the last column to the maximum x-value to retrieve the full width of the table.", "In the next step, all horizontal and vertical lines are extracted and stored separately. This is done by creating a kernel which thresholds and applies morphological operations. The horizontal kernel has a size of (50,1). You can play around with the size depending on the size of your image. The vertical kernel has a size of (1,50).", "Morphological operations perform transformations of the detected structures based on their geometry (Soille, p.50, 1998). Dilation is one of the most applied and most basic morphological operations. If at least one pixel under the kernel is white, the pixel being viewed of the original image will be considered white. Consequently, the white areas are enlarged. Please be aware that due to inversion the background is black and foreground white, meaning that the table lines are currently white. The dilation can be seen as the most important step. The holes and broken lines are now repaired and for further table recognition, all cells will be regarded.", "Both masks, the horizontal and the vertical, are then merged to one table using the bitwise_or operation of OpenCV. To retrieve the original back- and foreground the image is inverted by subtracting the cv2.bitwise_or from 255.", "In case the table is surrounded by text and not standing alone (in my example it\u2019s not surrounded), we cut it out and set it on a white background. Now we need the size of the table retrieved earlier. We cut the final image to the table size by using the minimum y (which is the edge at top), the maximum y + the height of the maximum y cells (which is the edge at the bottom), the minimum x (which is the left edge) and the maximum x + the width of the maximum x cells (which is the right edge). The image is then cropped to the size of the table. A new background of the original size of the document is created and completely filled with white pixels. The center of the image is retrieved and the repaired table is merged with the white background and set right into the center of the image.", "This is the result. The method can be used for multiple typed of broken lines, gaps, and holes in tables. The result is the basis for further table recognition as explained in my other article. The explained method was applied on an empty table. You can also apply it on a table containing text or surrounded by text. For a table containing text, it is still necessary to merge the original image containing a table with data with the final image with repaired holes. This can be done with a OpenCV bitwise operation and should not be to complex.", "I hope you enjoyed my tutorial and can use this for your own projects.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist @Atruvia | Tech & Marketing Enthusiast from Karlsruhe, Germany https://medium.com/@hucker.marius/membership"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1a19f22d59f2&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@hucker.marius?source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@hucker.marius?source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": "Hucker Marius"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F979676b8abe8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&user=Hucker+Marius&userId=979676b8abe8&source=post_page-979676b8abe8----1a19f22d59f2---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1a19f22d59f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1a19f22d59f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/photos/fKAjOxgZNPg", "anchor_text": "unsplash"}, {"url": "https://unsplash.com/@agebarros", "anchor_text": "Ag\u00ea Barros"}, {"url": "https://towardsdatascience.com/a-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec", "anchor_text": "click here"}, {"url": "https://towardsdatascience.com/understanding-the-basics-of-digital-image-processing-and-computer-vision-using-opencv-8bc0e67243c8", "anchor_text": "click here"}, {"url": "https://towardsdatascience.com/understanding-the-basics-of-digital-image-processing-and-computer-vision-using-opencv-8bc0e67243c8", "anchor_text": "Click Here"}, {"url": "https://towardsdatascience.com/a-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec", "anchor_text": "other article"}, {"url": "https://medium.com/@hucker.marius/membership", "anchor_text": "Get started"}, {"url": "https://medium.com/tag/table-recognition?source=post_page-----1a19f22d59f2---------------table_recognition-----------------", "anchor_text": "Table Recognition"}, {"url": "https://medium.com/tag/opencv?source=post_page-----1a19f22d59f2---------------opencv-----------------", "anchor_text": "Opencv"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----1a19f22d59f2---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/image-processing?source=post_page-----1a19f22d59f2---------------image_processing-----------------", "anchor_text": "Image Processing"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----1a19f22d59f2---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1a19f22d59f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&user=Hucker+Marius&userId=979676b8abe8&source=-----1a19f22d59f2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1a19f22d59f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&user=Hucker+Marius&userId=979676b8abe8&source=-----1a19f22d59f2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1a19f22d59f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F1a19f22d59f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----1a19f22d59f2---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----1a19f22d59f2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@hucker.marius?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@hucker.marius?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Hucker Marius"}, {"url": "https://medium.com/@hucker.marius/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.6K Followers"}, {"url": "https://medium.com/@hucker.marius/membership", "anchor_text": "https://medium.com/@hucker.marius/membership"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F979676b8abe8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&user=Hucker+Marius&userId=979676b8abe8&source=post_page-979676b8abe8--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fa76517c2b81d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2&newsletterV3=979676b8abe8&newsletterV3Id=a76517c2b81d&user=Hucker+Marius&userId=979676b8abe8&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}