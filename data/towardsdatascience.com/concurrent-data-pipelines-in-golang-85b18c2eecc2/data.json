{"url": "https://towardsdatascience.com/concurrent-data-pipelines-in-golang-85b18c2eecc2", "time": 1683008393.2662568, "path": "towardsdatascience.com/concurrent-data-pipelines-in-golang-85b18c2eecc2/", "webpage": {"metadata": {"title": "Concurrent data pipelines in golang | Towards Data Science", "h1": "Concurrent data pipelines in Golang", "description": "Let's see how we can leverage golang's concurrency model, with goroutines and channels, to create concurrent data pipelines for data intensive applications."}, "outgoing_paragraph_urls": [{"url": "https://levelup.gitconnected.com/goroutines-and-channels-concurrent-programming-in-go-9f9f8495c34d", "anchor_text": "here", "paragraph_index": 4}, {"url": "https://github.com/RicardoLinck/data-pipeline-golang", "anchor_text": "my github repository", "paragraph_index": 8}, {"url": "https://levelup.gitconnected.com/goroutines-and-channels-concurrent-programming-in-go-9f9f8495c34d", "anchor_text": "golang\u2019s concurrency model", "paragraph_index": 19}, {"url": "https://github.com/ricardolinck", "anchor_text": "https://github.com/ricardolinck", "paragraph_index": 21}], "all_paragraphs": ["Data is a vital piece for all applications. Applications mainly receive data, process it and then create some sort of output out of it. The amount of data that is available nowadays is immense, which brings many challenges when trying to make sense out of it and transforming it into useful information. Besides the usual data system process, we also have to consider the data that is generated by the execution of such systems, like logs and metrics. Everything is data.", "Therefore, there\u2019s a growing need for data driven applications. It\u2019s not unusual to have systems only dealing with moving and transforming data. From one place to another or from one structure to another. That is even more common in distributed systems, because each system generates data for their own purpose, structured the way it\u2019s easier for them to process. However, those systems still have to communicate, so the data has to be transformed and moved. Moreover, sometimes the data has to be transferred to a different environment, or to a different platform. Even more trouble!", "There are very sophisticated tools to do this job, but very often they are a real pain to configure and maintain, not to mention the costs involved. Thus they are not always the best option. Some times, depending on the use case, you can create your own pipelines to move data with a simpler solution. In this article we are going to see how to build data pipelines using golang.", "Pipelines are a really good way to express how we want to deal with data. By definition, pipelines are a sequence of steps or actions that are executed. Usually the output of a previous step is used as the input for the following step. When pipelines are designed, each step doesn\u2019t have to worry about other steps\u2019 work, relying only on the inputs and outputs contracts. This makes the design very robust, as it\u2019s based on contracts and abstractions. Also it\u2019s a very flexible design as you can add more steps as long as you don\u2019t break the contracts. Fun!", "There are countless ways of doing it. In this article we will focus on how we can leverage go\u2019s concurrency model, which I wrote about here, to create data pipelines.", "As we mentioned earlier, data pipelines are a sequence of steps that are executed using the output of a previous step as the input for the next one. That sound like a really good usage for goroutines and channels. We can create each step as a goroutine, and the communications between them as channels. It means that our data pipeline can execute concurrently, which is a great benefit if used wisely. Let\u2019s jump to an example to make things easier.", "In this example we are going to create a simple pipeline for reading some GUID\u2019s from a text file, transform them into the input data structure we are going to use for processing, fetch related data from an external service and finally persist the data in a data storage using a batch operation. Here\u2019s what the high level workflow looks like:", "As we can see on this diagram, each operation is going to be created using a goroutine (represented by gophers) and tied together using channels. The whole idea on how to do that is that each function (besides the data generator) will receive its input channel as parameter and return the output channel as the return value of the function. Inside each function we are going to spin a goroutine to actually listen to the input channel and act on each one of the items received, as well as send the result on the output channel.", "All channels are unbuffered for simplicity, it means that each one of the GUID\u2019s stored on the guids.txt file will pass trough the pipeline individually. The only batch operation will be at the very end, where we persist them into batches to the data storage. Also for simplicity the error handling has been simplified, bear in mind that for a production pipeline you would want to make it more robust. Alright, enough explanation, let\u2019s get cracking with this example. You can find the entire source code in my github repository.", "Here\u2019s what the guids.txt file looks like:", "The first piece of our pipeline is to read each line of that file, parse it into auuid.UUID type and send it over on a channel. Here\u2019s how this function can look like:", "The important part here is that we are creating the output channel (line 13) and returning it (line 37), as well as using it on the goroutine that actually does the job of reading the file and sending the parsed uuid.UUID values (line 15). That is very powerful, because it allow us to use that channel as input for another function straight away, without worrying on how the internal job is done. Also important is the fact that we are closing the channel once the job is done, this way we can safely use the for range statement on that channel without worrying about infinite loops. Let\u2019s jump on to our second step, preparing the data:", "Here the function signature changes slightly. We are receiving the channel we want to use as input. However the internal technique of creating the channel output channel (line 16) and returning it (line 26) is still the same. For this specific step we are only using the uuid.UUID received on the input channel and transforming them into a dummy struct inputData as well as logging what is being processed. This is a very basic example, but it illustrates what you can do for data transforming (a very common step in data pipelines) you only have to change apply the same logic for any struct you want. Let\u2019s check a more in depth example with our third step, data fetching:", "This function uses pretty much the same technique as before, we receive an input channel and return an output channel. In this case I decided to emulate the external call for simplicity, so we are actually generating in memory random related values for a given GUID. The interesting thing here is that we are actually using concurrency to call this (fake) external service. This allows the rest of the pipeline to still run while we are waiting for a specific value to return form the external value. We still want to wait for all the calls to the external service to finish before closing our output channel (saying that our job for this piece of the pipeline is done).", "To do that I introduced a very common pattern when working with asynchronous calls that need to be synchronised back at some point, using sync.WaitGroup. We wait (synchronise) right before calling the close(oc) on line 29. This way we can make sure that all calls to the external service are finished before closing the channel. It happens because this specific step may run slower than the prior step on the data pipeline, as it depends on external services, so all values may be received from the input channel before we can process all of them, calling the external service.", "That was a very interesting step, let\u2019s have a look on the last step of our pipeline, the data store:", "In this step we are introducing a different technique, batching. This may be useful for services where calling each operation for each item is not very efficient in terms of performance or cost. So in order to workaround that we can batch some items together. I created a simple batching mechanism based on the amount of data we want to add to the batch. You can use any mechanism you want, I\u2019m sure the logic will be very similar. In this case we are batching 7 items at once, so every time we have 7 items to persist to the database, we call the persisting function (fake) and open the next batch. Before finishing we are checking if there is an open batch and save it in that case. Also we are returning a channel with the information of what items were saved and a timestamp. Now we only need to put this pipeline together:", "As you can see we call the pipeline in a reversed order. You can change the parameters to make it more clear if you want. However for this case it is working almost like a decorator pattern. If we start with the generateData() function, that is the one that receives no channels but returns one. So the returned channel from that function is used as input parameter for prepareData. The output channel from that function is used as parameter for the fetchData. The output channel is used finally by saveData as input. The last function also returns a channel, that we are going to range over to print which items have been saved. If we execute this example, we are going to see something like:", "We can see that the prepareData function logged 9 items that were ready for being processed, and the main function logged that 2 batches were actually saved, the first one containing 7 items and the second one containing 2 items.", "Creating data pipelines is a very common task for engineers dealing with data driven or data intensive applications. Data pipelines are essential to transform and move data from one system to another, one platform to another or even one environment to another. If we understand golang\u2019s concurrency model we can leverage that to create concurrent data pipelines in a very clean and easy way. The main pattern used here is to create and return a channel for each step, this way we can easily pipe all steps together. Using this paradigm we can boost our pipeline with all sort of cools things, like parallel execution for steps, multiple workers for a specific pipeline step, so on.", "This technique is not always the right choice, and there are many tools available out there that can be an easier solution depending on each case.", "Software Engineer. Distributed systems lover, golang and .net enthusiast. Curious by nature. https://github.com/ricardolinck"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F85b18c2eecc2&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://ricardo-linck.medium.com/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": ""}, {"url": "https://ricardo-linck.medium.com/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "Ricardo Linck"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb032d91665cf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&user=Ricardo+Linck&userId=b032d91665cf&source=post_page-b032d91665cf----85b18c2eecc2---------------------post_header-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F85b18c2eecc2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&user=Ricardo+Linck&userId=b032d91665cf&source=-----85b18c2eecc2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F85b18c2eecc2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&source=-----85b18c2eecc2---------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://unsplash.com/@mbaumi?utm_source=medium&utm_medium=referral", "anchor_text": "Mika Baumeister"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://levelup.gitconnected.com/goroutines-and-channels-concurrent-programming-in-go-9f9f8495c34d", "anchor_text": "here"}, {"url": "https://github.com/RicardoLinck/data-pipeline-golang", "anchor_text": "my github repository"}, {"url": "https://levelup.gitconnected.com/goroutines-and-channels-concurrent-programming-in-go-9f9f8495c34d", "anchor_text": "golang\u2019s concurrency model"}, {"url": "https://medium.com/tag/golang?source=post_page-----85b18c2eecc2---------------golang-----------------", "anchor_text": "Golang"}, {"url": "https://medium.com/tag/data-science?source=post_page-----85b18c2eecc2---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----85b18c2eecc2---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-development?source=post_page-----85b18c2eecc2---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----85b18c2eecc2---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F85b18c2eecc2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&user=Ricardo+Linck&userId=b032d91665cf&source=-----85b18c2eecc2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F85b18c2eecc2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&user=Ricardo+Linck&userId=b032d91665cf&source=-----85b18c2eecc2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F85b18c2eecc2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://ricardo-linck.medium.com/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb032d91665cf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&user=Ricardo+Linck&userId=b032d91665cf&source=post_page-b032d91665cf----85b18c2eecc2---------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe7a379ee0229&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&newsletterV3=b032d91665cf&newsletterV3Id=e7a379ee0229&user=Ricardo+Linck&userId=b032d91665cf&source=-----85b18c2eecc2---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://ricardo-linck.medium.com/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "Written by Ricardo Linck"}, {"url": "https://ricardo-linck.medium.com/followers?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "408 Followers"}, {"url": "https://towardsdatascience.com/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://github.com/ricardolinck", "anchor_text": "https://github.com/ricardolinck"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb032d91665cf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&user=Ricardo+Linck&userId=b032d91665cf&source=post_page-b032d91665cf----85b18c2eecc2---------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe7a379ee0229&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconcurrent-data-pipelines-in-golang-85b18c2eecc2&newsletterV3=b032d91665cf&newsletterV3Id=e7a379ee0229&user=Ricardo+Linck&userId=b032d91665cf&source=-----85b18c2eecc2---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/immutability-in-golang-7a13199060bb?source=author_recirc-----85b18c2eecc2----0---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://ricardo-linck.medium.com/?source=author_recirc-----85b18c2eecc2----0---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://ricardo-linck.medium.com/?source=author_recirc-----85b18c2eecc2----0---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "Ricardo Linck"}, {"url": "https://levelup.gitconnected.com/?source=author_recirc-----85b18c2eecc2----0---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/immutability-in-golang-7a13199060bb?source=author_recirc-----85b18c2eecc2----0---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "Immutability in GolangHow to harness immutability to enhance readability and stability in your Golang app"}, {"url": "https://levelup.gitconnected.com/immutability-in-golang-7a13199060bb?source=author_recirc-----85b18c2eecc2----0---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "\u00b76 min read\u00b7Jun 4, 2020"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2F7a13199060bb&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fimmutability-in-golang-7a13199060bb&user=Ricardo+Linck&userId=b032d91665cf&source=-----7a13199060bb----0-----------------clap_footer----2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/immutability-in-golang-7a13199060bb?source=author_recirc-----85b18c2eecc2----0---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "4"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7a13199060bb&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fimmutability-in-golang-7a13199060bb&source=-----85b18c2eecc2----0-----------------bookmark_preview----2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----85b18c2eecc2----1---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://barrmoses.medium.com/?source=author_recirc-----85b18c2eecc2----1---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://barrmoses.medium.com/?source=author_recirc-----85b18c2eecc2----1---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "Barr Moses"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----85b18c2eecc2----1---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----85b18c2eecc2----1---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "Zero-ETL, ChatGPT, And The Future of Data EngineeringThe post-modern data stack is coming. Are we ready?"}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----85b18c2eecc2----1---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "9 min read\u00b7Apr 3"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F71849642ad9c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fzero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c&user=Barr+Moses&userId=2818bac48708&source=-----71849642ad9c----1-----------------clap_footer----2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----85b18c2eecc2----1---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "21"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F71849642ad9c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fzero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c&source=-----85b18c2eecc2----1-----------------bookmark_preview----2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----85b18c2eecc2----2---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://medium.com/@mattchapmanmsc?source=author_recirc-----85b18c2eecc2----2---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://medium.com/@mattchapmanmsc?source=author_recirc-----85b18c2eecc2----2---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "Matt Chapman"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----85b18c2eecc2----2---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----85b18c2eecc2----2---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "The Portfolio that Got Me a Data Scientist JobSpoiler alert: It was surprisingly easy (and free) to make"}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----85b18c2eecc2----2---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "\u00b710 min read\u00b7Mar 24"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F513cc821bfe4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4&user=Matt+Chapman&userId=bf7d13fc53db&source=-----513cc821bfe4----2-----------------clap_footer----2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----85b18c2eecc2----2---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "42"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F513cc821bfe4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4&source=-----85b18c2eecc2----2-----------------bookmark_preview----2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://medium.com/swlh/hedged-requests-tackling-tail-latency-9cea0a05f577?source=author_recirc-----85b18c2eecc2----3---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://ricardo-linck.medium.com/?source=author_recirc-----85b18c2eecc2----3---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://ricardo-linck.medium.com/?source=author_recirc-----85b18c2eecc2----3---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "Ricardo Linck"}, {"url": "https://medium.com/swlh?source=author_recirc-----85b18c2eecc2----3---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "The Startup"}, {"url": "https://medium.com/swlh/hedged-requests-tackling-tail-latency-9cea0a05f577?source=author_recirc-----85b18c2eecc2----3---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "Hedged requests \u2014 Tackling tail latencyUnderstanding how to improve systems tail latency through hedged requests. Implementation in golang."}, {"url": "https://medium.com/swlh/hedged-requests-tackling-tail-latency-9cea0a05f577?source=author_recirc-----85b18c2eecc2----3---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": "\u00b710 min read\u00b7May 20, 2020"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fswlh%2F9cea0a05f577&operation=register&redirect=https%3A%2F%2Fmedium.com%2Fswlh%2Fhedged-requests-tackling-tail-latency-9cea0a05f577&user=Ricardo+Linck&userId=b032d91665cf&source=-----9cea0a05f577----3-----------------clap_footer----2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://medium.com/swlh/hedged-requests-tackling-tail-latency-9cea0a05f577?source=author_recirc-----85b18c2eecc2----3---------------------2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "2"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9cea0a05f577&operation=register&redirect=https%3A%2F%2Fmedium.com%2Fswlh%2Fhedged-requests-tackling-tail-latency-9cea0a05f577&source=-----85b18c2eecc2----3-----------------bookmark_preview----2a9aeaaa_fd86_43a2_81b4_ed0e822f7fe5-------", "anchor_text": ""}, {"url": "https://ricardo-linck.medium.com/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "See all from Ricardo Linck"}, {"url": "https://towardsdatascience.com/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "See all from Towards Data Science"}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://alexcancode.medium.com/?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://alexcancode.medium.com/?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Alexander Nguyen"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Why I Keep Failing Candidates During Google Interviews\u2026They don\u2019t meet the bar."}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "\u00b74 min read\u00b7Apr 13"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Fdc8f865b2c19&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwhy-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19&user=Alexander+Nguyen&userId=a148fd75c2e9&source=-----dc8f865b2c19----0-----------------clap_footer----aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "91"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fdc8f865b2c19&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwhy-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19&source=-----85b18c2eecc2----0-----------------bookmark_preview----aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/write-go-like-a-senior-engineer-eee7f03a1883?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://jacobistyping.medium.com/?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://jacobistyping.medium.com/?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Jacob Bennett"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/write-go-like-a-senior-engineer-eee7f03a1883?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Write Go like a senior engineerWhat I wish I knew when I started writing Go"}, {"url": "https://levelup.gitconnected.com/write-go-like-a-senior-engineer-eee7f03a1883?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "\u00b77 min read\u00b7Dec 12, 2022"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Feee7f03a1883&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwrite-go-like-a-senior-engineer-eee7f03a1883&user=Jacob+Bennett&userId=630ab5ffdf27&source=-----eee7f03a1883----1-----------------clap_footer----aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/write-go-like-a-senior-engineer-eee7f03a1883?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "7"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Feee7f03a1883&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwrite-go-like-a-senior-engineer-eee7f03a1883&source=-----85b18c2eecc2----1-----------------bookmark_preview----aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/@MTrax/golang-the-ultimate-guide-to-dependency-injection-4556b97f9cbd?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/@MTrax?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/@MTrax?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Matthias Bruns"}, {"url": "https://medium.com/@MTrax/golang-the-ultimate-guide-to-dependency-injection-4556b97f9cbd?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Golang \u2014 The Ultimate Guide to Dependency InjectionComparing manual and framework Dependency Injection"}, {"url": "https://medium.com/@MTrax/golang-the-ultimate-guide-to-dependency-injection-4556b97f9cbd?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "\u00b717 min read\u00b7Mar 2"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2F4556b97f9cbd&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40MTrax%2Fgolang-the-ultimate-guide-to-dependency-injection-4556b97f9cbd&user=Matthias+Bruns&userId=cd3ea1607e37&source=-----4556b97f9cbd----0-----------------clap_footer----aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/@MTrax/golang-the-ultimate-guide-to-dependency-injection-4556b97f9cbd?source=read_next_recirc-----85b18c2eecc2----0---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4556b97f9cbd&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40MTrax%2Fgolang-the-ultimate-guide-to-dependency-injection-4556b97f9cbd&source=-----85b18c2eecc2----0-----------------bookmark_preview----aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/fintechexplained/what-is-event-driven-microservices-architecture-278d9e5adf8a?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/@farhadmalik?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/@farhadmalik?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Farhad Malik"}, {"url": "https://medium.com/fintechexplained?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "FinTechExplained"}, {"url": "https://medium.com/fintechexplained/what-is-event-driven-microservices-architecture-278d9e5adf8a?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "What Is Event-Driven Microservices Architecture?Designing Modern Event-Driven Microservices Applications With Kafka And Docker Containers Suitable For All Levels"}, {"url": "https://medium.com/fintechexplained/what-is-event-driven-microservices-architecture-278d9e5adf8a?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "\u00b713 min read\u00b7Dec 5, 2022"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ffintechexplained%2F278d9e5adf8a&operation=register&redirect=https%3A%2F%2Fmedium.com%2Ffintechexplained%2Fwhat-is-event-driven-microservices-architecture-278d9e5adf8a&user=Farhad+Malik&userId=d9b237bc89f0&source=-----278d9e5adf8a----1-----------------clap_footer----aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/fintechexplained/what-is-event-driven-microservices-architecture-278d9e5adf8a?source=read_next_recirc-----85b18c2eecc2----1---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "1"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F278d9e5adf8a&operation=register&redirect=https%3A%2F%2Fmedium.com%2Ffintechexplained%2Fwhat-is-event-driven-microservices-architecture-278d9e5adf8a&source=-----85b18c2eecc2----1-----------------bookmark_preview----aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/how-to-ensure-idempotence-f436a42bf67d?source=read_next_recirc-----85b18c2eecc2----2---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/@ddwen?source=read_next_recirc-----85b18c2eecc2----2---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/@ddwen?source=read_next_recirc-----85b18c2eecc2----2---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Dwen"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----85b18c2eecc2----2---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/how-to-ensure-idempotence-f436a42bf67d?source=read_next_recirc-----85b18c2eecc2----2---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "How to ensure idempotenceDefinition of idempotency."}, {"url": "https://levelup.gitconnected.com/how-to-ensure-idempotence-f436a42bf67d?source=read_next_recirc-----85b18c2eecc2----2---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "\u00b77 min read\u00b7Dec 1, 2022"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Ff436a42bf67d&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fhow-to-ensure-idempotence-f436a42bf67d&user=Dwen&userId=271a2d52b99c&source=-----f436a42bf67d----2-----------------clap_footer----aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/how-to-ensure-idempotence-f436a42bf67d?source=read_next_recirc-----85b18c2eecc2----2---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff436a42bf67d&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fhow-to-ensure-idempotence-f436a42bf67d&source=-----85b18c2eecc2----2-----------------bookmark_preview----aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://blog.devgenius.io/flyweight-pattern-in-go-4bb59b9e0203?source=read_next_recirc-----85b18c2eecc2----3---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/@josueparra2892?source=read_next_recirc-----85b18c2eecc2----3---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/@josueparra2892?source=read_next_recirc-----85b18c2eecc2----3---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Israel Josu\u00e9 Parra Rosales"}, {"url": "https://blog.devgenius.io/?source=read_next_recirc-----85b18c2eecc2----3---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Dev Genius"}, {"url": "https://blog.devgenius.io/flyweight-pattern-in-go-4bb59b9e0203?source=read_next_recirc-----85b18c2eecc2----3---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "Flyweight Pattern in GoFlyweight is a structural design pattern that allows programs to support large numbers of objects while keeping memory usage low."}, {"url": "https://blog.devgenius.io/flyweight-pattern-in-go-4bb59b9e0203?source=read_next_recirc-----85b18c2eecc2----3---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": "\u00b73 min read\u00b7Jan 4"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fdev-genius%2F4bb59b9e0203&operation=register&redirect=https%3A%2F%2Fblog.devgenius.io%2Fflyweight-pattern-in-go-4bb59b9e0203&user=Israel+Josu%C3%A9+Parra+Rosales&userId=154de6c1e04f&source=-----4bb59b9e0203----3-----------------clap_footer----aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://blog.devgenius.io/flyweight-pattern-in-go-4bb59b9e0203?source=read_next_recirc-----85b18c2eecc2----3---------------------aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4bb59b9e0203&operation=register&redirect=https%3A%2F%2Fblog.devgenius.io%2Fflyweight-pattern-in-go-4bb59b9e0203&source=-----85b18c2eecc2----3-----------------bookmark_preview----aa18d30f_dcdf_4d48_ae41_15d8b4ecf924-------", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "See more recommendations"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=post_page-----85b18c2eecc2--------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}