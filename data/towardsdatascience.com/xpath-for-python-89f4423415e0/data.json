{"url": "https://towardsdatascience.com/xpath-for-python-89f4423415e0", "time": 1683014940.135394, "path": "towardsdatascience.com/xpath-for-python-89f4423415e0/", "webpage": {"metadata": {"title": "XPath For Python | The RegEx of Web | Towards Data Science", "h1": "XPath for Python", "description": "Imagine RegEx, but for webpages \u2014 that is XPath. A massively underappreciated tool in the world of web scraping, here we will learn XPath with Python."}, "outgoing_paragraph_urls": [{"url": "https://developer.mozilla.org/en-US/docs/Web/XPath/Functions", "anchor_text": "many XPath functions", "paragraph_index": 25}, {"url": "https://www.selenium.dev/documentation/en/", "anchor_text": "many other languages", "paragraph_index": 27}, {"url": "https://medium.com/python-in-plain-english/how-to-use-selenium-to-automate-everything-in-the-browser-c18a28750125", "anchor_text": "this article", "paragraph_index": 27}, {"url": "https://webscraper.io/", "anchor_text": "webscraper.io", "paragraph_index": 29}, {"url": "https://twitter.com/jamescalam", "anchor_text": "Twitter", "paragraph_index": 44}, {"url": "https://www.youtube.com/c/jamesbriggs", "anchor_text": "YouTube", "paragraph_index": 44}, {"url": "https://www.youtube.com/c/jamesbriggs", "anchor_text": "https://www.youtube.com/c/jamesbriggs", "paragraph_index": 47}], "all_paragraphs": ["XML path language (XPath) is a massively underappreciated tool in the world of web scraping and automation. Imagine RegEx, but for webpages \u2014 that is XPath.", "Every element of a webpage is organized by the Document Object Model (DOM). The DOM is a tree-like structure, where each element represents a node, with paths to parent and child nodes.", "XPath offers us a language for quickly traversing across this tree. And, like RegEx, we can add logic to our node selection to make our queries more powerful.", "In this article, we will cover:", "First, before we do anything else, we need to understand how we can test our XPath strings. Fortunately, we can do that right here in the web browser.", "I\u2019ll be using Chrome throughout this article, but the procedure is very similar across all modern browsers.", "On our webpage, we open Developer Tools \u2014 either by clicking Fn+12 on Windows or opening it from your browser options menu (see for Chrome above).", "Next, we click ctrl+F to open the search bar within our Elements window. Here we can search by string, selector, or XPath.", "This method is the easiest way to test our XPath queries quickly.", "If our query matches something, that element will be highlighted yellow. Where our query matches multiple elements, we can cycle through them using the arrows to the right of the search bar!", "Let\u2019s start with the very beginning of our query. In the case of //div \u2014 what does the // mean?", "Every XPath query begins at the root of our XML tree \u2014 the very top element. For HTML documents, this is the <html> tag.", "Now, if we write html//div we are saying \u201clook for any descendant node of html that is a div\u201d.", "The result is that both html/div and html/body/div/div/article/div/div will be found with our query. This is because in both cases, we see a div which is a descendant of html.", "Because our XPath query always begins at the root (html), we don\u2019t need to write html//div. Instead, we write //div.", "The // example we just used is called a path expression. There\u2019s a few of these, and they\u2019re super useful:", "With a combination of these path expressions, we can traverse across the XML tree with ease.", "For example, back to our example HTML section \u2014 we can select the a tag by finding the span tag with attribute class=\"u-textScreenReader\", and traversing up the tree to its parent node, like so:", "Every node in our DOM is numbered. If we have a list ul which contains five li items, we can access each of those items specifically by indexing from 1 to 5:", "If we query //ul/li[1] we will return <li>London</li> \u2014 note that values are not zero-indexed. XPath indexing begins at 1.", "An incredibly convenient feature in Chrome (and likely most modern browsers) is the ability to get the XPath of a node directly from the Elements window.", "To do this, we right-click on the element we want the XPath for and click Copy > Copy XPath and paste the XPath for that element. Our span element returns:", "Alternatively, we can copy the full XPath, which provides the full path from the root to our element. For our span element this looks like:", "Now, whether you want to call the following methods \u2018advanced\u2019 or not is debatable.", "However, I justify this because, by using the previous Path Expressions alone, we can traverse the DOM very easily. In many cases, we won\u2019t need anything more. But now and then, these \u2018advanced\u2019 methods can be incredibly useful.", "There are many XPath functions that we won\u2019t cover here, but a few of the most common ones are:", "These functions are just a scratch on the surface of XPath. A few items we haven\u2019t even touched upon (I\u2019ve added links to articles on them though):", "Selenium is the best way to get familiar with XPath in Python (it is available for many other languages too). If you are not familiar with it, I wrote this article covering the setup and basics of the framework \u2014 it\u2019s very easy to work with!", "Once we have Selenium setup, we can select all elements of a webpage that satisfy an XPath query using the find_elements_by_xpath method.", "We\u2019ll try this out on webscraper.io. There, we can see that every item is contained in a div element with class=\"thumbnail\". Here, we\u2019ve highlighted the Acer Aspire product.", "So, back to Selenium and XPath. First, we need to initialize our web driver and navigate to the Web Scraper training site:", "Now, we need to select all div elements with class thumbnail:", "If we print out the value of shop_elems we will return a list of WebElement objects:", "Great, we have our shop container WebElements \u2014 now what? Well, we can treat these objects as individual XML trees.", "We do this using the WebElement get_element method coupled with By.XPATH \u2014 which is a new import:", "Here, we are setting the first instance of div[@class=\"thumbnail\"] as active, and we can use . to select the currently active node in an XPath query.", "We can use this new method to loop through every item container on the page and extract details for each one iteratively!", "Let\u2019s try extracting the item name for each of our WebElements in shop_elems.", "Back in the browser, we can find item names in descendant <a> tags. As there are no other descendant <a> tags, we can select this element with just //a. This gives us //div[@class='thumbnail']//a.", "In our code, the WebElements contained in shop_elems have set div[@class='thumbnail'] as their active node, which we select with .:", "To get the item name, we simply access the text value of our object. We can integrate that into a for-loop to pull every item name from our WebScraper.io e-commerce page:", "And that\u2019s it; we\u2019ve extracted the item name of product on our e-commerce front-page with XPath and Selenium. We can couple this with more XPath queries to extract more information, like the price, rating, number of reviews, etc.", "That\u2019s it for this introduction to XPath and Selenium. We\u2019ve covered:", "As I said before, this just scratches the surface of XPath, and I would definitely recommend working on your own little web scraping/automation projects and learning more!", "I hope you enjoyed the article. If you have any ideas or questions, let me know via Twitter or in the comments below! If you\u2019d like more content like this, I post on YouTube too.", "*All images are by the author unless stated otherwise.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Freelance ML engineer learning and writing about everything. I post a lot on YT https://www.youtube.com/c/jamesbriggs"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F89f4423415e0&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----89f4423415e0--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----89f4423415e0--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://jamescalam.medium.com/?source=post_page-----89f4423415e0--------------------------------", "anchor_text": ""}, {"url": "https://jamescalam.medium.com/?source=post_page-----89f4423415e0--------------------------------", "anchor_text": "James Briggs"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb9d77a4ca1d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&user=James+Briggs&userId=b9d77a4ca1d1&source=post_page-b9d77a4ca1d1----89f4423415e0---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F89f4423415e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F89f4423415e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/getting-started", "anchor_text": "Getting Started"}, {"url": "https://unsplash.com/@davidpaschke?utm_source=medium&utm_medium=referral", "anchor_text": "David Paschke"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "http://twitter.com/id", "anchor_text": "@id"}, {"url": "https://developer.mozilla.org/en-US/docs/Web/XPath/Functions", "anchor_text": "many XPath functions"}, {"url": "https://www.w3schools.com/xml/xpath_axes.asp", "anchor_text": "More XPath axes"}, {"url": "https://www.w3schools.com/xml/xpath_operators.asp", "anchor_text": "XPath operators"}, {"url": "https://www.w3schools.com/xml/xpath_syntax.asp", "anchor_text": "Selecting unknown nodes"}, {"url": "https://developer.mozilla.org/en-US/docs/Web/XPath/Functions", "anchor_text": "Full list of XPath functions"}, {"url": "https://www.selenium.dev/documentation/en/", "anchor_text": "many other languages"}, {"url": "https://medium.com/python-in-plain-english/how-to-use-selenium-to-automate-everything-in-the-browser-c18a28750125", "anchor_text": "this article"}, {"url": "https://webscraper.io/", "anchor_text": "webscraper.io"}, {"url": "https://webscraper.io/test-sites/e-commerce/scroll", "anchor_text": "https://webscraper.io/test-sites/e-commerce/scroll"}, {"url": "https://twitter.com/jamescalam", "anchor_text": "Twitter"}, {"url": "https://www.youtube.com/c/jamesbriggs", "anchor_text": "YouTube"}, {"url": "https://medium.com/tag/technology?source=post_page-----89f4423415e0---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/tag/data-science?source=post_page-----89f4423415e0---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----89f4423415e0---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----89f4423415e0---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/getting-started?source=post_page-----89f4423415e0---------------getting_started-----------------", "anchor_text": "Getting Started"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F89f4423415e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&user=James+Briggs&userId=b9d77a4ca1d1&source=-----89f4423415e0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F89f4423415e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&user=James+Briggs&userId=b9d77a4ca1d1&source=-----89f4423415e0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F89f4423415e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----89f4423415e0--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F89f4423415e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----89f4423415e0---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----89f4423415e0--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----89f4423415e0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----89f4423415e0--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----89f4423415e0--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----89f4423415e0--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----89f4423415e0--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----89f4423415e0--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----89f4423415e0--------------------------------", "anchor_text": ""}, {"url": "https://jamescalam.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://jamescalam.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "James Briggs"}, {"url": "https://jamescalam.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "9.6K Followers"}, {"url": "https://www.youtube.com/c/jamesbriggs", "anchor_text": "https://www.youtube.com/c/jamesbriggs"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb9d77a4ca1d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&user=James+Briggs&userId=b9d77a4ca1d1&source=post_page-b9d77a4ca1d1--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F75e31c56d187&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxpath-for-python-89f4423415e0&newsletterV3=b9d77a4ca1d1&newsletterV3Id=75e31c56d187&user=James+Briggs&userId=b9d77a4ca1d1&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}