{"url": "https://towardsdatascience.com/no-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798", "time": 1683011903.527093, "path": "towardsdatascience.com/no-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798/", "webpage": {"metadata": {"title": "No Fear of Machine Learning \u2014 how to classify text in less than 10 lines of code | by Lisa A. Chalaguine | Towards Data Science", "h1": "No Fear of Machine Learning \u2014 how to classify text in less than 10 lines of code", "description": "This article builds upon my previous two articles where I share some tips on how to get started with data analysis in Python (or R) and explain some basic concepts on text analysis in Python. In this\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/how-to-get-started-with-data-analysis-and-data-science-in-python-and-r-a-pragmatic-approach-a6ff498dec61", "anchor_text": "get started with data analysis in Python (or R)", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/getting-started-with-text-analysis-in-python-ca13590eb4f7", "anchor_text": "basic concepts on text analysis in Python", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/getting-started-with-text-analysis-in-python-ca13590eb4f7", "anchor_text": "last article", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/getting-started-with-text-analysis-in-python-ca13590eb4f7", "anchor_text": "previous article", "paragraph_index": 4}, {"url": "https://www.quora.com/In-machine-learning-what-s-the-purpose-of-splitting-data-up-into-test-sets-and-training-sets", "anchor_text": "training and a testing set", "paragraph_index": 6}, {"url": "https://medium.com/acing-ai/what-is-tf-idf-in-feature-engineering-7f1ba81982bd", "anchor_text": "tf-idf", "paragraph_index": 8}, {"url": "https://towardsdatascience.com/introduction-to-word-embedding-and-word2vec-652d0c2060fa", "anchor_text": "word embeddings", "paragraph_index": 8}, {"url": "https://www.kaggle.com/mlg-ulb/creditcardfraud", "anchor_text": "dataset about credit fraud", "paragraph_index": 14}, {"url": "https://towardsdatascience.com/various-ways-to-evaluate-a-machine-learning-models-performance-230449055f15", "anchor_text": "article", "paragraph_index": 15}, {"url": "https://www.kaggle.com/rafjaa/resampling-strategies-for-imbalanced-datasets", "anchor_text": "another one", "paragraph_index": 15}, {"url": "https://www.youtube.com/watch?v=fSytzGwwBVw", "anchor_text": "videos", "paragraph_index": 16}, {"url": "https://towardsdatascience.com/cross-validation-explained-evaluating-estimator-performance-e51e5430ff85", "anchor_text": "articles", "paragraph_index": 16}, {"url": "https://towardsdatascience.com/what-are-overfitting-and-underfitting-in-machine-learning-a96b30864690", "anchor_text": "over- and underfitting", "paragraph_index": 16}, {"url": "https://www.kaggle.com/c/learn-ai-bbc", "anchor_text": "BBC", "paragraph_index": 18}, {"url": "https://github.com/lisanka93/intro_ML_textdata/blob/master/BBC%20dataset%20and%20COVID-19%20vaccine%20concerns%20text%20classification.ipynb", "anchor_text": "here", "paragraph_index": 18}, {"url": "https://scikit-learn.org", "anchor_text": "scikit-learn", "paragraph_index": 20}, {"url": "https://towardsdatascience.com/getting-started-with-text-analysis-in-python-ca13590eb4f7", "anchor_text": "last article.", "paragraph_index": 21}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html", "anchor_text": "train_test_split function", "paragraph_index": 22}, {"url": "https://github.com/lisanka93/intro_ML_textdata/blob/master/BBC%20dataset%20and%20COVID-19%20vaccine%20concerns%20text%20classification.ipynb", "anchor_text": "notebook", "paragraph_index": 25}, {"url": "https://github.com/lisanka93/intro_ML_textdata/blob/master/BBC%20dataset%20and%20COVID-19%20vaccine%20concerns%20text%20classification.ipynb", "anchor_text": "notebook", "paragraph_index": 27}, {"url": "http://procure.ai", "anchor_text": "procure.ai", "paragraph_index": 29}], "all_paragraphs": ["This article builds upon my previous two articles where I share some tips on how to get started with data analysis in Python (or R) and explain some basic concepts on text analysis in Python. In this article, I want to go a step further and talk about how to get started with text classification with the help of machine learning.", "The motivation behind writing this article is the same as the previous ones: because there are enough people out there who are stuck with tools that are not optimal for the given task, e.g. using MS Excel for text analysis. I want to encourage people to use Python, not be scared of programming, and automate as much of their work as possible.", "Speaking of automation, in my last article I presented some methods on how to extract information out of textual data, using railroad incident reports as an example. Instead of having to read each incident text, I showed how to extract the most common words from a dataset (to get an overall idea of the data), how to look for specific words like \u201cdamage\u201d or \u201chazardous materials\u201d in order to log whether damages occurred or not, and how to extract the cost of the damages with the help of regular expressions.", "However, what if there are too many words to look for? Using crime reports as an example \u2014 what if you are interested in whether minors were involved? There are many different words you can use to describe minors: Underaged person, minor, youth, teenager, juvenile, adolescent, etc. Keeping track of all these words would be rather tedious. But, if you have already labeled data from the past, there is a simple solution. Assuming you have a dataset of previous crime reports that you have labeled manually, you can train a classifier that can learn the patterns of the labeled crime reports and match them to the labels (whether a minor was involved, whether the person was intoxicated, etc). If you get a new batch of unlabelled crime reports, you could run the classifier on the new data and label the reports automatically, without ever having to read them. Sounds great, doesn\u2019t it? And what if I told you that this can be done in as little as 7 lines of code? Mind blowing, I know.", "In this article, I will go over some main concepts in machine learning and natural language processing (NLP) and link articles for further reading. Some knowledge of text preprocessing is required, like stopword removal and lemmatisation, which I described in my previous article. I will then show on a real-world example, using a dataset that I have acquired during my latest PhD study, how to train a classifier.", "Classification is the task of identifying to which of a set of categories a new observation belongs. An easy example would be the classification of emails into spam and ham (binary classification). If you have more than two categories it\u2019s called multi-class classification. There are several popular classification algorithms which I will not discuss in depth but invite you to check out the provided links and do your own research:", "When you receive a new email, the email is not labelled as \u201cspam\u201d or \u201cham\u201d by the sender. Your email provider has to label the incoming email as either ham and send it to your inbox, or spam and send it into the spam folder. To tell how well your classifier (machine learning model) works in the real world, you split your data into a training and a testing set during the development.", "Let\u2019s say you have 1000 emails that are labelled as spam and ham. If you train your classifier with the whole data you have no data left to tell how accurate your classifier is because you do not have any e-mail examples that the model has not seen. So you want to leave some emails out of the training set, to let your trained model predict the labels of those left-out emails (testing set). By comparing the predicted with the actual labels you will be able to tell how well your model generalises to new data and how it would perform in the real world.", "Ok, so now you have your data, you have divided it into a training and a testing set, let\u2019s start training the classifier, no? Given, that we are dealing with text data, there is one more thing we need to do. If we were dealing with numerical data, we could feed those numbers into the classifier directly. But computers don\u2019t understand text. The text has to be converted into numbers, known as text vectorisation. There are several ways of doing it, but I will only go through one. Check out these articles for further reading on tf-idf and word embeddings.", "A popular and simple method of feature extraction with text data is called the bag-of-words model of text. Let\u2019s take the following sentence as an example:", "\u201capples are great but so are pears, however, sometimes I feel like oranges and on other days I like bananas\u201d", "This quote is used as our vocabulary. The sentence contains 17 distinct words. The following three sentences can then be represented as vectors using our vocabulary:", "Below you can see a representation of the sentence vectors in table format.", "You can see that we count how often each word of the vocabulary shows up in the vector representation of the sentence. Words that are not in our initial vocabulary are of course not known and therefore the last sentence contains only zeros. You should now be able to see how a classifier can identify patterns when trying o predict the label of a sentence. Imagine a training set that contains sentences about different fruits. The sentences that talk about apples will have a value of higher than 0 at index 1 in the vector representation, whereas sentences that talk about bananas will have a value of higher than 0 at index 17 in the vector representation.", "Great, now we have trained our classifier, how do we know how accurate it is? That depends on your type of data. The simplest way to measure the accuracy of your classifier is by comparing the predictions on the test set with the actual labels. If the classifier got 80/100 correct, the accuracy is 80%. There are, however, a few things to consider. I will not go into great detail but will give an example to demonstrate my point: Imagine you have a dataset about credit fraud. This dataset contains transactions made by credit cards and presents transactions that occurred in two days, where there were 492 frauds out of 284,807 transactions. You can see that the dataset is highly unbalanced and frauds account for only 0.172% of all transactions. You could assign \u201cnot fraud\u201d to all transactions and get 99.98% accuracy\u201d! This sounds great but completely misses the point of detecting fraud as we have identified exactly 0% of the fraud cases.", "Here is an article that explains different ways to evaluate machine learning models. And here another one that describes techniques of how to deal with unbalanced data.", "There is one more concept I want to introduce before going through a coding example, which is cross-validation. There are many great videos and articles that explain cross-validation so, again, I will only quickly touch upon it in regards of accuracy evaluation. Cross-validation is usually used to avoid over- and underfitting of the model on the training data. This is an important concept in machine learning, so I invite you to read up on it.", "When splitting your data into training and testing set \u2014 what if you got lucky with the testing set and the performance of the model on it overestimates how well your model would perform in real life? Or the opposite \u2014 what if you got unlucky and your model might perform better on real-world data than on the testing set. To get a more general idea of your model\u2019s accuracy it, therefore, makes sense to perform several different training and testing splits and averaging the different accuracies that you get for each iteration.", "Initially, I wanted to use a public dataset from the BBC comprised of 2225 articles, each labeled under one of 5 categories: business, entertainment, politics, sport or tech, and train a classifier that can predict the category of a news article. However, often popular datasets give you very high accuracy scores without having to do much preprocessing of the data. The notebook is available here, where I demonstrate that you can get 97% accuracy without doing anything with the textual data. This is great but, unfortunately, not how it works for most problems in real life.", "So, I used my own small dataset instead, which I collected during my latest PhD study. Once I have finished writing the paper I will link it here. I have crowdsourced arguments from people who are opposed to taking a COVID-19 vaccine should one be developed. I labeled the data partially automatically, partially manually by \u201cconcern\u201d that the argument addresses. The most popular concern is, not surprisingly, potential side effects of the vaccine, followed by a lack of trust in the government and concerns about insufficient testing due to the speed of the vaccine\u2019s development.", "I am using Python and the scikit-learn library for this task. Scikit-learn can do a lot of the heavy lifting for you which, as stated in the title of this article, allows you to code up classifiers for textual data in as little as 7 lines of code. So, let\u2019s start!", "After reading in the data, which is a CSV file that contains 2 columns, the argument, and it\u2019s assigned concern, I am first preprocessing the data. I describe preprocessing methods in my last article. I add a new column that contains the preprocessed arguments into the data frame and will use the preprocessed arguments to train the classifier(s).", "I classify the arguments and their labels into training and testing set at an 80:20 ratio. Scikit-learn has a train_test_split function which can also stratify and shuffle the data for you.", "Next, I instantiate a CountVectoriser to transform the arguments into sparse vectors, as described above. Then I call the fit() function to learn the vocabulary from the arguments in the testing set, and afterward, I call the transform() function on the arguments to encode each as a vector (scikit-learn provides a function which does both steps at the same time). Now note, that I only call transform() on the testing arguments. Why? Because I do not want to learn the vocabulary from the testing arguments and introduce bias into the classifier.", "Finally, I instantiate a multinomial Naive Bayes, fit it on the training arguments, test it on the testing arguments, and print out the accuracy score. Almost 74%. But what if we use cross-validation? Then accuracy drops to 67%. So we were just lucky with the testing data that the random state created. The random state ensures that the splits that you generate are reproducible.", "Out of curiosity, I am printing out the predictions in the notebook and check what arguments the classifier got wrong and we can see that mostly the concern \u201cside_effects\u201d is assigned to wrongly labelled arguments. This makes sense because the dataset is unbalanced and there are more than twice as many arguments that address side effects than for the second most popular concern, lack of government trust. So assigning side effects as a concern has a higher chance of being correct than assigning another one. I have tried undersampling and dropped some side effects arguments but the results were not great. I encourage you to experiment with it.", "I coded up a few more classifiers, and we can see that accuracy for all of them is around 70%. I managed to get it up to 74% using a support vector machine and dropping around 30 side_effect arguments. I have also coded up a neural network using tensorflow, which is beyond the scope of this article, which increased accuracy by almost 10%.", "I hope this article provided you with the necessary resources to get started with machine learning on textual data. Feel free to use any of the code from the notebook and I encourage you to play around with different preprocessing methods, classification algorithms, text vectorisations and, of course, datasets.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I just finished my PhD in Computer Science at UCL and currently work as a Data Scientist at procure.ai - LinkedIn: lisanka93"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F2360d5cec798&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----2360d5cec798--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2360d5cec798--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://lisanka.medium.com/?source=post_page-----2360d5cec798--------------------------------", "anchor_text": ""}, {"url": "https://lisanka.medium.com/?source=post_page-----2360d5cec798--------------------------------", "anchor_text": "Lisa A. Chalaguine"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2dd28e5ad562&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&user=Lisa+A.+Chalaguine&userId=2dd28e5ad562&source=post_page-2dd28e5ad562----2360d5cec798---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2360d5cec798&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2360d5cec798&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://pixabay.com", "anchor_text": "Pixaby"}, {"url": "https://towardsdatascience.com/how-to-get-started-with-data-analysis-and-data-science-in-python-and-r-a-pragmatic-approach-a6ff498dec61", "anchor_text": "get started with data analysis in Python (or R)"}, {"url": "https://towardsdatascience.com/getting-started-with-text-analysis-in-python-ca13590eb4f7", "anchor_text": "basic concepts on text analysis in Python"}, {"url": "https://towardsdatascience.com/getting-started-with-text-analysis-in-python-ca13590eb4f7", "anchor_text": "last article"}, {"url": "https://towardsdatascience.com/getting-started-with-text-analysis-in-python-ca13590eb4f7", "anchor_text": "previous article"}, {"url": "https://www.youtube.com/watch?v=yIYKR4sgzI8&vl=en", "anchor_text": "video"}, {"url": "https://towardsdatascience.com/understanding-logistic-regression-9b02c2aec102", "anchor_text": "article"}, {"url": "https://www.youtube.com/watch?v=HVXime0nQeI", "anchor_text": "video"}, {"url": "https://towardsdatascience.com/machine-learning-basics-with-the-k-nearest-neighbors-algorithm-6a6e71d01761", "anchor_text": "article"}, {"url": "https://www.youtube.com/watch?v=efR1C6CvhmE", "anchor_text": "video"}, {"url": "https://medium.com/machine-learning-101/chapter-2-svm-support-vector-machine-theory-f0812effc72", "anchor_text": "article"}, {"url": "https://www.youtube.com/watch?v=O2L2Uv9pdDA", "anchor_text": "video"}, {"url": "https://medium.com/analytics-vidhya/naive-bayes-classifier-for-text-classification-556fabaf252b", "anchor_text": "article"}, {"url": "https://www.youtube.com/watch?v=7VeUPuFGJHk", "anchor_text": "video"}, {"url": "https://medium.com/@chiragsehra42/decision-trees-explained-easily-28f23241248", "anchor_text": "article"}, {"url": "https://www.youtube.com/watch?v=aircAruvnKk", "anchor_text": "video"}, {"url": "https://towardsdatascience.com/first-neural-network-for-beginners-explained-with-code-4cfd37e06eaf", "anchor_text": "article"}, {"url": "https://www.quora.com/In-machine-learning-what-s-the-purpose-of-splitting-data-up-into-test-sets-and-training-sets", "anchor_text": "training and a testing set"}, {"url": "https://medium.com/acing-ai/what-is-tf-idf-in-feature-engineering-7f1ba81982bd", "anchor_text": "tf-idf"}, {"url": "https://towardsdatascience.com/introduction-to-word-embedding-and-word2vec-652d0c2060fa", "anchor_text": "word embeddings"}, {"url": "https://www.kaggle.com/mlg-ulb/creditcardfraud", "anchor_text": "dataset about credit fraud"}, {"url": "https://towardsdatascience.com/various-ways-to-evaluate-a-machine-learning-models-performance-230449055f15", "anchor_text": "article"}, {"url": "https://www.kaggle.com/rafjaa/resampling-strategies-for-imbalanced-datasets", "anchor_text": "another one"}, {"url": "https://www.youtube.com/watch?v=fSytzGwwBVw", "anchor_text": "videos"}, {"url": "https://towardsdatascience.com/cross-validation-explained-evaluating-estimator-performance-e51e5430ff85", "anchor_text": "articles"}, {"url": "https://towardsdatascience.com/what-are-overfitting-and-underfitting-in-machine-learning-a96b30864690", "anchor_text": "over- and underfitting"}, {"url": "https://www.kaggle.com/c/learn-ai-bbc", "anchor_text": "BBC"}, {"url": "https://github.com/lisanka93/intro_ML_textdata/blob/master/BBC%20dataset%20and%20COVID-19%20vaccine%20concerns%20text%20classification.ipynb", "anchor_text": "here"}, {"url": "https://scikit-learn.org", "anchor_text": "scikit-learn"}, {"url": "https://towardsdatascience.com/getting-started-with-text-analysis-in-python-ca13590eb4f7", "anchor_text": "last article."}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html", "anchor_text": "train_test_split function"}, {"url": "https://github.com/lisanka93/intro_ML_textdata/blob/master/BBC%20dataset%20and%20COVID-19%20vaccine%20concerns%20text%20classification.ipynb", "anchor_text": "notebook"}, {"url": "https://github.com/lisanka93/intro_ML_textdata/blob/master/BBC%20dataset%20and%20COVID-19%20vaccine%20concerns%20text%20classification.ipynb", "anchor_text": "notebook"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----2360d5cec798---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/nlp?source=post_page-----2360d5cec798---------------nlp-----------------", "anchor_text": "NLP"}, {"url": "https://medium.com/tag/classification?source=post_page-----2360d5cec798---------------classification-----------------", "anchor_text": "Classification"}, {"url": "https://medium.com/tag/text-classification?source=post_page-----2360d5cec798---------------text_classification-----------------", "anchor_text": "Text Classification"}, {"url": "https://medium.com/tag/introduction?source=post_page-----2360d5cec798---------------introduction-----------------", "anchor_text": "Introduction"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2360d5cec798&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&user=Lisa+A.+Chalaguine&userId=2dd28e5ad562&source=-----2360d5cec798---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2360d5cec798&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&user=Lisa+A.+Chalaguine&userId=2dd28e5ad562&source=-----2360d5cec798---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2360d5cec798&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2360d5cec798--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F2360d5cec798&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----2360d5cec798---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----2360d5cec798--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----2360d5cec798--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----2360d5cec798--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----2360d5cec798--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----2360d5cec798--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----2360d5cec798--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----2360d5cec798--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----2360d5cec798--------------------------------", "anchor_text": ""}, {"url": "https://lisanka.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://lisanka.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Lisa A. Chalaguine"}, {"url": "https://lisanka.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "131 Followers"}, {"url": "http://procure.ai", "anchor_text": "procure.ai"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2dd28e5ad562&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&user=Lisa+A.+Chalaguine&userId=2dd28e5ad562&source=post_page-2dd28e5ad562--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fcbee7682310f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fno-fear-of-machine-learning-classify-your-textual-data-in-less-than-10-lines-of-code-2360d5cec798&newsletterV3=2dd28e5ad562&newsletterV3Id=cbee7682310f&user=Lisa+A.+Chalaguine&userId=2dd28e5ad562&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}