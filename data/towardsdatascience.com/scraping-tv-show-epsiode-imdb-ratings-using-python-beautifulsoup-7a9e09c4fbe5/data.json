{"url": "https://towardsdatascience.com/scraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5", "time": 1683007428.970739, "path": "towardsdatascience.com/scraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5/", "webpage": {"metadata": {"title": "How to Scrape TV Show Epsiode IMDb Ratings Using Python & BeautifulSoup | by Isabella Benabaye | Towards Data Science", "h1": "How to Scrape TV Show Epsiode IMDb Ratings Using Python & BeautifulSoup", "description": "There are many tutorials out there that teach you how to scrape movies. This one shows you how to do that for the episodes of a TV series. We use Community as the example."}, "outgoing_paragraph_urls": [{"url": "https://isabella-b.com/blog/scraping-episode-imdb-ratings-tutorial/", "anchor_text": "here", "paragraph_index": 0}, {"url": "https://www.dataquest.io/blog/web-scraping-beautifulsoup/", "anchor_text": "tutorial", "paragraph_index": 1}, {"url": "https://www.dataquest.io/blog/web-scraping-beautifulsoup/#identifyingtheurlstructure", "anchor_text": "identifying the URL structure", "paragraph_index": 2}, {"url": "https://isabella-b.com/blog/scraping-episode-imdb-ratings-tutorial/#fn:1", "anchor_text": "1", "paragraph_index": 3}, {"url": "https://isabella-b.com/blog/scraping-episode-imdb-ratings-tutorial/", "anchor_text": "here", "paragraph_index": 4}, {"url": "https://www.dataquest.io/blog/web-scraping-beautifulsoup/#thenameofthemovie", "anchor_text": "this part", "paragraph_index": 16}, {"url": "https://twitter.com/_isabellamb", "anchor_text": "DM me", "paragraph_index": 33}, {"url": "https://www.kaggle.com/imbenab/community-episodes-imdb-ratings", "anchor_text": "The final Community ratings dataset on Kaggle", "paragraph_index": 34}, {"url": "https://isabella-b.com", "anchor_text": "https://isabella-b.com", "paragraph_index": 36}], "all_paragraphs": ["There are tons of tutorials out there that teach you how to scrape movie ratings from IMDb, but I haven\u2019t seen any about scraping TV series episode ratings. So for anyone wanting to do that, I\u2019ve created this tutorial specifically for it. It\u2019s catered mostly to beginners to web scraping since the steps are broken down. If you want the code without the breakdown you can find it here.", "There is a wonderful DataQuest tutorial by Alex Olteanu that explains in-depth how to scrape over 2000 movies from IMDb, and it was my reference as I learned how to scrape these episodes.", "Since their tutorial already does a great job at explaining the basics of identifying the URL structure and understanding the HTML structure of a single page, I\u2019ve linked those parts and recommend you read them if you aren\u2019t already familiar because I won\u2019t be explaining them here.", "In this tutorial I will not be redundant in explaining what they already did1; instead, I\u2019ll be doing many similar steps, but they will be specifically for taking episode ratings (same for any TV series) instead of movie ratings.", "This tutorial is best viewed on my website, where the code is more clear. Feel free to check it out here.", "First, you\u2019ll need to navigate to the series of your choice\u2019s season 1 page that lists all of that season\u2019s episodes. The series I will be using is Community. It should look like this:", "Get the url of that page. It should be structured like this:", "The part in bold is the part that is the show\u2019s ID and will be different for you if you\u2019re not using Community.", "First, we will request from the server the content of the web page by using get(), and store the server\u2019s response in the variable response and look at the first few lines. We can see that inside response is the html code of the webpage.", "Next, we\u2019ll parse response.text by creating a BeautifulSoup object, and assign this object to html_soup. The html.parser argument indicates that we want to do the parsing using Python\u2019s built-in HTML parser.", "This part onwards is where the code will differ from the movie example.", "The variables we will be getting are:", "Let\u2019s look at the container we\u2019re interested in. As you can see below, all of the info we need is in <div class=\"info\" ...> </div>:", "In yellow are the tags/parts of the code that we will be calling to get to the data we are trying to extract, which are in green.", "We will grab all of the instances of <div class=\"info\" ...> </div> from the page; there is one for each episode.", "find_all() returned a ResultSet object \u2013episode_containers\u2013 which is a list containing all of the 25 <div class=\"info\" ...> </div>s.", "Read this part of the DataQuest article to understand how calling the tags works.", "Here we\u2019ll see how we can extract the data from the episode_containters for each episode.", "episode_containters[0] calls the first instance of <div class=\"info\" ...> </div>, i.e. the first episode. After the first couple of variables, you will understand the structure of calling the contents of the html containers.", "For the title we will need to call title attribute from the <a> tag.", "The episode number in the <meta> tag, under the content attribute.", "Airdate is in the <div> tag with the class airdate, and we can get its contents the text attribute, afterwhich we strip() it to remove whitespace.", "The rating is is in the <div> tag with the class ipl-rating-star__rating, which also use the text attribute to get the contents of.", "It is the same thing for the total votes, except it\u2019s under a different class.", "For the description, we do the same thing we did for the airdate and just change the class.", "\u2018An ex-lawyer is forced to return to community college to get a degree. However, he tries to use the skills he learned as a lawyer to get the answers to all his tests and pick up on a sexy woman in his Spanish class.\u2019", "Now that we know how to get each variable, we need to iterate for each episode and each season. This will require two for loops. For the per season loop, you\u2019ll have to adjust the range() depending on how many seasons are in the show you\u2019re scraping.", "The output will be a list that we will make into a pandas DataFrame. The comments in the code explain each step.", "Looks good! Now we just need to clean up the data a bit.", "First, we create a function that uses replace() to remove the \u2018,\u2019 , \u2018(', and \u2018)\u2019 strings from total_votes so that we can make it numeric.", "Now we apply the function, taking out the strings, then change the type to int using astype()", "Great! Now the data is tidy and ready for analysis/visualization.", "Let\u2019s make sure we save it:", "And that\u2019s it, I hope this was helpful! Feel free to comment or DM me for any edits or questions.", "The final Community ratings dataset on Kaggle", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Currently learning R and python for data analysis and particularly interested in data visualization & data storytelling. More about me: https://isabella-b.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F7a9e09c4fbe5&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@isabellabenabaye?source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@isabellabenabaye?source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": "Isabella Benabaye"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbaab525ff13&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&user=Isabella+Benabaye&userId=baab525ff13&source=post_page-baab525ff13----7a9e09c4fbe5---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7a9e09c4fbe5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7a9e09c4fbe5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://isabella-b.com/blog/scraping-episode-imdb-ratings-tutorial/", "anchor_text": "here"}, {"url": "https://www.dataquest.io/blog/web-scraping-beautifulsoup/", "anchor_text": "tutorial"}, {"url": "https://www.dataquest.io/blog/web-scraping-beautifulsoup/#identifyingtheurlstructure", "anchor_text": "identifying the URL structure"}, {"url": "https://isabella-b.com/blog/scraping-episode-imdb-ratings-tutorial/#fn:1", "anchor_text": "1"}, {"url": "https://isabella-b.com/blog/scraping-episode-imdb-ratings-tutorial/", "anchor_text": "here"}, {"url": "http://www.imdb.com/title/tt1439629/episodes?season=1", "anchor_text": "http://www.imdb.com/title/tt1439629/episodes?season=1"}, {"url": "https://www.dataquest.io/blog/web-scraping-beautifulsoup/#thenameofthemovie", "anchor_text": "this part"}, {"url": "https://gist.github.com/isabellabenabaye/960b255705843485698875dc193e477e", "anchor_text": "https://gist.github.com/isabellabenabaye/960b255705843485698875dc193e477e"}, {"url": "https://twitter.com/_isabellamb", "anchor_text": "DM me"}, {"url": "https://github.com/isabellabenabaye/community-project", "anchor_text": "Github repository"}, {"url": "https://www.kaggle.com/imbenab/community-episodes-imdb-ratings", "anchor_text": "The final Community ratings dataset on Kaggle"}, {"url": "https://isabella-b.com", "anchor_text": "My website/blog"}, {"url": "https://medium.com/tag/web-scraping?source=post_page-----7a9e09c4fbe5---------------web_scraping-----------------", "anchor_text": "Web Scraping"}, {"url": "https://medium.com/tag/python?source=post_page-----7a9e09c4fbe5---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/beautifulsoup?source=post_page-----7a9e09c4fbe5---------------beautifulsoup-----------------", "anchor_text": "Beautifulsoup"}, {"url": "https://medium.com/tag/imdb?source=post_page-----7a9e09c4fbe5---------------imdb-----------------", "anchor_text": "IMDb"}, {"url": "https://medium.com/tag/projects?source=post_page-----7a9e09c4fbe5---------------projects-----------------", "anchor_text": "Projects"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7a9e09c4fbe5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&user=Isabella+Benabaye&userId=baab525ff13&source=-----7a9e09c4fbe5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7a9e09c4fbe5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&user=Isabella+Benabaye&userId=baab525ff13&source=-----7a9e09c4fbe5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7a9e09c4fbe5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F7a9e09c4fbe5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----7a9e09c4fbe5---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----7a9e09c4fbe5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@isabellabenabaye?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@isabellabenabaye?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Isabella Benabaye"}, {"url": "https://medium.com/@isabellabenabaye/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "8 Followers"}, {"url": "https://isabella-b.com", "anchor_text": "https://isabella-b.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbaab525ff13&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&user=Isabella+Benabaye&userId=baab525ff13&source=post_page-baab525ff13--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2Fbaab525ff13%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fscraping-tv-show-epsiode-imdb-ratings-using-python-beautifulsoup-7a9e09c4fbe5&user=Isabella+Benabaye&userId=baab525ff13&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}