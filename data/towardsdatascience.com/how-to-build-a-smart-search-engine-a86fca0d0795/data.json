{"url": "https://towardsdatascience.com/how-to-build-a-smart-search-engine-a86fca0d0795", "time": 1683015153.561942, "path": "towardsdatascience.com/how-to-build-a-smart-search-engine-a86fca0d0795/", "webpage": {"metadata": {"title": "How to build a smart search engine (Part II) | by Josh Taylor | Towards Data Science", "h1": "How to build a smart search engine (Part II)", "description": "In the first post within this series, we built a search engine in just a few lines of code which was powered by the BM25 algorithm used in many of the largest enterprise search engines today. In this\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/how-to-build-a-search-engine-9f8ffa405eac", "anchor_text": "In the first post", "paragraph_index": 0}, {"url": "https://www.contractsfinder.service.gov.uk/Search", "anchor_text": "Contracts Finder", "paragraph_index": 6}, {"url": "https://towardsdatascience.com/untangling-uk-politics-with-data-science-a5afe9a86923", "anchor_text": "BERT", "paragraph_index": 11}, {"url": "https://towardsdatascience.com/how-to-build-a-search-engine-9f8ffa405eac", "anchor_text": "please review my first", "paragraph_index": 25}, {"url": "https://en.wikipedia.org/wiki/Occam%27s_razor", "anchor_text": "it is also important to remember that often the simplest solution to a problem is the best.", "paragraph_index": 42}, {"url": "https://www.linkedin.com/in/josh-taylor-24806975/", "anchor_text": "https://www.linkedin.com/in/josh-taylor-24806975/", "paragraph_index": 46}], "all_paragraphs": ["In the first post within this series, we built a search engine in just a few lines of code which was powered by the BM25 algorithm used in many of the largest enterprise search engines today.", "In this post, we want to go beyond this and create a truly smart search engine. This post will describe the process to do this and also provide template code to achieve this on any dataset.", "But what do we mean by \u2018smart\u2019? We are defining this as a search engine which is able to:", "In order to achieve this, we will need to combine a number of techniques:", "This will look something like the below:", "This article will walk through each of these areas and describe how they can be brought together to create a smart search engine.", "The first step in creating a search engine is splitting our documents into individual words or \u2018tokens\u2019. The spaCy library makes this both very simple and very fast to achieve. As a reminder, the example we are using in this article is the same as the one in the previous article. It contains UK public sector contract notices, published on the Contracts Finder platform. However, for the purposes of this exercise, we have increased the dataset size (it is now 212k records, previously it was only 50k). In addition to this, we have also brought through location data into our dataset. Prior to any processing, the data frame we are using looks like the below:", "The column we will be using for our search engine is the \u2018Text\u2019 column which is an amalgamation of the free text and location fields for each notice.", "We can take this column, clean it and tokenise it all using the spaCy library. The below code does this by using a spaCy pipe, this makes the processing as efficient as possible and also allows us to choose only the parts of the tokenizer engine that we want to use (again ensuring that the process is as fast as possible):", "The above code splits our documents into a list of tokens whilst performing some basic cleaning operations to remove punctuation, white space and convert the text to lowercase. Running on a Colab notebook, this can process over 1,800 notices a second.", "Why word vectors? Why not BERT/GPT-3/[latest SOTA NLP model]?", "Since the introduction of sophisticated transformer models like BERT, word vector models can seem quite old fashioned. However they are still relevant today for the following reasons:", "In addition to the above they are super simple to implement using the Gensim library. Here we are building a fastText model:", "Now that we have trained up our model, let's see how it performs.", "It never ceases to amaze me just how effective fastText can be at capturing the relationships between words within a corpus. This is best demonstrated with a few examples:", "This really is quite astounding, the model has clearly learned that M4 relates to the UK motorway and understands that other large UK motorways are similar to this (M1, M5, M3, M60).", "It has also learned that LRN is also closely related (this stands for Local Road Network) I did not even know this myself!", "The \u20189AT\u2019 token looks quite odd however a quick search reveals that this is the postcode of Highways England.", "Including postcode and location information in our word vector model was a deliberate design choice. The rationale was that the model will understand how UK postcodes and locations relate to one another. Let\u2019s put this to the test:", "The model has learned that Yorkshire is a region in the UK (in the north west) and the major cities and towns within it. It also understands the relationship between this region and its sub regions; \u2018Riding\u2019 here refers to the North/East/West Ridings which sit within the Yorkshire county. But what about post codes?", "RG9 is a postcode (zip code) within the UK which relates to the town of Henley. This is a tricky example as Henley is quite a small town and the RG postcode is also used for other, larger nearby towns (such as Reading). Will the model be able to correctly associate this post code with Henley?", "It passes with flying colours! Henley is the most similar word and the other results are also highly relevant, representing neighbouring towns and postcodes.", "Clearly our word vector model is performing well, in the next step we will supercharge our word embeddings using the BM25 algorithm.", "Now that we have our word vectors, we need to find a way of combining these for each document in our search engine.", "The simplest way of doing this would be to average the word vectors for each document (and this would work) however it has been shown that combining word vectors with the BM25 algorithm can produce much higher quality search results[1]", "A simple recap of BM25 is below but please review my first post for more details on its inner workings:", "Whilst this looks complex, implementing this with our word vectors is actually very simple and requires just a few lines of code(just like all of the other steps in this article!)", "The output from this will give us a single vector per document in our search engine.", "We have now have a list of vectors for each document in our data set. We can also use the techniques outlined above to create a vector for a search query from a user.", "But how do we return relevant results based on this search query? We need to be able to find the closest vectors to our search vector. Given the high number of dimensions (100) in our vectors this is where things could start to fall down with our approach. Search engines need to be fast and searching over 100 dimensions across a data set of over 200k records is very resource intensive.", "Thankfully this is a fairly common challenge within computer science and solutions exist to massively speed up similarity search problems. NMSLIB is one of the fastest solutions out there [2]. Using this library we can create a search index which will be orders of magnitude faster than finding similar vectors using a brute force approach:", "Now that we have our search index, it is simply a matter of creating a search vector and returning the closest matches from the index:", "Using the same query of \u2018flood defences\u2019 as in our previous article we now get the following results (top 5):", "Some great results. Also, the search is performed in 0.0005 seconds. This is 122 times faster than our previous search engine despite the dataset being more than 4 times the size.", "It is also worth highlighting that a number of the results, whilst highly relevant, do not contain the word \u2018defences\u2019. The approach of using word vectors means that exact word matches are now no longer required to return relevant results.", "Given that geographic information should also be encoded within the search index, let's try searching for a contract that has been awarded in a specific area. To do this we will search using the NR2 postcode to find Notices in Norwich: \u2018audit services NR2'. Here are the top 3 results:", "It works! Returning all results for both internal and external audit services in Norwich, note that even though we searched with the NR2 postcode, it knows that that this is also similar to the other Norwich postcodes of NR4, NR6 and NR1\u2026 pretty smart!", "Finally, let's feed it a typo and see if it can still handle this in an intelligent way. \u2018audit services in Norwic\u2019:", "Same results again, despite the misspelling of the town name.", "In this article we have seen how combining word vectors to BM25 and supercharging this with a fast similarity search index can create a smart, scalable and performant search engine.", "Despite this, it is always important to consider whether this will be of benefit to the end user. For example, we may find that users prefer a simple key word search as they can easily interpret the results. This also highlights one of the biggest risks of creating \u2018smarter\u2019 services; they can often become:", "For these reasons they require a significant amount of testing to ensure they behave as expected once in production.", "As the search continues to get more sophisticated, we will no doubt see even more complex solutions emerging over time. Whilst it is great to see such rapid development in this area, it is also important to remember that often the simplest solution to a problem is the best.", "Link to the first part of this series:", "As always, a big thanks to the TDS editorial team!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I am a specialist in producing insights through advanced analytics, machine learning and visualisation. https://www.linkedin.com/in/josh-taylor-24806975/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fa86fca0d0795&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----a86fca0d0795--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a86fca0d0795--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@thejoshtaylor?source=post_page-----a86fca0d0795--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thejoshtaylor?source=post_page-----a86fca0d0795--------------------------------", "anchor_text": "Josh Taylor"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb5b5ec923fa3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&user=Josh+Taylor&userId=b5b5ec923fa3&source=post_page-b5b5ec923fa3----a86fca0d0795---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa86fca0d0795&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa86fca0d0795&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/how-to-build-a-search-engine-9f8ffa405eac", "anchor_text": "In the first post"}, {"url": "https://towardsdatascience.com/supercharging-word-vectors-be80ee5513d", "anchor_text": "on this here"}, {"url": "https://github.com/nmslib/nmslib", "anchor_text": "Non-Metric Space Library (NMSLIB)"}, {"url": "https://www.contractsfinder.service.gov.uk/Search", "anchor_text": "Contracts Finder"}, {"url": "https://towardsdatascience.com/untangling-uk-politics-with-data-science-a5afe9a86923", "anchor_text": "BERT"}, {"url": "https://towardsdatascience.com/how-to-build-a-search-engine-9f8ffa405eac", "anchor_text": "please review my first"}, {"url": "https://en.wikipedia.org/wiki/Occam%27s_razor", "anchor_text": "it is also important to remember that often the simplest solution to a problem is the best."}, {"url": "https://colab.research.google.com/drive/10ZrZaLBmhEqKSSEoe_cos783m2junUdr?usp=sharing", "anchor_text": "Notebook containing the data and code"}, {"url": "https://colab.research.google.com/drive/10ZrZaLBmhEqKSSEoe_cos783m2junUdr?usp=sharing", "anchor_text": "SmartSearchCode to create a smart search engine in Pythoncolab.research.google.com"}, {"url": "https://ad-publications.cs.uni-freiburg.de/theses/Bachelor_Eneko_Pinzolas_2017.pdf", "anchor_text": "https://ad-publications.cs.uni-freiburg.de/theses/Bachelor_Eneko_Pinzolas_2017.pdf"}, {"url": "https://github.com/erikbern/ann-benchmarks", "anchor_text": "https://github.com/erikbern/ann-benchmarks"}, {"url": "https://towardsdatascience.com/how-to-build-a-search-engine-9f8ffa405eac", "anchor_text": "How to build a search engineCreating a robust full text search in Python in a few lines of codetowardsdatascience.com"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----a86fca0d0795---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----a86fca0d0795---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----a86fca0d0795---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----a86fca0d0795---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/search?source=post_page-----a86fca0d0795---------------search-----------------", "anchor_text": "Search"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa86fca0d0795&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&user=Josh+Taylor&userId=b5b5ec923fa3&source=-----a86fca0d0795---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa86fca0d0795&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&user=Josh+Taylor&userId=b5b5ec923fa3&source=-----a86fca0d0795---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa86fca0d0795&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a86fca0d0795--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fa86fca0d0795&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----a86fca0d0795---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----a86fca0d0795--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----a86fca0d0795--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----a86fca0d0795--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----a86fca0d0795--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----a86fca0d0795--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----a86fca0d0795--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----a86fca0d0795--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----a86fca0d0795--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thejoshtaylor?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thejoshtaylor?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Josh Taylor"}, {"url": "https://medium.com/@thejoshtaylor/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "852 Followers"}, {"url": "https://www.linkedin.com/in/josh-taylor-24806975/", "anchor_text": "https://www.linkedin.com/in/josh-taylor-24806975/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb5b5ec923fa3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&user=Josh+Taylor&userId=b5b5ec923fa3&source=post_page-b5b5ec923fa3--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F826db04da2c9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-smart-search-engine-a86fca0d0795&newsletterV3=b5b5ec923fa3&newsletterV3Id=826db04da2c9&user=Josh+Taylor&userId=b5b5ec923fa3&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}