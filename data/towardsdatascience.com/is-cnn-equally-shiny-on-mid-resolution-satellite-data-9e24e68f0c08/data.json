{"url": "https://towardsdatascience.com/is-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08", "time": 1683006307.035977, "path": "towardsdatascience.com/is-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08/", "webpage": {"metadata": {"title": "Is CNN equally shiny on mid-resolution satellite data? | by Pratyush Tripathy | Towards Data Science", "h1": "Is CNN equally shiny on mid-resolution satellite data?", "description": "Includes Python script for Landsat classification. Variants of Convolution Neural Network (CNN) continue to hail as powerful Machine Learning (ML) algorithms for image-related problems\u2026"}, "outgoing_paragraph_urls": [{"url": "https://youtu.be/X7Hg9kVkbtI", "anchor_text": "this video", "paragraph_index": 4}, {"url": "https://youtu.be/1G2tkMaoS8Q", "anchor_text": "this video for installation", "paragraph_index": 6}, {"url": "https://github.com/PratyushTripathy/QGIS-Plugin-Produce-Training-Samples-For-Deep-Learning/tree/master/UsageInstructions", "anchor_text": "here", "paragraph_index": 10}, {"url": "https://towardsdatascience.com/neural-network-for-satellite-data-classification-using-tensorflow-in-python-a13bcf38f3e1", "anchor_text": "previous post", "paragraph_index": 22}, {"url": "https://keras.io/models/sequential/", "anchor_text": "documented", "paragraph_index": 25}, {"url": "https://towardsdatascience.com/neural-network-for-satellite-data-classification-using-tensorflow-in-python-a13bcf38f3e1", "anchor_text": "previous post", "paragraph_index": 35}, {"url": "https://towardsdatascience.com/neural-network-for-satellite-data-classification-using-tensorflow-in-python-a13bcf38f3e1", "anchor_text": "Neural Network for Satellite Data Classification Using Tensorflow in Python", "paragraph_index": 39}, {"url": "https://twitter.com/i_pratyusht", "anchor_text": "Twitter", "paragraph_index": 39}, {"url": "https://www.linkedin.com/in/pratyush-tripathy-b28a47146/", "anchor_text": "LinkedIn", "paragraph_index": 39}, {"url": "https://github.com/PratyushTripathy/Landsat-Classification-Using-Convolution-Neural-Network", "anchor_text": "GitHub repository", "paragraph_index": 40}], "all_paragraphs": ["Variants of Convolution Neural Network (CNN) continue to be hailed as powerful Machine Learning (ML) algorithms for image-related problems. CNN bagged unprecedented accuracy in a variety of fields \u2014 object-based satellite image classification is one such application that proliferated in recent times. While high-resolution satellite image, required for object-based classification is not available for free, researchers often rely on freely available mid-resolution data (e.g. Landsat \u2014 each pixel represents a 30m*30m land parcel). The mechanism of CNN elucidates that it considers the neighbouring pixels and relies on the pattern and texture of it, and not just one pixel at a time.", "In the land cover classification of a mid-resolution satellite data (e.g. Landsat), the objective is to classify each pixel, based on its digital number (DN) values across different bands. When looking at it from the perspective of a CNN model, the obvious question that arises is, \u201cwill the DN values of immediate neighbours or neighbouring pixels located a few pixels away play any role in determining the class of a pixel?\u201d The majority may answer \u2018NO\u2019. Does it mean that CNN despite being a powerful tool for image conundrums, would fail on such an image? That\u2019s too quick to conclude something based solely on assumption. In this post, we will investigate the usability of the CNN model on mid-resolution data, where object-identification is neither possible nor the goal.", "This post is highly recommended and good-fit for people in the geospatial field who want to kickstart their \u201cCNN for remote sensing\u201d journey.", "Knowledge is not a destination, it is the journey. So don\u2019t scroll down just to search for a script. \ud83d\udc40", "Data usedBands 2 to 6 of Landsat 5 multispectral data and its corresponding binary built-up layer for the year 2011 across Bangalore is used here. Landsat 8 or Sentinel-2A would be the obvious choices for many of us because they are the recent ones and will be continued in future. But the reason for not selecting them is higher radiometric and spectral resolution; which would produce better results than Landsat 5. If we manage to get good results on Landsat 5 data (8-bit pixel depth), we can scale it up to Landsat 8 or Sentinel-2A (both have 16-bit data) with minor modifications; but the reverse may not turn out very well. To know more about how to create training data for the model, you can check out this video.", "For those who want a quick ML capsule (supervised) before getting started, it is establishing the relationship between a few characteristics (features or Xs) of an entity with its other property (value or label or Y) \u2014 we provide plenty of examples (labelled data) to the model so that it learns from it and then predicts labels for the new data (unlabelled data). Here, the multispectral data, by convention, will be referred to as features and classified built-up data as labels.", "Pre-requisitesWe will use Python 3.7.4 and the following libraries for modelling (check out this video for installation instructions):", "Understanding the dataThe distribution of data plays an important role in selecting a model for a specific purpose. The graph below shows the frequency of DN values across all bands.", "The histogram shows an uneven distribution, models like neural networks are sensitive to this type of data distribution because they naturally tend to give more importance to features with higher values. For e.g. Band 6 seems to have a relatively large number of pixels with high DN values (high mean). Dealing with this is only worth if the model is performing poorly or if we want to give the last push to the accuracy of the model, for now, we are bypassing any alteration to the data to focus on the CNN part.", "Generating training samples for training the modelThe Produce Training Data for Deep Learning QGIS plugin will help us produce training samples and visualise it better before heading for the model training. Usually, this is done in the back-end, but visualising the data and its structure is always useful, especially for beginners. Following are the set of parameters that I used in this iteration (we can always come back and tweak these if required):", "This step can take a couple of minutes depending on the parameters you have passed and your computational power. I\u2019ve used a 7x7 window with 7x7 stride (window slide) to generate the training samples which resulted in 84,972 image chips, good enough for training an ML model, but we will reduce this number in the next steps. Feel free to produce more or fewer images by reducing or increasing the stride. Read more about the plugin usage here.", "TIME TO CODE NOW!The code snippet below performs the following in sequence:", "The shape of the features shows that the data is stacked as a four-dimensional array, where the first index is the position of a record, second is the number of bands of the image, and third and fourth are the height and columns of the image chips respectively.Ideally, the number of bands should be at the last position as shown in the image below, the way Tensorflow expects the image chips. We will get down to fixing this slightly later.", "The above section is to help you understand the backend workflow. If you don\u2019t want to go down the QGIS road, all the steps can be done programmatically using the following code chunk. Please note that directly generating image chips this way will result in a feature array in which the number of bands is at the last index. To keep this code block consistent with the remaining part, I rolled the axis using NumPy. This will be undone later using \u2018tf.transpose\u2019. If you want, you can remove the \u2018rollaxis\u2019 line in this one and \u2018transpose\u2019 line in the later code blocks.", "Saving NumPy arrays as files for quick accessLooping through the files can be time-consuming depending upon your machine\u2019s power. To avoid this every time you run the script, a better way is to store the NumPy arrays on disk (.npy format). The following lines will do the job:", "To run the script from second time onwards, you can start by reading the .npy files. Now, a machine learning model expects examples of all classes (here two classes) in the same quantity. If the number of training data in each class differs dramatically, training the model is difficult (but not impossible). Let\u2019s look at our data.", "Ok! That doesn\u2019t look appealing. Let us say we calculate the accuracy of the model at a later stage by simply calculating the proportion of built or unbuilt predictions. If the model gets poorly trained and predicts everything as unbuilt, it can still possess a misleading accuracy of 88% (100 * correctly classified unbuilt/total records). This is because the number of training samples in the unbuilt class is in the extreme majority. Fixing this is mandatory!The code snippet below will reduce the number of training samples in the unbuilt class to match with that of the built class by randomly picking up samples.", "The total number of training samples have reduced significantly but is still better than having extremely unbalanced classes.", "Data normalisationScaling the data is important to make sure that all the features are treated equally since neural networks are sensitive to the distribution of data as seen in the first plot. The data can either be in the 0 to 1 range (normalised) or -1 to 1 range (standardised). We will normalise the data by assuming that the maximum and minimum values across all six bands are zero and 255. The code snippet below will merge the separated features from the previous step and normalise it.", "It is always a good practice to calculate the minimum and maximum values from the data itself. But for satellite data classification, what if we want the model to predict built-up area for some other region where the minimum and maximum values of the features are significantly different from the one we are using for training? That is an entirely different debate which we won't be getting into and proceed with the conventional assumption of minimum and maximum values for 8-bit data.", "Test/train splitTo be able to evaluate the performance of the model at a later stage, the data by convention is split into two halves, training and testing. We will define a function for this, the train-test proportion here is 60\u201340.", "Creating tensorsAs we saw in the beginning, the number of bands in our features data is at the second index. To be able to build a model using Tensorflow, we need to convert the data in the channels at last index format. Tensorflow has a transpose function for this, as shown below:", "The keys to a winning model are feature engineering and building the right model architecture. Feature engineering is done to extract the most meaningful information or to enhance the content of the data, but that is a fairly large topic for a separate post in future. In a previous post, a simple neural network model performed satisfactorily for built-up extraction without any feature engineering (might have managed to establish a relationship between bands and the built-up class). Therefore, it may not be mandatory to engineer input features always, it is subject to the complexity of the problem and the model. Here we are getting away with \u2018feature engineering\u2019 by simply scaling the data (as done in a previous step).", "The architecture of the model takes weeks for the making, hence, \u201cyour first model will never make it to predictions\u201d. I started with only the input and output layer to check the base accuracy. I kept on adding the layers and changing the number of convolutions in each layer to reach somewhere near the desired results. Here is what I grounded at:", "The code snippet below will build the model and train it.", "Unlike the majority of deep learning models, we are not using a pooling layer, which focuses on finding objects in the image. Feel free to read the details of each of the parameters of the model on the official website, quite well documented.", "It is very common with neural networks that they memorise the training data, and fail to establish a relation, which results in poor prediction on new data, popularly known as over-fitting. Therefore, post-training, we cross-check the accuracy of the model using the test data.", "The accuracy that we achieved seems impressive, for a different image, you would have to spend some time in reaching the right model architecture. To conveniently do that, you may want to add a few lines to save the model on your disk (HDF5 format) using the below code snippet.", "Now, let us see how the model behaves on new data. The code snippet below will:", "The CNNdataGenerator function defined below can be used to bypass the QGIS plugin step we adopted at the beginning for image chips generation.", "The image below shows the predicted built-up (red in colour) for a new area \u2014 Hyderabad, India.", "Overall, the classification looks fine, but for the mixed built-up pixels \u2014 with low confidence values. Checking the results in QGIS revealed that the model was less confident on the mixed built-up pixels, probably because it did not see enough examples during training. You can attempt to solve this by reducing the stride \u2014 may blow up the number of training features proportionally. The other option is to use a slightly lower threshold to extract all the built-up pixels, and it should just work fine.", "About the extremely high accuracy of the model we achieved, it was too, a consequence of less number of mixed built-up pixels in our testing set. The model performed well in predicting test classes because they were easily differentiable in the multidimensional space. Though, the model learnt well to distinguish between classes for pure pixels and seems to be working well on new data.", "The argument that we started with was the size of the kernel for mid-resolution data, to investigate that, I used two more kernel sizes (3 and 11).", "An important point worth mentioning is that deep learning architectures are sensitive, that is, we can not expect the exact same model architecture to produce similar accuracy on different kernel sizes. Therefore, a few minor modifications in the architecture are expected. Due to the simplicity of the current problem, the same model architecture produced convincing results on different kernel sizes.", "Now that we have the best results (for a basic CNN at least) from different kernel size and the output of an ANN model from the previous post, let us predict new data using all the models and visualise how it looks like.", "To me, it seems like (and hopefully you can also notice at this scale) the larger the kernel is, the smoother the predicted image is. The output from the larger kernels looks like the classified image of a 100m or 200m resolution data, which defies the resolution of the original image.", "Among CNN models, the 3 by 3 kernel would be the best pick. In general, it looks like the ANN model is retaining the maximum resolution, but the precision and recall for ANN were lower (0.815 & 0.838) than the present CNN models; probably due to imbalanced training classes and larger data size. Retaining maximum resolution (only visually) does not simply conclude that ANN outperforms CNN for mid-resolution data,\u00a0we\u00a0believe\u00a0in\u00a0stats!", "The CNN model that we constructed is a very basic version, and we only tweaked the number of layers and the number of convolution filters in each layer. However, there are many other, and much more crucial parameters (stride, activation functions, pooling, dropouts, epochs, batch size, learning rate, etc.) that can be played with to address the aforementioned issues \u2014 have ignored them here to avoid prolonging the post.", "If you feel this post was useful, you might as well find my other post \u201cNeural Network for Satellite Data Classification Using Tensorflow in Python\u201d interesting. Stay tuned for similar posts and learn about some of the interesting geospatial stuff that I surround myself with. Twitter, LinkedIn", "The full script, data, and the trained models can be found on this GitHub repository. Hail open knowledge! \ud83c\udf93\ud83d\udc7a", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "PhD student at UC Santa Barbara. Shares content related to geospatial analysis and machine learning. Twitter: @i_pratyusht"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F9e24e68f0c08&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@pratyush_tripathy?source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@pratyush_tripathy?source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": "Pratyush Tripathy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F804b4cc9d31c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&user=Pratyush+Tripathy&userId=804b4cc9d31c&source=post_page-804b4cc9d31c----9e24e68f0c08---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9e24e68f0c08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9e24e68f0c08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://youtu.be/X7Hg9kVkbtI", "anchor_text": "this video"}, {"url": "https://youtu.be/1G2tkMaoS8Q", "anchor_text": "this video for installation"}, {"url": "https://pypi.org/project/pyrsgis/", "anchor_text": "pyrsgis 0.3.9"}, {"url": "https://pypi.org/project/scikit-learn/", "anchor_text": "Scikit-learn 0.22.1"}, {"url": "https://pypi.org/project/numpy/", "anchor_text": "Numpy 1.17.2"}, {"url": "https://pypi.org/project/tensorflow/", "anchor_text": "Tensorflow 2.0.0"}, {"url": "https://github.com/PratyushTripathy/QGIS-Plugin-Produce-Training-Samples-For-Deep-Learning/tree/master/UsageInstructions", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/neural-network-for-satellite-data-classification-using-tensorflow-in-python-a13bcf38f3e1", "anchor_text": "previous post"}, {"url": "https://keras.io/models/sequential/", "anchor_text": "documented"}, {"url": "https://towardsdatascience.com/neural-network-for-satellite-data-classification-using-tensorflow-in-python-a13bcf38f3e1", "anchor_text": "previous post"}, {"url": "https://towardsdatascience.com/neural-network-for-satellite-data-classification-using-tensorflow-in-python-a13bcf38f3e1", "anchor_text": "Neural Network for Satellite Data Classification Using Tensorflow in Python"}, {"url": "https://twitter.com/i_pratyusht", "anchor_text": "Twitter"}, {"url": "https://www.linkedin.com/in/pratyush-tripathy-b28a47146/", "anchor_text": "LinkedIn"}, {"url": "https://github.com/PratyushTripathy/Landsat-Classification-Using-Convolution-Neural-Network", "anchor_text": "GitHub repository"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----9e24e68f0c08---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/convolution-neural-net?source=post_page-----9e24e68f0c08---------------convolution_neural_net-----------------", "anchor_text": "Convolution Neural Net"}, {"url": "https://medium.com/tag/remote-sensing?source=post_page-----9e24e68f0c08---------------remote_sensing-----------------", "anchor_text": "Remote Sensing"}, {"url": "https://medium.com/tag/image-classification?source=post_page-----9e24e68f0c08---------------image_classification-----------------", "anchor_text": "Image Classification"}, {"url": "https://medium.com/tag/python-programming?source=post_page-----9e24e68f0c08---------------python_programming-----------------", "anchor_text": "Python Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9e24e68f0c08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&user=Pratyush+Tripathy&userId=804b4cc9d31c&source=-----9e24e68f0c08---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9e24e68f0c08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&user=Pratyush+Tripathy&userId=804b4cc9d31c&source=-----9e24e68f0c08---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9e24e68f0c08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F9e24e68f0c08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----9e24e68f0c08---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----9e24e68f0c08--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@pratyush_tripathy?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@pratyush_tripathy?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Pratyush Tripathy"}, {"url": "https://medium.com/@pratyush_tripathy/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "350 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F804b4cc9d31c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&user=Pratyush+Tripathy&userId=804b4cc9d31c&source=post_page-804b4cc9d31c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F11c884399a09&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fis-cnn-equally-shiny-on-mid-resolution-satellite-data-9e24e68f0c08&newsletterV3=804b4cc9d31c&newsletterV3Id=11c884399a09&user=Pratyush+Tripathy&userId=804b4cc9d31c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}