{"url": "https://towardsdatascience.com/a-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3", "time": 1683017230.6086102, "path": "towardsdatascience.com/a-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3/", "webpage": {"metadata": {"title": "A Simple Guide To Command Line Arguments With ArgParse | by Sam Starkman | Towards Data Science", "h1": "A Simple Guide To Command Line Arguments With ArgParse", "description": "The standard Python library argparse used to incorporate the parsing of command line arguments. Instead of having to manually set variables inside of the code, argparse can be used to add flexibility\u2026"}, "outgoing_paragraph_urls": [{"url": "https://pip.pypa.io/en/stable/installing/", "anchor_text": "here", "paragraph_index": 2}], "all_paragraphs": ["The standard Python library argparse used to incorporate the parsing of command line arguments. Instead of having to manually set variables inside of the code, argparse can be used to add flexibility and reusability to your code by allowing user input values to be parsed and utilized.", "Since argparse is part of the standard Python library, it should already be installed. However, if it\u2019s not, you can install it using the follwing command:", "If you do not have pip installed, follow the installation docs here.", "Here is a file called hello.py to demonstrate a very basic example of the structure and usage of the argparse library:", "The code above is the most straightforward way to implement argparse. After importing the library, argparse.ArgumentParser() initializes the parser so that you can start to add custom arguments. To add your arguments, use parser.add_argument(). Some important parameters to note for this method are name, type, and required. The name is exactly what it sounds like \u2014 the name of the command line field. The type is the variable type that is expected as an input, and the required parameter is a boolean for whether or not this command line field is mandatory or not. The actual arguments can be accessed with args.name, where name is the name of the argument identified in add_argument().", "Below is an example of the output when this code is run:", "As you can see, this will throw an error because the required name argument is missing. This is the result when you include --name:", "Sometimes, you don\u2019t want to use the flag\u2019s name in the argument. You can use a positional argument to eliminate the need to specify the --name flag before inputting the actual value. Below are two versions \u2014 the first without positional arguments (multiply.py), and the second using positional arguments (multiply_with_positional.py).", "While positional arguments make the command line cleaner, it can sometimes be difficult to tell what the actual field is since there is no visible name associated with it. To aid with this, you can use the help parameter in add_argument() to specify more details about the argument.", "Now, when you run your program with the help flag -h, you can see these details.", "Optional arguments are useful if you want to give the user a choice to enable certain features. To add an optional argument, simply omit the required parameter in add_argument().", "Here we see two arguments: a name, which is required, and an optional age. (Notice the required=True is missing from the --age argument.)", "The two outputs below show the execution when --age is included and when it is not.", "We can check to see if the args.age argument exists and implement different logic based on whether or not the value was included.", "Let\u2019s say that instead of specifying x and y arguments for the user to input, you want the user to input a list of numbers and the script will return the sum of them all. There is no need to create a new argument for each new value (you also can\u2019t possibly know how many values a user will input!) Using the nargs parameter in add_argument(), you can specify the number (or arbitrary number) of inputs the argument should expect.", "In this example named sum.py, the --valueargument takes in 3 integers and will print the sum.", "What if you don\u2019t want just 3 values, but any number of inputs? You can set nargs='+', which will allow the argument to take in any number of values. Using the same example above, with the only change being nargs=3 to nargs='+', you can run the script with however many input values you want.", "Another important argparse feature is mutally exclusive arguments. There are times that, depending on one argument, you want to restrict the use of another. This could be because the user should only need to use one of the arguments, or that the arguments conflict with each other. The method add_mutually_exclusive_group() let\u2019s us do exactly that \u2014 add a group of arguments that are mutually exclusive.", "This next example, mutually_exclusive.py, demonstrates how both arguments in a mutually exclusive group cannot be used at the same time.", "By creating a group with group = parser.add_mutually_exclusive_group(), the user is only allowed to select one of the arguments to use. In the add_argument() method, there is a new parameter called action. This is simply storing the default method if the argument is blank.", "The output example below shows what happens when you try to call --add and --subtract in the same command.", "As you can see from the error message, the script does not allow for --add and --subtract to be called at the same time!", "The last argparse feature I am going to discuss is subparsers. Subparsers are powerful in that they allow for different arguments to be permitted based on the command being run. For example, when using the git command, some options are git checkout, git commit, and git add. Each one of these commands requires a unique set of arguments, and subparsers allow you to distinguish between them.", "This last example describes how to create a subparser to establish completely different sets of arguments, depending on the command run. This user.py script will be used to demonstrate a login or a register, contingent on the first positional argument provided.", "Here, we added subparser = parser.add_subparsers(dest='command'). This is used to create the subparser, and the dest='command' is used to differentiate between which argument is actually used. You can see in the if statement that we distinguish between \u201clogin\u201d and \u201cregister\u201d with args.command.", "We create two separate subparsers \u2014 one for \u201clogin\u201d and one for \u201cregister\u201d. This allows us to add individual arguments to each. Here, the \u201clogin\u201d subparser requires a username and a password. The \u201cregister\u201d subparser takes in a first and last name, a username, an email, and a password. Depending on whether \u201clogin\u201d or \u201cregister\u201d is specified in the script, the user must input the correct arguments, and the conditional statement will confirm the results.", "As expected, the print statement for logging in is called when login is specified as the command argument, and the register print statement is called when register is specified with its respective arguments.", "The goal of this post was to give a brief and relevant overview of the Python library argparse. Code cleanliness and reusability is extremely valuable these days, and argparse can help developers write more modular scripts when requiring user input and interaction.", "Thank you all for reading \u2014 I hope that I was able to improve your understanding of argparse, and that you can utilize it in your next project!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Engineer by day, writer by night. Follow for tech tutorials, productivity hacks, & psychology tricks to help you get ahead of the curve & win the game of life."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F6824c30ab1c3&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://sam-starkman.medium.com/?source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": ""}, {"url": "https://sam-starkman.medium.com/?source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": "Sam Starkman"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5acbe4c64aec&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&user=Sam+Starkman&userId=5acbe4c64aec&source=post_page-5acbe4c64aec----6824c30ab1c3---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6824c30ab1c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6824c30ab1c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@danielcgold?utm_source=medium&utm_medium=referral", "anchor_text": "Dan Gold"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://pip.pypa.io/en/stable/installing/", "anchor_text": "here"}, {"url": "https://medium.com/swlh/how-to-create-and-sell-nfts-8c1859eb3ffb", "anchor_text": "How To Create And Sell NFTsA step-by-step guide to minting your NFTs on OpenSeamedium.com"}, {"url": "https://towardsdatascience.com/a-simple-guide-to-pythons-datetime-library-55eb6ce845b5", "anchor_text": "A Simple Guide To Python\u2019s Datetime LibraryExamples and explanations of practical use casestowardsdatascience.com"}, {"url": "https://sestarkman.medium.com/membership", "anchor_text": "Join Medium with my referral link - Sam StarkmanAs a Medium member, a portion of your membership fee goes to writers you read, and you get full access to every story\u2026sestarkman.medium.com"}, {"url": "https://medium.com/tag/python?source=post_page-----6824c30ab1c3---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----6824c30ab1c3---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----6824c30ab1c3---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/tutorial?source=post_page-----6824c30ab1c3---------------tutorial-----------------", "anchor_text": "Tutorial"}, {"url": "https://medium.com/tag/software-development?source=post_page-----6824c30ab1c3---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6824c30ab1c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&user=Sam+Starkman&userId=5acbe4c64aec&source=-----6824c30ab1c3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6824c30ab1c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&user=Sam+Starkman&userId=5acbe4c64aec&source=-----6824c30ab1c3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6824c30ab1c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F6824c30ab1c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----6824c30ab1c3---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----6824c30ab1c3--------------------------------", "anchor_text": ""}, {"url": "https://sam-starkman.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://sam-starkman.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sam Starkman"}, {"url": "https://sam-starkman.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "339 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5acbe4c64aec&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&user=Sam+Starkman&userId=5acbe4c64aec&source=post_page-5acbe4c64aec--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F52d176cd641e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-command-line-arguments-with-argparse-6824c30ab1c3&newsletterV3=5acbe4c64aec&newsletterV3Id=52d176cd641e&user=Sam+Starkman&userId=5acbe4c64aec&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}