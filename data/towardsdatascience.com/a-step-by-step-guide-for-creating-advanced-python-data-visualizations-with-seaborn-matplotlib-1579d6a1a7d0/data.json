{"url": "https://towardsdatascience.com/a-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0", "time": 1682995539.274689, "path": "towardsdatascience.com/a-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0/", "webpage": {"metadata": {"title": "A step-by-step guide for creating advanced Python data visualizations with Seaborn / Matplotlib | by Shiu-Tang Li | Towards Data Science", "h1": "A step-by-step guide for creating advanced Python data visualizations with Seaborn / Matplotlib", "description": "In this article, I will go through a few sections first to prepare background knowledge for some readers who are new to Matplotlib: Which is good for creating easy plots (you call a bunch of plt.XXX\u2026"}, "outgoing_paragraph_urls": [{"url": "https://pbpython.com/effective-matplotlib.html", "anchor_text": "https://pbpython.com/effective-matplotlib.html", "paragraph_index": 6}, {"url": "https://matplotlib.org/api/axes_api.html", "anchor_text": "https://matplotlib.org/api/axes_api.html", "paragraph_index": 9}, {"url": "https://seaborn.pydata.org/generated/seaborn.FacetGrid.html", "anchor_text": "https://seaborn.pydata.org/generated/seaborn.FacetGrid.html", "paragraph_index": 28}, {"url": "https://seaborn.pydata.org/generated/seaborn.scatterplot.html", "anchor_text": "https://seaborn.pydata.org/generated/seaborn.scatterplot.html", "paragraph_index": 29}, {"url": "https://www.kaggle.com/mehdidag/black-friday", "anchor_text": "https://www.kaggle.com/mehdidag/black-friday", "paragraph_index": 32}], "all_paragraphs": ["In this article, I will go through a few sections first to prepare background knowledge for some readers who are new to Matplotlib:", "Then I\u2019ll talk about the process of creating advanced visualizations with an example:", "There\u2019re two ways to code in Matplotlib. The first one is state-based:", "Which is good for creating easy plots (you call a bunch of plt.XXX to plot each component in the graph), but you don\u2019t have too much control of the graph. The other one is object-oriented:", "It will take more time to code but you\u2019ll have full control of your figure. The idea is that you create a \u2018figure\u2019 object, which you can think of it as a bounding box of the whole visualization you\u2019re going to build, and one or more \u2018axes\u2019 object, which are subplots of the visualization, (Don\u2019t ask me why these subplots called \u2018axes\u2019. The name just sucks\u2026) and the subplots can be manipulated through the methods of these \u2018axes\u2019 objects.", "Let\u2019s stick with the objected-oriented approach in this tutorial.", "The following figure taken from https://pbpython.com/effective-matplotlib.html explains the components of a figure pretty well:", "Let\u2019s look at one simple example of how to create a line chart with object-oriented interface.", "In the codes above, we created an axes object, created a line plot on top of it, added a title, and rotated all the x-tick labels by 45 degrees counterclockwise.", "Check out the official API to see how to manipulate axes objects: https://matplotlib.org/api/axes_api.html", "After getting a rough idea about how Matplotlib works, it\u2019s time to check out some commonly seen plots. They are", "Line plots (x: Categorical - ordinal#1, y: Numerical #1) [Thanks to Michael Arons for pointing out an issue in the previous figure],", "Bar plots (x: Categorical #1, y: Numerical #1). Numerical #1 is often the count of Categorical #1.", "Histogram (x: Numerical #1, y: Numerical #2). Numerical #1 is combined into groups (converted to a categorical variable), and Numerical #2 is usually the count of this categorical variable.", "Kernel density plot (x: Numerical #1, y: Numerical #2). Numerical #2 is the frequency of Numerical #1.", "2-D kernel density plot (x: Numerical #1, y: Numerical #2, color: Numerical #3). Numerical #3 is the joint frequency of Numerical #1 and Numerical #2.", "Box plot (x: Categorical #1, y: Numerical #1, marks: Numerical #2). Box plot shows the statistics of each value in Categorical #1 so we\u2019ll get an idea of the distribution in the other variable. y-value: the value for the other variable; marks: showing how these values are distributed (range, Q1, median, Q3).", "Violin plot (x: Categorical #1, y: Numerical #1, Width/Mark: Numerical #2). Violin plot is sort of similar to box plot but it shows the distribution better.", "Heat map (x: Categorical #1, y: Categorical #2, Color: Numerical #1). Numerical #1 could be the count for Categorical #1 and Categorical #2 jointly, or it could be other numerical attributes for each value in the pair (Categorical #1, Categorical #2).", "To learn how to plot these figures, the readers can check out the seaborn APIs by googling for the following list:", "sns.barplot / sns.distplot / sns.lineplot / sns.kdeplot / sns.violinplot sns.scatterplot / sns.boxplot / sns.heatmap", "I\u2019ll give two example codes showing how 2D kde plots / heat map are generated in object-oriented interface.", "The key is the argument ax=ax. When running .kdeplot() method, seaborn would apply the changes to ax, an \u2018axes\u2019 object.", "For these basic plots, only limited amount of information can be displayed (2\u20133 variables). What if we\u2019d like to show more info to these plots? Here are a few ways.", "Or, we can combine a bar chart and a line chart with the same x-axis but different y-axis:", "A few comments here. Because the two plots have different y-axis, we need to create another \u2018axes\u2019 object with the same x-axis (using .twinx()) and then plot on different \u2018axes\u2019. sns.set(\u2026) is to set specific aesthetics for the current plot, and we run sns.set() in the end to set everything back to default settings.", "Combining different barplots into one grouped barplot also adds one categorical dimension to the plot (one more categorical variable).", "In the code example above, you can customize variable names, colors, and figure size. number_groups and bin_width are calculated based on the input data. I then wrote a for-loop to plot the bars, one color at a time, and set the ticks and legends in the very end.", "2. Facet \u2014 mapping dataset into multiple axes, and they differ by one or two categorical variable(s). The reader could find a bunch examples in https://seaborn.pydata.org/generated/seaborn.FacetGrid.html", "3. Color / Shape / Size of nodes in a scatter plot: The following code example taken from Seaborn Scatter Plot API shows how it works. (https://seaborn.pydata.org/generated/seaborn.scatterplot.html)", "One of the advantages for object-oriented interface is that we can easily partition our figure into several subplots and manipulate each subplot with \u2018axes\u2019 API.", "In the example, we first partition the figure into 3*3 = 9 small boxes with gridspec.GridSpec(), and then define a few axes objects. Each axes object could contain one or more boxes. Say in the codes above, gs[0, 1:3] = gs[0, 1] + gs[0, 2] is assigned to axes object ax2. wspace and hspace are parameters controlling the space between plots.", "With some tutorials from the previous sections, it\u2019s time to produce some cool stuffs. Let\u2019s download the Analytics Vidhya Black Friday Sales data fromhttps://www.kaggle.com/mehdidag/black-friday and do some easy data preprocessing:", "You\u2019ll then get a table of user ID, gender, age, and the average price of items in each customer\u2019s purchase.", "Step 1. GoalWe\u2019re curious about how age and gender would affect the average purchased item price during Black Friday, and we hope to see the price distribution as well. We also want to know the percentages for each age group.", "Step 2. VariablesWe\u2019d like to include age group (categorical), gender (categorical), average item price (numerical), and the distribution of average item price (numerical) in the plot. We need to include another plot with the percentage for each age group (age group + count/frequency).", "To show average item price + its distributions, we can go with kernel density plot, box plot, or violin plot. Among these, kde shows the distribution the best. We then plot two or more kde plots in the same figure and then do facet plots, so age group and gender info can be both included. For the other plot, a bar plot can do the job well.", "Step 3. VisualizationOnce we have a plan about the variables, we could then think about how to visualize it. We need to do figure partitions first, hide some boundaries, xticks, and yticks, and then add a bar chart to the right.", "The plot below is what we\u2019re going to create. From the figure, we can clearly see that men tend to purchase more expensive items then women do based on the data, and elder people tend to purchase more expensive items (the trend is clearer for the top 4 age groups). We also found that people with age 18\u201345 are the major buyers in Black Friday sales.", "The codes below generate the plot (explanations are included in the comments):", "Plots like this one are also called \u2018Joy plot\u2019 or \u2018Ridgeline plot\u2019. If you try to use some joyplot packages to plot the same figure, you\u2019ll find it a bit difficult to do because two density plots are included in the each subplot.", "Hope this is a joyful reading for you.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Mathematician \u2192 Data scientist \u2192 Software engineer"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1579d6a1a7d0&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@shiutangli?source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@shiutangli?source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": "Shiu-Tang Li"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1e77e054ef75&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&user=Shiu-Tang+Li&userId=1e77e054ef75&source=post_page-1e77e054ef75----1579d6a1a7d0---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1579d6a1a7d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1579d6a1a7d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://matplotlib.org/tutorials/introductory/lifecycle.html", "anchor_text": "https://matplotlib.org/tutorials/introductory/lifecycle.html"}, {"url": "https://pbpython.com/effective-matplotlib.html", "anchor_text": "https://pbpython.com/effective-matplotlib.html"}, {"url": "https://pbpython.com/effective-matplotlib.html", "anchor_text": "https://pbpython.com/effective-matplotlib.html"}, {"url": "https://matplotlib.org/api/axes_api.html", "anchor_text": "https://matplotlib.org/api/axes_api.html"}, {"url": "https://seaborn.pydata.org/generated/seaborn.FacetGrid.html", "anchor_text": "https://seaborn.pydata.org/generated/seaborn.FacetGrid.html"}, {"url": "https://seaborn.pydata.org/generated/seaborn.scatterplot.html", "anchor_text": "https://seaborn.pydata.org/generated/seaborn.scatterplot.html"}, {"url": "https://www.kaggle.com/mehdidag/black-friday", "anchor_text": "https://www.kaggle.com/mehdidag/black-friday"}, {"url": "https://medium.com/tag/data-science?source=post_page-----1579d6a1a7d0---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/matplotlib?source=post_page-----1579d6a1a7d0---------------matplotlib-----------------", "anchor_text": "Matplotlib"}, {"url": "https://medium.com/tag/seaborn?source=post_page-----1579d6a1a7d0---------------seaborn-----------------", "anchor_text": "Seaborn"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----1579d6a1a7d0---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/python?source=post_page-----1579d6a1a7d0---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1579d6a1a7d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&user=Shiu-Tang+Li&userId=1e77e054ef75&source=-----1579d6a1a7d0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1579d6a1a7d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&user=Shiu-Tang+Li&userId=1e77e054ef75&source=-----1579d6a1a7d0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1579d6a1a7d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F1579d6a1a7d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----1579d6a1a7d0---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----1579d6a1a7d0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@shiutangli?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@shiutangli?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Shiu-Tang Li"}, {"url": "https://medium.com/@shiutangli/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.5K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1e77e054ef75&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&user=Shiu-Tang+Li&userId=1e77e054ef75&source=post_page-1e77e054ef75--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fceccfcc5a7a4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-step-by-step-guide-for-creating-advanced-python-data-visualizations-with-seaborn-matplotlib-1579d6a1a7d0&newsletterV3=1e77e054ef75&newsletterV3Id=ceccfcc5a7a4&user=Shiu-Tang+Li&userId=1e77e054ef75&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}