{"url": "https://towardsdatascience.com/string-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f", "time": 1683001814.856131, "path": "towardsdatascience.com/string-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f/", "webpage": {"metadata": {"title": "String Similarity Matching for Big Data using Distributed Cloud Computations | by Georgios Ntanakas | Towards Data Science", "h1": "String Similarity Matching for Big Data using Distributed Cloud Computations", "description": "Combining BigQuery, Python\u2019s Scikit-Learn & Dask (distributed) and Kubernetes in a single project."}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Red_pill_and_blue_pill", "anchor_text": "a blue and a red pill", "paragraph_index": 1}, {"url": "https://colab.research.google.com/", "anchor_text": "Google Colaboratory", "paragraph_index": 3}, {"url": "https://en.wikipedia.org/wiki/Approximate_string_matching", "anchor_text": "approximate string matching", "paragraph_index": 4}, {"url": "https://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance", "anchor_text": "Jaro\u2013Winkler distance", "paragraph_index": 4}, {"url": "https://en.wikipedia.org/wiki/Levenshtein_distance", "anchor_text": "Levenshtein distance", "paragraph_index": 4}, {"url": "https://github.com/seatgeek/fuzzywuzzy", "anchor_text": "fuzzy wuzzy", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Tf%E2%80%93idf", "anchor_text": "tf\u2013idf", "paragraph_index": 6}, {"url": "https://towardsdatascience.com/fuzzy-matching-at-scale-84f2bfd0c536", "anchor_text": "here", "paragraph_index": 6}, {"url": "https://bergvca.github.io/2017/10/14/super-fast-string-matching.html", "anchor_text": "here", "paragraph_index": 6}, {"url": "https://towardsdatascience.com/fuzzy-matching-at-scale-84f2bfd0c536", "anchor_text": "here", "paragraph_index": 6}, {"url": "https://dask.org/", "anchor_text": "Dask", "paragraph_index": 6}, {"url": "https://cloud.google.com/bigquery/docs/reference/libraries#using_the_client_library", "anchor_text": "BigQuery Client Library for Python", "paragraph_index": 10}, {"url": "https://github.com/ing-bank/sparse_dot_topn", "anchor_text": "sparse_dot_topn", "paragraph_index": 19}, {"url": "https://cython.org/", "anchor_text": "Cython", "paragraph_index": 19}, {"url": "https://medium.com/u/f1ffe8077e95?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": "Gaiar Baimuratov", "paragraph_index": 42}], "all_paragraphs": ["Our story \u2014 like most stories \u2014 starts with an ambitious undertaking! We are offered two large data-sets (coming from two tables in BigQuery). One consists of all the app names from the Google Play and iOS App Stores \u2014 about 14 million entries\u2014 which we shall call the \u201cclean\u201d app names. The other contains about 5K \u201cdirty\u201d app names. Dirtiness refers to missing words, misspelling of certain words, additional words referring to the OS or other info etc. Examples can be found by looking at the section \u201cPutting everything together and running it\u201d.", "Along with the data-sets we are offered a blue and a red pill. We think we are brave enough, decide to take the red pill, accept the challenge and seek the brutal truth.", "The request is to match entries from the \u201cdirty\u201d data-set to entries in the \u201cclean\u201d one and then store the results as a lookup table.", "Before becoming a man and facing t\u0336h\u0336e\u0336 \u0336r\u0336e\u0336a\u0336l\u0336 \u0336w\u0336o\u0336r\u0336l\u0336d\u0336 production, a boy needs to develop his skills in the playground. A fancy one is Google Colaboratory, a Jupyter notebook hosted on the cloud, offering free, powerful computing resources (including GPUs/TPUs) and that\u2019s where the first tests were run.", "A computer scientist would classify our problem as an approximate string matching problem. Traditional solutions to these problems use different string metrics to come up with a distance between two given sequences of characters. Examples are the Jaro\u2013Winkler distance and the Levenshtein distance.", "Our first attempt was to employ fuzzy wuzzy, a Python library that implements the Levenshtein distance. (Please take the rough numbers that follow \u2014 rather than an appropriate bench-marking \u2014 with a pinch of salt. The final differences are so significant that perfect precision is of little importance.) Fuzzy wuzzy needed about 15 min to compute the distance between a single entry from the \u201cdirty\u201d data-set and all the entries from the \u201cclean\u201d data-set. Repeating the process 5K times translates to about 52 days, which is slightly more than we would like for a process that runs at least once daily. If time is money, we would be broke by now!", "To avoid crippling loans and bankruptcy, a slightly different approach was employed: increasing performance through the power of numbers. The string data-sets are transformed into vectors based on tf\u2013idf in order to use the cosine similarity. The core of the algorithm has been used before for similar problems here, here and here. A few modifications are introduced in this article to enable running the computations distributed on a cloud Dask client in order to further improve performance.", "Dask is a library that provides ways to scale Pandas, Scikit-Learn, and Numpy workflows natively, with minimal rewriting. Thus, ordinary Python operations can be distributed/parallelized between different nodes/CPU cores. It also can (but doesn\u2019t have to) run on a distributed cluster. I.e., Dask is doing nothing more than providing the infrastructure to split data, such as a Pandas DataFrame, into different nodes and then perform operations using multiple cores and ensuring communication between the split data.", "Note: Below the clean and dirty name conventions are used for the baseline and the to-be-matched data-set respectively.", "Here is a list of the basic libraries that were used for this project:", "To get data from BigQuery, we are using the BigQuery Client Library for Python. The data is loaded into a Pandas DataFrame by the client, which is immediately transformed into a Dask DataFrame. The Dask DataFrame is nothing more than a composition of Pandas DataFrames distributed over a number of partitions (npartitions), depending on the CPU architecture.", "Transforming the DataFrames from strings to vectors using tf-idf needs literally 3 lines of code:", "The vectorizing function is initialized using the TfidfVectorizer function from Scikit-Learn and by defining the analyzer function (see info below). The clean DataFrame is used to define the feature vector (based on the analyzer) and compute the clean tf-idf matrix at the same time (fit_transform) and then the dirty tf-idf matrix is computed (transform).", "The analyzer is the function that is used to split each app name (string) into smaller bits. Gathering all these smaller bits from all entries of the clean DataFrame defines the feature vector. If a specific app name contains this bit, then when transforming into a vector it will get a float value at the corresponding position \u2014 if not a 0. The float value depends on the number of times this bit appears within the app name and the value is modified so that the vector for this app name is normalized (vector norm equal to 1 unit). To give an example: If the analyzer is defined as below", "and the clean DataFrame is simply the following,", "then the feature vector has this form:", "and the clean DataFrame is transformed to the following vector matrix (the output matrix is given in sparse matrix (CSR) format but displayed as an array here)", "As soon as clean and dirty data-sets are in vector mode, we can proceed with getting the cosine similarity scores matrix. Performing the dot product between the clean and dirty vectorized matrices is enough to give us the cosine since the vectors are normalized. I.e., the dot product coincides with the cosine (similarity).", "To do so, the following code is used:", "Here, the sparse_dot_topn package is used, which provides a fast way to perform a sparse matrix multiplication followed by top-n multiplication result selection using Cython. The cosine similarities will be given in a sparse matrix form with rows corresponding to the dirty data-set and columns to the clean one.", "Using this similarity matrix, we can extract the entries matched between clean and dirty and their similarity score using:", "Last but not least, we need to upload the result of our matching process back to BiqQuery as a lookup table. The code to do so looks like this:", "Would you prefer a picture rather than a thousand words of the algorithm? Here is a simplified diagram of it:", "Dask is such a versatile tool that can benefit you even by running it locally using its drop-in Pandas API support. However, it shows it\u2019s full power when it runs on a distributed system \u2014 aka cluster. In collaboration with the DevOps engineers, we got access to a managed Kubernetes (k8s) cluster deployed on Google Cloud Platform (GCP). In most cases, after getting access to the cluster, Dask can easily be deployed on k8s using the helm package manager by running the command:", "After a while, you\u2019ll get 5 pods deployed:", "To get the list of the pods, once deployed, we\u2019ve created a simple shell script. Run it and it will show the list of IP addresses for all freshly created pods:", "In case you don\u2019t need it anymore or you broke something and want a fresh start you can run:", "Does it look too easy to be true? You\u2019re right; universal solutions rarely work.", "Here comes a bit of customization to make it work for our needs.", "After the initial test, we\u2019ve discovered a couple of issues when using Dask helm as-is.", "1. Bugs in helm configurationFortunately, the bugs were fixed already in the official repo via pending PRs. To apply them, we had to make a local clone of the repo and merge all the PRs with the solutions as patches. That is certainly not the ideal solution but it is a quick way to make it work.Another problem was that the Jupyter Lab version defined in the repo had some UI troubles. To overcome them, it had to be upgraded by specifying the package version. The way to do it is included in the solution of the 2nd issue.", "2. Missing packagesAs our data pipeline is based on GCP, we needed to include the SDK packages and some other libraries. Fortunately, Dask helm chart supports the usage of a YAML config file. Thus, it can be specified which pip or conda packages to be included, how much RAM to allocate to workers and much more than that.In our case, we\u2019ve added the following:", "Most of the packages will be installed via conda using the channels conda-forge and gaiar(see below why this channel is needed too). The rest is installed via pip.", "3. Missing binary package versionFor speeding up the sparse matrix multiplication, we are using sparse_dot_topn, as mentioned in the algorithm section, which relies on Cython. Packages like this are usually supplied in two ways: either as binary, pre-compiled packages or when library compiles some of it is parts on installation host. In our case, we were missing the binary distribution and this meant that we should add compilation tools in our already \u201cnot-so-light\u201d image. Instead, we chose another way. I\u2019ve already had experience in building and maintaining conda packages in my own channel. A significant advantage of conda is that it ships packages in a binary way and that\u2019s exactly what we needed.Defining the YAML file with conda recipe based on the pip distribution is relatively easy:", "With that recipe, you run the conda build command and upload the package to the channel you have access to. Then, the package can be installed with conda -c CHANNEL_NAME PACKAGE_NAME or in our case conda -c gaiar sparse_dot_topn. I prepared two versions of it \u2014 one for Linux and another for MacOS (as it also had some troubles with the installation).", "4. Limited resources for podsThis part is case specific and depends on what kind of tasks Dask is running and which are the constraints. In our case, we needed more RAM and wanted to define also the upper limit that every pod can consume. This is done again via a config YAML file:", "This translates to: the lower limit for every worker is 3G, but it can request up to 6G if it needs to.", "Here is a simple demo of Dask working on k8s on GCP:", "Combining the algorithm and the deployment mentioned above, our code performs the matching process in about 20\u201330 mins; quite a significant speed up compared to the original 52 days. \ud83d\ude06", "Here is a small part from the output table of one of our runs:", "This table and the execution time needed to obtain it is an indication that the red pill might have been the wiser decision this time.", "Let\u2019s try to give it in one sentence: Tf-idf vectorization and cosine similarity combined with efficient sparse matrix computations and parallel execution of operations using the distribution capabilities of Dask, deployed in Kubernetes proved to be a very efficient approach for handling string similarity problems of large scale.", "Special thanks to Gaiar Baimuratov for making the deployment happen and writing the corresponding section.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "PhD in optimization, likes dirty hands, making sense out of things and communicating it."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fea7cfc918b9f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@georgios.ntanakas?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@georgios.ntanakas?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": "Georgios Ntanakas"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F732af0cd466e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&user=Georgios+Ntanakas&userId=732af0cd466e&source=post_page-732af0cd466e----ea7cfc918b9f---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fea7cfc918b9f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fea7cfc918b9f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.flickr.com/photos/daveynin/", "anchor_text": "daveynin"}, {"url": "https://www.flickr.com", "anchor_text": "flickr"}, {"url": "https://commons.wikimedia.org/wiki/User:W.carter", "anchor_text": "W.carter"}, {"url": "https://commons.wikimedia.org", "anchor_text": "Wikimedia Commons"}, {"url": "https://en.wikipedia.org/wiki/Red_pill_and_blue_pill", "anchor_text": "a blue and a red pill"}, {"url": "https://colab.research.google.com/", "anchor_text": "Google Colaboratory"}, {"url": "https://en.wikipedia.org/wiki/Approximate_string_matching", "anchor_text": "approximate string matching"}, {"url": "https://en.wikipedia.org/wiki/Jaro%E2%80%93Winkler_distance", "anchor_text": "Jaro\u2013Winkler distance"}, {"url": "https://en.wikipedia.org/wiki/Levenshtein_distance", "anchor_text": "Levenshtein distance"}, {"url": "https://github.com/seatgeek/fuzzywuzzy", "anchor_text": "fuzzy wuzzy"}, {"url": "https://en.wikipedia.org/wiki/Tf%E2%80%93idf", "anchor_text": "tf\u2013idf"}, {"url": "https://towardsdatascience.com/fuzzy-matching-at-scale-84f2bfd0c536", "anchor_text": "here"}, {"url": "https://bergvca.github.io/2017/10/14/super-fast-string-matching.html", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/fuzzy-matching-at-scale-84f2bfd0c536", "anchor_text": "here"}, {"url": "https://dask.org/", "anchor_text": "Dask"}, {"url": "https://cloud.google.com/bigquery/docs/reference/libraries#using_the_client_library", "anchor_text": "BigQuery Client Library for Python"}, {"url": "https://github.com/ing-bank/sparse_dot_topn", "anchor_text": "sparse_dot_topn"}, {"url": "https://cython.org/", "anchor_text": "Cython"}, {"url": "https://medium.com/u/f1ffe8077e95?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": "Gaiar Baimuratov"}, {"url": "https://imgflip.com", "anchor_text": "imgflip.com"}, {"url": "https://github.com/helm/helm", "anchor_text": "in the official repo"}, {"url": "https://medium.com/u/f1ffe8077e95?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": "Gaiar Baimuratov"}, {"url": "https://medium.com/tag/big-data?source=post_page-----ea7cfc918b9f---------------big_data-----------------", "anchor_text": "Big Data"}, {"url": "https://medium.com/tag/string-similarity?source=post_page-----ea7cfc918b9f---------------string_similarity-----------------", "anchor_text": "String Similarity"}, {"url": "https://medium.com/tag/cloud-computing?source=post_page-----ea7cfc918b9f---------------cloud_computing-----------------", "anchor_text": "Cloud Computing"}, {"url": "https://medium.com/tag/dask?source=post_page-----ea7cfc918b9f---------------dask-----------------", "anchor_text": "Dask"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fea7cfc918b9f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&user=Georgios+Ntanakas&userId=732af0cd466e&source=-----ea7cfc918b9f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fea7cfc918b9f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&user=Georgios+Ntanakas&userId=732af0cd466e&source=-----ea7cfc918b9f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fea7cfc918b9f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fea7cfc918b9f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----ea7cfc918b9f---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----ea7cfc918b9f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@georgios.ntanakas?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@georgios.ntanakas?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Georgios Ntanakas"}, {"url": "https://medium.com/@georgios.ntanakas/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "16 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F732af0cd466e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&user=Georgios+Ntanakas&userId=732af0cd466e&source=post_page-732af0cd466e--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F732af0cd466e%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstring-similarity-matching-for-big-data-using-distributed-cloud-computations-ea7cfc918b9f&user=Georgios+Ntanakas&userId=732af0cd466e&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}