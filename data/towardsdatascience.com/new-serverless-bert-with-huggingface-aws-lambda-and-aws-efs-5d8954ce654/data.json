{"url": "https://towardsdatascience.com/new-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654", "time": 1683016494.145053, "path": "towardsdatascience.com/new-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654/", "webpage": {"metadata": {"title": "New Serverless Bert with Huggingface, AWS Lambda, and AWS EFS | by Philipp Schmid | Towards Data Science", "h1": "New Serverless Bert with Huggingface, AWS Lambda, and AWS EFS", "description": "4 months ago I wrote the article \u201cServerless BERT with HuggingFace and AWS Lambda\u201d, which demonstrated how to use BERT in a serverless way with AWS Lambda and the Transformers Library from\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.philschmid.de/serverless-bert-with-huggingface-and-aws-lambda", "anchor_text": "\u201cServerless BERT with HuggingFace and AWS Lambda\u201d", "paragraph_index": 0}, {"url": "https://www.philschmid.de/serverless-bert-with-huggingface-and-aws-lambda", "anchor_text": "\u201cBERT and its fellow friends RoBERTa, GPT-2, ALBERT, and T5 will drive business and business ideas in the next few years and will change/disrupt business areas like the internet once did.\u201d", "paragraph_index": 1}, {"url": "https://www.blog.google/products/search/search-language-understanding-bert/", "anchor_text": "10% of English", "paragraph_index": 2}, {"url": "https://searchon.withgoogle.com/", "anchor_text": "100% of English-based queries", "paragraph_index": 2}, {"url": "https://twitter.com/searchliaison/status/1204152378292867074", "anchor_text": "70 languages with BERT for Google Search", "paragraph_index": 2}, {"url": "https://github.com/philschmid/efsync", "anchor_text": "efsync", "paragraph_index": 4}, {"url": "https://www.serverless.com/", "anchor_text": "Serverless Framework", "paragraph_index": 5}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/welcome.html", "anchor_text": "AWS Lambda", "paragraph_index": 5}, {"url": "https://aws.amazon.com/en/efs/", "anchor_text": "AWS EFS", "paragraph_index": 5}, {"url": "https://github.com/philschmid/efsync", "anchor_text": "efsync", "paragraph_index": 5}, {"url": "https://www.terraform.io/", "anchor_text": "Terraform", "paragraph_index": 5}, {"url": "https://github.com/huggingface/transformers", "anchor_text": "transformers", "paragraph_index": 5}, {"url": "https://rajpurkar.github.io/SQuAD-explorer/explore/v2.0/dev/", "anchor_text": "SQuADv2", "paragraph_index": 5}, {"url": "https://github.com/philschmid/new-serverless-bert-aws-lambda", "anchor_text": "Github repository", "paragraph_index": 6}, {"url": "https://www.serverless.com/", "anchor_text": "The Serverless Framework", "paragraph_index": 7}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/welcome.html", "anchor_text": "AWS Lambda", "paragraph_index": 8}, {"url": "https://aws.amazon.com/de/efs/", "anchor_text": "Amazon EFS", "paragraph_index": 9}, {"url": "https://github.com/philschmid/efsync", "anchor_text": "Efsync", "paragraph_index": 10}, {"url": "https://www.terraform.io/", "anchor_text": "Terraform", "paragraph_index": 11}, {"url": "https://github.com/huggingface/transformers", "anchor_text": "Transformers library", "paragraph_index": 12}, {"url": "https://serverless.com/", "anchor_text": "Serverless Framework", "paragraph_index": 13}, {"url": "https://www.terraform.io/", "anchor_text": "Terraform", "paragraph_index": 13}, {"url": "https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html", "anchor_text": "link", "paragraph_index": 17}, {"url": "https://github.com/philschmid/new-serverless-bert-aws-lambda", "anchor_text": "Github repository", "paragraph_index": 20}, {"url": "https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started", "anchor_text": "tutorial", "paragraph_index": 21}, {"url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs", "anchor_text": "documentation", "paragraph_index": 24}, {"url": "https://github.com/philschmid/efsync", "anchor_text": "efsync", "paragraph_index": 29}, {"url": "https://github.com/philschmid/efsync#sdk", "anchor_text": "configurations", "paragraph_index": 32}, {"url": "https://github.com/philschmid/efsync", "anchor_text": "here", "paragraph_index": 35}, {"url": "https://www.notion.so/add-the-mobileBERTmodel-from-to-our-function-and-create-an-inference-pipeline-b5530c56acb7437c8ef1a395c4436b7d", "anchor_text": "link", "paragraph_index": 39}, {"url": "https://www.philschmid.de/efsync-my-first-open-source-mlops-toolkit", "anchor_text": "here", "paragraph_index": 40}, {"url": "https://huggingface.co/models", "anchor_text": "model hub of HuggingFace", "paragraph_index": 41}, {"url": "https://www.philschmid.de/scaling-machine-learning-from-zero-to-hero", "anchor_text": "Scaling Machine Learning from ZERO to HERO", "paragraph_index": 48}, {"url": "https://github.com/philschmid/new-serverless-bert-aws-lambda", "anchor_text": "GitHub repository", "paragraph_index": 58}, {"url": "https://github.com/philschmid/new-serverless-bert-aws-lambda", "anchor_text": "here", "paragraph_index": 58}, {"url": "https://twitter.com/_philschmid", "anchor_text": "Twitter", "paragraph_index": 59}, {"url": "https://www.linkedin.com/in/philipp-schmid-a6a2bb196/", "anchor_text": "LinkedIn", "paragraph_index": 59}], "all_paragraphs": ["4 months ago I wrote the article \u201cServerless BERT with HuggingFace and AWS Lambda\u201d, which demonstrated how to use BERT in a serverless way with AWS Lambda and the Transformers Library from HuggingFace.", "In this article, I already predicted that \u201cBERT and its fellow friends RoBERTa, GPT-2, ALBERT, and T5 will drive business and business ideas in the next few years and will change/disrupt business areas like the internet once did.\u201d", "Since then the usage of BERT in Google Search increased from 10% of English queries to almost 100% of English-based queries. But that\u2019s not it. Google powers now over 70 languages with BERT for Google Search.", "In this article, we are going to tackle all the drawbacks from my previous article like model load time, and dependency size, and usage.", "We are going to build the same \u201cServerless BERT powered Question-Answering API\u201d as last time. But instead of using compressing techniques to fit our Python dependencies into our AWS Lambda function, we are using a tool called efsync. I built efsync to automatically upload dependencies to an AWS EFS filesystem and then mount them into our AWS Lambda function. This allows us to include our machine learning model into our function without the need to load it from S3.", "We are going to build a serverless Question-Answering API using the Serverless Framework, AWS Lambda, AWS EFS, efsync, Terraform, the transformers Library from HuggingFace, and a mobileBert model from Google fine-tuned on SQuADv2.", "You find the complete code for it in this Github repository.", "The Serverless Framework helps us develop and deploy AWS Lambda functions. It\u2019s a CLI that offers structure, automation, and best practices right out of the box.", "AWS Lambda is a serverless computing service that lets you run code without managing servers. It executes your code only when required and scales automatically, from a few requests per day to thousands per second.", "Amazon EFS is a fully-managed service that makes it easy to set up, scale, and cost-optimize file storage in the Amazon Cloud. Since June 2020 you can mount AWS EFS to AWS Lambda functions", "Efsync is a CLI/SDK tool, which automatically syncs files and dependencies to AWS EFS. It enables you to install dependencies with the AWS Lambda runtime directly into your EFS filesystem and use them in your AWS Lambda function.", "Terraform is an Infrastructure as Code (IaC) tool for building cloud-native infrastructure safely and efficiently. Terraform enables you to use HCL (HashiCorp Configuration Language) to describe your cloud-native infrastructure.", "The Transformers library provides state-of-the-art machine learning architectures like BERT, GPT-2, RoBERTa, XLM, DistilBert, XLNet, T5 for Natural Language Understanding (NLU) and Natural Language Generation (NLG). It also provides thousands of pre-trained models in 100+ different languages.", "Before we get started, make sure you have the Serverless Framework and Terraform configured and set up. Furthermore, you need access to an AWS Account to create an EFS Filesystem, API Gateway, and the AWS Lambda function.", "In the tutorial, we are going to build a Question-Answering API with a pre-trained BERT model from Google.", "We are going to send a context (small paragraph) and a question to the lambda function, which will respond with the answer to the question.", "What are we going to do:", "You will need a new IAM user called serverless-bert with AdministratorAccess and configured it with the AWS CLI using aws configure --profile serverless-bert. This IAM user is used in the complete tutorial. If you don\u00b4t know how to do this check out this link.", "Note: I don\u00b4t recommend creating an IAM User for production usage with AdministratorAccess", "Before we start, I want to say that we\u2019re not gonna go into detail for every step. If you want to understand more about how to use Deep Learning in AWS Lambda I suggest you check out my other articles:", "You find the complete code in this Github repository.", "At first, we define and create the required infrastructure using terraform. If you haven\u00b4t set it up you can check out this tutorial.", "As infrastructure, we need an AWS EFS filesystem, an access point, and a mount target to be able to use it in our AWS Lambda function. We could also create a VPC, but for the purpose of this tutorial, we are going to use the default VPC and his subnets.", "Next, we create a directory serverless-bert/, which contains all code for this tutorial with a subfolder terraform/ including our main.tf file.", "Afterwards, we open the main.tf with our preferred IDE and add the terraform resources. I provided a basic template for all of them. If you want to customize them or add extra resources check out the documentation for all possibilities.", "To change the name of EFS you can edit the value creation_token in the aws_efs_filesystem resource. Otherwise, the name of the EFS will be \"serverless-bert\". Additionally, we create an SSM parameter for the efs_access_point_id at the end to use it later in our serverless.yaml.", "To use terraform we first run terraform init to initialize our project and provider (AWS). Be aware we have to be in the terraform/ directory.", "Afterwards, we check our IaC definitions with terraform plan", "When this is complete we create our infrastructure with terraform apply", "The next step is to add and install our dependencies on our AWS EFS filesystem. Therefore we use a tool called efsync. I created efsync to install dependencies with the AWS Lambda runtime directly into your EFS filesystem and use them in your AWS Lambda function.", "install efsync by running pip3 install efsync", "After it is installed we create a requirements.txt in our root directory serverless-bert/ and add our dependencies to it.", "Efsync provides different configurations. This time we use the CLI with a yaml configuration. For that, we create an efsync.yaml file in our root directory.", "Here we have to adjust the values of efs_filesystem_id and subnet_Id. Get these values by either looking them up in the management console or using these two CLI commands.", "Beware that if you changed the creation_token earlier you have to adjust it here.", "You can choose one of your subnet_Ids for the efsync.yaml configuration. If you want to learn more about the configuration options, you can read more here.", "After the configuration of our efsync.yaml we run efsync -cf efsync.yaml to install our Python dependencies on our AWS EFS filesystem. This will take around 5-10 Minutes.", "Third, we create our AWS Lambda function by using the Serverless CLI with the aws-python3 template.", "This CLI command will create a new directory containing a handler.py, .gitignore, and serverless.yaml file. The handler.py contains some basic boilerplate code.", "Since we are not including our Python dependencies into our AWS Lambda function, we have around 250MB of Storage to use for our model files. For those who are not that familiar with AWS Lambda and its limitations, you can check out this link.", "If you want to use models, which are bigger than 250MB you could use efsync to upload them to EFS and then load them from there. Read more here.", "To add our BERT model to our function we have to load it from the model hub of HuggingFace. For this, I have created a python script. Before we can execute this script we have to install the transformers library to our local environment and create a model directory in our function/ directory.", "After we installed transformers we create get_model.py file in the function/ directory and include the script below.", "To execute the script we run python3 get_model.py in the function/ directory.", "Tip: add the model directory to gitignore.", "The next step is to adjust our handler.py and include our serverless_pipeline().", "At first, we add all the required imports and our EFS Filesystem to the PYTHONPATH so we can import our dependencies from there. Therefore we use sys.path.append(os.environ['EFS_PIP_PATH']). We will define the EFS_PIP_PATH later in our serverless.yaml.", "We create serverless_pipeline() function, which initializes our model and tokenizer and returns a predict function, we can use in our handler.", "I provide the complete serverless.yamlfor this example, but we go through all the details we need for our EFS-filesystem and leave out all standard configurations. If you want to learn more about the serverless.yaml, I suggest you check out Scaling Machine Learning from ZERO to HERO. In this article, I went through each configuration and explain the usage of them.", "We need to install the serverless-pseudo-parameters plugin with the following command.", "We use the serverless-pseudo-parameters plugin to get our AWS::AccountID referenced in the serverless.yaml. All custom needed variables are referenced under custom or in our functions section.", "In order to deploy the function, we run serverless deploy --aws-profile serverless-bert.", "After this process is done we should see something like this.", "To test our Lambda function we can use Insomnia, Postman, or any other REST client. Just add a JSON with a context and a question to the body of your request. Let\u00b4s try it with our example from the colab notebook.", "Our serverless_pipeline() answered our question correctly with 83.1. Also, you can see the complete first request took 2900ms or 29s. 15 seconds of this used to initialize the model in our function.", "The second request took only 390ms.", "The best thing is, our BERT model automatically scales up if there are several incoming requests! It scales up to thousands of parallel requests without any worries.", "We have successfully implemented a Serverless Question-Answering API. For Implementation, we used both IaC tools and \u201cState of the Art\u201d NLP models in a serverless fashion. We reduced the complexity from a developer\u2019s perspective but included a lot of DevOps/MLOps steps. I think it is necessary to include DevOps/MLOps, which handles your deployment and provisioning if you want to run scalable serverless machine learning in production.", "You can find the GitHub repository with the complete code here.", "Thanks for reading. If you have any questions, feel free to contact me or comment on this article. You can also connect with me on Twitter or LinkedIn.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F5d8954ce654&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----5d8954ce654--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5d8954ce654--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@schmidphilipp1995?source=post_page-----5d8954ce654--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@schmidphilipp1995?source=post_page-----5d8954ce654--------------------------------", "anchor_text": "Philipp Schmid"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb5f02a773f45&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&user=Philipp+Schmid&userId=b5f02a773f45&source=post_page-b5f02a773f45----5d8954ce654---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5d8954ce654&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5d8954ce654&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@jipy32?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Jean-Philippe Delberghe"}, {"url": "https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://www.philschmid.de/new-serverless-bert-with-huggingface-aws-lambda", "anchor_text": "https://www.philschmid.de"}, {"url": "https://www.philschmid.de/serverless-bert-with-huggingface-and-aws-lambda", "anchor_text": "\u201cServerless BERT with HuggingFace and AWS Lambda\u201d"}, {"url": "https://www.philschmid.de/serverless-bert-with-huggingface-and-aws-lambda", "anchor_text": "\u201cBERT and its fellow friends RoBERTa, GPT-2, ALBERT, and T5 will drive business and business ideas in the next few years and will change/disrupt business areas like the internet once did.\u201d"}, {"url": "https://www.blog.google/products/search/search-language-understanding-bert/", "anchor_text": "10% of English"}, {"url": "https://searchon.withgoogle.com/", "anchor_text": "100% of English-based queries"}, {"url": "https://twitter.com/searchliaison/status/1204152378292867074", "anchor_text": "70 languages with BERT for Google Search"}, {"url": "https://youtu.be/ZL5x3ovujiM?t=484", "anchor_text": "https://youtu.be/ZL5x3ovujiM?t=484"}, {"url": "https://github.com/philschmid/efsync", "anchor_text": "efsync"}, {"url": "https://www.serverless.com/", "anchor_text": "Serverless Framework"}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/welcome.html", "anchor_text": "AWS Lambda"}, {"url": "https://aws.amazon.com/en/efs/", "anchor_text": "AWS EFS"}, {"url": "https://github.com/philschmid/efsync", "anchor_text": "efsync"}, {"url": "https://www.terraform.io/", "anchor_text": "Terraform"}, {"url": "https://github.com/huggingface/transformers", "anchor_text": "transformers"}, {"url": "https://rajpurkar.github.io/SQuAD-explorer/explore/v2.0/dev/", "anchor_text": "SQuADv2"}, {"url": "https://github.com/philschmid/new-serverless-bert-aws-lambda", "anchor_text": "Github repository"}, {"url": "https://www.serverless.com/", "anchor_text": "The Serverless Framework"}, {"url": "https://www.serverless.com/", "anchor_text": "The Serverless Framework"}, {"url": "https://aws.amazon.com/de/lambda/features/", "anchor_text": "AWS Lambda Logo"}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/welcome.html", "anchor_text": "AWS Lambda"}, {"url": "https://aws.amazon.com/de/efs/", "anchor_text": "Amazon EFS"}, {"url": "https://github.com/philschmid/efsync", "anchor_text": "Efsync"}, {"url": "https://www.terraform.io/logos.html", "anchor_text": "Terraform Logo"}, {"url": "https://www.terraform.io/", "anchor_text": "Terraform"}, {"url": "https://huggingface.co/", "anchor_text": "HugginFace Logo"}, {"url": "https://github.com/huggingface/transformers", "anchor_text": "Transformers library"}, {"url": "https://serverless.com/", "anchor_text": "Serverless Framework"}, {"url": "https://www.terraform.io/", "anchor_text": "Terraform"}, {"url": "https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html", "anchor_text": "link"}, {"url": "https://www.philschmid.de/scaling-machine-learning-from-zero-to-hero", "anchor_text": "Scaling Machine Learning from ZERO to HERO"}, {"url": "https://www.philschmid.de/how-to-set-up-a-ci-cd-pipeline-for-aws-lambda-with-github-actions-and-serverless", "anchor_text": "How to Set Up a CI/CD Pipeline for AWS Lambda With GitHub Actions and Serverless"}, {"url": "https://www.philschmid.de/serverless-bert-with-huggingface-and-aws-lambda", "anchor_text": "Serverless BERT with HuggingFace and AWS Lambda"}, {"url": "https://www.philschmid.de/efsync-my-first-open-source-mlops-toolkit", "anchor_text": "efsync my first open-source MLOps toolkit"}, {"url": "https://github.com/philschmid/new-serverless-bert-aws-lambda", "anchor_text": "Github repository"}, {"url": "https://learn.hashicorp.com/tutorials/terraform/install-cli?in=terraform/aws-get-started", "anchor_text": "tutorial"}, {"url": "https://registry.terraform.io/providers/hashicorp/aws/latest/docs", "anchor_text": "documentation"}, {"url": "https://github.com/philschmid/efsync", "anchor_text": "efsync"}, {"url": "https://github.com/philschmid/efsync#sdk", "anchor_text": "configurations"}, {"url": "https://github.com/philschmid/efsync", "anchor_text": "here"}, {"url": "https://www.notion.so/add-the-mobileBERTmodel-from-to-our-function-and-create-an-inference-pipeline-b5530c56acb7437c8ef1a395c4436b7d", "anchor_text": "link"}, {"url": "https://www.philschmid.de/efsync-my-first-open-source-mlops-toolkit", "anchor_text": "here"}, {"url": "https://huggingface.co/models", "anchor_text": "model hub of HuggingFace"}, {"url": "https://www.philschmid.de/scaling-machine-learning-from-zero-to-hero", "anchor_text": "Scaling Machine Learning from ZERO to HERO"}, {"url": "https://github.com/philschmid/new-serverless-bert-aws-lambda", "anchor_text": "GitHub repository"}, {"url": "https://github.com/philschmid/new-serverless-bert-aws-lambda", "anchor_text": "here"}, {"url": "https://twitter.com/_philschmid", "anchor_text": "Twitter"}, {"url": "https://www.linkedin.com/in/philipp-schmid-a6a2bb196/", "anchor_text": "LinkedIn"}, {"url": "https://medium.com/tag/aws?source=post_page-----5d8954ce654---------------aws-----------------", "anchor_text": "AWS"}, {"url": "https://medium.com/tag/bert?source=post_page-----5d8954ce654---------------bert-----------------", "anchor_text": "Bert"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----5d8954ce654---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----5d8954ce654---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/aws-lambda?source=post_page-----5d8954ce654---------------aws_lambda-----------------", "anchor_text": "AWS Lambda"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5d8954ce654&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&user=Philipp+Schmid&userId=b5f02a773f45&source=-----5d8954ce654---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5d8954ce654&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&user=Philipp+Schmid&userId=b5f02a773f45&source=-----5d8954ce654---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5d8954ce654&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5d8954ce654--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F5d8954ce654&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----5d8954ce654---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----5d8954ce654--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----5d8954ce654--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----5d8954ce654--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----5d8954ce654--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----5d8954ce654--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----5d8954ce654--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----5d8954ce654--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----5d8954ce654--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@schmidphilipp1995?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@schmidphilipp1995?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Philipp Schmid"}, {"url": "https://medium.com/@schmidphilipp1995/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "229 Followers"}, {"url": "https://twitter.com/_philschmid", "anchor_text": "https://twitter.com/_philschmid"}, {"url": "https://www.philschmid.de", "anchor_text": "https://www.philschmid.de"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb5f02a773f45&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&user=Philipp+Schmid&userId=b5f02a773f45&source=post_page-b5f02a773f45--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F9c9055b110ca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnew-serverless-bert-with-huggingface-aws-lambda-and-aws-efs-5d8954ce654&newsletterV3=b5f02a773f45&newsletterV3Id=9c9055b110ca&user=Philipp+Schmid&userId=b5f02a773f45&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}