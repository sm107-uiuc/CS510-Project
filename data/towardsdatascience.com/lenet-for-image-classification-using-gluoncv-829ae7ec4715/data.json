{"url": "https://towardsdatascience.com/lenet-for-image-classification-using-gluoncv-829ae7ec4715", "time": 1683009456.566154, "path": "towardsdatascience.com/lenet-for-image-classification-using-gluoncv-829ae7ec4715/", "webpage": {"metadata": {"title": "LeNet for Image Classification using GluonCV | by Ramesh Paudel, Ph.D. | Towards Data Science", "h1": "LeNet for Image Classification using GluonCV", "description": "In the previous article, we discussed about image classification using GluonCV on a pretrained network. In this article, we will discuss how to implement a binary image classifier by training LeNet\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/image-classification-using-gluoncv-f6ae5401d6ae", "anchor_text": "previous article", "paragraph_index": 0}, {"url": "http://yann.lecun.com/exdb/lenet/", "anchor_text": "LeNet", "paragraph_index": 0}, {"url": "http://yann.lecun.com/exdb/lenet/", "anchor_text": "LeNet network", "paragraph_index": 8}, {"url": "https://medium.com/@rmesfrmpkr/membership", "anchor_text": "here", "paragraph_index": 30}], "all_paragraphs": ["In the previous article, we discussed about image classification using GluonCV on a pretrained network. In this article, we will discuss how to implement a binary image classifier by training LeNet by bringing different components of gluoncv together such as autograd, trainer, dataset, and dataloader, to train a LeNet network. We can accomplish this is by writing a training loop.", "We first import the libraries. We initialize mxnet.init for more parameter initialization methods, matplotlib for drawing, time for benchmarking as well as other gluon packages.", "We will use fashion m-nest dataset for training.", "Fashion m-nest dataset is automatically downloaded through gluonsdata.vision.datasets module. The dataset can be downloaded using the following code. It also shows the properties of the first example.", "Each example in this dataset is a 28 by 28 sides gray image which is presented as an NDRA with the shape format of height X width X channel. The label is a scalar.", "To understand the data, we can visualize the first few images. We can see that they are low fidelity images of clothing items such as pullover, ankle boot, shirt, t-shirt, dress and coat.", "Each imaged needed to be converted into the channel X height X width, tensor format with floating point data type which can be done by transforms.totensor in order to feed data into a gluon network. Furthermore, we can normalize all pixel values with transform that normalize with the mean 0.13 and standard deviation 0.31. We chain these two transforms together using transform that compose and apply it to the first element of the data pair, namely the images.", "Fashion m-nest is a subclass of gluon.data.dataset. In order to use it in training, we need to feed in randomized batches of examples through the network which can be easily done by a gluon dataloader. We will use a batch size of 256 and four workers to process data in parallel for complex data transforms. The returned train data is an iterator that yields batches of images and label pairs.", "We implement the LeNet network; a convolutional neural network structure proposed by Yann LeCun et al. in 1998.", "LeNet refers to lenet-5 and is a simple convolutional neural network.", "The LeNet5 model consists of two convolution, then MaxPooling block followed by a series of dense layers with \u2018relu\u2019 activations for the convolutional layers, and all but the last dense layer. However, we change the weight initialization method to Xavier for deep convolutional neural networks.", "Besides the neural network, we need to define the loss function that is minimized during training. We will use standard softmax cross entropy for the classification problem. It first performs softmax on the output to obtain the predicted probability and then compares the label with the cross entropy. The cross entropy will be high when the true class is assigned a low probability.", "We also need to define an accuracy metric to measure the performance of the network. To compute accuracy, we simply need to compare our model outputs or predictions to the ground truth label and compute what fraction of the outputs match the label. Mxnet has a predefined metrics library and we can just use the accuracy class defined there.", "We also need to define the gluon trainer that updates the model parameters during training. The optimization method we pick is the standard stochastic gradient descent method with constant learning rate of 0.1. The trainer is created with all parameters in the network. Later on, we only need to call the step method of the trainer to update the network widths.", "In this step, we will implement the complete training loop.", "We will go through 10 epochs of training which means that we will iterate over the entire dataset 10 times, and for each epoch, we will record the training loss, training accuracy, and training speed. The training loop over batches occurs within the epoch loop.", "We iterate over the training data loader obtaining batches of training data and training labels. Using the autograd record scope, we compute the model forward pass. First, we obtain the result of feeding the data batch to the network, and then we compute the loss using the network output and training level. These executions are performed within autograd so that the operations are recorded, ready for the backward pass when the gradients are calculated. This is done by calling the backward function on the loss as we have seen in previous sections.", "Finally, we can update parameters of the network using the computer gradients by calling trainer.step. This completes the training process on a single batch.", "Before moving onto the next batch in the epoch, we record the training loss and training accuracy for housekeeping purposes. At the end of each training epoch, we also print the loss in accuracy after that epoch.", "As we can see, the loss is reducing after each epoch and the accuracy is increasing, showing that a training process is working and the model is learning. After 10 epochs, we\u2019re able to get to about 91 percent accuracy on the training data. We save the model parameters with the safe parameters method after the 10 epochs of training. This does the parameter at the current state of training in the params file.", "We saved all the parameters into a file trained_LeNet5.params. Now, let\u2019s load it back. To load parameters to a network from an params file, we can simply use the load parameters method of the network or any glue and block.", "We will evaluate the trained model by running some predictions with it.", "Before we can run predictions, we need a dataset, specifically one that model has not yet seen. We can use the validation or test splits of the fashion eminence dataset for our evaluation. We can select it by setting the trend keyword argument to false.", "Like the data transformation we did for training we need exactly the same transformation for predicting. The data transformation consists of composing two transformations.", "For an example, we will predict the first six images in the validation dataset. To do this, we iterate over each image that we want to predict. First, we apply the transformation and add an extra dimension for the batch size that our network is expected. Next, we get the network predictions for each class, and we can take the argmax to get the class that the network assigns the IRS confidence to. We can then start the prediction so that we can compare it to the validation level.", "We can visualize the images that we predicted and the ground truth label at the top compared to the network predictions at the bottom. The following snippet does it.", "We see that the network mostly it does a good job of predicting the right fashion classes for the items, or make some errors mistaking a class 2 with class 6.", "We just evaluated the model on a subset of the validation data. To use the entire validation dataset, we can create a validation data load just like we did during training. We said a batch size of 256 similar to the train data loader, and apply the same transformation. But we do not have to shuffle because we\u2019re not training the network. We also need to define the metric we will be using to evaluate the model performance. Since we used accuracy during training, we will use the same for validation. We can simply use the accuracy metrics class from the MxN matrix Package.", "Now, we can implement the complete validation loop. We just need to go through the validation data load or wants unlike in training where we perform multiple a batch. For each batch of data and the validation dataset, we use the model to make a batch of predictions. We can then compute the accuracy of the model using the model\u2019s output and the ground truth validation liberal. Sum in this for each batch, and dividing by the number of batches, gives the models average accuracy.", "For the model that we trained, we can see that the validation accuracy of 90 percent is very close to the training accuracy of 91 percent. Meaning that the model does a good job generalizing to new examples.", "Be a Medium member here and support independent writing for $5/month and get full access to every story on Medium.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist | Graph Analytics | Data Science | Novice Blogger | Chelsea FC"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F829ae7ec4715&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----829ae7ec4715--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----829ae7ec4715--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@rmesfrmpkr?source=post_page-----829ae7ec4715--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@rmesfrmpkr?source=post_page-----829ae7ec4715--------------------------------", "anchor_text": "Ramesh Paudel, Ph.D."}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F596dafbd7ece&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&user=Ramesh+Paudel%2C+Ph.D.&userId=596dafbd7ece&source=post_page-596dafbd7ece----829ae7ec4715---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F829ae7ec4715&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F829ae7ec4715&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://yann.lecun.com/exdb/lenet/", "anchor_text": "LeNet Network"}, {"url": "https://towardsdatascience.com/image-classification-using-gluoncv-f6ae5401d6ae", "anchor_text": "previous article"}, {"url": "http://yann.lecun.com/exdb/lenet/", "anchor_text": "LeNet"}, {"url": "http://yann.lecun.com/exdb/lenet/", "anchor_text": "LeNet network"}, {"url": "https://www.pyimagesearch.com/2016/08/01/lenet-convolutional-neural-network-in-python/", "anchor_text": "Image Source"}, {"url": "https://medium.com/@rmesfrmpkr/membership", "anchor_text": "here"}, {"url": "https://medium.com/tag/image-classification?source=post_page-----829ae7ec4715---------------image_classification-----------------", "anchor_text": "Image Classification"}, {"url": "https://medium.com/tag/lenet-5?source=post_page-----829ae7ec4715---------------lenet_5-----------------", "anchor_text": "Lenet 5"}, {"url": "https://medium.com/tag/gluoncv?source=post_page-----829ae7ec4715---------------gluoncv-----------------", "anchor_text": "Gluoncv"}, {"url": "https://medium.com/tag/deeplearing?source=post_page-----829ae7ec4715---------------deeplearing-----------------", "anchor_text": "Deeplearing"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----829ae7ec4715---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F829ae7ec4715&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&user=Ramesh+Paudel%2C+Ph.D.&userId=596dafbd7ece&source=-----829ae7ec4715---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F829ae7ec4715&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&user=Ramesh+Paudel%2C+Ph.D.&userId=596dafbd7ece&source=-----829ae7ec4715---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F829ae7ec4715&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----829ae7ec4715--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F829ae7ec4715&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----829ae7ec4715---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----829ae7ec4715--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----829ae7ec4715--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----829ae7ec4715--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----829ae7ec4715--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----829ae7ec4715--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----829ae7ec4715--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----829ae7ec4715--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----829ae7ec4715--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@rmesfrmpkr?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@rmesfrmpkr?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ramesh Paudel, Ph.D."}, {"url": "https://medium.com/@rmesfrmpkr/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "531 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F596dafbd7ece&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&user=Ramesh+Paudel%2C+Ph.D.&userId=596dafbd7ece&source=post_page-596dafbd7ece--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fdad894a77d07&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flenet-for-image-classification-using-gluoncv-829ae7ec4715&newsletterV3=596dafbd7ece&newsletterV3Id=dad894a77d07&user=Ramesh+Paudel%2C+Ph.D.&userId=596dafbd7ece&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}