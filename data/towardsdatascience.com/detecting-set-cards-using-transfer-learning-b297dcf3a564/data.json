{"url": "https://towardsdatascience.com/detecting-set-cards-using-transfer-learning-b297dcf3a564", "time": 1683000814.990782, "path": "towardsdatascience.com/detecting-set-cards-using-transfer-learning-b297dcf3a564/", "webpage": {"metadata": {"title": "Detecting SET cards using transfer learning | by Salomon Tetelepta | Towards Data Science", "h1": "Detecting SET cards using transfer learning", "description": "During a holiday in beautiful France, me and my family played a lot of SET, a simple and elegant card game. The goal is to find specific combinations of cards before others find them. While playing\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Set_(card_game)", "anchor_text": "SET", "paragraph_index": 0}, {"url": "https://github.com/stetelepta/setdetection", "anchor_text": "notebooks on Github", "paragraph_index": 1}, {"url": "https://pjreddie.com/darknet/yolo/", "anchor_text": "YOLO", "paragraph_index": 3}, {"url": "https://www.semanticscholar.org/paper/The-card-game-set-Davis-Maclagan/1174ae5c47a6efcf95e1bf3743395794ae32d829", "anchor_text": "[1]", "paragraph_index": 11}, {"url": "https://www.tauschgnom.de/product/set/1327119", "anchor_text": "Ravensburger version", "paragraph_index": 13}, {"url": "https://www.semanticscholar.org/paper/The-card-game-set-Davis-Maclagan/1174ae5c47a6efcf95e1bf3743395794ae32d829", "anchor_text": "[1]", "paragraph_index": 14}, {"url": "https://arnab.org/blog/so-i-suck-24-automating-card-games-using-opencv-and-python", "anchor_text": "great post", "paragraph_index": 15}, {"url": "https://opencv.org", "anchor_text": "OpenCV", "paragraph_index": 15}, {"url": "https://arnab.org/blog/so-i-suck-24-automating-card-games-using-opencv-and-python", "anchor_text": "that post", "paragraph_index": 15}, {"url": "https://en.wikipedia.org/wiki/Training,_validation,_and_test_sets", "anchor_text": "validation set", "paragraph_index": 18}, {"url": "https://keras.io/preprocessing/image/#imagedatagenerator-class", "anchor_text": "ImageDataGenerator", "paragraph_index": 19}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", "anchor_text": "Logistic Regression", "paragraph_index": 20}, {"url": "https://towardsdatascience.com/a-comprehensive-hands-on-guide-to-transfer-learning-with-real-world-applications-in-deep-learning-212bf3b2f27a", "anchor_text": "Transfer Learning", "paragraph_index": 25}, {"url": "https://blog.revolutionanalytics.com/2016/08/deep-learning-part-2.html", "anchor_text": "an interesting article", "paragraph_index": 26}, {"url": "https://arxiv.org/abs/1512.03385", "anchor_text": "ResNet50 model [2]", "paragraph_index": 33}, {"url": "https://arxiv.org/abs/1512.03385", "anchor_text": "ResNet50", "paragraph_index": 34}, {"url": "https://arxiv.org/abs/1704.04861", "anchor_text": "MobileNet [3]", "paragraph_index": 34}, {"url": "https://arxiv.org/abs/1801.04381", "anchor_text": "MobileNet V2 [4]", "paragraph_index": 34}, {"url": "https://en.wikipedia.org/wiki/Vanishing_gradient_problem", "anchor_text": "vanishing gradients", "paragraph_index": 35}, {"url": "https://arxiv.org/abs/1704.04861", "anchor_text": "MobileNet", "paragraph_index": 36}, {"url": "https://machinethink.net/blog/googles-mobile-net-architecture-on-iphone/", "anchor_text": "Depthwise Separable Convolution", "paragraph_index": 36}, {"url": "https://arxiv.org/abs/1801.04381", "anchor_text": "MobileNetV2", "paragraph_index": 36}, {"url": "https://en.wikipedia.org/wiki/Finite_field", "anchor_text": "finite field", "paragraph_index": 48}, {"url": "https://www.semanticscholar.org/paper/The-card-game-set-Davis-Maclagan/1174ae5c47a6efcf95e1bf3743395794ae32d829", "anchor_text": "it can been shown", "paragraph_index": 51}], "all_paragraphs": ["During a holiday in beautiful France, me and my family played a lot of SET, a simple and elegant card game. The goal is to find specific combinations of cards before others find them. While playing the game we often stared at the cards wondering if there\u2019s another SET that we just don\u2019t see. This started a fun personal side project where I apply machine learning to find SET combinations.", "In this post I will share my approach, the results and highlights of the code. For the complete source check out the notebooks on Github.", "\u201cWhat I cannot create, I do not understand\u201d", "First of all, let\u2019s get things straight. Detecting SET cards is a straightforward task for the state-of-the art machine learning models of today. An object detection algorithm like YOLO can detect many objects in realtime from video, so finding cards with simple coloured symbols from an image should not be too hard.", "Instead of using YOLO, I\u2019ll find it more fun and challenging to start from scratch.", "The overall plan is as follows:", "1. Extract cards from an imageUse computer vision to extract individual cards.", "2. Classify each separate image Use a Deep Convolutional Network to generate features for a (linear) classifier.", "3. Find valid SET combinations Use combinatorics to valid SETs. Interestingly, there is an elegant way to do that in just a few lines of code.", "Before we dive into the details let me explain a bit about the game of SET.", "The game of SET is a popular card game that challenges your pattern recognition skills. The goal of the game is to find a \u201cSET\u201d, which is a special combination of three cards.", "There are 81 unique cards with four attributes: colour, shape, fill and quantity. Each attribute can take three different values. Three cards are called a SET if, with respect to each of the four attributes, the cards are either the same or all different [1]", "A total of 12\u201321 cards are put on the table and in realtime, players try to collect as many SETs as they can find.", "There are different versions of the game. The version I used for this project is a Ravensburger version from 2001 that has the following features:", "The game of SET was invented by Marsha Jean Falco in 1974. As a genetic researcher she studied whether epilepsy in German Shepherds was inherited. To represent the genetic information for the dogs she started to draw symbols on cards. Different properties (ie. colour) of the symbols represented different traits of the dogs. She realised that this could be a challenging puzzle and with encouragement from friends and family she developed and marketed the card game. SET became very popular both inside and outside the mathematical community.[1]", "There is a great post that explains in detail how to extract regular playing cards from an image using OpenCV. The accompanying code was very useful for extracting SET cards as well. So, instead of repeating this explanation, I\u2019ll refer to that post for details and I\u2019ll stick to the main steps here.", "The algorithm works quite good if there is enough contrast between the cards and the background. If cards overlap it will fail to find all cards, so I won\u2019t advise using the code for an actual application, but for the purpose of this blogpost, it\u2019ll do just fine.", "Now that we can find single cards, we can develop a model that will classify the cards.", "The first step is to a create dataset for this task. I took four pictures of each card with slightly different lighting conditions and from different angles. I separated one series of pictures and used it as a validation set to test how the model performs.", "Having just three examples per class not enough to successfully train a model. By using the ImageDataGenerator API in Keras, you can create artificial samples from a base dataset. This way you can create a dataset of arbitrary size where cards are rotated, zoomed, flipped etc. Real samples are better than artificial ones, but it\u2019s a great alternative if you don\u2019t feel like taking thousands of pictures yourself.", "As a baseline I trained a Logistic Regression model and used the augmented images as input. In the results below you can see the performance of this model for different dataset sizes. With a training set of 8100 augmented images, the validation accuracy is just over 43%.", "In comparison, a model that chooses classes randomly will only score 1.23%, so the linear logistic regression model has at least learned something useful.", "For our purposes it is really important that accuracy is high. If we want to find all SET combinations in an image, we need to classify 12+ cards correctly. An accuracy of 91% or less means that on average in each picture there is a card wrongly classified, which will ruin the SET detection.", "Let\u2019s see how we can improve this performance by using Deep Learning.", "For our task I could try and train a Deep Convolutional Neural Network (DCNN) from scratch, but the model will probably overfit because of my small (base) dataset.", "A popular approach is to use Transfer Learning, where you take a model that was trained for a certain task, and you re-use it for another task.", "There are numerous ways to apply transfer learning, and it can be daunting to find the best strategy for a certain task and dataset. I found an interesting article that provided some guidance: The two most important factors for choosing a transfer learning strategy are the size of the new dataset and the similarity to the original dataset.", "* Linear models use linear combinations of features and because of that they are far more restricted than Neural Networks which can learn all kinds of non-linear patterns. This restriction helps to reduce overfitting. By using linear models and feed them non-linear feature representations, we kind of use the best of both worlds.", "For the SET detection task we have a very small dataset which is also quite different from the images of ImageNet, so the transfer learning strategy for this project will be to train a linear classifier from \u201csomewhere earlier\u201d in the network. The next step is to find out which layer will bring the best performance.", "From the guidelines above, we know that we need to pick a layer from \u2018somewhere earlier\u2019 in the network, but how do we know which layer has the best results? To find the best layer for our SET classification task, I decided to test each layer and compare the performance on the validation set. The experimental setup is as follows.", "For each layer i in the Deep Convolutional Network:", "The layer with the highest validation accuracy will be used for the final model.", "I repeated this experiment for different number of training samples to see the effects of the amount of training data.", "The validation accuracy for each of the 50 convolutional layers of the ResNet50 model [2] is shown in the chart below.", "I also compared performance for a number of different architectures: ResNet50 [2], MobileNet [3] and MobileNet V2 [4].", "Residual Neural Networks (ResNets) A team from Microsoft introduced Deep Residual Learning in 2015 as a new way to deal with vanishing gradients, a problem that prevented very deep networks to work effectively. By using skip connections, activations from previous layers can be reused and provide a base performance until additional layers improve. This made it possible to increase the number of layers, without hurting performance [2].The model used for this experiment is ResNet50, which has 50 convolutional layers.", "MobileNet ArchitecturesThe MobileNet architectures, developed by Google, are optimised to run very efficiently on mobile phones. The main idea is to use a different type of convolution called Depthwise Separable Convolution. It has approximately the same results as a regular convolutional operation but is much faster [3].With MobileNetV2, the original MobileNet architecture was further improved by applying (a variant of) Residual Learning and a number of other innovations [4].", "Validation results for the different networksIn the chart below, results for each model are plotted for the dataset of 8100 images.", "With the same amount of data, ResNet50 has the most layers that have a perfect validation score and for the final model I will use that architecture. If you\u2019d want to create a mobile application for SET detection, I guess MobileNetV2 is also an interesting choice.", "Classification resultsWhen I tested the classification on a test set with new images that have different lighting conditions, the model worked quite good but made some errors. After a bit of tweaking to improve the model, I found that the biggest gain was made by adjusting the augmentation settingsbrightness_range and fill_mode. After a few iterations, the model now classifies all test images correctly.", "I know that by tweaking a model after you see results on a test set, it becomes more like a validation set, and there is a risk of overfitting on it, but for the purpose of the blog I guess I\u2019m fine with that.", "Now that we can classify cards, it\u2019s time for the final step and find all possible SET combinations.", "Remember that in order to have a SET, the three cards need to have either the same or different values for each attribute. A straightforward solution is to consider all possible triplets, and check if the SET rule applies to the triplet. With 12 cards, there are 12 over 3 = 220 possible triplets, and it will not take that much computation to check them all.", "First, let\u2019s convert the features to numerical values.", "I found there is an interesting way to determine if a triplet is a SET or not. Consider the following two triplets:", "When you look at these examples of valid and invalid SETs, you\u2019ll find that:", "This rule holds for all possible combinations and it makes our SET-finding- algorithm quite elegant.", "Interestingly, this trick won\u2019t work for arbitrary numerical representations, but as long as we pick numerical values that are different in modulo 3 it does.", "The deeper reason for this has to do with the fact that the modulo function is a finite field. Fields are collections of numbers that have specific properties and behave a bit like rational or real numbers. Basic operations like addition, subtraction, multiplication and division are defined, and each number has multiplicative inverse, which means that if you multiply it with that inverse you get one. This also means that the set natural numbers is not a field.", "Because the modulo function is a finite field it has special properties that happen to be important for the SET game.", "You can think of a SET card as a point in a 4-dimensional space, where each feature is a different dimension (colour, shape, fill and quantity). For example, the card with feature values green, square, dotted, two can be represented as the 4D-point [1, 0, 2, 1]. Because each feature can just take one three values, the space where we can define SET cards is a finite field of size 3. [1]", "Now, it can been shown that for valid SETs, the points are co-linear within the finite field, which means that the points are on a line. Also, if points are not co-linear it is not a valid SET combination.", "So basically, looking for SET\u2019s is actually looking for co-linear points in a 4-dimensional finite space! [1]", "There\u2019s this satisfying (and sometimes traitorous) feeling, when all comes together and you actually see your model do what you hoped for.", "By combining the extraction of the cards, the classification of the card types and the SET detection algorithm, at last we can find SET combinations from an image!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb297dcf3a564&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b297dcf3a564--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b297dcf3a564--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@stetelepta?source=post_page-----b297dcf3a564--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@stetelepta?source=post_page-----b297dcf3a564--------------------------------", "anchor_text": "Salomon Tetelepta"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fddee3f527607&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&user=Salomon+Tetelepta&userId=ddee3f527607&source=post_page-ddee3f527607----b297dcf3a564---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb297dcf3a564&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb297dcf3a564&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://en.wikipedia.org/wiki/Set_(card_game)", "anchor_text": "SET"}, {"url": "https://github.com/stetelepta/setdetection", "anchor_text": "notebooks on Github"}, {"url": "https://pjreddie.com/darknet/yolo/", "anchor_text": "YOLO"}, {"url": "https://www.semanticscholar.org/paper/The-card-game-set-Davis-Maclagan/1174ae5c47a6efcf95e1bf3743395794ae32d829", "anchor_text": "[1]"}, {"url": "https://www.tauschgnom.de/product/set/1327119", "anchor_text": "Ravensburger version"}, {"url": "https://www.semanticscholar.org/paper/The-card-game-set-Davis-Maclagan/1174ae5c47a6efcf95e1bf3743395794ae32d829", "anchor_text": "[1]"}, {"url": "https://arnab.org/blog/so-i-suck-24-automating-card-games-using-opencv-and-python", "anchor_text": "great post"}, {"url": "https://opencv.org", "anchor_text": "OpenCV"}, {"url": "https://arnab.org/blog/so-i-suck-24-automating-card-games-using-opencv-and-python", "anchor_text": "that post"}, {"url": "https://en.wikipedia.org/wiki/Image_registration", "anchor_text": "image registration"}, {"url": "https://en.wikipedia.org/wiki/Training,_validation,_and_test_sets", "anchor_text": "validation set"}, {"url": "https://keras.io/preprocessing/image/#imagedatagenerator-class", "anchor_text": "ImageDataGenerator"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html", "anchor_text": "Logistic Regression"}, {"url": "https://towardsdatascience.com/a-comprehensive-hands-on-guide-to-transfer-learning-with-real-world-applications-in-deep-learning-212bf3b2f27a", "anchor_text": "Transfer Learning"}, {"url": "https://blog.revolutionanalytics.com/2016/08/deep-learning-part-2.html", "anchor_text": "an interesting article"}, {"url": "https://arxiv.org/abs/1512.03385", "anchor_text": "ResNet50 model [2]"}, {"url": "https://arxiv.org/abs/1512.03385", "anchor_text": "ResNet50"}, {"url": "https://arxiv.org/abs/1704.04861", "anchor_text": "MobileNet [3]"}, {"url": "https://arxiv.org/abs/1801.04381", "anchor_text": "MobileNet V2 [4]"}, {"url": "https://en.wikipedia.org/wiki/Vanishing_gradient_problem", "anchor_text": "vanishing gradients"}, {"url": "https://arxiv.org/abs/1704.04861", "anchor_text": "MobileNet"}, {"url": "https://machinethink.net/blog/googles-mobile-net-architecture-on-iphone/", "anchor_text": "Depthwise Separable Convolution"}, {"url": "https://arxiv.org/abs/1801.04381", "anchor_text": "MobileNetV2"}, {"url": "https://en.wikipedia.org/wiki/Finite_field", "anchor_text": "finite field"}, {"url": "https://www.semanticscholar.org/paper/The-card-game-set-Davis-Maclagan/1174ae5c47a6efcf95e1bf3743395794ae32d829", "anchor_text": "it can been shown"}, {"url": "https://www.semanticscholar.org/paper/The-card-game-set-Davis-Maclagan/1174ae5c47a6efcf95e1bf3743395794ae32d829", "anchor_text": "The card game set"}, {"url": "https://arxiv.org/abs/1512.03385", "anchor_text": "Deep Residual Learning for Image Recognition"}, {"url": "https://arxiv.org/abs/1704.04861", "anchor_text": "MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications"}, {"url": "https://arxiv.org/abs/1801.04381", "anchor_text": "MobileNetV2: Inverted Residuals and Linear Bottlenecks"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----b297dcf3a564---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/transfer-learning?source=post_page-----b297dcf3a564---------------transfer_learning-----------------", "anchor_text": "Transfer Learning"}, {"url": "https://medium.com/tag/convolutional-network?source=post_page-----b297dcf3a564---------------convolutional_network-----------------", "anchor_text": "Convolutional Network"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----b297dcf3a564---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/python?source=post_page-----b297dcf3a564---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb297dcf3a564&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&user=Salomon+Tetelepta&userId=ddee3f527607&source=-----b297dcf3a564---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb297dcf3a564&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&user=Salomon+Tetelepta&userId=ddee3f527607&source=-----b297dcf3a564---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb297dcf3a564&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b297dcf3a564--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb297dcf3a564&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b297dcf3a564---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b297dcf3a564--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b297dcf3a564--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b297dcf3a564--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b297dcf3a564--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b297dcf3a564--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b297dcf3a564--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b297dcf3a564--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b297dcf3a564--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@stetelepta?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@stetelepta?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Salomon Tetelepta"}, {"url": "https://medium.com/@stetelepta/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "133 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fddee3f527607&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&user=Salomon+Tetelepta&userId=ddee3f527607&source=post_page-ddee3f527607--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff56d558d694c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-set-cards-using-transfer-learning-b297dcf3a564&newsletterV3=ddee3f527607&newsletterV3Id=f56d558d694c&user=Salomon+Tetelepta&userId=ddee3f527607&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}