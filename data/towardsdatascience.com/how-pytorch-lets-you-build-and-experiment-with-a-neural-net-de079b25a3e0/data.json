{"url": "https://towardsdatascience.com/how-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0", "time": 1683001642.976115, "path": "towardsdatascience.com/how-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0/", "webpage": {"metadata": {"title": "How PyTorch lets you build and experiment with a neural net | by Tirthajyoti Sarkar | Towards Data Science", "h1": "How PyTorch lets you build and experiment with a neural net", "description": "We show, an example of building a classifier neural network in PyTorch and highlight how easy it is to experiment with advanced ideas."}, "outgoing_paragraph_urls": [{"url": "https://www.linkedin.com/in/soumith/", "anchor_text": "Soumith Chintala", "paragraph_index": 5}, {"url": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor", "anchor_text": "torch.Tensor", "paragraph_index": 13}, {"url": "https://medium.com/intuitionmachine/pytorch-dynamic-computational-graphs-and-modular-deep-learning-7e7f89f18d1", "anchor_text": "dynamic computation graph (DCG)", "paragraph_index": 14}, {"url": "https://pytorch.org/docs/stable/tensors.html", "anchor_text": "Read the official documentation on Tensors here", "paragraph_index": 15}, {"url": "https://towardsdatascience.com/pytorch-autograd-understanding-the-heart-of-pytorchs-magic-2686cd94ec95", "anchor_text": "magical Autograd feature i.e. automatic differentiation", "paragraph_index": 18}, {"url": "https://pytorch.org/docs/stable/nn.html", "anchor_text": "nn.Module", "paragraph_index": 19}, {"url": "https://pytorch.org/docs/stable/nn.html", "anchor_text": "class", "paragraph_index": 19}, {"url": "https://medium.com/udacity-pytorch-challengers/a-brief-overview-of-loss-functions-in-pytorch-c0ddb78068f7", "anchor_text": "A detailed discussion of these can be found in this article", "paragraph_index": 22}, {"url": "https://pytorch.org/docs/stable/optim.html", "anchor_text": "torch.optim", "paragraph_index": 23}, {"url": "https://github.com/tirthajyoti/PyTorch_Machine_Learning", "anchor_text": "can be found here in my Github repo", "paragraph_index": 54}, {"url": "https://github.com/tirthajyoti?tab=repositories", "anchor_text": "GitHub", "paragraph_index": 58}, {"url": "https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/", "anchor_text": "add me on LinkedIn", "paragraph_index": 58}, {"url": "https://twitter.com/tirthajyotiS", "anchor_text": "follow me on Twitter", "paragraph_index": 58}], "all_paragraphs": ["Deep learning (DL) is hot. It is en vogue. And it has cool tools to play with.", "Although scores of DL practitioners started their journey with TensorFlow, PyTorch has become an equally popular deep learning framework, since it was introduced by Facebook AI Research (FAIR) team, back in early 2017. Since its introduction, it has caught the attention of AI researchers and practitioners around the world and has matured significantly.", "In essence, PyTorch provides tremendous flexibility to a programmer about how to create, combine, and process tensors as they flow through a network (called computational graph) paired with a relatively high-level, object-oriented API.", "Raw TensorFlow, of course, provides a similar level of low-level flexibility but it is often difficult to master and troubleshoot.", "And to boot, PyTorch provides robust yet simple API methods for automatic differentiation for running the essential backpropagation flow like a breeze.", "See its core creator, Soumith Chintala talk about its origin and evolution.", "The following article actually does a great job of distilling down the essentials of PyTorch and its key differences with the other highly popular framework Keras/TensorFlow.", "In the present article, we will show a simple step-by-step process to build a 2-layer neural network classifier (densely connected) in PyTorch, thereby elucidating some key features and styles.", "PyTorch provides tremendous flexibility to a programmer about how to create, combine, and process tensors as they flow through a network\u2026", "The core components of PyTorch that will be used for building the neural classifier are,", "Using these components, we will build the classifier in five simple steps,", "And that\u2019s it. This five-step process constitutes one complete epoch of training. We just repeat it a bunch of times to drive down the loss and obtain high classification accuracy.", "In PyTorch, we define a neural network as a custom class and thereby, can reap the full benefits of the Object-Orineted-Programming (OOP) paradigm.", "A torch.Tensor is a multi-dimensional matrix containing elements of a single data type. It is the central data structure of the framework. We can create Tensor from Numpy arrays or lists and perform various operations like indexing, mathematics, linear algebra.", "Tensors support some additional enhancements which make them unique. Apart from CPU, they can be loaded in the GPU (with extremely simple code change) for faster computations. And they support forming a backward graph that tracks every operation applied to them to calculate the gradients using a dynamic computation graph (DCG).", "Read the official documentation on Tensors here. Or, watch this excellent video introduction.", "We are all bad at calculus when it comes to a complex neural network. The high-dimensional space messes with our minds. Fortunately, there is Autograd to save us.", "To deal with hyper-planes in a 14-dimensional space, visualize a 3-D space and say \u2018fourteen\u2019 to yourself very loudly. Everyone does it \u2014 Geoffrey Hinton", "The Tensor object supports the magical Autograd feature i.e. automatic differentiation which is achieved by tracking and storing all the operations performed on the Tensor while it flows through a network. You can watch this wonderful tutorial video for a visual explanation.", "In PyTorch, we construct a neural network by defining it as a custom class. However, instead of deriving from the native Python object this class inherits from the nn.Module class. This imbues the neural net class with useful properties and powerful methods. We will see a full example of such a class definition in our article.", "Loss functions define how far the prediction of the neural net is from the ground truth and the quantitive measure of loss helps drives the network to move closer to the configuration which classifies the given dataset best.", "PyTorch offers all the usual loss functions for classification and regression tasks \u2014", "A detailed discussion of these can be found in this article.", "Optimization of the weights to achieve the lowest loss is at the heart of the backpropagation algorithm for training a neural network. PyTorch offers a plethora of optimizers to do the job, exposed through the torch.optim module \u2014", "\u201cThe five-step process constitutes one complete epoch of training. We just repeat it a bunch of times.\u201d", "For this example task, we first create some synthetic data with binary classes using a Scikit-learn function. The data classes are distinguished by colors in the following plots. It is clear that the dataset is not separable by a simple linear classifier and a neural net is an appropriate machine learning tool for this problem.", "We chose a simple fully-connected, 2-hidden-layer architecture for this demo. It is shown below,", "We define variables corresponding to this architecture and then the main class. The neural net class definition is shown below. As stated earlier, it inherits from the nn.Module base class.", "The code is almost self-explanatory with the added comments. In the definition of the method forward,there is a strong parallel with Keras' definition of a model.", "Also, note the use of built-in linear algebra operation like nn.Linear (between the layers) and of the activation functions like nn.ReLU and nn.Sigmoid at the output of the layers.", "If we instantiate a model object and print it, we will see the structure (parallel to Keras\u2019 model.summary() method).", "We choose the binary cross-entropy loss for this task and define it as follows (yes by convention, loss functions are often called criterion in PyTorch)", "At this point, let us run the input dataset through the neural net model we have defined i.e. forward pass once and compute the output probabilities. As the weights have been initialized as random, we will see random output probabilities (mostly close to 0.5). This network has not been trained yet.", "If we print the first 10 probabilities, we will get something like,", "All the output probabilities look close to 0.5,", "The average loss is computed using simply,", "For the optimizer, we choose the simple Stochastic Gradient Descent (SGD) and specify a learning rate of 0.1,", "Now for the training. We again follow a five-step process", "What is amazing is that if you read the five steps above, this is exactly what you see in all the theoretical discussion (and in all the textbooks) on neural nets. And, with PyTorch, you are able to implement this process with deceptively simple code, step by step.", "Nothing is hidden or abstracted from you. You feel the raw power and excitement of implementing a neural network training process with five lines of Python code!", "That was one epoch only. Now, we know very well that one epoch does not cut it, does it? For running over multiple epochs, just use a loop.", "And when run for 1000 epochs, the all-familiar loss curve can be produced easily.", "PyTorch gives you the power to experiment, to probe, to break and shake stuff.", "Just for fun, if you wanted to check how the output layer probabilities evolve over multiple epochs, this simple modification to the previous code will do it,", "Clearly, the untrained network outputs are all close to 1 i.e. not differentiating between the positive and negative classes. As the training continues, the probabilities are separating from each other, gradually trying to match the distribution of the ground truth, by adjusting the weights of the network.", "PyTorch gives you the power to experiment, to probe, to break and shake stuff.", "PyTorch, from its early release, has been extremely popular particularly with academic researchers and startups. The reason behind this is simple \u2014 it lets you try your crazy ideas with simple code refactoring. Experimentation is at the heart of the advancement of new ideas in any scientific field and certainly, deep learning is no exception.", "Just to be (somewhat) crazy, let us suppose we would like to mix it up with two different activation functions \u2014 ReLU and Hyperbolic tangent (tanh). We want to split off the tensor in two parallel parts, apply these activations on them separately, add the resulting tensors, and then propagate it along normally.", "Looks complex? The code to achieve this exactly what you think it is. Pass the input tensor (say X) through the first hidden layer and then create two tensors X1 and X2 by flowing the resultant tensor through separate activation functions. Simply add the resultant tensors up and pass it through the second hidden layer.", "Will you get any benefit? Who knows? But you can do this kind of experimental stuff and change around the architecture of the network so easily with PyTorch.", "Experimentation is at the heart of the advancement of new ideas in any scientific field and certainly, deep learning is no exception.", "You may feel like trying out your own custom loss function. We all use mean-squared-error since our high school days. How about trying 4th power of the error for a regression problem?", "Then use it in your code (note the new model reg_model which can be constructed by turning off the sigmoid activation in the output of our Network class.", "Now, do you feel like this?", "All the code for this demo can be found here in my Github repo.", "PyTorch is a great package for reaching out to the heart of a neural net and customize it for your application or trying out bold new ideas with the architecture, optimization, and mechanics of the network.", "In this article, we summarized a few key steps which can be followed to quickly build a neural network for classification or regression task. We also showed how neat ideas can be easily tried out with this framework.", "Go out there and build your favorite network and solve your machine learning problem. The possibilities are endless!", "If you have any questions or ideas to share, please contact the author at tirthajyoti[AT]gmail.com. Also, you can check the author\u2019s GitHub repositories for code, ideas, and resources in machine learning and data science. If you are, like me, passionate about AI/machine learning/data science, please feel free to add me on LinkedIn or follow me on Twitter.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Sr. Director of AI/ML platform | Stories on Artificial Intelligence, Data Science, and ML | Speaker, Open-source contributor, Author of multiple DS books"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fde079b25a3e0&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----de079b25a3e0--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----de079b25a3e0--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@tirthajyoti?source=post_page-----de079b25a3e0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@tirthajyoti?source=post_page-----de079b25a3e0--------------------------------", "anchor_text": "Tirthajyoti Sarkar"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcb9d97d4b61a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&user=Tirthajyoti+Sarkar&userId=cb9d97d4b61a&source=post_page-cb9d97d4b61a----de079b25a3e0---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fde079b25a3e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fde079b25a3e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://twitter.com/prat0s/status/1100469715741204480", "anchor_text": "This tweet"}, {"url": "https://www.linkedin.com/in/soumith/", "anchor_text": "Soumith Chintala"}, {"url": "https://towardsdatascience.com/pytorch-tutorial-distilled-95ce8781a89c", "anchor_text": "PyTorch tutorial distilledMigrating from TensorFlow to PyTorchtowardsdatascience.com"}, {"url": "https://medium.com/udacity-pytorch-challengers/a-brief-overview-of-loss-functions-in-pytorch-c0ddb78068f7", "anchor_text": "built-in loss functions"}, {"url": "https://towardsdatascience.com/pytorch-autograd-understanding-the-heart-of-pytorchs-magic-2686cd94ec95", "anchor_text": "Autograd"}, {"url": "https://pytorch.org/docs/stable/tensors.html#torch.Tensor", "anchor_text": "torch.Tensor"}, {"url": "https://medium.com/intuitionmachine/pytorch-dynamic-computational-graphs-and-modular-deep-learning-7e7f89f18d1", "anchor_text": "dynamic computation graph (DCG)"}, {"url": "https://pytorch.org/docs/stable/tensors.html", "anchor_text": "Read the official documentation on Tensors here"}, {"url": "https://towardsdatascience.com/pytorch-autograd-understanding-the-heart-of-pytorchs-magic-2686cd94ec95", "anchor_text": "magical Autograd feature i.e. automatic differentiation"}, {"url": "https://pytorch.org/docs/stable/nn.html", "anchor_text": "nn.Module"}, {"url": "https://pytorch.org/docs/stable/nn.html", "anchor_text": "class"}, {"url": "https://medium.com/udacity-pytorch-challengers/a-brief-overview-of-loss-functions-in-pytorch-c0ddb78068f7", "anchor_text": "A detailed discussion of these can be found in this article"}, {"url": "https://pytorch.org/docs/stable/optim.html", "anchor_text": "torch.optim"}, {"url": "https://github.com/tirthajyoti/PyTorch_Machine_Learning", "anchor_text": "can be found here in my Github repo"}, {"url": "https://github.com/tirthajyoti?tab=repositories", "anchor_text": "GitHub"}, {"url": "https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/", "anchor_text": "add me on LinkedIn"}, {"url": "https://twitter.com/tirthajyotiS", "anchor_text": "follow me on Twitter"}, {"url": "https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/", "anchor_text": "Tirthajyoti Sarkar - Sr. Principal Engineer - Semiconductor, AI, Machine Learning - ON\u2026Making data science/ML concepts easy to understand through writing: https://medium.com/@tirthajyoti Open-source and fun\u2026www.linkedin.com"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----de079b25a3e0---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----de079b25a3e0---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----de079b25a3e0---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----de079b25a3e0---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/technology?source=post_page-----de079b25a3e0---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fde079b25a3e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&user=Tirthajyoti+Sarkar&userId=cb9d97d4b61a&source=-----de079b25a3e0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fde079b25a3e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&user=Tirthajyoti+Sarkar&userId=cb9d97d4b61a&source=-----de079b25a3e0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fde079b25a3e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----de079b25a3e0--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fde079b25a3e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----de079b25a3e0---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----de079b25a3e0--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----de079b25a3e0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----de079b25a3e0--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----de079b25a3e0--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----de079b25a3e0--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----de079b25a3e0--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----de079b25a3e0--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----de079b25a3e0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@tirthajyoti?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@tirthajyoti?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Tirthajyoti Sarkar"}, {"url": "https://medium.com/@tirthajyoti/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "12.5K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcb9d97d4b61a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&user=Tirthajyoti+Sarkar&userId=cb9d97d4b61a&source=post_page-cb9d97d4b61a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fb285331282ca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-pytorch-lets-you-build-and-experiment-with-a-neural-net-de079b25a3e0&newsletterV3=cb9d97d4b61a&newsletterV3Id=b285331282ca&user=Tirthajyoti+Sarkar&userId=cb9d97d4b61a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}