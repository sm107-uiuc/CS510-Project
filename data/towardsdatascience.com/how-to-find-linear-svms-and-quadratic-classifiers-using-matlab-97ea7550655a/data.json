{"url": "https://towardsdatascience.com/how-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a", "time": 1683001484.8318179, "path": "towardsdatascience.com/how-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a/", "webpage": {"metadata": {"title": "How to Find Linear (SVMs) and Quadratic Classifiers using MATLAB | by Ewe Zi Yi | Towards Data Science", "h1": "How to Find Linear (SVMs) and Quadratic Classifiers using MATLAB", "description": "Ever wondered if linear classifiers can be generalised to other shapes that aren\u2019t just a single boring-looking flat plane (or hyperplanes for that matter)? Well yes! Welcome to the world of\u2026"}, "outgoing_paragraph_urls": [{"url": "https://yalmip.github.io", "anchor_text": "YALMIP", "paragraph_index": 2}], "all_paragraphs": ["Ever wondered if linear classifiers can be generalised to other shapes that aren\u2019t just a single boring-looking flat plane (or hyperplanes for that matter)?", "Well yes! Welcome to the world of quadratic classifiers where data points of two or more classes are separated by a quadric surface!", "Now before we go into all that, let\u2019s take a look at what linear classifiers are, and how we can model them with MATLAB and YALMIP, an optimisation package developed by Johan L\u00f6fberg. I\u2019ll then move over to quadratic classifiers and how you can model them in the second half of this article.", "*Some parts of this article may appear a little too mathematical but I\u2019ll try to keep them simple as much as possible to spend more time on the programming part.", "We start off with some random data points, each with 3 dimensions in the Euclidean space. These points come from 2 different classes (X & Y), and we have 5 points from each class.", "*You can always generalise the problem to higher dimensions, more classes, and more data points but we\u2019ll keep these values small in this article to keep things simple and easy to visualise.", "The idea then is to find a classifier, using information from the data points which we are given, to split the entire space (a 3D Euclidean space in this case) into two, where all points lying on one side belong to the class X, and those on the other in the second class Y.", "But how do we choose a border to separate the entire space? A quick and intuitive way is to use a plane.", "A hyperplane refers to a subspace that has a dimension that is one less than that of the space it exists in. In other words, a hyperplane would have n-1 dimensions in an n-dimension space.", "For example, in a 2D-space, a hyperplane would be a 1D-line, whereas, in a 3D-space, a hyperplane would simply be a 2D-flat plane.", "Going back to our problem, we\u2019d like to construct a hyperplane to separate the entire space into two. In particular, we want the hyperplane (defined solely by the vector a and the scalar b) to satisfy the following equations:", "where a and b, a vector and a scalar respectively, are to be determined.", "As you can see, this assumes that the coordinates of the data points have some linear relationship between them.", "However, as our instinct would probably have told us by now, it\u2019s not always possible to identify a hyperplane that would perfectly separate the entire space in such a way that only the points belonging to X lie on one side and those belonging to Y on the other.", "Nonetheless, even if this was really the case, we\u2019d still like to find the best hyperplane that somewhat splits the space into two, even if it means having some points ending up on the wrong side.", "For this we\u2019ll need to introduce some error variables (one for each data point) in the equations to allow for some leeway in defining our hyperplane:", "Similar to a and b, these error variables are up to us to determine, and are what we call decision variables in optimisation parlance.", "With our problem now defined this way, the best hyperplane can then be said to be the one that best reduces the sum of these errors. Hence, the goal of our problem can be succinctly rewritten in the form:", "As some of you must have noticed by now, the problem we have defined above is called a linear programme because its objective function (the minimisation function) and its constraints (all the other equations/inequalities) are all linear.", "Going back to where we left off from MATLAB, we\u2019d like to use YALMIP to solve the linear programme that we have defined, in order to obtain a separating hyperplane.", "We begin by defining the decision variables in our linear programme. This requires creating an sdpvar object for each of them, which YALMIP will then recognise as decision variables:", "Next, we move on to define the constraints in our problem:", "Lastly, we need to specify our objective function:", "With our problem defined, all that\u2019s left is to solve the problem! We do this by invoking the optimize() function.", "Retrieving the values of the decision variables and the optimal objective value is easy; their optimal values are stored in the exact same object that they were created.", "However, we need to convert them from sdpvariables to actual values to access their optimal values:", "If a perfect hyperplane can indeed be found for the random data points that you have generated, you should be getting something like this where the optimal objective value is exactly 0:", "Otherwise, an objective value anywhere above 0 would indicate that the hyperplane found does not perfectly separate the 3D-space into 2 half-spaces containing only data points from X or Y in each side.", "Since the example that I\u2019m using is pretty simple \u2014 3 dimensional with only 10 data points from 2 different classes, it\u2019s easy (and feasible) to plot the results we\u2019ve obtained from solving the linear programme onto a graph.", "Let\u2019s begin by plotting the hyperplane first.", "Recall the two equations the hyperplane needs to satisfy? Well, in order to plot the actual separating hyperplane, we need only plot the general equation of the hyperplane instead:", "To do so, we\u2019ll generate some dummy x-coordinate and y-coordinate values, and then compute their respective z-coordinate values by solving the equation above. In MATLAB, this would look something like this:", "Next, we need to retrieve the coordinate values of each data point along each axis and store them in their corresponding arrays. We\u2019d also like to select different colours to plot the data points from the two classes.", "Once this is done, you should be able to produce nice 3D plots like these:", "Now, what if you don\u2019t want to use a hyperplane to split the space into two halves, especially when your data doesn\u2019t seem to be linearly distributed?", "Well, we can try to find a non-linear relationship between our data points and one such way is to consider a quadratic function that separates them!", "What are quadric surfaces? Well simply put, they are generalised forms of 2D conic sections (ellipses, hyperbolas and parabolas).", "As you might have thought, these shapes would perhaps be more fitting in certain instances to fit certain data, so let\u2019s try them out!", "Similar to how we came up with the equations to define a separating hyperplane, we need to look for a symmetric matrix A, a vector b, and a scalar c that satisfies these quadratic equations:", "Likewise, we need to include error variables to allow our model to fit datasets that aren\u2019t separable by a quadric surface:", "With these equations, we can now define our new problem, just as in the hyperplane case:", "Now that our decision variables no longer look like those that we have used in our hyperplane problem, let\u2019s see how we should define them so that they can be solved using YALMIP:", "Next, we have to define the constraints in our problem:", "Lastly, we specify the objective function of the problem:", "Now, it\u2019s time to solve the problem using the same function optimize(), which we used in the hyperplane problem:", "Upon successful completion of the algorithm, we retrieve the optimal decision variables and the optimal objective value.", "Unlike how we have plotted hyperplanes in the previous section, we\u2019ll need to adopt a slightly different approach to plot quadric surfaces.", "We begin by generating dummy x, y and z values across the entire plot area, which will then be used to solve for the general quadric surface equation when using the function isosurface(). lhs represents the left-hand side of the equation which will be used as the 4th argument of the function, while 0 represents the right-hand side of the equation used as the 5th argument.", "Last but not least, we\u2019ll plot the individual data points found in both classes:", "And voil\u00e0 you are done! This should allow you to generate a variety of quadric surfaces that will separate your data points in eye-catching plots such as these:", "Of course, don\u2019t be too alarmed if any of the quadric surfaces generated fail to perfectly separate all the data points. Just like in the hyperplane case, it\u2019s not always possible to find a perfect solution to fit every possible dataset.", "I\u2019ve just showed you how MATLAB and YALMIP can be used to not only find but also plot separating hyperplanes and quadric surfaces for data classification.", "It\u2019s important to keep in mind however, that the examples that I have presented are really simple and can certainly be generalised to higher dimensions and numbers. Though they can still be solved easily, it might be difficult to visualise all the data in the same way if it\u2019s greater than three dimensions.", "I hope you\u2019ve had fun playing around with the various functions and plots and thanks a lot for reading my article if you managed to make it all the way here!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Just an engineering student trying to figure out what he\u2019d like to dedicate his life to"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F97ea7550655a&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----97ea7550655a--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----97ea7550655a--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@ewezy?source=post_page-----97ea7550655a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ewezy?source=post_page-----97ea7550655a--------------------------------", "anchor_text": "Ewe Zi Yi"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcc67f1595f91&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&user=Ewe+Zi+Yi&userId=cc67f1595f91&source=post_page-cc67f1595f91----97ea7550655a---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F97ea7550655a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F97ea7550655a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://yalmip.github.io", "anchor_text": "YALMIP"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----97ea7550655a---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/mathematics?source=post_page-----97ea7550655a---------------mathematics-----------------", "anchor_text": "Mathematics"}, {"url": "https://medium.com/tag/optimization?source=post_page-----97ea7550655a---------------optimization-----------------", "anchor_text": "Optimization"}, {"url": "https://medium.com/tag/programming?source=post_page-----97ea7550655a---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----97ea7550655a---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F97ea7550655a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&user=Ewe+Zi+Yi&userId=cc67f1595f91&source=-----97ea7550655a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F97ea7550655a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&user=Ewe+Zi+Yi&userId=cc67f1595f91&source=-----97ea7550655a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F97ea7550655a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----97ea7550655a--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F97ea7550655a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----97ea7550655a---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----97ea7550655a--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----97ea7550655a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----97ea7550655a--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----97ea7550655a--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----97ea7550655a--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----97ea7550655a--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----97ea7550655a--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----97ea7550655a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ewezy?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ewezy?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ewe Zi Yi"}, {"url": "https://medium.com/@ewezy/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "66 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcc67f1595f91&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&user=Ewe+Zi+Yi&userId=cc67f1595f91&source=post_page-cc67f1595f91--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F64185d6101a4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-find-linear-svms-and-quadratic-classifiers-using-matlab-97ea7550655a&newsletterV3=cc67f1595f91&newsletterV3Id=64185d6101a4&user=Ewe+Zi+Yi&userId=cc67f1595f91&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}