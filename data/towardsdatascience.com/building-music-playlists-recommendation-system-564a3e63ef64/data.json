{"url": "https://towardsdatascience.com/building-music-playlists-recommendation-system-564a3e63ef64", "time": 1683000332.963339, "path": "towardsdatascience.com/building-music-playlists-recommendation-system-564a3e63ef64/", "webpage": {"metadata": {"title": "Building Music Playlists Recommendation System | by Piyush | Towards Data Science", "h1": "Building Music Playlists Recommendation System", "description": "The goal of this work is to represent playlists in a way which captures the true essence of the playlist, i.e. information such as type, genre, variety, order, and the number of songs in the\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Autoencoder", "anchor_text": "autoencoder", "paragraph_index": 14}, {"url": "https://lilianweng.github.io/lil-log/2018/06/24/attention-attention.html", "anchor_text": "Attention technique", "paragraph_index": 15}, {"url": "https://en.wikipedia.org/wiki/Bidirectional_recurrent_neural_networks", "anchor_text": "bidirectional RNN", "paragraph_index": 17}, {"url": "https://developer.spotify.com/documentation/web-api/", "anchor_text": "Spotify Web API", "paragraph_index": 19}, {"url": "http://everynoise.com/", "anchor_text": "everynoise.com", "paragraph_index": 19}, {"url": "https://en.wikipedia.org/wiki/Singular_value_decomposition", "anchor_text": "singular-value decomposition (SVD).", "paragraph_index": 38}, {"url": "https://arxiv.org/abs/1907.01098", "anchor_text": "paper", "paragraph_index": 43}, {"url": "https://github.", "anchor_text": "https://github.", "paragraph_index": 53}], "all_paragraphs": ["The goal of this work is to represent playlists in a way which captures the true essence of the playlist, i.e. information such as type, genre, variety, order, and the number of songs in the playlist, and which can be used for tasks such as playlist discovery and recommendation.", "Our system can be used for playlist discovery and recommendation. Given a query playlist, the system returns the playlists from the database which are most similar to the input playlist.", "Here\u2019s a quick outline of our proposed approach:", "Playlists have become a significant part of our music listening experience today. There are over three billion of these on Spotify alone\u00b9. There are playlists for every moment, every mood, every season, and so on. With millions of songs at their fingertips, users today have grown accustomed\u00b2 to:", "1. Immediate attainment of their music demands.2. An extended experience.", "While recommendation engines service the first aspect, playlists handle the second aspect of this changing behavior, making playlist recommendation extremely important, both for the users and music companies.", "\u201cA playlist is a set of songs supposed to be listened together, usually in an explicit order.\u201d \u00b3", "Playlists are extremely important today from the perspective of both users and music researchers. From the user perspective, playlists are an effective way to discover new music and artists. From the researcher perspective, it is important to understand that music is consumed through listening and playlists formalize that listening experience\u00b3. Playlists are a unit component which can be discovered and recommended, just like artists, songs and albums.", "\u201dFrom the researcher perspective, it is important to understand that music is consumed through listening and playlists formalize that listening experience\u201d \u00b3", "As mentioned before, owing to the meteoric rise in the usage of playlists, playlist recommendation is crucial to music services today. However, over the past couple of years, from a research perspective, playlist recommendation has become analogous to playlist prediction/creation\u2077 \u2078 and continuation\u2075 \u2076 rather than playlist discovery. However, playlist discovery forms a significant part of the overall playlist recommendation pipeline, as it is an effective way to help users discover existing playlists on the platform.", "Our work aims to represent playlists in a way which can be used to discover and recommend existing playlists. We use sequence-to-sequence learning\u2079 to learn embeddings for playlists that capture their semantic meaning without any supervision. These fixed-length embeddings can then be used for recommendation purposes.", "The primary intuition behind choosing sequence-to-sequence learning is that playlists can be interpreted just as sentences, and songs as words in a sentence. In the past few years, sequence-to-sequence learning has been widely used to learn effective sentence embeddings in applications like neural machine translation\u00b9\u2070. We make use of the relationship playlist:songs:: sentences:words, and take inspiration from research in the field of natural language processing to model playlist embeddings the way sentences are embedded.", "We make use of the relationship playlist:songs :: sentences: words, and take inspiration from research in natural language processing to model playlist embeddings the way sentences are embedded.", "The name sequence-to-sequence learning in its very core implies that the network is trained to take in sequences and output sequences. So instead of predicting single word, the network outputs the entire sentence, which could be a translated in a foreign language, or the next predicted sentence from the corpus, or even the same sentence if the network is trained like an autoencoder.", "For this work, we use seq2seq framework as an autoencoder where the task of the network is to reconstruct the input playlist and in doing so, learn a compact representation of the input playlist, which captures the properties of the playlist.", "We use the Attention technique for the seq2seq models used in this work to learn the playlist embeddings which capture the long-term dependencies between the songs in the playlist because of the relatively longer length of playlists (50\u20131000 songs). We experiment with 2 variants of seq2seq models:", "1. Unidirectional seq2seq networks2. Bidirectional seq2seq networks", "A bidirectional seq2seq network is different from the unidirectional variant in the sense that a bidirectional RNN is used, meaning the hidden state is the concatenation of a forward RNN and a backward RNN that read the sequences in two opposite directions. This allows the network to capture more contextual information for the decoder to predict the output symbol.", "For this work, we need a list of playlists (sentences) with each playlist consisting of a list of songs (words). For solving this problem in it\u2019s simplest form, we need just the playlist IDs and the song IDs mapped with the appropriate playlist IDs.", "We download the data using the Spotify Web API. To collect a big enough set of terms to query the Spotify system, we use everynoise.com. This interactive website contains a list of some 2600+ genres, graphed out according to their relationship with each other, along with an audio example for each genre. We parse the data from the home page of this website and get the list of all the genres. Then for each genre, we download playlists (along with the corresponding song information) using the Spotify Web API. The whole flow is shown in Fig 1.", "Here are the downloaded data details:", "We follow [1] in doing the data clean up by removing the rare tracks, and outlier sized playlists (having a number of songs less than 10 or greater than 5000). This leaves up with 755k unique playlists and 2.4 million unique tracks.", "Although this step is not directly needed for the training part, however, it is crucial for the evaluation phase. This step aims to label the playlists with their appropriate genre. There are certain problems with the information available so far:", "1. Spotify provides genre information for the artist, but not the song. Labeling the song genre same as the artist genre would not be entirely correct as an artist can have songs of different genres.", "2. Assigning the songs the same genre as that of the playlist, which in turn is derived from the query term for which it was fetched, would be problematic. The issue in going this route is the subjectivity associated with it. Provided this fine-grained annotation, what would be the difference between soft rock, 80\u2019s rock, classic rock, and rock from the perspective of classification?", "Hence, we need to bring down the number of genres (output labels) from 2680 to a more manageable number.", "1. To solve for this, we train a word2vec\u00b9\u00b9 model on our corpus to get song embeddings, which capture the semantic characteristics (such as genre) of the songs by their co-occurrence in the corpus.", "2. The resulting song embeddings are then clustered into 200 clusters (arbitrarily chosen number in an attempt to maintain the balance between the feasibility of the annotation process and size of formed clusters. Smaller cluster size and lesser annotation time are desired).", "\u2022 Artist genre is applied to each corresponding song and a genre-frequency (count) dictionary is created. A sample genre-count dictionary for cluster with 17 songs would look like {rock: 5, indie-rock:3, blues: 2,soft-rock: 7}", "\u2022 From this dictionary, the genre having a clear majority is assigned as the genre for all the songs in that cluster.", "\u2022 All the songs in a cluster with no clear genre majority are discarded for annotation.", "Based on the observed genre-distribution in the data, and as a result of clustering sub-genres (such as soft-rock) into parent genres (such as rock), the genres finally are chosen for annotating the clusters are:", "Rock, Metal, Blues, Country, Reggae, Latin, Electronic, Hip Hop Classical.", "To validate our approach, we train a classifier on our dataset consisting of annotated song embeddings. With training and test set kept separate at the time of training, we achieve a 94% test accuracy.", "For playlist-genre annotation, only the playlists having all the songs annotated, are considered for annotation. Further, only those playlists are assigned genres for which more than 70% of the songs agree on a genre.", "Since the aim of our work is to learn playlist embeddings which can be used for recommendation, we evaluate the quality of embeddings using a recommendation task.", "The recommendation being inherently subjective in nature is best evaluated by having user-labeled data. However, in the absence of such annotated datasets, we evaluate our proposed approach by measuring the extent to which the playlist space created by the embedding models is relevant, in terms of the similarity of genre and length information of closely-lying playlists.", "We use the Approximate Nearest Neighbors Algorithm using Spotify ANNOY library\u00b9\u00b3 to populate the tree structure with the playlist embeddings. A query playlist is randomly selected and the search results are compared with the queried playlist in terms of genre and length information. There are nine possible genre labels. For comparing length, ten output classes (spanning the range {30\u2026250} corresponding to bins of size 20 are created. An average of 100 precision values for each query is considered.", "To evaluate the performance of our proposed technique, we need some sort of baseline performance as well. As our baseline model, we experiment with a weighted variant of Bag-of-words model\u00b9\u2074, which uses a weighted averaging scheme to get the sentence embedding vectors followed by their modification using singular-value decomposition (SVD). This method of generating sentence embeddings proves to be a stronger baseline compared to traditional averaging.", "The Recommendation task, as shown in Figure below, captures some interesting insights about the effectiveness of different models for capturing different characteristics. Firstly, high precision values demonstrate the relevance of the playlist embedding space which is the first and foremost expectation from a recommendation system. Also, BoW models capture genre information better than seq2seq models, while length information is better captured by the seq2seq models, demonstrating the suitability of different models for different tasks.", "One of the direct applications of this work is a recommendation engine for playlists. Given a query, the system would recommend/retrieve similar playlists form the corpus. The tree data structure discussed in Recommendation Task section can be directly used for this purpose. Given a query playlist, its k-nearest neighbors would be the most similar items to it and would be the system recommendations. Demonstration for our work can be seen in the video.", "And that\u2019s that. We have presented a seq2seq based approach for learning playlist embeddings, which can be used for tasks such as playlist discovery and recommendation. Our approach can also be extended for learning even better playlist-representations by integrating content-based (lyrics, audio, etc.) song-embedding models, and for generating new playlists by using variational sequence models.", "In the paper, there are many more evaluation techniques for assessing the quality of playlist embeddings with respect to the encoded information, which is out of scope for this post. I will be discussing that in another post.", "P.S \u2014 Here\u2019s the link to the paper.", "[2] Keunwoo Choi, George Fazekas, and Mark Sandler. Towards playlist generation algorithms using rnns trained on within track transitions.arXiv preprint arXiv:1606.02096, 2016", "[3] Fields, Ben, and Paul Lamere. \u201cFinding A Path Through The Jukebox \u2014 The Playlist Tutorial, ISMIR.\u201d ISMIR, Utrecht (2010).", "[5] Ching-Wei Chen, Paul Lamere, Markus Schedl, and Hamed Zamani. Recsys challenge 2018: Automatic music playlist continuation. InProceedings of the 12th ACM Conference on Recommender Systems, pages 527\u2013528.ACM, 2018", "[6] Maksims Volkovs, Himanshu Rai, Zhaoyue Cheng, Ga Wu, Yichao Lu, and Scott Sanner. Two-stage model for automatic playlist continuation at scale. In Proceedings of the ACM Recommender Systems Challenge 2018, page 9. ACM, 2018", "[7] Andreja Andric and Goffredo Haus. Automatic playlist generation based on tracking user\u2019s listening habits.Multimedia Tools and Applications, 29(2):127\u2013151, 2006.", "[8] Beth Logan. Content-based playlist generation: Exploratory experiments. InISMIR, 2002.", "[9] lya Sutskever, Oriol Vinyals, and Quoc V Le. Sequence to sequence learning with neural networks. Advances in neural information processing systems, pages 3104\u20133112, 2014.", "[10] Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. Neural machine translation by jointly learning to align and translate.arXiv preprint arXiv:1409.0473, 2014.", "[12] Anita Shen Lillie.MusicBox: Navigating the space of your music. PhD thesis, Massachusetts Institute of Technology, 2008", "[13] Bernhardsson, E. \u201cANNOY: Approximate nearest neighbors in C++/Python optimized for memory usage and loading/saving to disk.\u201d GitHub https://github. com/spotify/annoy (2017).", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F564a3e63ef64&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----564a3e63ef64--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----564a3e63ef64--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@piyp791?source=post_page-----564a3e63ef64--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@piyp791?source=post_page-----564a3e63ef64--------------------------------", "anchor_text": "Piyush"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ffc6226aed5e6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&user=Piyush&userId=fc6226aed5e6&source=post_page-fc6226aed5e6----564a3e63ef64---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F564a3e63ef64&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F564a3e63ef64&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@mariahashby?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Mariah Ashby"}, {"url": "https://unsplash.com/search/photos/playlist?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://developer.spotify.com/", "anchor_text": "Spotify developer API"}, {"url": "https://en.wikipedia.org/wiki/Autoencoder", "anchor_text": "autoencoder"}, {"url": "https://lilianweng.github.io/lil-log/2018/06/24/attention-attention.html", "anchor_text": "Attention technique"}, {"url": "https://en.wikipedia.org/wiki/Bidirectional_recurrent_neural_networks", "anchor_text": "bidirectional RNN"}, {"url": "https://developer.spotify.com/documentation/web-api/", "anchor_text": "Spotify Web API"}, {"url": "http://everynoise.com/", "anchor_text": "everynoise.com"}, {"url": "https://en.wikipedia.org/wiki/Singular_value_decomposition", "anchor_text": "singular-value decomposition (SVD)."}, {"url": "https://arxiv.org/abs/1907.01098", "anchor_text": "paper"}, {"url": "https://newsroom.spotify.com/2018-10-10/celebrating-a-decade-of-discovery-on-spotify/", "anchor_text": "https://newsroom.spotify.com/2018-10-10/celebrating-a-decade-of-discovery-on-spotify/"}, {"url": "https://github.", "anchor_text": "https://github."}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----564a3e63ef64---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/information-retrieval?source=post_page-----564a3e63ef64---------------information_retrieval-----------------", "anchor_text": "Information Retrieval"}, {"url": "https://medium.com/tag/recommendation-system?source=post_page-----564a3e63ef64---------------recommendation_system-----------------", "anchor_text": "Recommendation System"}, {"url": "https://medium.com/tag/music-playlist?source=post_page-----564a3e63ef64---------------music_playlist-----------------", "anchor_text": "Music Playlist"}, {"url": "https://medium.com/tag/seq2seq?source=post_page-----564a3e63ef64---------------seq2seq-----------------", "anchor_text": "Seq2seq"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F564a3e63ef64&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&user=Piyush&userId=fc6226aed5e6&source=-----564a3e63ef64---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F564a3e63ef64&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&user=Piyush&userId=fc6226aed5e6&source=-----564a3e63ef64---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F564a3e63ef64&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----564a3e63ef64--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F564a3e63ef64&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----564a3e63ef64---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----564a3e63ef64--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----564a3e63ef64--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----564a3e63ef64--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----564a3e63ef64--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----564a3e63ef64--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----564a3e63ef64--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----564a3e63ef64--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----564a3e63ef64--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@piyp791?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@piyp791?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Piyush"}, {"url": "https://medium.com/@piyp791/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "139 Followers"}, {"url": "https://bitsandmusic.com", "anchor_text": "https://bitsandmusic.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ffc6226aed5e6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&user=Piyush&userId=fc6226aed5e6&source=post_page-fc6226aed5e6--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fc82a3137b45&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-music-playlists-recommendation-system-564a3e63ef64&newsletterV3=fc6226aed5e6&newsletterV3Id=c82a3137b45&user=Piyush&userId=fc6226aed5e6&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}