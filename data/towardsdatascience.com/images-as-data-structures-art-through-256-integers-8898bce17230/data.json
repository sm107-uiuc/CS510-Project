{"url": "https://towardsdatascience.com/images-as-data-structures-art-through-256-integers-8898bce17230", "time": 1683002069.4817972, "path": "towardsdatascience.com/images-as-data-structures-art-through-256-integers-8898bce17230/", "webpage": {"metadata": {"title": "Images as data structures: art through 256 integers | by Justin | Towards Data Science", "h1": "Images as data structures: art through 256 integers", "description": "I\u2019m very used to working with tabular data in my day-to-day. I\u2019m sure most data people can relate. This post will give you an understanding of the basics of how to represent images as data structures\u2026"}, "outgoing_paragraph_urls": [{"url": "https://embracingtherandom.com/python/images/images-as-data-structures/", "anchor_text": "https://embracingtherandom.com", "paragraph_index": 56}, {"url": "http://embracingtherandom.com", "anchor_text": "embracingtherandom.com", "paragraph_index": 58}, {"url": "http://linkedin.com/in/justin-m-evans/", "anchor_text": "linkedin.com/in/justin-m-evans/", "paragraph_index": 58}], "all_paragraphs": ["Image problems have always excited me.", "I\u2019m very used to working with tabular data in my day-to-day. I\u2019m sure most data people can relate. This post will give you an understanding of the basics of how to represent images as data structures so that when that exotic image recognition or object detection problem comes along, you are starting from a place of some knowledge, rather than a place of no knowledge!", "Speaking of images, we will be following a time-honoured internet tradition. Some of our subjects will be cats! Meet Elsa, and Smooshie!", "Now that I have your attention\u2026let\u2019s do this.", "Let\u2019s start with this image of your humble chessboard:", "Believe it or not, I just made this using NumPy!", "Let\u2019s assume that we have an 8x8 NumPy array named chessboard. Let\u2019s take a peek at its top-most row. This is a row where the left-most pixel is white:", "Now let\u2019s look at the second row. This is a row where the left-most pixel is black:", "Each number represents a pixel intensity that ranges from 0 to 255. That is, there are 256 possible values in this colour system. As you might have guessed, 0 here represents \u2018black\u2019 and 255 represents \u2018white\u2019. Everything in between is a shade of grey.", "To make the chessboard, I simply stacked these white and black rows until I got an array of dimensions 8x8 (i.e. 8 rows and 8 columns):", "Random side note: If everything between 0 and 255 is a shade of grey in our colour system, what's up with Fifty Shades of Grey? Let's ignore that Grey happens to be a person's name. Why not:", "What do these 254 shades of grey look like, anyway? Let\u2019s create a 16x16 NumPy array, because 16x16 = 256 and this happens to be the number of pixel intensities we want to plot.", "Let\u2019s plot those poor, neglected shades of grey:", "I\u2019m sure most of you have heard of the RGB colour system, where:", "In an RGB colour image, instead of having a single 8x8 matrix, we now have three:", "These are called the red, green and blue channels of our RGB image.", "Each matrix contains an integer between 0 and 255, where 0 means that the colour in that channel has been effectively \u2018turned off\u2019, while 255 means that the colour in that channel has been \u2018turned on to full\u2019.", "When we stack these matrices on top of each other, we get a colour image! The RGB system is an example of an additive colour system, where colours are formed by adding pixel intensities across each of the three matrices.", "We now know that colour images are three-dimensional volumes. A colour image has:", "Firstly, a note on channels-first and channels-last conventions. Our NumPy arrays are of dimensions 3x8x8. That is, our \u2018RGB channels come first\u2019 when describing our array's dimensions. An alternative convention is the channels-last one, where channels are listed last in our array's dimensions (i.e. 8x8x3).", "We will be using Matplotlib's imshow function to plot our images. Inspecting the function's docstring, we see this:", "(M, N, 3): an image with RGB values (0\u20131 float or 0\u2013255 int) \u2026 The first two dimensions (M, N) define the rows and columns of the image.", "In other words, imshow is expecting a \u2018channels-last\u2019 NumPy array. Don't worry! We will convert our \u2018channels-first\u2019 images into \u2018channels-last\u2019 ones by using np.moveaxis to move our channel axis to the end:", "Let\u2019s turn on all the red pixels. Assuming an RGB ordering, we will set all pixel intensities in our first matrix to the maximum value of 255.", "We will start by creating a 3x8x8 array with all pixel intensities \u2018turned off\u2019(that is, set to zero):", "All channel pixels have been turned off. So it makes sense that we get a completely black image:", "Let\u2019s turn the red pixels onto full:", "Inspecting the matrix, we see this:", "And plotting it, we get this:", "And again for the blue pixels:", "Let\u2019s set all pixel intensities in the red, green and blue channels to their maximum values of 255:", "We get a completely white image!", "You can probably guess what we need to do. Let\u2019s set all pixel intensities to some value between 0 and 255. We will apply the same value across all three matrices:", "Boom! We have ourselves a grey image.", "A quick search tells me that the RBG values for \u2018hot pink\u2019 are these:", "This is what we will do:", "When we plot the image, we will hopefully see a fabulous, hot pink chessboard. Let\u2019s do it!", "Let\u2019s create our 3x8x8 array, where the 3 represents our channels:", "Now the plotting! Drum roll, please\u2026", "Hooray! That\u2019s a pretty chessboard, indeed.", "Let\u2019s use our knowledge of images to mess with images of my cats, Elsa and Smooshie.", "We will use the cv2 package to read our cat images into Python. cv2 can be installed by issuing pip install opencv-python.", "Annoyingly, cv2 stores images in a different channel ordering. Instead of RGB, we have a BGR channel ordering. So what we have now is a BGR image. We can see that the colours are a little bit off:", "We will now reorder our channels and see if our image looks any better:", "Let\u2019s increase the pixel intensities of our red channel. Say we want to add 50 to the pixel intensities in our red channel. When using the numpy.uint8 data type, if current pixel intensity + 50 > 255, our pixel intensity wraps around and starts counting from zero. This is an example of integer overflow.", "To avoid this, we will be using a suboptimal but quick solution. We will cast our NumPy arrays to the numpy.uint16 data type, which has an upper limit of 65,535. We will add 100 to each pixel intensity. imshow automatically clips the array to have a maximum value of 255 so we will be able to directly plot the image thereafter.", "Elsa definitely has a red hue to her!", "Let\u2019s repeat with the green channel:", "Yep, definitely greener! And finally, the blue channel:", "Let\u2019s add arbitrary numbers to each channel to see what we get:", "Looking cool, Elsa! What about Smooshie?", "Let\u2019s add some different numbers to Smooshie\u2019s photo:", "We have ourselves two psychedelic cats!", "( Queue \u2018Sunshine of Your Love\u2019)", "We have learnt how to express images as data that can be manipulated in Python. We made a hot pink chessboard and some psychedelic cat photos along the way!", "I hope that this post has given you the foundations that you need to tackle topics such as image kernels which are important in understanding how convolutional neural networks work.", "Originally published at https://embracingtherandom.com on December 14, 2019.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Hello, world! My name is Justin. I solve problems using data. Check me out at embracingtherandom.com and linkedin.com/in/justin-m-evans/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F8898bce17230&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----8898bce17230--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8898bce17230--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@eustin.jvans?source=post_page-----8898bce17230--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@eustin.jvans?source=post_page-----8898bce17230--------------------------------", "anchor_text": "Justin"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F14d6f9d6ed51&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&user=Justin&userId=14d6f9d6ed51&source=post_page-14d6f9d6ed51----8898bce17230---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8898bce17230&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8898bce17230&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://embracingtherandom.com/python/images/images-as-data-structures/", "anchor_text": "https://embracingtherandom.com"}, {"url": "https://medium.com/tag/python?source=post_page-----8898bce17230---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/image-processing?source=post_page-----8898bce17230---------------image_processing-----------------", "anchor_text": "Image Processing"}, {"url": "https://medium.com/tag/data-structures?source=post_page-----8898bce17230---------------data_structures-----------------", "anchor_text": "Data Structures"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----8898bce17230---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8898bce17230&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&user=Justin&userId=14d6f9d6ed51&source=-----8898bce17230---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8898bce17230&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&user=Justin&userId=14d6f9d6ed51&source=-----8898bce17230---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8898bce17230&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8898bce17230--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F8898bce17230&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----8898bce17230---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----8898bce17230--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----8898bce17230--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----8898bce17230--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----8898bce17230--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----8898bce17230--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----8898bce17230--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----8898bce17230--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----8898bce17230--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@eustin.jvans?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@eustin.jvans?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Justin"}, {"url": "https://medium.com/@eustin.jvans/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "56 Followers"}, {"url": "http://embracingtherandom.com", "anchor_text": "embracingtherandom.com"}, {"url": "http://linkedin.com/in/justin-m-evans/", "anchor_text": "linkedin.com/in/justin-m-evans/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F14d6f9d6ed51&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&user=Justin&userId=14d6f9d6ed51&source=post_page-14d6f9d6ed51--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F14d6f9d6ed51%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimages-as-data-structures-art-through-256-integers-8898bce17230&user=Justin&userId=14d6f9d6ed51&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}