{"url": "https://towardsdatascience.com/ultimate-guide-to-python-debugging-854dea731e1b", "time": 1683008381.5319319, "path": "towardsdatascience.com/ultimate-guide-to-python-debugging-854dea731e1b/", "webpage": {"metadata": {"title": "Ultimate Guide to Python Debugging | by Martin Heinz | Towards Data Science", "h1": "Ultimate Guide to Python Debugging", "description": "Let's explore the Art of debugging using Python logging, tracebacks, decorators and more..."}, "outgoing_paragraph_urls": [{"url": "https://docs.python.org/3.8/library/logging.config.html", "anchor_text": "here", "paragraph_index": 5}, {"url": "https://docs.python.org/3/howto/logging.html#configuring-logging", "anchor_text": "docs", "paragraph_index": 7}, {"url": "https://docs.python.org/3/howto/logging-cookbook.html#an-example-dictionary-based-configuration", "anchor_text": "logging cookbook", "paragraph_index": 7}, {"url": "https://docs.python.org/3/library/pdb.html#debugger-commands", "anchor_text": "pdb", "paragraph_index": 20}, {"url": "https://docs.python.org/3/library/pdb.html#debugger-commands", "anchor_text": "docs", "paragraph_index": 20}, {"url": "https://remysharp.com/2015/10/14/the-art-of-debugging", "anchor_text": "The Art of Debugging", "paragraph_index": 25}, {"url": "https://martinheinz.dev/blog/24?utm_source=devto&utm_medium=referral&utm_campaign=blog_post_24", "anchor_text": "martinheinz.dev", "paragraph_index": 27}, {"url": "https://martinheinz.dev/", "anchor_text": "https://martinheinz.dev/", "paragraph_index": 29}, {"url": "https://ko-fi.com/martinheinz", "anchor_text": "https://ko-fi.com/martinheinz", "paragraph_index": 29}], "all_paragraphs": ["Even if you write clear and readable code, even if you cover your code with tests, even if you are very experienced developer, weird bugs will inevitably appear and you will need to debug them in some way. Lots of people resort to just using bunch of print statements to see what's happening in their code. This approach is far from ideal and there are much better ways to find out what's wrong with your code, some of which we will explore in this article.", "If you write application without some sort of logging setup you will eventually come to regret it. Not having any logs from your application can make it very difficult to troubleshoot any bugs. Luckily \u2014 in Python \u2014 setting up basic logger is very simple:", "This is all you need to start writing logs to file which will look something like this (you can find path to the file using logging.getLoggerClass().root.handlers[0].baseFilename):", "This setup might seem like it\u2019s good enough (and often it is), but having well configured, formatted, readable logs can make your life so much easier. One way to improve and expand the config is to use .ini or .yaml file that gets read by logger. As an example of what you could do in your config:", "Having this kind of extensive config inside you python code would be hard to navigate, edit and maintain. Keeping things in YAML file makes it much easier to set up and tweak multiple loggers with very specific settings like the ones above.", "If you are wondering where all these config fields came from, these are documented here and most of them are just keyword arguments as shown in the first example.", "So, having the config in the file now, means that we need to load is somehow. The simplest way to do so with YAML files:", "Python logger doesn\u2019t actually support YAML files directly, but it supports dictionary configs, which can be easily created from YAML using yaml.safe_load. If you are inclined to rather use old .ini files, then I just want to point out that using dictionary configs is the recommended approach for new application as per docs. For more examples, check out the logging cookbook.", "Continuing with the previous logging tip, you might get into a situation where you need log calls of some buggy function. Instead of modifying the body of said function, you could employ logging decorator which would log every function call with specific log level and an optional message. Let\u2019s look at the decorator:", "Not gonna lie, this one might take a bit to wrap your head around (you might want to just copy-paste it and use it). The idea here is that log function takes the arguments and makes them available to inner wrapper function. These arguments are then made adjustable by adding the accessor functions, which are attached to the decorator. As for the functools.wraps decorator - if we didn't use it here, name of the function ( func.__name__) would get overwritten by name of the decorator. But that's a problem because we want to print the name. This gets solved by functools.wraps as it copies function name, docstring and arguments list onto the decorator function.", "Anyway, this is the output of above code. Pretty neat, right?", "Easy improvement to your code that makes it more debuggable is adding __repr__ method to your classes. In case you're not familiar with this method - all it does is return string representation of an instance of a class. Best practice with __repr__ method is to output text that could be used to recreate the instance. For example:", "If representing object as shown above is not desirable or not possible, good alternative is to use representation using <...>, e.g. <_io.TextIOWrapper name='somefile.txt' mode='w' encoding='UTF-8'>.", "Apart from __repr__, it's also a good idea to implement __str__ method which is by default used when print(instance) is called. With these 2 methods you can get lots of information just by printing your variables.", "If you for whatever reason need to implement custom dictionary class, then you can expect some bugs arising from KeyErrors when you try to access some key that doesn't actually exist. To avoid having to poke around in the code and see which key is missing, you could implement special __missing__ method, which is called every time KeyError is raised.", "The implementation above is very simple and only returns and logs message with the missing key, but you could also log other valuable information to give you more context as to what went wrong in the code.", "If your application crashes before you get a chance to see what is going on in it, you might find this trick quite useful.", "Running the application with-i argument ( python3 -i app.py) causes it to start interactive shell as soon as the program exits. At that point you can inspect variables and functions.", "If that\u2019s not good enough, you can bring a bigger hammer \u2014 pdb - Python Debugger. pdb has quite a few features which would warrant an article on its own. But here is an example and a rundown of the most important bits. Let's first see our little crashing script:", "Now, if we run it with -i argument, we get a chance to debug it:", "Debugging session above shows very briefly what you could do with pdb. After program terminates we enter interactive debugging session. First, we import pdb and start the debugger. At that point, we can use all the pdb commands. As an example above, we print variable using p command and list code using l command. Most of the time you would probably want to set breakpoint which you can do with b LINE_NO and run the program until the breakpoint is hit ( c) and then continue stepping through the function with s, optionally maybe printing stacktrace with w. For a full listing of commands you can go over to pdb docs.", "Let\u2019s say your code is for example Flask or Django application running on remote server where you can\u2019t get interactive debugging session. In that case you can use traceback and sys packages to get more insight on what's failing in your code:", "When run, the code above will print the last exception that was raised. Apart from printing exceptions, you can also use traceback package to print stacktrace ( traceback.print_stack()) or extract raw stack frame, format it and inspect it further ( traceback.format_list(traceback.extract_stack())).", "Sometimes you might be debugging or experimenting with some function in interactive shell and making frequent changes to it. To make the cycle of running/testing and modifying easier, you can run importlib.reload(module) to avoid having to restart the interactive session after every change:", "This tip is more about efficiency than debugging. It\u2019s always nice to be able to skip a few unnecessary steps and make your workflow faster and more efficient. In general, reloading modules from time to time is a good idea, as it can help you avoid trying to debug code that was already modified a bunch of times in the meantime.", "Most of the time, what programming really is \u2014 is just a lot of trial and error. Debugging, on the other hand, is \u2014 in my opinion \u2014 an Art and becoming good at it takes time and experience \u2014 the more you know the libraries or framework you use, the easier it gets. Tips and tricks listed above can make your debugging a bit more efficient and faster, but apart from these Python-specific tools, you might want to familiarize yourself with general approaches to debugging \u2014 for example, The Art of Debugging by Remy Sharp.", "If you liked this article you should check out other of my Python articles below!", "This article was originally posted at martinheinz.dev", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "CKA | RHCE | DevOps Engineer at IBM | Working with Python, Kubernetes, Linux and more | https://martinheinz.dev/ | https://ko-fi.com/martinheinz"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F854dea731e1b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----854dea731e1b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----854dea731e1b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@martin.heinz?source=post_page-----854dea731e1b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@martin.heinz?source=post_page-----854dea731e1b--------------------------------", "anchor_text": "Martin Heinz"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4cbd6b36e62a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&user=Martin+Heinz&userId=4cbd6b36e62a&source=post_page-4cbd6b36e62a----854dea731e1b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F854dea731e1b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F854dea731e1b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@dannymc?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Danny Mc"}, {"url": "https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://docs.python.org/3.8/library/logging.config.html", "anchor_text": "here"}, {"url": "https://docs.python.org/3/howto/logging.html#configuring-logging", "anchor_text": "docs"}, {"url": "https://docs.python.org/3/howto/logging-cookbook.html#an-example-dictionary-based-configuration", "anchor_text": "logging cookbook"}, {"url": "https://docs.python.org/3/library/pdb.html#debugger-commands", "anchor_text": "pdb"}, {"url": "https://docs.python.org/3/library/pdb.html#debugger-commands", "anchor_text": "docs"}, {"url": "https://remysharp.com/2015/10/14/the-art-of-debugging", "anchor_text": "The Art of Debugging"}, {"url": "https://martinheinz.dev/blog/24?utm_source=devto&utm_medium=referral&utm_campaign=blog_post_24", "anchor_text": "martinheinz.dev"}, {"url": "https://towardsdatascience.com/ultimate-setup-for-your-next-python-project-179bda8a7c2c", "anchor_text": "Ultimate Setup for Your Next Python ProjectStarting any project from scratch can be daunting task\u2026 But not if you have this ultimate Python project blueprint!towardsdatascience.com"}, {"url": "https://towardsdatascience.com/automating-every-aspect-of-your-python-project-6517336af9da", "anchor_text": "Automating Every Aspect of Your Python ProjectEvery Python project can benefit from automation using Makefile, optimized Docker images, well configured CI/CD, Code\u2026towardsdatascience.com"}, {"url": "https://towardsdatascience.com/making-python-programs-blazingly-fast-c1cd79bd1b32", "anchor_text": "Making Python Programs Blazingly FastLet\u2019s look at performance of our Python programs and see how to make them up to 30% faster!towardsdatascience.com"}, {"url": "https://medium.com/tag/python?source=post_page-----854dea731e1b---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----854dea731e1b---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----854dea731e1b---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----854dea731e1b---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/technology?source=post_page-----854dea731e1b---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F854dea731e1b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&user=Martin+Heinz&userId=4cbd6b36e62a&source=-----854dea731e1b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F854dea731e1b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&user=Martin+Heinz&userId=4cbd6b36e62a&source=-----854dea731e1b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F854dea731e1b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----854dea731e1b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F854dea731e1b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----854dea731e1b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----854dea731e1b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----854dea731e1b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----854dea731e1b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----854dea731e1b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----854dea731e1b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----854dea731e1b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----854dea731e1b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----854dea731e1b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@martin.heinz?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@martin.heinz?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Martin Heinz"}, {"url": "https://medium.com/@martin.heinz/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "5.4K Followers"}, {"url": "https://martinheinz.dev/", "anchor_text": "https://martinheinz.dev/"}, {"url": "https://ko-fi.com/martinheinz", "anchor_text": "https://ko-fi.com/martinheinz"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4cbd6b36e62a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&user=Martin+Heinz&userId=4cbd6b36e62a&source=post_page-4cbd6b36e62a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff723091181e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fultimate-guide-to-python-debugging-854dea731e1b&newsletterV3=4cbd6b36e62a&newsletterV3Id=f723091181e3&user=Martin+Heinz&userId=4cbd6b36e62a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}