{"url": "https://towardsdatascience.com/implementing-capsule-network-in-tensorflow-11e4cca5ecae", "time": 1683013500.676596, "path": "towardsdatascience.com/implementing-capsule-network-in-tensorflow-11e4cca5ecae/", "webpage": {"metadata": {"title": "Implementing Capsule Network in TensorFlow | by Parth Rajesh Dedhia | Towards Data Science", "h1": "Implementing Capsule Network in TensorFlow", "description": "Capsule Network overcomes the drawbacks of Convolution Neural Networks and provides more Visual Features. This post guides you through it's TensorFlow Implementation."}, "outgoing_paragraph_urls": [{"url": "https://arxiv.org/pdf/1710.09829.pdf", "anchor_text": "Dynamic Routing Between Capsules", "paragraph_index": 1}, {"url": "https://medium.com/ai%C2%B3-theory-practice-business/understanding-hintons-capsule-networks-part-i-intuition-b4b559d1159b", "anchor_text": "here", "paragraph_index": 1}, {"url": "https://www.tensorflow.org/guide/intro_to_modules", "anchor_text": "Custom Layers and Models", "paragraph_index": 2}, {"url": "https://numpy.org/doc/stable/user/basics.broadcasting.html", "anchor_text": "broadcasting", "paragraph_index": 6}, {"url": "https://www.tensorflow.org/api_docs/python/tf/linalg/matmul", "anchor_text": "details", "paragraph_index": 10}, {"url": "https://medium.com/ai%C2%B3-theory-practice-business/part-iv-capsnet-architecture-6a64422f7dce", "anchor_text": "blog", "paragraph_index": 37}, {"url": "https://github.com/dedhiaparth98/capsule-network", "anchor_text": "repository", "paragraph_index": 42}], "all_paragraphs": ["We are well aware that Convolution Neural Network(CNN) has outperformed humans in many computer vision tasks. All the CNN based models have the same base architecture of the Convolution layer followed by Pooling layers with intermediate Batch Normalization layers, for normalizing batch in the forward pass and controlling the gradients in the backward pass.", "However, there were a couple of drawbacks in CNN primarily the Max Pooling layer as it does not consider the relation between pixel having maximum value and its immediate neighbors. To solve the problem, Hinton comes up with the idea of Capsule Network and an algorithm called \u201cDynamic Routing Between Capsules\u201d. Many resources have explained the intuition and the architecture of the model. You can have a look at them in the series of blog posts here.", "In this post, I have explained the implementation details of the model. It assumes a good understanding of Tensors and TensorFlow Custom Layers and Models.", "This post has been structured as follows:", "Building a model in TensorFlow 2.3 with a Functional API or Sequential model is quite easy with very few lines of code. However, in this capsule network implementation, we make use of Functional API as well as some custom operations and decorated them with the @tf.function for optimization. In this section, I am just going to highlight the tf.matmul function for higher dimensions. If you are familiar with this, then you can skip this section and move ahead to the next one.", "For 2D Matrices, the matmul operation performs matrix multiplication operations provided the shape signatures are respected. However, for tensors with rank (r > 2), the operation becomes a combination of 2 operations i.e., element-wise multiplication and matrix multiplication.", "For a rank (r = 4) matrices, it first performs broadcasting along the axis = [0, 1] and makes each of them of equal shape. And the last two axes ([2,3]) undergo matrix multiplication if and only if the last dimension of the first tensor and the second to last dimension of the second tensor should have the matching dimensions. The example below will explain it, for brevity I have only printed the shapes, but feel free to print and calculate the number on the console.", "w is broadcasted along axis=0 and x is broadcasted along axis=1, and the remaining two dimensions were matrix multiplied. Let\u2019s check out the transpose_a/transpose_b parameter of matmul. On calling tf.transpose on a tensor all the dimensions are reversed. For example,", "So let\u2019s just see how it work in tf.matmul", "Wait !!! I was expecting an error but it worked out fine. How ???", "What TensorFlow did was first it broadcasted along the first two dimensions and then assumed them as a stack of 2D matrices. You could visualize it as transposed being applied only to the last two dimensions, of the first array. The shape of the first array after the transpose operation was [1152, 10, 1, 16] (Transpose applied to the last two-dimension), and now matrix multiplication is applied. By the way, transpose_a = True means the above-mentioned transpose operation will be applied to the first element provided in matmul. Refer to the docs for more details.", "Okay!! That\u2019s enough to get through this post. We can now check out the code for Capsule Layer.", "Let\u2019s see what\u2019s happening in the code.", "Note: All the hyper-parameters are used the same as that from the paper.", "We have used tf.keras functional API to create the primary capsule outputs. These will just perform simple convolution operation in the forward pass of input image input_x. Till now we have achieved 256 (32 * 8) features maps, each of 6 x 6 size.", "Now instead of visualizing the above feature map as convolution output, we re-imagine them as 32- 6 x 6 x 8 vectors piled along the last axis. Hence, we could easily obtain 6 * 6 * 32 = 1152, 8D vectors just by reshaping them. Each of these vectors is multiplied by a weight matrix which encapsulates the relation between these lower level features and the higher-level features. The dimension of the output features in the Primary Capsule Layer is 8D, and that input to the Digit Caps layer is 16D. So basically we have to multiply them with a 16 X 8 matrix. Okay, that was easy !! But wait, there are 1152 vectors in the Primary Capsule, which implies we will have 1152\u201316 x 8 matrices.", "So are we cool now ?? Nope, you forgot the number of Digits Capsule", "We have 10 Digit Capsules in the next layer, and hence we will have 10 such 1152\u201316 x 8 matrices. So basically we get a weight tensor of shape [1152, 10,16, 8]. Each of the 1152\u20138D vectors of primary capsule output is contributing to each of the 10 Digit Capsules, so we could simply use the same 8D vector for each capsule in the Digit Capsule Layer. More simply we could just add a 2 new axis in 1152, 8D vectors thus converting them into the shape of [1152, 1, 8, 1]. Okay! I see what you did there, you are going to the broadcasting in tf.matmul you described above.", "Note: The shape of variable W has an extra dimension of 1 along the first axis since then the same weight has to be broadcasted for the entire batch.", "In the u_hat, the last dimension is extraneous and was added for the correctness of matrix multiplication and hence can be now be removed using the squeeze function. The (None) in the above shapes is for the batch_size which is determined at training time.", "Let\u2019s move to the next step.", "Dynamic Routing \u2014 This is where the magic begins!", "Before exploring the algorithm let\u2019s just make the squash function and keep it for further use. I have added a small value of epsilon to avoid the gradients from exploding in-case if the denominator sums up to zero.", "In this step, the input to the Digit Capsule is the 16D vector ( u_hat ) and the no of routing iterations (r = 3) is used as specified by the paper.", "There is not much tweaking in the dynamic routing algorithm, and the code is pretty much a direct implementation of the algorithm in the paper. Have a look at the snippet below.", "Some key points should be highlighted.", "The above loop is iterated 3 times and the hence obtained values of v are then used in the reconstruction network.", "Wow !! Great. You have just completed most of the difficult part. Now, it\u2019s relatively simple.", "The Reconstruction network is a kind of regularizer that regenerates the images from the features of Digit Capsule Layers. While back-propagation it has an impact on the entire network, thus making features good for both prediction as well as regeneration. During training, the model uses the actual label of the input image to mask the digit caps values to zeros except the one corresponding to the label (shown in the figure below).", "The v tensor from the above network is of shape (None, 1, 10, 16) and we broadcast and label along the 16D vector of the Digit Caps layer, and apply the masking.", "Note: One hot encoded label is used for masking.", "This v_masked is then sent to the reconstruction network and which is used for regeneration of the entire image. The reconstruction network is just 3 Dense layer shown in the gist below", "We will convert the same above code into a CapsuleNetwork Class which inherits from tf.keras.Model. You could directly use the class with your custom training loop and for prediction.", "As you would have noticed that I have added two different functions predict_capsule_output() and regenerate_image() which predict the digit Caps vectors and regenerate the image respectively. The first function will help in the prediction of numbers during test time and the second one will be helpful to regenerate the image from a given set of input features. (Will be used in the visualization)", "So one last thing is remaining, and that\u2019s the loss function. The paper uses margin loss for classification and uses the squared difference for reconstruction with a weight of 0.0005 to re-construction loss. The parameters m+, m-, lambda are described in the gist above and the loss function in the gist below.", "The v is the unmasked Digit Caps Vector, the y is the one_hot_encoded vector of the label and y_image is the actual image send as input to the model. The safe norm function is just a function is similar to the TensorFlow norm function but contains an epsilon to avoid the value from becoming exact 0.", "Let\u2019s check the summary of the model.", "Congratulation !!! We have completed the model architecture. The model has 8215568 Parameters which corroborated to the paper where they said that the model with reconstruction has 8.2M parameters. However, this blog has 8238608 parameters. The reason for the difference is that TensorFlow considers only tf.Variable resources in the trainable params. If we consider 1152 * 10 b and 1152 * 10 c as trainable then we get the same number.", "We will be using the tf.GradientTape for finding the gradients and we will use the Adam optimizer.", "Since we have subclassed out class with tf.keras.Model, we can simply call the model.trainable_variables and apply gradients.", "I have made a custom prediction function that will take the input image as well as the model as a parameter. The purpose of sending the model as a parameter is that the checkpointed model could be used later for prediction.", "Phew !!! We are done. Congratulations!", "So, you can now try writing your code with this explanation or use it to one on my repository. You can simply run the notebook on your local system or on google colab. To only obtain prediction accuracy, even 10 epochs are sufficed. In the repository, I have added only a single notebook that trains the feature for 50 epochs. However, to tweak and visualize the feature, you may need to train them up to 100 epochs.", "Note: The training of the model takes a lot of time even on Google Colab\u2019s GPU. So put the model on training and take a break.", "The model produces a training accuracy of 99% and the testing accuracy is 98%. However, in some checkpoints, the accuracy is 98.4% while in some other its 97.7%.", "In the gist below, the index_ means a particular sample number in the test set and index means the actual number which the sample y_test[index_] represents.", "The code below tweaks each of the feature, and tweaking them in the range of [-0.25, 0.25] with an increment of 0.05. At each point, images are generated and stored in an array. Thus we can see how each feature is contributing to the reconstruction of an image.", "See some samples of reconstruction in the image below. As we can see, some of the features control the brightness, angle of rotation, thickness, skew, etc.", "In this article, we have tried to reproduce the results as well as visualize the features described in the paper. The training accuracy is 99% and the testing accuracy is almost 98% which is really great. Although, the model takes a lot of time to train, but the features are very intuitive.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I like reading and implementing the ideas researched in Computer Vision and Deep Learning papers. I post my notes on Medium."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F11e4cca5ecae&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://parthdedhia.medium.com/?source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": ""}, {"url": "https://parthdedhia.medium.com/?source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": "Parth Rajesh Dedhia"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F69485e9d0ea6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&user=Parth+Rajesh+Dedhia&userId=69485e9d0ea6&source=post_page-69485e9d0ea6----11e4cca5ecae---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F11e4cca5ecae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F11e4cca5ecae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@ffstop?utm_source=medium&utm_medium=referral", "anchor_text": "Fotis Fotopoulos"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://arxiv.org/pdf/1710.09829.pdf", "anchor_text": "Dynamic Routing Between Capsules"}, {"url": "https://medium.com/ai%C2%B3-theory-practice-business/understanding-hintons-capsule-networks-part-i-intuition-b4b559d1159b", "anchor_text": "here"}, {"url": "https://www.tensorflow.org/guide/intro_to_modules", "anchor_text": "Custom Layers and Models"}, {"url": "https://numpy.org/doc/stable/user/basics.broadcasting.html", "anchor_text": "broadcasting"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/linalg/matmul", "anchor_text": "details"}, {"url": "https://arxiv.org/pdf/1710.09829.pdf", "anchor_text": "paper"}, {"url": "https://arxiv.org/pdf/1710.09829.pdf", "anchor_text": "paper"}, {"url": "https://pechyonkin.me/capsules-3/", "anchor_text": "here"}, {"url": "https://arxiv.org/pdf/1710.09829.pdf", "anchor_text": "the paper"}, {"url": "https://arxiv.org/pdf/1710.09829.pdf", "anchor_text": "the paper"}, {"url": "https://medium.com/ai%C2%B3-theory-practice-business/part-iv-capsnet-architecture-6a64422f7dce", "anchor_text": "blog"}, {"url": "https://github.com/dedhiaparth98/capsule-network", "anchor_text": "repository"}, {"url": "https://github.com/dedhiaparth98/capsule-network", "anchor_text": "https://github.com/dedhiaparth98/capsule-network"}, {"url": "https://arxiv.org/pdf/1710.09829.pdf", "anchor_text": "Dynamic Routing Between Capsules"}, {"url": "https://medium.com/ai%C2%B3-theory-practice-business/understanding-hintons-capsule-networks-part-i-intuition-b4b559d1159b", "anchor_text": "Understanding Hinton\u2019s Capsule Networks. Part I: Intuition.Part of Understanding Hinton\u2019s Capsule Networks Series:medium.com"}, {"url": "https://medium.com/ai%C2%B3-theory-practice-business/understanding-hintons-capsule-networks-part-ii-how-capsules-work-153b6ade9f66", "anchor_text": "Understanding Hinton\u2019s Capsule Networks. Part II: How Capsules Work.Part of Understanding Hinton\u2019s Capsule Networks Series:medium.com"}, {"url": "https://medium.com/ai%C2%B3-theory-practice-business/understanding-hintons-capsule-networks-part-iii-dynamic-routing-between-capsules-349f6d30418", "anchor_text": "Understanding Hinton\u2019s Capsule Networks. Part III: Dynamic Routing Between Capsules.Part of Understanding Hinton\u2019s Capsule Networks Series:medium.com"}, {"url": "https://medium.com/ai%C2%B3-theory-practice-business/part-iv-capsnet-architecture-6a64422f7dce", "anchor_text": "Understanding Hinton\u2019s Capsule Networks. Part IV: CapsNet ArchitecturePart of Understanding Hinton\u2019s Capsule Networks Series:medium.com"}, {"url": "https://github.com/ageron/handson-ml/blob/master/extra_capsnets.ipynb", "anchor_text": "ageron/handson-mlPermalink Dismiss GitHub is home to over 50 million developers working together to host and review code, manage\u2026github.com"}, {"url": "https://medium.com/tag/capsule-networks?source=post_page-----11e4cca5ecae---------------capsule_networks-----------------", "anchor_text": "Capsule Networks"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----11e4cca5ecae---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/tensorflow?source=post_page-----11e4cca5ecae---------------tensorflow-----------------", "anchor_text": "TensorFlow"}, {"url": "https://medium.com/tag/visualization?source=post_page-----11e4cca5ecae---------------visualization-----------------", "anchor_text": "Visualization"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----11e4cca5ecae---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F11e4cca5ecae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&user=Parth+Rajesh+Dedhia&userId=69485e9d0ea6&source=-----11e4cca5ecae---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F11e4cca5ecae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&user=Parth+Rajesh+Dedhia&userId=69485e9d0ea6&source=-----11e4cca5ecae---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F11e4cca5ecae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F11e4cca5ecae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----11e4cca5ecae---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----11e4cca5ecae--------------------------------", "anchor_text": ""}, {"url": "https://parthdedhia.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://parthdedhia.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Parth Rajesh Dedhia"}, {"url": "https://parthdedhia.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "77 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F69485e9d0ea6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&user=Parth+Rajesh+Dedhia&userId=69485e9d0ea6&source=post_page-69485e9d0ea6--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F21fd8c4a6fae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplementing-capsule-network-in-tensorflow-11e4cca5ecae&newsletterV3=69485e9d0ea6&newsletterV3Id=21fd8c4a6fae&user=Parth+Rajesh+Dedhia&userId=69485e9d0ea6&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}