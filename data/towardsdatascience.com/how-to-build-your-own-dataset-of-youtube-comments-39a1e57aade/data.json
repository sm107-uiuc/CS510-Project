{"url": "https://towardsdatascience.com/how-to-build-your-own-dataset-of-youtube-comments-39a1e57aade", "time": 1683010474.232533, "path": "towardsdatascience.com/how-to-build-your-own-dataset-of-youtube-comments-39a1e57aade/", "webpage": {"metadata": {"title": "How to Build Your Own Dataset of YouTube Comments | by William Yang | Towards Data Science", "h1": "How to Build Your Own Dataset of YouTube Comments", "description": "This is the first of a series of articles that will cover textual data collection, data preprocessing, and sentiment analysis. In this article specifically, I will talk about why I wanted to collect\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.youtube.com/watch?v=ioNng23DkIM", "anchor_text": "How You Like That", "paragraph_index": 0}, {"url": "https://www.youtube.com/watch?v=ioNng23DkIM", "anchor_text": "How You Like That", "paragraph_index": 2}, {"url": "https://www.nme.com/news/music/blackpink-break-multiple-world-records-with-how-you-like-that-video-2699364", "anchor_text": "By breaking records such as the most-viewed YouTube clip in 24 hours, most-viewed K-Pop act in 24 hours,", "paragraph_index": 3}, {"url": "https://www.soompi.com/article/1410678wpp/blackpinks-how-you-like-that-sets-new-record-as-it-surpasses-200-million-views", "anchor_text": "and the fastest video to reach 200 million views", "paragraph_index": 3}, {"url": "https://www.youtube.com/watch?v=fnPn6At3v28", "anchor_text": "Sour Candy", "paragraph_index": 3}, {"url": "https://www.forbes.com/sites/forbesagencycouncil/2017/05/15/are-you-maximizing-the-use-of-video-in-your-content-marketing-strategy/#3be9990d3584", "anchor_text": "also the second largest search engine, with 3 billion searches per month as of 2017", "paragraph_index": 5}, {"url": "https://www.geeksforgeeks.org/introduction-to-apis/", "anchor_text": "requests from the user to a service provider, and then return the results generated by the service provider back to the user.", "paragraph_index": 8}, {"url": "https://www.geeksforgeeks.org/introduction-to-apis/", "anchor_text": "the API sends the request of the user to the hotel booking\u2019s website, and then returns the most relevant data from the website to the intended user.", "paragraph_index": 8}, {"url": "https://www.w3schools.com/whatis/whatis_json.asp", "anchor_text": "is a lightweight format for storing and transporting data", "paragraph_index": 9}, {"url": "https://console.developers.google.com/", "anchor_text": "Google Developer\u2019s Console", "paragraph_index": 11}, {"url": "https://developers.google.com/youtube/v3/quickstart/python", "anchor_text": "we do not need user authorization to retrieve information about a public YouTube channel", "paragraph_index": 16}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads/list", "anchor_text": "CommentThreads", "paragraph_index": 20}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#replies.comments[]", "anchor_text": "keyword will return basic details about the comment thread and the thread\u2019s top-level comment, while", "paragraph_index": 21}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#replies.comments[]", "anchor_text": "contains a list of replies to the top level comment.", "paragraph_index": 21}, {"url": "https://stackoverflow.com/questions/45579306/get-youtube-video-url-or-youtube-video-id-from-a-string-using-regex", "anchor_text": "following function", "paragraph_index": 27}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads/list", "anchor_text": "looks like this", "paragraph_index": 29}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#resource", "anchor_text": "following", "paragraph_index": 30}, {"url": "https://github.com/mabrownnyu/youtube-data-api", "anchor_text": "youtube-data-api", "paragraph_index": 41}, {"url": "https://github.com/XWilliamY/custom_yt_comments_dataset", "anchor_text": "get_comments_of_video_id.py", "paragraph_index": 42}, {"url": "https://developers.google.com/youtube/v3/getting-started", "anchor_text": "10 thousand units per day", "paragraph_index": 43}], "all_paragraphs": ["This is the first of a series of articles that will cover textual data collection, data preprocessing, and sentiment analysis. In this article specifically, I will talk about why I wanted to collect comments from Blackpink\u2019s latest music video, How You Like That, and then walk you through how you can build your own dataset of YouTube comments from any video you want.", "If you would like to cut to the chase and start collecting comments immediately, you can follow the script at my repo:", "For this project, I was interested in analyzing YouTube comments on Blackpink\u2019s latest music video, \u201cHow You Like That\u201d, released on June 26th, 2020.", "By breaking records such as the most-viewed YouTube clip in 24 hours, most-viewed K-Pop act in 24 hours, and the fastest video to reach 200 million views, Blackpink has more than shown the world that it is a group to reckon with. However, prior to \u201cHow You Like That\u201d, the group\u2019s last album Kill this Love was released more than a year ago on April 4th, 2019. Between then and June 26th 2020, only one more song, a collaboration with Lady Gaga called \u201cSour Candy\u201d, was released. Now that Blackpink has graced its fans with more content featuring just themselves, I was interested in how BLINKs (the official fandom name for Blackpink) were responding to it.", "What are fans saying about the four members and their agency, YG? What are their sentiments toward Blackpink\u2019s latest song and the individual members? Do these sentiments differ across languages?", "These guiding questions motivated me to apply sentiment analysis on comments from their music video. I chose YouTube as a data source not only because it is a popular social media platform, but because it is also the second largest search engine, with 3 billion searches per month as of 2017. This makes it a valuable resource for entertainment companies to promote their artists\u2019 new singles and albums. In addition, since each video is accompanied by a comment section, these promotional videos also become a forum for fans to directly engage with artists and other fans.", "Beyond those points, I also wanted to challenge myself with building and cleaning a dataset from scratch. I encourage you to do the same for the following reasons:", "For this project, I chose to familiarize myself with APIs by querying comments through YouTube\u2019s Data API. The following sections will walk you through how I collected comments of interest. Some understanding of Python is assumed. I\u2019ve also included a short introduction to APIs and JSON. If you\u2019re already familiar with them, you can skip directly to the Data Collection section.", "API is short for Application Programming Interface. Its role is to send requests from the user to a service provider, and then return the results generated by the service provider back to the user. Geeksforgeeks uses the example of searching for a hotel room on an online website; the API sends the request of the user to the hotel booking\u2019s website, and then returns the most relevant data from the website to the intended user. In that sense, APIs, especially those produced by large companies, offer tools for users to obtain data of interest.", "According to w3schools, JSON, short for JavaScript Object Notation, is a lightweight format for storing and transporting data. JSON has very similar syntax to dictionaries in Python. JSON is denoted by curly braces, and its data is stored in key:value pairs separated by commas.", "This data format is important to know since it\u2019s the most common format for responses from APIs. For example, the response provided by the YouTube Data API is a JSON object.", "1. Head over to Google Developer\u2019s Console and create a new project.", "2. Once you\u2019ve set up a new project, select + ENABLE APIS AND SERVICES", "4. Search for YouTube Data API v3 and click on Enable.", "5. Then return to Credentials. You can do so by clicking on the hamburger menu, \u2630", "6. Select + CREATE CREDENTIALS, and then API Key.", "According to the developer docs, we do not need user authorization to retrieve information about a public YouTube channel, so an API key is all we\u2019ll need to collect comments off a video.", "7. Finally, install the Google API Client for Python.", "If you\u2019re curious, you can read more about setting up Google APIs with Python here:", "Once we have our credentials set up, we can now start collecting comments! We\u2019ll first build the service for calling the YouTube API:", "Now let\u2019s take a look at the resource of interest. In order to obtain all YouTube comments on a specific video, we\u2019ll need to send a request for CommentThreads. An example request in Python for a commentThread will look like the following:", "Of the parameters listed above, there are two parameters that are required, part, and exactly one of allThreadsRelatedToChannelId, channelId, id, and videoId. For the part parameter, we need to pass a comma-separated list consisting of any combination of id, snippet, and replies. The snippet keyword will return basic details about the comment thread and the thread\u2019s top-level comment, while replies contains a list of replies to the top level comment.", "The second required parameter is a filter, and we can choose between allThreadsRelatedToChannelId, channelId, id, and videoId. Since I was interested in just the YouTube comments on Blackpink\u2019s How You Like That, I chose to filter by videoId.", "A video\u2019s ID can be obtained from its YouTube link. They will generally look like this:", "The video ID in this case will be ioNng23DkIM. And in general, the video ID follows \u2018?v=\u2019.", "But sometimes a link may look like the following, such as when you obtain a link through the share option on a video:", "In that case, the ID will be directly after \u2018youtu.be\u2019.", "We can handle both cases with the following function (although this is unnecessary if you\u2019ll be manually sourcing YouTube video links. If that\u2019s the case, you can just copy the ID part of the link.)", "For this project, I was only interested in top level comments, the number of replies and likes, and whether the commenter also rated (liked) the video, so I passed just the string \u2018snippet\u2019 to parameter part.", "After running the code above, you\u2019ll get a JSON response that looks like this:", "The items of interest are nextPageToken and items. Let\u2019s talk about items first. The key items contains a list of commentThreads, and each commentThread consists of the following:", "Since I chose to pass only the string snippet to the part parameter, I will only get the snippet portion of the JSON resource above. The snippet is a dictionary containing keys and corresponding values for channelId, videoId, topLevelComment, canReply, totalReplyCount, and isPublic.", "Among these resources, I chose to save the values of topLevelComment and totalReplyCount. However, we still have not accessed the actual text content of the topLevelComment. We can extract the text, the number of likes the top level comment has received, and whether the commenter has also rated the video by indexing into the topLevelComment object. It is a comment resource, which looks like this:", "We can index into the response as follows:", "Putting it all together, we can use the code snippet below to get the data points of interest.", "If you\u2019re interested in additional data points, such as the time at which a comment was updated, you can write something like:", "The other value of interest for the commentThreads resource was the nextPageToken. Each time we submit a request, we get maxResults number of comments in the items list. The maximum number of results we can obtain is limited between 1 and 100. Thus, if a video has more than 100 comments, we\u2019ll need to make an API call several times. The nextPageToken helps us start directly on the next page of comments instead of starting from the beginning again. We just need to modify our API call a bit:", "Note that we don\u2019t need a nextPageToken for our very first service call. Instead, we use the nextPageToken obtained from the current JSON response for our next call to the service object.", "The function below will help us get comments off a YouTube video:", "Feel free to change the function as you see fit! After importing the necessary libraries (#1), I changed the parameters of the function to include an extra variable, csv_filename (#2). Lists to hold features of interest, code to index for those data points, and code to save the data points to lists are outlined in #3, #5, and #6. I then saved the desired features of each item in the JSON response line-by-line to the csv file (#7). After we check every item in the JSON response, we check if there\u2019s a nextPageToken (#8). If not, we\u2019ll return our data points of interest in dictionary form (#9).", "There is a lot more we can do to make this program more modular. For example, instead of hard-coding lists for each feature (#2, #5), we can write a function that takes in a list of keywords and returns a dictionary containing the relevant information for each given keyword. We can also write a dictionary that maps long, involved indexing such as the one for published_at to a shorthand. For example:", "This will involve some work the first time around to simplify things down the line. Fortunately, these functions (and more) are already available in the wrapper library youtube-data-api.", "However, if you\u2019d like to just collect comments out-of-the-box, my repo contains instructions on how to run the provided script get_comments_of_video_id.py.", "Note that Google does impose a daily quota on the number of API calls you can make. This quota is set at around 10 thousand units per day, which becomes more or less 250,000 comments I can collect in one day. To address these limitations, I created two API keys to collect more comments.", "In this article, we took a look at how to collect YouTube comments from a video of interest using YouTube Data API (v3). In my next article, we\u2019ll follow the classical NLP pipeline to preprocess our data for sentiment analysis.", "Thank you for following me on this data science journey!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Aspiring data scientist and dancer. Yale \u201920, Stuy \u201816"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F39a1e57aade&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----39a1e57aade--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----39a1e57aade--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@williamyang_84723?source=post_page-----39a1e57aade--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@williamyang_84723?source=post_page-----39a1e57aade--------------------------------", "anchor_text": "William Yang"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F41a3ededc7da&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&user=William+Yang&userId=41a3ededc7da&source=post_page-41a3ededc7da----39a1e57aade---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F39a1e57aade&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F39a1e57aade&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://keithmelissa.com", "anchor_text": "Keith Pitts"}, {"url": "https://unsplash.com/photos/RvPiAVE-zWo", "anchor_text": "Unsplash"}, {"url": "https://www.youtube.com/watch?v=ioNng23DkIM", "anchor_text": "How You Like That"}, {"url": "https://github.com/XWilliamY/custom_yt_comments_dataset", "anchor_text": "XWilliamY/custom_yt_comments_datasetYou should first set up a virtual environment. You can create a Python 3 virtual environment by entering the following\u2026github.com"}, {"url": "https://www.youtube.com/watch?v=ioNng23DkIM", "anchor_text": "How You Like That"}, {"url": "https://www.nme.com/news/music/blackpink-break-multiple-world-records-with-how-you-like-that-video-2699364", "anchor_text": "By breaking records such as the most-viewed YouTube clip in 24 hours, most-viewed K-Pop act in 24 hours,"}, {"url": "https://www.soompi.com/article/1410678wpp/blackpinks-how-you-like-that-sets-new-record-as-it-surpasses-200-million-views", "anchor_text": "and the fastest video to reach 200 million views"}, {"url": "https://www.youtube.com/watch?v=fnPn6At3v28", "anchor_text": "Sour Candy"}, {"url": "https://www.forbes.com/sites/forbesagencycouncil/2017/05/15/are-you-maximizing-the-use-of-video-in-your-content-marketing-strategy/#3be9990d3584", "anchor_text": "also the second largest search engine, with 3 billion searches per month as of 2017"}, {"url": "https://blog.scopus.com/file/what-is-an-apijpg", "anchor_text": "https://blog.scopus.com/file/what-is-an-apijpg"}, {"url": "https://www.geeksforgeeks.org/introduction-to-apis/", "anchor_text": "requests from the user to a service provider, and then return the results generated by the service provider back to the user."}, {"url": "https://www.geeksforgeeks.org/introduction-to-apis/", "anchor_text": "the API sends the request of the user to the hotel booking\u2019s website, and then returns the most relevant data from the website to the intended user."}, {"url": "https://www.shapediver.com/blog/json-objects-explained/", "anchor_text": "https://www.shapediver.com/blog/json-objects-explained/"}, {"url": "https://www.w3schools.com/whatis/whatis_json.asp", "anchor_text": "is a lightweight format for storing and transporting data"}, {"url": "https://console.developers.google.com/", "anchor_text": "Google Developer\u2019s Console"}, {"url": "https://developers.google.com/youtube/v3/quickstart/python", "anchor_text": "we do not need user authorization to retrieve information about a public YouTube channel"}, {"url": "https://developers.google.com/youtube/v3/quickstart/python", "anchor_text": "Python Quickstart | YouTube Data API | Google DevelopersThis quickstart guide explains how to set up a simple, Python command-line application that makes requests to the\u2026developers.google.com"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads/list", "anchor_text": "CommentThreads"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#replies.comments[]", "anchor_text": "keyword will return basic details about the comment thread and the thread\u2019s top-level comment, while"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#replies.comments[]", "anchor_text": "contains a list of replies to the top level comment."}, {"url": "https://www.youtube.com/watch?v=ioNng23DkIM", "anchor_text": "https://www.youtube.com/watch?v=ioNng23DkIM"}, {"url": "https://youtu.be/ioNng23DkIM", "anchor_text": "https://youtu.be/ioNng23DkIM"}, {"url": "https://stackoverflow.com/questions/45579306/get-youtube-video-url-or-youtube-video-id-from-a-string-using-regex", "anchor_text": "following function"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads/list", "anchor_text": "looks like this"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#resource", "anchor_text": "commentThread Resource"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#resource", "anchor_text": "following"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#kind", "anchor_text": "kind"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#etag", "anchor_text": "etag"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#id", "anchor_text": "id"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#snippet", "anchor_text": "snippet"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#snippet.channelId", "anchor_text": "channelId"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#snippet.videoId", "anchor_text": "videoId"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#snippet.topLevelComment", "anchor_text": "topLevelComment"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#resource", "anchor_text": "comments Resource"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#snippet.canReply", "anchor_text": "canReply"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#snippet.totalReplyCount", "anchor_text": "totalReplyCount"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#snippet.isPublic", "anchor_text": "isPublic"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#replies", "anchor_text": "replies"}, {"url": "https://developers.google.com/youtube/v3/docs/commentThreads#replies.comments[]", "anchor_text": "comments"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#resource", "anchor_text": "comments Resource"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#kind", "anchor_text": "kind"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#etag", "anchor_text": "etag"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#id", "anchor_text": "id"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet", "anchor_text": "snippet"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.authorDisplayName", "anchor_text": "authorDisplayName"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.authorProfileImageUrl", "anchor_text": "authorProfileImageUrl"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.authorChannelUrl", "anchor_text": "authorChannelUrl"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.authorChannelId", "anchor_text": "authorChannelId"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.authorChannelId.value", "anchor_text": "value"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.channelId", "anchor_text": "channelId"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.videoId", "anchor_text": "videoId"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.textDisplay", "anchor_text": "textDisplay"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.textOriginal", "anchor_text": "textOriginal"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.parentId", "anchor_text": "parentId"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.canRate", "anchor_text": "canRate"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.viewerRating", "anchor_text": "viewerRating"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.likeCount", "anchor_text": "likeCount"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.moderationStatus", "anchor_text": "moderationStatus"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.publishedAt", "anchor_text": "publishedAt"}, {"url": "https://developers.google.com/youtube/v3/docs/comments#snippet.updatedAt", "anchor_text": "updatedAt"}, {"url": "https://github.com/mabrownnyu/youtube-data-api", "anchor_text": "youtube-data-api"}, {"url": "https://github.com/XWilliamY/custom_yt_comments_dataset", "anchor_text": "get_comments_of_video_id.py"}, {"url": "https://developers.google.com/youtube/v3/getting-started", "anchor_text": "10 thousand units per day"}, {"url": "https://medium.com/tag/python?source=post_page-----39a1e57aade---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-collection?source=post_page-----39a1e57aade---------------data_collection-----------------", "anchor_text": "Data Collection"}, {"url": "https://medium.com/tag/dataset?source=post_page-----39a1e57aade---------------dataset-----------------", "anchor_text": "Dataset"}, {"url": "https://medium.com/tag/youtube?source=post_page-----39a1e57aade---------------youtube-----------------", "anchor_text": "YouTube"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F39a1e57aade&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&user=William+Yang&userId=41a3ededc7da&source=-----39a1e57aade---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F39a1e57aade&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&user=William+Yang&userId=41a3ededc7da&source=-----39a1e57aade---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F39a1e57aade&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----39a1e57aade--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F39a1e57aade&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----39a1e57aade---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----39a1e57aade--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----39a1e57aade--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----39a1e57aade--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----39a1e57aade--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----39a1e57aade--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----39a1e57aade--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----39a1e57aade--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----39a1e57aade--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@williamyang_84723?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@williamyang_84723?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "William Yang"}, {"url": "https://medium.com/@williamyang_84723/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "95 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F41a3ededc7da&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&user=William+Yang&userId=41a3ededc7da&source=post_page-41a3ededc7da--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F6ad4aa4a968a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-your-own-dataset-of-youtube-comments-39a1e57aade&newsletterV3=41a3ededc7da&newsletterV3Id=6ad4aa4a968a&user=William+Yang&userId=41a3ededc7da&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}