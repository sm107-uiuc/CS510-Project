{"url": "https://towardsdatascience.com/evolving-neural-networks-b24517bb3701", "time": 1683001363.076021, "path": "towardsdatascience.com/evolving-neural-networks-b24517bb3701/", "webpage": {"metadata": {"title": "Evolving Neural Networks. For the past decade, deep learning has\u2026 | by Conor Lazarou | Towards Data Science", "h1": "Evolving Neural Networks", "description": "For the past decade, deep learning has dominated the machine learning landscape, often to the exclusion of other techniques. As a data scientist, it\u2019s important to have a variety of tools at your\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Natural_selection", "anchor_text": "natural selection", "paragraph_index": 1}, {"url": "https://en.wikipedia.org/wiki/Artificial_neural_network", "anchor_text": "neural networks", "paragraph_index": 2}, {"url": "http://proceedings.mlr.press/v9/glorot10a/glorot10a.pdf", "anchor_text": "Glorot Normal initialization", "paragraph_index": 4}, {"url": "https://en.wikipedia.org/wiki/Rectifier_(neural_networks)", "anchor_text": "ReLU", "paragraph_index": 4}, {"url": "https://en.wikipedia.org/wiki/Softmax_function", "anchor_text": "softmax", "paragraph_index": 4}, {"url": "https://en.wikipedia.org/wiki/Sigmoid_function", "anchor_text": "sigmoid", "paragraph_index": 4}, {"url": "https://en.wikipedia.org/wiki/Identity_function", "anchor_text": "linear", "paragraph_index": 4}, {"url": "https://tauday.com/tau-manifesto", "anchor_text": "\u03c4", "paragraph_index": 17}, {"url": "https://gist.github.com/netj/8836201", "anchor_text": "iris dataset", "paragraph_index": 19}, {"url": "http://flatland.ai", "anchor_text": "flatland.ai", "paragraph_index": 29}], "all_paragraphs": ["For the past decade, deep learning has dominated the machine learning landscape, often to the exclusion of other techniques. As a data scientist, it\u2019s important to have a variety of tools at your disposal, and one class of techniques that I feel is too-often overlooked is evolutionary algorithms. It may be a little self-indulgent to say this (myself being an intermediary product of a long-running evolutionary algorithm), but I find the evolutionary technique of design wonderful and in many cases more pragmatic than conventional machine learning techniques. In this tutorial we\u2019ll walk through training neural networks using an evolutionary algorithm, and we will use this technique to solve regression, classification, and policy problems. To do this, we will be using Python and the NumPy library.", "Evolutionary Algorithms are based on the premise of natural selection, and include a five-step process:", "We will be using fully-connected feed-forward neural networks as our organisms in this tutorial.", "In designing our organisms, we have four guiding principles:", "In the __init__ function, we set up the network. The parameter dimensions is a list of layer dimensions, where the first is the width of the input, the last is the width of the output, and all others are hidden dimensions. The __init__ function iterates through these n dimensions to create n-1 weight matrices using Glorot Normal initialization, which are stored as layers. If bias is enabled, a non-zero bias vector is also stored for each layer. The model uses ReLU activation for all internal layers. The output activation is specified using the output parameter, and can be \u201csoftmax\u201d, \u201csigmoid\u201d, or \u201clinear\u201d, as implemented in the _activation method.", "The predict method repeatedly applies ReLU and matrix multiplication to the input matrix. As an example, if the network were made with three hidden layers and softmax output, then the network would apply the function", "Were X is the input matrix, W\u1d62 is the weight matrix for layer i, and Y is the output.", "We will be creating a population of these organisms, all with the same architecture but each with different, random weights.", "Measuring how well an organism performed is the crux of evolutionary algorithm design, and \u201cgood performance\u201d varies from task to task. In regression, the fitness score may be the negative mean squared error. In classification, it may be classification accuracy. In playing Pac-Man, it may be the number of pellets gobbled before dying. Because fitness functions are task-specific, we will wait to explore them until the applications section below. For the time being, it suffices to understand that we require a function scoring_function which accepts an organism as input and returns a real number output, where bigger is better.", "The reproduction step has itself two steps: parent selection and progeny creation. Each new organism needs k parents. In asexual reproduction k is 1, while in sexual reproduction k is 2 or more. Therefore, to generate a new generation of n organisms, we must select n sets of k organisms from the previous generation; deciding which organism(s) will parent each child should be done on the basis of their fitness score, where the fittest organisms should produce the most offspring. There are many ways to do this, some of which include:", "I chose a compromise between methods one and two, where the top 10% of organisms were selected as the first parent of a child ten times each and the second parent was chosen randomly using the exponential distribution, as above. I also enforced that a clone of the best-performing organism of a given generation be included in the next generation. Here is the relevant code:", "As you can see, the organisms are scored and sorted in lines 5 and 6. Then, population_size new organisms are created in the loop on line 8. Parent one is selected from the top 10% on line 9 (holdout is the number of organisms that are guaranteed progeny, here being population_size//10). When mating is enabled, parent two is chosen using the exponential distribution with \u03bb=holdout. When mating is disabled, parent one mates with itself and the child is a clone.", "Once n pairs of parents have been chosen, the progeny can be created by randomly combining traits from each pair. In our case, those traits are weights in the neural network layers. Here is the Organism class\u2019s method for progeny creation:", "As you can see, the mate method confirms that both parents are compatible with each other, then randomly selects a parent from whom to inherit each column vector in each weight matrix for the child organism.", "After each child organism is produced, it is subject to mutation (snippet 3, line 18). In this tutorial, the mutation step is realized as the addition of Gaussian noise to each weight in the network. We do not change the activations or architecture of the network here, although a more advanced evolutionary algorithm could certainly do so by adding or removing nodes in the hidden layers. Here is the code:", "This is hardly a step; all that remains to be done is check if some condition is met, and to return to step two if it has not. I chose to run the algorithm for a fixed number of generations, but stopping when the fitness score hits a desired threshold or after some number of generations pass without improvement are also good choices. Here is the full code for the Organism and Ecosystem classes:", "\u201cCool. Why should I care?\u201d \u2014 you, probably", "Let\u2019s apply this process to a regression problem. We will be evolving an organism to approximate sin(\u03c4x) in the domain x \u2208 [0, 1]. Obviously this is a trivial problem, and that\u2019s why we\u2019re using it as an example. So how should we design our organisms?", "As you can see, after 200 generations an organism evolved that produces a pretty good approximation of the sine function within the domain [0, 1].", "Let\u2019s see how the technique fares against a classification problem. Here we use the iris dataset. For the uninitiated, (welcome!) the iris dataset is a decades-old set of sepal and petal lengths and widths of 150 iris flowers. Each flower belongs to one of three species, and the task is to classify the flower by species based on its four measurements. So what does this mean for our organisms?", "Each scatterplot represents a pair of different features plotted against each other. Each point is a flower, where the outline colour represents the true class and the fill colour represents the predicted class. The training and testing fitness of the best organism in each generation are shown in the line plot, and the best organism is illustrated in the centre-right panel. In only 15 generations, the ecosystem evolves a network that correctly classifies the entire testing set!", "Let\u2019s try evolving an organism capable of playing OpenAI\u2019s CartPole \u201cgame\u201d, included in the AI Gym package. Here\u2019s an example from YouTube:", "A pole is attached by an un-actuated joint to a cart, which moves along a frictionless track. The system is controlled by applying a force of +1 or -1 to the cart. The pendulum starts upright, and the goal is to prevent it from falling over. A reward of +1 is provided for every timestep that the pole remains upright. The episode ends when the pole is more than 15 degrees from vertical, or the cart moves more than 2.4 units from the center.", "At each timestep of the game, the gamestate is represented as a vector of four real numbers, corresponding to the horizontal position of the cart, the horizontal velocity of the cart, the angle of the pole, and the angular velocity of the pole. The player must then apply an action (applying a force of +1 or -1) and the game advances one timestep. The player has \u201cwon\u201d the game if they are able to avoid losing for 500 timesteps.", "So what does this mean for our ecosystem and organisms?", "Is it really that simple? Well, here are the results:", "That\u2019s right, the ecosystem evolved an organism that beat the game in only 6 generations. I was a little shocked myself; you\u2019ll notice on line 31 that I expected it would take a lot more than that. I had intended to show the fitness over time just like in the other two problems, but I won\u2019t bother you with it since six data points don\u2019t make for an interesting figure.", "Evolutionary algorithms are intuitive and effective. Although the above examples were fairly simple, they demonstrate the evolutionary algorithms are applicable to a broad class of problems. Evolutionary algorithms are particularly useful in situations where the fitness of the solution is measurable, but not in a way that easily allows for backward propagation of the gradient, as in the CartPole game. For these reasons, it\u2019s well-worth adding evolutionary algorithms to your machine learning toolbox. Stay tuned for my next article, in which I\u2019ll explore fitness functions at length and how reasonable assumptions can lead to hilariously disastrous results.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data science and ML consultant, generative artist, writer. flatland.ai"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb24517bb3701&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b24517bb3701--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b24517bb3701--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://conor-lazarou.medium.com/?source=post_page-----b24517bb3701--------------------------------", "anchor_text": ""}, {"url": "https://conor-lazarou.medium.com/?source=post_page-----b24517bb3701--------------------------------", "anchor_text": "Conor Lazarou"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdeb461dc9d26&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&user=Conor+Lazarou&userId=deb461dc9d26&source=post_page-deb461dc9d26----b24517bb3701---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb24517bb3701&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb24517bb3701&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://en.wikipedia.org/wiki/Natural_selection", "anchor_text": "natural selection"}, {"url": "https://en.wikipedia.org/wiki/Artificial_neural_network", "anchor_text": "neural networks"}, {"url": "http://proceedings.mlr.press/v9/glorot10a/glorot10a.pdf", "anchor_text": "Glorot Normal initialization"}, {"url": "https://en.wikipedia.org/wiki/Rectifier_(neural_networks)", "anchor_text": "ReLU"}, {"url": "https://en.wikipedia.org/wiki/Softmax_function", "anchor_text": "softmax"}, {"url": "https://en.wikipedia.org/wiki/Sigmoid_function", "anchor_text": "sigmoid"}, {"url": "https://en.wikipedia.org/wiki/Identity_function", "anchor_text": "linear"}, {"url": "https://tauday.com/tau-manifesto", "anchor_text": "\u03c4"}, {"url": "https://gist.github.com/netj/8836201", "anchor_text": "iris dataset"}, {"url": "https://www.youtube.com/channel/UCdyjiB5H8Pu7aDTNVXTTpcg", "anchor_text": "Morvan"}, {"url": "https://gym.openai.com/envs/CartPole-v1/", "anchor_text": "official documentation"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----b24517bb3701---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/evolutionary-algorithms?source=post_page-----b24517bb3701---------------evolutionary_algorithms-----------------", "anchor_text": "Evolutionary Algorithms"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----b24517bb3701---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/tag/reinforcement-learning?source=post_page-----b24517bb3701---------------reinforcement_learning-----------------", "anchor_text": "Reinforcement Learning"}, {"url": "https://medium.com/tag/tutorial?source=post_page-----b24517bb3701---------------tutorial-----------------", "anchor_text": "Tutorial"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb24517bb3701&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&user=Conor+Lazarou&userId=deb461dc9d26&source=-----b24517bb3701---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb24517bb3701&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&user=Conor+Lazarou&userId=deb461dc9d26&source=-----b24517bb3701---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb24517bb3701&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b24517bb3701--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb24517bb3701&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b24517bb3701---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b24517bb3701--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b24517bb3701--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b24517bb3701--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b24517bb3701--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b24517bb3701--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b24517bb3701--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b24517bb3701--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b24517bb3701--------------------------------", "anchor_text": ""}, {"url": "https://conor-lazarou.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://conor-lazarou.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Conor Lazarou"}, {"url": "https://conor-lazarou.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.1K Followers"}, {"url": "http://flatland.ai", "anchor_text": "flatland.ai"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdeb461dc9d26&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&user=Conor+Lazarou&userId=deb461dc9d26&source=post_page-deb461dc9d26--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F51220adfabae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fevolving-neural-networks-b24517bb3701&newsletterV3=deb461dc9d26&newsletterV3Id=51220adfabae&user=Conor+Lazarou&userId=deb461dc9d26&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}