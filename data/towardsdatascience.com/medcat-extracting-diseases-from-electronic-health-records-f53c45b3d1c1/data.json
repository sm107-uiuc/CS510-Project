{"url": "https://towardsdatascience.com/medcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1", "time": 1683005418.3437471, "path": "towardsdatascience.com/medcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1/", "webpage": {"metadata": {"title": "MedCAT | Extracting Diseases from Electronic Health Records | by Zeljko | Towards Data Science", "h1": "MedCAT | Extracting Diseases from Electronic Health Records", "description": "The focus in this post is completely on MedCAT and how to use it to extract information from EHRs. A typical MedCAT workflow: This post will cover the steps 1,2 and 3, while a post on supervised\u2026"}, "outgoing_paragraph_urls": [{"url": "https://metamap.nlm.nih.gov/Docs/SemanticTypes_2018AB.txt", "anchor_text": "UMLS", "paragraph_index": 18}, {"url": "https://www.nlm.nih.gov/research/umls/index.html", "anchor_text": "UMLS", "paragraph_index": 24}, {"url": "https://www.nlm.nih.gov/healthit/snomedct/index.html", "anchor_text": "SNOMED", "paragraph_index": 24}, {"url": "https://arxiv.org/abs/1912.10166", "anchor_text": "MedCAT paper", "paragraph_index": 26}, {"url": "https://github.com/antsh3k/Clinical-Coding-Pilot", "anchor_text": "here", "paragraph_index": 26}, {"url": "https://www.nlm.nih.gov/research/umls/index.html", "anchor_text": "UMLS", "paragraph_index": 27}, {"url": "https://www.nlm.nih.gov/research/umls/index.html", "anchor_text": "here", "paragraph_index": 27}, {"url": "https://s3-eu-west-1.amazonaws.com/zkcl/cdb-medmen.dat", "anchor_text": "here", "paragraph_index": 28}, {"url": "https://s3-eu-west-1.amazonaws.com/zkcl/vocab.dat", "anchor_text": "here", "paragraph_index": 28}, {"url": "https://github.com/CogStack/MedCAT", "anchor_text": "github", "paragraph_index": 30}, {"url": "https://metamap.nlm.nih.gov/Docs/SemanticTypes_2018AB.txt", "anchor_text": "here", "paragraph_index": 35}, {"url": "https://colab.research.google.com/drive/1q29RbHlZoFK7TcvMKITi3ABbE-E_fw30", "anchor_text": "Notebook", "paragraph_index": 40}, {"url": "https://github.com/CogStack/MedCATtrainer", "anchor_text": "Repository", "paragraph_index": 42}, {"url": "https://medium.com/@tomsearle/medcattrainer-a-tool-for-inspecting-improving-and-customising-medcat-880a11297ebe", "anchor_text": "Blog post", "paragraph_index": 42}, {"url": "https://towardsdatascience.com/tagged/medcat", "anchor_text": "here", "paragraph_index": 46}, {"url": "https://twitter.com/zeljkokr", "anchor_text": "https://twitter.com/zeljkokr", "paragraph_index": 48}], "all_paragraphs": ["The focus in this post is completely on MedCAT and how to use it to extract information from EHRs. A typical MedCAT workflow:", "This post will cover the steps 1,2 and 3, while a post on supervised training will go through 4 and 5.", "MedCAT uses two main models in its pipeline:", "The rest of the post will show how to build, from the ground up, each one of these models.", "The first of the two required models when running MedCAT is a Vocabulary model (Vocab). The model is used for two things: (1) Spell checking; and (2) Word Embedding.", "The Vocab is very simple and you can build it from a file that is structured as below:", "An example of a file used to build the vocabulary (this is a TSV file without a header) with 3-dimensional vector embeddings:", "Note that if the spelling is important (or if you want MedCAT later to be able to correct spelling mistakes) all the words in the vocabulary must be correctly spelt.", "The second model that is required when using MedCAT is the Concept Database (CDB). This database holds a list of all concepts that we would like to detect and link to. For a large number of medical use-cases, we would use big databases like the UMLS or SNOMED. But this is not a requirement, MedCAT can be used with any database no matter how small or big it is.", "A CSV is necessary to build a CDB (the structure/headers shown below are required and must be there):", "This is the most basic version of the CSV file used to build a CDB:", "cui - The concept unique identifier, this is simply an ID in your database, can be a number or a string.", "str - String/Name of that concept. It is important to write all possible names and abbreviations for a concept of interest. If you have a concept that has multiple different names (like the one above with cui=7), you can simply add multiple rows with the same concept ID and MedCAT will merge that during the build phase.", "To print the content our CDB (be careful with this function when the CDB is very large):", "As you can see MedCAT has combined the two concepts with cui=7 and merged the different names.", "The CSV can contain additional information, all possible fields are specified in the example below:", "Each one of these fields is optional and can be included or left out in your CSV:", "tty - Term type e.g. PN - Primary Name. Primary names are important and I would recommend to always add these fields when creating your CDB.", "tui - Semantic type identifier - e.g. T047 (taken from UMLS).", "sty - Semantic type - e.g. Disease", "desc - Description of this concept", "examples - Examples of this concept in a sentence (use short examples, not whole documents).", "Note: If one concept has multiple names, you can also separate the different names by a | \u2014 pipe symbol, or use the trick shown in the previous section of having multiple rows with the same CUI. Only one of the rows needs to have full information on the concept.", "The code for building the CDB from this CSV is the same as above, the only differences are the extra features on the built CDB:", "If you have access to UMLS or SNOMED you can also build large medical CDBs. Building the CDB is still done using the same code as above, you only need to put the UMLS/SNOMED concepts into a CSV file with the format described above.", "There are very few use-cases that require the full UMLS database, I recommend using a subset that is required for your use-case/domain. Building a CDB that contains the full UMLS database is, of course, possible but please take care that the process can take up to 36h and can require ~16Gb of RAM.", "Note: For UMLS I\u2019ve prepared the scripts that create a CSV file given that we have UMLS In a PostgreSQL database. Appendix A in the MedCAT paper. Or if you want to build SNOMED a repository is available here.", "The models that I will be using are created from UMLS; unfortunately, UMLS is not publicly available. You can request access to UMLS here and build your models, as described in the previous section.", "For those of you who want to follow the tutorial but don\u2019t want to go through the trouble of getting access to UMLS, I\u2019ve created models that use a free subset of UMLS. You can download the CDB model here and the Vocabulary here, these models are smaller, but still can be useful in many use-cases (the Google Colab already contains all the code for downloading the models).", "First, we load the models (if you have created your models you can use them):", "Then, we will set a couple of parameters (full list will be available on github):", "We are now ready to run the unsupervised training. I have prepared a small dataset that can be used to test the unsupervised training, but please note that large datasets like MIMIC-III will produce much better results. The following blocks of code assume you have downloaded the data from the repository (or that you have MIMIC-III) if you are running locally (Google Colab already has everything):", "This concludes the unsupervised training, if you look at the output of the print_statsfunction, you will see how many of our concepts received training. What is left is to save the trained model (only the CDB model receives training, vocab always stays the same):", "As the training is now finished, we can proceed with document annotation.", "And that is it, there is nothing more to it. If you want, you can also view the annotated document using displacy from spacy (works in Jupyter notebooks):", "The underlying CDB model is based on UMLS (even the openly available MedMentions model), this allows us to filter the annotations and get only the concepts that we are interested in (for our use-case that is T047 \u2014 Disease or Syndrom; and T048 \u2014 Mental or Behavioral Dysfunction), full list here.", "Unsupervised learning is very useful as it does not require any annotation effort on our side, but it can learn some strange things. To fix the misses and mistakes we are going to fine-tune the models using online/supervised training via the MedCATtrainer. This way, most of the workload is done by the unsupervised learning and we only need to invest a bit of time to make it perfect.", "Looking again at the use-case of analysing the relation between age and diseases, we can carefully choose which documents to use to fine-tune the models. The goal is to show general population statistics on the connection between age and diseases, which means the most prevalent diseases (both mental and physical) are the most important. For the fine-tuning, it makes sense to choose the most frequent disease already detected by the MedCAT models (unsupervised) and check the mistakes (or possible improvements). More formally, the following is necessary:", "In this way, we are only going to look at documents where concepts of interest appear and not a random set of documents where possibly we will have no mentions of the relevant concepts.", "To annotate all the documents in our dataset we are going to use the multi_processingfunction in MedCAT, it allows to run things faster on multiple processors (if we have them). During the annotation process, we are going to record for each CUI in which document it appears.", "Now that we have for each CUI the documents in which it appears, we can also plot the most frequent CUIs (Diseases) in our dataset (image below). Please refer to Notebook for a more complete code base.", "What is left is to select the most frequent diseases and for each pick two documents at random and save them in the format required by MedCATtrainer. That is a simple CSV file with the following structure:", "Is a web-based interface that can be used to improve (or train new) MedCAT models. A full tutorial is available in the Repository + Blog post. There are many functionalities that the trainer supports, but our focus is on:", "Simply extracting mentions of medical concepts from EHRs is not enough for many use-cases. Often it is needed to extract meta-annotations (attributes/properties) of each detected concept. Some possible meta-annotations are:", "Let\u2019s have a look at an example, in Figure 2 for the concept lung disease there are 2 meta-annotations that tell us the concept is Negated (meaning, someone does not have lung disease), and that the experience is patient (meaning, the someone is the patient).", "MedCATtrainer enables us to train models that will later automatically do these meta-annotations. For our use-case one meta-annotation will be enough:", "If you are interested in more posts about MedCAT and Electronic Health Records, have a look here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Research Fellow in Health Informatics at King\u2019s College London | Twitter: https://twitter.com/zeljkokr"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff53c45b3d1c1&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@w_is_h?source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@w_is_h?source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": "Zeljko"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F919a63f2c7dc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&user=Zeljko&userId=919a63f2c7dc&source=post_page-919a63f2c7dc----f53c45b3d1c1---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff53c45b3d1c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff53c45b3d1c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@impulsq", "anchor_text": "Online Marketing"}, {"url": "https://unsplash.com/photos/hIgeoQjS_iE", "anchor_text": "Unsplash"}, {"url": "https://colab.research.google.com/drive/1nz2zMDQ3QrlTgpW7FfGaXeV1ZAtZeOe2", "anchor_text": "Google Colab"}, {"url": "https://metamap.nlm.nih.gov/Docs/SemanticTypes_2018AB.txt", "anchor_text": "UMLS"}, {"url": "https://www.nlm.nih.gov/research/umls/index.html", "anchor_text": "UMLS"}, {"url": "https://www.nlm.nih.gov/healthit/snomedct/index.html", "anchor_text": "SNOMED"}, {"url": "https://arxiv.org/abs/1912.10166", "anchor_text": "MedCAT paper"}, {"url": "https://github.com/antsh3k/Clinical-Coding-Pilot", "anchor_text": "here"}, {"url": "https://colab.research.google.com/drive/1q29RbHlZoFK7TcvMKITi3ABbE-E_fw30", "anchor_text": "Google Colab"}, {"url": "https://www.nlm.nih.gov/research/umls/index.html", "anchor_text": "UMLS"}, {"url": "https://www.nlm.nih.gov/research/umls/index.html", "anchor_text": "here"}, {"url": "https://s3-eu-west-1.amazonaws.com/zkcl/cdb-medmen.dat", "anchor_text": "here"}, {"url": "https://s3-eu-west-1.amazonaws.com/zkcl/vocab.dat", "anchor_text": "here"}, {"url": "https://github.com/CogStack/MedCAT", "anchor_text": "github"}, {"url": "https://metamap.nlm.nih.gov/Docs/SemanticTypes_2018AB.txt", "anchor_text": "here"}, {"url": "https://colab.research.google.com/drive/1q29RbHlZoFK7TcvMKITi3ABbE-E_fw30", "anchor_text": "Notebook"}, {"url": "https://github.com/CogStack/MedCATtrainer", "anchor_text": "Repository"}, {"url": "https://medium.com/@tomsearle/medcattrainer-a-tool-for-inspecting-improving-and-customising-medcat-880a11297ebe", "anchor_text": "Blog post"}, {"url": "https://towardsdatascience.com/tagged/medcat", "anchor_text": "here"}, {"url": "https://medium.com/tag/healthcare?source=post_page-----f53c45b3d1c1---------------healthcare-----------------", "anchor_text": "Healthcare"}, {"url": "https://medium.com/tag/covid-19?source=post_page-----f53c45b3d1c1---------------covid_19-----------------", "anchor_text": "Covid-19"}, {"url": "https://medium.com/tag/nlp?source=post_page-----f53c45b3d1c1---------------nlp-----------------", "anchor_text": "NLP"}, {"url": "https://medium.com/tag/medcat?source=post_page-----f53c45b3d1c1---------------medcat-----------------", "anchor_text": "Medcat"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----f53c45b3d1c1---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff53c45b3d1c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&user=Zeljko&userId=919a63f2c7dc&source=-----f53c45b3d1c1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff53c45b3d1c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&user=Zeljko&userId=919a63f2c7dc&source=-----f53c45b3d1c1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff53c45b3d1c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff53c45b3d1c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f53c45b3d1c1---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f53c45b3d1c1--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@w_is_h?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@w_is_h?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Zeljko"}, {"url": "https://medium.com/@w_is_h/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "70 Followers"}, {"url": "https://twitter.com/zeljkokr", "anchor_text": "https://twitter.com/zeljkokr"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F919a63f2c7dc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&user=Zeljko&userId=919a63f2c7dc&source=post_page-919a63f2c7dc--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fab286cdf3ea7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmedcat-extracting-diseases-from-electronic-health-records-f53c45b3d1c1&newsletterV3=919a63f2c7dc&newsletterV3Id=ab286cdf3ea7&user=Zeljko&userId=919a63f2c7dc&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}