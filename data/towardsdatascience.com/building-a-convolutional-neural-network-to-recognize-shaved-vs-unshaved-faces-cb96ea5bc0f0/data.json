{"url": "https://towardsdatascience.com/building-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0", "time": 1683009705.3001542, "path": "towardsdatascience.com/building-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0/", "webpage": {"metadata": {"title": "Building a Convolutional Neural Network to Recognize Shaved vs UnShaved Faces | by Jacob Tadesse | Towards Data Science", "h1": "Building a Convolutional Neural Network to Recognize Shaved vs UnShaved Faces", "description": "In this tutorial, we will use an image dataset that contains about 2,000 images of individual people labeled as \u201cshaved\u201d or \u201cunshaved\u201d."}, "outgoing_paragraph_urls": [{"url": "https://medium.com/@jacob.tadesse/web-scraping-stock-images-using-google-selenium-and-python-8b825ba649b9", "anchor_text": "scrapping free stock photo sites", "paragraph_index": 0}, {"url": "https://drive.google.com/file/d/15FIs0RUgC_UQ7_aSLlH84B4IX0VYditS/view?usp=sharing", "anchor_text": "image dataset", "paragraph_index": 2}, {"url": "https://medium.com/@jacob.tadesse/web-scraping-stock-images-using-google-selenium-and-python-8b825ba649b9", "anchor_text": "Web Scraping Stock Images Using Google Selenium and Python", "paragraph_index": 5}, {"url": "http://jtadesse.pythonanywhere.com/", "anchor_text": "flask to build a python application", "paragraph_index": 34}, {"url": "https://www.pythonanywhere.com/?affiliate_id=0077ae73", "anchor_text": "PythonAnywhere", "paragraph_index": 34}, {"url": "http://jtadesse.pythonanywhere.com/", "anchor_text": "http://jtadesse.pythonanywhere.com/", "paragraph_index": 35}, {"url": "https://github.com/cousinskeeta/machine-learning-using-computer-vision", "anchor_text": "here", "paragraph_index": 36}], "all_paragraphs": ["In this tutorial, we will use an image dataset created by scrapping free stock photo sites. The image set contains about 2,000 images of individual people labeled as \u201cshaved\u201d or \u201cunshaved\u201d. We will combine computer vision and machine learning to classify images using a Convolutional Neural Network (CNN).", "By the end of this tutorial, you will be able to:", "To code along, download my image dataset from Google Drive. All image data is stored in a Pandas dataframe, including the Original Image Arrays, as well as the Resized Image Arrays for 700x700, 300x300, 150x150, and 50x50.", "We will use pickle to \u201cunpickle\u201d and load the pandas dataframe. We use Keras to build the CNN from scratch and also leverage the VGG16 pre-trained model. We will use Pyplot to visualize the image data and also visualize the intermediate activations within the hidden layers of the CNN.", "Here we can see the images data saved in our image set. To ensure the images are not in a stacked order, we will shuffle the order of images before performing a train, test, evaluation split. This is possible using a built in pandas method, .sample().", "At this juncture we will select the image shape we will use going forward. In your own projects, you may have to scrape photos for your own needs, so please check out my article on Web Scraping Stock Images Using Google Selenium and Python. Okay, we will select images of size 300 x 300, and move right along.", "The most common pixel format is the byte image, where this number is stored as an 8-bit integer giving a range of possible values from 0 to 255. Typically zero is taken to be black, and 255 is taken to be white. Values in between make up the different shades of gray. In our example we will be using color photos with that share the scale for red, green and blue, ie: \u2018rbg\u2019; where 0 is no light and 255 is maximum light. We will normalize the values by dividing each value by the maximum number in the range, and since we have each image stored as an array, we will reformat the features variables into tensors for our neural network.", "Here we will define our target variable. We will first convert our Labels into binary targets for our Neural Network, also known as one-hot encoding.", "We will add the new binary targets to our dataframe an also define the target variable as \u2018y\u2019. Depending on when you download the DataFrame, this may have already been included in the DataFrame labeled, \u201cTarget\u201d. If not, no worries. Just follow this script.", "Now that we have shuffled our image dataset, defined our target and feature variables; it is time for us to perform our train-test-evaluation split. We will perform this using Sklearn\u2019s train_test_split module. But performing the train-test-split, we will create a hold out set, using the last 100 images, for model evaluation.", "A Convolutional Neural Network (CNN) is a Deep Learning algorithm used specifically for images, where the algorithm identifies patterns within the image, assigning importance to different patterns/objects in an image, using weights and biases to recognize differences and similarities amongst input images. These CNNs are trained based on labeled images. The job of a CNN is to decrease the pictures into a structure which is simpler to process, without losing weights/bias which are essential tp getting a the best results.", "Here we will build the layers to our Convolutional Neural Network. We will start by adding a sequential layer; followed by our 2D convolutional layers, Max pooling layers, Dense layers, and Dropout layers.", "The 2D convolutional layers are what make CNN so powerful in image prediction. This layers uses a kernel/filter (4x4) to examine all pixels for each channel; starting left to right, top to bottom, and front to back; convolving through all pixels (either grayscale, RGB, etc). This filter will perform a dot product multiplication using the pixel data within the feature in order to extract features, such as edges, from the input image.", "The first Conv2D layer captures basic features like edges, color, size, and more. As more layers are added to the network, the algorithm identifies complex features from the input image. We used the ReLU, or Rectified Linear Activation Function, to train our deep network, as ReLu tends to converge much more quickly and reliably than training with other activation functions.", "The Max Pooling layer reduces the size of the Convolved Feature, decreases computational power required in dimensionality reduction, extracts dominant features, and also suppresses noise.", "We will use the sigmoid activation function for our output layer because it exists between (0 to 1), and we want to predict the probability as an output as shaved or unshaved.", "Now that we have built our CNN model, we will need to compile, fit and evaluate the model. We will use early stopping to help us identify the global minimum for our binary cross-entropy loss function. We will store the accuracy and loss metrics for each epoch in order to visualize the model performance over time.", "Here we will use PyPlot to visualize our model\u2019s performance during training and testing.", "Now that we have our model with pretty decent accuracy, we will use it to make predictions on our hold-out evaluation set.", "The model has not seen this data, and should be able to make an accurate prediction. Let\u2019s take a look at the evaluation targets vs the predictions, and also take a look at the images in the evaluation image set.", "We can also utilize metrics from Sklearn to view the classification report and also view a confusion matrix comparing the predictions to the actual results. We will create both for our test set and hold out evaluation set below.", "Here is the code to print your confusion matrix and classification report.", "With so many hidden layers, it is hard to understand what the model is doing under the hood. While not necessary for the model to perform, it\u2019s a good way to visualize the model structure and also view the intermediate activations.", "This code will save your model structure as a PDF file:", "This code will save an image for the intermediate activation layers:", "Here we will leverage the imagenet weights form one of Kera\u2019s pre-trained models, VGG16.", "Next, we will re-build our model, using the pre-trained model layers and add additional layers similarly to what we did above.", "Now, we will compile, fit and evaluate our new model.", "Now we can evaluate the metrics from training.", "We can also evaluate the results of the confusion matrix and classification report to see if our model performs better that the one we built from scratch.", "We can see now that this model performs with greater accuracy.", "Now that we have a solid model that performs well on unseen images, we can save this model, and the weights. This will allow us to deploy this model, or even share the file with others interested in similar projects.", "Since we started with a pickle file, this tutorial would not be complete without saving our model as a pickle file. To save your model as a pickle file, just run the following code:", "Now let\u2019s review. First, we imported our libraries and image set. We then resampled our data, defined and scaled our features, and stored the images in a tensor. We one-hot encoded our target variables; then split our data into train/test/evaluation sub-sets. We built a CNN model from scratch and also built a model using pre-trained VGG16 and transfer learning; fitting each model to our image set and compiling each model using the adam optimizer, with a binary_crossentropy loss function to improve our accuracy metric during forward and backwards propagation.", "After training was complete, we were able to evaluate the metrics, as well as visualize the training results, model structure, and intermediate activations. Finally, we were able to save our whole model as an .h5 file, and also as a pickle file. The next step in our process is to deploy our model for public use. I will use flask to build a python application, and host it on PythonAnywhere, so stay tuned for my next article in this series.", "Here is the final product: http://jtadesse.pythonanywhere.com/", "You can find my GitHub repository here. Thank you!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fcb96ea5bc0f0&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://jacob-tadesse.medium.com/?source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": ""}, {"url": "https://jacob-tadesse.medium.com/?source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": "Jacob Tadesse"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb998f8b193b3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&user=Jacob+Tadesse&userId=b998f8b193b3&source=post_page-b998f8b193b3----cb96ea5bc0f0---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcb96ea5bc0f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcb96ea5bc0f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/photos/OH5BRdggi2w", "anchor_text": "Image"}, {"url": "https://medium.com/@jacob.tadesse/web-scraping-stock-images-using-google-selenium-and-python-8b825ba649b9", "anchor_text": "scrapping free stock photo sites"}, {"url": "https://drive.google.com/file/d/15FIs0RUgC_UQ7_aSLlH84B4IX0VYditS/view?usp=sharing", "anchor_text": "image dataset"}, {"url": "https://medium.com/@jacob.tadesse/web-scraping-stock-images-using-google-selenium-and-python-8b825ba649b9", "anchor_text": "Web Scraping Stock Images Using Google Selenium and Python"}, {"url": "http://jtadesse.pythonanywhere.com/", "anchor_text": "flask to build a python application"}, {"url": "https://www.pythonanywhere.com/?affiliate_id=0077ae73", "anchor_text": "PythonAnywhere"}, {"url": "http://jtadesse.pythonanywhere.com/", "anchor_text": "http://jtadesse.pythonanywhere.com/"}, {"url": "https://github.com/cousinskeeta/machine-learning-using-computer-vision", "anchor_text": "here"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----cb96ea5bc0f0---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/convolutional-neural-net?source=post_page-----cb96ea5bc0f0---------------convolutional_neural_net-----------------", "anchor_text": "Convolutional Neural Net"}, {"url": "https://medium.com/tag/transfer-learning?source=post_page-----cb96ea5bc0f0---------------transfer_learning-----------------", "anchor_text": "Transfer Learning"}, {"url": "https://medium.com/tag/keras?source=post_page-----cb96ea5bc0f0---------------keras-----------------", "anchor_text": "Keras"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----cb96ea5bc0f0---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fcb96ea5bc0f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&user=Jacob+Tadesse&userId=b998f8b193b3&source=-----cb96ea5bc0f0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fcb96ea5bc0f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&user=Jacob+Tadesse&userId=b998f8b193b3&source=-----cb96ea5bc0f0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcb96ea5bc0f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fcb96ea5bc0f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----cb96ea5bc0f0---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----cb96ea5bc0f0--------------------------------", "anchor_text": ""}, {"url": "https://jacob-tadesse.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://jacob-tadesse.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Jacob Tadesse"}, {"url": "https://jacob-tadesse.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "28 Followers"}, {"url": "https://www.linkedin.com/in/jacobtadesse/", "anchor_text": "https://www.linkedin.com/in/jacobtadesse/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb998f8b193b3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&user=Jacob+Tadesse&userId=b998f8b193b3&source=post_page-b998f8b193b3--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F78fe1bbd0c39&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-convolutional-neural-network-to-recognize-shaved-vs-unshaved-faces-cb96ea5bc0f0&newsletterV3=b998f8b193b3&newsletterV3Id=78fe1bbd0c39&user=Jacob+Tadesse&userId=b998f8b193b3&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}