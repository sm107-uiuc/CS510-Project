{"url": "https://towardsdatascience.com/faster-video-processing-in-python-using-parallel-computing-25da1ad4a01", "time": 1683005571.960001, "path": "towardsdatascience.com/faster-video-processing-in-python-using-parallel-computing-25da1ad4a01/", "webpage": {"metadata": {"title": "Faster Video Processing in Python using Parallel Computing | by Sabina Pokhrel | Towards Data Science", "h1": "Faster Video Processing in Python using Parallel Computing", "description": "If you want to process a number of video files, it might take a from minutes to hours, depending on the size of the video, frame count, and frame dimensions. If you are processing images in batches\u2026"}, "outgoing_paragraph_urls": [{"url": "https://opencv.org", "anchor_text": "cv2:", "paragraph_index": 11}, {"url": "https://docs.python.org/3/library/subprocess.html", "anchor_text": "subprocess", "paragraph_index": 13}, {"url": "https://docs.python.org/2/library/multiprocessing.html", "anchor_text": "multiprocessing", "paragraph_index": 14}], "all_paragraphs": ["If you want to process a number of video files, it might take a from minutes to hours, depending on the size of the video, frame count, and frame dimensions.", "How can we speed up video processing?", "If you are processing images in batches, you can utilize the power of parallel processing and speed-up the task.", "In this post, we will look at how to use python for prallel processing of videos.", "We will read video from the disk, perform face detection, and write the video with output of face detection (bounding boxes) back to the disk.", "We will need the following packages:", "OpenCV: is a computer vision library that is commonly used. In this post, we will use OpenCV to read and write video files.", "To install OpenCV on your device, you can use either pip command or apt-get command.", "FFmpeg: is a cross-platform solution to record, convert and stream audio and video. In this post, we will use FFmpeg to join multiple video files.", "To install ffmpeg, use the following apt-get command:", "Let\u2019s import the required python libraries.", "cv2: OpenCV library to read from and write to video files.", "time: to get current time for calculating code execution time.", "subprocess: to start new processes, connect to their input/output/error pipes, and obtain their return codes.", "multiprocessing: to parallelize the execution of a function across multiple input values, distributing the input data across processes", "We will first define a method to process video using single process. This is the way how we would normally read a video file, process each frame and write the output frames back to the disk.", "Let\u2019s create another function that calls the video processor, takes note of start and end time, and calculates the time taken to execute the pipeline and the frames processed per second.", "Now, lets define another function for processing video that utilizes mutiprocessing.", "The was the above function works is that, the video processing job, that is normally done using one process, is now divided equally amongst the total number of processors available on the executing device.", "If there are 4 processes, and total number of frames in the video to be processed is 1000, then each process gets 250 frames to process, which are executed in parallel. This means that each process will create a separate output file, and so when the video processing is completed, there are 4 different output videos.", "To combine these output videos, we will use ffmpeg.", "Create a pipeline to run the multiprocessing of video and calculate time to execute and frames processed per second.", "I ran this experiment on Lenovo Yoga 920 with Ubuntu18.04 operating system. The number of logical processors available on this device are 8.", "From this experiment, we can observe 2x more frames being processed per second when using all cores to process the video.", "Found this post helpful? Leave your thoughts as comments below.", "Sabina Pokhrel works at Xailient, a computer-vision start-up that has built the world\u2019s fastest Edge-optimized object detector.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "AI Specialist | Machine Learning Engineer | Writer and former Editorial Associate at Towards Data Science"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F25da1ad4a01&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----25da1ad4a01--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----25da1ad4a01--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@sabinaa.pokhrel?source=post_page-----25da1ad4a01--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sabinaa.pokhrel?source=post_page-----25da1ad4a01--------------------------------", "anchor_text": "Sabina Pokhrel"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7b40806ab7c7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&user=Sabina+Pokhrel&userId=7b40806ab7c7&source=post_page-7b40806ab7c7----25da1ad4a01---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F25da1ad4a01&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F25da1ad4a01&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@ianjbattaglia?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Ian Battaglia"}, {"url": "https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://opencv.org", "anchor_text": "cv2:"}, {"url": "https://docs.python.org/3/library/subprocess.html", "anchor_text": "subprocess"}, {"url": "https://docs.python.org/2/library/multiprocessing.html", "anchor_text": "multiprocessing"}, {"url": "https://sdk.xailient.com", "anchor_text": "xailient"}, {"url": "https://www.xailient.com/post/multiprocessing-video-in-python", "anchor_text": "www.xailient.com/blog"}, {"url": "https://medium.com/tag/python?source=post_page-----25da1ad4a01---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----25da1ad4a01---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----25da1ad4a01---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----25da1ad4a01---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/facedetection?source=post_page-----25da1ad4a01---------------facedetection-----------------", "anchor_text": "Facedetection"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F25da1ad4a01&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&user=Sabina+Pokhrel&userId=7b40806ab7c7&source=-----25da1ad4a01---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F25da1ad4a01&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&user=Sabina+Pokhrel&userId=7b40806ab7c7&source=-----25da1ad4a01---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F25da1ad4a01&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----25da1ad4a01--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F25da1ad4a01&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----25da1ad4a01---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----25da1ad4a01--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----25da1ad4a01--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----25da1ad4a01--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----25da1ad4a01--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----25da1ad4a01--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----25da1ad4a01--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----25da1ad4a01--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----25da1ad4a01--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sabinaa.pokhrel?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sabinaa.pokhrel?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sabina Pokhrel"}, {"url": "https://medium.com/@sabinaa.pokhrel/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2.2K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7b40806ab7c7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&user=Sabina+Pokhrel&userId=7b40806ab7c7&source=post_page-7b40806ab7c7--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F4c2aaf61f107&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffaster-video-processing-in-python-using-parallel-computing-25da1ad4a01&newsletterV3=7b40806ab7c7&newsletterV3Id=4c2aaf61f107&user=Sabina+Pokhrel&userId=7b40806ab7c7&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}