{"url": "https://towardsdatascience.com/making-artistic-maps-with-python-9d37f5ea8af0", "time": 1683000695.417963, "path": "towardsdatascience.com/making-artistic-maps-with-python-9d37f5ea8af0/", "webpage": {"metadata": {"title": "Making Artistic Maps with Python. Rock Chalk Jayhawk! | by Frank Ceballos | Towards Data Science", "h1": "Making Artistic Maps with Python", "description": "Materials and methods: To grab our data we will use the OSMNX Python package. We will then unpack the data we retrieve and assign a color to each street based on its length. The data is then\u2026"}, "outgoing_paragraph_urls": [{"url": "http://download.geofabrik.de/", "anchor_text": "OpenStreetMap", "paragraph_index": 0}, {"url": "https://github.com/gboeing/osmnx", "anchor_text": "OSMNX", "paragraph_index": 1}, {"url": "https://medium.com/i-want-to-be-the-very-best/installing-keras-tensorflow-using-anaconda-for-machine-learning-44ab28ff39cb", "anchor_text": "article", "paragraph_index": 2}, {"url": "https://github.com/frank-ceballos/MakingArtisticMapsWithPython", "anchor_text": "GitHub", "paragraph_index": 2}, {"url": "https://github.com/gboeing/osmnx", "anchor_text": "OSMNX", "paragraph_index": 3}, {"url": "http://download.geofabrik.de/", "anchor_text": "OpenStreetMap", "paragraph_index": 3}, {"url": "https://github.com/gboeing/osmnx", "anchor_text": "here", "paragraph_index": 4}, {"url": "http://Software for complex networks", "anchor_text": "NetworkX", "paragraph_index": 9}, {"url": "http://geopandas.org/", "anchor_text": "GeoPandas", "paragraph_index": 10}, {"url": "https://pillow.readthedocs.io/en/stable/", "anchor_text": "PIL", "paragraph_index": 11}, {"url": "http://download.geofabrik.de/", "anchor_text": "site", "paragraph_index": 16}, {"url": "https://github.com/gboeing/osmnx-examples/tree/master/notebooks", "anchor_text": "example Jupyter notebooks", "paragraph_index": 19}, {"url": "https://www.wfonts.com/font/microsoft-sans-serif", "anchor_text": "ShareFonts.net", "paragraph_index": 43}, {"url": "https://github.com/frank-ceballos/MakingArtisticMapsWithPython", "anchor_text": "GitHub", "paragraph_index": 44}, {"url": "https://www.linkedin.com/in/frank-ceballos", "anchor_text": "LinkedIn", "paragraph_index": 45}], "all_paragraphs": ["Purpose: We will learn how to build maps with Python using data from OpenStreetMap.", "Materials and methods: To grab our data we will use the OSMNX Python package. We will then unpack the data we retrieve and assign a color to each street based on its length. The data is then visualized using OSMNX functionalities. Finally, we apply certain tweaks to make the map aesthetically pleasing.", "Note: In the case you\u2019re starting from scratch, I will advise you to follow this article and install all the necessary libraries. The entire contents of this article can be found on my GitHub. You\u2019re welcomed to fork it. Finally, to get the most of this article view it on a PC or Mac with a large monitor so that you can see the details of the map.", "The OSMNX Python package was written by Geoff Boeing and can be used to retrieve, model, analyze, and visualize street networks and other spatial data from OpenStreetMap.", "You can try to install the OSMNX package using Anaconda, however, you might end up grabbing an older version of OSMNX and all the code in this article won\u2019t work. I will advise you to visit Geoff Boeing Github here and download the latest version of this package to your machine. Once you do this, place the OSMNX folder in your working directory. Your working directory should look something like this:", "If you\u2019re smarter than me and are able to install OSMNX version 0.11 using conda or pip commands drop a comment. I would love to remove this step from the process.", "Let\u2019s start by importing all the libraries we need.", "If you get any ModuleNotFoundError let\u2019s take care of them using Anaconda to install the missing packages. I will only go over the less common packages, since it\u2019s likely you already have Pandas, Matplotlib, and other widely used packages installed.", "Open Anaconda Prompt and navigate to the desired conda environment.", "To install NetworkX which is use to create, manipulate, and study complex networks run:", "To install GeoPandas an open source package that extends the functionalities of Pandas data frames by allowing spatial operations on geometric types run:", "To install PIL a Python package used for image processing:", "That should do it. Before we move on let\u2019s run a sanity check so that we ensure we are working with the same version of the packages:", "The output of Script 2 is:", "You might get away using different versions of these packages but if you get a nasty error later the culprit might be the different package you\u2019re using.", "We will be making a map for the city of Lawrence, Kansas \u2014 a city dear to me.", "To make our map we need some spatial data. You can download OpenStreetMap data by visiting this site. However, the easiest way I figured out was by using the OSMNX package. Let me show you how simple this is:", "So with two lines of code, you can extract networks for any city. The network_type variable is used to describe the type of network you want to grab. In Script 3, we set the network_type variable to be \u201call\u201d. This means that we will be grabbing data for sidewalks, streets, highways, etc. To grab data related to streets that can be driven set the network_type variable in line 8 of Script 3 to \u201cdrive\u201d. If you wanted to grab data for sidewalks set the network_type to \u201cwalk\u201d.", "ASIDE: If you want to extract data for Dallas, Texas and Arlington Texas you would run the following script:", "Script 3a might take some time to run since the Dallas area is huge. If you want data for more cities just add them to the places list. I will advise you to visit the OSMNX example Jupyter notebooks to learn more about the functionalities of this package \u2014 I barely demonstrate its capabilities in this article.", "The ox.graph_from_place() method returns G which is a MultiDiGraph object from the NetworkX class. We can use ox.plot_graph() method to make map but let\u2019s first unpack it so that we can assign colors and widths to each line segment in the network.", "Scrip 4 unpacks G. What we are interested in is save in the list named data. Each element in data contains a dictionary that specifies the properties of a segment such as a unique id, the street name, max speed, the length of the segment, among other specifications. Here is an example of the first dictionary stored in data :", "You can see that the first segment is a residential two-way street named Vermont Street with a length of 81.54 meters. When the segment type is a sidewalk/trail the value of the highway key will be \u201cfootway\u201d. A foot way type of segment might not have a name.", "Before we make the map, we will assign each segment a color. To do so, we will iterate through the elements of data. For each element/segment, we will assign a color based on its length. We will then append this color to a list named roadColors which later on will be passed as a variable to the method that makes the map.", "Here is where you can get creative. For example, you can change the colors, add more if statements, change the conditions of each if statement, assign colors based on the segment name, or the speed limit.", "Finally, we will also create a list that will be used to define the line thickness of each segment. To do so, we will iterate through each element of data. An item in data is a dictionary that contains a \u201chighway\u201d key. We will use this to determine the type of segment we have. If the value of the \u201chighway\u201d key is \u201cfootway\u201d this means that the segment is used for walking so we will assign this element a line width of 1. Any segment that is not a \u201cfootway\u201d we will assign a line thickness of 2.5. Depending on the size of your map you will need to play with this values in order to create a good looking map.", "We are finally ready to make our map.", "It might seem like a lot of work needs to be done to make this map but let me explain what happens in Script 7:", "Line 4\u20136: Here we assign the latitude and longitude for the city of Lawrence, Kansas. This is where the map will be centered. You can center the map at any latitude and longitude you desire to.", "Line 8\u201312: Here we determine the bounds of our Map. You should use this line to control what to display on the map. For example, you can focus on a smaller region of the city such as the downtown area by assigning smaller offsets to the latitude and longitude defined in line 4\u20136.", "Line 14\u201318: Here we make the map using ox.plot_graph() method of the OSMNX package. I will advise you to read the OSMNX package documentation to see all the available inputs. I will only discuss the ones I used here.", "G : This is the output of the ox.graph_from_place() method that we executed in Script 3.", "bbox: This is a tuple that sets the bounds of the map. The following should be the syntax (north bound, south bound, east bound, west bound).", "fig_height and fig_width: The height and width of the figure in inches.", "bgcolor: Background color to use for the map. The default is white.", "save : Boolean. If True, save the figure as an image file to disk. We set this to false because are not ready to save the figure yet.", "edge_colors: The color of the line segments. We set this equal to roadColors. You can also just pass a string for the color you want.", "edge_linewidth: The thickness of each line segment. We set this equal to roadWidths. You can also just pass a float for the line thickness you want.", "Line 21\u201347: These lines make a custom legend. If you\u2019re familiar with Matplotlib this should not be new to you.", "This is what you should get if you make a map for the city of Lawrence, Kansas where the length of each segment is color coded:", "The results are really cool. The trick is to pick the right colors, line thickness, map boundaries, and background color to make a great looking map.", "We are basically done with the map. However, I would like to add a border and some text to map to make it look a bit more artistic. We will first define some helper functions I found in StackOverflow:", "We are now ready to add a border to the image. We will only add a bottom border image but you can choose to add a border on the top, left, right, and bottom if you wish to. Read the docstring of the helper functions for more details on how to do this.", "Finally, let\u2019s add some text to the image in the bottom border. To do this, we first need to download the font. Visit ShareFonts.net and search for \u201cPMINGLIU\u201d. Download the font and unzip its contents into your working directory.", "To make a map for your hometown, change line 5 in Script 3 and lines 5 and 6 in Script 7. You will have to tweak the boundaries of the map and the line thickness in order to create a good looking map for your city. If you don\u2019t like the colors I used you are welcomed to change them. I would love to see any of the maps you create. Here is the link to my GitHub so you can fork the entire contents of this article.", "You\u2019re welcome to connect with on LinkedIn. Until next time and code every day!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F9d37f5ea8af0&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://frank-ceballos.medium.com/?source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": ""}, {"url": "https://frank-ceballos.medium.com/?source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": "Frank Ceballos"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F176ad7e37afe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&user=Frank+Ceballos&userId=176ad7e37afe&source=post_page-176ad7e37afe----9d37f5ea8af0---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9d37f5ea8af0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9d37f5ea8af0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://download.geofabrik.de/", "anchor_text": "OpenStreetMap"}, {"url": "https://github.com/gboeing/osmnx", "anchor_text": "OSMNX"}, {"url": "https://medium.com/i-want-to-be-the-very-best/installing-keras-tensorflow-using-anaconda-for-machine-learning-44ab28ff39cb", "anchor_text": "article"}, {"url": "https://github.com/frank-ceballos/MakingArtisticMapsWithPython", "anchor_text": "GitHub"}, {"url": "https://github.com/gboeing/osmnx", "anchor_text": "OSMNX"}, {"url": "http://download.geofabrik.de/", "anchor_text": "OpenStreetMap"}, {"url": "https://github.com/gboeing/osmnx", "anchor_text": "here"}, {"url": "http://Software for complex networks", "anchor_text": "NetworkX"}, {"url": "http://geopandas.org/", "anchor_text": "GeoPandas"}, {"url": "https://pillow.readthedocs.io/en/stable/", "anchor_text": "PIL"}, {"url": "http://download.geofabrik.de/", "anchor_text": "site"}, {"url": "https://github.com/gboeing/osmnx-examples/tree/master/notebooks", "anchor_text": "example Jupyter notebooks"}, {"url": "https://www.wfonts.com/font/microsoft-sans-serif", "anchor_text": "ShareFonts.net"}, {"url": "https://github.com/frank-ceballos/MakingArtisticMapsWithPython", "anchor_text": "GitHub"}, {"url": "https://www.linkedin.com/in/frank-ceballos", "anchor_text": "LinkedIn"}, {"url": "https://medium.com/tag/data-science?source=post_page-----9d37f5ea8af0---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----9d37f5ea8af0---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/maps?source=post_page-----9d37f5ea8af0---------------maps-----------------", "anchor_text": "Maps"}, {"url": "https://medium.com/tag/visualization?source=post_page-----9d37f5ea8af0---------------visualization-----------------", "anchor_text": "Visualization"}, {"url": "https://medium.com/tag/analysis?source=post_page-----9d37f5ea8af0---------------analysis-----------------", "anchor_text": "Analysis"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9d37f5ea8af0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&user=Frank+Ceballos&userId=176ad7e37afe&source=-----9d37f5ea8af0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9d37f5ea8af0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&user=Frank+Ceballos&userId=176ad7e37afe&source=-----9d37f5ea8af0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9d37f5ea8af0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F9d37f5ea8af0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----9d37f5ea8af0---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----9d37f5ea8af0--------------------------------", "anchor_text": ""}, {"url": "https://frank-ceballos.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://frank-ceballos.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Frank Ceballos"}, {"url": "https://frank-ceballos.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "856 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F176ad7e37afe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&user=Frank+Ceballos&userId=176ad7e37afe&source=post_page-176ad7e37afe--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff3961b72dd61&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-artistic-maps-with-python-9d37f5ea8af0&newsletterV3=176ad7e37afe&newsletterV3Id=f3961b72dd61&user=Frank+Ceballos&userId=176ad7e37afe&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}