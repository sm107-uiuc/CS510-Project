{"url": "https://towardsdatascience.com/selecting-rows-with-loc-276d217c4ea5", "time": 1683008498.066303, "path": "towardsdatascience.com/selecting-rows-with-loc-276d217c4ea5/", "webpage": {"metadata": {"title": "Selecting Rows with .loc. A beginner\u2019s guide to selecting subsets\u2026 | by Ednalyn C. De Dios | Towards Data Science", "h1": "Selecting Rows with .loc", "description": "In this post, we'll be looking at the .loc property of Pandas to select rows based on some predefined conditions. A beginner's guide."}, "outgoing_paragraph_urls": [{"url": "https://data.sanantonio.gov/dataset/service-calls", "anchor_text": "website", "paragraph_index": 2}, {"url": "https://twitter.com/ecdedios", "anchor_text": "Twitter", "paragraph_index": 39}, {"url": "https://www.linkedin.com/in/ednalyn-de-dios/", "anchor_text": "LinkedIn", "paragraph_index": 39}, {"url": "https://medium.com/@ednalyn.dedios/membership", "anchor_text": "https://medium.com/@ednalyn.dedios/membership", "paragraph_index": 41}], "all_paragraphs": ["As data scientists, we spent most of our time wrangling knee-deep in manipulating data using Pandas. In this post, we\u2019ll be looking at the .loc property of Pandas to select rows based on some predefined conditions.", "Let\u2019s open up a Jupyter notebook, and let\u2019s get wrangling!", "We will be using the 311 Service Calls dataset\u00b9 from the City of San Antonio Open Data website to illustrate how the different .loc techniques work.", "Before we get started, let\u2019s do a little housekeeping first.", "Nothing fancy going on here. We\u2019re just importing the mandatory Pandas library and setting the display options so that when we inspect our dataframe, the columns and rows won\u2019t be truncated by Jupyter. We\u2019re setting it up so that every output within a single cell is displayed and not just the last one.", "In the code above, we\u2019re defining a function that will show us the number of missing or null values and their percentage.", "Let\u2019s load the data into a dataframe.", "Doing a quick df.head() we\u2019ll see the first five rows of the data:", "And df.info() will let us see the dtypes of the columns.", "Then, show_missing(df) shows us if there are any missing values in the data.", "Let\u2019s select rows where the 'Dept' column has null values and also filtering a dataframe where null values are excluded.", "First, we did a value count of the column \u2018Dept\u2019 column. The method .value_counts() returns a panda series listing all the values of the designated column and their frequency. By default, the method ignores NaN values and will not list it. However, if you include the parameter dropna=False it will include any NaN values in the result.", "Next, the line df_null = df.loc[df['Dept'].isnull()] tells the computer to select rows in df where the column 'Dept' is null. The resulting dataframe is assigned to df_null , and all its rows will NaN as values in the \u2018Dept\u2019 column.", "Similarly, the line df_notnull = df.loc[df['Dept'].notnull()] tells the computer to select rows in df where the column 'Dept' is not null. The resulting dataframe is assigned to df_notnull , and all its rows will not have any NaN as values in the \u2018Dept\u2019 column.", "The general syntax for these two techniques are:", "The 'Late (Yes/No)' column looks interesting. Let\u2019s take a look at it!", "Again, we did a quick value count on the 'Late (Yes/No)' column. Then, we filtered for the cases that were late with df_late = df.loc[df['Late (Yes/No)'] == 'YES']. Similarly, we did the opposite by changing 'YES' to 'NO' and assign it to a different dataframe df_notlate.", "The syntax is not much different from the previous example except the addition of == sign between the column and the value we want to compare. It basically asks, for every row, if the value on a particular column (left side) matches the value that we specified (right-side). If the match is True, it includes that row in the result. If the match is False, it ignores it.", "Here\u2019s the resulting dataframe for df_late:", "And here\u2019s the one for df_notlate:", "The general syntax for this technique is:", "We\u2019ve learned how to select rows based on \u2018yes\u2019 and \u2018no.\u2019 But what if the values are not binary? For example, let\u2019s look at the \u2018Category\u2019 column:", "One hundred ninety-two thousand one hundred ninety-seven rows or records do not have a category assigned, but instead of NaN, empty, or null value, we get 'No Category' as the category itself. What if we want to filter these out? Enter: the != operator.", "As usual, we did customary value counts on the 'Category' column to see what we\u2019re working with. Then, we created the df_categorized dataframe to include any records in the the df dataframe that don\u2019t have 'No Category' as their value in the 'Category' column.", "Here\u2019s the result of doing a value count on the 'Category' column of the df_categorized dataframe:", "As the screenshot above shows, the value counts retained everything but the \u2018No Category.\u2019", "The general syntax for this technique is:", "Let\u2019s consider the following columns, 'Late (Yes/No)' and 'CaseStatus':", "What if we wanted to know which open cases right now are already passed their SLA (service level agreement)? We would need to use multiple conditions to filter the cases or rows in a new dataframe. Enter the & operator.", "The syntax is similar to the previous ones except for the introduction of the & operator in between parenthesis. In the line df_late_open = df.loc[(df[\u2018Late (Yes/No)\u2019] == \u2018YES\u2019) & (df[\u2018CaseStatus\u2019] == \u2018Open\u2019)], there are two conditions:", "We want both of these to be true to match a row, so we included the operator & in between them. In plain speak, the & bitwise operator simply means AND. Other bitwise operators include pipe| sign for OR and the tilde ~ for NOT. I encourage you to experiment using these bitwise operators to get a good feel of what all they can do. Just remember to enclose each condition between parenthesis so that you don\u2019t confuse Python.", "The general syntax for this technique is:", "Let\u2019s look at the value count for the 'Council District' column:", "What if we wanted to focus on districts #2, #3, #4, and #5 because they\u2019re in south San Antonio, and they\u2019re known for getting poor service from the city? (I\u2019m so totally making this up by the way!) In this case, we could use the .isin() method like so:", "Remember to pass your choices inside the .isin() method as a list like ['choice1', 'choice2', 'choice3'] because otherwise, it will cause an error. For integers like in our example, it is not necessary to include quotation marks because quotation marks are for string values only.", "Here\u2019s the result of our new dataframe df_south:", "The general syntax for this technique is:", "And that\u2019s it! In this post, we loaded the 311 service calls data into a dataframe and created subsets of data using the .loc method.", "Thanks for reading! I hope you enjoyed today\u2019s post. Data wrangling, at least for me, is a fun exercise because this is the phase where I first get to know the data and it gives me a chance to hone my problem-solving skills when faced with really messy data. Happy wrangling folks!", "You can reach me on Twitter or LinkedIn.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Machine Learning Engineer / Data Scientist / Python Developer / Food Lover https://medium.com/@ednalyn.dedios/membership"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F276d217c4ea5&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----276d217c4ea5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----276d217c4ea5--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@ednalyn.dedios?source=post_page-----276d217c4ea5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ednalyn.dedios?source=post_page-----276d217c4ea5--------------------------------", "anchor_text": "Ednalyn C. De Dios"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F92e30e2c69cb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&user=Ednalyn+C.+De+Dios&userId=92e30e2c69cb&source=post_page-92e30e2c69cb----276d217c4ea5---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F276d217c4ea5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F276d217c4ea5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@chuttersnap?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "chuttersnap"}, {"url": "https://unsplash.com/s/photos/organization?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://data.sanantonio.gov/dataset/service-calls", "anchor_text": "website"}, {"url": "https://twitter.com/ecdedios", "anchor_text": "Twitter"}, {"url": "https://www.linkedin.com/in/ednalyn-de-dios/", "anchor_text": "LinkedIn"}, {"url": "https://data.sanantonio.gov/dataset/service-calls", "anchor_text": "https://data.sanantonio.gov/dataset/service-calls"}, {"url": "https://medium.com/tag/data-science?source=post_page-----276d217c4ea5---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----276d217c4ea5---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/pandas?source=post_page-----276d217c4ea5---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/data-wrangling?source=post_page-----276d217c4ea5---------------data_wrangling-----------------", "anchor_text": "Data Wrangling"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F276d217c4ea5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&user=Ednalyn+C.+De+Dios&userId=92e30e2c69cb&source=-----276d217c4ea5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F276d217c4ea5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&user=Ednalyn+C.+De+Dios&userId=92e30e2c69cb&source=-----276d217c4ea5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F276d217c4ea5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----276d217c4ea5--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F276d217c4ea5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----276d217c4ea5---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----276d217c4ea5--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----276d217c4ea5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----276d217c4ea5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----276d217c4ea5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----276d217c4ea5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----276d217c4ea5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----276d217c4ea5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----276d217c4ea5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ednalyn.dedios?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ednalyn.dedios?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ednalyn C. De Dios"}, {"url": "https://medium.com/@ednalyn.dedios/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "838 Followers"}, {"url": "https://medium.com/@ednalyn.dedios/membership", "anchor_text": "https://medium.com/@ednalyn.dedios/membership"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F92e30e2c69cb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&user=Ednalyn+C.+De+Dios&userId=92e30e2c69cb&source=post_page-92e30e2c69cb--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F508dc0490c9a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fselecting-rows-with-loc-276d217c4ea5&newsletterV3=92e30e2c69cb&newsletterV3Id=508dc0490c9a&user=Ednalyn+C.+De+Dios&userId=92e30e2c69cb&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}