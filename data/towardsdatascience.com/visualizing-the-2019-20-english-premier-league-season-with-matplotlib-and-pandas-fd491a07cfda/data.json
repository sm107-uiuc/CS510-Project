{"url": "https://towardsdatascience.com/visualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda", "time": 1683008554.4643462, "path": "towardsdatascience.com/visualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda/", "webpage": {"metadata": {"title": "Visualizing the 2019\u201320 English Premier League Season with Matplotlib and Pandas | by Naveen Venkatesan | Towards Data Science", "h1": "Visualizing the 2019\u201320 English Premier League Season with Matplotlib and Pandas", "description": "As we eagerly await the restart of the Premier League season on June 17th, we can look at the story of the season so far from this Kaggle dataset. As a Liverpool FC fan myself, I\u2019d like to hope this\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.kaggle.com/idoyo92/epl-stats-20192020", "anchor_text": "Kaggle dataset", "paragraph_index": 0}, {"url": "https://teamcolorcodes.com/soccer/premier-league-color-codes/", "anchor_text": "this website", "paragraph_index": 26}, {"url": "https://github.com/venkatesannaveen/medium-articles", "anchor_text": "Github repository", "paragraph_index": 40}, {"url": "https://twitter.com/naveenv_92", "anchor_text": "Twitter", "paragraph_index": 41}, {"url": "https://www.linkedin.com/in/naveenvenkatesan/", "anchor_text": "LinkedIn", "paragraph_index": 41}], "all_paragraphs": ["As we eagerly await the restart of the Premier League season on June 17th, we can look at the story of the season so far from this Kaggle dataset. As a Liverpool FC fan myself, I\u2019d like to hope this season concludes with us as champions for the first time in the Premier League era (over the course of a historic, record-breaking season).", "With a 25 point lead at the top of the table and needing only 6 points to secure a championship, Liverpool have dominated English football this past year. Let\u2019s see how they have performed relative to their projected points total. First, we will import the packages required for our visualization:", "We will use the matplotlib.patheffects package for our text annotations later on (to label individual data points).", "After downloading the dataset from Kaggle, we will have two data files:", "Our first visualization with be to look at the actual point values of each team in the table compared to their expected point total (based on predictions based on their performance). For this, we will use the team-level data found in epl2020.csv .", "Now, let\u2019s see what data we have access to in this file:", "That\u2019s a lot of columns! But for comparing actual points vs. expected point totals, we only need 2 of these columns: xpts and pts.", "Since the dataset we loaded contains the results of every match, team names will be repeated many times in the teamId column, so we collect all the unique team names into a list:", "Now, using our list of unique teams, we can calculate the actual and expected point total by summing the columns in our DataFrame that correspond to a particular team. We do this as follows:", "In the above code snippet, we have used Python dictionaries to create a lookup table for both the expected and actual point totals, so now we can directly use these data structures, along with our list of unique team names ( teams ) to plot our point totals.", "One last thing that we want to do is to numerically sort our data \u2014 in this case, we want to sort by the difference between the actual point total and the expected point total. What this will do is separate our dataset into teams that overachieved (i.e. more points than expected) and underachieved. We do this by creating a new dictionary called pts_difference and using those values to sort our team list.", "Now that we have our data, we can create our visualization. First, we will edit some overall plot parameters:", "Now we can start putting together our plot. First, we want to differentiate overachieving teams and underachieving teams. To do this, I will use a built-in colormap called PuOr and get the two colors at the extremes to correspond to overachieving (Orange) and underachieving (Purple).", "Now, we can plot our data. To do this, I will use a counter variable yval to correspond to the spacing between team entries in the vertical direction. This variable will get incremented through each iteration of the loop. During the loop, we first check which color to use based on the difference between the actual and expected point totals. Once we do this, we plot the actual point total as a filled circle, the expected point total as an unfilled circle, then connect the two with a dashed line.", "Because of the way we plotted the data, it is difficult to use the built-in matplotlib legend function. We will create one ourselves by using an inset. In this case, I am just plotting a filled and unfilled circle and labelling them. We specify the size of the legend by creating our axes object with fig.add_axes([x, y, width, height]) where (x, y) is the bottom left corner.", "Finally, we can update the ticks and labels to correspond to each of the teams:", "Liverpool seems to have significantly overachieved this season, purely based on predictions for expected points. In fact, if both Liverpool and Man City played to their predictions, Liverpool would actually be 2nd in the table! This is a perfect example of how, despite all the stats, results are finally determined on the football pitch.", "For these visualizations, we will use the player-specific data from the second datafile:", "As we did with the team data, let\u2019s take a look at all the columns available to us in the DataFrame:", "Just as we did for the teams, let\u2019s collect unique player names into a list. Player names are found in the column labelled full.", "In this set of visualizations, we are interested in looking at scoring and creativity of players, so we will tally up their goal and assists numbers. Since pure goal and assist numbers will obviously be biased against players who have not played as many matches, we want to normalize these statistics per 90 minutes. The only issue comes when a player has only played a small number of matches, bringing this average up \u2014 so to account for this effect, we will make sure that every qualified player in our list will have played at least 10 matches (900 minutes).", "Like our team data, we are populating two dictionaries, player_assists and player_goals with per 90 minute averages, with only players having played more than 900 minutes being counted.", "Now, we need to rank the players from high-to-low \u2014 dictionaries by nature do not contain any ordering information, so we can create a list of player names that are properly sorted. In this case, we want to collect the top 20 goalscorers and assisters.", "In the above code snippet, we are sorting the keys of the dictionary (player names), using their values, which we get by calling player_goals.get . We have to use reverse=True because we want the statistics to be ordered from highest to lowest. Finally, we are only getting the first 20 elements of the list as our top 20 players.", "Before we plot, I want to create a dictionary called updated_names that contains shorter form player names with the format of \u201cFirst Initial. Lastname\u201d, so \u201cSadio Man\u00e9\u201d becomes \u201cS. Man\u00e9\u201d. Additionally, the dataset did not handle accented characters, so I had to manually change names to account for this.", "Now we can plot our data!", "First, we can collect the team colors for each team to use as the color of the scatter point \u2014 I got the HEX codes of colors for each team from this website.", "Just to see these colors, we can make a plot of the color swatches for each team. We start by creating a figure and iterating through each of the unique teams, and creating a filled polygon. We then increment a counter variable, y_val which moves the next color swatch upwards. We are also sorting the team names so that they appear in alphabetical order:", "axes.fill_between(x, y1, y2) \u2014 x is the array of x-values to plot, y1 is the bottom y-value, and y2 is the top y-value.", "Now, we want to remove the x-ticks and change the y-ticks to be the team names in alphabetical order:", "So now that we have the correct team colors, we can go back and make our plot of goals and assists per 90 minutes. We will first plot the data for the top 20 goalscorers using the following code snippet:", "We find the team of each player in the top 20 and plot a point with the respective team color. We then place the player\u2019s name next to the point by offsetting the x-value by 0.01. Finally, for improved readability, the function text.set_path_effects() allows us to put a thick white outline around each of the names (foreground color is w or white and the linewidth is 5).", "We see that Sergio Ag\u00fcero is a prolific goalscorer, scoring more than once per 90, while his Man City teammate, Riyad Mahrez, while also being a top 20 goalscorer, also has significantly higher assists per 90 than the rest of the field.", "We can do the same exercise with the top 20 assisters per 90, which we do with the following code:", "We see that the three top assisters per 90 minutes are all Manchester City players \u2014 Riyad Mahrez, Kevin de Bruyne, and David Silva. It would appear from the previous two plots, that City has no lack of creativity on the pitch. We can actually try to quantify this by looking at the creativity metric from our dataset. Similarly to the previous two examples, we can collect the sum of all creativity from all the player data:", "Now, we can use the following code to plot the creativity values. We are using ax.barh(y, length) which is used to create a horizontal bar graph \u2014 the value of y is where is bar is vertically located and length is the length of the specific bar.", "As expected from the assist stats \u2014 Man City has far and away the highest creativity numbers. What this would seem to suggest (and can be corroborated by watching their matches) is that City\u2019s defense is the weak link and the reason they have so far underachieved on their points total.", "Let\u2019s look at goalkeeper performance \u2014 we will create dictionaries corresponding to saves and clean sheets, and sort by the number of saves per 90 minutes (again we are limiting to players that have played 900 minutes or more). We are taking the first 22 entries because by inspection, after this point, we started getting outfield players in our list:", "Our plot this time will have clean sheets on the x-axis, and saves per 90 minutes on the y-axis. We use the following code snippet, which is very similar to what we used for our goals and assists plots earlier:", "Well-balanced teams will tend to have their GKs in the bottom right quadrant of this plot \u2014 their defense is sound enough that their keepers do not have to face a ton of shots, so they don\u2019t have to make too many saves and can keep clean sheets. It is not a surprise that teams in the top three spots in the table have their goalkeepers here \u2014 Allison Becker (Liverpool), Ederson Moraes (Man City), and Kasper Schmeichel (Leicester). On the other extreme, Hugo Lloris (Tottenham) is being forced to make the most saves per 90 of any goalkeeper on the list, and this has translated to the fewest clean sheets. This suggests that he is not getting too much help from his defensive line and is being forced to bear the brunt of many opposing attacks.", "I hope this article was helpful is trying to visualize data to learn more about the story of the ongoing English Premier League season outside of just the rankings of the league table. All the analyses from this article can be found at this Github repository.", "Thank you for reading! I appreciate any feedback, and you can find me on Twitter and connect with me on LinkedIn for more updates and articles.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist \u2022 Materials Scientist \u2022 Musician \u2022 Golfer"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ffd491a07cfda&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----fd491a07cfda--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fd491a07cfda--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://naveenvenkatesan.medium.com/?source=post_page-----fd491a07cfda--------------------------------", "anchor_text": ""}, {"url": "https://naveenvenkatesan.medium.com/?source=post_page-----fd491a07cfda--------------------------------", "anchor_text": "Naveen Venkatesan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7779ee5bf58d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&user=Naveen+Venkatesan&userId=7779ee5bf58d&source=post_page-7779ee5bf58d----fd491a07cfda---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffd491a07cfda&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffd491a07cfda&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@kakudmi?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "KAKUDMI"}, {"url": "https://unsplash.com/s/photos/soccer?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://www.kaggle.com/idoyo92/epl-stats-20192020", "anchor_text": "Kaggle dataset"}, {"url": "https://teamcolorcodes.com/soccer/premier-league-color-codes/", "anchor_text": "this website"}, {"url": "https://github.com/venkatesannaveen/medium-articles", "anchor_text": "Github repository"}, {"url": "https://twitter.com/naveenv_92", "anchor_text": "Twitter"}, {"url": "https://www.linkedin.com/in/naveenvenkatesan/", "anchor_text": "LinkedIn"}, {"url": "https://medium.com/tag/python?source=post_page-----fd491a07cfda---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----fd491a07cfda---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----fd491a07cfda---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/pandas?source=post_page-----fd491a07cfda---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/football?source=post_page-----fd491a07cfda---------------football-----------------", "anchor_text": "Football"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffd491a07cfda&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&user=Naveen+Venkatesan&userId=7779ee5bf58d&source=-----fd491a07cfda---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffd491a07cfda&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&user=Naveen+Venkatesan&userId=7779ee5bf58d&source=-----fd491a07cfda---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffd491a07cfda&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fd491a07cfda--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ffd491a07cfda&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----fd491a07cfda---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----fd491a07cfda--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----fd491a07cfda--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----fd491a07cfda--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----fd491a07cfda--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----fd491a07cfda--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----fd491a07cfda--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----fd491a07cfda--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----fd491a07cfda--------------------------------", "anchor_text": ""}, {"url": "https://naveenvenkatesan.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://naveenvenkatesan.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Naveen Venkatesan"}, {"url": "https://naveenvenkatesan.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "487 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7779ee5bf58d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&user=Naveen+Venkatesan&userId=7779ee5bf58d&source=post_page-7779ee5bf58d--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe736f4929535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-the-2019-20-english-premier-league-season-with-matplotlib-and-pandas-fd491a07cfda&newsletterV3=7779ee5bf58d&newsletterV3Id=e736f4929535&user=Naveen+Venkatesan&userId=7779ee5bf58d&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}