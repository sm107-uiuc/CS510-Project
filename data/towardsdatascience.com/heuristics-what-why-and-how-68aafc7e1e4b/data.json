{"url": "https://towardsdatascience.com/heuristics-what-why-and-how-68aafc7e1e4b", "time": 1683005650.404644, "path": "towardsdatascience.com/heuristics-what-why-and-how-68aafc7e1e4b/", "webpage": {"metadata": {"title": "Heuristics What Why and How?. Understanding and application of\u2026 | by Anuradha Wickramarachchi | Towards Data Science", "h1": "Heuristics What Why and How?", "description": "A heuristic is an approximation that we use, which is not guaranteed to be optimal in achieving a goal. In this article, I will explain in-depth with an easy to understand example as to how we can\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm", "anchor_text": "Dijkstra\u2019s", "paragraph_index": 3}, {"url": "https://en.wikipedia.org/wiki/A*_search_algorithm", "anchor_text": "wiki", "paragraph_index": 8}, {"url": "https://towardsdatascience.com/8-common-data-structures-every-programmer-must-know-171acf6a1a42", "anchor_text": "Read this article to read more", "paragraph_index": 9}, {"url": "https://gist.github.com/anuradhawick/a4bde038e039f08fed6195d94704f480", "anchor_text": "here", "paragraph_index": 21}], "all_paragraphs": ["A heuristic is an approximation that we use, which is not guaranteed to be optimal in achieving a goal. In this article, I will explain in-depth with an easy to understand example as to how we can use heuristics for algorithm development. So I will use A-Star (A*) algorithm to explain the use and implementation of heuristic with a complete example which involves the shortest path.", "Deterministic approaches are guaranteed to provide the optimal solution. For example, Dijkstra\u2019s algorithm can be considered as a deterministic algorithm to obtain the shortest path between any two points in a graph with positive edge weights.", "The algorithm in its most basic form is as follows.", "We can see that at the start of the algorithm no knowledge about the target node is considered. Hence, we essentially perform an exhaustive search of shortest paths to every other traversable vertex of the graph. Imagine that the graph is the road network in your country. Would this scale to that level? The best-case min-priority queue implementation of Dijkstra\u2019s algorithm has a time complexity of O(|V|+|E|log|V|).", "Instead of exhaustively searching for all the neighbours of the source vertex, we might as well pick the neighbours, that MIGHT give us a shorter path to the target vertex in a graph. The word MIGHT is important as heuristics often end up in suboptimal outputs.", "How can we guess if a particular node might lead us to a shorter path?", "This is where the heuristic comes. For example, in the case of the road network, we can assume that closer the junction we pick, faster it might get to the target city. For this, we can use the readily available GPS information to compute a not so elite, but a rough distance from the air between points. Although, it might not be correct, given you might see bends and roundabouts, we can be sure that the general direction of movement must be towards the target city.", "Comparing the above guess, you might note that had we chosen Dijkstra\u2019s algorithm we would also be computing distances to target nodes that are nowhere in the direction of our intended target. The solid implementation of the most famous shortest path algorithm with a heuristic is called the A* or the A-Star algorithm.", "The pseudo-code would look like below. Read more in the wiki.", "One catch in the above code is that you have to scan an array to obtain the closes neighbour to the target node. However, if you would store the neighbours in a min-heap using the distance to the target node as key, you can do this in O(1) time. It's pretty neat how we can improve algorithms with the knowledge of data structures (Read this article to read more). Let us have a look at an implementation of this algorithm in python.", "I will be using the following imports in my algorithm implementation.", "I will create a wrapper class to contain vertices (nodes) of the graph so that I can use them right away in heapq implementation of python. I override the __lt__ function of the wrapper so that heapq will use its val attribute to heappush and heappop elements. This val corresponds to the distance to target node.", "I use the following code to trace the shortest path once the algorithm runs and we have parents of the vertices we traverse.", "Since this is for learning purposes, I thought it would be very interesting to see how the algorithm runs in real-time. Hence, let\u2019s model our problem as below. Imagine we have a 2D terrain and we want to get to top right corner from the bottom left corner. We have an obstacle on the way as shown in black.", "I populate this terrain using the following code. It is a simple matrix of size 50x50. The image is a matrix with 3 channels for RGB. So the obstacles are simply indices with [0, 0, 0].", "Since graph operations are best performed on a graph like data structure with graph functionalities, let's migrate our terrain to a graph. Each pixel will be a node/vertex in our graph. From each node/vertex we can traverse in all 8 directions similar to the queen on a chessboard. In our case edges exist, unless the available reversible neighbour is black.", "Now that I have prepared my graph, I want to implement and run A-Star. At the same time, when the algorithm searches neighbours, I want to snapshot the initial 2D terrain for visualization later. The complete python code for this is as follows. Here I use the Euclidean distance as the distance heuristic, which is the guess from any node to the target.", "We can run the above algorithm using the following runner snippet. Note that I use a copy of the matrix since within the algorithm we update the initial mat object.", "The beauty is more visible when we see how things happen in animation. So I will combine all my created images to form a gorgeous GIF. I use the following code to create the GIF out of my snapshot images.", "Having done this we will have the following animation.", "We can clearly see that the traversal happens by a very narrow search space. This makes the search much faster and we do not need to do an exhaustive search over all the nodes.", "In much larger graphs, techniques such as node labelling and indexing are done, so that the graph will not be required to load fully to the runtime memory. I hope to write more articles in line with this topic in future. For now, I hope you\u2019ve enjoyed reading this article. You can see the complete notebook here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F68aafc7e1e4b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://anuradhawick.medium.com/?source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": ""}, {"url": "https://anuradhawick.medium.com/?source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": "Anuradha Wickramarachchi"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fddf633dcad17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=post_page-ddf633dcad17----68aafc7e1e4b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F68aafc7e1e4b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F68aafc7e1e4b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm", "anchor_text": "Dijkstra\u2019s"}, {"url": "https://en.wikipedia.org/wiki/A*_search_algorithm", "anchor_text": "wiki"}, {"url": "https://towardsdatascience.com/8-common-data-structures-every-programmer-must-know-171acf6a1a42", "anchor_text": "Read this article to read more"}, {"url": "https://gist.github.com/anuradhawick/a4bde038e039f08fed6195d94704f480", "anchor_text": "here"}, {"url": "https://medium.com/tag/algorithms?source=post_page-----68aafc7e1e4b---------------algorithms-----------------", "anchor_text": "Algorithms"}, {"url": "https://medium.com/tag/python?source=post_page-----68aafc7e1e4b---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----68aafc7e1e4b---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----68aafc7e1e4b---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----68aafc7e1e4b---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F68aafc7e1e4b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=-----68aafc7e1e4b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F68aafc7e1e4b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=-----68aafc7e1e4b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F68aafc7e1e4b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F68aafc7e1e4b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----68aafc7e1e4b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----68aafc7e1e4b--------------------------------", "anchor_text": ""}, {"url": "https://anuradhawick.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://anuradhawick.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Anuradha Wickramarachchi"}, {"url": "https://anuradhawick.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2K Followers"}, {"url": "https://anuradhawick.com/", "anchor_text": "https://anuradhawick.com/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fddf633dcad17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=post_page-ddf633dcad17--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F9f8ac7ab9f5b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fheuristics-what-why-and-how-68aafc7e1e4b&newsletterV3=ddf633dcad17&newsletterV3Id=9f8ac7ab9f5b&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}