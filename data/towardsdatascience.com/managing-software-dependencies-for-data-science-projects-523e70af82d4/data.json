{"url": "https://towardsdatascience.com/managing-software-dependencies-for-data-science-projects-523e70af82d4", "time": 1683014824.376728, "path": "towardsdatascience.com/managing-software-dependencies-for-data-science-projects-523e70af82d4/", "webpage": {"metadata": {"title": "Managing software dependencies for Data Science projects | by Eduardo Blancas | Towards Data Science", "h1": "Managing software dependencies for Data Science projects", "description": "Virtual environments are a must when developing software projects. They allow you to create self-contained, isolated Python installations that prevent your projects from clashing with each other and\u2026"}, "outgoing_paragraph_urls": [{"url": "https://ploomber.io/posts/python-envs/", "anchor_text": "see this other post", "paragraph_index": 2}, {"url": "https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/_build_utils/min_dependencies.py", "anchor_text": "scikit-learn", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Boolean_satisfiability_problem", "anchor_text": "computationally expensive", "paragraph_index": 5}, {"url": "https://docs.conda.io/en/latest/miniconda.html", "anchor_text": "miniconda", "paragraph_index": 11}, {"url": "https://ploomber.readthedocs.io/en/stable/user-guide/r-support.html#configuring-r-environment", "anchor_text": "R", "paragraph_index": 11}, {"url": "https://nox.thea.codes", "anchor_text": "nox", "paragraph_index": 24}, {"url": "https://pytest.org", "anchor_text": "pytest", "paragraph_index": 24}, {"url": "https://github.com/theacodes/nox/issues/260", "anchor_text": "click here", "paragraph_index": 26}, {"url": "https://ploomber.io/posts/packaging/", "anchor_text": "click here", "paragraph_index": 29}, {"url": "https://github.com/conda-incubator/conda-lock", "anchor_text": "conda-lock", "paragraph_index": 40}, {"url": "https://ploomber.io/", "anchor_text": "https://ploomber.io/", "paragraph_index": 43}], "all_paragraphs": ["Virtual environments are a must when developing software projects. They allow you to create self-contained, isolated Python installations that prevent your projects from clashing with each other and let other people reproduce your setup.", "However, using virtual environments is just the first step towards developing reproducible data projects. This post discusses another important subject: dependency management, which relates to properly documenting virtual environments to ease reproducibility and make them reliable when deployed to production.", "For a more in-depth description of Python environments, see this other post.", "tl; dr; Package managers use heuristics to install package versions that are compatible with each other. A large set of dependencies and version constraints might lead to failures when resolving the environment.", "When you install a package, your package manager (pip, conda) has to install dependencies for the requested package and dependencies of those dependencies, until all requirements are satisfied.", "Packages usually have version constraints. For example, at this time of writing scikit-learn requires numpy 1.13.3 or higher. When packages share dependencies, the package manager has to find versions that satisfy all constraints (this process is known as dependency resolution), doing so is computationally expensive, current package managers use heuristics to find a solution in a reasonable amount of time.", "With large sets of dependencies, it can happen that the solver is unable to find a solution. Some package managers will throw an error, but others might just print a warning message. To avoid these issues, it is important to be conscious about project dependencies.", "tl; dr; Group your dependencies in development (i.e. packages needed to train a model) and production (i.e. packages needed to make predictions).", "When working on a Data Science project, there might be packages that you only need for development, but that won\u2019t be required in the production environment. For example, if you are developing a model, you may generate some evaluation charts in a jupyter notebook using matplotlib, but for serving predictions through an API you don\u2019t need any of those.", "This gives you a chance to simplify dependencies in the production environment. The next section discusses how to do this.", "tl; dr; Keep separate files for dev/prod dependencies. Manually add/remove packages and keep them as flexible as possible (by not pinning specific versions), to ease dependency resolution and to test your project against the latest compatible version available.", "pip and conda are the most widely used package managers for Python; both can setup dependencies from a text file. My recommendation is to use conda (through miniconda), because it can handle more dependencies than pip. You can even install non-Python packages such as R. If there is a package that you cannot install using conda install, you can still use pip install inside the conda environment.", "In conda, you can document your dependencies in a YAML file like this:", "While you can auto-generate these files, it is best to maintain them manually. A good practice is to add a short comment to let other people know (or even your future self!) why you need a package. During development, we might experiment with some package but discard it shortly thereafter, the best way to proceed is to remove it from the environment file but if you forget to do so, the comment will be helpful in the future when deciding which dependencies to drop.", "Keep your dependencies flexible and only pin specific versions when you have to, the more version constraints you add to your environment, the higher the chance of running into situations where the solver is unable to satisfy all constraints.", "tl;dr; Always look for errors when setting up environments, sometimes you might have to pin versions to resolve issues.", "Once you specify you create the environment file, you can create the conda virtual environment with the following command:", "If you have a reasonable set of dependencies, your environment should install just fine, but there are a few factors that might give errors/warnings. Always check the command output for issues. Depending on the solver configuration, the command could just refuse to create the environment or print a warning message.", "I mentioned that solvers attempt to find a solution that satisfies all package requirements, but that\u2019s under the assumption that package maintainers have their requirements up-to-date. Say package X depends on package Y, but X didn\u2019t set any version constraints for Y. A new version of Y is released that breaks X. Next time you install X, you will end up with a broken installation if the solver installs the incompatible version of Y (from the solvers perspective, this is not a problem because X did not set any constraints for Y). These cases are laborious to debug because you have to find a working version by trial and error, then pin the right one in the dependencies file.", "The more time it passes without testing your environment setup from scratch, the higher the risk to break your environment setup. For this reason, it is important to continuously test your dependencies files.", "tl;dr; Continuously run your project\u2019s tests in a recently created environment to detect breaks due to package updates.", "Since your development packages are not pinned to a specific version, the package manager will attempt to install the latest compatible version, this is good from a development perspective, because packages get improvements: new features, bug fixes and/or security patches and it\u2019s a good idea to keep your dependencies updated; but they might also introduce breaking changes. To detect them, make sure you run your project\u2019s tests in a fresh, recently installed environment. The process is as follows:", "Preferably, automate this process to run every time you modify your source code (this is called Continuous Integration). If that\u2019s not an option, manually run the steps described above on a regular basis.", "tl; dr; Use nox and pytest to run your tests inside a fresh environment, package your project so you can easily import project\u2019s modules in your tests", "The best tools I\u2019ve found for automating environment setup and testing execution are nox and pytest.", "Nox is a Python package that can automate conda environment creation, then run your tests inside that environment:", "Note: At this time of writing, nox (version 2020.8.22) does not officially support installing from environment.yml files but this workaround does the trick, click here for more info.", "Once your environment is prepared, include the command to start the testing suite. I recommend you to use pytest, here\u2019s how a testing file looks like:", "To execute the tests from the file above, you just have to run pytest, inside nox, this translates to adding: session.run('pytest')", "So far we\u2019ve covered steps 1, 2 and 4. But skipped 3 (configure project). As you can see in the previous code snippet, to test your code, you have to make it importable, the cleanest way to do so is by packaging your project (to see our post on project packaging, click here).", "Once you packaged your project you can set it up with pip install path/to/project.", "tl;dr; Develop separate test suites where you test your development pipeline in an environment with development dependencies and serving API with the production dependencies.", "You can use nox to test your development and production environments separately. Here\u2019s some sample code:", "To run your tests, simply execute nox in the terminal.", "tl; dr; Provide auto-generated lock files that contain the list of dev/prod dependencies with pinned versions, to avoid breaking your project in the future due to API changes.", "Without pinning specific versions, there is no way to know the exact set of versions that the solver will install, this is fine for development purposes since it gives you a chance to try out new versions and check if you can upgrade them, but you don\u2019t want this uncertainty in a production environment.", "The way to approach this is to provide another file that lists all the dependencies but includes specific versions, this is called a lock file. This way, your environment will always resolve to the same set of versions.", "You can generate a file with pinned dependencies with this command:", "The output file looks like this:", "Lock files are very important to guarantee deterministic environments in production, make sure you generate them from environments that you already tested. For example, you could add the conda env export command at the end of your testing session:", "Apart from pinned versions, lock files usually provide other features such as hashing each package and comparing it with the downloaded version to prevent installation of tampered software. At this time of writing, there is a new project called conda-lock that aims to improve support for conda lock files.", "Using virtual environments for your projects is a great first step towards developing more robust pipelines but that\u2019s not the end of it. Including dependency installation as part of your testing procedure, keeping dependencies small, separating production from development dependencies and providing lock files are necessary steps to ensure your project has a robust setup.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data scientist turned startup founder. M.S. in Data Science from Columbia University. Currently building Ploomber: https://ploomber.io/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F523e70af82d4&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----523e70af82d4--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----523e70af82d4--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://edublancas.medium.com/?source=post_page-----523e70af82d4--------------------------------", "anchor_text": ""}, {"url": "https://edublancas.medium.com/?source=post_page-----523e70af82d4--------------------------------", "anchor_text": "Eduardo Blancas"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1ed5e037fe0e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&user=Eduardo+Blancas&userId=1ed5e037fe0e&source=post_page-1ed5e037fe0e----523e70af82d4---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F523e70af82d4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F523e70af82d4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@emilep?utm_source=medium&utm_medium=referral", "anchor_text": "Emile Perron"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://ploomber.io/posts/python-envs/", "anchor_text": "see this other post"}, {"url": "https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/_build_utils/min_dependencies.py", "anchor_text": "scikit-learn"}, {"url": "https://en.wikipedia.org/wiki/Boolean_satisfiability_problem", "anchor_text": "computationally expensive"}, {"url": "https://docs.conda.io/en/latest/miniconda.html", "anchor_text": "miniconda"}, {"url": "https://ploomber.readthedocs.io/en/stable/user-guide/r-support.html#configuring-r-environment", "anchor_text": "R"}, {"url": "https://nox.thea.codes", "anchor_text": "nox"}, {"url": "https://pytest.org", "anchor_text": "pytest"}, {"url": "https://github.com/theacodes/nox/issues/260", "anchor_text": "click here"}, {"url": "https://ploomber.io/posts/packaging/", "anchor_text": "click here"}, {"url": "https://github.com/conda-incubator/conda-lock", "anchor_text": "conda-lock"}, {"url": "https://ploomber.io/posts/dependencies/", "anchor_text": "http://ploomber.io"}, {"url": "https://medium.com/tag/data-science?source=post_page-----523e70af82d4---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----523e70af82d4---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/python?source=post_page-----523e70af82d4---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F523e70af82d4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&user=Eduardo+Blancas&userId=1ed5e037fe0e&source=-----523e70af82d4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F523e70af82d4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&user=Eduardo+Blancas&userId=1ed5e037fe0e&source=-----523e70af82d4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F523e70af82d4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----523e70af82d4--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F523e70af82d4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----523e70af82d4---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----523e70af82d4--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----523e70af82d4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----523e70af82d4--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----523e70af82d4--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----523e70af82d4--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----523e70af82d4--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----523e70af82d4--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----523e70af82d4--------------------------------", "anchor_text": ""}, {"url": "https://edublancas.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://edublancas.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Eduardo Blancas"}, {"url": "https://edublancas.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "617 Followers"}, {"url": "https://ploomber.io/", "anchor_text": "https://ploomber.io/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1ed5e037fe0e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&user=Eduardo+Blancas&userId=1ed5e037fe0e&source=post_page-1ed5e037fe0e--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe100b6d296f3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmanaging-software-dependencies-for-data-science-projects-523e70af82d4&newsletterV3=1ed5e037fe0e&newsletterV3Id=e100b6d296f3&user=Eduardo+Blancas&userId=1ed5e037fe0e&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}