{"url": "https://towardsdatascience.com/why-you-will-fall-in-love-with-python-lists-29d8882db9c4", "time": 1683007761.778605, "path": "towardsdatascience.com/why-you-will-fall-in-love-with-python-lists-29d8882db9c4/", "webpage": {"metadata": {"title": "Why You Will Fall in Love With Python Lists | by Martin Andersson Aaberge | Towards Data Science", "h1": "Why You Will Fall in Love With Python Lists", "description": "When you start working on your project you need to choose how to solve your problems. You will use lists often in Python so you are probably used to them already. Lists are fantastic to work with. In\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["When you start working on your project you need to choose how to solve your problems. You will use lists often in Python so you are probably used to them already. Lists are fantastic to work with. In this article, I want to show you a wide range of use cases for lists.", "The syntax for a list is []. If you want to create a list there are several ways you can do this. The first one is to manually assign values to it:", "The comma separates the elements in your list.", "You can use the method list() to create a list based on other values or directly.", "Lists can hold a variety of types. This is a valid list:", "You can check what types you have in your list like this:", "Some times you might need to create lists based on input, math, or other random values. You might come across these:", "There are several ways to access elements in a list. Depending on what you are trying to do, the elements should be there for you if you look for them.", "If you wish to loop through the elements in a python list, you use a for-loop.", "If you only need the value you can simply loop through them like this:", "Sometimes you might need the index as well. If you come from another language, it might be natural for you to use range(len()) like this:", "Although it prints what you are after, it is ugly and not a pythonic way of accessing elements. If you need the index and not only the value, use enumerate()", "If you know the index of your element, you can simply ask the program to give you the value of that index.", "You can check if an element is in your list by asking for it with an if-statement:", "Try changing num to 1 and see if it can find it in the list.", "If you wonder where b is in your list you could ask using .index() and it will return the index where it can find b.", ".index() returns the index of the first occurrence of b and ends there. You can see that we have more occurrences of b in the list. They are located at index 4,6 and 7.", "There are several ways of accessing all the indexes of b. If you are familiar with list comprehension, you can do this:", "Like with strings, you can use slicing with lists. The syntax is:", "If you have a string: \u2018Hello World\u2019 you can access parts of the string with slicing. Let\u2019s have a look at an example.", "On the first print line, we print from the start (start is not set to anything, so it starts from the start) and we stop at index 5. What goes on behind the scenes is this:", "You can also start at a negative index. This means that you go to the end of the string and start counting from there.", "This is also why you can reverse a string like this:", "It looks like a hack, but you are telling the code to start from the start, end at the end, but step backward with one iteration per step.", "Let\u2019s convert our sentence to a list and work on it:", "If we want to grab the elements of Hell, we can use the same slicing as with strings.", "There are several ways to add elements to a list. One way is to use the method .append()", "When you use append you will add your element to the end of the list. Note, that if you try to append one list to another, you will simply add that whole list as a new element. If you want to add a list to a list, you would need to use extend. This code would simply add several lists as elements.", "Extend is another method for adding elements to your list. Instead of appending a list to another one, we can extend it and get this result:", "You might notice that it looks similar to += and it does. += can solve similar problems, but you have to consider the scope as well. Try this one and fix the error:", "You can change an existing value in a list by pointing to its index and replace the value like this:", "You can even edit a range using slicing", "It might be tempting to try and add a value by pointing to the next index after the end of the list like this:", "That does not work because you are trying to first access an index that is outside of the list and then add the value to it. It doesn\u2019t exist yet. You would normally use append to add the d if it is at the end of your list, but with.insert() you can also choose where you want to add an element. The .insert() syntax is:", "Here we use it to add b in between a and c", "There are several ways to remove elements from a list. They have different functionality and you want to think about what your project needs to make a call on how you want to remove elements.", "As the method name implies, you are removing an element from the list.", "Like with index(), remove only removes the first occurrence of the element you pass as an argument. In our case b was removed, but only the first b.", "What if you want to remove all occurrences of b? Could you loop through it like this?", "No, and the reason for this is that remove makes the list shorter. If you break it down you can see why. This code will make it easier for you:", "If we take a closer look at this part:", "We can see that when the program is working on index 0, it finds a b. It does as you told it to and removes that element. The new list is now missing the first b.", "The next index to look at is index 1. Remember, we are still going through our loop. We finished index 0, now we skip to index 1. The problem is that index 1 is now a and index 0 is 1. There is no link between the new and the old list so we are actually missing an element \u2014 1. Nothing ever happens to 1", "This is what happens further down the line as well and we are left with a non-functioning program where we are left with several occurrences of b.", "One solution would be to use list comprehension for this operation as well", "Note that the [:] is modifying the list in place instead of creating a new variable. If you do this:", "my_list now has a new ID instead of being modified.", "You can check this with print(id(my_list))", "alternatively, you just create a new list", "append() and extend() are other examples of methods that work in place and do not alter the ID of your list.", ".pop() removes an element from a list. There is a small difference between remove and pop which is that pop returns the value you remove. You can also tell pop what index you want to remove. The default is at the end of the list.", "Since pop returns the value, you can either store it in a variable or you can use it directly.", "If you want to clear the list completely, you can use .clear(). It does exactly what you would expect.", "You can, of course, do more than adding and removing elements from a list. Let\u2019s have a look.", "Unlike len(my_list) which returns the length of the list, .count() can let you know how many times an element occurs in the list.", "The names of the methods are very descriptive and it\u2019s obvious what this does as well. If you use .sort() it will sort the list in place. Since it works in place and modifies the list you can not do this:", "But if you do the sort and then print the list again you will print the sorted list:", "You might already know about the function sorted(). If you try this on the list above you could do something like this:", "We have already talked about a way to reverse a list. Like sort, reverse will edit the list in place.", "You can also use python\u2019s built in reversed() on lists.", "Since reversed() returns an iterator we create a list with that iterator to get a nice reversed list printed.", "We have already reversed lists with slicing.", "You can unpack lists by assigning variables to the elements. Say you need variables for the first 2 elements in the list and leave the rest. Then you need the last element assigned as well.", "To join list elements into a string you can use the .join() method. It works on string type elements.", "before .join() you can see that we created a space. This is the separator. You can have other separators if you wish.", "If you wish to zip together elements of two lists, you can use the zip method. With two lists you can create tuple pairs of the corresponding indexes.", "Like with reversed, zip returns an iterator. If we create a list of the iterator we get the tuple pairs. If the lists aren\u2019t equal in length, it will only respect the first list you pass.", "Python lists are awesome! You have to look at all projects individually when you choose the right usage of lists. Maybe your project would benefit from dictionaries instead. Maybe you are looking for tuples if you want immutable objects instead.", "Lists are super versatile so if you end up using them you have a big arsenal of use cases.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "CG supervisor with 18 years of experience in the Animation- and VFX industry. Focus: UX, Writing, Programming, Productivity. Contact: martinandersson@me.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F29d8882db9c4&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----29d8882db9c4--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----29d8882db9c4--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://martinaaberge.medium.com/?source=post_page-----29d8882db9c4--------------------------------", "anchor_text": ""}, {"url": "https://martinaaberge.medium.com/?source=post_page-----29d8882db9c4--------------------------------", "anchor_text": "Martin Andersson Aaberge"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F864fda338dba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&user=Martin+Andersson+Aaberge&userId=864fda338dba&source=post_page-864fda338dba----29d8882db9c4---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F29d8882db9c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F29d8882db9c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.pexels.com/@element5?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Element5 Digital"}, {"url": "https://www.pexels.com/photo/file-cabinets-1370294/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Pexels"}, {"url": "https://www.pexels.com/@goumbik?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Lukas"}, {"url": "https://www.pexels.com/photo/variety-of-sliced-fruits-1414131/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Pexels"}, {"url": "https://www.pexels.com/@cottonbro?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "cottonbro"}, {"url": "https://www.pexels.com/photo/child-playing-wooden-blocks-3662635/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Pexels"}, {"url": "https://www.pexels.com/@cottonbro?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "cottonbro"}, {"url": "https://www.pexels.com/photo/green-and-white-labeled-box-4107100/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Pexels"}, {"url": "https://medium.com/tag/technology?source=post_page-----29d8882db9c4---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/tag/programming?source=post_page-----29d8882db9c4---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----29d8882db9c4---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----29d8882db9c4---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/data-science?source=post_page-----29d8882db9c4---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F29d8882db9c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&user=Martin+Andersson+Aaberge&userId=864fda338dba&source=-----29d8882db9c4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F29d8882db9c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&user=Martin+Andersson+Aaberge&userId=864fda338dba&source=-----29d8882db9c4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F29d8882db9c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----29d8882db9c4--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F29d8882db9c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----29d8882db9c4---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----29d8882db9c4--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----29d8882db9c4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----29d8882db9c4--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----29d8882db9c4--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----29d8882db9c4--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----29d8882db9c4--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----29d8882db9c4--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----29d8882db9c4--------------------------------", "anchor_text": ""}, {"url": "https://martinaaberge.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://martinaaberge.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Martin Andersson Aaberge"}, {"url": "https://martinaaberge.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.3K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F864fda338dba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&user=Martin+Andersson+Aaberge&userId=864fda338dba&source=post_page-864fda338dba--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F79c52f78638a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhy-you-will-fall-in-love-with-python-lists-29d8882db9c4&newsletterV3=864fda338dba&newsletterV3Id=79c52f78638a&user=Martin+Andersson+Aaberge&userId=864fda338dba&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}