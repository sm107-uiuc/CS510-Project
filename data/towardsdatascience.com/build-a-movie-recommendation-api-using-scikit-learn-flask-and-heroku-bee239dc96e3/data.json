{"url": "https://towardsdatascience.com/build-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3", "time": 1683012264.083213, "path": "towardsdatascience.com/build-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3/", "webpage": {"metadata": {"title": "Build a Movie Recommendation API using Scikit-Learn, Flask and Heroku | by Deepak Das | Towards Data Science", "h1": "Build a Movie Recommendation API using Scikit-Learn, Flask and Heroku", "description": "Recommendation systems are everywhere. Some of the best examples are YouTube, Netflix, Spotify. Netflix and YouTube rely heavily on their recommendation systems to retain users on their platform for\u2026"}, "outgoing_paragraph_urls": [{"url": "https://youtu.be/tvRnBbwQwvs?list=PLXmMXHVSvS-AjwTOtiW1DXFYTgUlrUmHV", "anchor_text": "Flask Hello World \u2014 Video lecture", "paragraph_index": 39}, {"url": "https://www.heroku.com", "anchor_text": "www.heroku.com", "paragraph_index": 78}], "all_paragraphs": ["Recommendation systems are everywhere. Some of the best examples are YouTube, Netflix, Spotify. Netflix and YouTube rely heavily on their recommendation systems to retain users on their platform for a longer time. Spotify recommends a curated list of songs to the user according to their interests. There are many more examples where recommendation systems play a pivotal role.", "In short a recommendation system is an algorithm aimed at suggesting relevant data to a user based on past preferences or ratings given by the user or suggesting relevant data to a user based on the item\u2019s attributes.", "To know more about recommendation systems go through the link mentioned below :-", "Build a basic Content-Based Movie Recommendation System and make an API using Flask and deploy it to Heroku.", "We will discuss Content-Based Recommendation System, API and Heroku in detail as we move further in this article.", "Now, let\u2019s look into the contents of this article.", "We will cover the topics step by step and in the end, we will build a Movie Recommendation API that can be used by anyone to provide relevant movie suggestions to their users in an app or a website.", "The first thing we require is data. Data about movies like the genre, cast, plot to name a few. For this task, I have taken data from Kaggle. We have two sources of data.", "Now as we wanted a very basic recommendation system to see how it looks when the API is used in an app or website so we combine and modify the dataset according to our needs.", "The pruning and preprocessing part of the dataset was done separately in one of my Jupyter Notebooks and that is a discussion for some other time. However, if you still want to know about the steps involved in pruning the dataset follow the link below.", "The notebook may be a little untidy because it was never meant to go online. So, apologies if it is a little hard for anyone to follow.", "Below is the link to the dataset that will be used to build our Content-Based Recommendation System. Download this dataset and we are good to go.", "So, we have 6477 movies in our dataset with the following attributes:-", "We have our dataset ready. Let\u2019s move on to the next part i.e. Building a Content-Based Recommendation System.", "Content-Based recommendation works on the principle that if a user likes a certain item then we recommend the user a similar item based on the item\u2019s features or attributes. So in our case, if a user likes a movie of a particular genre or an actor then we recommend a movie on similar lines to our user. So, if a user has watched the movie Joker then our recommendation system would predict movies similar to Joker or with the same cast as that of Joker if we consider the movie\u2019s cast.", "Now that we have a basic idea of what is a Content-Based Recommendation System and how it works let\u2019s code it out.", "There are 5 functions present in recommendation.py. Let\u2019s discuss about all of them one by one.", "get_data() is used to fetch the data about the movies and return the dataset with it\u2019s attributes as the result for further preprocessing.", "combine_data() drops the columns not required for feature extraction and then combines the cast and genres column, finally returning the combine column as the result of this function.", "Line 2: Drop the attributes not required for feature extraction.", "Line 3: Combine the two columns cast and genres into one single column.", "Line 5: We have a combined column with cast and genres values present in it so we remove the cast and genres columns existing separately from our dataset.", "Line 6: Return the dataset with the combine column.", "Note : Before proceeding any further do go through the topics with their links mentioned below. It will be helpful for you to have a basic understanding of these topics before we move on to the next part i.e. transform_data().", "transform_data() takes the value returned by combine_data() and the plot column from get_data() and applies CountVectorizer and TfidfVectorizer respectively and calculates the Cosine values.", "We use TfidfVectorizer for the plot column because Tf-Idf assigns lower value to words having a higher frequency and higher value to words having a lower frequency in a particular document.", "After Thanos, an intergalactic warlord, disintegrates half of the universe, the Avengers must reunite and assemble again to reinvigorate their trounced allies and restore balance.", "In this movie plot from Avengers: Endgame we will have higher values assigned to words such as Thanos and Avengers because they appear less number of times but have a higher significance in determining the main theme of the movie.", "For example, we pass the movie Logan as our input movie. This line gives us the index of the movie Logan in the pandas series.", "For example our input movie is The Dark Knight. What this line does is it calculates the Cosine Values of all the movies with respect to our input movie.", "In the above image we see all the cosine values with respect to our input movie. The input movie will be most similar to itself so it\u2019s value is 0.99. After that we see for index 3 our cosine value is 0.530. Now if you compare it with the pandas series output we had The Dark Knight Rises is at index 3 and as expected it is the most similar movie to The Dark Knight.", "Return value of recommend_movies() for The Dark Knight:-", "result() takes a movie\u2019s title as input and returns the top 20 recommendations.", "For example: If the input is logan or Logan or lOgAn we still get our recommendations.", "Now that our recommendation system is ready let\u2019s move on to the next part i.e. Build a REST API using Flask.", "To understand this part of the article I suggest you have a basic idea about Flask. For our task, we just need to know about some beginner level functionalities.", "To install Flask on your system head over to the terminal/Command Prompt and type pip install Flask. That\u2019s it, Flask is now installed on your system.", "To know the basics about a simple Flask application head on to the link below.", "If you prefer video lectures do go through the brief explanation provided about Flask from this video.", "Flask Hello World \u2014 Video lecture", "Now, that we have a basic idea about Flask let\u2019s move on to the next topic i.e. REST APIs.", "I highly recommend you all have a basic understanding of APIs and one of the design principles of an API i.e. REST API.", "Go through the link mentioned below. It will provide you with a basic overview of APIs and REST APIs.", "If you prefer video lectures do go through the brief explanation provided by Telusko about APIs and REST APIs.", "To know how a REST API can be created it\u2019s highly useful if we first code some basic application and get to know more about the GET method and it\u2019s working.", "Below mentioned link builds a REST API using Flask with the GET method to display data to the client. Code this out and understand the basics and then move on to the code in our app.py file.", "In this file, we will code our Flask application and use the recommendation system we built before.", "Line 1: We import the Flask class then the request library to send HTTPS requests and finally we import jsonify to return our results in a JSON format.", "Line 2: We import the flask_cors to enable cross-origin requests for our API.", "Cross-origin resource sharing (CORS) is a mechanism that allows restricted resources on a web page to be requested from another domain outside the domain from which the first resource was served.", "To know more about the CORS policy do go through the below-mentioned link. It explains all you need to know about CORS policy.", "Line 3: we import our recommendation.py file as a module to use it in our app.py file.", "Now, that we are done with the coding part let\u2019s test our application on localhost and see if it\u2019s working.", "If you want to use Postman for testing our API then download it from the below link.", "You can use your browser for testing as well if you prefer that over Postman. We will test on both of them and you will get to see the results.", "Step \u2014 1: Open up your command prompt if in Windows or terminal if you are using Linux.", "Step \u2014 2: Navigate to the folder where you have stored the dataset, recommendation.py file and app.py file using command line.", "We store our files in a folder named Recommendation 2.0. Below is our directory structure.", "All the files and the dataset should be present in a single folder for ease of use when developing the application.", "Step \u2014 3: When we are in our Recommendation 2.0 folder type the following commands in the command line.", "After executing both the commands we will see our application running on localhost.", "Step \u2014 4: Test our API on localhost using Postman or any browser.", "Let\u2019s see our results when we pass a movie to our API.", "We are done with testing our API on localhost and it works perfectly.", "Let\u2019s move onto the last part i.e. deploying our API to Heroku.", "Before we move on to the deployment part we need to have a basic understanding about GitHub. You should be able to make a new repository, add files, delete files and create folders in the repository if necessary.", "Heroku apps include a Procfile that specifies the commands that are executed by the app on startup. You can use a Procfile to declare a variety of process types, including: Your app\u2019s web server.", "To create one, open up a new file named Procfile (no extension) in the working directory and paste the following.", "We add max requests to ensure our server restarts after every 2nd request to our API. This is done to ensure that we do not exceed our RAM limit of 512 MB allotted by Heroku when using the API.", "The requirements.txt file will contain all of the dependencies for the flask app. If you\u2019re not working from a new environment, this file will contain all requirements from your current environment.", "At the bare minimum for this project, your requirements.txt should contain:", "Copy paste the above in your requirements.txt file and commit it to the repository.", "Step \u2014 4: Commit recommendation.py, app.py.", "Step \u2014 5: Make a folder named dataset/ in your repository and commit the movie_data.csv.zip file.", "Our repository structure should look something like this:-", "The Jupyter Notebook contains the preprocessing part involved to make our movie_data.csv.zip file. So, this folder is optional. Apart from that all the other files and folders are necessary.", "Note: All of the above files should be at the working directory level and not in another folder.", "We can deploy our app using either Heroku CLI or GitHub. In this article we will discuss how we can deploy our app using GitHub.", "Step \u2014 1: Create a free account at www.heroku.com.", "Step \u2014 2: Create a new app simply by choosing a name and clicking \u201ccreate app\u201d. This name doesn\u2019t matter but it does have to be unique.", "Step \u2014 3: Connect your GitHub account by clicking the GitHub icon below.", "Step \u2014 4: Search for the correct repository and click connect.", "Step \u2014 5: Scroll to the bottom of the page and click \u201cDeploy Branch\u201d.", "If something went wrong, check your requirements.txt, delete the dependencies that are giving you problems, and try again.", "Anyone with the Heroku link can now access the movie recommendation API and show movie suggestions to their users.", "So, we have reached the end of this article. I hope you have learned something new and I surely want you all to use the API or build something similar to this.", "We just built a basic Content-Based Recommendation System. Much more can be done than this like building a Collaborative Recommendation System or even building a Hybrid Recommendation System. We will discuss about that in detail but that\u2019s a story for another blog post.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I am a Software Engineer Trainee at GyanSys Inc. with a knack for Data analytics and Machine Learning."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fbee239dc96e3&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----bee239dc96e3--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bee239dc96e3--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@deepakdas_13693?source=post_page-----bee239dc96e3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@deepakdas_13693?source=post_page-----bee239dc96e3--------------------------------", "anchor_text": "Deepak Das"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc1c2adcac671&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&user=Deepak+Das&userId=c1c2adcac671&source=post_page-c1c2adcac671----bee239dc96e3---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbee239dc96e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbee239dc96e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@imnoom", "anchor_text": "Noom Peerapong"}, {"url": "https://unsplash.com/?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://en.wikipedia.org/wiki/Recommender_system", "anchor_text": "About Recommendation Systems"}, {"url": "https://unsplash.com/@jeremybishop", "anchor_text": "Jeremy Bishop"}, {"url": "https://unsplash.com/?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://unsplash.com/@franki", "anchor_text": "Franki Chamaki"}, {"url": "https://unsplash.com/?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.kaggle.com/tmdb/tmdb-movie-metadata", "anchor_text": "TMDB 5000 Movies Data set"}, {"url": "https://www.kaggle.com/pncnmnp/the-indian-movie-database", "anchor_text": "The Indian Movie Database"}, {"url": "https://github.com/dD2405/BioScope-Recommendation-API/tree/master/Jupyter%20Notebook", "anchor_text": "Jupyter Notebook preprocessing."}, {"url": "https://github.com/dD2405/BioScope-Recommendation-API/tree/master/dataset", "anchor_text": "Combined and preprocessed movie dataset"}, {"url": "https://towardsdatascience.com/handling-sparse-matrix-concept-behind-compressed-sparse-row-csr-matrix-4fe6abe58a7a", "anchor_text": "Sparse Matrix"}, {"url": "https://docs.google.com/document/d/1QDDOoU0zo-uf9hGXHcOdNWiG7sq-pUPk0vAWLFeVi84/edit?usp=sharing", "anchor_text": "Bag of Words"}, {"url": "https://docs.google.com/document/d/1afbxNmhKSQrLCAHHjmjr7_Wqin31gj_xbkhIBvBDFlg/edit?usp=sharing", "anchor_text": "Tf-Idf Vectorizer"}, {"url": "https://www.machinelearningplus.com/nlp/cosine-similarity/#5softcosinesimilarity", "anchor_text": "Cosine similarity"}, {"url": "https://unsplash.com/@marvelous", "anchor_text": "Marvin Meyer"}, {"url": "https://unsplash.com/?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://flask.palletsprojects.com/en/1.1.x/quickstart/#quickstart", "anchor_text": "Flask Hello World"}, {"url": "https://youtu.be/tvRnBbwQwvs?list=PLXmMXHVSvS-AjwTOtiW1DXFYTgUlrUmHV", "anchor_text": "Flask Hello World \u2014 Video lecture"}, {"url": "https://www.smashingmagazine.com/2018/01/understanding-using-rest-api/", "anchor_text": "Understanding And Using REST APIs"}, {"url": "https://www.youtube.com/watch?v=qVTAB8Z2VmA&list=PLsyeobzWxl7ps4Z1C4VMtvZEx5-PgyoYI", "anchor_text": "What is REST API?"}, {"url": "https://youtu.be/CjYKrbq8BCw?list=PLXmMXHVSvS-AFMUmbBeIfL3PqTvgw8ygb", "anchor_text": "Creating a RESTful API With Flask \u2014 GET Requests"}, {"url": "https://www.codecademy.com/articles/what-is-cors", "anchor_text": "What is CORS?"}, {"url": "https://unsplash.com/@dtravisphd", "anchor_text": "David Travis"}, {"url": "https://unsplash.com/?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.postman.com/", "anchor_text": "Download Postman"}, {"url": "https://unsplash.com/@yapics", "anchor_text": "Leon Seibert"}, {"url": "https://unsplash.com/?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.heroku.com", "anchor_text": "www.heroku.com"}, {"url": "https://unsplash.com/@aaronpaulos", "anchor_text": "Aaron Paul"}, {"url": "https://unsplash.com/?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://bioscope-api.herokuapp.com/movie?title=insert-movie-name", "anchor_text": "BioScope Movie Recommendation API"}, {"url": "https://github.com/dD2405/BioScope-Recommendation-API", "anchor_text": "GitHub Repository"}, {"url": "https://www.linkedin.com/in/deepak-das-profile/", "anchor_text": "LinkedIn"}, {"url": "https://github.com/dD2405", "anchor_text": "GitHub"}, {"url": "https://medium.com/tag/recommendation-system?source=post_page-----bee239dc96e3---------------recommendation_system-----------------", "anchor_text": "Recommendation System"}, {"url": "https://medium.com/tag/python?source=post_page-----bee239dc96e3---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/flask?source=post_page-----bee239dc96e3---------------flask-----------------", "anchor_text": "Flask"}, {"url": "https://medium.com/tag/rest-api?source=post_page-----bee239dc96e3---------------rest_api-----------------", "anchor_text": "Rest Api"}, {"url": "https://medium.com/tag/heroku?source=post_page-----bee239dc96e3---------------heroku-----------------", "anchor_text": "Heroku"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbee239dc96e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&user=Deepak+Das&userId=c1c2adcac671&source=-----bee239dc96e3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbee239dc96e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&user=Deepak+Das&userId=c1c2adcac671&source=-----bee239dc96e3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbee239dc96e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bee239dc96e3--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fbee239dc96e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----bee239dc96e3---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----bee239dc96e3--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----bee239dc96e3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----bee239dc96e3--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----bee239dc96e3--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----bee239dc96e3--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----bee239dc96e3--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----bee239dc96e3--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----bee239dc96e3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@deepakdas_13693?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@deepakdas_13693?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Deepak Das"}, {"url": "https://medium.com/@deepakdas_13693/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "81 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc1c2adcac671&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&user=Deepak+Das&userId=c1c2adcac671&source=post_page-c1c2adcac671--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F89dbb41ce977&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-movie-recommendation-api-using-scikit-learn-flask-and-heroku-bee239dc96e3&newsletterV3=c1c2adcac671&newsletterV3Id=89dbb41ce977&user=Deepak+Das&userId=c1c2adcac671&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}