{"url": "https://towardsdatascience.com/from-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335", "time": 1683006158.503545, "path": "towardsdatascience.com/from-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335/", "webpage": {"metadata": {"title": "From Streaming Data to COVID-19 Twitter Analysis: Using AWS Lambda, Kinesis Firehose and Elasticsearch | by Zhong Hongsheng | Towards Data Science", "h1": "From Streaming Data to COVID-19 Twitter Analysis: Using AWS Lambda, Kinesis Firehose and Elasticsearch", "description": "In my previous blog post, From Streaming Data to COVID-19 Twitter Analysis: Using Spark and AWS Kinesis, I covered the data pipeline built with Spark and AWS Kinesis. In this post, I will adopt\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/playing-with-data-gracefully-1-a-near-real-time-data-pipeline-using-spark-structured-streaming-409dc1b4aa3a", "anchor_text": "From Streaming Data to COVID-19 Twitter Analysis: Using Spark and AWS Kinesis", "paragraph_index": 0}, {"url": "https://aws.amazon.com/blogs/big-data/building-a-near-real-time-discovery-platform-with-aws/", "anchor_text": "Building a Near Real-Time Discovery Platform with AWS", "paragraph_index": 1}, {"url": "https://aws.amazon.com/blogs/big-data/building-a-near-real-time-discovery-platform-with-aws/", "anchor_text": "reference article", "paragraph_index": 2}, {"url": "https://blog.syncsort.com/2015/11/big-data/the-difference-between-real-time-near-real-time-and-batch-processing-in-big-data/", "anchor_text": "near real-time streaming", "paragraph_index": 3}, {"url": "https://github.com/joking-clock/twitter-analysis-bigdata/tree/master/aws_lambda_elasticsearch", "anchor_text": "the Lambda function", "paragraph_index": 5}, {"url": "https://github.com/joking-clock/twitter-capture-python", "anchor_text": "Twitter capture program", "paragraph_index": 5}, {"url": "https://github.com/joking-clock/twitter-analysis-bigdata/tree/master/aws_lambda_elasticsearch/Lambda_policies", "anchor_text": "repo", "paragraph_index": 7}, {"url": "https://console.aws.amazon.com/es/home", "anchor_text": "Amazon ES home page", "paragraph_index": 8}, {"url": "https://console.aws.amazon.com/firehose/home", "anchor_text": "Kinesis Firehose Stream console", "paragraph_index": 11}, {"url": "https://towardsdatascience.com/playing-with-data-gracefully-1-a-near-real-time-data-pipeline-using-spark-structured-streaming-409dc1b4aa3a", "anchor_text": "post", "paragraph_index": 13}, {"url": "https://console.aws.amazon.com/lambda/home", "anchor_text": "AWS Lambda home page", "paragraph_index": 16}, {"url": "https://github.com/joking-clock/twitter-analysis-bigdata/tree/master/aws_lambda_elasticsearch/code_base", "anchor_text": "repo", "paragraph_index": 20}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/python-package.html", "anchor_text": "AWS Lambda document", "paragraph_index": 23}, {"url": "https://github.com/amazon-archives/aws-big-data-blog/tree/master/aws-blog-firehose-lambda-elasticsearch-near-real-time-discovery-platform", "anchor_text": "original code", "paragraph_index": 25}, {"url": "https://github.com/joking-clock/twitter-capture-python/blob/master/twitter-firehose.py", "anchor_text": "here", "paragraph_index": 33}, {"url": "https://github.com/amazon-archives/aws-big-data-blog/tree/master/aws-blog-firehose-lambda-elasticsearch-near-real-time-discovery-platform/firehose-twitter-streaming-nodejs", "anchor_text": "node.js program", "paragraph_index": 33}, {"url": "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-ac.html", "anchor_text": "Identity and Access Management", "paragraph_index": 35}, {"url": "https://curl.haxx.se/", "anchor_text": "curl", "paragraph_index": 36}, {"url": "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-kibana.html#es-managedomains-kibana", "anchor_text": "Kibana", "paragraph_index": 36}, {"url": "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html#es-request-signing-python", "anchor_text": "AWS SDK or requests", "paragraph_index": 37}, {"url": "http://towardsdatascience.com/", "anchor_text": "Towards Data Science", "paragraph_index": 44}, {"url": "https://www.who.int/emergencies/diseases/novel-coronavirus-2019/situation-reports", "anchor_text": "here", "paragraph_index": 44}, {"url": "https://www.linkedin.com/in/hongshz/", "anchor_text": "https://www.linkedin.com/in/hongshz/", "paragraph_index": 46}], "all_paragraphs": ["In my previous blog post, From Streaming Data to COVID-19 Twitter Analysis: Using Spark and AWS Kinesis, I covered the data pipeline built with Spark and AWS Kinesis. In this post, I will adopt another way to achieve the same goal.", "I have touched AWS Lambda and Elasticsearch in my previous working experience. Lambda impressed me with its serverless, event-triggered features, and rich connection with other AWS tools. Elasticsearch showed me how messy logs generated from systems would be processed neatly, and visible on Kibana. Inspired by the nice work in this post: Building a Near Real-Time Discovery Platform with AWS, I reproduced the data pipeline and apply it into COVID-19 analysis on Twitter. To respect the copyright of the original work, I will not monetize this post.", "Compared to the reference article, I add new content as below:", "The data pipeline follows the fashion of near real-time streaming, from digesting live Twitter data, to visualization. Most of the fragments to assemble the puzzle are from the AWS family: AWS Kinesis Firehose, AWS S3 Bucket, AWS Lambda, and Amazon Elasticsearch Service. The architecture is like this:", "This article, as a supplementary guideline to the reference article, will separate the discussion into the following steps:", "The code for the Lambda function and Twitter capture program has been uploaded in my public repo.", "Before building the data pipeline, you need to have an AWS account and Twitter API keys and access tokens, which is also mentioned in the prerequisites of the reference article. Besides that, IAM roles are critical and must be set up correctly. Two roles are needed:", "Shown as the above image, I attached three policies to the Lambda execution role lambda-s3-es-role. If you are not sure how to configure the policies, I attach these policies to the repo for reference.", "I assume that readers have followed through the steps in the reference article to create an Amazon ES domain at Amazon ES home page. For free-tier users, they can choose instance types as t2.micro or t2.small, and earn free 750 hours usage of Amazon ES. A few points need to note when creating the ES domain:", "Here is the thing. When configuring \u201cAccess policy\u201d, choosing \u201ccustomer access policy\u201d, you need to add the following policy:", "I leave a question here: are the settings correct? We will test it later.", "Different from the reference article, I choose to create a Kinesis Firehose at the Kinesis Firehose Stream console. The steps are simple:", "As mentioned in the IAM Section, a Firehose Stream needs IAM roles to contain all necessary permissions. Click \u201cCreate new or choose\u201d, and choose to \u201ccreate a new IAM Role\u201d, or use an existing one. The default policy would be attached and should meet the need.", "Kinesis Data Firehose Stream (KDF) and Kinesis Data Stream (KDS) may confuse people sometimes. KDF has extra features when delivering stream data. Source data is allowed to be transformed through a Lambda function during delivery to destination. My other post covers the usage of KDF.", "AWS Lambda plays a central role in this pipeline. We will create a Lambda function to do the following jobs:", "To implement such a Lambda function at one stroke is hard. Dividing the cumbersome procedure into smaller steps, I first need to set up the Lambda environment correctly.", "Create a function at AWS Lambda home page:", "Now, we can test if the Lambda function could react to the S3 event. With sample code and configured Handler, we put a file into the S3 bucket twitter-stream-sink.", "On the \u201cMonitoring\u201d tab on the Lambda function panel, there is one dot appearing on the metrics graphs. Clicking \u201cView logs in CloudWatch\u201d, we have the CloudWatch log for this invocation, and the log prints the source S3 bucket and the file name which we just put in.", "The reference article was published several years ago, so the project code needs updates.", "The project code can be downloaded from the repo. The code directory contains 4 python files: config.py, myhandle.py, tweet_utils.py, twitter_to_es.py. To add necessary libraries into the project folder, just need to type the command:", "The libraries needed to import to the project directory are such as:", "The Lambda function accepts a code package with zip format. Packaging the code directory with libraries needs this command:", "The tutorial about the Lambda deployment package can be found in AWS Lambda document.", "Now let us take a glimpse at each python file:", "Compared with the original code in the reference article, I made some code changes:", "2. Port source code from Python 2 to Python 3.", "3. Fix the bugs because Elasticsearch and its Python client library have the incompatible issues with previous versions.", "To port source code from Python 2 to 3, we can use the library 2to3.", "The incompatible issues have been fixed:", "To get familiar with the Elasticsearch\u2019s Python client, you can open a Jupiter notebook to test the connection with the ES cluster.", "After looking into the code, we need to package the code. To test the Lambda function, we put a captured twitter file into the S3 bucket, and see if the tweets are parsed correctly and loaded into the ES cluster.", "If the data is loaded into the ES cluster successfully, we can use Kibana\u2019s \u201cDiscover\u201d function to check it.", "Apart from the code changes on the Lambda function, I use a Python program running on an AWS EC2 instance to capture tweets, which can be found here. The reference article contains a node.js program to capture tweets, and either of them does the same job.", "One thing to note here. When I implemented the pipeline and tried to test to load data into the ES cluster, I met authentication errors on Lambda invocation and Kibana:", "To find out the reason, we need to go to the page specifying the Identity and Access Management of Amazon ES.", "The primary appeal of IP-based policies is that they allow unsigned requests to an Amazon ES domain, which lets you use clients like curl and Kibana or access the domain through a proxy server.", "All requests to the Amazon ES configuration API must be signed. In the above errors, even though the Lambda execution role was added, the requests were unsigned and rejected, especially HTTP requests. To resolve this problem, we can add IP-based policies, or adding signs using AWS SDK or requests. So we need to add an IP-based policy into the ES access policies:", "Once we start running the twitter capture program, loads of tweets would be flown into S3 and the Lambda function would handle the data files. The best way to reflect the data is through the visualization utility Kibana, provided in Elasticsearch.", "All data loaded into Elasticsearch need to be assigned with indices, and thus Kibana can use index patterns to retrieve the data. In twitter_to_es.py, tweets are indexed with \u201ctwitter\u201d. Now we can create an index pattern \u201ctwitter*\u201d and start discovering the data in Kibana.", "After the creation of the index pattern, we can explore the data by choosing the \u201cDiscover\u201d button on the left-sidebar and the data can be presented in time series.", "In this article, I pick the hashtags \u201c#StayHome\u201d and \u201c#SocialDistancing\u201d to mine Twitter. Like the reference article, I create a dashboard to visualize the tweets. There are three visualizations in the dashboard:", "AWS Lambda and Elasticsearch are pretty powerful technologies and this post may just demonstrate one case among the application scenarios. Besides real-time data processing, Lambda can be integrated with ETL (Extract, Transform, Load) and application backends. Elasticsearch has established a reputation on logging/log analysis and full-text searching.", "I hope you can find fun when done the reading and being able to fiddle with the big data technologies. This is how big data fascinates me.", "Note from the editors: Towards Data Science is a Medium publication primarily based on the study of data science and machine learning. We are not health professionals or epidemiologists, and the opinions of this article should not be interpreted as professional advice. To learn more about the coronavirus pandemic, you can click here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Gain insight using data technologies | https://www.linkedin.com/in/hongshz/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb71b71279335&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b71b71279335--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b71b71279335--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@zhonghongsheng?source=post_page-----b71b71279335--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@zhonghongsheng?source=post_page-----b71b71279335--------------------------------", "anchor_text": "Zhong Hongsheng"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7570fffa5a26&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&user=Zhong+Hongsheng&userId=7570fffa5a26&source=post_page-7570fffa5a26----b71b71279335---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb71b71279335&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb71b71279335&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/playing-with-data-gracefully-1-a-near-real-time-data-pipeline-using-spark-structured-streaming-409dc1b4aa3a", "anchor_text": "From Streaming Data to COVID-19 Twitter Analysis: Using Spark and AWS Kinesis"}, {"url": "https://aws.amazon.com/blogs/big-data/building-a-near-real-time-discovery-platform-with-aws/", "anchor_text": "Building a Near Real-Time Discovery Platform with AWS"}, {"url": "https://aws.amazon.com/blogs/big-data/building-a-near-real-time-discovery-platform-with-aws/", "anchor_text": "reference article"}, {"url": "https://blog.syncsort.com/2015/11/big-data/the-difference-between-real-time-near-real-time-and-batch-processing-in-big-data/", "anchor_text": "near real-time streaming"}, {"url": "https://github.com/joking-clock/twitter-analysis-bigdata/tree/master/aws_lambda_elasticsearch", "anchor_text": "the Lambda function"}, {"url": "https://github.com/joking-clock/twitter-capture-python", "anchor_text": "Twitter capture program"}, {"url": "https://github.com/joking-clock/twitter-analysis-bigdata/tree/master/aws_lambda_elasticsearch/Lambda_policies", "anchor_text": "repo"}, {"url": "https://console.aws.amazon.com/es/home", "anchor_text": "Amazon ES home page"}, {"url": "https://console.aws.amazon.com/firehose/home", "anchor_text": "Kinesis Firehose Stream console"}, {"url": "https://towardsdatascience.com/playing-with-data-gracefully-1-a-near-real-time-data-pipeline-using-spark-structured-streaming-409dc1b4aa3a", "anchor_text": "post"}, {"url": "https://console.aws.amazon.com/lambda/home", "anchor_text": "AWS Lambda home page"}, {"url": "https://github.com/joking-clock/twitter-analysis-bigdata/tree/master/aws_lambda_elasticsearch/code_base", "anchor_text": "repo"}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/python-package.html", "anchor_text": "AWS Lambda document"}, {"url": "https://elasticsearch-py.readthedocs.io/en/master/helpers.html", "anchor_text": "bulk"}, {"url": "https://github.com/amazon-archives/aws-big-data-blog/tree/master/aws-blog-firehose-lambda-elasticsearch-near-real-time-discovery-platform", "anchor_text": "original code"}, {"url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/removal-of-types.html", "anchor_text": "mapping types are removed"}, {"url": "https://elasticsearch-py.readthedocs.io/en/master/", "anchor_text": "Python Client"}, {"url": "https://github.com/joking-clock/twitter-capture-python/blob/master/twitter-firehose.py", "anchor_text": "here"}, {"url": "https://github.com/amazon-archives/aws-big-data-blog/tree/master/aws-blog-firehose-lambda-elasticsearch-near-real-time-discovery-platform/firehose-twitter-streaming-nodejs", "anchor_text": "node.js program"}, {"url": "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-ac.html", "anchor_text": "Identity and Access Management"}, {"url": "https://curl.haxx.se/", "anchor_text": "curl"}, {"url": "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-kibana.html#es-managedomains-kibana", "anchor_text": "Kibana"}, {"url": "https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html#es-request-signing-python", "anchor_text": "AWS SDK or requests"}, {"url": "http://towardsdatascience.com/", "anchor_text": "Towards Data Science"}, {"url": "https://www.who.int/emergencies/diseases/novel-coronavirus-2019/situation-reports", "anchor_text": "here"}, {"url": "https://medium.com/tag/aws-lambda?source=post_page-----b71b71279335---------------aws_lambda-----------------", "anchor_text": "AWS Lambda"}, {"url": "https://medium.com/tag/elasticsearch?source=post_page-----b71b71279335---------------elasticsearch-----------------", "anchor_text": "Elasticsearch"}, {"url": "https://medium.com/tag/twitter-data?source=post_page-----b71b71279335---------------twitter_data-----------------", "anchor_text": "Twitter Data"}, {"url": "https://medium.com/tag/big-data?source=post_page-----b71b71279335---------------big_data-----------------", "anchor_text": "Big Data"}, {"url": "https://medium.com/tag/python?source=post_page-----b71b71279335---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb71b71279335&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&user=Zhong+Hongsheng&userId=7570fffa5a26&source=-----b71b71279335---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb71b71279335&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&user=Zhong+Hongsheng&userId=7570fffa5a26&source=-----b71b71279335---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb71b71279335&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b71b71279335--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb71b71279335&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b71b71279335---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b71b71279335--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b71b71279335--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b71b71279335--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b71b71279335--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b71b71279335--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b71b71279335--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b71b71279335--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b71b71279335--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@zhonghongsheng?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@zhonghongsheng?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Zhong Hongsheng"}, {"url": "https://medium.com/@zhonghongsheng/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "24 Followers"}, {"url": "https://www.linkedin.com/in/hongshz/", "anchor_text": "https://www.linkedin.com/in/hongshz/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7570fffa5a26&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&user=Zhong+Hongsheng&userId=7570fffa5a26&source=post_page-7570fffa5a26--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe18c6ba97228&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-streaming-data-to-covid-19-twitter-analysis-using-aws-lambda-kinesis-firehose-and-b71b71279335&newsletterV3=7570fffa5a26&newsletterV3Id=e18c6ba97228&user=Zhong+Hongsheng&userId=7570fffa5a26&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}