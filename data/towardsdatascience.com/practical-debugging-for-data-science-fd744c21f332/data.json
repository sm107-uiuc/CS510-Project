{"url": "https://towardsdatascience.com/practical-debugging-for-data-science-fd744c21f332", "time": 1683002060.2434828, "path": "towardsdatascience.com/practical-debugging-for-data-science-fd744c21f332/", "webpage": {"metadata": {"title": "Practical Debugging for Data Science | by Manu Joseph | Towards Data Science", "h1": "Practical Debugging for Data Science", "description": "Now before writing about this topic, I did a quick Google Search to see how much of this is already covered and quickly observed a phenomenon that I see increasingly in the field \u2014 Data Science =\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/practical-debugging-for-data-science-fd744c21f332?source=friends_link&sk=abb4854862e35adb76ac4992d31b484e", "anchor_text": "here", "paragraph_index": 0}, {"url": "https://medium.com/free-code-camp/jon-skeet-the-chuck-norris-of-programming-ee5781c7e18a", "anchor_text": "John Skeet \u2014 the Chuck Norris of Programming", "paragraph_index": 2}, {"url": "http://www.cs.utexas.edu/users/EWD/transcriptions/EWD10xx/EWD1036.html", "anchor_text": "\u201cOn the Cruelty of Really Teaching Computing Science\u201d", "paragraph_index": 7}, {"url": "https://www.linkedin.com/in/howardjeremy", "anchor_text": "Jeremy Howard", "paragraph_index": 8}, {"url": "https://realpython.com/python-traceback/", "anchor_text": "Chad Hansen @ RealPython", "paragraph_index": 13}, {"url": "https://docs.microsoft.com/en-us/visualstudio/debugger/using-breakpoints?view=vs-2019", "anchor_text": "VSCode", "paragraph_index": 27}, {"url": "https://en.wikipedia.org/wiki/Accuracy_paradox", "anchor_text": "Accuracy Paradox", "paragraph_index": 33}, {"url": "https://arxiv.org/ftp/arxiv/papers/1503/1503.06410.pdf", "anchor_text": "F1 scores to majority class", "paragraph_index": 33}, {"url": "https://www.youtube.com/watch?v=JoAxZsdw_3w", "anchor_text": "Andrew Ng tells us to do", "paragraph_index": 35}, {"url": "https://deep-and-shallow.com/2019/11/13/interpretability-cracking-open-the-black-box-part-i/", "anchor_text": "blog series on interpretability", "paragraph_index": 36}, {"url": "https://www.scikit-yb.org/en/latest/index.html", "anchor_text": "Yellowbrick", "paragraph_index": 39}], "all_paragraphs": ["Is the paywall bothering you? Click here to go around it.", "Now before writing about this topic, I did a quick Google Search to see how much of this is already covered and quickly observed a phenomenon that I see increasingly in the field \u2014 Data Science = Modelling, at best, Modelling + Data Processing. Open a MOOC, they talk about the different models and architectures, go to a bootcamp, they will make you write code to fit and train a machine learning model. While I understand why the MOOCs and bootcamps take this route (because these machine learning models are at the heart of data science), they sure have made it seem like machine learning models are the only thing in Data Science. But Data Science in practice is radically different. There are no curated datasets or crisply formatted notebooks, only a deluge of unorganized, unclean data, and complex processes. And to effectively practice Data Science there, you need to be a good programmer. Period.", "Not even John Skeet \u2014 the Chuck Norris of Programming. It is an inevitable and irritating part of writing code. There is nothing like a long and obscure error message to bring down the high of coding up a particularly complex task. And therefore, being able to hunt down and deal with errors is an essential skill in a Data Scientist\u2019s toolbox.", "Machine Learning is slightly different from conventional programming. Traditionally programming tries to solve a problem and there will be a set of steps/logic which has to be translated into code and voila! it works. But Machine Learning is slightly frustrating in that aspect. You can do everything right, but still fail to achieve your intended result. And because of that, debugging a machine learning program is doubly hard.", "An error in a machine learning code can come from two very distinct sources -", "And as Andrej Karpathy alluded, the majority of errors are usually because of number 1. So before you delve deep into the mathematics, do a basic sanity check to see if you have coded it up right. This doesn\u2019t depend on how good you are at programming or how experienced you are. Andrej Karpathy is a PhD in Computer Science from Stanford, gone on to having a stint at OpenAI, and is now the Sr. Director of AI at Tesla. Now that\u2019s an impressive profile, isn\u2019t it? And he has written numerous blogs about a lot of topics which shows a deep understanding of those. He even had a tweet pointing out common pitfalls in training neural networks. Guess what one of those pointers were?\u200a\u2014\u200a\u201cyou forgot to\u00a0.zero_grad()\u201d", "To summarize, even if you are Andrej Karpathy you will make errors and need to know how to debug to become effective. So the rest of the blog post, I\u2019m gonna cover pointers on how to debug a machine learning model, both from the programmatic side as well as the machine learning side. Before getting into the specifics, I\u2019d like to discuss a couple of \u2018mindset\u2019 s which will help you go a long way.", "In Dijkstra\u2019s classic paper \u201cOn the Cruelty of Really Teaching Computing Science\u201d, he argues the case for calling bugs as errors, because it puts the blame squarely where it should reside \u2014 with the programmer and not on a gremlin who creeps up when we are sleeping and deletes a line, or an indentation. This change in vocabulary has a profound impact on how you approach a problem with your code. Before the program was \u201calmost correct\u201d with some unexplained bugs which the hero programmer will find and fix. But once you start calling them errors, the program is just wrong and the programmer, who made the error, should find a way to correct it and himself in the process. It went from a \u201cme-against-the-world\u201d action movie to a thoughtful, and introspective drama about a man/woman who brings a profound change in their character through the course of the movie.", "In one of his lectures, Jeremy Howard mentioned something profound, and it derives directly from mindset #1.", "We all have this habit\u2026 when we find a bug, we go, \u201cUh! I\u2019m an idiot!\u201d So, don\u2019t wait to find out. I already know I\u2019m an idiot. Let\u2019s start working on that assumption when you are debugging.", "If something in our code isn\u2019t working, it means that we thought worked in a particular way, isn\u2019t working that way. So you have to start with the understanding that you are wrong about something, which could be quite hard for some people. Experienced programmers go right back to the start, and check every single step. But the new programmers have a tendency to overestimate their confidence about a particular block of code and discard them from the check. So they will fly by blocks of code which they feel pretty confident about and zero in on a block of code by declaring \u2014 \u201cI think the problem is x \u201c. But debugging is never about \u201cI think the problem is..\u201d, but about starting with \u201cI don\u2019t know what the problem is, cause I made a mistake.\u201d", "How many times have you seen a traceback like the one above and thought \u2014 Read through all of that? Hell, No!. But what you would be letting go there is a gold mine of information and a damn good starting point for debugging.", "I know the traceback looks scary(and I intentionally posted a non-formatted, multi-threaded traceback on a black screen for effect), but it doesn\u2019t have to be. If you are using a jupyter notebook or any IDE worth its salt, the traceback will be formatted and will be a million times easier to read. And what if I told you that you don\u2019t need to read the entire traceback and still get good information from it?", "Let\u2019s breakdown the traceback a bit. Chad Hansen @ RealPython has made a good job about explaining the traceback and I urge you to take a look at that and skip the next paragraph(which is an excerpt from the original article). And for those of you who just want a summary, read ahead.", "The first and foremost rule in reading a traceback is that you do it from bottom to top.", "Blue box: The last line of the traceback is the error message line. This is your first clue as to what kind of error it is. Python has many type of built-in errors which lead to different kind of issues.", "Green box: After the exception name is the error message. Pay very very close attention to this part because this is practically the answer to why it didn\u2019t work. More often than not, the developers try to put in meaningful messages which can intuitively lead you to the problem.", "Yellow box: Further up the traceback are the various function calls moving from bottom to top, most recent to least recent.", "Red underline: The second line for these calls contains the actual code that was executed.", "The Yellow box and the Red underline are key to localizing your error. But this particular aspect is what intimidates a lot of people, because this can be long; especially if you are using a library like Sci-kit Learn or Tensorflow. But what is great about this part is that it gives you the filenames in which the error has occured. Now to start with, you should be focusing on the part of the error that rose from your script, and consider the ones from the library as a consequence of a mistake that you have made (there are exceptions to this where there is actually a problem in the library, but the starting point of your analysis should always be introspection).", "You should consider yourselves lucky if the error in your code throws an exception and a helpful traceback. But many times, the error is not so superficial. It either does not throw an error or manifests itself in a totally different form and raises an unexplained exception. It is such errors which are the hardest to debug.", "These errors typically manifest themselves in the data processing pipeline in a data science project. And, since we do not have an exact location or line number where the error occurred, we need to find that place. Now, how do you find the error in a humongous piece of code? Reading from start to finish is a sure shot way, but it\u2019s a hugely inefficient process.", "Computer Engineers will instantly tell you that when you go from Linear Search to a Binary Search, the time complexity goes from O(N) to O(log N). The irony is that these same engineers who know this like the back of their hand will resort to a linear search while debugging.", "The process is pretty simple. Let\u2019s take an example of a simple bug. The dtype of a column in a pandas dataframe is getting changed somewhere in the code and this is messing up the data processing pipeline.", "Now that I\u2019ve made a blasphemous statement and caught your attention, let me clarify. Jupyter Notebooks is a brilliant tool and I use it all the time, but for quick prototyping. Once you\u2019ve made substantial progress in the coding process and you have a long block of code it becomes unwieldy.", "Just imagine doing the binary search I described earlier in a notebook. If your code is split across different cells, you would be executing cell after cell, torturing your keyboard. And if your code is merged into a single cell, then you will be splitting cells, creating new cells to check, etc. It\u2019s a major headache.", "There is a fine line between debugging data science and debugging code and both of these processes require slightly different tools. If you are figuring out a kink in your model, where you have to iterate a lot and try different things, there is no better tool than Jupyter Notebooks. But if you have a hidden bug in something like a data pipeline, or feature engineering pipeline, ditch Jupyter Notebooks and use an IDE of your choice. My go-to tools are VSCode and Spyder, depending on specific use cases.", "I\u2019ve had many data scientists draw a blank face when I tell them to \u201cstep through\u201d the code and debug it. And I notice their eyes widening when I tell them about this magical thing called the debugger which lets you put break points, watch certain variables, let you step through the code line by line, and even put a conditional break point. And this debugger is there in almost all IDEs, functionalities remain the same on a high level. If you are one of those Data Scientist, I urge you to immediately check out debuggers, be it in VSCode, Spyder, PyCharm, or any other IDE that supports it.", "In machine learning, an error can be because of programmatic logic or mathematics and it is important to be able to quickly diagnose and isolate the error source so that you don\u2019t waste all day chasing an error.", "I\u2019m gonna take an example to make my point clear. I was training an LSTM for time series prediction and tinkering with the architecture to accommodate a few exogenous variables. Soon enough, I understood that the network was not training properly, the loss curve was not looking right. There could be many things that could have gone wrong here \u2014 the data processing for the LSTMs (which is always a honey trap for data leakage), the standardization that I was doing for the input matrices, the tinkering I was doing with the LSTM architecture. So, I just created a dummy time series as a function of the exogenous variables, turned off the standardization , and ran my data processing. When I checked the formatted arrays, it was alright. So I ruled out the data processing. Then I ran the data through the LSTM and watched the training loss go down. Perfect! The tinkering was also not the problem. Now that I isolated the source of the error to the standardization part of it, I placed a few breakpoints in the standardization function, stepped through the function and figured out the dumb mistake that I made.", "Have you ever run a model and hit 90% accuracy on a difficult problem and you feel elated that you achieved such a stellar result without putting in much effort? But, a little voice in your head is nagging you, telling you this is not possible. I\u2019m here to hand an amplifier to that voice. Listen to it. More often than not, that voice got it right.", "You must have stumbled on to the monster in data science called \u201cdata leakage\u201d. Data Leakage is, as you all might know, when the data you are using to train a machine learning algorithm happens to have the information you are trying to predict, resulting in overstated performance. There are a lot of ways data leakage can happen in your model, some of which I\u2019m listing below to help you kick start your train of thought-", "If you are working on a classification problem with a high class imbalance, it has its own pitalls.", "One of the most common mistakes I see people make is the metric, especially when there is high class imbalance. I have sat through too many interviews where the candidate talk on and on about how he got a 90% accuracy in a xyz fraud detection type problem. Even after quite a bit of prodding and clue-dropping, most of these people don\u2019t seem to make the connection to the Accuracy Paradox. When I remind them of Precision or Recall, I get a text book answer or the formulae. At this point, I drop any further discussion, such as the bias of F1 scores to majority class, etc.", "Over or under sampling is one of the ways you handle the training of an imbalanced class(which is not ideal, because you are changing the inherent distribution of the problem). But here is the kicker, if you over or undersample before you do a validation split, and measure the performance of your model on the under or over sampled dataset, you are going down a dark and windy path towards model failure.", "The errors in your model will tell you exactly the story you need to make your model perform better. And the process of extracting this story from your results is Error Analysis. When I sat Error Analysis, it includes two parts \u2014 ablation study to identify the errors/benefits from each of the components of the system, like preprocessing, dimensionality reduction, modelling, etc., and the analysis of the results and errors in them like Andrew Ng tells us to do.", "You quickly identify the impact of the components of your machine learning pipeline by turning them on or off, or substituting them with the ground truth. This is also a very quick way to identify a feature with leakage. If you see that the model is relying on one single feature too much, and dropping that feature affects the performance drastically, it should be a clue to start investigating data leakage for that variable. For a review of the state of the art methods in feature attribution, check my previous blog series on interpretability.", "The other part of Error Analysis is what Andrew Ng teaches in his course on Coursera. It\u2019s all about manually going through the misclassified cases, trying to identify a pattern, and eventually devising a plan of action to mitigate such a pattern. In the case of tabular data, this process can be more efficiently classified by trying to check the performance split on different categorical splits. Is your error concentrated on a particular type of sample? Maybe it needs a new feature to help learning them.", "In case of regression problems, you can look at the error at different categorical splits, or plot a prediction-ground truth scatter chart or a residual plot to further analyze where your errors are rising from.", "Let\u2019s do a short tour of the different visualizations provided by the excellent library Yellowbrick.", "We use confusion matrices to understand which classes are most easily confused, and not because we are ourselves confused by it. So, we identify the classes which are most easily confused and analyze them to find out why. For eg. for a computer vision task, we look at the samples from these classes and check if a human can easily identify the different between the two.", "A Receiver Operating Characteristic/Area Under the Curve plot allows the user to visualize the trade-off between the classifier\u2019s sensitivity and specificity.", "This plot is a twist on the conventional Confusion Matrix and can be used for the same purpose. For some reason, I always find this plot much more intuitive than the confusion matrix.", "The residuals plot shows the difference between residuals on the vertical axis and the dependent variable on the horizontal axis, allowing you to detect regions within the target that may be susceptible to more or less error. This plot also shows the relation between the predicted value and how well we are able to predict that value. It also shows how the train residuals differ from the test residuals. Analyzing this plot will give you a lot of insights as to why a model is failing, or where it is failing.", "A prediction error plot shows the actual targets from the dataset against the predicted values generated by our model. We can diagnose regression models using this plot by comparing against the 45 degree line, where the prediction exactly matches the model.", "This is by no means an exhaustive list of things that can go wrong, and is neither meant to be. The intention of this article is to just get your thought process started, organize your debugging efforts to be more efficient, and put in place a mindset which is conducive to debugging. If I have done any of the above for even a single person reading the article, I consider this effort worthwhile.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ffd744c21f332&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----fd744c21f332--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fd744c21f332--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@manujosephv?source=post_page-----fd744c21f332--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@manujosephv?source=post_page-----fd744c21f332--------------------------------", "anchor_text": "Manu Joseph"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc8dcc7fb5ce5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&user=Manu+Joseph&userId=c8dcc7fb5ce5&source=post_page-c8dcc7fb5ce5----fd744c21f332---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffd744c21f332&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffd744c21f332&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/practical-debugging-for-data-science-fd744c21f332?source=friends_link&sk=abb4854862e35adb76ac4992d31b484e", "anchor_text": "here"}, {"url": "https://xkcd.com/1316/", "anchor_text": "https://xkcd.com/1316/"}, {"url": "https://medium.com/free-code-camp/jon-skeet-the-chuck-norris-of-programming-ee5781c7e18a", "anchor_text": "John Skeet \u2014 the Chuck Norris of Programming"}, {"url": "http://www.cs.utexas.edu/users/EWD/transcriptions/EWD10xx/EWD1036.html", "anchor_text": "\u201cOn the Cruelty of Really Teaching Computing Science\u201d"}, {"url": "https://www.linkedin.com/in/howardjeremy", "anchor_text": "Jeremy Howard"}, {"url": "https://realpython.com/python-traceback/", "anchor_text": "https://realpython.com/python-traceback/"}, {"url": "https://realpython.com/python-traceback/", "anchor_text": "Chad Hansen @ RealPython"}, {"url": "https://realpython.com/python-traceback/", "anchor_text": "Chad Hansen @ RealPython"}, {"url": "https://xkcd.com/979/", "anchor_text": "https://xkcd.com/979/"}, {"url": "https://docs.microsoft.com/en-us/visualstudio/debugger/using-breakpoints?view=vs-2019", "anchor_text": "VSCode"}, {"url": "https://xkcd.com/1739/", "anchor_text": "https://xkcd.com/1739/"}, {"url": "https://en.wikipedia.org/wiki/Accuracy_paradox", "anchor_text": "Accuracy Paradox"}, {"url": "https://arxiv.org/ftp/arxiv/papers/1503/1503.06410.pdf", "anchor_text": "F1 scores to majority class"}, {"url": "https://www.youtube.com/watch?v=JoAxZsdw_3w", "anchor_text": "Andrew Ng tells us to do"}, {"url": "https://deep-and-shallow.com/2019/11/13/interpretability-cracking-open-the-black-box-part-i/", "anchor_text": "blog series on interpretability"}, {"url": "https://www.scikit-yb.org/en/latest/index.html", "anchor_text": "Yellowbrick"}, {"url": "https://www.scikit-yb.org/en/latest/", "anchor_text": "https://www.scikit-yb.org/en/latest/"}, {"url": "https://www.scikit-yb.org/en/latest/", "anchor_text": "https://www.scikit-yb.org/en/latest/"}, {"url": "https://www.scikit-yb.org/en/latest/", "anchor_text": "https://www.scikit-yb.org/en/latest/"}, {"url": "https://www.scikit-yb.org/en/latest/", "anchor_text": "https://www.scikit-yb.org/en/latest/"}, {"url": "https://www.scikit-yb.org/en/latest/", "anchor_text": "https://www.scikit-yb.org/en/latest/"}, {"url": "https://xkcd.com/1722/", "anchor_text": "https://xkcd.com/1722/"}, {"url": "https://deep-and-shallow.com/2019/12/14/practical-debugging-for-data-science/", "anchor_text": "http://deep-and-shallow.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffd744c21f332&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&user=Manu+Joseph&userId=c8dcc7fb5ce5&source=-----fd744c21f332---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffd744c21f332&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&user=Manu+Joseph&userId=c8dcc7fb5ce5&source=-----fd744c21f332---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffd744c21f332&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fd744c21f332--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ffd744c21f332&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----fd744c21f332---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----fd744c21f332--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----fd744c21f332--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----fd744c21f332--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----fd744c21f332--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----fd744c21f332--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----fd744c21f332--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----fd744c21f332--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----fd744c21f332--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@manujosephv?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@manujosephv?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Manu Joseph"}, {"url": "https://medium.com/@manujosephv/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "183 Followers"}, {"url": "https://www.linkedin.com/in/manujosephv/", "anchor_text": "https://www.linkedin.com/in/manujosephv/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc8dcc7fb5ce5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&user=Manu+Joseph&userId=c8dcc7fb5ce5&source=post_page-c8dcc7fb5ce5--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F7cea8b947fdd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpractical-debugging-for-data-science-fd744c21f332&newsletterV3=c8dcc7fb5ce5&newsletterV3Id=7cea8b947fdd&user=Manu+Joseph&userId=c8dcc7fb5ce5&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}