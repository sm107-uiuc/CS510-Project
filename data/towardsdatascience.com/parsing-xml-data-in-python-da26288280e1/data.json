{"url": "https://towardsdatascience.com/parsing-xml-data-in-python-da26288280e1", "time": 1683006892.94665, "path": "towardsdatascience.com/parsing-xml-data-in-python-da26288280e1/", "webpage": {"metadata": {"title": "Parsing XML Data in Python. Storing XML Data in a Pandas Dataframe | by Sadrach Pierre, Ph.D. | Towards Data Science", "h1": "Parsing XML Data in Python", "description": "Extensible Mark up Language (XML) is a mark up language that encodes data in a human and machine readable format. XML is used in a variety of programs for structuring, storing and transmitting data\u2026"}, "outgoing_paragraph_urls": [{"url": "https://docs.microsoft.com/en-us/previous-versions/windows/desktop/ms762271(v%3Dvs.85)", "anchor_text": "here", "paragraph_index": 1}, {"url": "https://github.com/spierre91/medium_code/blob/master/xml_parsing/intro_to_xml_parsing.py", "anchor_text": "GitHub", "paragraph_index": 19}], "all_paragraphs": ["Extensible Mark up Language (XML) is a mark up language that encodes data in a human and machine readable format. XML is used in a variety of programs for structuring, storing and transmitting data. Python contains several interfaces for processing XML data. In this post, we will discuss how to use the \u2018ElementTree\u2019 module in the python \u2018xml\u2019 library to parse XML data and store the data in a Pandas data frame.", "For our purposes we will be using a sample \u2018xml\u2019 file, \u2018books.xml\u2019 ,which can be found here. The file contains information about a variety of books, such as titles, author names, and prices.", "To start, let\u2019s import \u2018parse\u2019 from the \u2018ElementTree\u2019 module in the python \u2018xml\u2019 library:", "Now, let\u2019s take a look at the file tags in \u2018books.xml\u2019:", "We can define a parsed \u2018XML\u2019 document object by passing the file name into the \u2018parse()\u2019 method:", "If we print the object we see that we have an \u2018ElementTree\u2019 object at a specified memory address:", "Let\u2019s take a look at the methods and attributes available to this object using the built-in \u2018dir()\u2019 method:", "Let\u2019s use the method \u2018iterfind()\u2019 to return a generator that we can use iterate over in a \u2018for-loop\u2019. We will need specify a path argument in the \u2018iterfind()\u2019 method. Let\u2019s select the \u2018book\u2019 path:", "We see that we have several \u2018Element book\u2019 objects stored at various memory addresses. We can extract the information from these objects using the \u2018findtext()\u2019 method. Let\u2019s extract the information in the \u2018author\u2019 tags:", "Next, we can initialize lists that we can use to store these values:", "And within the for-loop we can append the values:", "We can then store these lists in a data frame. Let\u2019s first import the Pandas library:", "Next, let\u2019s define a data frame that contains the \u2018title\u2019, \u2018author\u2019 and \u2018price\u2019 for each book:", "Next, let\u2019s print the resulting data frame:", "We can add the \u2018genre\u2019, \u2018publish_date\u2019 and \u2018description\u2019 to the data frame as well:", "Now that we have all of the information in a data frame we can do things like convert the \u2018price\u2019 strings into \u2018float\u2019 and calculate the mean of the \u2018price\u2019 column:", "Let\u2019s also convert the \u2018publish_date\u2019 into a \u2018datetime\u2019 object and pull year, month and day values:", "We can also use the \u2018Counter()\u2019 method from the collections module to look at the distribution in authors and genres:", "I\u2019ll stop here but feel free to play around with the data and code yourself.", "To summarize, in this post we discussed how to parse XML data using the \u2018xml\u2019 library in python. We showed how to use the \u2018iterfind()\u2019 method to define a generator object that we can iterate over in a \u2018for-loop\u2019. We also showed how to access element tag information using the \u2018findtext()\u2019 method. We then stored the XML information in lists which we used to define a Pandas data frame. I hope you found this post useful/interesting. The data and code from this post are available on GitHub. Thank you for reading!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Writer for Built In & Towards Data Science. Cornell University Ph. D. in Chemical Physics."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fda26288280e1&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----da26288280e1--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----da26288280e1--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://spierre91.medium.com/?source=post_page-----da26288280e1--------------------------------", "anchor_text": ""}, {"url": "https://spierre91.medium.com/?source=post_page-----da26288280e1--------------------------------", "anchor_text": "Sadrach Pierre, Ph.D."}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F120b86134681&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&user=Sadrach+Pierre%2C+Ph.D.&userId=120b86134681&source=post_page-120b86134681----da26288280e1---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fda26288280e1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fda26288280e1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.pexels.com/photo/close-up-photography-of-colorful-yarns-635002/", "anchor_text": "Source"}, {"url": "https://docs.microsoft.com/en-us/previous-versions/windows/desktop/ms762271(v%3Dvs.85)", "anchor_text": "here"}, {"url": "https://github.com/spierre91/medium_code/blob/master/xml_parsing/intro_to_xml_parsing.py", "anchor_text": "GitHub"}, {"url": "https://medium.com/tag/python?source=post_page-----da26288280e1---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----da26288280e1---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----da26288280e1---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/software-development?source=post_page-----da26288280e1---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/technology?source=post_page-----da26288280e1---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fda26288280e1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&user=Sadrach+Pierre%2C+Ph.D.&userId=120b86134681&source=-----da26288280e1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fda26288280e1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&user=Sadrach+Pierre%2C+Ph.D.&userId=120b86134681&source=-----da26288280e1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fda26288280e1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----da26288280e1--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fda26288280e1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----da26288280e1---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----da26288280e1--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----da26288280e1--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----da26288280e1--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----da26288280e1--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----da26288280e1--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----da26288280e1--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----da26288280e1--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----da26288280e1--------------------------------", "anchor_text": ""}, {"url": "https://spierre91.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://spierre91.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sadrach Pierre, Ph.D."}, {"url": "https://spierre91.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3.7K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F120b86134681&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&user=Sadrach+Pierre%2C+Ph.D.&userId=120b86134681&source=post_page-120b86134681--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F4efebd4f21b7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fparsing-xml-data-in-python-da26288280e1&newsletterV3=120b86134681&newsletterV3Id=4efebd4f21b7&user=Sadrach+Pierre%2C+Ph.D.&userId=120b86134681&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}