{"url": "https://towardsdatascience.com/gpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617", "time": 1683015110.356527, "path": "towardsdatascience.com/gpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617/", "webpage": {"metadata": {"title": "Supercharging your Mobile Apps with GPU Accelerated Machine Learning using the Android NDK, Vulkan and Kompute | by Alejandro Saucedo | Towards Data Science", "h1": "Supercharging your Mobile Apps with GPU Accelerated Machine Learning using the Android NDK, Vulkan and Kompute", "description": "Some smartphones nowadays pack laptop-level hardware \u2014 carrying up to 16GB RAM, high-speed multi-core CPUs, and GPUs that can render high-performance complex graphical applications on 4k displays\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.mobilemarketer.com/news/mobile-games-sparked-60-of-2019-global-game-revenue-study-finds/569658/", "anchor_text": "only continues to improv", "paragraph_index": 1}, {"url": "https://en.wikipedia.org/wiki/Edge_computing", "anchor_text": "edge computing", "paragraph_index": 1}, {"url": "https://en.wikipedia.org/wiki/Federated_architecture", "anchor_text": "federated architectures", "paragraph_index": 1}, {"url": "https://arxiv.org/abs/1910.06663", "anchor_text": "mobile deep learning", "paragraph_index": 1}, {"url": "https://developer.android.com/ndk", "anchor_text": "Android Native Development Kit", "paragraph_index": 2}, {"url": "https://github.com/EthicalML/vulkan-kompute", "anchor_text": "Kompute framework", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/machine-learning-and-data-processing-in-the-gpu-with-vulkan-kompute-c9350e5e5d3a", "anchor_text": "Machine Learning in Mobile & Cross-Vendor GPUs Made Simple With Kompute & Vulkan", "paragraph_index": 3}, {"url": "https://github.com/EthicalML/vulkan-kompute/tree/master/examples/android/android-simple", "anchor_text": "example folder in the repository", "paragraph_index": 4}, {"url": "https://developer.android.com/ndk", "anchor_text": "Native Development Kit (NDK)", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Java_Native_Interface", "anchor_text": "Java Native Interface", "paragraph_index": 5}, {"url": "https://www.khronos.org/", "anchor_text": "Khronos Group", "paragraph_index": 7}, {"url": "https://developer.android.com/ndk/guides/graphics", "anchor_text": "dedicated to Vulkan", "paragraph_index": 8}, {"url": "https://github.com/axsaucedo/vulkan-kompute#vulkan-kompute", "anchor_text": "Kompute", "paragraph_index": 10}, {"url": "https://towardsdatascience.com/machine-learning-and-data-processing-in-the-gpu-with-vulkan-kompute-c9350e5e5d3a", "anchor_text": "Machine Learning in Mobile & Cross-Vendor GPUs Made Simple With Kompute & Vulkan", "paragraph_index": 11}, {"url": "https://www.forbes.com/sites/forbestechcouncil/2020/08/03/how-machine-learning-is-powering-a-new-generation-of-app-development/#17c728f62a88", "anchor_text": "a common pattern", "paragraph_index": 14}, {"url": "https://developer.android.com/studio", "anchor_text": "Android Studio", "paragraph_index": 16}, {"url": "https://developer.android.com/ndk/guides#download-ndk", "anchor_text": "Android NDK", "paragraph_index": 16}, {"url": "https://github.com/EthicalML/vulkan-kompute", "anchor_text": "full Kompute repository", "paragraph_index": 17}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/res/layout/activity_kompute_jni.xml", "anchor_text": "activity_kompute_jni.xml", "paragraph_index": 20}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/res/layout/activity_kompute_jni.xml", "anchor_text": "file", "paragraph_index": 20}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/java/com/ethicalml/kompute/KomputeJni.kt", "anchor_text": "KomputeJni.kt", "paragraph_index": 21}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/java/com/ethicalml/kompute/KomputeJni.kt", "anchor_text": "file", "paragraph_index": 21}, {"url": "http://jni", "anchor_text": "C++ JNI bindings section", "paragraph_index": 23}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/java/com/ethicalml/kompute/KomputeJni.kt", "anchor_text": "KomputeJni.kt", "paragraph_index": 27}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/java/com/ethicalml/kompute/KomputeJni.kt", "anchor_text": "file", "paragraph_index": 27}, {"url": "https://github.com/EthicalML/vulkan-kompute", "anchor_text": "Kompute framework", "paragraph_index": 28}, {"url": "https://towardsdatascience.com/machine-learning-and-data-processing-in-the-gpu-with-vulkan-kompute-c9350e5e5d3a", "anchor_text": "the underlying implementation", "paragraph_index": 29}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/cpp/KomputeJniNative.cpp", "anchor_text": "KomputeJniNative.cpp", "paragraph_index": 31}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/cpp/KomputeJniNative.cpp", "anchor_text": "file", "paragraph_index": 31}, {"url": "https://marcelbraghetto.github.io/a-simple-triangle/2019/06/16/part-17/", "anchor_text": "this post", "paragraph_index": 36}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/45ddfe524b9ed63c5fe1fc33773c8f93a18e2fac/src/include/kompute/Core.hpp#L5", "anchor_text": "Core.hpp header file", "paragraph_index": 36}, {"url": "https://github.com/EthicalML/vulkan-kompute/tree/45ddfe524b9ed63c5fe1fc33773c8f93a18e2fac/vk_ndk_wrapper_include", "anchor_text": "vk_ndk_wrapper_include", "paragraph_index": 36}, {"url": "https://github.com/EthicalML/vulkan-kompute/tree/45ddfe524b9ed63c5fe1fc33773c8f93a18e2fac/vk_ndk_wrapper_include", "anchor_text": "files", "paragraph_index": 36}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/45ddfe524b9ed63c5fe1fc33773c8f93a18e2fac/examples/android/android-simple/app/src/main/cpp/KomputeJniNative.cpp#L32", "anchor_text": "jfloatArrayToVector", "paragraph_index": 40}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/45ddfe524b9ed63c5fe1fc33773c8f93a18e2fac/examples/android/android-simple/app/src/main/cpp/KomputeJniNative.cpp#L41", "anchor_text": "vectorToJFloatArray", "paragraph_index": 40}, {"url": "https://github.com/EthicalML/vulkan-kompute/tree/v0.3.2/examples/android/android-simple", "anchor_text": "the repository", "paragraph_index": 43}, {"url": "https://towardsdatascience.com/machine-learning-and-data-processing-in-the-gpu-with-vulkan-kompute-c9350e5e5d3a#6c88", "anchor_text": "our previous post", "paragraph_index": 43}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/cpp/CMakeLists.txt", "anchor_text": "CMakeLists.txt", "paragraph_index": 44}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/cpp/CMakeLists.txt", "anchor_text": "build file", "paragraph_index": 44}, {"url": "https://marcelbraghetto.github.io/a-simple-triangle/2019/06/16/part-17/", "anchor_text": "this post", "paragraph_index": 48}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/45ddfe524b9ed63c5fe1fc33773c8f93a18e2fac/src/include/kompute/Core.hpp#L5", "anchor_text": "Vulkan dynamically", "paragraph_index": 48}], "all_paragraphs": ["Some smartphones nowadays pack laptop-level hardware \u2014 carrying up to 16GB RAM, high-speed multi-core CPUs, and GPUs that can render high-performance complex graphical applications on 4k displays.", "Tapping into that power \u2014 especially the GPU processing power \u2014 for on-device data processing capabilities becomes growingly important as mobile hardware only continues to improve. Recently, this has been opening exciting opportunities around edge computing, federated architectures, mobile deep learning, and more.", "This article provides a technical deep dive that shows you how to tap into the power of mobile cross-vendor GPUs. You will learn how to use the Android Native Development Kit and the Kompute framework to write GPU optimized code for Android devices. The end result will be a mobile app created in Android Studio that is able to use a GPU accelerated machine learning model which we will write from scratch, together with a user interface that will allow the user to send the input to the model.", "No background knowledge beyond programming experience is required, however if you are curious about the underlying AI / GPU compute concepts referenced, we suggest checking out our previous article, \u201cMachine Learning in Mobile & Cross-Vendor GPUs Made Simple With Kompute & Vulkan\u201d.", "You can find the full code in the example folder in the repository.", "The Native Development Kit (NDK) is one of Android\u2019s solution to address the increasing computational demands from mobile apps. The NDK framework enables developers to write low level, highly efficient C and C++ code that can interoperate with the Java/Kotlin application code through the popular Java Native Interface bindings.", "This tooling enables mobile application developers not only to write highly efficient code, but also leverage existing optimized frameworks written in C++ for advanced data processing or machine learning.", "Vulkan is an Open Source project led by the Khronos Group, a consortium consisting of several tech companies who have come together to work towards defining and advancing the open standards for mobile and desktop media (and compute) technologies.", "A large number of high profile (and new) frameworks have been adopting Vulkan as their core GPU processing SDK. The Android NDK\u2019s main documentation page has a full section dedicated to Vulkan, together with hands on examples showing how it can be used in Android mobile devices.", "As you can imagine, the Vulkan SDK provides very low-level access to GPUs, which allows for very specialized optimizations. This is a great asset for data processing and GPU developers \u2014 the main disadvantage is the verbosity involved, requiring 500\u20132000+ lines of code to only get the base boilerplate required to even start writing the application logic. This can result in expensive developer cycles and errors that can lead to larger problems. This was one of the main motivations for us to start the Kompute project.", "Kompute is a framework built on top of the Vulkan SDK which abstracts a lot of boilerplate code required, introducing best practices that expose Vulkan\u2019s computing capabilities. Kompute is the GPU computing framework that we will be using in this tutorial to build the machine learning module in our mobile Android app.", "In this post we will be building upon the Machine Learning use-case we created in the \u201cMachine Learning in Mobile & Cross-Vendor GPUs Made Simple With Kompute & Vulkan\u201d article. We will not be covering the underlying concepts in as much detail as in that article, but we\u2019ll still introduce the high level intuition required in this section.", "To start with, we will need an interface that allows us to expose our Machine Learning logic, which will require primarily two functions:", "This can be visualised in the two workflows outlined in the image below.", "Particularly in app development, this would also be a common pattern for machine learning workflows, for both predictive and explanatory modelling use cases. This often consists of leveraging data generated by your users as they interact directly (or indirectly) with the app itself. This data can then serve as training features for machine learning models. Training of new models can be performed through manual \u201coffline\u201d workflows that data scientists would carry out, or alternatively through automated triggers retraining models.", "We will start by providing a high level overview of the core components in the Android Studio project, including the Kompute C++ bindings, the Android User Interface, the App logic build in Kotlin, and the build files required. If you are interested in a particular area you can jump to its respective section below.", "You will need to make sure you install Android Studio, and also install the Android NDK \u2014 the rest of the dependencies will be installed and configured automatically when opening the project in the IDE.", "Now that you have everything installed, you are able to import the project. For this, you first have to clone the full Kompute repository and import the Android Studio project under examples/android/android-simple/. You should now be able to see the project load and configure the build. Once it opens you are able to run it in an emulator or in your own physical Android phone. This project was tested in the Pixel 2 emulator, and in a physical Samsung Galaxy phone.", "When you load the project you will notice the following key components in the file structure, which we will be breaking down further in detail in the following sections:", "This section covers the Android SDK Java/Kotlin and User Interface components, which should provide an intuition on how the high level business logic interacts with the native C++ JNI bindings.", "The user interface consists primarily of input text boxes and display text labels to enable users to interact with the GPU Accelerated ML processing C++ core (as shown in the screenshot below). If you are curious on exactly the views used, you can inspect it in your Android Studio project, or directly open the activity_kompute_jni.xml file.", "The core of our mobile app can be found in the app/src/main/java/com/ethicalml/kompute folder, inside the KomputeJni.ktfile. This Kotlin file contains the main business logic for our Android app.", "If we look at the shortened version of the class in the code block below we will notice the following key points:", "As you will also notice, the external fun functions do not have any definition \u2014 this is because the definition is provided in the C++ JNI function bindings, which will be covered in the C++ JNI bindings section.", "Now to cover each of the functions in more detail, we start with the onCreate function. This function is in charge of initialising all relevant components in our application. This includes:", "Next up we have the KomputeButtonOnClick(...) function. This function gets triggered when the user presses the \u201cKOMPUTE\u201d button in the app. The main purpose of this function is to retrieve the inputs from the input text boxes in the UI, then use the input data to perform an ML train/inference step through the JNI C++ bindings, and finally display the resulting outputs back in the UI text labels. In further detail:", "The last few functions are only explicitly set as external functions to be bound to the C++ JNI bindings. Furthermore the companion object section provides the name of the shared library that will contain the respective bindings referenced in this activity.", "You can find the full file in the KomputeJni.kt file in the repository.", "This section covers the Android NDK Kompute ML Module files, which includes the build-system, and the C++ source code using the Kompute framework.", "We will be using the core components of Kompute which are outlined in this accompanying diagram. Namely, we will be loading the relevant data in the GPU using Kompute Tensors, processing it with the respective Kompute Operations, and orchestrating this with a Kompute Sequence and a Kompute Manager. We won\u2019t be covering the Kompute architecture in detail but if you want to learn more about the underlying concepts, you can check out the more detailed article on the underlying implementation.", "The core components in the Android NDK bindings module consist of the following:", "The JNI bindings in this case are provided via the KomputeJniNative.cpp file. The skeleton of the class is below \u2014 the function code logic has been redacted for simplicity, and will be explained in more detail below.", "The JNI binding functions have to match the class functions defined in the Java/Kotlin code. The format for the function is:", "In our case the class is in the com.ethicalml.kompute module, in the class KomputeJni and its respective function \u2014 below the name of the functions will reflect this structure.", "Diving one level deeper, we can now go through each section of the file. Starting with the imports, we can see below the imports together with comments outlining their core functionality.", "In Android applications, we actually need to initialize the Vulkan dynamic library manually (which is something that you normally wouldn\u2019t do outside of Android). The reason why this is required, is because the Vulkan library is not actually linked in Android phones. The reason why Android avoids doing any linking is for backwards compatibility, mainly to ensure the app doesn\u2019t crash if the Vulkan library is not found in older phones.", "This means we need to manually find the library in the C++ code and if found, link each function to its respective memory address pointer so our C++ framework can use it. Fortunately, this is something that Kompute does automatically, and we won\u2019t be covering the details in this article as it probably would require an article in itself, but if you\u2019re interested you can read more about it in this post, and you can see how Kompute imports Vulkan dynamically in the Core.hpp header file using the vk_ndk_wrapper_include files.", "Below you can see the implementation of the function that exposes the initVulkan logic\u2014Java_com_ethicalml_kompute_KomputeJni_initVulkan(...). You can see inside this function we run InitVulkan()until the Vulkan library is successfully initialised, or alternatively fails if the maximum number of retries is reached.", "Once Vulkan has been initialised, it is possible to call the remaining functions. The first one is the kompute function, which is in charge of training the model and running an inference request. The function receives the input Xi and Xj values, together with the expected predictions that the model will learn from. It will then return the prediction treating Xi and Xj as unseen data. The function will basically call the KomputeModelML class train function and predict function.", "The last remaining JNI function that will be exposed to the Java/Kotlin code is the komputeParams function, which is in charge of returning the parameters that the machine learning model learns, namely the weight 1 , weight 2 and the bias parameters.", "The only remaining functions are the utility functions that we used in the JNI logic \u2014 namely jfloatArrayToVector and vectorToJFloatArray \u2014 these functions are self explanatory, so we\u2019ll leave it to the reader to explore further in the source if interested.", "Now that we\u2019ve covered the key functions that are bound to the Kotlin / Java class, we can cover the KomputeModelML C++ class that contains the Kompute GPU Accelerated logic.", "The header file for the KomputeModelML class is outlined below, and contains the following key components:", "If you are interested in the full implementation you can find all the files in the repository. Furthermore if you are interested in the theoretical and underlying foundational concepts of these techniques, this is covered fully in our previous post.", "The CMakeLists.txt build file is a very important component in the Android NDK workflow. This section becomes particularly important if you wish to add Kompute into your own project. The cmake file is quite small so we\u2019ll be covering each of the lines separately.", "First we need to make sure the Kompute library is available. Usually you would run the INSTALL target of the Kompute build to be able to use/import the respective library. However in this case we need to make sure Kompute is built for the right Android CPU architecture \u2014our simplest option is adding the main repository as part of the build, which means that Kompute will also be built for the right mobile architectures. If you want to include this in your project, you just need to make sure the path is relative to the Kompute cloned folder.", "We now set the variable VK_ANDROID_INCLUDE_DIR to the vulkan include directory. This contains all the include files we need for Vulkan \u2014 for completeness, Kompute uses the vulkan.h header as well as the vulkan.hpp C++ headers.", "We are now able to add the library that will be used by the Java/Kotlin Android Studio project, which in this case is the shared library kompute-jni.", "We now are able to add all relevant include directories. This includes the VK_ANDROID_INCLUDE_DIRwhich we defined above, as well as the VK_ANDROID_COMMON_DIR which contains Android log.h . The single_include is what contains the kompute/Kompute.hpp header from Kompute. Finally, we need to import the Kompute Dynamic library wrapper vk_ndk_wrapper_include which is necessary as the Vulkan library is imported dynamically. The logic behind this could become a series of articles in itself, so we won\u2019t go down this rabbit-hole, but if you\u2019re interested you can read more in this post, and you can see how Kompute imports Vulkan dynamically.", "To compile the project we\u2019ll want to make sure the VK_USE_PLATFORM_ANDROID_KHR is set, as this is what enables the Android configuration. For this project we also disable the Vulkan debug layers with KOMPUTE_DISABLE_VK_DEBUG_LAYERS.", "Finally, we are able to link the relevant libraries to our kompute-jni shared library target. This includes:", "That\u2019s it \u2014 you are now able to run the application, which will execute the full build. You should then be able to see the Kompute app in your Android Studio emulator, or in you physical phone, where you\u2019ll be able to trigger the processing on your on-device GPU.", "Congratulations, you\u2019ve made it all the way to the end! Although there was a broad range of topics covered in this post, there is a massive amount of concepts that were skimmed through. These include the underlying Android Development workflows, Vulkan concepts, GPU computing fundamentals, machine learning best practices, and more advanced Kompute concepts. Luckily, there are resources online to expand your knowledge on each of these. Here are some links I recommend for further reading:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Chief Scientist @ The Institute for Ethical AI & Machine learning | Engineering Director @ Seldon | Member at Large @ ACM | Building the future of production ML"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1e9da37b7617&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----1e9da37b7617--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1e9da37b7617--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@AxSaucedo?source=post_page-----1e9da37b7617--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@AxSaucedo?source=post_page-----1e9da37b7617--------------------------------", "anchor_text": "Alejandro Saucedo"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F32de426f7278&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&user=Alejandro+Saucedo&userId=32de426f7278&source=post_page-32de426f7278----1e9da37b7617---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1e9da37b7617&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1e9da37b7617&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.mobilemarketer.com/news/mobile-games-sparked-60-of-2019-global-game-revenue-study-finds/569658/", "anchor_text": "only continues to improv"}, {"url": "https://en.wikipedia.org/wiki/Edge_computing", "anchor_text": "edge computing"}, {"url": "https://en.wikipedia.org/wiki/Federated_architecture", "anchor_text": "federated architectures"}, {"url": "https://arxiv.org/abs/1910.06663", "anchor_text": "mobile deep learning"}, {"url": "https://developer.android.com/ndk", "anchor_text": "Android Native Development Kit"}, {"url": "https://github.com/EthicalML/vulkan-kompute", "anchor_text": "Kompute framework"}, {"url": "https://towardsdatascience.com/machine-learning-and-data-processing-in-the-gpu-with-vulkan-kompute-c9350e5e5d3a", "anchor_text": "Machine Learning in Mobile & Cross-Vendor GPUs Made Simple With Kompute & Vulkan"}, {"url": "https://github.com/EthicalML/vulkan-kompute/tree/master/examples/android/android-simple", "anchor_text": "example folder in the repository"}, {"url": "https://developer.android.com/ndk", "anchor_text": "Native Development Kit (NDK)"}, {"url": "https://en.wikipedia.org/wiki/Java_Native_Interface", "anchor_text": "Java Native Interface"}, {"url": "https://streamhpc.com/blog/2017-05-04/what-is-khronos-as-of-today/", "anchor_text": "StreamHPC"}, {"url": "https://www.khronos.org/", "anchor_text": "Khronos Group"}, {"url": "https://developer.android.com/ndk/guides/graphics", "anchor_text": "dedicated to Vulkan"}, {"url": "https://github.com/axsaucedo/vulkan-kompute#vulkan-kompute", "anchor_text": "Kompute"}, {"url": "https://ethicalml.github.io/vulkan-kompute/", "anchor_text": "Documentation"}, {"url": "https://towardsdatascience.com/machine-learning-and-data-processing-in-the-gpu-with-vulkan-kompute-c9350e5e5d3a", "anchor_text": "Machine Learning in Mobile & Cross-Vendor GPUs Made Simple With Kompute & Vulkan"}, {"url": "https://www.forbes.com/sites/forbestechcouncil/2020/08/03/how-machine-learning-is-powering-a-new-generation-of-app-development/#17c728f62a88", "anchor_text": "a common pattern"}, {"url": "https://developer.android.com/studio", "anchor_text": "Android Studio"}, {"url": "https://developer.android.com/ndk/guides#download-ndk", "anchor_text": "Android NDK"}, {"url": "https://github.com/EthicalML/vulkan-kompute", "anchor_text": "full Kompute repository"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/res/layout/activity_kompute_jni.xml", "anchor_text": "activity_kompute_jni.xml"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/res/layout/activity_kompute_jni.xml", "anchor_text": "file"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/java/com/ethicalml/kompute/KomputeJni.kt", "anchor_text": "KomputeJni.kt"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/java/com/ethicalml/kompute/KomputeJni.kt", "anchor_text": "file"}, {"url": "http://jni", "anchor_text": "C++ JNI bindings section"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/java/com/ethicalml/kompute/KomputeJni.kt", "anchor_text": "KomputeJni.kt"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/java/com/ethicalml/kompute/KomputeJni.kt", "anchor_text": "file"}, {"url": "https://github.com/EthicalML/vulkan-kompute", "anchor_text": "Kompute framework"}, {"url": "https://ethicalml.github.io/vulkan-kompute/overview/reference.html", "anchor_text": "Architecture Design"}, {"url": "https://towardsdatascience.com/machine-learning-and-data-processing-in-the-gpu-with-vulkan-kompute-c9350e5e5d3a", "anchor_text": "the underlying implementation"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/cpp/KomputeJniNative.cpp", "anchor_text": "KomputeJniNative.cpp"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/cpp/KomputeJniNative.cpp", "anchor_text": "file"}, {"url": "https://marcelbraghetto.github.io/a-simple-triangle/2019/06/16/part-17/", "anchor_text": "this post"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/45ddfe524b9ed63c5fe1fc33773c8f93a18e2fac/src/include/kompute/Core.hpp#L5", "anchor_text": "Core.hpp header file"}, {"url": "https://github.com/EthicalML/vulkan-kompute/tree/45ddfe524b9ed63c5fe1fc33773c8f93a18e2fac/vk_ndk_wrapper_include", "anchor_text": "vk_ndk_wrapper_include"}, {"url": "https://github.com/EthicalML/vulkan-kompute/tree/45ddfe524b9ed63c5fe1fc33773c8f93a18e2fac/vk_ndk_wrapper_include", "anchor_text": "files"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/45ddfe524b9ed63c5fe1fc33773c8f93a18e2fac/examples/android/android-simple/app/src/main/cpp/KomputeJniNative.cpp#L32", "anchor_text": "jfloatArrayToVector"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/45ddfe524b9ed63c5fe1fc33773c8f93a18e2fac/examples/android/android-simple/app/src/main/cpp/KomputeJniNative.cpp#L41", "anchor_text": "vectorToJFloatArray"}, {"url": "https://en.wikipedia.org/wiki/OpenGL_Shading_Language", "anchor_text": "shader code that will be executed as machine code inside of the GPU"}, {"url": "https://github.com/EthicalML/vulkan-kompute/tree/v0.3.2/examples/android/android-simple", "anchor_text": "the repository"}, {"url": "https://towardsdatascience.com/machine-learning-and-data-processing-in-the-gpu-with-vulkan-kompute-c9350e5e5d3a#6c88", "anchor_text": "our previous post"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/cpp/CMakeLists.txt", "anchor_text": "CMakeLists.txt"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/v0.3.2/examples/android/android-simple/app/src/main/cpp/CMakeLists.txt", "anchor_text": "build file"}, {"url": "https://marcelbraghetto.github.io/a-simple-triangle/2019/06/16/part-17/", "anchor_text": "this post"}, {"url": "https://github.com/EthicalML/vulkan-kompute/blob/45ddfe524b9ed63c5fe1fc33773c8f93a18e2fac/src/include/kompute/Core.hpp#L5", "anchor_text": "Vulkan dynamically"}, {"url": "https://towardsdatascience.com/machine-learning-and-data-processing-in-the-gpu-with-vulkan-kompute-c9350e5e5d3a", "anchor_text": "Machine Learning in Mobile & Cross-Vendor GPUs Made Simple With Kompute & Vulkan"}, {"url": "https://towardsdatascience.com/parallelizing-heavy-gpu-workloads-via-multi-queue-operations-50a38b15a1dc", "anchor_text": "Parallelizing GPU-intensive Workloads via Multi-Queue Concurrency using Kompute"}, {"url": "https://axsaucedo.github.io/vulkan-kompute/", "anchor_text": "Kompute Documentation"}, {"url": "https://ethical.institute/mle.html", "anchor_text": "The Machine Learning Engineer Newsletter"}, {"url": "https://developer.android.com/ndk/guides", "anchor_text": "Android NDK Getting Started Documentation"}, {"url": "https://github.com/EthicalML/awesome-production-machine-learning/", "anchor_text": "Awesome Production Machine Learning"}, {"url": "https://www.fast.ai/2018/09/26/ml-launch/", "anchor_text": "Introduction to ML for Coders course"}, {"url": "https://vulkan-tutorial.com/", "anchor_text": "Vulkan SDK Tutorial"}, {"url": "https://medium.com/tag/vulkan?source=post_page-----1e9da37b7617---------------vulkan-----------------", "anchor_text": "Vulkan"}, {"url": "https://medium.com/tag/android-ndk?source=post_page-----1e9da37b7617---------------android_ndk-----------------", "anchor_text": "Android Ndk"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----1e9da37b7617---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/mobile-app?source=post_page-----1e9da37b7617---------------mobile_app-----------------", "anchor_text": "Mobile App"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----1e9da37b7617---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1e9da37b7617&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&user=Alejandro+Saucedo&userId=32de426f7278&source=-----1e9da37b7617---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1e9da37b7617&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&user=Alejandro+Saucedo&userId=32de426f7278&source=-----1e9da37b7617---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1e9da37b7617&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1e9da37b7617--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F1e9da37b7617&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----1e9da37b7617---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----1e9da37b7617--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----1e9da37b7617--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----1e9da37b7617--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----1e9da37b7617--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1e9da37b7617--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1e9da37b7617--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----1e9da37b7617--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----1e9da37b7617--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@AxSaucedo?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@AxSaucedo?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Alejandro Saucedo"}, {"url": "https://medium.com/@AxSaucedo/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "616 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F32de426f7278&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&user=Alejandro+Saucedo&userId=32de426f7278&source=post_page-32de426f7278--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fb1b4684c4c42&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgpu-accelerated-machine-learning-in-your-mobile-applications-using-the-android-ndk-vulkan-kompute-1e9da37b7617&newsletterV3=32de426f7278&newsletterV3Id=b1b4684c4c42&user=Alejandro+Saucedo&userId=32de426f7278&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}