{"url": "https://towardsdatascience.com/devops-for-data-science-making-your-python-project-reproducible-f55646e110fa", "time": 1683008301.4804459, "path": "towardsdatascience.com/devops-for-data-science-making-your-python-project-reproducible-f55646e110fa/", "webpage": {"metadata": {"title": "Devops for Data Science: Making your Python Project Reproducible | by Alex Remedios | Towards Data Science", "h1": "Devops for Data Science: Making your Python Project Reproducible", "description": "At the end of my first year at as as software engineer at Amazon, my manager taught me a valuable lesson. Multiplying the effectiveness of my team is as important as my individual contributions. I\u2026"}, "outgoing_paragraph_urls": [{"url": "https://improbable.io/defence", "anchor_text": "Improbable", "paragraph_index": 1}, {"url": "https://en.wikipedia.org/wiki/Enron_Corpus", "anchor_text": "Enron", "paragraph_index": 2}, {"url": "http://aosabook.org/en/packaging.html", "anchor_text": "The Architecture of Open Source Applications", "paragraph_index": 4}, {"url": "https://mybinder.org/", "anchor_text": "binder", "paragraph_index": 8}, {"url": "https://python-poetry.org/", "anchor_text": "Poetry", "paragraph_index": 18}, {"url": "https://en.wikipedia.org/wiki/Dependency_hell", "anchor_text": "dependency hell", "paragraph_index": 28}, {"url": "https://python-poetry.org/", "anchor_text": "Poetry", "paragraph_index": 42}, {"url": "https://www.anaconda.com/blog/understanding-conda-and-pip", "anchor_text": "supporting packages written in any language", "paragraph_index": 44}, {"url": "https://anaconda.org/anaconda", "anchor_text": "https://anaconda.org/anaconda", "paragraph_index": 55}, {"url": "https://pypi.org/", "anchor_text": "https://pypi.org/", "paragraph_index": 55}, {"url": "https://anaconda.org/conda-forge", "anchor_text": "https://anaconda.org/conda-forge", "paragraph_index": 56}, {"url": "https://github.com/pysal/pysal/issues/1034", "anchor_text": "not guaranteed", "paragraph_index": 57}, {"url": "https://github.com/features/actions", "anchor_text": "Github Actions", "paragraph_index": 66}, {"url": "http://treebeard.io", "anchor_text": "Treebeard", "paragraph_index": 66}, {"url": "http://treebeard.io", "anchor_text": "treebeard.io", "paragraph_index": 70}], "all_paragraphs": ["At the end of my first year at as as software engineer at Amazon, my manager taught me a valuable lesson. Multiplying the effectiveness of my team is as important as my individual contributions.", "I took this lesson with me to the modelling team at Improbable, where I focussed on maximising the scientists\u2019 productivity as we tackled large-scale simulation projects. These experiences have now led me to advocate that we work together on a problem I have experienced for almost a decade.", "It\u2019s 2013, I\u2019m new to Python development and am playing with some natural language processing code. Inferring people\u2019s attitudes based on the contents of their emails (thanks Enron). It seemed like sci-fi to me at the time.", "Unfortunately this remained sci-fi for a while longer as it took me 4 days to get the author\u2019s code running. Missing system libraries, conflicting dependencies, unknown Python version. Software engineering progressed a lot over the next 7 years, but this problem still remains. Why is it so hard to run each other\u2019s code?", "Python package management has a long and colourful history, a sentence I never thought I\u2019d write. The Architecture of Open Source Applications describes the several migrations that took the community from one packaging system to the next. After years of iteration, we have ended up with several mainstream ways of installing Python code and two different major package indexes. Each Python developer needs to invest some time learning about them to ensure their work is usable by others.", "Achieving reproducibility in the general sense is really hard \u2014 data versioning, guarantees of determinism, etc. This guide tackles just the dependency management problem. It is possible for each Python developer to ensure their code can be installed on their peer\u2019s machine. My goal is to help impart the \u2018devops\u2019 knowledge necessary to do it, so you can transform the maturity of your work.", "By default, your project code is intertwined with all the stuff installed on your laptop. With some effort applied to dependency configuration though, it is a self-contained product which will thrive in the open source ecosystem.", "Getting this organised early on in a project is the key. It leaves you with the simpler task of maintaining your environment so that your work is a joy to build on top of, deploy, and publish!", "Reproducible projects are more attractive to collaborators, faster to iterate on, and portable. This is great for automating testing, analysis and sharing your work on services like binder.", "This guide is not about writing code, but around the activities necessary to work effectively with it once it\u2019s written. In traditional software development, \u2018operations\u2019 were not the developer\u2019s concern. Over the last 15 years however, the roles have merged (hence developer-operations), as improved tooling allowed individuals to both write and run their code. Learning operational skills lets you make an impact!", "Getting your work into people\u2019s hands is different depending on if you are producing a library or application. If you are building libraries, chances are you already know much of the mechanics of dependency management, and how to make your work available via Pypi or a conda channel.", "Application builders on the other hand who may be analysing data in a Jupyter notebook, creating a CLI tool, or building a dashboard are the ones who stand to benefit the most from rethinking dependency management.", "I want to challenge the idea that simply sharing your code means your analysis is reproducible. Your code is in fact the tip of an iceberg, and in order for it to run in a new environment, a family of tools is necessary to reconstruct the iceberg.", "Assuming you have uploaded your repo to GitHub, how do we ensure others can reproduce the next level of your project environment \u2014 the Python packages? That\u2019s where it\u2019s necessary to pick a package manager and create a dependencies file.", "You are no doubt familiar with the package manager client: pip install, conda activate , etc. but this is just one piece of the system.", "Each package manager client has config on your local device telling it what is needed for the current project (e.g. matplotlib v3.2.1, python 3.8+), which package indexes should be checked, and more.", "Using the config, the client calls up one or more package indexes to resolve which files need to be downloaded onto your system, then downloads these files from potentially different package stores.", "Now that we\u2019ve delineated the different components used to reproduce your project dependencies we can assess the main package manager client options.", "I\u2019m only going to discuss pip, pipenv, and conda, as they will cover almost all of your use cases. I find myself regularly using all three for different reasons, and there are more out there if you are feeling adventurous (special shout out to Poetry).", "\u2705 Fast install speed\u2705 simple config file\u274c Does not lock transitive dependencies\u274c Must combine two separate CLI tools\u274c Cannot lock Python version\u2139\ufe0f Configured using a plain text requirements.txt", "Pip is the default Python package management client which is automatically installed with Python. Virtualenv lets you create an isolated directory for your project with its own Python binaries and dependencies.", "venv/bin contains a copy of your Python interpreter and scripts for activating your virtual environment. venv/lib contains site-packages where pip install places your Python dependencies.", "Together Pip + Virtualenv let you have multiple repos running on one machine using different Python versions and dependencies.", "\u26a0\ufe0f Without virtualenv, Pip writes to your global site-packages directory which can cause chaos and conflicts.\u2139\ufe0f You can locate the site-packages directory for your current python environment using which", "Nowadays Pip + Virtualenv feels a bit low-level, but it\u2019s the simplest possible solution to the problem of having multiple projects polluting your global package environment on your laptop.", "I recommend manually writing your requirements.txt. You probably don\u2019t have more than 10 direct requirements and the file format is super simple. Manually writing the file also encourages you to be mindful of what your project depends on.", "The other way to create your requirements.txt is freezing your current environment: pip freeze > requirements.txt but you should mitigate the following drawbacks after creating the file.", "You may wonder why you only installed two packages yet you now have a list of 50 in your requirements.txt, it\u2019s because pip freeze does not know the difference between a package you directly need and a package that is a sub-dependency.", "This is bad because when you want to remove a dependency you will have to manually identify and remove all sub-dependencies it pulled in with it. Alternatively your Python environment is going to have a lot of unwanted dependencies which can lead to dependency hell.", "Version pinning is when you specify exactly which version of a dependency your project should use, as seen above (e.g. tornado==6.0.3). Whilst it is useful to be able to guarantee that others will have the same package versions installed with your project, pinning every dependency in your requirements.txt is not the best solution for 3 reasons.", "The first reason is you have to manually update each package by changing the pinned version. Minor version updates to your dependencies contain bug fixes and other improvements. Regularly updating your dependencies is useful for preventing code rot.", "The second reason is that when you add a new requirement it is more likely to cause a conflict. E.g. depending on jupyter-client==6.0.0 when you only need jupyter-client==6.* can result in an unnecessary conflict if you then install nbconvert which depends on jupyter-client>=6.1.0.", "The final reason not to pin all your requirements is it\u2019s confusing for others to work with your code if they are encountering the problems above. How will they know if your code actually needs a specific version of a requirement?", "All being said, you should only pin versions on specific dependencies where necessary. A good idea is to leave a comment in such a case.", "If you want to reap the benefits of locking the versions of all dependencies without these issues then Pipenv is right for you.", "\ud83d\udc4d Recommended unless you need lots of scientific libraries\u2705 Locks transitive dependencies\u2705 Locks Python version\u2705 CLI tool automatically creates dependency config\u274c Locking transitive dependencies can be slow\u2139\ufe0f Configured using a TOML-formatted Pipfile and a JSON-formatted Pipfile.lock", "Pipenv is like pip + virtualenv wrapped in a command-line tool which also locks your transitive dependencies.", "Locking pins your general requirements to exact versions of the whole transitive closure. e.g. if you say you needmatplotlib==3.2 , locking sharpens this to say you last ran the code using matplotlib==3.2.1 + the exact versions of the sub-dependencies which were used", "Earlier I said version pinning is bad, but pipenv\u2019s locking is sufficiently smart to give you the benefit of version pinning without the fragility.", "The Pipfile is analogous to the requirements.txt, it is human-readable and specifies your direct Python package dependencies + your Python version (unlike requirements.txt).", "You should not generally need to edit these directly because the pipenv CLI tool manages them for you when you pipenv install something.", "The lockfile is regenerated every time the Pipfile changes. It describes the transitive closure of your project, i.e. all dependencies (not just direct ones) that are currently installed. Pipfile.lock is great for deploying your work: It describes exactly which packages to install, taking into account some are only needed on specific operating systems.", "Note: A fast-growing alternative to Pipenv is Poetry.", "\ud83d\udc4d Recommended for large data science or machine learning projects\u2705 Better support for native dependencies\u2705 Locks Python version\u2705 Default installation includes useful data science packages\u274c Regularly slow to install due to solving environment\u274c Does not lock transitive dependencies\u2139\ufe0f Configured using a YAML-formatted environment.yml", "Conda is the most powerful of the three package managers due to it supporting packages written in any language, but is an order of magnitude slower than pip + virtualenv.", "Conda is designed to work at a lower-level than pip \u2014 with binaries rather than Python packages. This has a couple of nice properties:", "Firstly it means Python and Pip are just conda packages. You can install them in a conda environment and use Pip + conda in the same way you would use Pip + virtualenv. I.e. you don\u2019t need a virtualenv if you are already in a conda environment.", "Secondly conda\u2019s generality means that Python packages which depend on non-Python packages just tend to work better.", "Example: Installing cartopy (a common mapping library)Cartopy can be tricky to get running. It is a Python library which you can install via Pypi, but it\u2019s common for Pypi packages to not include all of the native dependencies they need to run.", "As a result you may have to install the Python code with pip", "Then fill in missing libraries with your platform-specific package manager, e.g. brew , yum , or apt-get .", "Conda does not care that cartopy is written in python but proj is written in C++, it installs them all the same.", "conda install cartopy takes care of it all.", "This feature of conda is great for scientific use cases which often rely on these native dependencies.", "Because of conda\u2019s capability to manage native dependencies, it has a different package structure to Pypi. As a result you install conda packages from a conda channel.", "The default channel where packages are sourced from is https://anaconda.org/anaconda, similar to how https://pypi.org/ is the default channel for pip.", "Unlike pip however, there are non-default channels containing many packages you will need e.g. the conda forge channel (https://anaconda.org/conda-forge).", "Pypi, anaconda, conda forge, and other channels have their own namespaces . This means it is possible, but not guaranteed that a common package will have the same name in each source.", "\u26a0\ufe0f\ud83d\udc0d Don\u2019t assume a requirements.txt can be pasted into an environment.yml without changing some package names (unless you paste them into the pip: section).", "Similar to pip, I recommend manually maintaining your environment.yml, but if things have gotten away from you:", "The \u2014-no-builds flag prevents the inclusion of platform-specific build IDs. Without this flag you will encounter issues such as ResolvePackageNotFound even for dependencies which exist on every platform.", "--from-history was introduced in Conda 4.7.12 so you may need to update conda. This flag is great if you spent a while getting something working and forgot to note down what you installed. Conda will only export packages and versions which you have explicitly installed using conda install .", "\u26a0\ufe0f \u2744\ufe0f If you do not use these flags you will experience the same issues as pip freeze", "Phew, that may have been the longest you\u2019ve spent proactively learning about configuring conda environments and the like.", "At this point we\u2019ve picked a package manager and have configured it to successfully install our dependencies. This is a huge improvement and lets collaborators get started quickly, but how do we ensure reproducibility is not eroded over time as the project grows?", "The manual way is by regularly installing your project on a fresh machine just to check if it still runs. That sounds inefficient though, so I\u2019m going to tease the automatic way before finishing for now.", "The process of monitoring the overall quality of your work is called continuous integration (CI), and it centres around hooking up an automation service to your source code repository. Continuous integration is outside the scope of this document but I\u2019ll point you towards two products: Github Actions, which is by default integrated into Github, and Treebeard (full disclosure: which I am working on), which can also be installed on Github repos to track reproducibility.", "Once you\u2019ve gone through the trouble of making your project reproducible, not attaching a CI service would be a waste. It would be like writing a blog post then not putting it through spellcheck. On that note, let\u2019s wrap up.", "This post discussed some of the devops practices which help you work more effectively in a team and get your code running in the outside world. For related practices, read up on:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Software Engineer, Founder of Treebeard Technologies, treebeard.io"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff55646e110fa&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f55646e110fa--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f55646e110fa--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@alex_remedios?source=post_page-----f55646e110fa--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@alex_remedios?source=post_page-----f55646e110fa--------------------------------", "anchor_text": "Alex Remedios"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F54661bb8de03&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&user=Alex+Remedios&userId=54661bb8de03&source=post_page-54661bb8de03----f55646e110fa---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff55646e110fa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff55646e110fa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://improbable.io/defence", "anchor_text": "Improbable"}, {"url": "https://en.wikipedia.org/wiki/Enron_Corpus", "anchor_text": "Enron"}, {"url": "http://aosabook.org/en/packaging.html", "anchor_text": "The Architecture of Open Source Applications"}, {"url": "https://xkcd.com/1987/", "anchor_text": "https://xkcd.com/1987/"}, {"url": "https://mybinder.org/", "anchor_text": "binder"}, {"url": "https://python-poetry.org/", "anchor_text": "Poetry"}, {"url": "https://en.wikipedia.org/wiki/Dependency_hell", "anchor_text": "dependency hell"}, {"url": "https://pypi.org/simple", "anchor_text": "https://pypi.org/simple"}, {"url": "https://python-poetry.org/", "anchor_text": "Poetry"}, {"url": "https://www.anaconda.com/blog/understanding-conda-and-pip", "anchor_text": "supporting packages written in any language"}, {"url": "https://anaconda.org/anaconda", "anchor_text": "https://anaconda.org/anaconda"}, {"url": "https://pypi.org/", "anchor_text": "https://pypi.org/"}, {"url": "https://anaconda.org/conda-forge", "anchor_text": "https://anaconda.org/conda-forge"}, {"url": "https://github.com/pysal/pysal/issues/1034", "anchor_text": "not guaranteed"}, {"url": "https://anaconda.org/conda-forge/openssl/files", "anchor_text": "See for yourself"}, {"url": "https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#exporting-an-environment-file-across-platforms", "anchor_text": "See the official guide here."}, {"url": "https://github.com/features/actions", "anchor_text": "Github Actions"}, {"url": "http://treebeard.io", "anchor_text": "Treebeard"}, {"url": "https://aws.amazon.com/devops/continuous-integration/", "anchor_text": "Continuous Integration"}, {"url": "https://docker-curriculum.com/", "anchor_text": "Docker"}, {"url": "https://www.hashicorp.com/resources/what-is-infrastructure-as-code/", "anchor_text": "Infrastructure as code"}, {"url": "https://medium.com/tag/data-science?source=post_page-----f55646e110fa---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----f55646e110fa---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/jupyter-notebook?source=post_page-----f55646e110fa---------------jupyter_notebook-----------------", "anchor_text": "Jupyter Notebook"}, {"url": "https://medium.com/tag/github?source=post_page-----f55646e110fa---------------github-----------------", "anchor_text": "Github"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----f55646e110fa---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff55646e110fa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&user=Alex+Remedios&userId=54661bb8de03&source=-----f55646e110fa---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff55646e110fa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&user=Alex+Remedios&userId=54661bb8de03&source=-----f55646e110fa---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff55646e110fa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f55646e110fa--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff55646e110fa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f55646e110fa---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f55646e110fa--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f55646e110fa--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f55646e110fa--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f55646e110fa--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f55646e110fa--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f55646e110fa--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f55646e110fa--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f55646e110fa--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@alex_remedios?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@alex_remedios?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Alex Remedios"}, {"url": "https://medium.com/@alex_remedios/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "62 Followers"}, {"url": "http://treebeard.io", "anchor_text": "treebeard.io"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F54661bb8de03&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&user=Alex+Remedios&userId=54661bb8de03&source=post_page-54661bb8de03--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fc694be6d8243&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevops-for-data-science-making-your-python-project-reproducible-f55646e110fa&newsletterV3=54661bb8de03&newsletterV3Id=c694be6d8243&user=Alex+Remedios&userId=54661bb8de03&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}