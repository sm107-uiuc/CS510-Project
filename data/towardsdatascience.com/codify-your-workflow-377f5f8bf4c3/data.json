{"url": "https://towardsdatascience.com/codify-your-workflow-377f5f8bf4c3", "time": 1682993360.8684359, "path": "towardsdatascience.com/codify-your-workflow-377f5f8bf4c3/", "webpage": {"metadata": {"title": "Codify your workflow. Encoding my workflow saves time and\u2026 | by Schaun Wheeler | Towards Data Science", "h1": "Codify your workflow", "description": "I think I\u2019m like most data scientists in that there are certain things I tend to do repeatedly across projects: there are certain patterns I check for, or certain things I plot, or certain\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/Valassis-Digital-Media/theto", "anchor_text": "Theto", "paragraph_index": 0}, {"url": "https://books.google.com/books?id=wYhAAAAAYAAJ&printsec=frontcover", "anchor_text": "Ten Books on Architecture", "paragraph_index": 3}, {"url": "https://books.google.com/books?id=0qG4TQi-e-4C&printsec=frontcover", "anchor_text": "Fred Brooks argues", "paragraph_index": 3}, {"url": "https://towardsdatascience.com/data-is-a-stakeholder-31bfdb650af0", "anchor_text": "seem to have arisen", "paragraph_index": 4}, {"url": "https://towardsdatascience.com/data-is-a-stakeholder-31bfdb650af0", "anchor_text": "Sometimes I have to go through it hundreds of times a day", "paragraph_index": 10}, {"url": "https://bokeh.pydata.org/en/latest/docs/user_guide/tools.html#hovertool", "anchor_text": "create tooltips", "paragraph_index": 24}, {"url": "http://aampe.co", "anchor_text": "aampe.co", "paragraph_index": 33}], "all_paragraphs": ["EDIT: I recently refactored the code from this post and published it as the Theto python package.", "I think I\u2019m like most data scientists in that there are certain things I tend to do repeatedly across projects: there are certain patterns I check for, or certain things I plot, or certain relationships I try to understand. Sometimes it\u2019s because I\u2019ve made a mistake often enough that I find it pays to automatically guard against it. Sometimes it\u2019s because I just find that, personally, certain ways of looking at a problem help me wrap my mind around it. In any case, large parts of my workflow for any given project very often look very similar to large parts of my workflows for previous projects. Not surprisingly, I\u2019ve found it useful to reduce the overhead of these repetitive activities.", "While I\u2019ve understood the value of reducing overhead through automation ever since I learned how to code, I never got much advice on how to do it. It\u2019s just something I picked up. In this post, I try to summarize some of the things I\u2019ve learned, and I\u2019ll use some code from a recently-automated part of my workflow as an example.", "Good design advice has been around at least since Vitruvius wrote Ten Books on Architecture (still a worthwhile read), where he said that good design achieves firmness, usefulness, and delight. It\u2019s relatively easy to translate the first two of those ideals to workflow automation design: whatever we build, it should consistently do the job we want it to do at the scale, speed, and quality that we need. But I think it\u2019s the last ideal \u2014 delight \u2014 that most often makes the difference between a workable design and a good design. Fred Brooks argues that delight, in the context of technical design, should be thought of as \u201clogical beauty\u201d, and argues that a logically beautiful product is one that minimizes mental effort.", "I think minimization of mental effort is an interesting goal for a data science workflow, since many recent embarrassments in the data industry seem to have arisen from practitioners not expending enough mental effort thinking about the potential consequences of their design decisions. So we need to carefully select which areas of mental effort to minimize. That means the first step of a good design is, no matter how trite it sounds, to decide what we want to accomplish.", "Think about driving a car. I drive a car to go from where I\u2019m going as efficiently as possible. A well-designed car should allow me to reserve as much of my attention as possible for those things most directly related to accomplishing my purpose. That means minimizing the mental effort on everything else. In other words, while I\u2019m driving, I should be able to focus on making my turn at the right place, on avoiding things like pedestrians or lampposts, and things like that. I should not be focused on making sure the engine runs, or on shifting gears, or on how the brakes work. If I used the car for another purpose I might focus on those things, but they are not proper to the accomplishment of the particular purpose I have chosen. A good design shouldn\u2019t distract me or prevent me from paying attention to the things that could prevent from from accomplishing my purpose.", "Propriety is a somewhat old-fashioned way of talking about relevance. Brooks defines propriety in design as \u201cdo not introduce what is immaterial.\u201d I\u2019ve found it useful to think about propriety in terms of the tradeoffs I used in the analogy. If doing something ensures that I am not prevented from accomplishing my purpose, it is proper to that purpose. If doing something just facilitates the the accomplishment of the purpose, it\u2019s not proper to that purpose. Failing to avoiding pedestrians or lampposts will necessarily prevent me from getting where I want to go. That is true if I travel by automobile, foot, skateboard, bike, airplane, or train. Failing to have a combustion engine won\u2019t necessarily prevent me from getting where I want to go; therefore, it\u2019s not proper to the design, no matter how convenient it is a matter of implementation. So after we\u2019ve defined our purpose, define what\u2019s proper to that purpose: as a rule of thumb, if it can move us forward, it may or may not be proper; if it can keep us from moving forward, it\u2019s proper. Good design minimizes the mental effort expended on tasks that are not proper to our intended purpose.", "Orthogonality is another component of logical beauty. Brooks summarizes this as \u201cdo not link what is independent\u201d. In other words: my ability to avoid pedestrians and lamp posts partially depends upon being able to see those things, and partially upon being able to maneuver the car to avoid them. A windshield\u2019s functionality and a steering wheel\u2019s functionality should be independent of one another. A design that failed to maintain that independence would be a poor design. So after we define the proper components of our workflow, we minimize dependencies. Good design keeps proper components separate from components that aren\u2019t proper so we don\u2019t accidentally minimize the mental effort we expend on the the things that actually need our full attention. Likewise, good design keeps non-proper components from each other so we don\u2019t accidentally minimize mental effort in ways we didn\u2019t anticipate.", "Generality is the last principle I\u2019ll talk about before moving on to the example. Brooks summarizes it as \u201cdo not restrict what is inherent.\u201d In other words, a tire (or engine or wiring, etc.) that fits one car shouldn\u2019t be designed to fit only that car without a very good reason. Good design demands a reason before restricting the use cases to which a piece of functionality can apply. This makes it easier to accommodate unanticipated needs without requiring us to rebuild the whole product.", "Designs that follow the above principles tend to be logically beautiful, in that they minimize our mental effort in all the right places.", "I work a lot with geolocation data, and I often have the need to plot that data. Sometimes I need to plot shapes, and other times I need points. Sometimes I need to see those objects against the background of a satellite image to get some rough context, sometimes I need the more detailed context of roads or labels. I normally have to use some form of this workflow several times a week. Sometimes I have to go through it hundreds of times a day. At any rate, I have to do it often enough that it\u2019s a good candidate for minimizing mental effort. So I only have one purpose: graphically represent longitude and latitude pairs on a picture that represents the real-world context of those coordinates. That purpose defines propriety: anything that doesn\u2019t actually put shapes on the picture is not proper to my purpose, and therefore mental effort expended on that thing should be minimized. In the case of the current example, defining purpose and propriety were relatively easy. That\u2019s not always the case.", "Now I need to worry about orthogonality. Imagine speaking to someone with absolutely no technical expertise. I usually picture either one of my earliest managers described everything involving code as \u201cnew-fangled\u201d, or my mother who still refuses to get an email address, or a college freshman majoring in the humanities. You get the picture. My task creates a set of questions that my imaginary novice would see as being both necessary and sufficient to create my desired outcome. If my imaginary novice can say \u201cbut why do you need the answer to X?\u201d, that means I\u2019ve included an unnecessary question. If my imaginary novice can say \u201c but I don\u2019t understand how the answers to X, Y, and Z will lead to the outcome\u201d, that means I\u2019m either missing a question or haven\u2019t asked the right question. The reason I like to use an imaginary novice as a sounding board is because I tend to get too technical too fast when I try to design everything. Because I know how to implement things, my brain jumps to implementation questions sooner than it should. If you have a real flesh-and-blood novice who is willing and able to be your sounding board, use that person instead of an imaginary one.", "If my goal is to get shapes on a picture, then I have only three questions:", "Pretty basic questions, right? But these basic questions force me to think in terms of foundational building blocks, which makes it easier to preserve orthogonality. If whatever I eventually build operates in a way that I can\u2019t change how I get shapes without changing how I put those shapes on a picture, then I\u2019ve probably built the thing wrong. The different pieces of functionality should be as independent as possible.", "Now that I have orthogonal components, I want to make them as general as possible. For that, I need use cases. I\u2019m already biased with preferred ways of doing of the three things I need to do, but I\u2019ll be better off in the long run if I can think of as many ways \u2014 preferred or not \u2014 as I can. I might not implement support for all the use cases I list: that will depend on the constraints of the project (mostly how much time, how many resources, and how many competing priorities I have). It\u2019s still best to know as many use cases as possible up front \u2014 often, in the course of implementing support for critical use cases, it\u2019s pretty trivial to support additional, as-yet-not-needed use cases simply as a matter of course. This can reduce frustration and wasted time down the road. Here are a bunch of use-cases for the current example:", "Where do I get the shapes?", "Where do I get the picture?", "How do I get the shapes on the picture?", "The list isn\u2019t exhaustive, of course. If I had more time to think about it, I could build out a more complete list, and would probably be better off for it. But as I have limited time and other things to do, I\u2019m content that I have at least two answers for every question. All I\u2019m really trying to do is avoid a myopic focus on only my immediate needs.", "You can jump to the bottom of this section to see the full code I implemented, but it might be helpful to read through this discussion first to understand what I did.", "I chose to rely entirely on the Bokeh library to plot the shapes on the pictures because I already know and like that library \u2014 it was easy to get something up and running quickly. Likewise, I chose to rely entirely on Google Maps to get the picture because it provides a single source for satellite images, maps, and annotated versions of both of those two things, and because Bokeh already offers a convenient way to call that Google Maps API.", "I did very little to minimize my mental effort for those parts of my workflow, because crafting the look and feel of my visualization \u2014 choosing the background image, deciding what shapes to plot, and styling and annotating those shapes \u2014 is all proper to my purpose, so I want to maintain as much granular control over those things as possible.", "The Python class I implemented has a `prepare_plot` method, which for the most part just takes optional keyword arguments that get passed to a Bokeh `GMapPlot` object that the method instantiates:", "The class also has an `add_layer` method for placing shapes on the picture:", "This method call has only two required arguments. One is a label that tells the method what data source the shape should reference (again, more on that later). The other is a Bokeh model \u2014 the two models I use most often are `Patches`, for plotting polygons, and `Circle`, for plotting coordinate pairs. There is an optional `tooltips` argument that takes either a string or a list of tuples to create tooltips that should appear when a mouse hovers over a shape. All other keyword argument are passed to the Bokeh model, which gives me granular control over how the shape looks. Most Bokeh models allow both the border and the area of a shape to be styled differently. For example, if I wanted a red dot with a black border, I would set `fill_color` to red and `line_color` to black. Likewise, if I wanted the fill to be 50% transparent but the border to be 0% transparent, I would set `fill_alpha` to 0.5 and `line_alpha` to 1.0. Often, I want fill and line to be styled the same way, so the `add_layer` method accepts additional keywords. If I set `alpha` to 0.5, then both `fill_alpha` and `line_alpha` will be set to 0.5. It\u2019s a small reduction in mental effort, but it\u2019s enough of a reduction to be convenient.", "The majority of the mental-effort-reduction work I did, however, had to do with preparing the data for plotting. All four of the use cases I mentioned for getting shapes \u2014 longitude/latitude pairs, well-known text, shapely objects, and geohashes \u2014 are use case that I regularly encounter in my daily work. I found that a lot of my time investigating data wasn\u2019t spent on actually trying to understand the plot, but rather on getting the data into the format I needed. I especially incurred a lot of overhead when I had to switch data source types part way through an analysis (for example, I may have set up a workflow to plot geo-coordinate pairs, and then suddenly found I needed to plot geohashes; that required me to restructure part of my workflow).", "The `add source` method requires data and a label:", "The data can be a list containing any one of the four types of input values I\u2019ve mentioned, or it can be a dataframe where one column is comprised of those input values (and that column must be explicitly specified). This method performs four basic functions:", "The class does a bunch of other things, but for the most part, the structure of the class itself is nothing more than an instantiation of the three key parts of my workflow: get shapes, get a picture, put the shapes on the picture. Because I codified that workflow using a few sound design principles (purpose \u2192 propriety \u2192 orthogonality \u2192 generality), it\u2019s relatively easy to extend the class to accommodate new needs. For example, I\u2019d like to expand the class to use WMTS tiles instead of Google Maps. Because of the way the class is designed, I can do that more or less with changes only to the `prepare_plot` method, and nothing else. If I wanted to render the plot using Leaflet or Matplotlib or something else, that would require some more extensive renovation, but still the effects wouldn\u2019t ripple through the whole codebase.", "The biggest benefit, however, is less a matter of how I wrote the code and more the fact that I wrote any code at all. Yes, encoding my workflow saves time and effort over the long-run, but it also requires me to be explicit about what my workflow is in the first place. In writing this code, I identified several things about my workflow that really made me unhappy. For example, I hated how much time it took to manage the data when I wanted to plot polygons instead of points (or points instead of polygons), so I changed `add_source` method to always assume polygons and the `add_layer` method to automatically calculate a centroid and update the data source whenever a Bokeh model is used that assumes point data but references a data sources that contains polygon data. I had baked assumptions about the polygon vs. point structure of my data into my workflow without realizing it. By codifying my workflow, I recognized that assumption, decided I didn\u2019t like it, and removed it.", "Codifying my workflow makes my workflow better, and making my workflow better makes me a better coder. And in explicitly thinking about the design of both the code and the workflow, I\u2019ve made it easier to repurpose old work for new problems, and to share my work with colleagues.", "I suppose it should go without saying that this code isn\u2019t meant to be a perfect representation of the design principles I outlined earlier. Design is a direction, not a destination. I\u2019m painfully aware of how much the code could stand to be improved!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Co-founder @ aampe.co. Anthropologist + Data Scientist."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F377f5f8bf4c3&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@schaun.wheeler?source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@schaun.wheeler?source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": "Schaun Wheeler"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2d3762e7f110&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&user=Schaun+Wheeler&userId=2d3762e7f110&source=post_page-2d3762e7f110----377f5f8bf4c3---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F377f5f8bf4c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F377f5f8bf4c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/Valassis-Digital-Media/theto", "anchor_text": "Theto"}, {"url": "https://books.google.com/books?id=wYhAAAAAYAAJ&printsec=frontcover", "anchor_text": "Ten Books on Architecture"}, {"url": "https://books.google.com/books?id=0qG4TQi-e-4C&printsec=frontcover", "anchor_text": "Fred Brooks argues"}, {"url": "https://towardsdatascience.com/data-is-a-stakeholder-31bfdb650af0", "anchor_text": "seem to have arisen"}, {"url": "https://towardsdatascience.com/data-is-a-stakeholder-31bfdb650af0", "anchor_text": "Sometimes I have to go through it hundreds of times a day"}, {"url": "https://en.wikipedia.org/wiki/Geographic_coordinate_system", "anchor_text": "Longitude/latitude pairs"}, {"url": "https://en.wikipedia.org/wiki/Well-known_text", "anchor_text": "Well-known text"}, {"url": "https://shapely.readthedocs.io/en/latest/", "anchor_text": "Shapely objects"}, {"url": "https://en.wikipedia.org/wiki/Geohash", "anchor_text": "Geohashes"}, {"url": "https://developers.google.com/maps/", "anchor_text": "Google maps"}, {"url": "https://en.wikipedia.org/wiki/Web_Map_Tile_Service", "anchor_text": "Web map tile service"}, {"url": "https://bokeh.pydata.org/en/latest/", "anchor_text": "Bokeh"}, {"url": "http://geo.holoviews.org/", "anchor_text": "GeoViews"}, {"url": "http://holoviews.org/", "anchor_text": "HoloViews"}, {"url": "https://matplotlib.org/", "anchor_text": "Matplotlib"}, {"url": "http://leafletjs.com/", "anchor_text": "Leaflet.js"}, {"url": "http://folium.readthedocs.io/en/latest/", "anchor_text": "Folium"}, {"url": "https://bokeh.pydata.org/en/latest/docs/user_guide/tools.html#hovertool", "anchor_text": "create tooltips"}, {"url": "https://medium.com/tag/python?source=post_page-----377f5f8bf4c3---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----377f5f8bf4c3---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----377f5f8bf4c3---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/design-process?source=post_page-----377f5f8bf4c3---------------design_process-----------------", "anchor_text": "Design Process"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F377f5f8bf4c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&user=Schaun+Wheeler&userId=2d3762e7f110&source=-----377f5f8bf4c3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F377f5f8bf4c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&user=Schaun+Wheeler&userId=2d3762e7f110&source=-----377f5f8bf4c3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F377f5f8bf4c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F377f5f8bf4c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----377f5f8bf4c3---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----377f5f8bf4c3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@schaun.wheeler?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@schaun.wheeler?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Schaun Wheeler"}, {"url": "https://medium.com/@schaun.wheeler/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "894 Followers"}, {"url": "http://aampe.co", "anchor_text": "aampe.co"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2d3762e7f110&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&user=Schaun+Wheeler&userId=2d3762e7f110&source=post_page-2d3762e7f110--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd8dcfa98f86c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcodify-your-workflow-377f5f8bf4c3&newsletterV3=2d3762e7f110&newsletterV3Id=d8dcfa98f86c&user=Schaun+Wheeler&userId=2d3762e7f110&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}