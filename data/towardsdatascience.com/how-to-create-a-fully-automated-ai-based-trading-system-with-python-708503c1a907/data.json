{"url": "https://towardsdatascience.com/how-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907", "time": 1683017919.015408, "path": "towardsdatascience.com/how-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907/", "webpage": {"metadata": {"title": "How To Create A Fully Automated AI Based Trading System With Python | by Rub\u00e9n Romero | Towards Data Science", "h1": "How To Create A Fully Automated AI Based Trading System With Python", "description": "A couple of weeks ago I was casually chatting with a friend, masks on, social distance, the usual stuff. He was telling me how he was trying to, and I quote, detox from the broker app he was using. I\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/ruromgar/python-ai-trading-system", "anchor_text": "is available here", "paragraph_index": 3}, {"url": "https://medium.com/@patrick.collins_58673/stock-api-landscape-5c6e054ee631", "anchor_text": "the awesome list", "paragraph_index": 5}, {"url": "https://medium.com/u/589c510eb216?source=post_page-----708503c1a907--------------------------------", "anchor_text": "Patrick Collins", "paragraph_index": 5}, {"url": "https://finance.yahoo.com", "anchor_text": "Yahoo! finance", "paragraph_index": 7}, {"url": "https://machinelearningmastery.com/grid-search-arima-hyperparameters-with-python/", "anchor_text": "How To Grid Search ARIMA Hyperparameters With Python", "paragraph_index": 19}, {"url": "https://github.com/sanko/Robinhood", "anchor_text": "Sanko\u2019s library", "paragraph_index": 24}, {"url": "https://github.com/LichAmnesia/Robinhood", "anchor_text": "LichAmnesia\u2019s", "paragraph_index": 24}, {"url": "https://github.com/jmfernandes/robin_stocks", "anchor_text": "robin_stocks library", "paragraph_index": 24}, {"url": "http://www.robin-stocks.com/en/latest/intro.html", "anchor_text": "the docs", "paragraph_index": 27}, {"url": "https://github.com/alpacahq/alpaca-trade-api-python/", "anchor_text": "library", "paragraph_index": 28}, {"url": "https://aws.amazon.com/lambda/pricing/", "anchor_text": "the quotas", "paragraph_index": 32}, {"url": "https://core.telegram.org/bots#6-botfather", "anchor_text": "official instructions", "paragraph_index": 33}, {"url": "https://serverless.com/", "anchor_text": "serverless", "paragraph_index": 34}, {"url": "https://www.serverless.com/framework/docs/providers/aws/examples/hello-world/python/", "anchor_text": "template", "paragraph_index": 34}, {"url": "https://stackoverflow.com/questions/36099709/how-get-right-telegram-channel-id/45577616", "anchor_text": "how to get the ID from a channel", "paragraph_index": 36}, {"url": "https://stackoverflow.com/questions/32423837/telegram-bot-how-to-get-a-group-chat-id", "anchor_text": "how to get the ID from a group", "paragraph_index": 36}, {"url": "https://github.com/ruromgar/python-ai-trading-system", "anchor_text": "the code in GitHub", "paragraph_index": 44}, {"url": "https://towardsdatascience.com/questions-96667b06af5", "anchor_text": "rules and guidelines", "paragraph_index": 45}, {"url": "https://towardsdatascience.com/readers-terms-b5d780a700a4", "anchor_text": "Reader Terms", "paragraph_index": 45}, {"url": "https://aroussi.com/post/python-yahoo-finance", "anchor_text": "Reliably download historical market data from Yahoo! Finance with Python", "paragraph_index": 46}, {"url": "https://machinelearningmastery.com/grid-search-arima-hyperparameters-with-python/", "anchor_text": "How to Grid Search ARIMA Model Hyperparameters with Python", "paragraph_index": 47}, {"url": "https://machinelearningmastery.com/make-sample-forecasts-arima-python/", "anchor_text": "How to Make Out-of-Sample Forecasts with ARIMA in Python", "paragraph_index": 48}, {"url": "https://github.com/serverless/examples/tree/master/aws-python-scheduled-cron", "anchor_text": "AWS Python Scheduled Cron Example", "paragraph_index": 49}], "all_paragraphs": ["A couple of weeks ago I was casually chatting with a friend, masks on, social distance, the usual stuff. He was telling me how he was trying to, and I quote, detox from the broker app he was using. I asked him about the meaning of the word detox in this particular context, worrying that he might go broke, but nah: he told me that he was constantly trading. \u201cIf a particular stock has been going up for more than one hour or so and I\u2019m already over the 1% profit threshold then I sell\u201d, he said, \u201camong other personal rules I\u2019ve been following\u201d. Leaving aside the slight pseudoscientific aspect of those rules, I understood what he meant by detox: following them implied checking the phone an astronomically high number of times.", "So I started wondering: would it be possible to automate the set of rules this guy has in mind? And actually \u2014 would it be possible to automate a saner set of rules, so I let the system do the trading for me? Since you\u2019re reading this I assume you got caught by the title, so you\u2019ve probably already guessed that the answer is yes. Let\u2019s elaborate on that, but first of all: time is gold and I don\u2019t want to clickbait anyone. This is what we\u2019re going to do:", "And what are we going to need?", "Everything I\u2019ve coded is available here. Okay! So, without further ado, let\u2019s go for the first part: getting the data.", "Getting the data is not easy. Some years ago there was an official Yahoo! Finance API, as well as alternatives like Google Finance \u2014 sadly, both have been discontinued for years now. But don\u2019t worry, there\u2019s still plenty of alternatives in the market. My personal requirements were:", "With that list in mind, I went for yfinance \u2014 the unofficial alternative to the old Yahoo Finance API. Bear in mind that for a real system, and based on the awesome list provided by Patrick Collins, I would definitely choose the Alpha Vantage API \u2014 but let\u2019s keep it simple for now.", "The yfinance library was developed by Ran Aroussi to get access to the Yahoo! Finance data when the official API was shut down. Quoting from the GitHub repository,", "Ever since Yahoo! finance decommissioned their historical data API, many programs that relied on it to stop working.", "yfinance aimes to solve this problem by offering a reliable, threaded, and Pythonic way to download historical market data from Yahoo! finance.", "Sweet, good enough for me. How does it work? First we need to install it:", "And then we can access everything using the Ticker object:", "That method is quite fast, slightly above 0.005 seconds on average, and returns LOTS of info about the stock; for instance, google.info contains 123 fields, including the following:", "There is more info available through several methods: dividends, splits, balance_sheet or earnings among others. Most of these methods return the data in a pandas DataFrame object, so we\u2019ll need to play with it a bit to get whatever we want. For now I just need the information of the stock price through the time; the history method is the best one for that purpose. We can select both the period or the interval dates and the frequency of the data down to one minute \u2014 note that intraday information is only available if the period is minor than 60 days, and that only 7 days worth of 1m granularity data are allowed to be fetched per request. The transposed data of the last entry with a 1m interval is as follows:", "We can see how it\u2019s indexed by the datetime and every entry has seven features: four fixed points of the stock price during that minute (open, high, low and close) plus the volume, dividends and stock splits. I\u2019m going to use just the low, so let\u2019s keep that data:", "Finally, since we\u2019re going to use the data just for the last day, let\u2019s reindex the dataframe to remove the date and timezone components and keep just the time one:", "Looking good! We already know how to fetch the latest info from yfinance \u2014 we\u2019ll later feed our algorithm with this. But for that, we need an algorithm to feed: let\u2019s go for the next part.", "I said it before but I\u2019ll say this again: don\u2019t try this at home. What I\u2019m going to do here is fitting a VERY simple ARIMA model to forecast the next value of the stock price; think of it as a dummy model. If you want to use this for real trading, I\u2019d recommend to look for better and stronger models, but be aware: if it were easy, everyone would do it.", "First let\u2019s split the dataframe into train and test, so we can use the test set to validate the results of the dummy model \u2014 I\u2019m going to keep the last 10% of the data as the test set:", "If we plot it, we get:", "Now let\u2019s fit the model with the training data and get the forecast. Note that the hyperparameters of the model are fixed whereas in the real world you should use cross-validation to get the optimal ones \u2014 check out this awesome tutorial about How To Grid Search ARIMA Hyperparameters With Python. I\u2019m using a 5, 0, 1 configuration and getting the forecast for the moment immediately after the training data ends:", "Let\u2019s see how well performed our dummy model:", "That\u2019s not bad \u2014 we can work with it. With this info we can define a set of rules based on whatever we want to do, like holding if it\u2019s going up or selling if it\u2019s going down. I\u2019m not going to elaborate on this part because I don\u2019t want y\u2019all to sue me saying you lost all your money, so please go ahead and define your own set of rules :) In the meantime, I\u2019m going to explain the next part: connecting to the broker.", "As you probably have guessed, this part highly depends on the broker you\u2019re using. I\u2019m covering here two brokers, RobinHood and Alpaca; the reason is that both of them:", "Depending on the type of your account you might have some limits: for instance, RobinHood allows just 3 trades over a 5 day period if your account balance is below 25000$; Alpaca allows far more requests but still has a limit of 200 requests per minute per API key.", "There are several libraries that wrap the RobinHood API, but sadly, as far as I know no one of them is official. Sanko\u2019s library was the biggest one, with 1.5k stars in GitHub, but it has been discontinued; LichAmnesia\u2019s has continued Sanko\u2019s path, but has just 99 stars so far. I\u2019m going to use robin_stocks library, which has a little over 670 stars at the moment of writing this. Let\u2019s install it:", "Not all actions require login, but most of them do, so it\u2019s useful to login before doing anything else. RobinHood requires MFA, so it\u2019s necessary to set it up: go to your account, turn on the two factor authentication and select \u201cother\u201d when asked about the app you want to use. You will be presented with an alphanumeric code, which you will use in the code below:", "To buy or sell is pretty easy:", "Check the docs for advanced usage and examples.", "For Alpaca we are going to use the alpaca-trade-api library, which has over 700 stars in GitHub. To install:", "After signing in your account you\u2019ll get an API key ID and a secret key; both are needed for login:", "Submitting orders is slightly more complex than with RobinHood:", "That\u2019s it! Note that leaving your credentials in plain text is a very, VERY bad thing to do \u2014 do not worry though, we\u2019ll switch in the next step to environment variables, which is far safer. Now let\u2019s deploy everything to the cloud and monitor it.", "We are going to deploy everything in AWS Lambda. This wouldn\u2019t be the best option for a production system, obviously, since Lambda does not have storage and we would want to store the trained model somewhere, for instance in S3. However, this will do for now \u2014 we\u2019ll schedule the Lambda to run daily, training the model every time with the data from the current day. For monitoring purposes we\u2019ll set up a Telegram bot that will send a message with the action to be taken and its outcome. Note that AWS Lambda is free up to a certain limit, but be aware of the quotas in case you want to send lots of messages.", "The first thing on the to-do list is creating a bot. I followed the official instructions from Telegram:", "Next step: deployment. There are several ways of deploying to Lambda. I\u2019m going to use the serverless framework, so let\u2019s install it and create a template:", "That will create a scheduled_tg_bot folder with three files: .gitignore, serverless.yml, and handler.py. The serverless file defines the deployment: what, when, and how it is going to be run. The handler file will contain the code to run:", "You need to change CHAT_ID to the ID of the group, the channel, or the conversation you want the bot to interact with. Here you can find how to get the ID from a channel and here is how to get the ID from a group.", "Now, we\u2019re going to define how to run the code. Open serverless.yml and write:", "This code tells AWS the kind of runtime we want and propagates the Telegram token from our own environment so we don\u2019t have to deploy it. Afterwards, we\u2019re defining the cron to run the function daily at 21:00 UTC time.", "The only thing left is to get the AWS credentials and set them, along with the token and the rest of variables, as environment variables before deploying. Getting the credentials is fairly easy:", "That\u2019s it. Now, let\u2019s export the AWS credentials and the Telegram token. Open a terminal and write:", "Install the necessary packages locally and finally, deploy everything to AWS:", "We\u2019re done! The bot will trade for us every day at 21:00 UTC time and will message us with the action performed. Not bad for a proof of concept \u2014 now I can tell my friend he can stop frantically checking his phone to trade :)", "Note that all the resources we\u2019ve used through this tutorial have their own documentation: I encourage y\u2019all to go deeper on whatever you think is interesting \u2014 remember that this is just a toy system! However, as a toy system, I believe it is a good starting point for a richer, more complex product. Happy coding!", "You can check the code in GitHub.", "Note from Towards Data Science\u2019s editors: While we allow independent authors to publish articles in accordance with our rules and guidelines, we do not endorse each author\u2019s contribution. In this case, as the author himself points out: do not attempt to trade without seeking professional advice. See our Reader Terms for details.", "[2] R. Aroussi, Reliably download historical market data from Yahoo! Finance with Python (2019), Aroussy.com", "[3] J. Brownlee, How to Grid Search ARIMA Model Hyperparameters with Python (2017), Machine Learning Mastery", "[4] J. Brownlee, How to Make Out-of-Sample Forecasts with ARIMA in Python (2017), Machine Learning Mastery", "[5] Serverless team, AWS Python Scheduled Cron Example, GitHub", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Mostly tech stuff. Python & ML Engineer. Tryin' to do it right. He/Him."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F708503c1a907&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----708503c1a907--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----708503c1a907--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@ruromgar?source=post_page-----708503c1a907--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ruromgar?source=post_page-----708503c1a907--------------------------------", "anchor_text": "Rub\u00e9n Romero"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff1f5d846c826&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&user=Rub%C3%A9n+Romero&userId=f1f5d846c826&source=post_page-f1f5d846c826----708503c1a907---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F708503c1a907&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F708503c1a907&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@bash__profile?utm_source=medium&utm_medium=referral", "anchor_text": "Nicholas Cappello"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.python.org/", "anchor_text": "Python"}, {"url": "https://github.com/ruromgar/python-ai-trading-system", "anchor_text": "is available here"}, {"url": "https://medium.com/@patrick.collins_58673/stock-api-landscape-5c6e054ee631", "anchor_text": "the awesome list"}, {"url": "https://medium.com/u/589c510eb216?source=post_page-----708503c1a907--------------------------------", "anchor_text": "Patrick Collins"}, {"url": "https://finance.yahoo.com", "anchor_text": "Yahoo! finance"}, {"url": "http://www.abc.xyz", "anchor_text": "http://www.abc.xyz"}, {"url": "https://machinelearningmastery.com/grid-search-arima-hyperparameters-with-python/", "anchor_text": "How To Grid Search ARIMA Hyperparameters With Python"}, {"url": "https://github.com/sanko/Robinhood", "anchor_text": "Sanko\u2019s library"}, {"url": "https://github.com/LichAmnesia/Robinhood", "anchor_text": "LichAmnesia\u2019s"}, {"url": "https://github.com/jmfernandes/robin_stocks", "anchor_text": "robin_stocks library"}, {"url": "http://www.robin-stocks.com/en/latest/intro.html", "anchor_text": "the docs"}, {"url": "https://github.com/alpacahq/alpaca-trade-api-python/", "anchor_text": "library"}, {"url": "https://aws.amazon.com/lambda/pricing/", "anchor_text": "the quotas"}, {"url": "https://core.telegram.org/bots#6-botfather", "anchor_text": "official instructions"}, {"url": "https://serverless.com/", "anchor_text": "serverless"}, {"url": "https://www.serverless.com/framework/docs/providers/aws/examples/hello-world/python/", "anchor_text": "template"}, {"url": "https://stackoverflow.com/questions/36099709/how-get-right-telegram-channel-id/45577616", "anchor_text": "how to get the ID from a channel"}, {"url": "https://stackoverflow.com/questions/32423837/telegram-bot-how-to-get-a-group-chat-id", "anchor_text": "how to get the ID from a group"}, {"url": "https://github.com/ruromgar/python-ai-trading-system", "anchor_text": "the code in GitHub"}, {"url": "https://towardsdatascience.com/questions-96667b06af5", "anchor_text": "rules and guidelines"}, {"url": "https://towardsdatascience.com/readers-terms-b5d780a700a4", "anchor_text": "Reader Terms"}, {"url": "https://medium.com/@patrick.collins_58673/stock-api-landscape-5c6e054ee631", "anchor_text": "Best Stock APIs and Industry Landscape in 2020"}, {"url": "https://aroussi.com/post/python-yahoo-finance", "anchor_text": "Reliably download historical market data from Yahoo! Finance with Python"}, {"url": "https://machinelearningmastery.com/grid-search-arima-hyperparameters-with-python/", "anchor_text": "How to Grid Search ARIMA Model Hyperparameters with Python"}, {"url": "https://machinelearningmastery.com/make-sample-forecasts-arima-python/", "anchor_text": "How to Make Out-of-Sample Forecasts with ARIMA in Python"}, {"url": "https://github.com/serverless/examples/tree/master/aws-python-scheduled-cron", "anchor_text": "AWS Python Scheduled Cron Example"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----708503c1a907---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/programming?source=post_page-----708503c1a907---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/trading?source=post_page-----708503c1a907---------------trading-----------------", "anchor_text": "Trading"}, {"url": "https://medium.com/tag/python?source=post_page-----708503c1a907---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/automation?source=post_page-----708503c1a907---------------automation-----------------", "anchor_text": "Automation"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F708503c1a907&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&user=Rub%C3%A9n+Romero&userId=f1f5d846c826&source=-----708503c1a907---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F708503c1a907&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&user=Rub%C3%A9n+Romero&userId=f1f5d846c826&source=-----708503c1a907---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F708503c1a907&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----708503c1a907--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F708503c1a907&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----708503c1a907---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----708503c1a907--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----708503c1a907--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----708503c1a907--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----708503c1a907--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----708503c1a907--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----708503c1a907--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----708503c1a907--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----708503c1a907--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ruromgar?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ruromgar?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Rub\u00e9n Romero"}, {"url": "https://medium.com/@ruromgar/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "461 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff1f5d846c826&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&user=Rub%C3%A9n+Romero&userId=f1f5d846c826&source=post_page-f1f5d846c826--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fb5edabd078d5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-create-a-fully-automated-ai-based-trading-system-with-python-708503c1a907&newsletterV3=f1f5d846c826&newsletterV3Id=b5edabd078d5&user=Rub%C3%A9n+Romero&userId=f1f5d846c826&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}