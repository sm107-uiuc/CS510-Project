{"url": "https://towardsdatascience.com/how-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1", "time": 1683017376.901539, "path": "towardsdatascience.com/how-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1/", "webpage": {"metadata": {"title": "How to Build A Flexible Movie Recommender Chatbot In Python | by Pedro Martins de Bastos | Towards Data Science", "h1": "How to Build A Flexible Movie Recommender Chatbot In Python", "description": "In this three-part series, we will teach you everything you need to build and deploy your Chatbot. By \u201cwe\u201d here, I mean my team members (Ahmed, Dennis, Pedro, and Steven), four data science students\u2026"}, "outgoing_paragraph_urls": [{"url": "https://nlp-moviebot.vercel.app/", "anchor_text": "here", "paragraph_index": 0}, {"url": "https://github.com/pedro-de-bastos/Practical-Data-Science-IL181/blob/master/Prototyping_Movie_Recommender.ipynb", "anchor_text": "Jupyter Python 3 notebook", "paragraph_index": 3}, {"url": "https://github.com/steven-tey/moviebot", "anchor_text": "this GitHub repository", "paragraph_index": 3}, {"url": "https://a-elkhattam.medium.com/imdb-movie-recommendation-chatbot-942f84dfa0dc", "anchor_text": "Part 1: Building a content-based recommender using a cosine similarity algorithm.", "paragraph_index": 11}, {"url": "https://steventey.medium.com/building-and-deploying-an-nlp-model-to-aws-lambda-and-vercel-ddc110d492ce", "anchor_text": "Part 2: Deploying the model on AWS serverless computing platform and creating an interactive chatbot web application", "paragraph_index": 13}, {"url": "https://antela.medium.com/creating-an-imdb-movie-recommendation-chatbot-going-forward-d098327414d", "anchor_text": "Part 3: Model analysis and future recommendations", "paragraph_index": 15}], "all_paragraphs": ["Our working final product can be tested here.", "Have you ever wondered what a chatbot is and how to build one?", "In this three-part series, we will teach you everything you need to build and deploy your Chatbot. By \u201cwe\u201d here, I mean my team members (Ahmed, Dennis, Pedro, and Steven), four data science students at the Minerva Schools at KGI. The series will cover the following topics:", "We use a Jupyter Python 3 notebook as a collaborative coding environment for this project, and other bits of code for the web app development and deployment. All the code for this series is available in this GitHub repository.", "Businesses integrate chatbots into many processes and applications. You might need to interact with one while buying an item from Sephora, booking a flight from British Airways, or even customizing your cup of coffee from Starbucks. Developers build chatbots to understand customers\u2019 needs and assist them without needing human help, making chatbots very useful for many customer-facing businesses. So how does a chatbot work?", "Generally, there are three types of chatbots:", "The chatbot we settled on creating is retrieval-based. Our bot can take a diverse set of responses, which are only slightly structured and output tailored recommendations. We had two main challenges to making this work: first, to build a flexible recommendation system in Python capable of taking in written requests by users and outputting decent recommendations. Second, implementing that algorithm in a web-app that is user-friendly and easy to use.", "As you will discover in the accompanying articles, we started our work by understanding what recommendation systems do and what different recommendation systems exist. We found three types of recommendation systems: simple recommenders, collaborative-filtering recommenders, and contextual-recommenders.", "Simple recommenders are straightforward lists that are not necessarily tailored to any individual user. If you look at the list of \u201ctop ten movies in your country\u201d on Netflix, that constitutes a simple recommender: there is not much contextual input on behalf of the user.", "Contextual recommenders, in turn, make use of varied inputs to make sure that recommendations are more tailored. They include keywords and other forms of input to filter and rank recommendations. An example is searching for movies based on keywords about the plot, actors, and directors.", "Finally, collaborative filtering is the most complex and exciting of the bunch: this type of recommendation system takes data from several different users and learns how to predict what someone might like based on search and choice similarity. These algorithms can keep track of everything you search, watch, and click on, and they compare you to millions of other users. They then look for people with similar tastes and recommend something you might like which someone like you has watched and enjoyed.", "After researching how we might build each of these in Python, we decided to settle on contextual recommenders (with the possibility of expanding into collaborative filtering). While we wanted to make something more advanced than a simple recommender (and simple recommenders would not be suitable for use with a chatbot), we did not have the data required to train and build a collaborative filtering algorithm. Read \u201cPart 1: Building a content-based recommender using a cosine similarity algorithm.\u201d to find out how we did it!", "Once we build our algorithm, we had to figure out how to transform it into a web app. Creating the web app required a few steps:", "Following the steps we took in \u201cPart 2: Deploying the model on AWS serverless computing platform and creating an interactive chatbot web application\u201d will help you understand the entire pipeline.", "Although we were bristling with ideas of extensions and augmentations for our application during the ideation phase, we decided to define what our minimum viable product should be. Minimum viable products, or MVPs, are, in short, the simplest version of a finished product that would satisfy the basic requirements for a solution. They exist in contrast to a very over-the-top prototype, i.e., a first product that tries to be as excellent as possible right off the bat. The latter approach is ill-advised for several reasons: first, it stifles progress. Having to create a \u201cperfect\u201d product straight away puts a lot of pressure on making the \u2018right\u2019 decisions, and it is impossible to know what the right choices are. Second, making the \u2018right decisions\u2019 is an unrealistic expectation, even because \u2018rightness\u2019 is impossible to determine before something is put to the test. Sure, there is a balance between making a terrible ill-thought-through design decision and making a reasonable if not highly optimized decision. Still, the point is that the best thought-through idea can turn out to be a disaster when put to practice. Fail fast, fail early, and iterate is a better approach!", "With that in mind, we created a web app that satisfies the initial (minimum viable) constraints we set: it recommends movies, it allows somewhat flexible user inputs, it makes use of natural language processing, and we hosted it online so that we can share our work. After creating this MVP, we have come up with different ideas for improving it, and you can read all about them in Part 3: Model analysis and future recommendations.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I am a Data Science major whose passion is to understand how to improve human wellbeing, and education, with science and technology!"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff111da4039c1&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f111da4039c1--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f111da4039c1--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://pedro-debastos.medium.com/?source=post_page-----f111da4039c1--------------------------------", "anchor_text": ""}, {"url": "https://pedro-debastos.medium.com/?source=post_page-----f111da4039c1--------------------------------", "anchor_text": "Pedro Martins de Bastos"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcfd6339e4031&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&user=Pedro+Martins+de+Bastos&userId=cfd6339e4031&source=post_page-cfd6339e4031----f111da4039c1---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff111da4039c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff111da4039c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://nlp-moviebot.vercel.app/", "anchor_text": "here"}, {"url": "https://a-elkhattam.medium.com/imdb-movie-recommendation-chatbot-942f84dfa0dc", "anchor_text": "Part 1: Building a content-based recommender using a cosine similarity algorithm."}, {"url": "https://steventey.medium.com/building-and-deploying-an-nlp-model-to-aws-lambda-and-vercel-ddc110d492ce", "anchor_text": "Part 2: Deploying the model on AWS serverless computing platform and creating an interactive chatbot web application."}, {"url": "https://antela.medium.com/creating-an-imdb-movie-recommendation-chatbot-going-forward-d098327414d", "anchor_text": "Part 3: Model analysis and future recommendations"}, {"url": "https://github.com/pedro-de-bastos/Practical-Data-Science-IL181/blob/master/Prototyping_Movie_Recommender.ipynb", "anchor_text": "Jupyter Python 3 notebook"}, {"url": "https://github.com/steven-tey/moviebot", "anchor_text": "this GitHub repository"}, {"url": "https://a-elkhattam.medium.com/imdb-movie-recommendation-chatbot-942f84dfa0dc", "anchor_text": "Part 1: Building a content-based recommender using a cosine similarity algorithm."}, {"url": "https://steventey.medium.com/building-and-deploying-an-nlp-model-to-aws-lambda-and-vercel-ddc110d492ce", "anchor_text": "Part 2: Deploying the model on AWS serverless computing platform and creating an interactive chatbot web application"}, {"url": "https://antela.medium.com/creating-an-imdb-movie-recommendation-chatbot-going-forward-d098327414d", "anchor_text": "Part 3: Model analysis and future recommendations"}, {"url": "https://www.datacamp.com/community/tutorials/recommender-systems-python", "anchor_text": "https://www.datacamp.com/community/tutorials/recommender-systems-python"}, {"url": "https://dev.to/andrewbaisden/how-to-deploy-a-python-flask-app-to-vercel-2o5k", "anchor_text": "https://dev.to/andrewbaisden/how-to-deploy-a-python-flask-app-to-vercel-2o5k"}, {"url": "https://towardsdatascience.com/various-implementations-of-collaborative-filtering-100385c6dfe0", "anchor_text": "https://towardsdatascience.com/various-implementations-of-collaborative-filtering-100385c6dfe0"}, {"url": "https://pythonforundergradengineers.com/deploy-serverless-web-app-aws-lambda-zappa.html", "anchor_text": "https://pythonforundergradengineers.com/deploy-serverless-web-app-aws-lambda-zappa.html"}, {"url": "https://medium.com/bhavaniravi/build-your-1st-python-web-app-with-flask-b039d11f101c", "anchor_text": "https://medium.com/bhavaniravi/build-your-1st-python-web-app-with-flask-b039d11f101c"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----f111da4039c1---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/tag/chatbots?source=post_page-----f111da4039c1---------------chatbots-----------------", "anchor_text": "Chatbots"}, {"url": "https://medium.com/tag/recommendations?source=post_page-----f111da4039c1---------------recommendations-----------------", "anchor_text": "Recommendations"}, {"url": "https://medium.com/tag/recommendation-system?source=post_page-----f111da4039c1---------------recommendation_system-----------------", "anchor_text": "Recommendation System"}, {"url": "https://medium.com/tag/movie-recommendation?source=post_page-----f111da4039c1---------------movie_recommendation-----------------", "anchor_text": "Movie Recommendation"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff111da4039c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&user=Pedro+Martins+de+Bastos&userId=cfd6339e4031&source=-----f111da4039c1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff111da4039c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&user=Pedro+Martins+de+Bastos&userId=cfd6339e4031&source=-----f111da4039c1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff111da4039c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f111da4039c1--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff111da4039c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f111da4039c1---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f111da4039c1--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f111da4039c1--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f111da4039c1--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f111da4039c1--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f111da4039c1--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f111da4039c1--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f111da4039c1--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f111da4039c1--------------------------------", "anchor_text": ""}, {"url": "https://pedro-debastos.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://pedro-debastos.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Pedro Martins de Bastos"}, {"url": "https://pedro-debastos.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "106 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcfd6339e4031&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&user=Pedro+Martins+de+Bastos&userId=cfd6339e4031&source=post_page-cfd6339e4031--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F2309a266e3fe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-flexible-movie-recommender-chatbot-in-python-f111da4039c1&newsletterV3=cfd6339e4031&newsletterV3Id=2309a266e3fe&user=Pedro+Martins+de+Bastos&userId=cfd6339e4031&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}