{"url": "https://towardsdatascience.com/the-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0", "time": 1683001880.9761999, "path": "towardsdatascience.com/the-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0/", "webpage": {"metadata": {"title": "The User-Agent \u2014 That Crazy String Underpinning a Bunch of Analytics | by Randy Au | Towards Data Science", "h1": "The User-Agent \u2014 That Crazy String Underpinning a Bunch of Analytics", "description": "Work in web analytics for any amount of time, even less than a week I\u2019d bet, and you\u2019re going to hear about this thing called the \u201cUser-Agent\u201d. It\u2019s this string that we get from users, and it\u2019s\u2026"}, "outgoing_paragraph_urls": [{"url": "https://tools.ietf.org/html/rfc2119", "anchor_text": "RFC 2219", "paragraph_index": 4}, {"url": "https://tools.ietf.org/html/rfc1945", "anchor_text": "RFC 1945-HTTP/1.0", "paragraph_index": 4}, {"url": "https://tools.ietf.org/html/rfc7231", "anchor_text": "RFC 7231-HTTP/1.1", "paragraph_index": 4}, {"url": "https://tools.ietf.org/html/rfc2119", "anchor_text": "RFC 2119", "paragraph_index": 8}, {"url": "https://tools.ietf.org/html/rfc2068#page-134", "anchor_text": "RFC 2068", "paragraph_index": 14}, {"url": "https://tools.ietf.org/html/rfc2616#section-14.43", "anchor_text": "RFC 2616", "paragraph_index": 14}, {"url": "https://webaim.org/blog/user-agent-string-history/", "anchor_text": "History of the browser user-agent string", "paragraph_index": 16}, {"url": "https://developers.whatismybrowser.com/useragents/explore/", "anchor_text": "resources such as this one", "paragraph_index": 19}, {"url": "https://thenextweb.com/microsoft/2018/12/06/microsoft-edge-is-officially-switching-to-chromium-in-2019-heres-why-thats-a-good-thing/", "anchor_text": "switched to being chromium", "paragraph_index": 20}, {"url": "https://www.theverge.com/2019/5/4/18529381/google-youtube-internet-explorer-6-kill-plot-engineer", "anchor_text": "efforts", "paragraph_index": 28}, {"url": "https://www.ie6nomore.com/", "anchor_text": "such", "paragraph_index": 28}, {"url": "https://www.computerworld.com/article/2506551/microsoft-launches-ie6-deathwatch.html", "anchor_text": "these", "paragraph_index": 28}, {"url": "https://www.robotstxt.org/robotstxt.html", "anchor_text": "robots.txt", "paragraph_index": 31}, {"url": "https://amiunique.org/faq", "anchor_text": "an idea of what is possible", "paragraph_index": 36}, {"url": "https://github.com/ua-parser/uap-core/blob/master/regexes.yaml", "anchor_text": "giant list of over 1100 regex definitions", "paragraph_index": 42}], "all_paragraphs": ["Work in web analytics for any amount of time, even less than a week I\u2019d bet, and you\u2019re going to hear about this thing called the \u201cUser-Agent\u201d. It\u2019s this string that we get from users, and it\u2019s supposed to tell us various things about them. If we\u2019re supposed to be using this thing to count and analyze users somehow, we need to understand it some more.", "Currently in 2019, the most important use for it is figuring out what device (desktop, phone, etc) a client is using for the purposes of sending the correct page design to the client. It\u2019s not the only way someone can do device detection, but it forms a very important foundation. Even Javascript device detection libraries often just request and parse the User-Agent.", "User-Agents also provides one of the data points for fingerprinting users without the use of cookies. It\u2019s included with every HTTP request and can potentially be very long and unique to a user in certain uncommon situations.", "But what IS this string all about, and why is it sorta crazy any of this works?", "The User-Agent (UA) is a field in the HTTP header that the client \u201cshould\u201d (in the technical RFC 2219 sense where they may be technical ramifications if it is not done), include the field with a request to a server. This is codified within both RFC 1945-HTTP/1.0 and the current RFC 7231-HTTP/1.1 specifications (see the images below for the specific sections). RFC 7540-HTTP/2 is concerned w/ the HTTP message itself and not the headers where UA lives, so 7231 applies there too.", "Let\u2019s take a look at how the UA was defined in the RFCs.", "The TL;DR is as follows: User-agents are\u2026", "Although it is not required, user agents should include this field with requests. \u2014 RFC 1945", "RFC 1945 predates the RFC 2119 language of SHOULD, so it reads more casually. Still, the most important points are these:", "It\u2019s interesting to note that, even in this RFC, it already warns of anomalies like some proxies will append data to the UA which makes interpretation ambiguous, and some clients don\u2019t follow the product token syntax.", "A product token is simply in the format of product/version where version is optional. Tokens are whitespace delimited, so products shouldn\u2019t have whitespace. Historically, ISO 8859\u20131 (Latin-1) and RFC 2047 (Base64 and Quote-printable) encodings were allowed. Nowadays, the spec says to use US-ASCII and any octet > 127 is treated as \u201copaque data.\u201d", "So, in theory, you could shove emoji or a base64 essay into the UA, but all bets are off on how the server decides if and how to handle it.", "Subsequent versions of the HTTP RFCs have more standardized language, but generally, things remain the same. It\u2019s still product/version entries separated by spaces, with comments in parentheses. What\u2019s notable is the addition of very specific prohibitions against putting non-essential, fine-grained information or advertising in the UA. Overly long UAs are specifically stated to potentially fingerprint users (we\u2019ll get to this later).", "It\u2019s also specifically stated that it\u2019s discouraged for products to use the product tokens of other products to declare compatibility. We\u2019ll get into that next.", "What\u2019s interesting about all these additions is that they didn\u2019t exist in RFC 2068 the original HTTP/1.1 spec from January 1997,or RFC 2616 dating from June 1999. In the intervening 5 years of exploding internet use, it seems they had seen some abuses that they wanted to stop.", "While knowing what the RFCs say about User-Agent strings is useful to know the format that things take, it doesn\u2019t tell you very much about how it is used in practice.", "As stated quite amusingly here in a \u201cHistory of the browser user-agent string\u201d, the reality of UAs today is that practically everything pretends to be Mozilla first. This was because back in the \u201890s when browser features were rapidly changing, the Mozilla browser had certain features like frames that were initially unavailable in competing browsers, so web designers sent different versions of the page based on the User-Agent.", "But as the other browsers caught to Mozilla in terms of features, web designers were slow (or didn\u2019t bother) to update their serving rules to match. So browsers that could support advanced features were not served pages with such features. To get around this, the other browsers just declared themselves to be Mozilla to fetch the Mozilla version.", "Soon, practically every mainstream browser just decided to declare they were Mozilla as the first product string, while adding the actual browser in a comment or a subsequent product string. This is most likely what prompted the latest RFCs to specifically say using another product\u2019s string (i.e. Mozilla) is discouraged. Browsers still do it to this day, with no real signs of changing.", "If you\u2019d like, you can browse the vast array of User Agents online with resources such as this one.", "What you\u2019ll also notice is that every browser is fairly idiosyncratic with the sequence and types of product tokens it has. With enough study you can fairly reliably know what device and browser a request is coming from. IE11 uses the comment Trident/7.0 to denote its render engine and \u201crv:11.0\u201d to denote the IE version, Chrome (and Edge which switched to being chromium on the back end) are full product-version tokens, but will also claim Safari compatibility because they both use AppleWebKit. It\u2019s a tangled web.", "It varies: some are more well behaved than others. Some state the bot as the top level product, some also claim Mozilla compatibility, or claim to be on a mobile device. Some are libraries that provide a default User-Agent that a dev can override but forgot to.", "Robots and scripts are sooorta obvious, but you sometimes have to squint a little. They\u2019re more likely to have URLs in the text (as part of a practice to allow people to identify and report misbehaving bots) but that\u2019s no guarantee, you gotta parse it case by case.", "For various reasons, whether for testing, compatibility, or privacy reasons, users may want to have their browser give a different User-Agent string than default. The RFCs specifically say that if a client sends a masqueraded UA, then it should be interpreted as the client intentionally wanting that version, even if it may not render correctly.", "If a user agent masquerades as a different user agent, recipients can assume that the user intentionally desires to see responses tailored for that identified user agent, even if they might not work as well for the actual user agent being used. \u2014 RFC 7231, HTTP/1.1", "Browsers often provide the functionality for users to spoof their UAs. That said, it\u2019s extremely rare to encounter users who go through the trouble since the differences between browser functionality has largely become trivial from a user perspective.", "One thing to remember about User-Agents is that it is a very old technology, and many of the things that it has been used for historically (such as basic analytics) have been given over to other technologies that can provide more detail and resolution.", "This usage is the original intended purpose of the UA string, giving the server the ability to serve different versions of the web page based on what the client is capable of handling. Internet Explorer 6 was perhaps the most egregious example of where site designers needed to know the browser version because of how poorly it handled modern web standards.", "Fun side note, IE6 was a HUGE problem in the late 2000s/early 2010s due to its horrible standards support requiring lots of custom hacks from developers but stubbornly high usage numbers. The pain spawned efforts such as these to kill it.", "Back in the mid/early 2000s, UAs were an important tool in analyzing what users were using. Using Javascript to pull browser info was still in its infancy, so User-Agents were the most informative thing that you had. From this, you could see what percentage of your users were using IE6 versus Firefox (and whether you should stop using certain HTML features or not). You could also see how often the search engine crawlers visited, and whether you had actual human visitors or not. Primitive by modern standards, but better than nothing.", "It\u2019s considered good practice and manners for bots, web crawlers, and similar automated programs to identify to the server via the User-Agent string. Very often the UA will contain the string \u201cbot\u201d \u201ccrawler\u201d \u201cspider\u201d, sometimes with a URL of the bot owner as a comment. But the specific implementation of the UA will vary wildly from bot to bot. This is because ultimately a human developer decides what \u201cself-identification\u201d means, there\u2019s no standard format.", "The basic robots.txt file is used to tell what web crawlers and other robots should or should not access on a given web server. Very often, it doesn\u2019t make a distinction between different types of clients, but there\u2019s actually a facility to specify which User-Agent string is allowed in certain places.", "Obviously, this assumes that the robot 1) reads and follows the directives in the robots.txt file and 2) identifies itself properly in the User-Agent (and again follows the directives).", "User-Agent strings can range from being very simple, to very long with many product tokens chained together. The most egregious ones would be browsers that had many sketchy toolbars installed, each toolbar would often append its own product token to the UA.", "The longer the UA, the more likely it has strayed from the base default UA provided by the browser, and it becomes increasingly likely that the UA becomes unique to a specific installation. Working under this assumption, people could use UAs as a way to pseudo-identify a user across time and IP addresses. I\u2019ve seen browsers with as many as 6 toolbars installed and that browser + IP combo was practically unique in the sea of requests, enough to track someone across the internet.", "In practice, this method only really works on the tiny subset of people who have installed enough browser extensions or poorly spoofed their UA enough to stand out from the crowd of default strings. But even so, the UA still provides bits of entropy in a larger user fingerprinting framework that involves the use of Javascript and HTML5 methods.", "I\u2019ll have to get into device fingerprinting another day, it\u2019s a huge topic. For now, if you\u2019re interested you can take a look at this to get an idea of what is possible when you use the full range of tech possible, spanning request headers to Javascript, Flash, and HTML5 Canvas.", "With many advanced browser features being detected directly via Javascript these days, this is probably the primary modern use of the UA string, figuring out what device/platform a client is running.", "UAs found a new life in the late 2000s with the smartphone and tablet explosion. While UAs used to tell you what percent of your userbase was on IE, Firefox or Chrome on a Windows machine or Mac, we suddenly started seeing exciting new strings like iPad, iPhone, Android. Not everyone was using a desktop/laptop any more, but we could see what they were using and adapt!", "These new devices had different physical screen sizes and physical capabilities. It wasn\u2019t just \u201coh this browser has no Javascript/HTML5/CSS support\u201d any more. This information is highly relevant to designers, especially on older early/mid-2010 devices that did not have full-HD 1080p or higher screen resolutions. (The iPhone 4S from 2011 had a 960\u00d7640 pixel screen.) Sites designed for mobile devices needed to have different UIs that work better for touch screens, and be smaller to work with 2G, 3G wireless networks.", "But again, because the User-Agent is completely free-form, it could be potentially different for every permutation of manufacturer/device/OS/browser in very unique ways. How are developers supposed to handle this situation?", "Through painstaking analysis and building a large database of strings, of course!", "Luckily! There are open source projects that are tackling this sort of problem (as well as paid API services that do User-Agent string analysis). One is the UA-parser project, which at its core is a giant list of over 1100 regex definitions that search for unique patterns in the UA and associates it with manufacturers and specific devices. It\u2019s a herculean effort maintained by many people.", "Running (up to) a thousand regex searches on a single string is obviously very resource-intensive, but this is the only way to make sure to identify a UA string to the fullest extent possible short of reading it manually.", "In practice, you can speed up things massively with hashing and caching by relying on the fact that most users will have the same general default setup, so you\u2019d only have to run regex on novel strings. This works because UA strings have a really dense cluster of exactly-matching values, and then a massively long-tail of esoteric values.", "RFCs aren\u2019t strongly enforced in any way, so it\u2019s entirely possible to encounter non-conforming User-Agent strings. I\u2019ve personally seen strings where nonsense characters like newlines (\\n) and ASCII nulls (\\0) have been put into the string. Unicode is also technically allowed (in that systems treat is as opaque bytes) but is generally unexpected and uncommon. Most UA handlers still assume that UAs are US-ASCII (as specified in the latest RFCs)", "Usually, this stuff is from someone writing a robot and they are unfamiliar with the RFCs. Or they\u2019re trying to be jerks and attempting to break systems. Either way, when you process UA strings at scale, your code will break a surprising amount due to malformed strings, so be prepared to write exception handlers to catch bad strings.", "User-Agents are ubiquitous, so many people know just a tiny bit about them. The problem comes from when those people try to interpret them and come to bad conclusions.", "People sometimes think User-Agents somehow provide them with counts of users. Often this is thinking from a mix of outdated thinking from a decade ago when people often only had 1 internet-connected computer, or they\u2019ve heard about browser fingerprinting but aren\u2019t aware of how many data points it takes to fingerprint a browser.", "Obviously, this isn\u2019t true today. Most users these days use multiple devices/browsers throughout the day and fingerprint methods are super complex. Counts of unique UAs do give a rough sense of the number of unique types of browsers that have made requests. But even when combined with the IP address, many humans can be using multiple devices that all use the exact same UA and sit behind a NAT and share an IP.", "I\u2019ve personally had to use UAs to put very rough bounds on the minimum number of browsers used to view a site, with the raw hit count being the upper limit. This was because we literally had no other data available. But I had to be very very clear about what we were measuring.", "When people hear that UAs can be spoofed easily, they often worry that they\u2019re being lied to and their metrics are going to be off. They often worry so much they overthink things and reach for more technically difficult solutions. I often tell people not to worry about spoofing.", "The primary reason is that the vast majority of users have no motivation to bother messing with their UA string. They just want to use the internet. The only people who want to manipulate their UA are usually a microscopic number of users writing bots/crawlers of some sort. Then it breaks down into a few major cases:", "It\u2019s pretty rare to have to worry about spoofing unless you\u2019re running something that robot-makers have an incentive to abuse (and UA is not likely to be the solution if that\u2019s your problem). I suppose there are some edge cases: like if you get practically no traffic, so the bots will dominate, but you also have little reason to do a lot of analytics at that point.", "Sooooooorta. In some very specific instances, you can catch a UA in a lie. But don\u2019t expect it to be a regular thing.", "The easiest case is when someone makes an error in spoofing their UA string. Their UA stands out like a sore thumb because no one else uses it. It could be something as simple as having an extra space or punctuation mark.", "Similarly, sometimes spoofers don\u2019t understand the User-Agent string enough and put together impossible combinations of product strings. They\u2019ll stand out for being hyper-unique too.", "Another somewhat common case is when you have access to the browser\u2019s data via JavaScript. If you see an iPhone have a screen size that is massively different from the physical pixel dimensions of the phone itself, it\u2019s probably lying about being a phone.", "After these limited methods, the whole idea starts wandering into the realm of bot and fraud detection tech, which is a bit out of scope for here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I stress about data quality a lot. Data nerd/scientist, camera junkie. Quant UXR @Google Cloud. Formerly @bitly, @Meetup, @primarydotcom. Opinions are my own."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F86507ef632f0&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----86507ef632f0--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----86507ef632f0--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://randy-au.medium.com/?source=post_page-----86507ef632f0--------------------------------", "anchor_text": ""}, {"url": "https://randy-au.medium.com/?source=post_page-----86507ef632f0--------------------------------", "anchor_text": "Randy Au"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5bd01667d4e5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&user=Randy+Au&userId=5bd01667d4e5&source=post_page-5bd01667d4e5----86507ef632f0---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F86507ef632f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F86507ef632f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://tools.ietf.org/html/rfc2119", "anchor_text": "RFC 2219"}, {"url": "https://tools.ietf.org/html/rfc1945", "anchor_text": "RFC 1945-HTTP/1.0"}, {"url": "https://tools.ietf.org/html/rfc7231", "anchor_text": "RFC 7231-HTTP/1.1"}, {"url": "https://tools.ietf.org/html/rfc1945", "anchor_text": "https://tools.ietf.org/html/rfc1945"}, {"url": "https://tools.ietf.org/html/rfc2119", "anchor_text": "RFC 2119"}, {"url": "https://tools.ietf.org/html/rfc7230#section-3.2.4", "anchor_text": "https://tools.ietf.org/html/rfc7230#section-3.2.4"}, {"url": "https://tools.ietf.org/html/rfc7231", "anchor_text": "https://tools.ietf.org/html/rfc7231"}, {"url": "https://tools.ietf.org/html/rfc2068#page-134", "anchor_text": "RFC 2068"}, {"url": "https://tools.ietf.org/html/rfc2616#section-14.43", "anchor_text": "RFC 2616"}, {"url": "https://webaim.org/blog/user-agent-string-history/", "anchor_text": "History of the browser user-agent string"}, {"url": "https://developers.whatismybrowser.com/useragents/explore/", "anchor_text": "resources such as this one"}, {"url": "https://thenextweb.com/microsoft/2018/12/06/microsoft-edge-is-officially-switching-to-chromium-in-2019-heres-why-thats-a-good-thing/", "anchor_text": "switched to being chromium"}, {"url": "http://validator.w3.org/services", "anchor_text": "http://validator.w3.org/services"}, {"url": "http://www.google.com/bot.html", "anchor_text": "http://www.google.com/bot.html"}, {"url": "http://www.google.com/bot.html", "anchor_text": "http://www.google.com/bot.html"}, {"url": "http://www.bing.com/bingbot.htm", "anchor_text": "http://www.bing.com/bingbot.htm"}, {"url": "https://www.theverge.com/2019/5/4/18529381/google-youtube-internet-explorer-6-kill-plot-engineer", "anchor_text": "efforts"}, {"url": "https://www.ie6nomore.com/", "anchor_text": "such"}, {"url": "https://www.computerworld.com/article/2506551/microsoft-launches-ie6-deathwatch.html", "anchor_text": "these"}, {"url": "https://www.robotstxt.org/robotstxt.html", "anchor_text": "robots.txt"}, {"url": "https://amiunique.org/faq", "anchor_text": "an idea of what is possible"}, {"url": "https://github.com/ua-parser/uap-core/blob/master/regexes.yaml", "anchor_text": "giant list of over 1100 regex definitions"}, {"url": "https://github.com/ua-parser/", "anchor_text": "ua-parserua-parser has 18 repositories available. Follow their code on GitHub.github.com"}, {"url": "https://medium.com/tag/web-development?source=post_page-----86507ef632f0---------------web_development-----------------", "anchor_text": "Web Development"}, {"url": "https://medium.com/tag/data-science?source=post_page-----86507ef632f0---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/analytics?source=post_page-----86507ef632f0---------------analytics-----------------", "anchor_text": "Analytics"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----86507ef632f0---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----86507ef632f0---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F86507ef632f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&user=Randy+Au&userId=5bd01667d4e5&source=-----86507ef632f0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F86507ef632f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&user=Randy+Au&userId=5bd01667d4e5&source=-----86507ef632f0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F86507ef632f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----86507ef632f0--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F86507ef632f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----86507ef632f0---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----86507ef632f0--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----86507ef632f0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----86507ef632f0--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----86507ef632f0--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----86507ef632f0--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----86507ef632f0--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----86507ef632f0--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----86507ef632f0--------------------------------", "anchor_text": ""}, {"url": "https://randy-au.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://randy-au.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Randy Au"}, {"url": "https://randy-au.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.8K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5bd01667d4e5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&user=Randy+Au&userId=5bd01667d4e5&source=post_page-5bd01667d4e5--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fc29d9b065bd4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-user-agent-that-crazy-string-underpinning-a-bunch-of-analytics-86507ef632f0&newsletterV3=5bd01667d4e5&newsletterV3Id=c29d9b065bd4&user=Randy+Au&userId=5bd01667d4e5&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}