{"url": "https://towardsdatascience.com/a-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c", "time": 1683001691.607102, "path": "towardsdatascience.com/a-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c/", "webpage": {"metadata": {"title": "A Guide to Unicode, UTF-8 and Strings in Python | by Sanket Gupta | Towards Data Science", "h1": "A Guide to Unicode, UTF-8 and Strings in Python", "description": "Strings are one of the most common data types in Python. They are used to deal with text data of any kind. The field of Natural Language Processing is built on top of text and string processing of\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/ASCII", "anchor_text": "ASCII", "paragraph_index": 3}, {"url": "https://en.wikipedia.org/wiki/ISO/IEC_8859-1", "anchor_text": "ISO-8859\u20131", "paragraph_index": 4}, {"url": "https://stackoverflow.com/questions/496321/utf-8-utf-16-and-utf-32", "anchor_text": "this", "paragraph_index": 10}, {"url": "https://nedbatchelder.com/text/unipain.html", "anchor_text": "excellent talk", "paragraph_index": 18}, {"url": "https://twitter.com/nedbat", "anchor_text": "nedbat", "paragraph_index": 18}, {"url": "https://link.chtbl.com/d8Cg-H7N", "anchor_text": "The Data Life Podcast", "paragraph_index": 20}, {"url": "https://podcasts.apple.com/us/podcast/17-why-pandas-is-the-new-excel/id1453716761?i=1000454831790", "anchor_text": "Why Pandas is the new Excel", "paragraph_index": 20}, {"url": "https://link.chtbl.com/d8Cg-H7N", "anchor_text": "here", "paragraph_index": 20}, {"url": "https://www.linkedin.com/in/sanketgupta107/", "anchor_text": "LinkedIn profile", "paragraph_index": 21}], "all_paragraphs": ["Strings are one of the most common data types in Python. They are used to deal with text data of any kind. The field of Natural Language Processing is built on top of text and string processing of some kind. It is important to know about how strings work in Python. Strings are usually easy to deal with when they are made up of English ASCII characters, but \u201cproblems\u201d appear when we enter into non-ASCII characters \u2014 which are becoming increasingly common in the world today esp. with advent of emojis etc.", "Many programmers use encode and decode with strings in hopes of removing the dreaded UnicodeDecodeError \u2014 hopefully, this blog will help you overcome the dread about dealing with strings. Below I am going to take a Q and A format to really get to the answers to the questions you might have, and which I also had before I started learning about strings.", "In Python (2 or 3), strings can either be represented in bytes or unicode code points. Byte is a unit of information that is built of 8 bits \u2014 bytes are used to store all files in a hard disk. So all of the CSVs and JSON files on your computer are built of bytes. We can all agree that we need bytes, but then what about unicode code points? We will get to them in the next question.", "While reading bytes from a file, a reader needs to know what those bytes mean. So if you write a JSON file and send it over to your friend, your friend would need to know how to deal with the bytes in your JSON file. For the first 20 years or so of computing, upper and lower case English characters, some punctuations and digits were enough. These were all encoded into a 127 symbol list called ASCII. 7 bits of information or 1 byte is enough to encode every English character. You could tell your friend to decode your JSON file in ASCII encoding, and voila \u2014 she would be able to read what you sent her.", "This was cool for the initial few decades or so, but slowly we realized that there are way more number of characters than just English characters. We tried extending 127 characters to 256 characters (via Latin-1 or ISO-8859\u20131) to fully utilize the 8 bit space \u2014 but that was not enough. We needed an international standard that we all agreed on to deal with hundreds and thousands of non-English characters.", "Unicode is international standard where a mapping of individual characters and a unique number is maintained. As of May 2019, the most recent version of Unicode is 12.1 which contains over 137k characters including different scripts including English, Hindi, Chinese and Japanese, as well as emojis. These 137k characters are each represented by a unicode code point. So unicode code points refer to actual characters that are displayed. These code points are encoded to bytes and decoded from bytes back to code points. Examples: Unicode code point for alphabet a is U+0061, emoji \ud83d\udd90 is U+1F590, and for \u03a9 is U+03A9.", "3 of the most popular encoding standards defined by Unicode are UTF-8, UTF-16 and UTF-32.", "We now know that Unicode is an international standard that encodes every known character to a unique number. Then the next question is how do we move these unique numbers around the internet? You already know the answer! Using bytes of information.", "UTF-8: It uses 1, 2, 3 or 4 bytes to encode every code point. It is backwards compatible with ASCII. All English characters just need 1 byte \u2014 which is quite efficient. We only need more bytes if we are sending non-English characters. It is the most popular form of encoding, and is by default the encoding in Python 3. In Python 2, the default encoding is ASCII (unfortunately).", "UTF-16 is variable 2 or 4 bytes. This encoding is great for Asian text as most of it can be encoded in 2 bytes each. It\u2019s bad for English as all English characters also need 2 bytes here.", "UTF-32 is fixed 4 bytes. All characters are encoded in 4 bytes so it needs a lot of memory. It is not used very often. [You can read more in this StackOverflow post.]", "We need encode method to convert unicode code points to bytes. This will happen typically during writing string data to a CSV or JSON file for example. We need decode method to convert bytes to unicode code points. This will typically happen during reading data from a file into strings.", "As we discussed earlier, in Python, strings can either be represented in bytes or unicode code points.The main takeaways in Python are:1. Python 2 uses str type to store bytes and unicode type to store unicode code points. All strings by default are str type \u2014 which is bytes~ And Default encoding is ASCII. So if an incoming file is Cyrillic characters, Python 2 might fail because ASCII will not be able to handle those Cyrillic Characters. In this case, we need to remember to use decode(\"utf-8\") during reading of files. This is inconvenient. 2. Python 3 came and fixed this. Strings are stillstr type by default but they now mean unicode code points instead \u2014 we carry what we see. If we want to store these str type strings in files we use bytes type instead. Default encoding is UTF-8 instead of ASCII. Perfect!", "Yes, let\u2019s look at \u201c\u4f60\u597d\u201d which is Chinese for hello. It takes 6 bytes to store this string made of 2 unicode code points. Let\u2019s take the example of popularlen function to see how things might differ in Python 2 and 3 \u2014 and things you need to keep note of.", "So, prefixing a u in Python 2 can make a complete difference to your code functioning correctly or not \u2014 which can be confusing! Python 3 fixed this by using unicode code points by default \u2014 so len will work as you would expect giving length of 2 in the example above.", "Let\u2019s look at more examples in Python 3 for dealing with strings:", "Sure! Let\u2019s see all we have covered so far visually. By default in Python 3, we are on the left side in the world of Unicode code points for strings. We only need to go back and forth with bytes while writing or reading the data. Default encoding during this conversion is UTF-8, but other encodings can also be used. We need to know what encoder was used during the decoding process, otherwise we might get errors or get gibberish!", "This diagram holds true for both Python 2 and Python 3! We might be gettingUnicodeDecodeErrors due to: 1) We trying to use ASCII to encode non-ASCII characters. This would happen esp. in Python 2 where default encoder is ASCII. So you should explicitly encode and decode bytes using UTF-8.2) We might be using the wrong decoder completely. If unicode code points were encoded in UTF-16 instead of UTF-8, you might run into bytes that are gibberish in UTF-8 land. So UTF-8 decoder might fail completely to understand the bytes.", "A good practice is to decode your bytes in UTF-8 (or an encoder that was used to create those bytes) as soon as they are loaded from a file. Run your processing on unicode code points through your Python code, and then write back into bytes into a file using UTF-8 encoder in the end. This is called Unicode Sandwich. Read/watch the excellent talk by Ned Batchelder (@nedbat) about this.", "If you want to add more information about strings in Python, please mention in the comments below as it will help others. This concludes my blog on the guide to Unicode, UTF-8 and strings. Good luck in your own explorations with text!", "PS, check out my new podcast! It\u2019s called \u201cThe Data Life Podcast\u201d where I talk about similar topics. In a recent episode I talked about Why Pandas is the new Excel. You can listen to the podcast here or wherever you listen to your podcasts.", "If you have any questions, drop me a note at my LinkedIn profile. Thanks for reading!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "At the intersection of machine learning, design and product. Host of The Data Life Podcast. Opinions are my own and do not express views of my employer."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F757a232db95c&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----757a232db95c--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----757a232db95c--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@sanket107?source=post_page-----757a232db95c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sanket107?source=post_page-----757a232db95c--------------------------------", "anchor_text": "Sanket Gupta"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd8b11b8c0c06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&user=Sanket+Gupta&userId=d8b11b8c0c06&source=post_page-d8b11b8c0c06----757a232db95c---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F757a232db95c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F757a232db95c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://en.wikipedia.org/wiki/ASCII", "anchor_text": "ASCII"}, {"url": "https://en.wikipedia.org/wiki/ISO/IEC_8859-1", "anchor_text": "ISO-8859\u20131"}, {"url": "https://stackoverflow.com/questions/496321/utf-8-utf-16-and-utf-32", "anchor_text": "this"}, {"url": "https://stackoverflow.com/questions/7291120/get-unicode-code-point-of-a-character-using-python", "anchor_text": "Source"}, {"url": "https://nedbatchelder.com/text/unipain.html", "anchor_text": "excellent talk"}, {"url": "https://twitter.com/nedbat", "anchor_text": "nedbat"}, {"url": "https://link.chtbl.com/d8Cg-H7N", "anchor_text": "The Data Life Podcast"}, {"url": "https://podcasts.apple.com/us/podcast/17-why-pandas-is-the-new-excel/id1453716761?i=1000454831790", "anchor_text": "Why Pandas is the new Excel"}, {"url": "https://link.chtbl.com/d8Cg-H7N", "anchor_text": "here"}, {"url": "https://link.chtbl.com/d8Cg-H7N", "anchor_text": "My podcast: The Data Life Podcast"}, {"url": "https://www.linkedin.com/in/sanketgupta107/", "anchor_text": "LinkedIn profile"}, {"url": "https://medium.com/tag/programming?source=post_page-----757a232db95c---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----757a232db95c---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/naturallanguageprocessing?source=post_page-----757a232db95c---------------naturallanguageprocessing-----------------", "anchor_text": "Naturallanguageprocessing"}, {"url": "https://medium.com/tag/data-science?source=post_page-----757a232db95c---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/utf-8?source=post_page-----757a232db95c---------------utf_8-----------------", "anchor_text": "Utf 8"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F757a232db95c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&user=Sanket+Gupta&userId=d8b11b8c0c06&source=-----757a232db95c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F757a232db95c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&user=Sanket+Gupta&userId=d8b11b8c0c06&source=-----757a232db95c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F757a232db95c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----757a232db95c--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F757a232db95c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----757a232db95c---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----757a232db95c--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----757a232db95c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----757a232db95c--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----757a232db95c--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----757a232db95c--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----757a232db95c--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----757a232db95c--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----757a232db95c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sanket107?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sanket107?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sanket Gupta"}, {"url": "https://medium.com/@sanket107/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd8b11b8c0c06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&user=Sanket+Gupta&userId=d8b11b8c0c06&source=post_page-d8b11b8c0c06--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fa5aa90cba379&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-guide-to-unicode-utf-8-and-strings-in-python-757a232db95c&newsletterV3=d8b11b8c0c06&newsletterV3Id=a5aa90cba379&user=Sanket+Gupta&userId=d8b11b8c0c06&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}