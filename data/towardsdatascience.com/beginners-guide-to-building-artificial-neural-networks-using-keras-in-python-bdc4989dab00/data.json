{"url": "https://towardsdatascience.com/beginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00", "time": 1683012827.955848, "path": "towardsdatascience.com/beginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00/", "webpage": {"metadata": {"title": "Beginner\u2019s guide to building Artificial Neural Networks using Keras in Python | by Dr. Varshita Sher | Towards Data Science", "h1": "Beginner\u2019s guide to building Artificial Neural Networks using Keras in Python", "description": "When I first started my deep-learning journey, I kept thinking these two are completely separate entities. Well, as of mid-2017, they are not! Keras, a neural network API, is now fully integrated\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/keras-team/keras/issues/5050", "anchor_text": "mid-2017", "paragraph_index": 1}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/Sequential#fit", "anchor_text": "Keras documentation", "paragraph_index": 7}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-convolutional-neural-networks-using-tensorflow-s-keras-api-in-python-6e8035e28238", "anchor_text": "next tutorial on Convolutional Neural Networks", "paragraph_index": 13}, {"url": "https://machinelearningmastery.com/rectified-linear-activation-function-for-deep-learning-neural-networks/", "anchor_text": "Rectified Linear Unit", "paragraph_index": 17}, {"url": "https://stackoverflow.com/questions/2480650/what-is-the-role-of-the-bias-in-neural-networks", "anchor_text": "bias neuron", "paragraph_index": 22}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-convolutional-neural-networks-using-tensorflow-s-keras-api-in-python-6e8035e28238", "anchor_text": "next post", "paragraph_index": 41}, {"url": "https://podurama.com", "anchor_text": "https://podurama.com", "paragraph_index": 43}], "all_paragraphs": ["If you are asking, \u201cShould I use keras OR tensorflow?\u201d, you are asking the wrong question.", "When I first started my deep-learning journey, I kept thinking these two are completely separate entities. Well, as of mid-2017, they are not! Keras, a neural network API, is now fully integrated within TensorFlow. What does that mean?", "It means you have a choice between using the high-level Keras API, or the low-level TensorFlow API. High-level APIs provide more functionality within a single command and are easier to use (in comparison with low-level APIs), which makes them usable even for non-tech people. The low-level APIs allow the advanced programmer to manipulate functions within a module at a very granular level, thus allowing custom implementation for novel solutions.", "Note: For the purpose of this tutorial, we will be using Keras only!", "We begin by installing Keras onto our machine. As I said before, Keras is integrated within TensorFlow, so all you have to do is pip install tensorflow in your terminal (for Mac OS) to access Keras in your Jupyter notebook.", "We will be working with a loan-application dataset. It has two predictor features, a continuous variable - age, and a categorical variable - area (rural vs. urban), and one binary outcome variable application_outcome, which can take values 0 (approved) or 1(rejected).", "In order to avoid overfitting, we will be scaling the age between 0 and 1 using MinMaxScaler, and label encoding the area and application_outcome features using LabelEncoder from Sklearn toolkit. We are doing this so we can bring all the input features on the same scale.", "If you read into the Keras documentation, it requires the input data to be of type NumPy arrays. So that is what we are going to do now!", "There are two ways to build Keras models: sequential (most basic one) and functional (for complex networks).", "We will be creating a Sequential model which is a linear stack of layers. That is, the sequential API allows you to create models layer-by-layer. It is great for developing deep learning models in most cases.", "Here, the first dense layer is actually the second layer overall (because the actual first layer will be our input layer from original data) but the first \u201chidden\u201d layer. It has 8 units/neurons/nodes and the choice of 8 is arbitrary!", "The input_shape parameter is something you must assign based on your dataset. Intuitively speaking, it is the shape of the input data that the network should expect. I like to think of it as \u2014 \u201cwhat is the shape of a single row of data that I am feeding into the neural network?\u201d.", "In our case, a single row of the input looks like [0.914, 0]. That is, it is 1-dimensional. Thus, the input_shape parameter will look like a tuple (2, ), where 2 refers to the number of features in your dataset (age and area). Thus, the input layer would expect a one-dimensional array with 2 elements for input. It would produce 8 outputs in return.", "If we were dealing with, say black-and-white 2x3 pixel images (as we will look into our next tutorial on Convolutional Neural Networks), we will see that a single row of the input (or vector representation a single image) looks like [[0 , 1, 0] , [0 , 0, 1], where 0 means the pixel is bright and 1 means the pixel is dark. That is, it is 2-dimensional. Subsequently, the input_shape parameter will be equal to (2,3).", "Note: In our case, our input shape has only one dimension, so you don\u2019t necessarily need to give it as a tuple. Instead, you can give input_dim as a scalar number. So, in our model, where our input layer has 2 elements, we can use any of these two:", "A popular misconception surrounding the input shape parameter is that it must include the total number of input samples that we are feeding to our neural network (10,000 in our case).", "The number of rows in your training data is not part of the input shape of the network because the training process feeds the network one sample per batch (or, more precisely, batch_size samples per batch).", "The second \u201chidden\u201d layer is another dense layer and has the same activation function as the first hidden layer i.e. \u2018relu\u2019. An activation function ensures values that are passed on lie within a tunable, expected range. The Rectified Linear Unit (or relu) function returns the value provided as input directly, or the value 0.0 if the input is 0.0 or less.", "You might be wondering why didn\u2019t we specify the input_shape parameter for this layer. After all, Keras need to know the shape of their inputs in order to be able to create their weights. The truth is,", "There no need to specify the input_shape parameter for second (or subsequent) hidden layer as it will automatically calculate the optimal number of input nodes based on the architecture (i.e. units and particularities of each layer).", "Finally, the third or the last hidden layer in our sequential model is another dense layer with a softmax activation function. The softmax function returns the output probabilities for both classes \u2014 approved (output = 0) and rejected(output = 1).", "This is how the model summary looks like:", "Let\u2019s see how the total number of parameters i.e. Param # was calculated for each layer. Remember that within each layer we also have a bias neuron (in addition to the neurons pre-specified in model architecture). As a result, in the first hidden layer, we have three input neurons (2 neurons from input data features + 1 bias neuron) and 8 output neurons. Thus, a total of 8*3 = 24 parameters need to be trained. Similarly, in the second hidden layer, we now have 9 input neurons (8 from the first hidden layer plus 1 bias neuron) and 16 output neurons, totaling 16*9 = 144 trainable parameters. Finally, the last layer will have 17*2=34 trainable parameters.", "Before we start training our model with actual data, we must compile the model with certain parameters. Here, we will be using the Adam optimizer .", "Available choices of optimizers include SGD, Adadelta, Adagrad, etc.", "The loss parameter specifies cross-entropy loss should be monitored at each iteration. The metrics parameter indicates we want to judge our model based on the accuracy.", "The x and y parameters are pretty intuitive \u2014 NumPy arrays of predictor and outcome variables, respectively. batch_size specifies how many samples are included in one batch. epochs=30 means the model is going to train on all of the data 30 times. verbose = 2 means it is set to the most verbose level in terms of the output messages.", "We are creating a validation set on-the-fly using a 0.1 validation_split, i.e. reserving 10% of the training data during each epoch and holding it out of training. This helps to check the generalizability of our model because by taking a subset of the training set, the model is learning only on training data but is being tested on validation data.", "Keep in mind that the Validation split occurs BEFORE the training set is shuffled i.e. only training set is shuffled AFTER the validation set has been taken out. If you had all the rejected loan applications at the end of the dataset, it could mean your validation set has misrepresentation of classes. So you MUST shuffle data yourself rather than relying on keras to do it for you!", "This is what the first five epochs look like:", "This is what the last five epochs look like:", "As you can see, we started with high loss (0.66) and low accuracy (0.57) on the validation set during first epoch. Gradually, we were able to decrease the loss (0.24) and improve accuracy (0.93) on the validation set on the last epoch.", "We preprocess the previously unseen test set in a manner similar to the trainset and save it in scaled_test_samples. The corresponding labels are stored in test_labels .", "Make sure to pick exact samebatch_size as used in the training process.", "Since our last hidden layer had a softmax activation function, the predictions include the output probabilities for both classes (on left we have the probability of class 0 (i.e. approved) and on right, class 1 (i.e. rejected).", "There are a couple of ways to proceed from here. You could choose an arbitrary threshold value, say 0.7, and only if the probability of class 0 (i.e. approved) exceeds 0.7, should you choose to approve the loan application. Alternatively, you could pick the class with the highest probability as the final prediction. For instance, based on the above screenshot the model predicts a loan will be approved with a 2% probability but will be rejected with a 97% probability. Thus, the final inference should be that person\u2019s loan is rejected. We will be doing the latter.", "To save everything from the trained model:", "We have essentially saved EVERYTHING from our trained model1. the architecture (layers, no of neurons, etc)2. weights learned3. training configurations (optimizers, loss)4. state of the optimizer (allows for easy retraining)", "To load the model we just saved:", "To reconstruct a new model from previously-stored architecture:", "To use the weights for some other model architecture:", "And there we have it. We have successfully managed to build our first ANN, train, validate and test it and also managed to save it for future use. In the next post, we will be working our way through a Convolutional Neural Network (CNN) to tackle an image classification task.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Senior Data Scientist | Explain like I am 5 | Oxford & SFU Alumni | https://podurama.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fbdc4989dab00&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----bdc4989dab00--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bdc4989dab00--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://varshitasher.medium.com/?source=post_page-----bdc4989dab00--------------------------------", "anchor_text": ""}, {"url": "https://varshitasher.medium.com/?source=post_page-----bdc4989dab00--------------------------------", "anchor_text": "Dr. Varshita Sher"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff8ca36def59&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&user=Dr.+Varshita+Sher&userId=f8ca36def59&source=post_page-f8ca36def59----bdc4989dab00---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbdc4989dab00&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbdc4989dab00&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://pixabay.com/users/geralt-9301/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=3537401", "anchor_text": "Gerd Altmann"}, {"url": "https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=3537401", "anchor_text": "Pixabay"}, {"url": "https://github.com/keras-team/keras/issues/5050", "anchor_text": "mid-2017"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/Sequential#fit", "anchor_text": "Keras documentation"}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-convolutional-neural-networks-using-tensorflow-s-keras-api-in-python-6e8035e28238", "anchor_text": "next tutorial on Convolutional Neural Networks"}, {"url": "https://machinelearningmastery.com/rectified-linear-activation-function-for-deep-learning-neural-networks/", "anchor_text": "Rectified Linear Unit"}, {"url": "https://stackoverflow.com/questions/2480650/what-is-the-role-of-the-bias-in-neural-networks", "anchor_text": "bias neuron"}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-convolutional-neural-networks-using-tensorflow-s-keras-api-in-python-6e8035e28238", "anchor_text": "next post"}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-convolutional-neural-networks-using-tensorflow-s-keras-api-in-python-6e8035e28238", "anchor_text": "Beginner\u2019s guide to building Convolutional Neural Networks using TensorFlow\u2019s Keras API in PythonExplaining an end-to-end binary image classification model with MaxPool2D, Conv2D, and Dense layers.towardsdatascience.com"}, {"url": "https://towardsdatascience.com/step-by-step-guide-to-explaining-your-ml-project-during-a-data-science-interview-81dfaaa408bf", "anchor_text": "Step by step guide to explaining your ML project during a data science interview.With a bonus sample script at the end that lets you show off your tech skills discreetly!towardsdatascience.com"}, {"url": "https://towardsdatascience.com/deploying-h2o-models-as-apis-using-flask-42065a4fa567", "anchor_text": "Deploying H2o models as APIs using FLASKEnd to end example for model training, tuning, and creating simple APIs (with no technical jargon).towardsdatascience.com"}, {"url": "https://towardsdatascience.com/time-series-analysis-using-pandas-in-python-f726d87a97d8", "anchor_text": "Time Series Analysis using Pandas in PythonBonus intro to keywords like seasonality, trend, autocorrelation, and much more.towardsdatascience.com"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----bdc4989dab00---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----bdc4989dab00---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/tag/keras?source=post_page-----bdc4989dab00---------------keras-----------------", "anchor_text": "Keras"}, {"url": "https://medium.com/tag/python?source=post_page-----bdc4989dab00---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbdc4989dab00&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&user=Dr.+Varshita+Sher&userId=f8ca36def59&source=-----bdc4989dab00---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbdc4989dab00&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&user=Dr.+Varshita+Sher&userId=f8ca36def59&source=-----bdc4989dab00---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbdc4989dab00&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bdc4989dab00--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fbdc4989dab00&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----bdc4989dab00---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----bdc4989dab00--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----bdc4989dab00--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----bdc4989dab00--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----bdc4989dab00--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----bdc4989dab00--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----bdc4989dab00--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----bdc4989dab00--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----bdc4989dab00--------------------------------", "anchor_text": ""}, {"url": "https://varshitasher.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://varshitasher.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Dr. Varshita Sher"}, {"url": "https://varshitasher.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3.2K Followers"}, {"url": "https://podurama.com", "anchor_text": "https://podurama.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff8ca36def59&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&user=Dr.+Varshita+Sher&userId=f8ca36def59&source=post_page-f8ca36def59--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F1aea8fe02d9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbeginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00&newsletterV3=f8ca36def59&newsletterV3Id=1aea8fe02d9&user=Dr.+Varshita+Sher&userId=f8ca36def59&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}