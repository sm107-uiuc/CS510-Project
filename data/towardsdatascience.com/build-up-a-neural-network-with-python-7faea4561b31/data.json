{"url": "https://towardsdatascience.com/build-up-a-neural-network-with-python-7faea4561b31", "time": 1682997362.568168, "path": "towardsdatascience.com/build-up-a-neural-network-with-python-7faea4561b31/", "webpage": {"metadata": {"title": "Build up a Neural Network with Python | by Yang S | Towards Data Science", "h1": "Build up a Neural Network with Python", "description": "The purpose of this blog is to use package NumPy in python to build up a neural network. Although well-established packages like Keras and Tensorflow make it easy to build up a model, yet it is\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["The purpose of this blog is to use package NumPy in python to build up a neural network. Although well-established packages like Keras and Tensorflow make it easy to build up a model, yet it is worthy to code forward propagation, backward propagation and gradient descent by yourself, which helps you better understand this algorithm.", "Figure above shows how information flows, when a neural network model is trained. After input Xn is entered, a linear combination of weights W1 and bias B1 is applied to Xn. Next, an activation function is applied to have a non-linear transformation to get A1. Then A1 is entered as input for next hidden layer. Same logic is applied to generate A2 and A3. The procedure to generate A1, A2 and A3 is called forward propagation. A3, also regarded as output of the neural network, is compared with independent variable y to calculate cost. Then derivative of cost function is calculated to get dA3. Take a partial derivative of dA3 for W3 and B3 to get dW3 and dB3. Same logic is applied to get dA2, dW2, dB2, dA1, dW1 and dB1. The procedure to generate a list of derivatives is called backward propagation. Finally gradient descent is applied and parameters are updated. Then a new round iteration starts with updated parameters. The algorithm will not stop until it converges.", "Create a small set of testing data to verify functions created.", "In the stage of parameter initialization, weights are initialized as random values near zero. \u201cIf weights are near zero, then the operative part of sigmoid is roughly linear, and hence the neural network collapses into an approximately linear model.\u201d [1] The gradient of sigmoid function around zero is steep, so parameters can be updated rapidly by using gradient descent. Do not use zero and large weights, which leads to poor solutions.", "I manually calculated one iteration training of neural network in Excel, which help you to verify accuracy of functions created at each step. Here is the output of parameter initialization.", "In the neural network, inputs Xn is entered and information flows forward through the whole network. The inputs Xn provide the initial information that propagates up to hidden units at each layer and finally produces prediction. This procedure is called forward propagation. Forward propagation consists of two steps. First step is the linear combination of weight and output from last layer (or Inputs Xn) to generate Z. Second step is to apply activation function to have a nonlinear transformation.", "In the first step, you need to pay attention to the dimension of input and output. Suppose you have an input matrix X with dimension of [2, 3] and one column in the matrix represents a record. There are 5 hidden units in the hidden layer, so the dimension of weight matrix W is [5, 2]. The dimension of bias B is [5, 1]. By applying matrix multiplication, we can get output matrix Z with dimension of [5, 3]. Details of calculation can be seen in the table above.", "Table above shows that how activation function is applied to each component of Z. The reason to use activation function is to have a nonlinear transformation. Without activation function, no matter how many hidden layers model has, it is still a linear model. There are several popular and commonly used activation functions, including ReLU, Leaky ReLU, sigmoid, and tanh function. Formulas and figures for those activation functions are shown below.", "First, you need to define sigmoid and ReLU function. Then create function for single layer forward propagation. Finally, functions created in the previous step is nested into the function called full forward propagation. For simplicity purpose, ReLU function is used in the first N-1 hidden layers and sigmoid function is used in the last hidden layer (or output layer). Note that in the case of binary classification problem, sigmoid function is used; in the case of multiclass classification problem, softmax function is used. Save Z and A calculated in each hidden layer into caches, which will be used in backward propagation.", "Here is the function output on testing data.", "The output of forward propagation is the probability of binary events. Then the probability is compared with response variable to calculate cost. Cross entropy is used as cost function in the classification problem. Mean square error is used as cost function in the regression problem. Formula for cross entropy is shown below.", "Here is the function output on testing data.", "During training, forward propagation can continue onward until it produces a cost. The backward propagation is to calculate the derivatives of cost function and flow all information back to each layer, using chain rule in the calculus.", "The derivatives for activation functions are shown below.", "Similar to forward propagation. First, you need to create a function for derivative of sigmoid and ReLU. Then define a function for single layer backward propagation, which calculates dW, dB, and dA_prev. dA_prev will be used as input for backward propagation for previous hidden layer. Finally, function created in the previous step is nested into the function called full backward propagation. To align with forward propagation, first N-1 hidden layers use ReLU function and last hidden layer or output layer uses sigmoid function. You can modify the code and add more activation function as you wish. Save dW and dB into another caches, which will be used to update parameters.", "Here is the function output on testing data.", "Once gradients are calculated from backward propagation, update the current parameters by learning rate * gradients. Then updated parameters are used in a new round of forward propagation.", "Here is the function output on testing data.", "Explanation for gradient descent can be seen in my blog.", "To train a neural network model, functions created in previous steps are stacked together. Summary of functions is provided in the table below.", "First use make_moons function create two interleaving half circles data. Visualization of data is provided below.", "Then run the function to train a neural network model. Training process is visualized in the figures below. Cost converges after 8000 epochs and model accuracy rate converge to 0.9.", "Figure 5 and 6 indicates that there is a potential overfitting problem. You can use methods including early stop, dropout and regularization to remediate this issue. You can play with model by adding other activation functions besides ReLU and sigmoid function. Batch gradient descent is used in this blog, but there are many improved gradient descent algorithms such as Momentum, RMSprop, Adam and so on.", "Though taking online courses and read relevant chapters in the book before, not until I hands on the coding and writing blog by myself, I fully understood this fancy method. As an old saying goes, teaching is the best way to learn. Hope you can benefit by reading this blog. Please read my other blogs if you have interest.", "[1] Trevor Hastie, Robert Tibshirani, Jerome Friedman, (2008), The Elements of Statistical Learning", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F7faea4561b31&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----7faea4561b31--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7faea4561b31--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@songyangdetang_41589?source=post_page-----7faea4561b31--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@songyangdetang_41589?source=post_page-----7faea4561b31--------------------------------", "anchor_text": "Yang S"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9112dd0e1e2e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&user=Yang+S&userId=9112dd0e1e2e&source=post_page-9112dd0e1e2e----7faea4561b31---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7faea4561b31&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7faea4561b31&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/an-introduction-to-gradient-descent-c9cca5739307", "anchor_text": "An Introduction to Gradient DescentThis blog will cover following questions and topics:towardsdatascience.com"}, {"url": "https://medium.com/@songyangdetang_41589/table-of-contents-689c8af0c731", "anchor_text": "Table of ContentsThis series of blogs will have an introduction on the deep learning from both theory and implementation aspect.medium.com"}, {"url": "https://www.coursera.org/specializations/deep-learning?", "anchor_text": "https://www.coursera.org/specializations/deep-learning?"}, {"url": "https://en.wikipedia.org/wiki/Activation_function", "anchor_text": "https://en.wikipedia.org/wiki/Activation_function"}, {"url": "https://explained.ai/matrix-calculus/index.html", "anchor_text": "https://explained.ai/matrix-calculus/index.html"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----7faea4561b31---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----7faea4561b31---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----7faea4561b31---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/tag/python?source=post_page-----7faea4561b31---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7faea4561b31&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&user=Yang+S&userId=9112dd0e1e2e&source=-----7faea4561b31---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7faea4561b31&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&user=Yang+S&userId=9112dd0e1e2e&source=-----7faea4561b31---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7faea4561b31&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7faea4561b31--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F7faea4561b31&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----7faea4561b31---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----7faea4561b31--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----7faea4561b31--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----7faea4561b31--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----7faea4561b31--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----7faea4561b31--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----7faea4561b31--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----7faea4561b31--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----7faea4561b31--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@songyangdetang_41589?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@songyangdetang_41589?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Yang S"}, {"url": "https://medium.com/@songyangdetang_41589/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "197 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9112dd0e1e2e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&user=Yang+S&userId=9112dd0e1e2e&source=post_page-9112dd0e1e2e--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F3f278c8a5b80&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-up-a-neural-network-with-python-7faea4561b31&newsletterV3=9112dd0e1e2e&newsletterV3Id=3f278c8a5b80&user=Yang+S&userId=9112dd0e1e2e&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}