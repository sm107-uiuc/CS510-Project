{"url": "https://towardsdatascience.com/sorting-lists-in-python-31477e0817d8", "time": 1683015573.484542, "path": "towardsdatascience.com/sorting-lists-in-python-31477e0817d8/", "webpage": {"metadata": {"title": "Sorting Lists in Python. How to use sort() and sorted() to sort\u2026 | by Luay Matalka | Towards Data Science", "h1": "Sorting Lists in Python", "description": "In this tutorial, we will look at how to sort lists using sort() and sorted() based on different criteria in python. There are two ways to sort a list. We can either use the sort() method or the\u2026"}, "outgoing_paragraph_urls": [{"url": "https://lmatalka90.medium.com/membership", "anchor_text": "link", "paragraph_index": 23}], "all_paragraphs": ["In this tutorial, we will look at how to sort lists using sort() and sorted() based on different criteria in python.", "There are two ways to sort a list. We can either use the sort() method or the sorted() function. The sort() method is a list method and thus can only be used on lists. The sorted() function works on any iterable.", "The sort() method is a list method that modifies the list in-place and returns None. In other words, the sort() method modifies or changes the list it is called on, and does not create a new list.", "The sort() method has two optional parameters: the key parameter and reverse parameter. The key parameter takes in a function that takes a single argument and returns a key to use for sorting. By default, the sort() method will sort a list of numbers by their values and a list of strings alphabetically. The reverse parameter accepts a boolean value of True or False. The default value for reverse is False, meaning it sorts in ascending order. To sort in descending order, we would set reverse=True. These parameters will make much more sense as we look at some examples below.", "Let\u2019s say that we have a list of numbers and we want to sort it in ascending order.", "So we have a list of numbers, or num_list. We call the sort() method on this list. Notice how we didn\u2019t pass in a value for the key parameter. Thus, it just sorted this list of numbers by their actual values. And since we didn\u2019t set reverse = True, it sorted in ascending order. The sort() method modified our num_list.", "What if we want to sort our list based on the absolute values of the numbers? That is when we would need to use the key parameter. The key parameter takes in a function that takes a single argument and returns a key to use for sorting.", "We defined a function, absolute_value, that takes in a number and returns its absolute value. We then passed this function in as the argument for the key parameter of the sort() method. Thus, it runs each element or number of num_list through the absolute value function before it makes the comparison. As a result, the absolute values of the numbers are used to sort this list in ascending order (since reverse is set to False by default).", "We could have passed in a lambda expression instead for the key parameter as follows:", "For more information about lambda functions:", "Remember that the sort() method returns None. Thus, if we set the output, or return value, of the sort() method to a new variable, we get None as follows:", "Instead of writing our own absolute_value function as we did above, we could have just passed in the python built-in abs() function for the key parameter as follows:", "The sorted() function can accept three parameters: the iterable, the key, and reverse. In other words, the sort() method only works on lists, but the sorted() function can work on any iterable, such as lists, tuples, dictionaries, and others. However, unlike the sort() method which returns None and modifies the original list, the sorted() function returns a new list while leaving the original object unchanged.", "Let\u2019s sort num_list again using the absolute values but using the sorted() function instead:", "We pass in the iterable, num_list, to the sorted() function, along with the built-in abs function to the key parameter. We set the output of the sorted() function to a new variable, new_list. Note how num_list is unaltered since the sorted() function does not modify the iterable it acts on.", "Note: No matter what iterable is passed in to the sorted() function, it always returns a list.", "Let\u2019s say that we have a list of tuples. Each element of the list is a tuple that contains three elements: the name, age, and salary.", "We can sort this list alphabetically, by age, or by salary. We can specify which we want to use with the key parameter.", "To sort by age, we can use the following code:", "Each element of the list_of_tuples is passed in to the lambda function as the person parameter. The element at index 1 of each tuple is returned. That is the value that is used to sort the list, which is the age.", "To sort the name alphabetically, we can do so without passing a key at all since by default the first element of each tuple is what is compared (and remember, by default, strings are sorted alphabetically):", "However, we can specify that we want to sort by the first element of each tuple as follows:", "Remember that we can assign a lambda expression to a variable (similar to using the def keyword to define a function). Thus, we can organize the lambda expressions based on the criteria they use to sort the list:", "If you enjoy reading stories like these and want to support me as a writer, consider signing up to become a Medium member. It\u2019s $5 a month, giving you unlimited access to stories on Medium. If you sign up using my link, I\u2019ll earn a small commission.", "In this tutorial, we compared the sort() method and sorted() function when sorting a list based on different criteria. We learned how the sort() method modifies the original list, and the sorted() function returns a new list.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Cloud Data Engineer with a passion for teaching."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F31477e0817d8&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----31477e0817d8--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----31477e0817d8--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://lmatalka90.medium.com/?source=post_page-----31477e0817d8--------------------------------", "anchor_text": ""}, {"url": "https://lmatalka90.medium.com/?source=post_page-----31477e0817d8--------------------------------", "anchor_text": "Luay Matalka"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F58bd20ab66d4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&user=Luay+Matalka&userId=58bd20ab66d4&source=post_page-58bd20ab66d4----31477e0817d8---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F31477e0817d8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F31477e0817d8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@markusspiske?utm_source=medium&utm_medium=referral", "anchor_text": "Markus Spiske"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://towardsdatascience.com/lambda-expressions-in-python-9ad476c75438", "anchor_text": "Lambda Expressions in PythonHow to write anonymous functions in pythontowardsdatascience.com"}, {"url": "https://towardsdatascience.com/unpacking-operators-in-python-306ae44cd480", "anchor_text": "Unpacking Operators in PythonUsing the * and ** unpacking operators in pythontowardsdatascience.com"}, {"url": "https://towardsdatascience.com/sorting-a-dictionary-in-python-4280451e1637", "anchor_text": "Sorting a Dictionary in PythonHow to sort a dictionary in pythontowardsdatascience.com"}, {"url": "https://lmatalka90.medium.com/membership", "anchor_text": "link"}, {"url": "https://lmatalka90.medium.com/membership", "anchor_text": "Join Medium with my referral link \u2014 Luay MatalkaRead every story from Luay Matalka (and thousands of other writers on Medium). Your membership fee directly supports\u2026lmatalka90.medium.com"}, {"url": "https://medium.com/tag/data-science?source=post_page-----31477e0817d8---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----31477e0817d8---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----31477e0817d8---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/technology?source=post_page-----31477e0817d8---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/tag/software-development?source=post_page-----31477e0817d8---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F31477e0817d8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&user=Luay+Matalka&userId=58bd20ab66d4&source=-----31477e0817d8---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F31477e0817d8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&user=Luay+Matalka&userId=58bd20ab66d4&source=-----31477e0817d8---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F31477e0817d8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----31477e0817d8--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F31477e0817d8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----31477e0817d8---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----31477e0817d8--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----31477e0817d8--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----31477e0817d8--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----31477e0817d8--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----31477e0817d8--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----31477e0817d8--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----31477e0817d8--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----31477e0817d8--------------------------------", "anchor_text": ""}, {"url": "https://lmatalka90.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://lmatalka90.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Luay Matalka"}, {"url": "https://lmatalka90.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F58bd20ab66d4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&user=Luay+Matalka&userId=58bd20ab66d4&source=post_page-58bd20ab66d4--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Feb71491826a1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsorting-lists-in-python-31477e0817d8&newsletterV3=58bd20ab66d4&newsletterV3Id=eb71491826a1&user=Luay+Matalka&userId=58bd20ab66d4&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}