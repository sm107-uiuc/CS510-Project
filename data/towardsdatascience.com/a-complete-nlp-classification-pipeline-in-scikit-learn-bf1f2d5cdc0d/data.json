{"url": "https://towardsdatascience.com/a-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d", "time": 1682992927.864528, "path": "towardsdatascience.com/a-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d/", "webpage": {"metadata": {"title": "A complete NLP classification pipeline in scikit-learn | by Louis de Bruijn | Towards Data Science", "h1": "A complete NLP classification pipeline in scikit-learn", "description": "Go from corpus to classification with this full-on guide for a natural language processing classification pipeline."}, "outgoing_paragraph_urls": [{"url": "https://www.kaggle.com/jeromeblanchet/multidomain-sentiment-analysis-dataset", "anchor_text": "Johns Hopkins Multi-Domain Sentiment Dataset", "paragraph_index": 2}, {"url": "https://en.wikipedia.org/wiki/Bayes%27_theorem", "anchor_text": "Bayes theorem", "paragraph_index": 14}, {"url": "https://github.com/LouisdeBruijn/Medium/tree/master/NLP%20pipeline", "anchor_text": "here", "paragraph_index": 24}, {"url": "https://louisdebruijn.com", "anchor_text": "https://louisdebruijn.com", "paragraph_index": 26}], "all_paragraphs": ["What we\u2019ll cover in this story:", "The most important take-outs of this story are scikit-learn/sklearn's Pipeline, FeatureUnion, TfidfVectorizer and a visualisation of the confusion_matrix using the seaborn package, but also more general bites such as ifmain, argparse, logging, zip and *args will be covered.", "We\u2019ll be using an dataset of Amazon reviews and the simple yet effective Naive Bayes for the classification task. trainset.txt contains a corpus of reviews taken from the Johns Hopkins Multi-Domain Sentiment Dataset and converted to the following format in a space separated .csv file.", "As you can see the reviews are already tokenised with a whitespace tokeniser from the nltkpackage. Each review is on one line and preceded by two tags and the identifier of the review:", "This dataset enables us to perform a binary classification of sentiment or a multi-class classification of the genre of the review and create our script in such a way that the user can specify which classification task to tackle.", "We\u2019re setting up our pipeline using argparse and function flags such as use_sentiment so that we\u2019re able to do both the binary (pos|neg) classification task and the multi-class classification task (book|camera|dvd|health|music|software) from the command-line.", "For those of you who are not familiar, argparse is a super-useful package that enables user-friendly command-line interfaces. If required arguments are missing, it shows an error and it shows all of the different arguments that can be used. Arguments are preceded by the argument tag --input and a whitespace:", "We\u2019re also adding a verbosityflag --v and using the logging capabilities of Python to output warnings, errors or info. After the arguments are parsed with args = parser.parse_args() you can then use the input from these arguments with args.input and args.verbosity in your script.", "Note argparse does not have a type=bool, which means that everything get\u2019s parsed as a str. In order to add boolean flags, you can set action=\"store_true\", which takes the False boolean as default, and if the flag --binary is included, will automatically result in aTrue boolean.", "We\u2019ll be chaining all of the functions in this story in a main() function that will automatically be called by the if __name__ == '__main__' statement. When calling this file in the command line, the Python interpreter reads the source file and sets the __name__ variable as '__main__'. This way we can read the source file and execute the functions in it, but also make this file available as a module to import for other scripts, without automatically executing the statements in main().", "First we\u2019ll need to read our corpus trainset.txt. This function will make use of the --binary flag coming from our argparse function to determine whether we\u2019re doing a binary or multi-class classification.", "Now that we have our reviews in documents and our classes in labels, we\u2019re going to split them in a training-set and a test-set for our classifier. We\u2019re going to use a split of 80% training and 20% testing, using the slice notation [:]. First we need to shuffle our data to ensure that this slice is not influencing the results: classes might be overrepresented in the train/test-set, since we don\u2019t know how the documents in our corpus are ordered. They might for instance be ordered alphabetically, which could result in having the classes book|camera|dvd|health solely in our training set.", "Since we\u2019re creating a list of tuples as such [(doc1, 'neg'), (doc2, 'pos')], we can use a neat python function, zip and * to iterate through this list and separate the tuples in a list of documents [doc1, doc2, doc3] and a list of labels ['pos', 'neg', 'pos'].", "Note: although this function may seem a bit verbose, I included it, because it is good to see what happens under the hood here. You can also use sklearn\u2019s train_test_split function which does essentially the same, or use k-fold cross-validation: splitting the dataset in train and test k number of times and taking the average of each classification to ensure that the splits influence the scores as little as possible.", "For the classification task at hand we\u2019ll be using Naive Bayes classifier, which makes use of Bayes theorem: computing new probability distributions over the classes incorporating the features included in the classifiers such as tf-idf or counts, which should make the new probability distribution more representative of the data.", "To make sense of the posterior probabilities it is useful to compare them to the prior distributions. We will thus first calculate the prior probabilities of the classes over all documents in our corpus, or the other way around: the probability that one document in our corpus has a certain class. Posterior probabilities can be computed with classifier.predict_proba.", "To compare the evaluation metric (accuracy) and the confusion matrix of our Naive Bayes classifier, we\u2019re going to create a very simple baseline: using the random package, we\u2019re going to randomly assign a label to each document out of the set of possible labels. We could also create a baseline that takes the prior probabilities of each class into account.", "For this classification task we\u2019re going to add three features that are included in the classifier:", "Now this code is a bit complex, but it is merely an example of how multiple features can be appended in one FeatureUnion pipeline, even including pipelines as done in (.3).", "I\u2019ve added a flag for each of the features in the function feature_union(), so that you\u2019re able to turn features on and off accordingly.", "Now we\u2019re also going to have to show our results. We can use sklearn\u2019s classification_report, accuracy_score, and confusion_matrix and a bit of beauty with the seaborn package for that last one.", "tabular_results() creates a Pandas DataFrame with the tokenised sentences, actual labels, predicted labels and the prior/posterior probabilities. class_report() shows the accuracy scores for the classifier and has a flag show_matrix for showing the beautiful visualisation of the confusion matrix using the vis() function.", "We read our corpus > split the data in train/test > compute prior probabilities > create a FeatureUnion of our three features > fit the classifier to the data > make predictions > compute posterior probabilities > create a DataFrame > report results for baseline > report results for Naive Bayes.", "Accuracy scores for our baseline remain around 0.16/0.17 for our six-class classification and around 0.5 for our binary classification, which is logical since it\u2019s the probability/number of classes. Naive Bayes accuracy scores are 0.685 for all three features combined and highest 0.901 when only using tf-idf vectors. This shows that feature-engineering does not always yield better results!", "The complete script and dataset can be found here. Remember that you can set the --binary flag for binary classification and the verbosity flag using --v to different levels (4 for debug) to see the classification_report for the classifiers. Furthermore, the feature_union() has flags to turn on/off different features and the class_report() a flag to show the confusion matrix.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist @ ING | Full stack Web Python | Engineer | https://louisdebruijn.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fbf1f2d5cdc0d&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.louisdebruijn.com/?source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": ""}, {"url": "https://medium.louisdebruijn.com/?source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": "Louis de Bruijn"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feb6696b15003&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&user=Louis+de+Bruijn&userId=eb6696b15003&source=post_page-eb6696b15003----bf1f2d5cdc0d---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbf1f2d5cdc0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbf1f2d5cdc0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.kaggle.com/jeromeblanchet/multidomain-sentiment-analysis-dataset", "anchor_text": "Johns Hopkins Multi-Domain Sentiment Dataset"}, {"url": "https://en.wikipedia.org/wiki/Bayes%27_theorem", "anchor_text": "Bayes theorem"}, {"url": "http://www.tfidf.com/", "anchor_text": "term-frequency in document-frequency"}, {"url": "https://github.com/LouisdeBruijn/Medium/tree/master/NLP%20pipeline", "anchor_text": "here"}, {"url": "https://medium.com/tag/nlp?source=post_page-----bf1f2d5cdc0d---------------nlp-----------------", "anchor_text": "NLP"}, {"url": "https://medium.com/tag/python?source=post_page-----bf1f2d5cdc0d---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----bf1f2d5cdc0d---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/pipeline?source=post_page-----bf1f2d5cdc0d---------------pipeline-----------------", "anchor_text": "Pipeline"}, {"url": "https://medium.com/tag/scikit-learn?source=post_page-----bf1f2d5cdc0d---------------scikit_learn-----------------", "anchor_text": "Scikit Learn"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbf1f2d5cdc0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&user=Louis+de+Bruijn&userId=eb6696b15003&source=-----bf1f2d5cdc0d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbf1f2d5cdc0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&user=Louis+de+Bruijn&userId=eb6696b15003&source=-----bf1f2d5cdc0d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbf1f2d5cdc0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fbf1f2d5cdc0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----bf1f2d5cdc0d---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----bf1f2d5cdc0d--------------------------------", "anchor_text": ""}, {"url": "https://medium.louisdebruijn.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.louisdebruijn.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Louis de Bruijn"}, {"url": "https://medium.louisdebruijn.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "520 Followers"}, {"url": "https://louisdebruijn.com", "anchor_text": "https://louisdebruijn.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feb6696b15003&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&user=Louis+de+Bruijn&userId=eb6696b15003&source=post_page-eb6696b15003--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F5eb5b12fb7e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-nlp-classification-pipeline-in-scikit-learn-bf1f2d5cdc0d&newsletterV3=eb6696b15003&newsletterV3Id=5eb5b12fb7e3&user=Louis+de+Bruijn&userId=eb6696b15003&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}