{"url": "https://towardsdatascience.com/exploratory-network-analysis-of-marvel-universe-c557f4959048", "time": 1683015580.5105689, "path": "towardsdatascience.com/exploratory-network-analysis-of-marvel-universe-c557f4959048/", "webpage": {"metadata": {"title": "Exploratory network analysis of Marvel Universe | by Tomaz Bratanic | Towards Data Science", "h1": "Exploratory network analysis of Marvel Universe", "description": "A wise man once said that the 2020\u201330 decade will be the decade of graph data science. Actually, that happened just a few days ago at the Nodes 2020 conference, and that wise man was Emil Eifrem\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.youtube.com/watch?v=ivOPeDe8IDc", "anchor_text": "keynote of the Nodes 2020", "paragraph_index": 0}, {"url": "https://neo4j.com/video/nodes-2020/", "anchor_text": "already available online", "paragraph_index": 0}, {"url": "https://neo4j.com/docs/graph-data-science/current/", "anchor_text": "Neo4j Graph Data Science", "paragraph_index": 1}, {"url": "https://github.com/neo4j/graph-data-science/releases/tag/1.4.0-alpha07", "anchor_text": "release statement", "paragraph_index": 1}, {"url": "https://www.kaggle.com/dannielr/marvel-superheroes", "anchor_text": "cool repository on Kaggle", "paragraph_index": 2}, {"url": "https://gist.github.com/tomasonjo/fbc6d617c3f6476a3a825b5dd22fd29a", "anchor_text": "gist", "paragraph_index": 3}, {"url": "https://zeppelin.apache.org/", "anchor_text": "Apache Zeppelin notebooks", "paragraph_index": 11}, {"url": "https://twitter.com/santand84", "anchor_text": "Andrea Santurbano", "paragraph_index": 11}, {"url": "https://www.marvel.com/teams-and-groups/avengers/in-comics", "anchor_text": "comics", "paragraph_index": 16}, {"url": "https://neo4j.com/labs/apoc/4.0/graph-querying/expand-subgraph/", "anchor_text": "documentation", "paragraph_index": 22}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/wcc/", "anchor_text": "Weakly Connected Components", "paragraph_index": 25}, {"url": "https://neo4j.com/docs/graph-data-science/current/management-ops/anonymous-graph/", "anchor_text": "anonymous graph projection", "paragraph_index": 26}, {"url": "https://neo4j.com/docs/java-reference/current/extending-neo4j/procedures-and-functions/procedures/", "anchor_text": "Neo4j custom procedures", "paragraph_index": 30}, {"url": "https://www.marvel.com/characters/squirrel-girl-doreen-green", "anchor_text": "Squirrel Girl", "paragraph_index": 35}, {"url": "https://neo4j.com/docs/graph-data-science/current/alpha-algorithms/cosine/", "anchor_text": "Cosine", "paragraph_index": 36}, {"url": "https://neo4j.com/docs/graph-data-science/current/alpha-algorithms/euclidean/", "anchor_text": "Euclidian", "paragraph_index": 36}, {"url": "https://neo4j.com/docs/graph-data-science/current/alpha-algorithms/pearson/", "anchor_text": "Pearson similarity", "paragraph_index": 36}, {"url": "https://dl.acm.org/doi/abs/10.1145/1963405.1963487", "anchor_text": "Efficient k-nearest neighbor graph construction for generic similarity measures", "paragraph_index": 36}, {"url": "https://neo4j.com/graphacademy/online-training/intro-graph-algos-40/", "anchor_text": "Introduction to Graph Algorithms course", "paragraph_index": 39}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/louvain/", "anchor_text": "Louvain Modularity", "paragraph_index": 42}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/label-propagation/", "anchor_text": "Label Propagation", "paragraph_index": 47}, {"url": "https://neo4j.com/try-neo4j/", "anchor_text": "try out Neo4j", "paragraph_index": 53}, {"url": "https://github.com/neo4j/graph-data-science/releases", "anchor_text": "pre-release of the 1.4 version of the GDS library", "paragraph_index": 53}, {"url": "https://neo4j.com/graphacademy/", "anchor_text": "Neo4j Graph Academy", "paragraph_index": 53}, {"url": "https://github.com/tomasonjo/blogs/blob/master/Marvel_series/Exploratory%20graph%20analysis.ipynb", "anchor_text": "GitHub", "paragraph_index": 54}, {"url": "http://mng.bz/GGVN", "anchor_text": "http://mng.bz/GGVN", "paragraph_index": 57}], "all_paragraphs": ["A wise man once said that the 2020\u201330 decade will be the decade of graph data science. Actually, that happened just a few days ago at the Nodes 2020 conference, and that wise man was Emil Eifrem presenting at the keynote of the Nodes 2020. In case you missed the conference, all the presentations are already available online.", "Only fitting Emil\u2019s statement, a pre-release of the 1.4 version of the Neo4j Graph Data Science library was published a couple of days ago. It is a significant milestone for the GDS library. A lot of new features were added in this release. If you are interested to learn more, you can inspect the release statement. In this blog post, we will take a look at the new k-Nearest Neighbours algorithm. But before we do that, we will do a proper graph exploratory analysis.", "I\u2019ve written so many blog posts it takes an effort to find some excellent datasets I haven\u2019t explored yet. This time I saw a cool repository on Kaggle containing data about the Marvel Universe. Unfortunately, I later realized that only comics and characters files have matching ids. As a graph analyst, we want to connect all the relevant data, and without matching ids, that\u2019s a bit hard. I then realized that those matching ids were scraped from the Marvel API. I fetched some additional data from the API to enrich our graph. The information about the characters is not available over the API but is available on their website. This made me put on my Spider-Man suit and test my web crawling abilities. I\u2019m quite proud to say that I learned to use Selenium and efficiently scraped the information about the characters from the Marvel website.", "You can easily import this Marvel Universe graph by running the cypher statements from this gist. It contains ten simple LOAD CSV cypher statements and an apoc.schema.assert procedure to define unique constraints and indexes. If you use Neo4j Browser, make sure you have enabled the multi-statement query editor.", "This way, you can copy the content of the whole gist and not worry about executing each statement separately.", "Now that we have imported the graph, we can examine its schema with the following procedure:", "If you run this procedure in Neo4j Browser, you will get this nice visualization of the graph schema.", "In the center of the graph, there are characters, also known as heroes. They can appear in multiple comics, are part of an event, and can belong to a group. For some of the characters, we also know their stats like speed and fighting skills. Finally, we have social ties between characters that represent relative, ally, or enemy relationships.", "To get a feel for the size of the graph, we can run the following APOC procedure:", "There are 1105 characters that have appeared in 38875 comics. We have stats for 470 of the characters. There are also 92 groups and 74 events stored in the graph.", "To get to know our graph, we will begin with a basic graph data exploration process. First, we will take a look at the characters that have most frequently appeared in comics.", "You might be wondering where I got this bar chart. Apache Zeppelin notebooks have a built-in feature that lets you create various visualization. Luckily for us, Andrea Santurbano has developed the Neo4j Connector for Apache Zeppelin, making it easy to write cypher statements to fetch or write data to the Neo4j database.", "The top five most frequent characters come as no surprise. Spiderman is the most frequent or popular character. It is no wonder that they created a younger version of Spiderman just recently, given his popularity. Tony Stark, also known as Iron Man, is in second place. It seems that Logan, also known as Wolverine, was quite popular throughout history, but I think that his popularity slowly faded away in recent times. Steve Rogers, who goes by the more popular name Captain America, is also quite famous. It would seem that the recent Marvel movies showcased the more popular characters from the comics.", "You might be wondering what the events are in our graph, so let\u2019s take a look. We will examine the events with the highest count of participating heroes.", "I have little to no idea what these events represent, but it is interesting to see that many characters participate. Most of the events span over less than a year, while the Acts of Vengeance spans over two decades. After being notified by Michael Piper that this data is likely to be incorrect, I have cross-referenced it with other sources, and it seems that this is indeed incorrect data. The Acts of Vengeance event ran from December 1989 to February 1992. I have also notified Marvel to correct this information in their API as an apology for spreading misinformation and that others won\u2019t run into the same issue. And judging by the description, Loki had something to do with it along with 92! other characters. Unfortunately, we don\u2019t have the connection between comics and events stored in our graph to allow further analysis. If someone will scrape the Marvel API, I will gladly add it to the dataset.", "Let\u2019s also take a look at the biggest groups of characters.", "There are 41 characters in X-Men, which makes sense as they had a whole academy. You might be surprised by 31 members of Avengers, but in the comics, there were many members of Avengers, although most are former members.", "Just because we can, let\u2019s inspect if some members of the same group are also enemies.", "It seems that Logan does not get along with some of the other X-Men. For some of the characters, we also have the place of origin and education available, so let\u2019s quickly look at that. During the scraping, I noticed a hero originated from Yugoslavia, so I wonder if there are more characters from Yugoslavia.", "Two characters originated from today\u2019s Croatia, which is less than two hours drive from where I live. Let\u2019s also check out all the characters that completed their Ph.D. degree.", "It looks like a lot of these heroes are quite employable. Only Nightshade seems a bit dodgy. It feels like something one would put on their LinkedIn profile to get noticed when searching for Ph.D. profiles. By the way, did you know that Professor X has four Ph.D.s and is also MD in psychiatry? Quite the educated men.", "We have examined basic graph statistics, and now we will focus more on network analysis. We will investigate the social ties between characters.To start, we will calculate the degree values for each relationship type between characters and display the heroes with the highest overall degree.", "Scarlet Witch and Thor seem to have the most direct enemies. Wolverine has the most allies but also many enemies. It looks like Triton has a big family with 17 direct relative relationships. We can use the apoc.path.subgraphAll procedure to examine the relatives' community of Triton. Check the documentation for more information.", "I never knew that some of the Marvel heroes have quite a big happy family. It wouldn\u2019t be accurate if there weren\u2019t a black sheep of the family present. Maximus looks like the family\u2019s black sheep here as he has four enemies within the family. You might wonder why ally and enemy relationships are shown when we only traversed the relative ties. Neo4j Browser has a feature that displays all connections between nodes on the screen.", "If you have a dense graph, you should probably tick off this setting as otherwise a lot of connections will show up in the Neo4j Browser.", "The Weakly Connected Components is a part of almost every graph analysis workflow. It is used to find disconnected components or islands within the network.", "In this example, the graph consists of two components. Michael, Mark, and Doug belong to the first component, while Bridget, Alice, and Charles belong to the second component. We will apply the Weakly Connected Components algorithm to find the largest component of allied characters. As we don\u2019t plan to run any other algorithms on this network, we will use the anonymous graph projection.", "The largest component of allies has 195 members. Then we have a couple of tiny allies islands with only a few members. If we visualize the largest component of allies in the Neo4j Browser and have the connect results nodes option selected, we get the following visualization.", "Although we have found the largest allies component, we can observe that many of the characters in the component are actually enemies (red relationships). To better understand why this occurs, let\u2019s look at the following example.", "In this example, Thanos is an enemy with Gamora, Magus, and Captain Marvel but is still a member of the same allied component. They belong to the same component because one can traverse the graph from any of the members to all the other group members using only the ALLY relationships (if we treat them as undirected).", "Suppose we wanted to find communities of allies where there are no enemies within the given component. The algorithm implementation is relatively straightforward, and you could use Neo4j custom procedures, for example. Still, if you are like me and don\u2019t speak Java, you can always resort to your favorite scripting language. I have developed the custom Ally component algorithm in Python. First, we define some helper functions for fetching allies and enemies of a single node.", "My implementation is relatively simple. The input to the algorithm is the list of all node ids in the largest allied components. Start from a single node, load its enemies into the enemies list and load its allies into a queue that will be processed later. Then we iterate over the allied queue. If a node is not an enemy with any of the existing nodes in the component, add them to the community list and add their enemies to the community\u2019s enemies list. I\u2019ve added some minor performance tweaks like if we have traversed the node already in the allies queue, we can remove that node from the global list of starting nodes.", "In this code, the algorithm only returns the ids of nodes that belong to the largest allied component where there are no enemies within. It shouldn\u2019t be a problem to mark these nodes in Neo4j, as you can match them by their ids. The largest component of allies, where there are no enemies within, has 142 members. If we visualize it in Neo4j Browser, we can see that there are no enemy relationships visible.", "In the last part of our analysis, we will examine the stats of the characters. We have the stats available for a total of 470 heroes. This information was scraped from Marvel\u2019s website. Here is an example of what the stats look like for a single character on the Marvel website.", "Can you guess to whom they belong? They are Tony Stark\u2019s (Iron Man) stats. The scale for stats ranges from zero to seven, and Iron Man does not have a single seven. Probably not the strongest of the heroes, even though he is one of the more popular ones. Now we will explore the characters with the highest stats average. Whenever I need some help with my cypher queries, I turn to Neo4j Slack. Luckily for us, Andrew Bowman is always around with great advice on optimizing and prettifying our cypher queries. This time he showed me the apoc.map.values procedure. It can be used to fetch all properties of a single node without explicitly writing the property keys.", "It seems many characters have their stats maxed out. I am not sure exactly how this data collection process works, but I found a fascinating heroine by the name of Squirrel Girl that could probably kick Iron Man\u2019s ass with one hand while making sourdough bread with the other. Or polish her nails, not exactly sure what type of girl she is. The only thing certain is that she is a badass.", "The k-Nearest Neighbour is one of the more standard graph algorithms and was already implemented in the Graph Data Science library before in the form of Cosine, Euclidian, and Pearson similarity algorithms. Those were basic implementation where the algorithms compared a given vector for all node pairs in the network. Because comparing all node pairs does not scale well, another implementation of the kNN algorithm was added to the library. It is based on the Efficient k-nearest neighbor graph construction for generic similarity measures article. Instead of comparing every node pair, the algorithm selects possible neighbors based on the assumption that the neighbors-of-neighbors of a node are most likely already the nearest one. The algorithm scales quasi-linear with respect to the node count instead of being quadratic. The implementation uses the Cosine similarity to compare two vectors.", "First, we need to create a vector (array of numbers) that will be compared between the pairs of heroes. We will use the characters\u2019 stats as well as their ability to fly to populate the vector. Because all stats have the same range between zero and seven, there is no need for normalization. We only need to encode the flight feature to span between zero and seven as well. Those characters that can fly will have the value of flight feature seven, while those who can\u2019t fly will have the value zero.", "We will also tag the characters that have the stats vector with a second label. This way, we can easily filter heroes with a stats vector in our native projection of the named graph.", "Now that everything is ready, we can go ahead and load our named graph. We will project all nodes with the CharacterStats label and their stats_vector properties in a named graph. If you need a quick refresher or introduction to how the GDS library works, I would suggest taking the Introduction to Graph Algorithms course.", "Now, we can go ahead and infer the similarity network with the new kNN algorithm. We will use the mutate mode of the algorithm. The mutate mode stores the results back to the projected graph instead of the Neo4j stored graph. This way, we can use the kNN algorithm results as the input for the community detection algorithms later in the workflow. The kNN algorithm has some parameters we can use to fine-tune the results:", "We will define the topK value of 15 and sampleRate of 0.8, and leave the other parameters at default values.", "The similarity network is inferred and stored in the named graph. We can examine the community structure of this new similarity network with the Louvain Modularity algorithm. As the similarity scores of relationships are available as their properties, we will use the weighted variant of the Louvain Modularity algorithm. Using the relationshipWeightProperty parameter, we let the algorithm know it should consider the relationships\u2019 weight when calculating the network\u2019s community structure. This time we will use the write mode of the algorithm to store the results back to the Neo4j stored graph.", "We can examine the community structure results with the following cypher query.", "It would make sense to add the standard deviation for each stat, but it wouldn\u2019t be presentable for a blog post. The community with an id 68 has the most powerful members. The average for most stats is 6.5, which means that they are almost entirely maxed out. The average value of flight at 2 indicates that around 30% (2/7) of the members can fly. The largest community with 106 members has their stats averaged between 2 and 3, which would indicate that they might be support characters with lesser abilities. The characters with stronger abilities are usually the lead characters.", "We can also visualize the community structure of the inferred similarity network with Neo4j Bloom. We color the nodes based on their community membership. First, we have to store the mutated relationships back to Neo4j with the gds.graph.writeRelationship procedure in order to visualize them with Neo4j Bloom.", "The pink community contains the strongest heroes. We can observe that they have their own cluster in the top right and also span a little towards the center.", "Label Propagation algorithm can also be used to determine the community structure of a network. We will apply it to the inferred similarity network and compare the results with the Louvain Modularity algorithm results.", "We investigate the results of the Label Propagation algorithm.", "We can notice that the Label Propagation algorithm found twice as many communities as the Louvain Modularity algorithm. Some of them are relatively tiny. For example, the community with an id 693 has only three members, and all their average stats are at 1.0 value. They are the heroes that go by the name of Maggott, Deathbird, and Slayback. Funky names. The most powerful community has an id of 137 and only 23 members. Remember, the most powerful community found by the Louvain Modularity algorithm had 46 members and a slightly lower value of average stats.", "We can again visualize the results of the Label Propagation community structure with Neo4j Bloom.", "Again, the members of the pink community are the most powerful. We can notice that this time the top right cluster does not span into the center at all. We can zoom in on that community to inspect its members visually.", "It seems that all things are in balance as they should be because the Squirrel Girl is right in the center of the most powerful community.", "I hope you have learned some tricks on performing network analysis in Neo4j with the help of APOC and GDS libraries. There are still many things we could do with this graph, so expect a new post shortly. Until then, try out Neo4j and play around with the pre-release of the 1.4 version of the GDS library. If you need help getting started, I recommend looking at the Neo4j Graph Academy.", "As always, the code is available on GitHub.", "Edit: I have removed the faulty historical data about the characters due to the flaw in the data collection process.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data explorer. Turn everything into a graph. Author of Graph algorithms for Data Science at Manning publication. http://mng.bz/GGVN"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fc557f4959048&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----c557f4959048--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c557f4959048--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://bratanic-tomaz.medium.com/?source=post_page-----c557f4959048--------------------------------", "anchor_text": ""}, {"url": "https://bratanic-tomaz.medium.com/?source=post_page-----c557f4959048--------------------------------", "anchor_text": "Tomaz Bratanic"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F57f13c0ea39a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=post_page-57f13c0ea39a----c557f4959048---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc557f4959048&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc557f4959048&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/hands-on-tutorials", "anchor_text": "Hands-on Tutorials"}, {"url": "https://www.youtube.com/watch?v=ivOPeDe8IDc", "anchor_text": "keynote of the Nodes 2020"}, {"url": "https://neo4j.com/video/nodes-2020/", "anchor_text": "already available online"}, {"url": "https://neo4j.com/docs/graph-data-science/current/", "anchor_text": "Neo4j Graph Data Science"}, {"url": "https://github.com/neo4j/graph-data-science/releases/tag/1.4.0-alpha07", "anchor_text": "release statement"}, {"url": "https://www.kaggle.com/dannielr/marvel-superheroes", "anchor_text": "cool repository on Kaggle"}, {"url": "https://gist.github.com/tomasonjo/fbc6d617c3f6476a3a825b5dd22fd29a", "anchor_text": "gist"}, {"url": "https://zeppelin.apache.org/", "anchor_text": "Apache Zeppelin notebooks"}, {"url": "https://twitter.com/santand84", "anchor_text": "Andrea Santurbano"}, {"url": "https://www.marvel.com/teams-and-groups/avengers/in-comics", "anchor_text": "comics"}, {"url": "https://neo4j.com/labs/apoc/4.0/graph-querying/expand-subgraph/", "anchor_text": "documentation"}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/wcc/", "anchor_text": "Weakly Connected Components"}, {"url": "https://neo4j.com/docs/graph-data-science/current/management-ops/anonymous-graph/", "anchor_text": "anonymous graph projection"}, {"url": "https://neo4j.com/docs/java-reference/current/extending-neo4j/procedures-and-functions/procedures/", "anchor_text": "Neo4j custom procedures"}, {"url": "https://www.marvel.com/characters/squirrel-girl-doreen-green", "anchor_text": "Squirrel Girl"}, {"url": "https://neo4j.com/docs/graph-data-science/current/alpha-algorithms/cosine/", "anchor_text": "Cosine"}, {"url": "https://neo4j.com/docs/graph-data-science/current/alpha-algorithms/euclidean/", "anchor_text": "Euclidian"}, {"url": "https://neo4j.com/docs/graph-data-science/current/alpha-algorithms/pearson/", "anchor_text": "Pearson similarity"}, {"url": "https://dl.acm.org/doi/abs/10.1145/1963405.1963487", "anchor_text": "Efficient k-nearest neighbor graph construction for generic similarity measures"}, {"url": "https://neo4j.com/graphacademy/online-training/intro-graph-algos-40/", "anchor_text": "Introduction to Graph Algorithms course"}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/louvain/", "anchor_text": "Louvain Modularity"}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/label-propagation/", "anchor_text": "Label Propagation"}, {"url": "https://neo4j.com/try-neo4j/", "anchor_text": "try out Neo4j"}, {"url": "https://github.com/neo4j/graph-data-science/releases", "anchor_text": "pre-release of the 1.4 version of the GDS library"}, {"url": "https://neo4j.com/graphacademy/", "anchor_text": "Neo4j Graph Academy"}, {"url": "https://github.com/tomasonjo/blogs/blob/master/Marvel_series/Exploratory%20graph%20analysis.ipynb", "anchor_text": "GitHub"}, {"url": "https://medium.com/tag/neo4j?source=post_page-----c557f4959048---------------neo4j-----------------", "anchor_text": "Neo4j"}, {"url": "https://medium.com/tag/marvel?source=post_page-----c557f4959048---------------marvel-----------------", "anchor_text": "Marvel"}, {"url": "https://medium.com/tag/graph?source=post_page-----c557f4959048---------------graph-----------------", "anchor_text": "Graph"}, {"url": "https://medium.com/tag/data-science?source=post_page-----c557f4959048---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/hands-on-tutorials?source=post_page-----c557f4959048---------------hands_on_tutorials-----------------", "anchor_text": "Hands On Tutorials"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc557f4959048&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=-----c557f4959048---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc557f4959048&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=-----c557f4959048---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc557f4959048&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c557f4959048--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fc557f4959048&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----c557f4959048---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----c557f4959048--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----c557f4959048--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----c557f4959048--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----c557f4959048--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----c557f4959048--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----c557f4959048--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----c557f4959048--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----c557f4959048--------------------------------", "anchor_text": ""}, {"url": "https://bratanic-tomaz.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://bratanic-tomaz.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Tomaz Bratanic"}, {"url": "https://bratanic-tomaz.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3.1K Followers"}, {"url": "http://mng.bz/GGVN", "anchor_text": "http://mng.bz/GGVN"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F57f13c0ea39a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=post_page-57f13c0ea39a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Feab586d298c8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexploratory-network-analysis-of-marvel-universe-c557f4959048&newsletterV3=57f13c0ea39a&newsletterV3Id=eab586d298c8&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}