{"url": "https://towardsdatascience.com/overview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10", "time": 1683017856.104178, "path": "towardsdatascience.com/overview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10/", "webpage": {"metadata": {"title": "Overview \u2014 Abstract Super-Type Heirarchies in Julia | by Emma Boudreau | Towards Data Science", "h1": "Overview \u2014 Abstract Super-Type Heirarchies in Julia", "description": "The Julia programming language is an exciting new programming language that is quite young and has come up recently for its excellent features. One feature that is really cool in the Julia\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["The Julia programming language is an exciting new programming language that is quite young and has come up recently for its excellent features. One feature that is really cool in the Julia programming language and adds a lot of interesting features is the ability to create abstract types to create functional inheritance with Julia\u2019s multiple dispatch. If you\u2019re not familiar with those terms, than you might enjoy learning more about the Julia programming language as I discuss in this brief introduction to the language:", "Abstract types in Julia are structs that have no clear definition. They can be used to allow different types of structs to use the same function under dispatch if they are meant to be handled the same way.", "Abstract types are typically the head of the super-type heirarchy in a given Julia environment. We can create an abstract type by simply using the abstract type keywords:", "We can think of this animal type as the ultimate classification of our types. For example, we could say that a Honda Civic is a type of sedan, which is a type of car, which is a type of transportation. As with the civic we will do the same with a small mammal based on two classifications: weight and diet class. For my first example, I considered a small rabbit. A rabbit is a small mammal and would need to be used with all of the functions that any other mammal might use, or animal for that matter. What we need to effectively handle a situation like this is inheritance. Using the <: operator, we can create a sub-type to our original abstract type:", "Now let\u2019s make our little rabbit and plug in the data:", "Now if we check the type of this rabbit using the typeof() method, we will get mammal:", "Without a doubt, we can say that a rabbit is a mammal, which is an animal. However, we certainly could not get away with saying that every animal classification is a mammal \u2014 so with that in mind, let\u2019s create a different type to deal with another type of animal, a reptile.", "Since both of these types are categorized as animals, if we were to have a type-specific function, we could use this same type for both in order to weed around calls on the wrong types:", "Now we can make a new snake type and pass it through this function along with our old rabbit:", "Just because both of these types are animals also does not make them the same, and we can stress the importance of that by simply asserting our arguments to the respective level on the hierarchy:", "So if the <: operator is used to assign these sub-types, what does the operator actually mean? The <: operator means", "and will return a Bool type. That being said the operator can also be used in conditional statements which require a boolean type operator. For example,", "will return true, because a reptile is classified as a mammal in our super-type hierarchy.", "We can always take things a significant step further by utilizing more abstract types, for example we could have our animal classifications remain abstract and get a bit more specific with dispatch. Meet my new friend, Freddie The Frog!:", "Now let\u2019s compare so we can see where this classification lies on our new list of super-types:", "So now we have created a new frog friend that is a frog, amphibian, and an animal and classified as such.", "Julia is a fantastic up and coming programming language that has a lot of very interesting and envelope-pushing approaches to solving classic programming problems. One problem that has plagued functional programmers since their inception is the inability to classify based on templates of previous objects. This is an interesting discussion, because this is the magic and expression of the C++ or Simula programming language that we are now seeing recreated in this recent scientific language out of MIT.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F26b7e64c9d10&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://emmettgb.medium.com/?source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": "Emma Boudreau"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c----26b7e64c9d10---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F26b7e64c9d10&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F26b7e64c9d10&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/how-i-came-to-love-the-julia-language-948c32e2f9b0", "anchor_text": "How I Came To Love The Julia LanguageWhy Julia quickly became my favorite programming language for Data Sciencetowardsdatascience.com"}, {"url": "https://github.com/emmettgb/Emmetts-DS-NoteBooks/blob/master/Julia/JL%20supertypes.ipynb", "anchor_text": "Notebook"}, {"url": "https://medium.com/tag/programming?source=post_page-----26b7e64c9d10---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----26b7e64c9d10---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/julia?source=post_page-----26b7e64c9d10---------------julia-----------------", "anchor_text": "Julia"}, {"url": "https://medium.com/tag/types?source=post_page-----26b7e64c9d10---------------types-----------------", "anchor_text": "Types"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----26b7e64c9d10---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F26b7e64c9d10&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&user=Emma+Boudreau&userId=ea170050148c&source=-----26b7e64c9d10---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F26b7e64c9d10&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&user=Emma+Boudreau&userId=ea170050148c&source=-----26b7e64c9d10---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F26b7e64c9d10&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F26b7e64c9d10&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----26b7e64c9d10---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----26b7e64c9d10--------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Emma Boudreau"}, {"url": "https://emmettgb.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "4.6K Followers"}, {"url": "https://twitter.com/emmettboudgie", "anchor_text": "https://twitter.com/emmettboudgie"}, {"url": "https://github.com/emmettgb", "anchor_text": "https://github.com/emmettgb"}, {"url": "https://ems.computer/", "anchor_text": "https://ems.computer/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff16bf42bb45f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foverview-abstract-super-type-heirarchies-in-julia-26b7e64c9d10&newsletterV3=ea170050148c&newsletterV3Id=f16bf42bb45f&user=Emma+Boudreau&userId=ea170050148c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}