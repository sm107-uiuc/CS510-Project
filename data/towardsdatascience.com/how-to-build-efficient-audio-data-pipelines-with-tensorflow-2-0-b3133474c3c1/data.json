{"url": "https://towardsdatascience.com/how-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1", "time": 1683002687.246125, "path": "towardsdatascience.com/how-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1/", "webpage": {"metadata": {"title": "How to Build Efficient Audio-Data Pipelines with TensorFlow 2.0 | by David Schwertfeger | Towards Data Science", "h1": "How to Build Efficient Audio-Data Pipelines with TensorFlow 2.0", "description": "GPUs can considerably speed up your training times. To achieve optimal performance, you need to provide them with enough data for every training step. Otherwise, things can become really slow. \ud83d\udca4\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/how-to-easily-process-audio-on-your-gpu-with-tensorflow-2d9d91360f06", "anchor_text": "preprocessing", "paragraph_index": 4}, {"url": "https://www.tensorflow.org/guide/data", "anchor_text": "TensorFlow Guide", "paragraph_index": 7}, {"url": "https://www.tensorflow.org/tutorials/load_data", "anchor_text": "loading and preprocessing data", "paragraph_index": 13}, {"url": "https://www.tensorflow.org/tutorials/load_data/images#load_using_tfdata", "anchor_text": "loading images", "paragraph_index": 14}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "TensorFlow documentation", "paragraph_index": 24}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "TensorFlow docs", "paragraph_index": 30}, {"url": "https://gist.github.com/dschwertfeger/3288e8e1a2d189e5565cc43bb04169a1", "anchor_text": "this more elaborate version of the above script", "paragraph_index": 32}], "all_paragraphs": ["GPUs can considerably speed up your training times. To achieve optimal performance, you need to provide them with enough data for every training step. Otherwise, things can become really slow. \ud83d\udca4", "Seeing your GPU idle while staring at a barely moving progress-bar must be one of the most frustrating experiences you can have as a researcher.", "At least it is for me.", "Especially in the early stages of your research, it\u2019s crucial that you can try out new ideas and test your assumptions quickly to move in the right direction. And nothing is worse than waiting hours for results to trickle in when your mind is buzzing with ideas.", "The challenge is to deliver data from your hard-drive to your GPU in time for the next training step before the current one finishes. This involves loading and decoding raw bytes from disk, preprocessing and possibly augmenting data, and preparing batches.", "It is your data pipeline\u2019s job to do exactly that.", "This post walks you through building an efficient data pipeline for audio data using the tf.data API.", "The tf.data API makes it possible to handle large amounts of data, read from different data formats, and perform complex transformations. \u2014 TensorFlow Guide", "I found instructions and tips on how to build efficient data-pipelines for audio-data scattered around the web. I compiled these into this post and code examples for you to get started building your own.", "I\u2019ll link to relevant resources at the end of this post.", "As long as your dataset is small enough to fit into memory, you can simply load it once before you start training and repeatedly iterate over it. That\u2019s the standard approach most of us have been taking before we started working with larger datasets.", "The moment you can\u2019t fit all your data into memory anymore is when you need to load data on-demand to keep your GPU busy. You still want to be able to shuffle, batch and preprocess your data as you did before, though.", "And a data-pipeline can help you achieve this.", "The official TensorFlow tutorial about loading and preprocessing data contains a lot of useful information and examples. Unfortunately, none of the examples is about audio-data.", "A good starting point, though, is the section about loading images.", "Based on this tutorial, you can build your first data-pipeline using the tf.data API in only three simple steps:", "Putting the pieces together, you may end up with something like this:", "But that\u2019s only half the story.", "Unfortunately, for any reasonably sized dataset, your performance will take a big hit if you follow the approach above. Your GPU and CPU will be virtually idle but disk I/O maxed out. Your hard-drive has become the bottleneck.", "You may have a powerful GPU and multi-core CPU but only one physical hard-disk with one head to read data. The .map() call in line 26 runs the load_audio parse-function parallelly on your available CPU-cores.", "Now, you\u2019ve got many processes trying to read data from random locations off your disk but still only one head that does the reading. With all this jumping around, this is not going to be much faster than a single read-process.", "So, if you read hundreds of thousands of small files, like a-few-second-long WAV files, the overhead of seeking the right location and opening each file will become the bottleneck.", "But don\u2019t worry, there\u2019s a solution.", "TFRecords can store sequences of binary records. This means you can put many WAV files into a TFRecord and increase the data-throughput per disk-read.", "In theory, you could store all of your WAV files in a single TFRecord file. The TensorFlow documentation recommends splitting data into multiple TFRecord shards, each between 100 MB and 200 MB large, though. In practice, it also makes sense to have at least as many TFRecord shards as you have CPU cores to take advantage of parallelization.", "With hundreds of WAV files in a TFRecord shard, you reduce disk I/O because you need to open only one file to read and access many audio files. You increase data-throughput per disk-read and eliminate the disk I/O bottleneck.", "This concept is actually quite similar to using sprite-sheets in web and game development where you compose a bunch of small images (the sprites) into one large image (the sheet) to improve performance and start-up time and reduce overall memory usage.", "Converting to TFRecord format (and reading it) requires quite a bit of boilerplate. To convert, you need to:", "If this is isn\u2019t confusing enough, check out how this looks in code:", "Here\u2019s a little script to show how converting WAV files into TFRecord shards might look in practice:", "Before you start copying and pasting the code above, it\u2019s worth considering this sentence from the TensorFlow docs:", "There is no need to convert existing code to use TFRecords, unless you are using tf.data and reading data is still the bottleneck to training.", "If you do find that reading data is your bottleneck, you might want to check out this more elaborate version of the above script. It writes TFRecord shards in parallel with available CPU cores and estimates the number of files each shard should contain to stay between 100 MB and 200 MB.", "Lastly, the number of files in each shard matters. It needs to be large enough to eliminate the disk I/O bottleneck. Before I found the option to compress TFRecords, each shard fit only about 100 WAV files. I ended up with a few thousand shards which meant still too many reads for too little data.", "Once you\u2019ve converted your WAV files into TFRecords, you need to make a few tweaks to your data-pipeline:", "Since each example is stored as a binary protocol buffer, you need to provide a parse function that can transform these messages back into Tensor values.", "Here\u2019s an example of how this might look like:", "Et voil\u00e0. This is how you build an efficient data-pipeline for audio-data.", "We started with a simple data-pipeline based on an introductory example from the TensorFlow guide. We found out about the disk I/O bottleneck. We converted WAV files to TFRecords to eliminate it. And, finally, we updated our data-pipeline to read TFRecords and load audio-data from them.", "If you want to dig a little deeper, I\u2019ll leave you with a couple of links to resources that inspired and helped create this post. You\u2019ll find them below.", "But first, I\u2019d like to hear from you. Are you taking a similar or completely different approach? Do you have any insights you\u2019d like to share with me and other readers? Please post them in the comments.", "And remember, a system is only as fast as its slowest component.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb3133474c3c1&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b3133474c3c1--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b3133474c3c1--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://davidschwertfeger.medium.com/?source=post_page-----b3133474c3c1--------------------------------", "anchor_text": ""}, {"url": "https://davidschwertfeger.medium.com/?source=post_page-----b3133474c3c1--------------------------------", "anchor_text": "David Schwertfeger"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F47fff5db2f66&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&user=David+Schwertfeger&userId=47fff5db2f66&source=post_page-47fff5db2f66----b3133474c3c1---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb3133474c3c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb3133474c3c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@frostroomhead?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Rodion Kutsaev"}, {"url": "https://unsplash.com/s/photos/pipeline?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://towardsdatascience.com/how-to-easily-process-audio-on-your-gpu-with-tensorflow-2d9d91360f06", "anchor_text": "preprocessing"}, {"url": "https://www.tensorflow.org/guide/data", "anchor_text": "TensorFlow Guide"}, {"url": "https://www.tensorflow.org/tutorials/load_data", "anchor_text": "loading and preprocessing data"}, {"url": "https://www.tensorflow.org/tutorials/load_data/images#load_using_tfdata", "anchor_text": "loading images"}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "TensorFlow documentation"}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "TensorFlow docs"}, {"url": "https://gist.github.com/dschwertfeger/3288e8e1a2d189e5565cc43bb04169a1", "anchor_text": "this more elaborate version of the above script"}, {"url": "https://www.tensorflow.org/guide/data", "anchor_text": "tf.data"}, {"url": "https://www.tensorflow.org/guide/data", "anchor_text": ": Build TensorFlow input pipelines"}, {"url": "https://www.tensorflow.org/guide/data_performance", "anchor_text": "Better performance with the"}, {"url": "https://www.tensorflow.org/guide/data_performance", "anchor_text": "tf.data"}, {"url": "https://www.tensorflow.org/guide/data_performance", "anchor_text": "API"}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "TFRecord and"}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "tf.Example"}, {"url": "https://codelabs.developers.google.com/codelabs/keras-flowers-data/#0", "anchor_text": "TPU-speed data pipelines:"}, {"url": "https://codelabs.developers.google.com/codelabs/keras-flowers-data/#0", "anchor_text": "tf.data.Dataset"}, {"url": "https://codelabs.developers.google.com/codelabs/keras-flowers-data/#0", "anchor_text": "and TFRecords"}, {"url": "http://cs230.stanford.edu/blog/datapipeline/", "anchor_text": "Stanford CS230: Building a data pipeline"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----b3133474c3c1---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/tensorflow?source=post_page-----b3133474c3c1---------------tensorflow-----------------", "anchor_text": "TensorFlow"}, {"url": "https://medium.com/tag/audio?source=post_page-----b3133474c3c1---------------audio-----------------", "anchor_text": "Audio"}, {"url": "https://medium.com/tag/technology?source=post_page-----b3133474c3c1---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/tag/data-science?source=post_page-----b3133474c3c1---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb3133474c3c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&user=David+Schwertfeger&userId=47fff5db2f66&source=-----b3133474c3c1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb3133474c3c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&user=David+Schwertfeger&userId=47fff5db2f66&source=-----b3133474c3c1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb3133474c3c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b3133474c3c1--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb3133474c3c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b3133474c3c1---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b3133474c3c1--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b3133474c3c1--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b3133474c3c1--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b3133474c3c1--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b3133474c3c1--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b3133474c3c1--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b3133474c3c1--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b3133474c3c1--------------------------------", "anchor_text": ""}, {"url": "https://davidschwertfeger.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://davidschwertfeger.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "David Schwertfeger"}, {"url": "https://davidschwertfeger.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "108 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F47fff5db2f66&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&user=David+Schwertfeger&userId=47fff5db2f66&source=post_page-47fff5db2f66--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F68b9babc543b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1&newsletterV3=47fff5db2f66&newsletterV3Id=68b9babc543b&user=David+Schwertfeger&userId=47fff5db2f66&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}