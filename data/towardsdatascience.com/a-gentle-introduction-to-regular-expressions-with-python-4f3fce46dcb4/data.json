{"url": "https://towardsdatascience.com/a-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4", "time": 1683013253.888206, "path": "towardsdatascience.com/a-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4/", "webpage": {"metadata": {"title": "Intro to Regular Expressions (Regex) | Towards Data Science", "h1": "A Gentle Introduction to Regular Expressions with Python", "description": "Data isn't always useful in it's raw, unstructured form. Text data is a great example of unstructured data. Introducing: regular expressions, or regex!"}, "outgoing_paragraph_urls": [{"url": "https://www.wired.com/insights/2014/07/data-new-oil-digital-economy/", "anchor_text": "new oil", "paragraph_index": 0}, {"url": "https://www.datamation.com/big-data/structured-vs-unstructured-data.html", "anchor_text": "unstructured data", "paragraph_index": 0}, {"url": "https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html#dataframe", "anchor_text": "pandas DataFrame", "paragraph_index": 1}, {"url": "https://www.w3schools.com/python/python_regex.asp", "anchor_text": "regular expressions", "paragraph_index": 1}, {"url": "http://www.linkedin.com/in/realdrewdata", "anchor_text": "www.linkedin.com/in/realdrewdata", "paragraph_index": 34}], "all_paragraphs": ["We live in a data-centric age. Data has been described as the new oil. But just like oil, data isn\u2019t always useful in its raw form. One form of data that is particularly hard to use in its raw form is unstructured data.", "A lot of data is unstructured data. Unstructured data doesn\u2019t fit nicely into a format for analysis, like an Excel spreadsheet or a pandas DataFrame. Text data is a common type of unstructured data and this makes it difficult to work with. Enter regular expressions, or regex for short. They may look a little intimidating at first, but once you start to use them, you\u2019ll be as comfortable as this snake in no time \ud83d\udc0d!", "More comfortable with python? Try my tutorial for using regex with R instead:", "We\u2019ll use the regular expressions module. To import this into your python project, use the following command:", "See how easy that is? The re module is built into python, so there is no need to install it. Let\u2019s take a look at a couple of the functions we have available to us in this module:", "You may have already used these functions. They have pretty straightforward applications without adding regex. Think back to the times before social distancing and imagine a nice picnic in the park. Here\u2019s an example string with what everyone is bringing to the picnic. We can use it to demonstrate the basic usage of the regex functions:", "If I want to pull every instance of one person\u2019s name from this string, I would simply pass the name and basic_string to re.findall():", "The result will be a list with all occurrences of the pattern. Using this example, basic_find will be a list with one item:", "Now let\u2019s imagine that Alex left his 4 hamburgers unattended at the picnic and they were stolen by Shawn. re.sub() can replace any instances of Alex with Shawn:", "The resulting string will show that Shawn now has 4 hamburgers. What a lucky guy \ud83c\udf54.", "The examples so far are pretty basic. There is a time and place for them, but what if we want to know how many total food items there are at the picnic? Who are all the people with items? What if we need this data in a pandas dataframe for further analysis? This is where you will start to see the benefits of regex.", "There are several concepts that drive regex:", "This is not an exhaustive list, but is plenty to help us hit the ground running.", "Character sets represent options inside of brackets, with regex matching only one of the options. There are multiple things we can do with character sets:", "Character sets can contain everything from this section simultaneously, so something like [A-Ct-z7-9] is still valid. It will match every character from capital \u201cA\u201d to capital \u201cC,\u201d lowercase \u201ct\u201d to lowercase \u201cz,\u201d and 7 through 9.", "So far we can\u2019t answer any of the questions posed earlier with bracket groups. Let\u2019s add some more weapons to our regex arsenal.", "Meta characters represent a type of character. They will typically begin with a backslash \\. Each one will match to a single character. Here are some of the most important ones in action:", "As we saw in the previous section, a single meta character can have somewhat limited functionality. When it comes to words or numbers, we usually want to find more than 1 character at a time. This is where quantifiers come in. They allow you to quantify how many of a character you are expecting. They always come after the character they are quantifying and come in a few flavors:", "When we use the + quantifier on quant_example, it will return 4 matches. This is a good point to mention that regex looks for non-overlapping matches. In this case, it looks at each B and the character that follows it. Since we used the + quantifier, it continues to match until it reaches the end of a group of B\u2019s.", "When written like {2,4}, it will match any number of B\u2019s from 2 to 4 occurrences. Note that putting a space in your regex will NOT work. It will return an empty list.", "We can also write this quantifier and omit the upper bound like {2,}. This will match 2 or more instances. For quant_example, it will return the exact same result as {2,4}.", "The * quantifier returns some strange matches when used by itself, so we can omit an example with quant_example. We will see in a following example how it can be applied when someone at our picnic is bringing a food item with a multiple word name. Without it, we wouldn\u2019t correctly capture that Anna is bringing soft pretzels!", "Let\u2019s combine what we know so far about character sets, meta characters, and quantifiers to answer some questions about our picnic string. We want to know all of the words that are in the string and also the numbers in the string.", "For words, we can use a character set with all upper and lower case letters, adding a + quantifier to it. This will find any length of alpha characters grouped together. Said another way, it finds all of the words. Regex is starting to look much more helpful.", "To find the quantity of each food item, we can use the \\d meta character and the quantifier {1,2}. This will find the groups of digits that are 1 or 2 characters long. This is a much more useful output as we have the same number of quantities as we have food items and people!", "To find the quantity and name of each food item, we can combine quantifiers with meta characters. We know that each number has a food item directly after it, so we can just add on to the previous example. We know there is a space and a word (\\s\\w+) that could be followed by another word like how \u201csoft pretzel\u201d appears. To specify the second word might not be there, we can use the * quantifier with the second word. Just like that we have a list containing the quantity and name of every good at our picnic.", "Capture groups allow you to look for entire phrases and only return parts of them. With our example, I want each person\u2019s name, what they are bringing, and how much of it they are bringing.", "The regex we used in capture_group1 is looking for a name, which starts with a capital letter and has any amount of lowercase letters after it ([A-Z][a-z]+). Then after a space it matches the pattern space, word, space \\s\\w+\\s. Next we are looking for a 1 to 2 digit number followed by a space and a word (\\d{1,2}\\s\\w+). You can see in the output we get a string with the details for each person.", "Now this is a big step up from where we started, but we don\u2019t really care about the word \u201chas\u201d, and we want to be able to make a pandas dataframe out of the quantities. Let\u2019s add in capture groups. By using capture groups, we can return a tuple with the desired information. We\u2019ll create capture groups containing each name, quantity, and item. Capture groups are simply sections of the regex that you wrap in parenthesis.", "Just like that we now have a list of tuples containing the exact information that we want!", "When doing data analysis, one of the most useful python data structures is a pandas dataframe. No doubt you already knew this if you clicked on this article. Dataframes enable things like calculating column statistics and plotting data. Since we have a list of tuples with all of the information we want in our dataframe, we can just iterate over the list, building our dataframe.", "We only covered a small subset of how regex can help handle unstructured text data. This is a good foundation to get started, but before long you will need to know concepts like how to find everything BUT a character (negation) or find something immediately before or after something else (lookarounds). Check out my other post on those concepts.", "Here are some more resources to help you learn more about these other concepts in regex:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist | Twitter @RealDrewData | LinkedIn: www.linkedin.com/in/realdrewdata"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F4f3fce46dcb4&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://realdrewdata.medium.com/?source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": ""}, {"url": "https://realdrewdata.medium.com/?source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": "Drew Seewald"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdff5f2854781&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&user=Drew+Seewald&userId=dff5f2854781&source=post_page-dff5f2854781----4f3fce46dcb4---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4f3fce46dcb4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4f3fce46dcb4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@marius?utm_source=medium&utm_medium=referral", "anchor_text": "Marius Masalar"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.wired.com/insights/2014/07/data-new-oil-digital-economy/", "anchor_text": "new oil"}, {"url": "https://www.datamation.com/big-data/structured-vs-unstructured-data.html", "anchor_text": "unstructured data"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html#dataframe", "anchor_text": "pandas DataFrame"}, {"url": "https://www.w3schools.com/python/python_regex.asp", "anchor_text": "regular expressions"}, {"url": "https://medium.com/@atseewal/a-gentle-introduction-to-regular-expressions-with-r-df5e897ca432", "anchor_text": "A Gentle Introduction to Regular Expressions with RRegular expressions are the data scientist\u2019s most formidable weapon against unstructured text. They\u2019re a picnic once\u2026medium.com"}, {"url": "https://unsplash.com/@timcollinsphoto?utm_source=medium&utm_medium=referral", "anchor_text": "Tim Collins"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.codecademy.com/articles/what-is-an-ide", "anchor_text": "integrated development environments"}, {"url": "https://towardsdatascience.com/anchors-away-more-python-regular-expressions-you-wish-you-knew-8a7780ac54e9", "anchor_text": "Anchors Away! More Python Regular Expressions You Wish You KnewSecrets to working with text using advanced regular expressions tools in Pythontowardsdatascience.com"}, {"url": "https://docs.python.org/3/library/re.html", "anchor_text": "The official"}, {"url": "https://docs.python.org/3/library/re.html", "anchor_text": "re"}, {"url": "https://docs.python.org/3/library/re.html", "anchor_text": "documentation"}, {"url": "https://www.w3schools.com/python/python_regex.asp", "anchor_text": "w3schools References"}, {"url": "https://www.datacamp.com/join-me/ODczNDQ5", "anchor_text": "Datacamp Courses"}, {"url": "https://realdrewdata.medium.com/membership", "anchor_text": "Join Medium with my referral link - Drew SeewaldAs a Medium member, a portion of your membership fee goes to writers you read, and you get full access to every story\u2026realdrewdata.medium.com"}, {"url": "https://medium.com/tag/python?source=post_page-----4f3fce46dcb4---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/regex?source=post_page-----4f3fce46dcb4---------------regex-----------------", "anchor_text": "Regex"}, {"url": "https://medium.com/tag/regular-expressions?source=post_page-----4f3fce46dcb4---------------regular_expressions-----------------", "anchor_text": "Regular Expressions"}, {"url": "https://medium.com/tag/unstructured-data?source=post_page-----4f3fce46dcb4---------------unstructured_data-----------------", "anchor_text": "Unstructured Data"}, {"url": "https://medium.com/tag/data-science?source=post_page-----4f3fce46dcb4---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4f3fce46dcb4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&user=Drew+Seewald&userId=dff5f2854781&source=-----4f3fce46dcb4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4f3fce46dcb4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&user=Drew+Seewald&userId=dff5f2854781&source=-----4f3fce46dcb4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4f3fce46dcb4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F4f3fce46dcb4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----4f3fce46dcb4---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----4f3fce46dcb4--------------------------------", "anchor_text": ""}, {"url": "https://realdrewdata.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://realdrewdata.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Drew Seewald"}, {"url": "https://realdrewdata.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "229 Followers"}, {"url": "http://www.linkedin.com/in/realdrewdata", "anchor_text": "www.linkedin.com/in/realdrewdata"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdff5f2854781&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&user=Drew+Seewald&userId=dff5f2854781&source=post_page-dff5f2854781--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff18c5782a69f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-gentle-introduction-to-regular-expressions-with-python-4f3fce46dcb4&newsletterV3=dff5f2854781&newsletterV3Id=f18c5782a69f&user=Drew+Seewald&userId=dff5f2854781&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}