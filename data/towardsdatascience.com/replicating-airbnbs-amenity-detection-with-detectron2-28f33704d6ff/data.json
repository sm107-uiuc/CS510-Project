{"url": "https://towardsdatascience.com/replicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff", "time": 1683006499.108845, "path": "towardsdatascience.com/replicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff/", "webpage": {"metadata": {"title": "Replicating Airbnb\u2019s Amenity Detection with Detectron2 | by Daniel Bourke | Towards Data Science", "h1": "Replicating Airbnb\u2019s Amenity Detection with Detectron2", "description": "How do you work on your own machine learning projects? You see the work of others and replicate it. Here's how I rebuilt Airbnb's amenity detection model."}, "outgoing_paragraph_urls": [{"url": "https://medium.com/airbnb-engineering/amenity-detection-and-beyond-new-frontiers-of-computer-vision-at-airbnb-144a4441b72e", "anchor_text": "an article by Airbnb\u2019s engineering team", "paragraph_index": 0}, {"url": "https://github.com/facebookresearch/detectron2", "anchor_text": "Detectron2", "paragraph_index": 12}, {"url": "https://www.wandb.com/", "anchor_text": "Weights & Biases", "paragraph_index": 12}, {"url": "https://www.streamlit.io", "anchor_text": "Streamlit", "paragraph_index": 12}, {"url": "https://pytorch.org/", "anchor_text": "PyTorch", "paragraph_index": 12}, {"url": "https://dbourke.link/airbnb42days", "anchor_text": "Notion document", "paragraph_index": 14}, {"url": "https://www.notion.so/mrdbourke/42-Days-2020ify-ing-Airbnb-s-Object-Detection-Pipeline-4d6070ca45534a67a80b014dd1110acd#16226023446b4576acd2c9aae33fbbbf", "anchor_text": "some criteria", "paragraph_index": 14}, {"url": "https://storage.googleapis.com/openimages/web/index.html", "anchor_text": "Open Images", "paragraph_index": 27}, {"url": "https://www.learnopencv.com/fast-image-downloader-for-open-images-v4/", "anchor_text": "a great guide from LearnOpenCV", "paragraph_index": 32}, {"url": "https://github.com/mrdbourke/airbnb-amenity-detection/blob/master/downloadOI.py", "anchor_text": "downloadOI.py", "paragraph_index": 33}, {"url": "https://storage.googleapis.com/openimages/web/download.html", "anchor_text": "Open Images download page", "paragraph_index": 39}, {"url": "https://detectron2.readthedocs.io/tutorials/datasets.html", "anchor_text": "Detectron2 style labels", "paragraph_index": 42}, {"url": "https://storage.googleapis.com/openimages/v5/validation-annotations-bbox.csv", "anchor_text": "validation-annotations-bbox.csv", "paragraph_index": 61}, {"url": "https://dbourke.link/airbnbcode", "anchor_text": "the example Google Colab notebook", "paragraph_index": 77}, {"url": "https://detectron2.readthedocs.io/tutorials/datasets.html#register-a-dataset", "anchor_text": "register a dataset with Detectron2", "paragraph_index": 80}, {"url": "https://docs.python.org/3/library/enum.html", "anchor_text": "Python enum type", "paragraph_index": 84}, {"url": "https://github.com/facebookresearch/detectron2/blob/master/MODEL_ZOO.md", "anchor_text": "Detectron2\u2019s model zoo", "paragraph_index": 99}, {"url": "http://cocodataset.org/#home", "anchor_text": "COCO (common objects in context) dataset", "paragraph_index": 99}, {"url": "https://www.wandb.com", "anchor_text": "Weights & Biases", "paragraph_index": 107}, {"url": "https://app.wandb.ai/mrdbourke/airbnb-amenity-detection/runs/18uz78yn", "anchor_text": "fine-haze-37", "paragraph_index": 111}, {"url": "https://app.wandb.ai/mrdbourke/airbnb-amenity-detection/runs/374stxdc", "anchor_text": "earthly-cloud-39", "paragraph_index": 111}, {"url": "https://app.wandb.ai/mrdbourke/airbnb-amenity-detection/runs/s0z24hvo", "anchor_text": "stilted-spaceship-46", "paragraph_index": 122}, {"url": "https://engineering.fb.com/data-center-engineering/introducing-big-basin-our-next-generation-ai-hardware/", "anchor_text": "Big Basin", "paragraph_index": 123}, {"url": "https://github.com/open-mmlab/mmdetection/blob/master/docs/GETTING_STARTED.md#train-a-model", "anchor_text": "linear learning rate scaling rule", "paragraph_index": 129}, {"url": "https://github.com/facebookresearch/detectron2/blob/master/configs/Base-RetinaNet.yaml", "anchor_text": "model's base settings", "paragraph_index": 129}, {"url": "https://www.streamlit.io", "anchor_text": "Streamlit", "paragraph_index": 147}, {"url": "https://docker.com", "anchor_text": "Docker", "paragraph_index": 148}, {"url": "https://airbnb-amenity-detection.appspot.com/", "anchor_text": "airbnb-amenity-detection.appspot.com", "paragraph_index": 151}, {"url": "https://youtu.be/tPb2u9kwh2w", "anchor_text": "a video on machine learning at Airbnb", "paragraph_index": 154}, {"url": "https://dbourke.link/airbnb42days", "anchor_text": "my project notes (in daily journal style) in Notion", "paragraph_index": 168}, {"url": "https://www.youtube.com/playlist?list=PL6vjgQ2-qJFeMrZ0sBjmnUBZNX9xaqKuM", "anchor_text": "YouTube series", "paragraph_index": 169}, {"url": "http://nutrify.app", "anchor_text": "nutrify.app", "paragraph_index": 171}, {"url": "http://zerotomastery.io", "anchor_text": "zerotomastery.io", "paragraph_index": 171}, {"url": "http://mrdbourke.com", "anchor_text": "mrdbourke.com", "paragraph_index": 171}], "all_paragraphs": ["A couple of months ago, I read an article by Airbnb\u2019s engineering team which described how they used computer vision to detect amenities in photos.", "The article read like a recipe. A machine learning recipe.", "Like any budding chef (or machine learner), I decided to reproduce it and add a few of my own flavours.", "Think of something useful in a room. Say an oven in a kitchen or a shower in a bathroom.", "Why would detecting these in images be helpful?", "This is where the business use-case comes in. You\u2019ll often see tutorial computer vision models being built on datasets like MNIST (photos of hand-written digits) but it\u2019s hard to translate those kinds of problems to a business use-case (unless you\u2019re a postal service in the business of detecting handwritten digits).", "If you\u2019ve seen Airbnb\u2019s website, there are lots of photos of homes and places to stay. Alongside these places to stay are text-based details describing the finer-details. Like whether or not the listing you\u2019re looking at has a jacuzzi or not.", "Let\u2019s say you want to list your home on Airbnb. You might upload some photos and fill out a few details about it. But chances are, since you know your own place so well, you might miss a few things.", "This is where automatic amenity detection could be helpful.", "As you upload images to Airbnb, a computer vision machine learning model looks at the images, tries to find the key amenities in each one and adds them to your listing automatically.", "Of course, it could verify with you that its predictions were correct before they actually go live. But having it happen automatically would help to make sure the information on each listing is as filled out as possible.", "Having as detailed information as possible about each listing means the people searching for places with specific criteria. So the young couple after a nice weekend splitting their time between the jacuzzi and in front of the fireplace can find what they\u2019re looking for.", "Before starting this project I was like a chef with a set of untouched knives. Or in my case, a machine learning engineer who hadn\u2019t used Detectron2, Weights & Biases, Streamlit or very much of PyTorch yet (these are all machine learning tools).", "I\u2019ve found I learn best about things when building things. You might be the same.", "So I cracked open a Notion document, wrote down some criteria, and put together a little 6-week outline on my whiteboard.", "Because 42-days feels like enough time to get something significant done but not so long that it takes over your life.", "I figured I\u2019d spend 6-weeks or so (3ish hours per day) replicating Airbnb\u2019s amenity detection with the set of tools I\u2019d been wanting to try.", "Worst case, I learn a few things and if all fails, it\u2019s only 6-weeks.", "Best case, I learn a few things and got a pretty cool machine learning app built.", "Either way, there\u2019d be a story to tell (you\u2019re reading it).", "This fun little graphic breaks the major steps taken in the experiment.", "Sometimes text is easier to read than images full of other images.", "Replicating Airbnb\u2019s amenity detection with Detectron2 recipe:", "We\u2019ll use these to drive the rest of the article. Let\u2019s get into it.", "Like all machine learning projects, it begins and ends with the data.", "The Airbnb article mentioned to build their proof of concept, they used 32k public images and 43k internal images.", "Of course, other than a phone call interview for a technical support role in 2016, I have no affiliation with Airbnb internally, so the internal images were off the table.", "The good news was the 32k public images they used were from Open Images (a massive free and open-source resource of millions of images from 600+ categories of different things).", "However, if you look at Open Images, you\u2019ll find there are over a 1-million different images.", "Why did Airbnb only use 32k?", "It\u2019s because they were only interested in images relevant to their business use-case (images of rooms containing common amenities).", "Knowing the target classes Airbnb were most concerned about, I thought, surely there was a way to only download the images from Open Images you care about (and not the entire 1.9 million+, 500GB+ dataset).", "After a bit of searching, I found a great guide from LearnOpenCV on how to download only images from a list of target classes.", "Specifically, a script called downloadOI.py which allowed you to define what classes you were after and from which dataset.", "This line says, \u201cget the images with kitchen & dining room tables in them from the validation set of Open Images.\u201d", "Running the line of code above will download all of the images from the target class(es) into a folder with the same name as the target dataset.", "The original downloadOI.py from LearnOpenCV script worked great, it even generated labels as the images downloaded. But after a little experimentation, I found these labels incompatible for working with Detectron2.", "So I scrapped the label creation on download and modified the script to only download images. I decided I\u2019d write my own label creating code.", "Being able to download images: check.", "The Open Images labels are a bit more accessible and can be downloaded by clicking the specific download links on the Open Images download page or by running the following code (tidbit: scroll to the bottom of the download page to see information about the labels).", "The first stage of data collection resulted in acquiring the following files.", "My plan was to start small. Get data preprocessing and a Detectron2 model working with 1 class and then scale up when needed.", "The trick here was remixing the data files I had (a handful of label CSVs and a couple of folders of images) into Detectron2 style labels.", "I found out if you want to use your own custom data with Detectron2, you\u2019ll need to turn it into a list of dictionaries. Where each dictionary is the information associated with 1 image.", "Now, what do each of these fields mean?", "If you want to build your own object detection model with Detectron2, you\u2019ll need one of these for each of your images.", "As we\u2019ll see later, one of my first major goals for the project was getting a small model (always start small) running on custom data.", "Starting small meant writing data preparation functions for 1 class of images (coffeemaker) and making sure they worked with Detectron2.", "The good thing about downloading data from Open Images is every image has a unique identifier.", "So I wrote a function called get_image_ids() which would go through a folder and return a list of all the unique image IDs in that folder.", "This meant I knew all of the images I was dealing with.", "Why is having a list of the unique image IDs helpful?", "When you download the label files from Open Images and import them using pandas, they look like this.", "See the ImageID column? That\u2019s where we can match up the list of image IDs we\u2019ve downloaded from Open Images.", "The first being, we need the extra information such as the XMin, XMax, YMin and YMax coordinates (we\u2019ll see an example of this soon).", "The second being, downloading the annotations files from Open Images results in us getting the annotations for every single image in the database but we\u2019re only interested in the annotations for our target images.", "You may have noticed the LabelName column has some weird values like /m/0cmf2 and /m/02xwb, well it turns out, these are codes too.", "Here\u2019s where the mysterious class-descriptions-boxable.csv comes into play.", "Let\u2019s have a look at it.", "I don\u2019t know about you but the ClassName\u2019s look much better than /m/0cmf2 and /m/02xwb.", "Having these along with a list of target classes, in my case, only coffeemaker, to begin with, I had all the ingredients needed to create format_annotations().", "In a long-winded sentence, format_annotations() takes an existing annotations file downloaded from Open Images, such as, validation-annotations-bbox.csvadds some useful information to it (such as human-readable class names and a numerical categorical ID for each class) and removes unneeded rows (images we're not focused on).", "Running this function takes care of the category_id portion of our label dictionaries. And as for removing all non-coffeemaker rows,validation-annotations-bbox.csv gets reduced from 303980 rows to 62 rows.", "We\u2019re making progress but we\u2019re not finished yet.", "You might be wondering about what bbox_mode in the label dictionary means.", "If not, I'll show you how I took care of it anyway.", "bbox and bbox_mode are dance partners.", "Take another look at the Open Images labels and you\u2019ll see the columns XMin, XMax, YMin and YMax. These are the relative pixel coordinates of each bounding box on the image.", "Relative pixel coordinates means to find the actual pixel values of where each corner of the target bounding box appears you have to multiply the XMin, XMax values by the width of the image and the YMin and YMax values by the height of the image.", "Knowing this is important because Detectron2 currently only supports absolute pixel values (the result of multiplying a relative pixel value by the height or width).", "Open Images bounding box come in the order XMin, XMax, YMin, YMax but Detectron2 requires XMin, YMin, XMax, YMax.", "This is where the function rel_to_absolute() comes in.", "It uses an image\u2019s height, width and existing bounding box coordinates and uses them to convert the Open Images style coordinates to Detectron2 style coordinates.", "Once we\u2019ve done the conversion, thebboxparameter is taken care of in the form ofbbox_mode (BoxMode.XYXY_ABS).", "So far we\u2019ve made a few helper functions. Time to put it all together. The good news is, we\u2019ve done most of the grunt work.", "The penultimate (second to last, yes, there\u2019s one more) helper function is get_image_dicts().", "It takes a target image folder, a related annotation file and a list of target classes and then uses the functions above, get_image_ids(), format_annotations() and rel_to_absolute() plus a little logic of own to create Detectron2 style labels (a list of dictionaries).", "At this point, the reader is reminded if you want to see this in action, check the example Google Colab notebook.", "For now, we\u2019ll continue the story.", "Oh yeah, there\u2019s one more thing you should know about get_image_dicts(), once it creates the list of image dictionaries, it saves them to a JSON file. This makes sure we can use them later.", "And by later, I mean when you register a dataset with Detectron2.", "For some reason, when you register a dataset with Detectron2, and the dataset requires some preprocessing, the preprocessing must be done with a lambda function and thus can only take one parameter.", "Enter load_json_labels(), the final helper function which imports a JSON file (remember how we saved them for later) from a target image folder.", "The trick you\u2019ll want to pay attention to here is making sure if you do save your image dictionaries to file and reimport them, you ensure the bbox_mode is formatted as a Detectron2 style BoxMode.", "BoxMode is a Python enum type, a special type which in my experience doesn't save itself to JSON very well (you might be able to enlighten me here).", "Data preprocessing done. All we\u2019ve got to do is register our datasets with Detectron2 and we\u2019re ready to start modeling.", "Wait, why do we need to register a dataset with Detectron2?", "Now, I\u2019m not entirely sure of this. But once you do, the registered dataset becomes semi-immutable (can\u2019t be easily changed).", "This seems like a great idea to prevent dataset mismatches in the future.", "A little call of DatasetCatalog.register()..., and MetaDataCatalog.get()... (this is where load_json_labels() gets used) and we're off to the modeling station.", "We\u2019ve covered a lot already. But the good news is, once you\u2019ve got your dataset ready, Detectron2 makes the modelling stage a bunch of fun.", "Before I started, I had to remind myself of the first rule of machine learning: start small, experiment often, upscale when needed.", "Remember how label creation started by only creating the labels for one class of images? It was the same story for modelling.", "You know how the saying goes. Rowing the boat harder doesn\u2019t help if the boat is going in the wrong direction.", "So I started by getting a Detectron2 model working with 1 class (coffeemaker).", "Once this worked, I scaled it up to 2 classes, then 3 classes. And you must know, each time I did, I found out where my preprocessing functions broke and needed to be improved. One of the main problems being making sure labels were only created for the target classes instead of all the classes from Open Images.", "After getting Detectron2 working with 3 classes, next was to start getting serious with modelling experiments.", "You see, I\u2019d read in the Airbnb article that they\u2019d begun with transfer learning but didn\u2019t find much success, after which they moved to Google\u2019s AutoML. AutoML worked but they said the limitation was not being able to download the model afterwards.", "And since one of my criteria was to avoid using Google\u2019s AutoML (to fix the model accessibility limitation) I didn\u2019t use it.", "Instead, I referred to Detectron2\u2019s model zoo, a collection of models pertained on the COCO (common objects in context) dataset and found there were already a few object detection models ready to go.", "My thought process was, I\u2019ll try each of the pre-trained object detection models, leverage the patterns they\u2019ve learned from the COCO dataset, upgrade the patterns with my own data (a small dataset) and see if it works.", "I defined a dictionary of models from the Detectron2 model zoo I\u2019d like to try.", "And set up a little experiment.", "The purpose of this experiment was to see which Detectron2 object detection model performed best on my dataset. I hypothesised I could figure this out by controlling for everything except the models (hence the random seed).", "Now you might be wondering, how did you decide on these models?", "Great question. I read the model zoo page and picked them.", "Okay then, well how did you track the results of your experiment?", "I\u2019m glad you asked. This is where Weights & Biases came in. Weights & biases is a phenomenal tool for tracking deep learning experiments and if you haven\u2019t used it yet, you should.", "I ran the experiment. And thanks to Weights & Biases, the outcome was beautiful.", "Because the models showed they were learning something (the average precision, a metric for evaluating object detection models was improving) and there weren\u2019t any outlandish differences between each of the models (meaning the experiment controls worked).", "To narrow things down and see which model I should use to build a big dog model (a model with all the data and trained for longer), I hypothesised another experiment.", "I\u2019d take the top two models from my first experiment, retinanet_R_50_FPN_1x (fine-haze-37) and retinanet_R_101_FPN_3x (earthly-cloud-39), train them both a reasonable amount of time (about 1000 iterations) on a larger dataset (10% of all the data) and then compare the results.", "Then whichever model came out on top would become the big dog model.", "It must be known, since I was on my own imposed deadline (42-days for the total project), experimenting quickly was paramount.", "In the Airbnb article, they mentioned they trained their models for 5-days and 3-days at a time. Since I\u2019d allocated ~10-days to modelling total, I really only had 1 shot at training a big dog model.", "By this stage, I\u2019d downloaded the entire training, validation and test datasets from Open Images. And to run the second major experiment, this time I\u2019d decided to compare the two best performing models on a portion of the whole dataset (all 30 target classes rather than only 3 classes).", "When running modelling experiments on small portions of your data it\u2019s important the small portions are of the same distribution as the full data.", "In other words, if you\u2019re going to run a modelling experiment on 10% of the data, make sure that 10% of the data has the same class distribution as the full dataset. In the case of the Airbnb dataset, if the full dataset has plenty of images of staircases but not many images of wine racks, the smaller version should echo this relationship.", "I made the 10% training data split by randomly selecting examples from the full dataset and ensuring the distribution of classes looked similar.", "I also ended up merging the validation and test sets from Open Images into one dataset val_test. The reason for this being Airbnb mentioned they used a 10% test data split for evaluation (75k total images, 67.5k training images, 7.5k test images).", "With the smaller representative datasets ready, I kicked off the second major experiment, ensuring to track everything in Weights & Biases.", "As it turns out, both models performed well, meaning the metrics that should go up (average precision) were going up and the metrics which should go down (loss) were going down. Despite the 10x increase in the number of classes, my models were learning (a good thing).", "Based on the results of my second major experiment, I ended up deciding retinanet_R_101_FPN_3x (stilted-spaceship-46) would be upgraded to big dog model status.", "Detectron2\u2019s pre-trained models were trained on Big Basin (a big dog computer with 8 GPUs). I didn\u2019t have 8 GPUs (graphical processing unit, a computer chip capable of fast computations), so far, everything I\u2019d done had been on Google Colab (1 GPU) or my local computer (no GPUs).", "Based on my previous experiments, training with 10% of the data for 1000 iterations, I knew a full training run on the whole dataset using 1 GPU for 100,000+ iterations (taken from Airbnb\u2019s article and Detectron2 model configuration files) would take about 15 to 20-hours.", "With this back of the envelope time line calculation, I figured I\u2019d only really have one shot at training a big dog model.", "Originally, I\u2019d intended to do some hyperparameter tuning (adjusting models settings for better results) but due to the constraints didn\u2019t spend as much time here as I would\u2019ve liked.", "So I decided to focus on only a couple:", "In my experience, aside from the structure of the model itself (layers, etc, already decided by Detectron2 anyway), these two settings are the most influential in performance.", "I stumbled across the linear learning rate scaling rule, read up a little more about it and decided to apply it to the retinanet_R_101_FPN_3x model's base settings.", "The linear learning rate scaling rule says your batch size and learning rate should increase and decrease with the number of GPUs you\u2019re using.", "For example, since I was using 1 GPU versus Detectron2\u2019s original 8 GPUs, if adhering to the rule, I should divide the original learning rate and mini-batch size by 8.", "I adjusted the settings accordingly, and since I was using transfer learning (not training from scratch), I divided the new learning rate by a further multitude of 10.", "I read in the Airbnb article when they tried transfer learning, they divided the learning by 10 as a precaution to not let the original model patterns be lost too quickly whilst the new model learned.", "This intuitively made sense to me, however, I\u2019m sure there is either a better way to do it or a better explanation. If you know, please let me know.", "Lower than Airbnb\u2019s result of 68% mAP using Google\u2019s AutoML but higher than their results of using transfer learning.", "In should be noted though, these metrics (mine and Airbnb\u2019s) aren\u2019t really comparable since we used different datasets, me having only access to public data, Airbnb having public and internal image data.", "The real test of a computer vision model is on actual images. Let\u2019s look at a few from the test set (remember, the model has never seen these before).", "And how about on some custom images, courtesy of my bedroom and kitchen?", "Seeing a machine learning model work on stock data: Hey that\u2019s pretty cool\u2026", "Seeing a machine learning model work on your own data: OMG WHAT IS THIS MAGIC???", "With modelling completed (as much as the time would allow for), it was time to get it live.", "Machine learning model deployment still seems like a bit of dark art.", "First of all, coding in Jupyter Notebooks is different to writing Python scripts. Then you\u2019ve got the different packages you need, from data science libraries to web frameworks. Then you\u2019ve got to build some kind of interface around your model a user can interact with. Once you\u2019ve done that, where do you host it?", "All challenges worth taking on for any budding machine learning engineer.", "After all, if a model only exists in a Jupyter Notebook, does it exist at all?", "If you\u2019re a Jupyter Notebook warrior like me, the good news is, Streamlit and Docker are here to help you.", "Streamlit helps you build a user interface for your machine learning and data projects. Even better, it\u2019s all in Python too. If you\u2019ve never tried it, go spend half a day going through all the tutorials and you\u2019ll be set.", "Now Docker. Docker helps you wrap all of your files (Streamlit app, machine learning model and dependencies) up into a nice little package (called a Docker Image). Once you\u2019ve got this package you can upload it to a cloud server (e.g. Google Cloud) and everything goes right, it should run exactly how it does on your local system.", "So you\u2019ve got a trained model making predictions in a Jupyter Notebook? Your workflow to deploy it could go something like this (what I did):", "If everything goes right, you should be given a URL to your hosted app.", "Since I used Google\u2019s App Engine, mine came out looking like this: airbnb-amenity-detection.appspot.com", "We covered app building and deployment very quickly. But if you\u2019re interested in learning more, I\u2019d check out the following resources (in order).", "I started this project with a series of criteria I wanted to fulfil.", "After watching a video on machine learning at Airbnb, someone mentioned they\u2019ve got upwards of 500,000,000 images on the site (yes, 500+ million). For our calculations, let\u2019s pretend we\u2019d like to run our model across all of them.", "With the retinanet_R_101_FPN_3x model I trained and the GPU I used (a Nvidia P100) it took about 0.2s to make a prediction on each image.", "Of course, more calculations would be required to see how much value the model adds could be done. But seeing these gives you an idea of how much a proof of concept would be across all of Airbnb\u2019s images.", "It\u2019s quite clear, in the current state, using the model across all of Airbnb\u2019s 500,000,000+ images is probably not viable.", "However, these numbers were also calculated using 1 rented GPU on Google Cloud. If a local machine had multiple GPUs, the costs (and time) could be decreased dramatically.", "The final comparison worth looking at is the final one Airbnb used in their article. They started their project as a way to build their own custom computer vision model which would save them from using 3rd-party amenity detection services.", "They noticed the 3rd-party amenity detection service only showed results for predictions with a confidence score over 0.5 (the higher the score, the more confident a model is behind what it\u2019s predicted). So to make a fair comparison, they altered their Google AutoML model to do the same.", "Doing this, the results from Airbnb\u2019s Google AutoML model went from 68% mAP to 46%. Seeing this, I did the same with my model and found the results went from 43.2% to 35.3%.", "Of course, this project isn\u2019t perfect. But I wasn\u2019t expecting it to be. I\u2019m a cook, not a chemist.", "I would\u2019ve liked to have done a few more things before the end of the 42-days, such as:", "With all this being said, the project achieved its main goal: learn by doing.", "I learned a bunch about a handful of tools I\u2019d never used before and even more important, how I might go about structuring future projects.", "The main takeaway(s) being, experiment, experiment, experiment.", "Despite the length of this article, it\u2019s a short overview of the actual steps I took during the project.", "If you\u2019d like to see them all unfold, you can read my project notes (in daily journal style) in Notion.", "Or watch the YouTube series I created to go along with it.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Building nutrify.app, teaching ML @ zerotomastery.io, broadcasting from mrdbourke.com."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F28f33704d6ff&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----28f33704d6ff--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----28f33704d6ff--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://mrdbourke.medium.com/?source=post_page-----28f33704d6ff--------------------------------", "anchor_text": ""}, {"url": "https://mrdbourke.medium.com/?source=post_page-----28f33704d6ff--------------------------------", "anchor_text": "Daniel Bourke"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdbc019e228f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&user=Daniel+Bourke&userId=dbc019e228f5&source=post_page-dbc019e228f5----28f33704d6ff---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F28f33704d6ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F28f33704d6ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.airbnb.com/rooms/2151100", "anchor_text": "https://www.airbnb.com/rooms/2151100"}, {"url": "https://medium.com/airbnb-engineering/amenity-detection-and-beyond-new-frontiers-of-computer-vision-at-airbnb-144a4441b72e", "anchor_text": "an article by Airbnb\u2019s engineering team"}, {"url": "https://dbourke.link/airbnbcode", "anchor_text": "example Google Colab Notebook"}, {"url": "https://github.com/facebookresearch/detectron2", "anchor_text": "Detectron2"}, {"url": "https://www.wandb.com/", "anchor_text": "Weights & Biases"}, {"url": "https://www.streamlit.io", "anchor_text": "Streamlit"}, {"url": "https://pytorch.org/", "anchor_text": "PyTorch"}, {"url": "https://dbourke.link/airbnb42days", "anchor_text": "Notion document"}, {"url": "https://www.notion.so/mrdbourke/42-Days-2020ify-ing-Airbnb-s-Object-Detection-Pipeline-4d6070ca45534a67a80b014dd1110acd#16226023446b4576acd2c9aae33fbbbf", "anchor_text": "some criteria"}, {"url": "https://www.mrdbourke.com/42days", "anchor_text": "42-day project template"}, {"url": "https://dbourke.link/airbnb42days", "anchor_text": "journal-style project notes in Notion"}, {"url": "https://storage.googleapis.com/openimages/web/index.html", "anchor_text": "Open Images"}, {"url": "https://www.learnopencv.com/fast-image-downloader-for-open-images-v4/", "anchor_text": "a great guide from LearnOpenCV"}, {"url": "https://github.com/mrdbourke/airbnb-amenity-detection/blob/master/downloadOI.py", "anchor_text": "downloadOI.py"}, {"url": "https://storage.googleapis.com/openimages/web/download.html", "anchor_text": "Open Images download page"}, {"url": "https://storage.googleapis.com/openimages/v5/class-descriptions-boxable.csv", "anchor_text": "https://storage.googleapis.com/openimages/v5/class-descriptions-boxable.csv"}, {"url": "https://detectron2.readthedocs.io/tutorials/datasets.html", "anchor_text": "Detectron2 style labels"}, {"url": "https://detectron2.readthedocs.io/tutorials/datasets.html", "anchor_text": "list of dictionaries"}, {"url": "https://docs.python.org/3/library/enum.html", "anchor_text": "Enum"}, {"url": "https://detectron2.readthedocs.io/modules/structures.html#detectron2.structures.BoxMode", "anchor_text": "see more in the docs"}, {"url": "https://dbourke.link/airbnbcode", "anchor_text": "full code and example notebook on Colab"}, {"url": "https://storage.googleapis.com/openimages/v5/validation-annotations-bbox.csv", "anchor_text": "validation-annotations-bbox.csv"}, {"url": "https://dbourke.link/airbnbcode", "anchor_text": "full code and example notebook on GitHub"}, {"url": "https://dbourke.link/airbnbcode", "anchor_text": "the example Google Colab notebook"}, {"url": "https://dbourke.link/airbnbcode", "anchor_text": "full code and example notebook on GitHub"}, {"url": "https://detectron2.readthedocs.io/tutorials/datasets.html#register-a-dataset", "anchor_text": "register a dataset with Detectron2"}, {"url": "https://docs.python.org/3/library/enum.html", "anchor_text": "Python enum type"}, {"url": "https://github.com/facebookresearch/detectron2/blob/master/MODEL_ZOO.md", "anchor_text": "Detectron2\u2019s model zoo"}, {"url": "http://cocodataset.org/#home", "anchor_text": "COCO (common objects in context) dataset"}, {"url": "https://www.wandb.com", "anchor_text": "Weights & Biases"}, {"url": "https://app.wandb.ai/mrdbourke/airbnb-amenity-detection", "anchor_text": "full project experiment on Weights & Biases"}, {"url": "https://app.wandb.ai/mrdbourke/airbnb-amenity-detection/runs/18uz78yn", "anchor_text": "fine-haze-37"}, {"url": "https://app.wandb.ai/mrdbourke/airbnb-amenity-detection/runs/374stxdc", "anchor_text": "earthly-cloud-39"}, {"url": "https://app.wandb.ai/mrdbourke/airbnb-amenity-detection/runs/s0z24hvo", "anchor_text": "stilted-spaceship-46"}, {"url": "https://engineering.fb.com/data-center-engineering/introducing-big-basin-our-next-generation-ai-hardware/", "anchor_text": "Big Basin"}, {"url": "https://github.com/open-mmlab/mmdetection/blob/master/docs/GETTING_STARTED.md#train-a-model", "anchor_text": "linear learning rate scaling rule"}, {"url": "https://github.com/facebookresearch/detectron2/blob/master/configs/Base-RetinaNet.yaml", "anchor_text": "model's base settings"}, {"url": "https://app.wandb.ai/mrdbourke/airbnb-amenity-detection/runs/2gvwvqbu", "anchor_text": "full training run, settings and more on Weights & Biases"}, {"url": "https://www.streamlit.io", "anchor_text": "Streamlit"}, {"url": "https://docker.com", "anchor_text": "Docker"}, {"url": "https://airbnb-amenity-detection.appspot.com/", "anchor_text": "airbnb-amenity-detection.appspot.com"}, {"url": "https://youtu.be/smlQbh6jQvg", "anchor_text": "full deployment and app building video on YouTube"}, {"url": "https://towardsdatascience.com/how-docker-can-help-you-become-a-more-effective-data-scientist-7fc048ef91d5", "anchor_text": "How Docker Can Help You Become A More Effective Data Scientist"}, {"url": "https://github.com/streamlit/streamlit/wiki/FAQ#q-how-do-i-deploy-streamlit-on-heroku-aws-google-cloud-etc", "anchor_text": "Streamlit deployment references"}, {"url": "https://blog.jcharistech.com/2020/01/14/how-to-deploy-streamlit-apps-to-google-cloud-platformgcp-app-engine/", "anchor_text": "How to deploy Streamlit apps to Google Cloud Platform"}, {"url": "https://youtu.be/tPb2u9kwh2w", "anchor_text": "a video on machine learning at Airbnb"}, {"url": "https://medium.com/airbnb-engineering/amenity-detection-and-beyond-new-frontiers-of-computer-vision-at-airbnb-144a4441b72e", "anchor_text": "Airbnb amenity detection article"}, {"url": "https://www.wandb.com/sweeps", "anchor_text": "Weights & Biases Sweeps"}, {"url": "https://ai.googleblog.com/2020/04/efficientdet-towards-scalable-and.html", "anchor_text": "EfficientDet"}, {"url": "https://dbourke.link/airbnb42days", "anchor_text": "my project notes (in daily journal style) in Notion"}, {"url": "https://www.youtube.com/playlist?list=PL6vjgQ2-qJFeMrZ0sBjmnUBZNX9xaqKuM", "anchor_text": "YouTube series"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----28f33704d6ff---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----28f33704d6ff---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----28f33704d6ff---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/tag/data-science?source=post_page-----28f33704d6ff---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/projects?source=post_page-----28f33704d6ff---------------projects-----------------", "anchor_text": "Projects"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F28f33704d6ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&user=Daniel+Bourke&userId=dbc019e228f5&source=-----28f33704d6ff---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F28f33704d6ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&user=Daniel+Bourke&userId=dbc019e228f5&source=-----28f33704d6ff---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F28f33704d6ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----28f33704d6ff--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F28f33704d6ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----28f33704d6ff---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----28f33704d6ff--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----28f33704d6ff--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----28f33704d6ff--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----28f33704d6ff--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----28f33704d6ff--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----28f33704d6ff--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----28f33704d6ff--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----28f33704d6ff--------------------------------", "anchor_text": ""}, {"url": "https://mrdbourke.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://mrdbourke.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Daniel Bourke"}, {"url": "https://mrdbourke.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "17.6K Followers"}, {"url": "http://nutrify.app", "anchor_text": "nutrify.app"}, {"url": "http://zerotomastery.io", "anchor_text": "zerotomastery.io"}, {"url": "http://mrdbourke.com", "anchor_text": "mrdbourke.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdbc019e228f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&user=Daniel+Bourke&userId=dbc019e228f5&source=post_page-dbc019e228f5--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd39f6683b6e2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freplicating-airbnbs-amenity-detection-with-detectron2-28f33704d6ff&newsletterV3=dbc019e228f5&newsletterV3Id=d39f6683b6e2&user=Daniel+Bourke&userId=dbc019e228f5&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}