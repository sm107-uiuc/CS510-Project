{"url": "https://towardsdatascience.com/4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5", "time": 1683018064.607955, "path": "towardsdatascience.com/4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5/", "webpage": {"metadata": {"title": "4 Cute Python Functions for Working with Dirty Data | by Onel Harrison | Towards Data Science", "h1": "4 Cute Python Functions for Working with Dirty Data", "description": "This function comes in handy when there are one or more possible values that could be assigned to a variable or used in a given situation and there is a known preference for which value among the\u2026"}, "outgoing_paragraph_urls": [{"url": "https://docs.python.org/3/library/stdtypes.html#dict.get", "anchor_text": "dict.get", "paragraph_index": 5}, {"url": "https://www.learnpython.dev/02-introduction-to-python/090-boolean-logic/10-truthiness/", "anchor_text": "Python\u2019s truthiness semantics", "paragraph_index": 7}, {"url": "https://ruby-doc.org/core-2.7.2/Array.html#method-i-dig", "anchor_text": "Array#dig", "paragraph_index": 21}, {"url": "https://ruby-doc.org/core-2.7.2/Hash.html#method-i-dig", "anchor_text": "Hash#dig", "paragraph_index": 21}, {"url": "https://oneltalkstech.com", "anchor_text": "OnelTalksTech.com", "paragraph_index": 33}], "all_paragraphs": ["This function comes in handy when there are one or more possible values that could be assigned to a variable or used in a given situation and there is a known preference for which value among the options should be selected for use if it\u2019s available.", "If you have been writing SQL queries of at least a moderate complexity, the purpose of a coalesce function may already be clear to you. But for those who are unfamiliar with it, a motivating example may be instructive.", "Let\u2019s say we\u2019re working with a subset of the response data for a story retrieved from Medium\u2019s Stories API, and we want to extract a link to the featured image for a story. However, we would prefer to extract the link for the image with the highest available resolution.", "In this case, the following code might suffice.", "But, imagine that sometimes no image URLs are returned from the API (e.g. for stories that do not include any images) or the URL for each image size is present only some of the time.", "We could write a series of if statements and use dict.get to safely extract a URL. However, the coalesce function defined above makes it so that we can extract the featured image URL quite simply and safely.", "We could even forgo the presence check for the image field if the following is more to our liking. It\u2019s certainly more appealing to look at.", "It is worth noting that a similar, but not equivalent, behavior is achievable by using Python\u2019s or operator and relying on Python\u2019s truthiness semantics.", "This would produce the correct result for our example, but it would fail in a situation where an empty string or zero are valid values that could be extracted. That is because empty string and zero are falsy values in Python.", "In that case, we would need a function like our coalesce that is stricter about what values it considers to mean \u201cnothing,\u201d which is only the None value.", "When working with JSON-style data, we extract values from the dict and list data structures as naturally as the sun rises and sets each day.", "This means it can be an inconvenience not having a unified interface through which we can extract values from both types of collections.", "The safe_get function beautifully provides that unified interface while also freeing us from wrapping our extraction code with error handling logic since the safe_get function simply returns None (or a provided default) if a value is not found.", "With our implementation of safe_get, we could update our code for extracting the URL of the highest resolution image for a story\u2019s featured image to be more functional in style.", "As previously mentioned though, we also get a unified interface for extracting data from both dict and list data structures. So let\u2019s demonstrate that.", "Let\u2019s again assume the data below is from Medium\u2019s Stories API.", "With this data, we\u2019re interested in extracting the third featured story for a given Medium publication or user. Why? Because the saying \u201cthird time\u2019s the charm\u201d is one of our operating principles.", "However, not every publication or user will have three or more stories from which we can pick the third one. But we don\u2019t mind. We can optimistically write our extraction code using our safe_get function.", "If there is no third featured story, we\u2019ll get back None from safe_get and be on our way.", "Another great use for safe_get is as a building block function \u2014 for example, as seen in our implementation of the following dig function.", "The dig function can be used to extract values from potentially nested dict and list data structures. It\u2019s quite useful in data extraction and transformation because we often need to flatten nested data so that we can store it as structured data in a database.", "I have spent the major of my time in data engineering (so far) using the Ruby programming language. Ruby has the Array#dig and Hash#dig methods, which make picking values from potentially nested dict and list data structures, in which values could be missing, quite easy. However, this functionality is not natively available in Python, so we have to build it ourselves.", "Side note: A Python list corresponds to a Ruby Array, and a Python dict corresponds to a Ruby Hash.", "Here is a reminder of what the implementation of our safe_get function looks like. We will be using it as a helper function in our implementation of dig which follows.", "Now here is our implementation of the dig function using safe_get as a helper function.", "We can once again update our code for extracting the URL of the highest resolution image for a story\u2019s featured image using our dig function.", "But let us go a bit further. Take the following setup for instance. We have nested dict and list data, and as indicated by the types on the attributes of the MediumStory class, there are some attributes (marked as Optional) that we do not always expect values to be present for.", "Now, let\u2019s write some code to extract and flatten this nested story data into our Python class.", "This function hardly needs a motivating example. It\u2019s useful when we would prefer getting None (or some default value we set) if we fail to convert a value from one type to another.", "One example that readily comes to mind is the conversion of a string value to a numeric value. Such a conversion would typically fail if unacceptable inputs such as empty string are provided, but with safe_cast we can suppress the exceptions and specify a default value if necessary. Examine the following code for how safe_cast might come in handy.", "In this article, we looked at 4 Python functions that can help us safely extract or transform values from dirty data.", "Each of these functions is implemented in a way that minimizes the clutter of error handling logic by allowing us to pick a reasonable default return value (or None) in case we encounter a data extraction or transformation failure.", "Additionally, they make it easy for us to extract data from the two most common data structures (dict and list), which are also what we get when we serialize JSON, the most popular data interchange format, for processing.", "Watch videos covering a variety of topics in Computing at OnelTalksTech.com", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F2cf7974280b5&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----2cf7974280b5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2cf7974280b5--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://onelharrison.medium.com/?source=post_page-----2cf7974280b5--------------------------------", "anchor_text": ""}, {"url": "https://onelharrison.medium.com/?source=post_page-----2cf7974280b5--------------------------------", "anchor_text": "Onel Harrison"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F410e9ddcf6f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&user=Onel+Harrison&userId=410e9ddcf6f2&source=post_page-410e9ddcf6f2----2cf7974280b5---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2cf7974280b5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2cf7974280b5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://commons.wikimedia.org/w/index.php?title=User:1840151sudarshan&action=edit&redlink=1", "anchor_text": "1840151sudarshan"}, {"url": "https://commons.wikimedia.org/wiki/File:Python_image.jpg", "anchor_text": "Wikimedia Commons"}, {"url": "https://docs.python.org/3/library/stdtypes.html#dict.get", "anchor_text": "dict.get"}, {"url": "https://www.learnpython.dev/02-introduction-to-python/090-boolean-logic/10-truthiness/", "anchor_text": "Python\u2019s truthiness semantics"}, {"url": "https://medium.com/the-core/python-one-problem-several-lessons-d7359a80d34a", "anchor_text": "Python: One Problem, Several Lessons"}, {"url": "https://onelharrison.medium.com/improving-code-quality-in-python-codebases-f70983f2e309", "anchor_text": "Improving Code Quality in Python Codebases"}, {"url": "https://medium.com/the-core/how-to-recursively-reverse-a-linked-list-9990d59fc13f", "anchor_text": "How to recursively reverse a linked list"}, {"url": "https://ruby-doc.org/core-2.7.2/Array.html#method-i-dig", "anchor_text": "Array#dig"}, {"url": "https://ruby-doc.org/core-2.7.2/Hash.html#method-i-dig", "anchor_text": "Hash#dig"}, {"url": "https://medium.com/the-core/python-one-problem-several-lessons-d7359a80d34a", "anchor_text": "Python: One Problem, Several Lessons"}, {"url": "https://onelharrison.medium.com/improving-code-quality-in-python-codebases-f70983f2e309", "anchor_text": "Improving Code Quality in Python Codebases"}, {"url": "https://medium.com/the-core/how-to-recursively-reverse-a-linked-list-9990d59fc13f", "anchor_text": "How to recursively reverse a linked list"}, {"url": "https://oneltalkstech.com", "anchor_text": "OnelTalksTech.com"}, {"url": "https://stackoverflow.com/users/781150/artsiom-rudzenka", "anchor_text": "StackOverflow user Artisom Rudzenk"}, {"url": "https://stackoverflow.com/questions/6330071/safe-casting-in-python#answer-6330109", "anchor_text": "safe_cast"}, {"url": "https://stackoverflow.com/questions/6330071/safe-casting-in-python#answer-6330109", "anchor_text": "code snippet"}, {"url": "https://stackoverflow.com/users/132382/pilcrow", "anchor_text": "StackOverflow user pilcrow"}, {"url": "https://stackoverflow.com/questions/61143614/sql-coalesce-method-in-python#answer-61143950", "anchor_text": "coalesce"}, {"url": "https://stackoverflow.com/questions/61143614/sql-coalesce-method-in-python#answer-61143950", "anchor_text": "code snippet"}, {"url": "https://medium.com/tag/python?source=post_page-----2cf7974280b5---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----2cf7974280b5---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data?source=post_page-----2cf7974280b5---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/tag/programming?source=post_page-----2cf7974280b5---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-engineering?source=post_page-----2cf7974280b5---------------data_engineering-----------------", "anchor_text": "Data Engineering"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2cf7974280b5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&user=Onel+Harrison&userId=410e9ddcf6f2&source=-----2cf7974280b5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2cf7974280b5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&user=Onel+Harrison&userId=410e9ddcf6f2&source=-----2cf7974280b5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2cf7974280b5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2cf7974280b5--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F2cf7974280b5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----2cf7974280b5---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----2cf7974280b5--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----2cf7974280b5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----2cf7974280b5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----2cf7974280b5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----2cf7974280b5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----2cf7974280b5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----2cf7974280b5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----2cf7974280b5--------------------------------", "anchor_text": ""}, {"url": "https://onelharrison.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://onelharrison.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Onel Harrison"}, {"url": "https://onelharrison.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.1K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F410e9ddcf6f2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&user=Onel+Harrison&userId=410e9ddcf6f2&source=post_page-410e9ddcf6f2--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fa996de737002&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-cute-python-functions-for-working-with-dirty-data-2cf7974280b5&newsletterV3=410e9ddcf6f2&newsletterV3Id=a996de737002&user=Onel+Harrison&userId=410e9ddcf6f2&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}