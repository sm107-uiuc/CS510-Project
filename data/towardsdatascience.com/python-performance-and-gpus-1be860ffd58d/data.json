{"url": "https://towardsdatascience.com/python-performance-and-gpus-1be860ffd58d", "time": 1682996887.164343, "path": "towardsdatascience.com/python-performance-and-gpus-1be860ffd58d/", "webpage": {"metadata": {"title": "Python, Performance, and GPUs. A status update for using GPU\u2026 | by Matthew Rocklin | Towards Data Science", "h1": "Python, Performance, and GPUs", "description": "This blogpost was delivered in talk form at the recent PASC 2019 conference. Slides for that talk are here. This post lays out the current status, and describes future work. It also summarizes and\u2026"}, "outgoing_paragraph_urls": [{"url": "https://pasc19.pasc-conference.org/", "anchor_text": "PASC 2019", "paragraph_index": 0}, {"url": "https://docs.google.com/presentation/d/e/2PACX-1vSajAH6FzgQH4OwOJD5y-t9mjF9tTKEeljguEsfcjavp18pL4LkpABy4lW2uMykIUvP2dC-1AmhCq6l/pub?start=false&loop=false&delayms=60000", "anchor_text": "Slides for that talk are here", "paragraph_index": 0}, {"url": "https://github.com/pentschev", "anchor_text": "Peter Entschev", "paragraph_index": 6}, {"url": "https://github.com/pentschev/pybench", "anchor_text": "benchmark suite", "paragraph_index": 6}, {"url": "https://blog.dask.org/2019/06/27/single-gpu-cupy-benchmarks", "anchor_text": "his blogpost", "paragraph_index": 7}, {"url": "https://blog.dask.org/2019/04/09/numba-stencil", "anchor_text": "recent blogpost about Numba stencils", "paragraph_index": 9}, {"url": "https://gist.github.com/mrocklin/9272bf84a8faffdbbe2cd44b4bc4ce3c", "anchor_text": "GPU notebook", "paragraph_index": 9}, {"url": "https://numba.pydata.org/numba-doc/dev/cuda/index.html", "anchor_text": "numba.cuda.jit", "paragraph_index": 15}, {"url": "https://blog.dask.org/2019/01/03/dask-array-gpus-first-steps", "anchor_text": "1", "paragraph_index": 19}, {"url": "https://blog.dask.org/2019/01/13/dask-cudf-first-steps", "anchor_text": "2", "paragraph_index": 19}, {"url": "https://blog.dask.org/2019/03/04/building-gpu-groupbys", "anchor_text": "3", "paragraph_index": 19}, {"url": "https://blog.dask.org/2019/03/18/dask-nep18", "anchor_text": "4", "paragraph_index": 19}, {"url": "https://dask.org/", "anchor_text": "Dask", "paragraph_index": 19}, {"url": "https://cupy.chainer.org/", "anchor_text": "CuPy", "paragraph_index": 19}, {"url": "https://sparse.pydata.org/en/latest/", "anchor_text": "Sparse", "paragraph_index": 19}, {"url": "https://github.com/google/jax", "anchor_text": "Jax", "paragraph_index": 19}, {"url": "https://docs.rapids.ai/api/cudf/nightly/", "anchor_text": "RAPIDS cuDF", "paragraph_index": 19}, {"url": "https://developer.download.nvidia.com/video/gputechconf/gtc/2019/video/S9679/s9679-ucx-python-a-flexible-communication-library-for-python-applications.mp4", "anchor_text": "this talk", "paragraph_index": 22}, {"url": "https://github.com/Akshay-Venkatesh", "anchor_text": "Akshay Venkatesh", "paragraph_index": 22}, {"url": "https://www.slideshare.net/MatthewRocklin/ucxpython-a-flexible-communication-library-for-python-applications", "anchor_text": "the slides", "paragraph_index": 22}, {"url": "https://blog.dask.org/2019/06/09/ucx-dgx", "anchor_text": "this recent blogpost about UCX and Dask", "paragraph_index": 23}, {"url": "https://openucx.org/", "anchor_text": "OpenUCX", "paragraph_index": 24}, {"url": "https://github.com/rapidsai/ucx-py", "anchor_text": "UCX-Py", "paragraph_index": 24}, {"url": "https://matthewrocklin.com/blog/work/2018/12/17/gpu-python-challenges", "anchor_text": "earlier blogpost", "paragraph_index": 29}, {"url": "https://github.com/seibert", "anchor_text": "Stan Seibert", "paragraph_index": 29}, {"url": "https://github.com/msarahan", "anchor_text": "Michael Sarahan", "paragraph_index": 29}, {"url": "https://www.anaconda.com/how-we-made-conda-faster-4-7/", "anchor_text": "here", "paragraph_index": 30}, {"url": "https://conda-forge.org/", "anchor_text": "Conda Forge", "paragraph_index": 31}], "all_paragraphs": ["This blogpost was delivered in talk form at the recent PASC 2019 conference. Slides for that talk are here.", "We\u2019re improving the state of scalable GPU computing in Python.", "This post lays out the current status, and describes future work. It also summarizes and links to several other more blogposts from recent months that drill down into different topics for the interested reader.", "Broadly we cover briefly the following categories:", "Probably the easiest way for a Python programmer to get access to GPU performance is to use a GPU-accelerated Python library. These provide a set of common operations that are well tuned and integrate well together.", "Many users know libraries for deep learning like PyTorch and TensorFlow, but there are several other for more general purpose computing. These tend to copy the APIs of popular Python projects:", "These libraries build GPU accelerated variants of popular Python libraries like NumPy, Pandas, and Scikit-Learn. In order to better understand the relative performance differences Peter Entschev recently put together a benchmark suite to help with comparisons. He has produced the following image showing the relative speedup between GPU and CPU:", "There are lots of interesting results there. Peter goes into more depth in this in his blogpost.", "More broadly though, we see that there is variability in performance. Our mental model for what is fast and slow on the CPU doesn\u2019t neccessarily carry over to the GPU. Fortunately though, due consistent APIs, users that are familiar with Python can easily experiment with GPU acceleration without learning CUDA.", "See also this recent blogpost about Numba stencils and the attached GPU notebook", "The built-in operations in GPU libraries like CuPy and RAPIDS cover most common operations. However, in real-world settings we often find messy situations that require writing a little bit of custom code. Switching down to C/C++/CUDA in these cases can be challenging, especially for users that are primarily Python developers. This is where Numba can come in.", "Python has this same problem on the CPU as well. Users often couldn\u2019t be bothered to learn C/C++ to write fast custom code. To address this there are tools like Cython or Numba, which let Python programmers write fast numeric code without learning much beyond the Python language.", "For example, Numba accelerates the for-loop style code below about 500x on the CPU, from slow Python speeds up to fast C/Fortran speeds.", "The ability to drop down to low-level performant code without context switching out of Python is useful, particularly if you don\u2019t already know C/C++ or have a compiler chain set up for you (which is the case for most Python users today).", "This benefit is even more pronounced on the GPU. While many Python programmers know a little bit of C, very few of them know CUDA. Even if they did, they would probably have difficulty in setting up the compiler tools and development environment.", "Enter numba.cuda.jit Numba\u2019s backend for CUDA. Numba.cuda.jit allows Python users to author, compile, and run CUDA code, written in Python, interactively without leaving a Python session. Here is an image of writing a stencil computation that smoothes a 2d-image all from within a Jupyter Notebook:", "Here is a simplified comparison of Numba CPU/GPU code to compare programming style. The GPU code gets a 200x speed improvement over a single CPU core.", "or if we use the fancy numba.stencil decorator \u2026", "Numba.cuda.jit has been out in the wild for quite a while now. It\u2019s accessible, mature, and fun to play with. If you have a machine with a GPU in it and some curiosity then we strongly recommend that you try it out.", "As mentioned in previous blogposts ( 1, 2, 3, 4 ) we\u2019ve been generalizing Dask, to operate not just with Numpy arrays and Pandas dataframes, but with anything that looks enough like Numpy (like CuPy or Sparse or Jax) or enough like Pandas (like RAPIDS cuDF) to scale those libraries out too. This is working out well. Here is a brief video showing Dask array computing an SVD in parallel, and seeing what happens when we swap out the Numpy library for CuPy.", "We see that there is about a 10x speed improvement on the computation. Most importantly, we were able to switch between a CPU implementation and a GPU implementation with a small one-line change, but continue using the sophisticated algorithms with Dask Array, like it\u2019s parallel SVD implementation.", "We also saw a relative slowdown in communication. In general almost all non-trivial Dask + GPU work today is becoming communication-bound. We\u2019ve gotten fast enough at computation that the relative importance of communication has grown significantly.", "See this talk by Akshay Venkatesh or view the slides", "Also see this recent blogpost about UCX and Dask", "We\u2019ve been integrating the OpenUCX library into Python with UCX-Py. UCX provides uniform access to transports like TCP, InfiniBand, shared memory, and NVLink. UCX-Py is the first time that access to many of these transports has been easily accessible from the Python language.", "Using UCX and Dask together we\u2019re able to get significant speedups. Here is a trace of the SVD computation from before both before and after adding UCX:", "There is still a great deal to do here though (the blogpost linked above has several items in the Future Work section).", "People can try out UCX and UCX-Py with highly experimental conda packages:", "We hope that this work will also affect non-GPU users on HPC systems with Infiniband, or even users on consumer hardware due to the easy access to shared memory communication.", "In an earlier blogpost we discussed the challenges around installing the wrong versions of CUDA enabled packages that don\u2019t match the CUDA driver installed on the system. Fortunately due to recent work from Stan Seibert and Michael Sarahan at Anaconda, Conda 4.7 now has a special cuda meta-package that is set to the version of the installed driver. This should make it much easier for users in the future to install the correct package.", "Conda 4.7 was just releasead, and comes with many new features other than the cuda meta-package. You can read more about it here.", "There is still plenty of work to do in the packaging space today. Everyone who builds conda packages does it their own way, resulting in headache and heterogeneity. This is largely due to not having centralized infrastructure to build and test CUDA enabled packages, like we have in Conda Forge. Fortunately, the Conda Forge community is working together with Anaconda and NVIDIA to help resolve this, though that will likely take some time.", "This post gave an update of the status of some of the efforts behind GPU computing in Python. It also provided a variety of links for future reading. We include them below if you would like to learn more:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I maintain open source Python tools, notably Dask. I also run @CoiledHQ . Additionally I try to be a decent human, and help the world from melting."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1be860ffd58d&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----1be860ffd58d--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1be860ffd58d--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://matthew-rocklin.medium.com/?source=post_page-----1be860ffd58d--------------------------------", "anchor_text": ""}, {"url": "https://matthew-rocklin.medium.com/?source=post_page-----1be860ffd58d--------------------------------", "anchor_text": "Matthew Rocklin"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdea6a1cc8620&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&user=Matthew+Rocklin&userId=dea6a1cc8620&source=post_page-dea6a1cc8620----1be860ffd58d---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1be860ffd58d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1be860ffd58d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://pasc19.pasc-conference.org/", "anchor_text": "PASC 2019"}, {"url": "https://docs.google.com/presentation/d/e/2PACX-1vSajAH6FzgQH4OwOJD5y-t9mjF9tTKEeljguEsfcjavp18pL4LkpABy4lW2uMykIUvP2dC-1AmhCq6l/pub?start=false&loop=false&delayms=60000", "anchor_text": "Slides for that talk are here"}, {"url": "https://cupy.chainer.org/", "anchor_text": "CuPy"}, {"url": "https://github.com/google/jax", "anchor_text": "Jax"}, {"url": "https://docs.rapids.ai/api/cudf/nightly/", "anchor_text": "RAPIDS cuDF"}, {"url": "https://docs.rapids.ai/api/cuml/nightly/", "anchor_text": "RAPIDS cuML"}, {"url": "https://github.com/pentschev", "anchor_text": "Peter Entschev"}, {"url": "https://github.com/pentschev/pybench", "anchor_text": "benchmark suite"}, {"url": "https://blog.dask.org/2019/06/27/single-gpu-cupy-benchmarks", "anchor_text": "his blogpost"}, {"url": "https://blog.dask.org/2019/04/09/numba-stencil", "anchor_text": "recent blogpost about Numba stencils"}, {"url": "https://gist.github.com/mrocklin/9272bf84a8faffdbbe2cd44b4bc4ce3c", "anchor_text": "GPU notebook"}, {"url": "https://numba.pydata.org/numba-doc/dev/cuda/index.html", "anchor_text": "numba.cuda.jit"}, {"url": "https://blog.dask.org/2019/01/03/dask-array-gpus-first-steps", "anchor_text": "1"}, {"url": "https://blog.dask.org/2019/01/13/dask-cudf-first-steps", "anchor_text": "2"}, {"url": "https://blog.dask.org/2019/03/04/building-gpu-groupbys", "anchor_text": "3"}, {"url": "https://blog.dask.org/2019/03/18/dask-nep18", "anchor_text": "4"}, {"url": "https://dask.org/", "anchor_text": "Dask"}, {"url": "https://cupy.chainer.org/", "anchor_text": "CuPy"}, {"url": "https://sparse.pydata.org/en/latest/", "anchor_text": "Sparse"}, {"url": "https://github.com/google/jax", "anchor_text": "Jax"}, {"url": "https://docs.rapids.ai/api/cudf/nightly/", "anchor_text": "RAPIDS cuDF"}, {"url": "https://developer.download.nvidia.com/video/gputechconf/gtc/2019/video/S9679/s9679-ucx-python-a-flexible-communication-library-for-python-applications.mp4", "anchor_text": "this talk"}, {"url": "https://github.com/Akshay-Venkatesh", "anchor_text": "Akshay Venkatesh"}, {"url": "https://www.slideshare.net/MatthewRocklin/ucxpython-a-flexible-communication-library-for-python-applications", "anchor_text": "the slides"}, {"url": "https://blog.dask.org/2019/06/09/ucx-dgx", "anchor_text": "this recent blogpost about UCX and Dask"}, {"url": "https://openucx.org/", "anchor_text": "OpenUCX"}, {"url": "https://github.com/rapidsai/ucx-py", "anchor_text": "UCX-Py"}, {"url": "https://matthewrocklin.com/blog/work/2018/12/17/gpu-python-challenges", "anchor_text": "earlier blogpost"}, {"url": "https://github.com/seibert", "anchor_text": "Stan Seibert"}, {"url": "https://github.com/msarahan", "anchor_text": "Michael Sarahan"}, {"url": "https://www.anaconda.com/how-we-made-conda-faster-4-7/", "anchor_text": "here"}, {"url": "https://conda-forge.org/", "anchor_text": "Conda Forge"}, {"url": "https://docs.google.com/presentation/d/e/2PACX-1vSajAH6FzgQH4OwOJD5y-t9mjF9tTKEeljguEsfcjavp18pL4LkpABy4lW2uMykIUvP2dC-1AmhCq6l/pub?start=false&loop=false&delayms=60000", "anchor_text": "Slides"}, {"url": "https://cupy.chainer.org/", "anchor_text": "CuPy"}, {"url": "https://github.com/google/jax", "anchor_text": "Jax"}, {"url": "https://docs.rapids.ai/api/cudf/nightly/", "anchor_text": "RAPIDS cuDF"}, {"url": "https://docs.rapids.ai/api/cuml/nightly/", "anchor_text": "RAPIDS cuML"}, {"url": "https://github.com/pentschev/pybench", "anchor_text": "Benchmark suite"}, {"url": "https://gist.github.com/mrocklin/9272bf84a8faffdbbe2cd44b4bc4ce3c", "anchor_text": "Numba CUDA JIT notebook"}, {"url": "https://developer.download.nvidia.com/video/gputechconf/gtc/2019/video/S9679/s9679-ucx-python-a-flexible-communication-library-for-python-applications.mp4", "anchor_text": "A talk on UCX"}, {"url": "https://blog.dask.org/2019/06/09/ucx-dgx", "anchor_text": "A blogpost on UCX and Dask"}, {"url": "https://www.anaconda.com/how-we-made-conda-faster-4-7/", "anchor_text": "Conda 4.7"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----1be860ffd58d---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/rapids-ai?source=post_page-----1be860ffd58d---------------rapids_ai-----------------", "anchor_text": "Rapids Ai"}, {"url": "https://medium.com/tag/dask?source=post_page-----1be860ffd58d---------------dask-----------------", "anchor_text": "Dask"}, {"url": "https://medium.com/tag/pydata?source=post_page-----1be860ffd58d---------------pydata-----------------", "anchor_text": "Pydata"}, {"url": "https://medium.com/tag/python?source=post_page-----1be860ffd58d---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1be860ffd58d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&user=Matthew+Rocklin&userId=dea6a1cc8620&source=-----1be860ffd58d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1be860ffd58d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&user=Matthew+Rocklin&userId=dea6a1cc8620&source=-----1be860ffd58d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1be860ffd58d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1be860ffd58d--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F1be860ffd58d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----1be860ffd58d---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----1be860ffd58d--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----1be860ffd58d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----1be860ffd58d--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----1be860ffd58d--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1be860ffd58d--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1be860ffd58d--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----1be860ffd58d--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----1be860ffd58d--------------------------------", "anchor_text": ""}, {"url": "https://matthew-rocklin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://matthew-rocklin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Matthew Rocklin"}, {"url": "https://matthew-rocklin.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "122 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdea6a1cc8620&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&user=Matthew+Rocklin&userId=dea6a1cc8620&source=post_page-dea6a1cc8620--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F7fd01ef74032&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-performance-and-gpus-1be860ffd58d&newsletterV3=dea6a1cc8620&newsletterV3Id=7fd01ef74032&user=Matthew+Rocklin&userId=dea6a1cc8620&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}