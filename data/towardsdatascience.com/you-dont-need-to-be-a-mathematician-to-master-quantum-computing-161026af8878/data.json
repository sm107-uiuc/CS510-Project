{"url": "https://towardsdatascience.com/you-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878", "time": 1683014796.267041, "path": "towardsdatascience.com/you-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878/", "webpage": {"metadata": {"title": "You Don\u2019t Need To Be A Mathematician To Master Quantum Computing | by Frank Zickert | Quantum Machine Learning | Towards Data Science", "h1": "You Don\u2019t Need To Be A Mathematician To Master Quantum Computing", "description": "Scientific papers and textbooks about quantum computing are full of mathematical formulae. Even blog posts on quantum computing are loaded with mathematical jargon. It starts with the first concept\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.pyqml.com/page?ref=medium_math&dest=/", "anchor_text": "Hands-On Quantum Machine Learning With Python", "paragraph_index": 0}, {"url": "https://www.pyqml.com/page?ref=medium_math&dest=/", "anchor_text": "Hands-On Quantum Machine Learning With Python", "paragraph_index": 69}, {"url": "https://www.pyqml.com/page?ref=medium_math&dest=/", "anchor_text": "here", "paragraph_index": 70}], "all_paragraphs": ["This post is part of the book: Hands-On Quantum Machine Learning With Python", "Scientific papers and textbooks about quantum computing are full of mathematical formulae. Even blog posts on quantum computing are loaded with mathematical jargon. It starts with the first concept you encounter. The quantum superposition:", "As a non-mathematician, this formula might already be too much. If you\u2019re not familiar with the used Dirac-notation (|\u03c8\u27e9) or if you\u2019re not used to working with vectors, then such a formula is as good as Egyptian hieroglyphs:", "Don\u2019t get me wrong. Math is a great way to describe technical concepts. Math is a concise yet precise language. Our natural languages, such as English, by contrast, are lengthy and imprecise. It takes a whole book full of natural language to explain a small collection of mathematical formulae.", "But most of us are far better at understanding natural language than math. We learn our mother tongue as a young child and we practice it every single day. We even dream in our natural language. I couldn\u2019t tell if some fellows dream in math, though. For most of us, math is, at best, a foreign language.", "When we\u2019re about to learn something new, it is easier for us if we use our mother tongue. It is hard enough to grasp the meaning of the new concept. If we\u2019re taught in a foreign language, it is even harder. If not impossible.", "Of course, math is the native language of quantum mechanics and quantum computing, if you will. But why should we teach quantum computing only in its own language? Shouldn\u2019t we try to explain it in a way more accessible to the learner? I\u2019d say \u201cabsolutely\u201d!", "Teaching something in the language of the learner doesn\u2019t mean we should not have a look at the math. We should! But, we use math when its precision helps us to explain how things work.", "In fact, math is not the only precise language we have. We have languages that are as precise as mathematical formulae. And nowadays, these languages come almost natural to many. These languages are programming languages.", "I do not mean the syntax of a specific programming language. Rather, I refer to a way of thinking almost all programming languages share. From Python to Java, from Javascript to Ruby, even from C to Cobol. All these languages build upon boolean logic. Regardless of programming language, a programmer works a lot with boolean logic.", "Most prominently, boolean logic appears in conditional statements: if then else.", "The if-part of a conditional statement is pure boolean logic. Often, it contains the basic boolean operators not, and, and or.", "If some statement is True, then its negation is False. Conversely, if a statement is False, then its negation is True. If a statement consists of two parts P and Q, then P and Q is only True if P is True and Q is True. But P or Q is True if either P or Q is True.", "Here are three examples of boolean logic in Python.", "While Python uses these exact keywords, in math, symbols represent these operators:", "If you\u2019re not a mathematician, these symbols and all the other symbols you encounter on your quantum machine learning journey may appear cryptic. But while the representation of a concept may differ when you describe it in Python or in math, the concept itself is the same.", "You don\u2019t need to be a mathematician to understand boolean logic. Actually, you don\u2019t need to be a programmer, either, because we can even describe the boolean logic by truth tables.", "We have two variables, P and Q. Each variable is either true (T) or false (F). Depending on the combination of their values, we can deduce the value of any boolean statement. The following figure depicts the truth table for P, Q, not P, not Q, not P and not Q, not (not P and not Q), and P or Q.", "This truth table reveals that P or Q is equivalent to not (not P and not Q). This logical equivalence tells us that we do not even need the operator or. We could replace it by not (not P and not Q).", "But P or Q is concise and much easier to understand.", "\u201cWhat if there was no or operator in our programming language?\"", "The savvy programmer would write her own operator.", "This is what programming is all about. Programmers write functions that produce a certain behavior. They use and combine these functions to create even more functions that exhibit even complex behavior. The whole program they write comes down to a set of functions savvily combined. Programmers have their compiler (or interpreter) to translate the higher-level functions down to the very basic boolean logic. And this basic boolean logic can be performed using electrical switches. The switches and their combination are called gates. When we connect gates, they form a circuit.", "At a discrete interval, the computer sends a pulse of electricity through the circuit. If we receive a pulse of electricity at the appropriate time, we interpret it as 1 (true). If we don't receive a pulse, we interpret it as 0(false).", "Despite the name, there is nothing circular about circuits. They are linear and are read from left to right. Let\u2019s look at an example that corresponds to the boolean functions that we looked at earlier", "The following figure depicts the circuit diagram of not (not P and not Q). The circuit receives the input from the left and outputs it to the right.", "Such gates and circuits are the building blocks of any modern computer. This includes quantum computers. While the world of quantum mechanics is different, the world of quantum computing is surprisingly similar.", "Don\u2019t let yourself be dazzled by all the mathematical formulae. They are representations of concepts. Not more, not less.", "Let\u2019s return to our introductory formula:", "It is the mathematical notation of the quantum state |\u03c8\u27e9 (\u201cpsi\u201d). While the state of a classical bit is boolean (either 0 meaning false or 1 meaning true), the state of the quantum bit (qubit) is the superposition of the quantum states |0\u27e9 and |1\u27e9 weighted by \u03b1 and \u03b2.", "In this state of superposition, the quantum system is neither 0 nor 1 unless you measure it. Only when you measure the qubit, the state collapses to either 0 or 1. The squares of the two weights (\u03b1^2) and (\u03b2^2) denote the probabilities of measuring either 0 or 1. The larger \u03b1 is the higher the probability to measure 0. Respectively, the larger \u03b2 is the higher the probability to measure 1.", "The formula says something more. It says the quantum state is the vector of the two weights [\u03b1 \u03b2].", "A vector is a geographical object that has a magnitude and a direction. If drawn in a coordinate system, the vector starts in the center and ends at the point specified by the numbers in the vector.", "In Python, a vector is an array. Thus, the state of a qubit is the array [alpha, beta]. And, alpha and beta are numerical variables. The quantum state is an array of two numbers.", "But an array of two numbers is a much more complex datatype than a boolean value is. A boolean is either True or False. You can transform boolean values with simple operators, such as not, and, and or. You can reason about the transformation of boolean values in a truth table.", "But how do you transform an array of two numbers? And how can you reason about such transformations?", "The apparent answer is math. But it is not the only possible answer. Let\u2019s use Python for that.", "The state always_0 has the values 1 and 0. The probability of measuring 0 in this state is 1^2=1 (line 5). The probability of measuring 1 is 0^2=0. When we measure a qubit in this state, we always measure it as 0. The state always_1 is the respective opposite. We always measure it as 1 (line 6).", "Next, we create a convenience function transform (lines 8-9). Did I tell you writing functions to make things easier is what programming is all about? This is an example. The function takes a name of the quantum state (an arbitrary string to show), the state and a function f. transform prints to the console the original state and the state after having applied the function f on it.", "Finally, we create a function reverse_state we can feed into transform (lines 11-12). reverse_state calls Python's default reversed function that returns an array of the same length in the opposite order.", "In the output, we can see that the numbers in the state arrays have switched their positions. Thus, the probability of measuring 0 or 1 switched respectively. The reversed psi has a 0.75 chance of measuring 0 and a 0.25 chance of measuring 1. The reversed always_0 is similar to the original always_1.", "These are only three possible states. Listing all possible states in a kind of truth table is impossible. But I think the behavior of the reverse_state function is quite clear. It is the behavior of the X-gate in quantum computing. It is one of the basic transformations of the quantum state.", "Let\u2019s have a look at this gate in practice. We use IBM\u2019s quantum computing SDK Qiskit.", "The fundamental unit of Qiskit is the quantum circuit. A quantum circuit is a model for quantum computation. The program, if you will. Our circuit consists of a single one qubit (line 5).", "We initialize our qubit with the state psi (line 8) and we apply the X-gate on it (line 11).", "Qiskit provides the Aer package (that we import at line 1). It provides different backends for simulating quantum circuits. The most common backend is the statevector_simulator (line 14).", "The execute-function (that we import at line 1, too) runs our quantum circuit (qc) at the specified backend. It returns a job-object that has a useful method job.result() (line 17). This returns the result object once our program completes it.", "Qiskit uses Matplotlib to provide useful visualizations. A simple histogram will do. The result object provides the get_counts method to obtain the histogram data of an executed circuit (line 18).", "The method plot_histogram returns a Matplotlib figure that Jupyter draws automatically (line 19).", "We see we have a 75% chance of observing the value 0 and a 25% chance of observing the value 1. The exact opposite of the initial state.", "You can run the circuit with different initial states to get a better feeling for this gate.", "In general, quantum circuits are not different from classical circuits. We can represent them in a diagram. Qiskit\u2019s QuantumCircuit class provides the draw method that does the job for us.", "We can see our one and only qubit (q), its initialization with the array [0.5, 0.866], and the applied X-gate.", "You\u2019ve completed the first step towards quantum computing mastery without being a mathematician. Getting a conceptual understanding of quantum gates as the quantumic peers of classical circuit gates does not depend on math. The combination of plain English and a little bit of Python is well-suited. And for many, this combination is much more accessible.", "But, math remains paramount to quantum computing. If you want to gain a deep understanding of the concepts, you\u2019ll cope with the mathematical formulae, sooner or later. And as I said, math is a great way to describe technical concepts.", "Let\u2019s have a look at the underlying math of the X-gate. Don\u2019t worry, I don\u2019t expect you to be a mathematician. A little affinity to algebra (that is the study of mathematical symbols and the rules from manipulating them) doesn\u2019t hurt, though.", "So far, we used Python\u2019s built-in function reversed. While this is convenient, we do not really see how it works internally. Let's use another function. A self-made function.", "We define a function adjust_weight(line 1). It takes a quantum state and weights. Both are arrays with two items. It multiplies the values at position 0 and it multiplies the values at position 1. It returns the sum of these two products (line 2).", "We can use this function to reverse psi. For adjust_weight returns a single number, we call it twice to get back an array of two items (lines 5 and 6). In this example, we do not explicitly create an array but we directly print these values to the console (line 4).", "In both calls, we provide the original psi as the state parameter. In the first call, whose result is the first number of the reversed psi, we provide [0,1] as weights. It means, we get the sum of 0 times the first number of psi and 1 time the second number of psi. This sum is the second number of the original psi.", "In the second call, whose result is the second number of the reversed psi, we provide [1,0] as weights. This is 1 time the first number of psi and 0 times the second number of psi. This equals the first number of the original psi.", "With these weights, we have effectively switched the places of the numbers of psi.", "In math, this is a matrix multiplication. The general formula for multiplying a matrix M and a vector \u03c5 is:", "a and b are the weights we used to calculate the first number of the resulting vector. c and d are the weights for the second number, respectively.", "Mathematically, the X-gate quantum operator is the matrix:", "Let\u2019s apply this operator to our three exemplary states:", "And, applying the matrix at |\u03c8\u27e9 results in its reversal, too:", "In classical computing, we have a small set of boolean operators whose behavior we can easily represent in truth tables. But in quantum computing, matrices denote the operators called gates. And there are myriads of possible matrices we can apply. Math is a concise yet precise way to describe these operators. But you don\u2019t need to be a mathematician to use these operations.", "Of course, it is desirable to have an understanding of the underlying math of a gate when you apply it. But more importantly, you need to have an understanding of what the gate does. If you know what the X-gate does, you don\u2019t need to cope with the math all the time.", "This post is part of the book: Hands-On Quantum Machine Learning With Python.", "Get the first three chapters for free here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "You're interested in quantum computing and machine learning. But you don't know how to get started? Let me help"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F161026af8878&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----161026af8878--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----161026af8878--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://pyqml.medium.com/?source=post_page-----161026af8878--------------------------------", "anchor_text": ""}, {"url": "https://pyqml.medium.com/?source=post_page-----161026af8878--------------------------------", "anchor_text": "Frank Zickert | Quantum Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feebfab42a2c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=post_page-eebfab42a2c4----161026af8878---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F161026af8878&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F161026af8878&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.pyqml.com/page?ref=medium_math&dest=/", "anchor_text": "Hands-On Quantum Machine Learning With Python"}, {"url": "https://www.pyqml.com/page?ref=medium_math&dest=/", "anchor_text": "Hands-On Quantum Machine Learning With Python"}, {"url": "https://www.pyqml.com/page?ref=medium_math&dest=/", "anchor_text": "here"}, {"url": "https://medium.com/tag/quantum-computing?source=post_page-----161026af8878---------------quantum_computing-----------------", "anchor_text": "Quantum Computing"}, {"url": "https://medium.com/tag/programming?source=post_page-----161026af8878---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/algorithms?source=post_page-----161026af8878---------------algorithms-----------------", "anchor_text": "Algorithms"}, {"url": "https://medium.com/tag/python?source=post_page-----161026af8878---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/mathematics?source=post_page-----161026af8878---------------mathematics-----------------", "anchor_text": "Mathematics"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F161026af8878&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=-----161026af8878---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F161026af8878&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=-----161026af8878---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F161026af8878&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----161026af8878--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F161026af8878&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----161026af8878---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----161026af8878--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----161026af8878--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----161026af8878--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----161026af8878--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----161026af8878--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----161026af8878--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----161026af8878--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----161026af8878--------------------------------", "anchor_text": ""}, {"url": "https://pyqml.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://pyqml.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Frank Zickert | Quantum Machine Learning"}, {"url": "https://pyqml.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "7.9K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feebfab42a2c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=post_page-eebfab42a2c4--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F2d21069992f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fyou-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878&newsletterV3=eebfab42a2c4&newsletterV3Id=2d21069992f0&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}