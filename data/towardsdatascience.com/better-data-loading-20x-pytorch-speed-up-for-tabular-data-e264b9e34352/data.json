{"url": "https://towardsdatascience.com/better-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352", "time": 1683006555.205744, "path": "towardsdatascience.com/better-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352/", "webpage": {"metadata": {"title": "Better Data Loading: 20x PyTorch Speed-Up for Tabular Data | by Harald Carlens | Towards Data Science", "h1": "Better Data Loading: 20x PyTorch Speed-Up for Tabular Data", "description": "Properly exploiting properties of tabular data allows significant speedups of PyTorch training. Here's an easy way to speed up training 20x."}, "outgoing_paragraph_urls": [{"url": "https://www.arxiv-sanity.com/top", "anchor_text": "Arxiv-Sanity", "paragraph_index": 4}, {"url": "https://pytorch.org/tutorials/beginner/data_loading_tutorial.html", "anchor_text": "The official PyTorch tutorial also recommends using DataLoaders", "paragraph_index": 14}, {"url": "https://github.com/hcarlens/pytorch-tabular/blob/master/fast_tensor_data_loader.py", "anchor_text": "this file", "paragraph_index": 18}, {"url": "https://cs.stanford.edu/~muj/", "anchor_text": "Jesse Mu", "paragraph_index": 18}, {"url": "https://discuss.pytorch.org/t/dataloader-much-slower-than-manual-batching/27014/6", "anchor_text": "this answer", "paragraph_index": 18}, {"url": "http://archive.ics.uci.edu/ml/datasets/HIGGS", "anchor_text": "Higgs dataset", "paragraph_index": 21}, {"url": "https://www.nature.com/articles/ncomms5308", "anchor_text": "this Nature paper", "paragraph_index": 21}, {"url": "https://gnsiscld.co/ffsd3", "anchor_text": "Genesis Cloud", "paragraph_index": 24}, {"url": "https://gnsiscld.co/ffsd3", "anchor_text": "Get $50 in free credits when you sign up", "paragraph_index": 24}, {"url": "http://www.harald.co.", "anchor_text": "www.harald.co", "paragraph_index": 25}, {"url": "http://mlcontests.com", "anchor_text": "ML Contests", "paragraph_index": 25}, {"url": "https://cloud-gpus.com", "anchor_text": "cloud GPU comparison", "paragraph_index": 25}, {"url": "https://lambdalabs.com/lambda-stack-deep-learning-software", "anchor_text": "Lambda Stack", "paragraph_index": 27}, {"url": "https://mlcontests.com", "anchor_text": "https://mlcontests.com", "paragraph_index": 30}, {"url": "https://cloud-gpus.com", "anchor_text": "https://cloud-gpus.com", "paragraph_index": 30}, {"url": "https://harald.co", "anchor_text": "https://harald.co", "paragraph_index": 30}], "all_paragraphs": ["When training deep learning models, performance is crucial. Datasets can be huge, and inefficient training means slower research iterations, less time for hyperparameter optimisation, longer deployment cycles, and higher compute cost.", "Despite all that, it can be hard to justify investing too much time speeding things up, as there are many potential dead ends to explore. But fortunately, there are some quick wins available!", "I\u2019m going to show you how a simple change I made to my dataloaders in PyTorch for tabular data sped up training by over 20x \u2014 without any change to the training loop! Just a simple drop-in replacement for PyTorch\u2019s standard dataloader. For the model I was looking at, that\u2019s a sixteen minute iteration time reduced to forty seconds!", "And all without installing any new packages, making any low-level code changes, or changing any hyperparameters.", "In supervised learning, a quick look at Arxiv-Sanity tells us that the top research papers at the moment are all either about images (whether classification or GANs for generation), or text (mostly variations on BERT). These are great in areas where traditional machine learning just doesn\u2019t stand a chance \u2014 but require expertise and a significant research budget to execute well.", "On the other hand, much of the data that many companies hold already resides in databases, in a nice tabular format. Some examples include customer details for lifetime value estimation, click-through optimisation, and financial time-series data.", "So why is this rift between research and industry a problem for us? Well, the needs of state-of-the-art text/vision researchers are very different of those doing supervised learning on tabular data sets.", "Having data in tabular form (i.e. a database table, Pandas DataFrame, NumPy Array, or PyTorch Tensor) makes things easier in several ways:", "These optimisations are possible for tabular data and not for text/vision data because of two main areas of difference: models and data.", "Models: vision research tends to use large deep convolutional neural nets (CNNs); text tends to use large recurrent neural nets (RNNs) or Transformers; but on tabular data plain fully connected deep neural nets (FCDNN) can do fine. While not always the case, in general vision and text models require more parameters to learn more nuanced representations than interactions between variables in tabular data, and so forward and backward passes can take longer.", "Data: vision data tends to be saved as nested folders full of images, which can require significant pre-processing (cropping, scaling, rotating, etc). Text data can be large files or other text streams. Both of these will generally be saved on disk, and loaded from disk in batches. This isn\u2019t an issue because the disk read/write speeds aren\u2019t the bottleneck here \u2014 the preprocessing or backward passes are. Tabular data, on the other hand, has the nice property of being easily loaded into contiguous chunks of memory in the form of an array or tensor. Preprocessing on tabular data tends to be done separately in advance, either in a database, or as a vectorised operation on a dataset.", "As we\u2019ve seen, loading tabular data can be really easy and fast! So of course PyTorch works great by default for tabular data\u2026 right?", "It turns out it doesn\u2019t! \ud83d\ude29", "Just last week I was training a PyTorch model on some tabular data, and wondering it was taking so long to train. I couldn\u2019t see any obvious bottlenecks, but for some reason, the GPU usage was much lower than expected. When I dug into it with some profiling I found the culprit\u2026 the DataLoader.", "What is a DataLoader? DataLoaders do exactly what you might think they do: they load your data from wherever it is (on disk, in the cloud, in memory) to wherever it needs to be for your model to use it (in RAM or GPU memory). In addition to this, they take care of splitting your data into batches, shuffling it, and pre-processing individual samples if necessary. Wrapping this code in a DataLoader is nicer than having it scattered throughout, as it allows you to keep your main training code clean. The official PyTorch tutorial also recommends using DataLoaders.", "How do you use them? It depends on the type of data you have. For tabular data, PyTorch\u2019s default DataLoader can take a TensorDataset. This is a lightweight wrapper around the tensors required for training \u2014 usually an X (or features) and Y (or labels) tensor.", "You can then use this in your training loop:", "Why is this bad? This looks pretty good, and certainly very clean! The problem is that, each time a batch is loaded, PyTorch\u2019s DataLoader calls the __getitem__()function on the DataSet once per example and concatenates them, rather than reading a batch in one go as a big chunk! So we don\u2019t end up making use of the advantages of our tabular data set. This is especially bad when we use large batch sizes.", "How can we fix this? Easy \u2014 replace the first two lines above with the two lines below, and copy the definition of FastTensorDataLoader from this file (credit for this goes to Jesse Mu, for this answer on the PyTorch forums):", "FastTensorDataLoader is just a small custom class with no dependencies other than PyTorch \u2014and using it doesn\u2019t require any changes to your training code! It supports shuffling too, though the benchmarks below are for non-shuffled data.", "What difference does this make? On the benchmark set I used, the custom tabular DataLoader ends up being over 20x faster. In this case, that means that instead of a 10-epoch run taking over 15 minutes, it takes less than 40 seconds\u2014 a huge difference in iteration speed!", "This benchmark was run on the Higgs dataset used in this Nature paper. With 11m examples, it makes for a more realistic deep learning benchmark than most public tabular ML datasets (which can be tiny!). It\u2019s a binary classification problem, with 21 real-valued features. It\u2019s nice to see that we can get to over 0.77 ROC AUC on the test set within just 40s of training, before any hyperparameter optimisation! Though we\u2019re still a while off from the 0.88 reached in the paper.", "I hope this has been helpful, and that you\u2019re able to see similar speed increases in your own training code! After implementing this I found some further optimisations which resulted in a total speedup of closer to 100x! Leave a comment if you\u2019d like to see more, and we can cover these in a follow-up article.", "See the Appendix for how you can run the benchmark code yourself. The example includes code for running the default PyTorch DataLoader, the faster custom one, as well as timing the results and logging to TensorBoard.", "This post was made possible with computing credits from Genesis Cloud: cloud GPUs at incredible cost efficiency, running on 100% renewable energy in a data centre in Iceland. Get $50 in free credits when you sign up, which gets you over 160 hours on a GTX 1080Ti!", "About the author: Harald worked as an equities quant for over eight years, and is currently a freelance researcher and writer. His personal blog is at www.harald.co. He runs ML Contests \u2014 a directory of ongoing machine learning competitions \u2014 as well as a cloud GPU comparison site.", "So you can see the results for yourself, here are the instructions for replicating the experiment. If you have a local GPU and PyTorch already installed, you can skip the first two steps!", "2. Install CUDA and PyTorch in one go by using Lambda Stack: (don\u2019t forget to reboot after doing this!)", "If you\u2019re running on an instance with a GTX 1080Ti like the Genesis Cloud one I used, you should get results like these:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Creator of https://mlcontests.com and https://cloud-gpus.com. Equities algo quant for 8 years. Also at https://harald.co."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe264b9e34352&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e264b9e34352--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e264b9e34352--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://hcarlens.medium.com/?source=post_page-----e264b9e34352--------------------------------", "anchor_text": ""}, {"url": "https://hcarlens.medium.com/?source=post_page-----e264b9e34352--------------------------------", "anchor_text": "Harald Carlens"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F711d325d27b4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&user=Harald+Carlens&userId=711d325d27b4&source=post_page-711d325d27b4----e264b9e34352---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe264b9e34352&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe264b9e34352&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.arxiv-sanity.com/top", "anchor_text": "Arxiv-Sanity"}, {"url": "https://arxiv.org/pdf/1803.09820.pdf", "anchor_text": "large-batch training"}, {"url": "https://pytorch.org/tutorials/beginner/data_loading_tutorial.html", "anchor_text": "The official PyTorch tutorial also recommends using DataLoaders"}, {"url": "https://github.com/hcarlens/pytorch-tabular/blob/master/fast_tensor_data_loader.py", "anchor_text": "this file"}, {"url": "https://cs.stanford.edu/~muj/", "anchor_text": "Jesse Mu"}, {"url": "https://discuss.pytorch.org/t/dataloader-much-slower-than-manual-batching/27014/6", "anchor_text": "this answer"}, {"url": "http://archive.ics.uci.edu/ml/datasets/HIGGS", "anchor_text": "Higgs dataset"}, {"url": "https://www.nature.com/articles/ncomms5308", "anchor_text": "this Nature paper"}, {"url": "https://gnsiscld.co/ffsd3", "anchor_text": "Genesis Cloud"}, {"url": "https://gnsiscld.co/ffsd3", "anchor_text": "Get $50 in free credits when you sign up"}, {"url": "http://www.harald.co.", "anchor_text": "www.harald.co"}, {"url": "http://mlcontests.com", "anchor_text": "ML Contests"}, {"url": "https://cloud-gpus.com", "anchor_text": "cloud GPU comparison"}, {"url": "https://medium.com/@hcarlens/five-tools-to-supercharge-your-cloud-deep-learning-workflow-3afb2e25be9f", "anchor_text": "Five Tools to Supercharge Your Cloud Deep Learning Workflow"}, {"url": "https://medium.com/@hcarlens/reproducibility-issues-using-openai-gym-8ca605071d6a", "anchor_text": "How to Properly Set Random Seeds with OpenAI Gym"}, {"url": "https://medium.com/machine-learning-insights/top-cloud-gpu-providers-for-machine-learning-in-2022-894f6828da08", "anchor_text": "Top Cloud GPU Providers for Machine Learning in 2022"}, {"url": "https://gnsiscld.co/ffsd3", "anchor_text": "Genesis cloud"}, {"url": "https://lambdalabs.com/lambda-stack-deep-learning-software", "anchor_text": "Lambda Stack"}, {"url": "https://lambdalabs.com/static/misc/lambda-stack-repo.deb", "anchor_text": "https://lambdalabs.com/static/misc/lambda-stack-repo.deb"}, {"url": "http://archive.ics.uci.edu/ml/machine-learning-databases/00280/HIGGS.csv.gz", "anchor_text": "http://archive.ics.uci.edu/ml/machine-learning-databases/00280/HIGGS.csv.gz"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----e264b9e34352---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/pytorch?source=post_page-----e264b9e34352---------------pytorch-----------------", "anchor_text": "Pytorch"}, {"url": "https://medium.com/tag/python?source=post_page-----e264b9e34352---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----e264b9e34352---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/gpu?source=post_page-----e264b9e34352---------------gpu-----------------", "anchor_text": "Gpu"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe264b9e34352&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&user=Harald+Carlens&userId=711d325d27b4&source=-----e264b9e34352---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe264b9e34352&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&user=Harald+Carlens&userId=711d325d27b4&source=-----e264b9e34352---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe264b9e34352&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e264b9e34352--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe264b9e34352&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e264b9e34352---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e264b9e34352--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e264b9e34352--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e264b9e34352--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e264b9e34352--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e264b9e34352--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e264b9e34352--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e264b9e34352--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e264b9e34352--------------------------------", "anchor_text": ""}, {"url": "https://hcarlens.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://hcarlens.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Harald Carlens"}, {"url": "https://hcarlens.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "575 Followers"}, {"url": "https://mlcontests.com", "anchor_text": "https://mlcontests.com"}, {"url": "https://cloud-gpus.com", "anchor_text": "https://cloud-gpus.com"}, {"url": "https://harald.co", "anchor_text": "https://harald.co"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F711d325d27b4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&user=Harald+Carlens&userId=711d325d27b4&source=post_page-711d325d27b4--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F711d325d27b4%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-data-loading-20x-pytorch-speed-up-for-tabular-data-e264b9e34352&user=Harald+Carlens&userId=711d325d27b4&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}