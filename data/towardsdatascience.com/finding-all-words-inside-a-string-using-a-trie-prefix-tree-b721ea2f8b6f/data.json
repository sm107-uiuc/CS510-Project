{"url": "https://towardsdatascience.com/finding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f", "time": 1682997055.2309299, "path": "towardsdatascience.com/finding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f/", "webpage": {"metadata": {"title": "Finding All Words Inside A String Using A Trie (Prefix Tree) | by Ori Cohen | Towards Data Science", "h1": "Finding All Words Inside A String Using A Trie (Prefix Tree)", "description": "Finding all the words inside a character-list is a fun challenge that can probably be done in many ways. For example, let\u2019s take the string \u201cthedogatethecat\u201d, which can be parsed in two ways. The\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/gsakkis/pytrie/", "anchor_text": "PyTrie", "paragraph_index": 4}, {"url": "https://zencity.io/", "anchor_text": "Zencity.io", "paragraph_index": 7}, {"url": "http://Justt.ai", "anchor_text": "Justt.ai", "paragraph_index": 9}, {"url": "https://bit.ly/33Xcdwy", "anchor_text": "https://bit.ly/33Xcdwy", "paragraph_index": 9}], "all_paragraphs": ["Finding all the words inside a character-list is a fun challenge that can probably be done in many ways. For example, let\u2019s take the string \u201cthedogatethecat\u201d, which can be parsed in two ways. The first one is \u201cthe dog ate the cat\u201d & the second one is \u201cthe do gate the cat\u201d, both versions are correct in terms of parsing, while only one of them is correct for us humans.", "The following solution will find both versions and will not attempt to figure out which one is more correct in terms of grammar etc.", "The idea is to create a prefix tree or a Trie using all the words in the English language and then figure out letter by letter if we have a word that is in the Trie. Obviously, there is some concern about complexity, but using the Trie we are reducing our search complexity in our vocabulary to O(M) where M is the length of the text you are searching for, rather than searching O(N) where N is the length of the vocabulary. It's worth noting that the Trie\u2019s space complexity is higher and is a topic that can be searched on Google if you are curious about it.", "The final time complexity, however, is slightly higher than O(M), because we are recursively searching letter by letter, I\u2019m leaving the calculation as an exercise to the reader.", "Before running the following code, please install PyTrie by doing \u201cpip install pytrie\u201d. We populate the Trie with all the possible words in our string, obviously, we can add additional words, but that would not add value for this example. For a real-world example, please use a proper English dictionary. We are iterating letter by letter until we find a valid prefix, sending the rest of the string recursively and continuing the search, collecting all results on the way back.", "The output should be quite clear, the first example is testing the Trie for \u2018t\u2019, \u2019th\u2019 and then \u2018the\u2019, once found the rest of the string is recursively processed from the end of the word \u2018the\u2019.", "We can see that the two sentences we were looking for were found by the algorithm. After collecting all valid sentences, we can probably use an English word-embedding model to see if our sentences make sense on a global scale.", "Dr. Ori Cohen has a Ph.D. in Computer Science with focus in machine-learning. He leads the research team in Zencity.io, trying to positively influence citizen lives.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I hold a Ph.D. in CS. A Sr. Director of Data & Data Science at Justt.ai. https://bit.ly/33Xcdwy"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb721ea2f8b6f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://cohenori.medium.com/?source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": ""}, {"url": "https://cohenori.medium.com/?source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": "Ori Cohen"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4dde5994e6c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&user=Ori+Cohen&userId=4dde5994e6c1&source=post_page-4dde5994e6c1----b721ea2f8b6f---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb721ea2f8b6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb721ea2f8b6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://en.wikipedia.org/wiki/Trie", "anchor_text": "https://en.wikipedia.org/wiki/Trie"}, {"url": "https://github.com/gsakkis/pytrie/", "anchor_text": "PyTrie"}, {"url": "https://zencity.io/", "anchor_text": "Zencity.io"}, {"url": "https://medium.com/tag/trie?source=post_page-----b721ea2f8b6f---------------trie-----------------", "anchor_text": "Trie"}, {"url": "https://medium.com/tag/prefix-tree?source=post_page-----b721ea2f8b6f---------------prefix_tree-----------------", "anchor_text": "Prefix Tree"}, {"url": "https://medium.com/tag/long-string-searches?source=post_page-----b721ea2f8b6f---------------long_string_searches-----------------", "anchor_text": "Long String Searches"}, {"url": "https://medium.com/tag/data-science?source=post_page-----b721ea2f8b6f---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb721ea2f8b6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&user=Ori+Cohen&userId=4dde5994e6c1&source=-----b721ea2f8b6f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb721ea2f8b6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&user=Ori+Cohen&userId=4dde5994e6c1&source=-----b721ea2f8b6f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb721ea2f8b6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb721ea2f8b6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b721ea2f8b6f---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b721ea2f8b6f--------------------------------", "anchor_text": ""}, {"url": "https://cohenori.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://cohenori.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ori Cohen"}, {"url": "https://cohenori.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.6K Followers"}, {"url": "http://Justt.ai", "anchor_text": "Justt.ai"}, {"url": "https://bit.ly/33Xcdwy", "anchor_text": "https://bit.ly/33Xcdwy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4dde5994e6c1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&user=Ori+Cohen&userId=4dde5994e6c1&source=post_page-4dde5994e6c1--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F400509e694f1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-all-words-inside-a-string-using-a-trie-prefix-tree-b721ea2f8b6f&newsletterV3=4dde5994e6c1&newsletterV3Id=400509e694f1&user=Ori+Cohen&userId=4dde5994e6c1&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}