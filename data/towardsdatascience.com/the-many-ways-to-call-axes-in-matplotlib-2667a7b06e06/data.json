{"url": "https://towardsdatascience.com/the-many-ways-to-call-axes-in-matplotlib-2667a7b06e06", "time": 1683002990.076926, "path": "towardsdatascience.com/the-many-ways-to-call-axes-in-matplotlib-2667a7b06e06/", "webpage": {"metadata": {"title": "The Many Ways To Call Axes In Matplotlib | by Jun | Towards Data Science", "h1": "The Many Ways To Call Axes In Matplotlib", "description": "Although matplotlib is extremely powerful and the only limitation might be our imagination, it is a bit challenging for new users to find the right path, as there is always more than one way to\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/plt-xxx-or-ax-xxx-that-is-the-question-in-matplotlib-8580acf42f44", "anchor_text": "artist layer plotting", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/plt-xxx-or-ax-xxx-that-is-the-question-in-matplotlib-8580acf42f44", "anchor_text": "this post", "paragraph_index": 3}, {"url": "https://towardsdatascience.com/plt-xxx-or-ax-xxx-that-is-the-question-in-matplotlib-8580acf42f44", "anchor_text": "here", "paragraph_index": 6}, {"url": "https://github.com/Perishleaf/data-visualisation-scripts/blob/master/matplotlib_init_fig_ax/matplotlib_init_fig_ax.ipynb", "anchor_text": "jupyter notebook", "paragraph_index": 16}, {"url": "https://www.linkedin.com/in/jun-ye-29aaa769/", "anchor_text": "Linkedin", "paragraph_index": 17}, {"url": "https://junye0798.com/", "anchor_text": "my website", "paragraph_index": 17}, {"url": "http://junye0798.com", "anchor_text": "junye0798.com", "paragraph_index": 19}], "all_paragraphs": ["Although matplotlib is extremely powerful and the only limitation might be our imagination, it is a bit challenging for new users to find the right path, as there is always more than one way to achieve the same goal in matplotlib. Calling axes is one of them.", "Let\u2019s say you just decide to make plots using object-oriented interface (aka artist layer plotting) in matplotlib. However, I bet you will soon run into problems when trying to instantiate axes to start your plotting. You may find that plt.subplots() and plt.subplot() both can return you axes. Yes, they only differ by one letter \u2018s\u2019. Later, you notice that plt.axes() can call axes as well. It is not over yet, you highly likely will encounter the following functions fig.add_subplot(), fig.add_axes(), and fig.subplots(), which are all able to create axes for you. I totally understand how panicked you are or will be, as I have had the same confusion in learning matplotlib.", "In this post, I will summarise the differences of these functions (i.e. plt.subplot(), plt.subplots(), plt.axes(), fig.add_subplot(), fig.subplots(), and fig.add_axes()) and demonstrate how to use them accordingly.", "In matplotlib terminology, a basic plot starts from one figure and at least one axes (if you are confused about these terms, you may find this post is useful). A close analogy with painting, figure is the canvas and axes is the artistic composition. A canvas (figure) can have only one type or many different types of artistic composition (axes) on it. In light of this, let\u2019s first start from a simple case for figure with only one axes, then dive into figure with multiple axes.", "In most circumstances, we instantiate a fig object by calling fig = plt.figure(\u2026) and then add an axes object to the fig by calling ax = fig.add_subplot(). By default, if leave the parentheses empty, this function is passed with fig.add_subplot(1, 1, 1), which means add # 1 axes in a 1 row by 1 column axes grid. We can also use an alternative format with 3-digit integer without comma (i.e. fig.add_subplot(111)). However, with the 3-digit integer format, each integer cannot be greater than 9. Using this function, we add only one axes at a time.", "Sometimes, we are able to add an axes object using ax = fig.subplots(). This function is originally devised to make it convenient to create a set of subplots in common layouts by a single call. It takes nrows and ncols as positional arguments (i.e. this function is supposed to add multiple axes at a time). However, if we leave the parentheses empty, this function is passed with fig.subplots(1, 1) by default, which means create an axes grid with 1 row by 1 column (i.e. one axes on fig). Hence the axes only contain one item in it (i.e. len(ax) is 1).", "Rarely, as for figure with one plot, we may also use ax = fig.add_axes([left, bottom, width, height]) to add an axes onto a fig. This function enables arbitrary layouts of axes on fig by taking the dimensions ([left, bottom, width, height]) of the new axes (you can find an example here). All four numbers should be in fractions of figure width and height. In other words, we control the position and size of the axes. fig.add_axes([0, 0, 0.78, 0.78]) creates the same size plot as by fig.add_subplot(111) and fig.subplots(1, 1). As you can see here, axes is not in the same size as figure. There is white space between axes and figure by default.", "After demonstrating the differences of the above three functions, it is fairly easy to understand plt.subplot(), plt.subplots(), and plt.axes(). They are from state-based interface (aka scripting layer plotting) of matplotlib, which just wrapped fig = plt.figure() with fig.add_subplot(), fig.subplots(), and fig.add_axes(), correspondingly.", "plt.subplot() returns only one axes and create a figure object automatically. You can change figure-level attributes or save the figure by calling ax.figure.xxx() instead. For example, ax.figure.savefig('example.png') will save the figure as example.png.", "plt.subplots() returns a tuple containing a figure and axes object(s). We need to unpack this tuple and assign its items to variables fig and ax, respectively.", "plt.axes() returns one axes using fig.add_subplot(1, 1, 1) when no argument is provided and, just like plt.subplot(), it creates a figure object automatically. plt.axes() also accept dimensions ([left, bottom, width, height]) using fig.add_axes([left, bottom, width, height]) in its backend. The following two sets of code create the same plots.", "When it comes to plotting multiple axes on figure, the differences among these functions (i.e. plt.subplot(), plt.subplots(), plt.axes(), fig.add_subplot(), fig.subplots(), and fig.add_axes()) become manifest. Again, let\u2019s demonstrate this using examples. Since plt.subplot(), plt.subplots(), and plt.axes() are essentially the same as fig.add_subplot(), fig.subplots(), and fig.add_axes(), I will only show examples for the latter three functions.", "As stated above, we add one axes at a time when using fig.add_subplot(). The build-in order of axes is started from left to right and from top to bottom within the axes grid (Figure 1).", "The same layout could be obtained using fig.subplots() with one line of code (Figure 2). It returns a ndarray object axs (I add a \u2018s\u2019 after ax to show that it contains multiple objects). Just like an 2D array object, each ax within axs can be accessed using axs[x, y] as well (i.e. ax1 can be accessed using axs[0, 0]). Moreover, if you like to assign names to each ax within axs, you can use tuple unpacking like this, ((ax1, ax2), (ax3, ax4)) = fig.subplots(nrows=2, ncols=2). Flattening of 2D array is another method to access ax from axs as shown in Figure 2.", "Normally, fig.add_axes() is used for arbitrary layouts, such as a plot with inlet subplots or subplots overlap with each other. This is because we can fine-tune the position and size of each subplot by its dimensions ([left, bottom, width, height]). Having said that, we still can make a common layout as shown in Figure 1 and 2 using fig.add_axes() (Figure 3).", "In summary, these six functions (concisely should be three functions, i.e. fig.add_subplot(), fig.subplots(), and fig.add_axes()) can be used interchangeably when you are making a figure with only one axes. However, they have respective strengths and can be used individually or in combination when it comes to making figure with multiple axes in different layouts.", "After reading this post, I hope you have a clearer understanding of how to call axes in matplotlib. All the codes in this post can be accessed from this jupyter notebook. If you know other functions/cases to call axes which are not listed here, please feel free to leave your comment. Let\u2019s learn matplotlib together.", "As always, I welcome feedback, constructive criticism, and hearing about your data science projects. I can be reached on Linkedin and on my website as well.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Analyst @Canva | PhD | Inspired by data | junye0798.com | Opinions are my own"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F2667a7b06e06&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://me.dm/@jun_ye", "anchor_text": "Mastodon"}, {"url": "https://towardsdatascience.com/?source=post_page-----2667a7b06e06--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2667a7b06e06--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@jun_ye?source=post_page-----2667a7b06e06--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jun_ye?source=post_page-----2667a7b06e06--------------------------------", "anchor_text": "Jun"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd8f76324bf51&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&user=Jun&userId=d8f76324bf51&source=post_page-d8f76324bf51----2667a7b06e06---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2667a7b06e06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2667a7b06e06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/plt-xxx-or-ax-xxx-that-is-the-question-in-matplotlib-8580acf42f44", "anchor_text": "artist layer plotting"}, {"url": "https://towardsdatascience.com/plt-xxx-or-ax-xxx-that-is-the-question-in-matplotlib-8580acf42f44", "anchor_text": "this post"}, {"url": "https://towardsdatascience.com/plt-xxx-or-ax-xxx-that-is-the-question-in-matplotlib-8580acf42f44", "anchor_text": "here"}, {"url": "https://github.com/Perishleaf/data-visualisation-scripts/blob/master/matplotlib_init_fig_ax/matplotlib_init_fig_ax.ipynb", "anchor_text": "jupyter notebook"}, {"url": "https://www.linkedin.com/in/jun-ye-29aaa769/", "anchor_text": "Linkedin"}, {"url": "https://junye0798.com/", "anchor_text": "my website"}, {"url": "https://medium.com/tag/matplotlib?source=post_page-----2667a7b06e06---------------matplotlib-----------------", "anchor_text": "Matplotlib"}, {"url": "https://medium.com/tag/python?source=post_page-----2667a7b06e06---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----2667a7b06e06---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2667a7b06e06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&user=Jun&userId=d8f76324bf51&source=-----2667a7b06e06---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2667a7b06e06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&user=Jun&userId=d8f76324bf51&source=-----2667a7b06e06---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2667a7b06e06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2667a7b06e06--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F2667a7b06e06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----2667a7b06e06---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----2667a7b06e06--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----2667a7b06e06--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----2667a7b06e06--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----2667a7b06e06--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----2667a7b06e06--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----2667a7b06e06--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----2667a7b06e06--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----2667a7b06e06--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jun_ye?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jun_ye?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Jun"}, {"url": "https://medium.com/@jun_ye/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "441 Followers"}, {"url": "http://junye0798.com", "anchor_text": "junye0798.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd8f76324bf51&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&user=Jun&userId=d8f76324bf51&source=post_page-d8f76324bf51--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe51a61d93066&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-many-ways-to-call-axes-in-matplotlib-2667a7b06e06&newsletterV3=d8f76324bf51&newsletterV3Id=e51a61d93066&user=Jun&userId=d8f76324bf51&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}