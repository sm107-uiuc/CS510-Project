{"url": "https://towardsdatascience.com/deploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed", "time": 1683015486.845976, "path": "towardsdatascience.com/deploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed/", "webpage": {"metadata": {"title": "Deploying a Text Classifier with TensorFlow Serving + Docker in 2.0 | by Mandy Gu | Towards Data Science", "h1": "Deploying a Text Classifier with TensorFlow Serving + Docker in 2.0", "description": "Around one year ago, I wrote Deploy a Keras Model for Text Classification using TensorFlow Serving for deploying text classifiers in TensorFlow 1.X. Since then, I\u2019ve spent a lot of time migrating\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/deploying-kaggle-solution-with-tensorflow-serving-part-1-of-2-803391c9648", "anchor_text": "Deploy a Keras Model for Text Classification using TensorFlow Serving", "paragraph_index": 0}, {"url": "https://github.com/happilyeverafter95/toxic-comment-classifer/blob/master/profanity_detector/model.py#L52", "anchor_text": "here", "paragraph_index": 4}, {"url": "https://github.com/happilyeverafter95/tensorflow-serving-2.0", "anchor_text": "GitHub repo", "paragraph_index": 9}, {"url": "https://www.tensorflow.org/datasets/catalog/imdb_reviews", "anchor_text": "here", "paragraph_index": 11}, {"url": "https://www.tensorflow.org/tfx/serving/signature_defs", "anchor_text": "page on the TensorFlow documentation", "paragraph_index": 27}, {"url": "https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/builder.py", "anchor_text": "SavedModel", "paragraph_index": 27}, {"url": "https://curl.haxx.se/docs/manpage.html", "anchor_text": "curl", "paragraph_index": 52}, {"url": "https://medium.com/@mandygu", "anchor_text": "Follow me on Medium", "paragraph_index": 56}, {"url": "http://www.dscrashcourse.com/", "anchor_text": "www.dscrashcourse.com", "paragraph_index": 57}], "all_paragraphs": ["Around one year ago, I wrote Deploy a Keras Model for Text Classification using TensorFlow Serving for deploying text classifiers in TensorFlow 1.X. Since then, I\u2019ve spent a lot of time migrating older projects to TensorFlow 2.X. While I found 2.X much easier to work with, I had a hard time finding the documentation I needed, especially around deployment and migrating deprecated V1 features for TensorFlow Serving.", "I\u2019ve gathered my learnings and will be demonstrating model deployment with a toy example.", "If this is your first time working with TensorFlow 2.X, I recommend checking out this course for building, training and deploying models.", "In particular, 2.X introduced several new functionalities that makes working with textual models so much easier. One of the biggest pain points of 1.X was how to handle the vectorization layer. It wasn\u2019t always feasible to ask consumer applications to supply a vector input for my inference API.", "As a result, many ugly workarounds were created to allow the model to accept a raw string. Check out my tokenization/truncation/padding hack here.", "In many cases, the prediction endpoint had to be wrapped in another endpoint to handle the preprocessing steps. It created an annoying situation where the preprocessing logic lived in two separate places: the module for training the model and the wrapper that converted the client\u2019s raw text to a vector.", "Let\u2019s see how we would tackle this problem in 2.X.", "It\u2019s a standard sentiment analysis task. To ensure that the solution we build is end to end:", "If you want to go even further, there are a lot of courses and resources on deploying TensorFlow models to cloud platforms such as GCP or AWS.", "I recommend forking or cloning my GitHub repo and following along from there.", "This article breaks down each step with more detailed explanations. If you just want to get something up and running, feel free to follow the instructions in my README.md instead. The README.md includes details on how the model can be trained and served.", "The dataset contains 25,000 highly polar movie reviews for training and an additional 25,000 for testing. Each movie review is labeled as 0 (negative sentiment) or 1 (positive sentiment). More information about the dataset can be found here.", "We will train a binary classifier to predict the probability that the given film review is positive.", "I\u2019m going to organize most of my code in a ModelTrainer class that handles end to end training and deployment of the model. Let\u2019s go through this step by step.", "First, we load the libraries we will be using. I am also defining a logger to track important events during the training process. Logging is usually preferred over print statements in larger projects as it is more traceable (easier to see where the logs are coming from), configurable and easier to store.", "I\u2019ve defined the model architecture parameters as attributes here. In a more complex project, it might make sense to move these to a configuration file. Here\u2019s a quick breakdown of what each attribute refers to:", "We\u2019ll go over the tf_model_wrapper attribute later on.", "Inside this class, I defined a method called fetch_data which will programatically download the training and testing data from tensorflow_datasets. This method of downloading the dataset is quite inefficient. The dataset is not saved anywhere and needs to be reloaded each time the script is executed.", "This is the layer that takes the raw string and converts it to a vectorized output that\u2019s compatible with our model architecture. We also build the preprocessing steps into this layer so that the raw text is preprocessed prior to vectorization.", "The preprocessing is defined in thecustom_preprocessing method. We are doing three things here:", "The TextVectorization object returned in init_vectorize_layer will return a fully fitted layer that is adapted to the provided text (this is the movie reviews from our training data). In addition to the custom preprocessing function, we define the maximum number of tokens, the output sequence length and the output mode.", "First, we create the vectorize_layer and define the input type (single string). We pass the raw input through the vectorize layer and subsequently pass that output to the rest of our model architecture.", "I\u2019ve put together a simple RNN with a bi-directional GRU layer. For the purpose of illustrating serving, I didn\u2019t spend too much time perfecting this model. I\u2019m sure that it won\u2019t be hard to find a model architecture that achieves better results against this dataset.", "The first thing we do in the train method is to load the training data using fetch_data . In this toy example, we will not be loading the testing data as we are skipping model evaluation. Model evaluation is incredibly important and should not be skipped in more practical scenarios.", "We initialize the model using the init_model method and pass the train_examples to fit our vectorize layer. This is followed by fitting the model over the training data.", "On line 4 of this gist, we finally define our tf_model_wrapper object by creating a new instance of the TFModel class. The purpose of this object is to incorporate signatures into the served model.", "I\u2019m going to take a detour here to talk about model signatures and why you might want to incorporate them.", "This page on the TensorFlow documentation explains that signatures are used to provide \u201cgeneric support to identify inputs and outputs of a function and can be specified when building a SavedModel\u201d.", "inputs as a map of string to TensorInfo.", "outputs as a map of string to TensorInfo.", "method_name (which corresponds to a supported method name in the loading tool/system).", "By customizing the inputs, we can incorporate additional preprocessing steps prior to inferencing. By customizing the outputs, we can customize the payload from the served model.", "In this example, we are going to create a signature so that we can include some useful metadata alongside our prediction.", "We are going to create a TFModelas a wrapper for the model. When initialized, the TFModel object will accept a tf.keras.Model and save it as a model attribute. This initialization step is very flexible and can be used to pass additional parameters.", "We define a prediction method using the @tf.function decorator. This decorator converts functions into callable TensorFlow graphs. The input_signature parameter specifies the shape and data types that will be supplied to the signature. The output of this method becomes the output when we serve the model.", "Our served model payload will have two fields: a prediction field which includes the model output and a description field which is hard coded.", "For our use case, the model outputs are fairly intuitive and the description is not entirely needed. However, this becomes an useful indicator when the class labels are unclear or when additional metadata might be helpful.", "The world is your oyster! Here\u2019s some ideas that might make your life easier down the line.", "Consider adding metadata that will help with investigations and reproducing specific predictions.", "The end consumer of your model might not be someone familiar with machine learning. It might be confusing to pass a list of class probabilities and corresponding labels without any explanation. Consider passing the top prediction and the associated probability.", "Sometimes, it might be helpful for the output to reflect your intended usage. Perhaps you have a threshold for your scalar output that varies model to model? You can use the metadata to make your intended usage clear.", "The deployment step is very straightforward. We save the model to a local directory and define the serving_default signature as the prediction method from our tf_model_wrapper.", "The model is serialized as a SavedModel object which can be used for inferencing. During this process, the entire TensorFlow session is exported into a language agnostic format contained in a single directory.", "The directory has the following structure:", "By default, TensorFlow Serving will always serve the latest version of your model. The \u201clatest\u201d version is inferred from the SavedModel directory name. For this example, I named the SavedModel directories based on the integer time stamps at training time so the most recent model will always be served.", "Make sure that you trained the model prior to this step. You can train the model by running python -m classifier.train in the root directory of the cloned repo. This will run the code covered above.", "It\u2019s time to serve the model! Make sure you have Docker installed for this step.", "A bunch of logs will appear. The first character in each log will indicate the status of the process.", "Here\u2019s what the first few lines might look like.", "If every log starts with I, then congratulations \u2014 the model has been successfully served!", "Note: it can be kind of annoying to have the logs flood your terminal. Use detached mode so it doesn\u2019t do that. The only difference in the command below is the additional -d flag.", "Here are two useful Docker commands that might come in handy when working with the model server:", "Now that our model server is up and running in our local machine, we can send a sample POST request. POST requests can be sent through curl, a simple tool used to transfer data between servers, or through the request library in Python.", "We pass the review \u201cworst movie EVER\u201d for inferencing.", "Unsurprisingly, \u201cworst movie EVER\u201d is considered very unlikely to be a positive review.", "That\u2019s all for this time. Hope you found this article helpful! Happy building.", "Follow me on Medium for the latest updates. \ud83d\ude03", "I am also building a comprehensive set of free Data Science lessons and practice problems at www.dscrashcourse.com as a hobby project.", "Thank you again for reading! \ud83d\udcd5", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fcba6851e46ed&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----cba6851e46ed--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----cba6851e46ed--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://mandygu.medium.com/?source=post_page-----cba6851e46ed--------------------------------", "anchor_text": ""}, {"url": "https://mandygu.medium.com/?source=post_page-----cba6851e46ed--------------------------------", "anchor_text": "Mandy Gu"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3c6a0dab4f8d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&user=Mandy+Gu&userId=3c6a0dab4f8d&source=post_page-3c6a0dab4f8d----cba6851e46ed---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcba6851e46ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcba6851e46ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@markuswinkler?utm_source=medium&utm_medium=referral", "anchor_text": "Markus Winkler"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/happilyeverafter95/tensorflow-serving-2.0", "anchor_text": "GitHub repo"}, {"url": "https://towardsdatascience.com/deploying-kaggle-solution-with-tensorflow-serving-part-1-of-2-803391c9648", "anchor_text": "Deploy a Keras Model for Text Classification using TensorFlow Serving"}, {"url": "https://click.linksynergy.com/link?id=J2RDo*Rlzkk&offerid=759505.12488204614&type=2&murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fintro-tensorflow", "anchor_text": "Introduction to TensorFlowThis course is focused on using the flexibility and \"ease of use\" of TensorFlow 2.x and Keras to build, train, and\u2026click.linksynergy.com"}, {"url": "https://unsplash.com/@officestock?utm_source=medium&utm_medium=referral", "anchor_text": "Sebastian Herrmann"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/happilyeverafter95/toxic-comment-classifer/blob/master/profanity_detector/model.py#L52", "anchor_text": "here"}, {"url": "https://click.linksynergy.com/link?id=J2RDo*Rlzkk&offerid=759505.13223275109&type=2&murl=https%3A%2F%2Fwww.coursera.org%2Flearn%2Fend-to-end-ml-tensorflow-gcp", "anchor_text": "End-to-End Machine Learning with TensorFlow on GCPOffered by Google Cloud. In the first course of this specialization, we will recap what was covered in the Machine\u2026click.linksynergy.com"}, {"url": "https://github.com/happilyeverafter95/tensorflow-serving-2.0", "anchor_text": "GitHub repo"}, {"url": "https://docs.docker.com/get-docker/", "anchor_text": "Install Docker"}, {"url": "https://github.com/happilyeverafter95/tensorflow-serving-2.0", "anchor_text": "my repo"}, {"url": "https://unsplash.com/@jontyson?utm_source=medium&utm_medium=referral", "anchor_text": "Jon Tyson"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.tensorflow.org/datasets/catalog/imdb_reviews", "anchor_text": "here"}, {"url": "https://www.tensorflow.org/tfx/serving/signature_defs", "anchor_text": "page on the TensorFlow documentation"}, {"url": "https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/builder.py", "anchor_text": "SavedModel"}, {"url": "https://curl.haxx.se/docs/manpage.html", "anchor_text": "curl"}, {"url": "https://keras.io/examples/nlp/text_classification_from_scratch/?fbclid=IwAR1_T5oLgYdLfGFllj79BHkZNTuOgJA8m3fQ4awjQkckY9jUQw1eyFDU_rU", "anchor_text": "https://keras.io/examples/nlp/text_classification_from_scratch/"}, {"url": "https://www.tensorflow.org/api_docs", "anchor_text": "https://www.tensorflow.org/api_docs"}, {"url": "https://medium.com/@mandygu", "anchor_text": "Follow me on Medium"}, {"url": "http://www.dscrashcourse.com/", "anchor_text": "www.dscrashcourse.com"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----cba6851e46ed---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----cba6851e46ed---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----cba6851e46ed---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/tensorflow?source=post_page-----cba6851e46ed---------------tensorflow-----------------", "anchor_text": "TensorFlow"}, {"url": "https://medium.com/tag/nlp?source=post_page-----cba6851e46ed---------------nlp-----------------", "anchor_text": "NLP"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fcba6851e46ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&user=Mandy+Gu&userId=3c6a0dab4f8d&source=-----cba6851e46ed---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fcba6851e46ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&user=Mandy+Gu&userId=3c6a0dab4f8d&source=-----cba6851e46ed---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcba6851e46ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----cba6851e46ed--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fcba6851e46ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----cba6851e46ed---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----cba6851e46ed--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----cba6851e46ed--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----cba6851e46ed--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----cba6851e46ed--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----cba6851e46ed--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----cba6851e46ed--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----cba6851e46ed--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----cba6851e46ed--------------------------------", "anchor_text": ""}, {"url": "https://mandygu.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://mandygu.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Mandy Gu"}, {"url": "https://mandygu.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "689 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3c6a0dab4f8d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&user=Mandy+Gu&userId=3c6a0dab4f8d&source=post_page-3c6a0dab4f8d--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F6a4978efa3fe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploying-a-text-classifier-with-tensorflow-serving-docker-in-2-0-cba6851e46ed&newsletterV3=3c6a0dab4f8d&newsletterV3Id=6a4978efa3fe&user=Mandy+Gu&userId=3c6a0dab4f8d&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}