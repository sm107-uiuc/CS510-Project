{"url": "https://towardsdatascience.com/loess-373d43b03564", "time": 1682996376.549712, "path": "towardsdatascience.com/loess-373d43b03564/", "webpage": {"metadata": {"title": "LOESS. Smoothing data using local regression | by Jo\u00e3o Paulo Figueira | Towards Data Science", "h1": "LOESS", "description": "If you are sampling data generated from a physical phenomenon, you will get noise. Noise can be added to the signal by the sensor measuring it, or it can be inherent to the stochasticity of the\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Gaussian_noise", "anchor_text": "Gaussian distribution", "paragraph_index": 1}, {"url": "https://en.wikipedia.org/wiki/Local_regression", "anchor_text": "LOESS", "paragraph_index": 6}, {"url": "https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm", "anchor_text": "KNN", "paragraph_index": 10}, {"url": "https://en.wikipedia.org/wiki/Euclidean_distance", "anchor_text": "Euclidean distance", "paragraph_index": 12}, {"url": "https://en.wikipedia.org/wiki/Kernel_(statistics)#Kernel_functions_in_common_use", "anchor_text": "tri-cubic kernel", "paragraph_index": 18}, {"url": "https://www.statsmodels.org/dev/generated/statsmodels.nonparametric.smoothers_lowess.lowess.html", "anchor_text": "StatsModels", "paragraph_index": 30}, {"url": "https://www.numpy.org/", "anchor_text": "NumPy", "paragraph_index": 31}, {"url": "https://github.com/joaofig/pyloess", "anchor_text": "GitHub repository", "paragraph_index": 31}, {"url": "http://numba.pydata.org/", "anchor_text": "Numba", "paragraph_index": 32}, {"url": "https://en.wikipedia.org/wiki/Loss_of_significance", "anchor_text": "loss of significance", "paragraph_index": 33}, {"url": "https://www.itl.nist.gov/div898/handbook/pmd/section1/dep/dep144.htm", "anchor_text": "NIST", "paragraph_index": 39}, {"url": "https://github.com/joaofig/pyloess", "anchor_text": "GitHub repo", "paragraph_index": 42}, {"url": "http://tblx.io", "anchor_text": "tblx.io", "paragraph_index": 46}], "all_paragraphs": ["If you are sampling data generated from a physical phenomenon, you will get noise. Noise can be added to the signal by the sensor measuring it, or it can be inherent to the stochasticity of the process that generates the data. I recently had to handle one such noisy data stream generated by a vehicle engine and needed to figure out a way to filter out the noise. Due to the physical nature of the signal generation process, the sampling frequency was not constant, thereby precluding any frequency-based noise filtering technique. I needed to find a way to filter out the noise and recreate the signal for further processing.", "In order to recover the signal from the measured noise, we must start by making a few assumptions about how the noise is generated. In statistical terms, this means that we must assume some distribution for the noise, a mathematical description of how it is generated. The most common assumptions involve random noise that is generated according to a Gaussian distribution, an additive model where the noise is added to the signal, and an error term that is independent of x, like so:", "Incidentally, this is the very same noise model that is generally assumed by the linear regression model. Here the noise model looks like this\u00b9:", "In a sense, by fitting a model to your data, you are trying to recover the underlying signal from the measured noise that is realized by the data variance.", "So, should I use linear regression to smooth the signal? If the signal itself can be modeled by a linear function, that might possibly have non-linear terms, then the answer would be yes. But in this particular scenario, I would be handling a highly non-linear signal that reflected the daily operation of a distribution vehicle: substantial periods of flatness interspersed with variable-length periods of pure madness. Handling the whole signal with a single linear regression model was out of the question. But\u2026", "What if instead of tackling the whole signal with the same model, I would use different models of the same type to smooth out small and localized areas of the signal? And why not take this idea a bit further and consider a specialized model for each point we need to smooth out?", "Looking at my bag of tricks, I found an old friend: LOESS \u2014 locally weighted running line smoother\u00b2. This is a non-parametric smoother, although it uses linear regression at its core. As with any smoother, the idea of this algorithm is to recover the inherent signal from a noisy sample.", "So how does LOESS work? Let\u2019s start with a noisy signal like the one below.", "This is a synthetically generated sine wave with added Gaussian noise. The sine wave is drawn in red while the noisy samples are displayed as blue dots. To simulate an irregularly sampled signal, the x values were randomly sampled from a uniform distribution and scaled appropriately. The corresponding y values were calculated using a sine function with added Gaussian noise.", "So how do we get from the blue dots to an approximation of the red line? First of all, think of the red line as an ordered sequence of equally spaced x values, in this case between 0 and 2\u03c0. For each of these values, select an appropriate neighborhood of sampled points, and use them as the training set for a linear regression problem. With the resulting model, estimate the new value for your point. Let us explore this idea in a bit more detail", "This algorithm estimates the latent function in a point-wise fashion. For each value of x, we estimate the value of f(x) by using its neighboring sampled (known) values. This is quite similar to a KNN algorithm, where k, the window size, is a tunable parameter and, in this particular case, will determine the smoothness of the resulting estimate. In a sense, k is your bias vs. variance knob. Large values of k will result in higher bias and lower values will induce higher variance.", "The first step is to collect the value of x for which we want to estimate y. Let\u2019s call these x\u2019 and y\u2019. By feeding the LOESS algorithm with x\u2019, and using the sampled x and y values, we will obtain an estimate y\u2019. In this sense, LOESS is a non-parametric algorithm that must use all the dataset for estimation.", "Now that we have x\u2019, we must find its k nearest neighbors using a simple Euclidean distance. Let\u2019s call the resulting ordered set D.", "The next step converts the set D of k distances into an ordered set W containing weights that will be later used in the linear regression process. These weights are calculated using a specialized weight function that assigns importance to each of the k neighbors of x according to its distance to x\u2019.", "Distance weights are calculated using the tri-cubic function:", "This function looks like a hat and has positive values only between -1 and 1. Outside of this interval, the function is zero. Here is what the function looks like:", "As this function only has positive results for -1 < x < 1, we must normalize the distance by dividing it by the maximum value observed in D. More concretely,", "Here, we denote d(x, x\u2019) as the distance between x, one of the k nearest neighbors, and x\u2019. The effect of normalization is that larger distances will be associated with lower weights. At the very extreme, the point corresponding to the maximum distance will have a weight of zero, and the point at zero distance will have the highest possible weight \u2014 one. That is how the \u201clocality\u201d effect is achieved, by assigning higher importance to the training data that is closest to where we want the prediction to be calculated.", "As a side note, you may find that this function has a striking similarity to the tri-cubic kernel function. The difference in scale (70/81) between these functions relates to the requirement that a kernel function must integrate to one over its domain, while here that requirement is relaxed.", "We are now ready to calculate the estimate using a simple weighted linear regression that is trained with the x values from D, and the corresponding y values.", "Linear regression is the bread-and-butter of supervised machine learning methods. Odds are, you started your ML journey learning the innards of this method, probably trying to figure out the sale price for households in Portland, given their physical features. Or maybe it was something else entirely, but you know the drill, don\u2019t you?", "It so happens that a specialized version of linear regression, weighted linear regression, is at the heart of LOESS. For every point that we set out to estimate (x\u2019), the LOESS algorithm must set up a linear regression model that will calculate the corresponding output (y\u2019), using the k nearest neighbors of x\u2019 and a set of weights that rates their importance.", "The local linear regression usually models low-dimensional polynomials, a line or a quadratic.", "Weighted linear regression is a known problem and is abundantly documented online. Due to the typical low dimensionality of the problems that will be tackled, we will resort to the closed-form normal equations for parameter estimation. In the unweighted case, these equations are:", "Were beta is the vector of linear parameters, X is the matrix containing all x observations, arranged like so:", "Concretely, this matrix models a sample with n dimensions and m observations. Note that I am including the intercept term in the matrix through the first column. For the case when we are modeling a second-degree polynomial, this matrix is actually:", "Once we have the beta vector, new values of y can be calculated using the following equation:", "Extending this concept to using weights is actually quite simple and the normal equation just needs an extra term:", "Here, the weight matrix W has all the calculated weights in the diagonal with all other elements set to zero. Unfortunately, as you will see in the implemented Python code, the matrix approach can be a bit slow. If you stick to the first-degree model, an alternative approach can be taken using simpler math:", "Looks complex but the implementation is far simpler through the use of internal products of vectors to eliminate explicit sums. Notation note: d stands for the number of items in D, which is actually k.", "You can find an implementation of this smoother in the StatsModels Python package. By reading through the method documentation, you see that lowess function returns an array with the same dimension as the two input arrays (x and y). This means that only the observed values are smoothed so if you need any other values in between, you will have to somehow interpolate them. But this does not have to be this way.", "For this article, I developed a new implementation based on NumPy that leverages its vectorization features, and the code can be found in this GitHub repository. The code was developed with vectorization in mind and there is only one loop in the function that determines the indexes of the closest values. Let us step through the code and see how it works.", "The tri-cubic weighting function is fully vectorized and it processes arrays of x values. First, the output array y is created with the same dimensions as the input array x. Next, an indexing array is created to enforce the function\u2019s domain and finally, the function itself is calculated. Note that the indexing array is used on both the input and output arrays. My first approach was to vectorize the code using Numba, but then I realized that this approach had the same performance, and did away with the unnecessary compilation.", "Upon initialization, both input arrays must be normalized to avoid problems of loss of significance (aka, catastrophic cancellation). This is done quite simply with a rescaling to the interval between zero and one.", "Weights are calculated from the array of distances with the help of an indexing array, that contains the indexes of the minimal-distance window.", "This indexing array is calculated in the next function:", "In order to calculate the range with the minimum total distance to x\u2019, we start by determining the index of the minimum distance within the distances array. Knowing that the indexes must be consecutive, we can use this initial index as the root of a growing list of indexes. The tests at the top of the function just handle the edge cases when the minimum index is at the extremes of the distances array. The following loop grows the list of indices, starting from the index of the minimal distance, adding items left and right as needed and keeping the list naturally sorted, inserting to the left and appending to the right. Note that the number of loops is limited to k-1.", "Now, we get to the heart of the code. The function that estimates f(x) can be used in two modes: matrix or statistical. In matrix mode, you can specify a polynomial degree but will have lower performance. The statistical code is faster but only models lines.", "The function starts by normalizing the input x value and calculating its distance to all the training values. The array of distances has the same dimension as the training data. Next, the minimum distance range is found and the corresponding weights calculated. Note that the array of weights has k (the window size) items. Finally, the regression is trained and the estimated value for f(x) is calculated using either of the methods described above. Please note that if you want to use a polynomial regression the code will use \u201cmatrix mode\u201d.", "Finally, here\u2019s a sample of how to use the code (data values are taken from NIST):", "Please note that you can provide values of x other than the ones in the training data.", "Here\u2019s an example of a smoothing function on the same data as the first chart\u2019s:", "You can play with this chart by using the companion notebook in the GitHub repo.", "We have gone through the rationale for using the LOESS local regression model and lifted the veil on how it works. A Python implementation was developed and presented making heavy use of the NumPy library and its vectorization feature. Please help yourself with the code from the GitHub repository and let me know your thoughts in the comments.", "[1] Gareth, J. Witten, D. Hastie, T. Tibshirani, R. (2013). An Introduction to Statistical Learning with Applications in R. New York: Springer", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Addicted to math and data, slightly off-centered. Data Scientist at tblx.io"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F373d43b03564&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----373d43b03564--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----373d43b03564--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@joao.figueira?source=post_page-----373d43b03564--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@joao.figueira?source=post_page-----373d43b03564--------------------------------", "anchor_text": "Jo\u00e3o Paulo Figueira"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F64bc009cedeb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&user=Jo%C3%A3o+Paulo+Figueira&userId=64bc009cedeb&source=post_page-64bc009cedeb----373d43b03564---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F373d43b03564&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F373d43b03564&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@x_vinicius?utm_source=medium&utm_medium=referral", "anchor_text": "Vin\u00edcius Henrique"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://en.wikipedia.org/wiki/Gaussian_noise", "anchor_text": "Gaussian distribution"}, {"url": "https://en.wikipedia.org/wiki/Local_regression", "anchor_text": "LOESS"}, {"url": "https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm", "anchor_text": "KNN"}, {"url": "https://en.wikipedia.org/wiki/Euclidean_distance", "anchor_text": "Euclidean distance"}, {"url": "https://en.wikipedia.org/wiki/Kernel_(statistics)#Kernel_functions_in_common_use", "anchor_text": "tri-cubic kernel"}, {"url": "https://www.statsmodels.org/dev/generated/statsmodels.nonparametric.smoothers_lowess.lowess.html", "anchor_text": "StatsModels"}, {"url": "https://www.numpy.org/", "anchor_text": "NumPy"}, {"url": "https://github.com/joaofig/pyloess", "anchor_text": "GitHub repository"}, {"url": "http://numba.pydata.org/", "anchor_text": "Numba"}, {"url": "https://en.wikipedia.org/wiki/Loss_of_significance", "anchor_text": "loss of significance"}, {"url": "https://www.itl.nist.gov/div898/handbook/pmd/section1/dep/dep144.htm", "anchor_text": "NIST"}, {"url": "https://github.com/joaofig/pyloess", "anchor_text": "GitHub repo"}, {"url": "https://www.youtube.com/watch?v=Vf7oJ6z2LCc", "anchor_text": "YouTube"}, {"url": "https://www.linkedin.com/in/joao-paulo-figueira/", "anchor_text": "Jo\u00e3o Paulo Figueira - Data Scientist - tb.lx by Daimler Trucks & Buses | LinkedInView Jo\u00e3o Paulo Figueira's profile on LinkedIn, the world's largest professional community. Jo\u00e3o Paulo has 1 job listed\u2026www.linkedin.com"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----373d43b03564---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----373d43b03564---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-modeling?source=post_page-----373d43b03564---------------data_modeling-----------------", "anchor_text": "Data Modeling"}, {"url": "https://medium.com/tag/loes?source=post_page-----373d43b03564---------------loes-----------------", "anchor_text": "Loes"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F373d43b03564&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&user=Jo%C3%A3o+Paulo+Figueira&userId=64bc009cedeb&source=-----373d43b03564---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F373d43b03564&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&user=Jo%C3%A3o+Paulo+Figueira&userId=64bc009cedeb&source=-----373d43b03564---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F373d43b03564&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----373d43b03564--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F373d43b03564&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----373d43b03564---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----373d43b03564--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----373d43b03564--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----373d43b03564--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----373d43b03564--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----373d43b03564--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----373d43b03564--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----373d43b03564--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----373d43b03564--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@joao.figueira?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@joao.figueira?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Jo\u00e3o Paulo Figueira"}, {"url": "https://medium.com/@joao.figueira/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "491 Followers"}, {"url": "http://tblx.io", "anchor_text": "tblx.io"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F64bc009cedeb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&user=Jo%C3%A3o+Paulo+Figueira&userId=64bc009cedeb&source=post_page-64bc009cedeb--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F33fec95e18df&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Floess-373d43b03564&newsletterV3=64bc009cedeb&newsletterV3Id=33fec95e18df&user=Jo%C3%A3o+Paulo+Figueira&userId=64bc009cedeb&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}