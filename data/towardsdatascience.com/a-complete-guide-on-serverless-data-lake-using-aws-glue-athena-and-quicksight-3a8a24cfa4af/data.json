{"url": "https://towardsdatascience.com/a-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af", "time": 1683007737.340031, "path": "towardsdatascience.com/a-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af/", "webpage": {"metadata": {"title": "A Complete Guide On Serverless Data Lake Using AWS Glue, Athena and QuickSight | by Shafiqa Iqbal | Towards Data Science", "h1": "A Complete Guide On Serverless Data Lake Using AWS Glue, Athena and QuickSight", "description": "In a previous article, we created a serverless data lake for streaming data. We worked on streaming data, executed windowed functions using Kinesis Data Analytics, stored it on S3, created catalog\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/swlh/serverless-data-lake-storing-and-analysing-streaming-data-using-aws-60cf3bfe1efd", "anchor_text": "previous article", "paragraph_index": 0}, {"url": "https://d1.awsstatic.com/whitepapers/lambda-architecure-on-for-batch-aws.pdf", "anchor_text": "Lambda architecture", "paragraph_index": 2}, {"url": "https://medium.com/swlh/serverless-data-lake-storing-and-analysing-streaming-data-using-aws-60cf3bfe1efd", "anchor_text": "Serverless Data Lake: Storing and Analysing Streaming Data using AWS", "paragraph_index": 5}, {"url": "https://www.kaggle.com/currie32/crimes-in-chicago", "anchor_text": "Chicago Crimes", "paragraph_index": 5}, {"url": "https://boto3.amazonaws.com/v1/documentation/api/latest/reference/customizations/s3.html#boto3.s3.transfer.TransferConfig", "anchor_text": "boto3.s3.transfer.TransferConfig", "paragraph_index": 11}, {"url": "https://docs.aws.amazon.com/glue/latest/dg/monitor-continuations.html", "anchor_text": "Tracking Processed Data Using Job Bookmarks", "paragraph_index": 17}, {"url": "https://console.aws.amazon.com/iam/home?region=us-east-1#/policies/arn%3Aaws%3Aiam%3A%3Aaws%3Apolicy%2FAmazonS3FullAccess", "anchor_text": "AmazonS3FullAccess", "paragraph_index": 20}, {"url": "https://console.aws.amazon.com/iam/home?region=us-east-1#/policies/arn%3Aaws%3Aiam%3A%3Aaws%3Apolicy%2Fservice-role%2FAWSGlueServiceRole", "anchor_text": "AWSGlueServiceRole", "paragraph_index": 20}, {"url": "https://console.aws.amazon.com/iam/home?region=us-east-1#/policies/arn%3Aaws%3Aiam%3A%3Aaws%3Apolicy%2FCloudWatchLogsFullAccess", "anchor_text": "CloudWatchLogsFullAccess", "paragraph_index": 20}, {"url": "https://console.aws.amazon.com/iam/home?region=us-east-1#/policies/arn%3Aaws%3Aiam%3A%3Aaws%3Apolicy%2FAmazonSSMFullAccess", "anchor_text": "AmazonSSMFullAccess", "paragraph_index": 20}, {"url": "https://github.com/ShafiqaIqbal/AWS-Glue-Pyspark-ETL-Job", "anchor_text": "Here\u2019s", "paragraph_index": 26}, {"url": "https://medium.com/swlh/serverless-data-lake-storing-and-analysing-streaming-data-using-aws-60cf3bfe1efd", "anchor_text": "here", "paragraph_index": 30}, {"url": "https://github.com/ShafiqaIqbal/AWS-Athena-Queries", "anchor_text": "Uploaded the rest of the queries on my Github", "paragraph_index": 48}, {"url": "https://us-east-1.quicksight.aws.amazon.com/sn/start", "anchor_text": "Amazon QuickSight console", "paragraph_index": 49}, {"url": "https://us-east-1.quicksight.aws.amazon.com/sn/console/resources?", "anchor_text": "Amazon QuickSight account settings", "paragraph_index": 50}, {"url": "https://docs.aws.amazon.com/quicksight/latest/user/managing-permissions.html", "anchor_text": "access Athena and your S3 bucket", "paragraph_index": 50}, {"url": "https://medium.com/@shafiqa_iqbal", "anchor_text": "Shafiqa Iqbal", "paragraph_index": 62}], "all_paragraphs": ["In a previous article, we created a serverless data lake for streaming data. We worked on streaming data, executed windowed functions using Kinesis Data Analytics, stored it on S3, created catalog using AWS Glue, executed queries using AWS Athena, and finally visualized it on QuickSight.", "Now let\u2019s complete our lambda architecture by introducing Batch Ingestion", "Lambda architecture is a data-processing design pattern to handle massive quantities of data and integrate batch and real-time processing within a single framework. Lambda architecture is an approach that mixes both batch and stream (real-time) data processing and makes the combined data available for downstream analysis or viewing via a serving layer.", "In this tutorial, I will be completing our Lambda Architecture, by automating the Batch ingestion workflow.", "This article will cover the following:", "This post is the successor of my previous post: Serverless Data Lake: Storing and Analysing Streaming Data using AWS. I will be using the same Dataset Chicago Crimes. This dataset contains 6M records and weighs 2 GB. We will be placing our files in an on-prem file server. A Python Shell Glue Job will be scheduled to run daily and it will perform batch ingestion. It will handle CDC (change data capture) as well. After the initial load of files is done, we will run our ETL job for transformations and partitioned data storage. We will run our crawler once our Glue Job has finished, to register newly created partitions and schema changes. Once the catalog is updated, Athena will run queries on S3 data using Glue Catalog. We will be using a lambda function to update Quicksight Data Source. Then our charts are updated on Quicksight.", "First things first, we need a data dumping automated job that takes files from the on-prem file server\u2019s folder and dumps them on the S3 bucket. This process can be automated via Python-Shell Glue job as there are no transformations needed on data and it\u2019s simple I/O. We will be using a python-shell job which on the first run will perform full load and will dump only newly created or updated files on the consecutive runs.", "Let\u2019s dive into the code and see what\u2019s happening there. First, we are importing boto3 SDK. We will be using SSM parameter store to store our file server\u2019s credentials, bucket path, folder path and last ETL execution time. To create parameters in Parameter Store, Simply login to your AWS console, go to System Manager, create a standard parameter and save its value. I have created all the parameters separately, you can do the same or store one parameter with comma-separated values and later on split them in your code.", "Here\u2019s how to create a parameter:", "Here I\u2019m simply loading all the parameters.", "Next, we are creating a secure ssh connection with our FTP server using the given credentials and then proceed to open the SFTP connection.", "Here, we are setting TransferConfig parameters. When uploading, downloading, or copying a file or S3 object, you can store configuration settings in a boto3.s3.transfer.TransferConfig object. The object is passed to a transfer method (upload_file, download_file, etc.) in the Config= parameter. Normally default settings are well-suited to generic cases but you can change this config to handle your special cases. I\u2019m setting the following parameters:", "Next, I am iterating over files in my file-server and comparing their last-modified date with my last_etl_execution_time. Every time my job finishes successfully, it stores last_etl_execution_time in parameter store so that next time I only load files that were updated/created after last_etl_execution_time.", "An important point to note here is I am using \u2265 to compare time instead of greater which has an important reason: It\u2019s entirely possible that when we registered our last_etl_execution_time in SSM, some new files got uploaded in our file server with same modified that as our last_etl_execution_time, so we need to use \u2265 to upload those files on our S3 bucket, so that any new files also get upload, meanwhile, any repeated files will be automatically overwritten (default S3 behavior).", "Lastly, we are updating our last_etl_execution_time in SSM. Remember, the first time you execute this job, it will perform full load, so you need to set this last_etl_execution_time to a date that is far older. In my scenario, I have set it to 2000\u201301\u201301 00:00:00", "Well, that\u2019s it. So far we have completed our Python-Shell job and dumped our files on S3 bucket. Now let\u2019s move to transformation and partitioning of our data.", "Now we will be creating a Pyspark job which will take updated or new files, repartition them based on some column and save in bucket/year=<year>/month=<month>/ format with parquet format. We need a way to track processed data in our landing bucket.", "Tracking Processed Data Using Job Bookmarks", "AWS Glue tracks data that has already been processed during a previous run of an ETL job by persisting state information from the job run. This persisted state information is called a job bookmark. We will enable bookmarking for our Glue Pyspark job.", "Step 1: Create a new Pyspark job in AWS Glue console.", "Step 2: Attach an IAM role with required permissions. In my case, I attached AmazonS3FullAccess, AWSGlueServiceRole, CloudWatchLogsFullAccess, AmazonSSMFullAccess policies", "Step 3: Select A new script to be authored by you.", "Step 4: Choose Spark in Type and Python in ETL Language.", "Step 5: In Advanced Properties, enable Job Bookmarking.", "Step 6: Rest of the configurations can be left with default ones, you can change maximum capacity to 2 DPUs for a low cost while you\u2019re running and testing your Glue job.", "Here's a glimpse of my configurations", "Here\u2019s the code uploaded on Github. Do follow or give a star :)", "let\u2019s break it part by part:", "Here\u2019s the output of our Glue Pyspark Job", "Check out the output files in S3 bucket. Data is partitioned by years and months, with parquet format. Each file in each month folder contains crime data partitioned by days.", "Once your jobs are done, you need to register newly created partitions in S3 bucket. We will use a crawler for this job. If your schema never changes, you can use batch_create_partition() glue api to register new partitions. For more info on this, refer to my blog here. Here, since we need to detect any schema changes, we will be running a crawler for this job. Here are the crawler\u2019s configurations.", "Run this crawler to register partitions. We will be using this crawler in our workflow next.", "Workflows enable orchestration of your ETL workloads by building dependencies between Glue entities (triggers, crawlers and jobs). You can visually track the status of the different nodes in the workflows on the console making it easier to monitor progress and troubleshoot issues. Also, you can share parameters across entities in the workflow.", "By using workflows, you don\u2019t have to go manually set up the flow between different triggers, crawlers and Glue jobs", "So it\u2019s time! We should create a workflow. But first, we need to decide the execution flow.", "Above is our ETL execution flow. Instead of configuring Cloudwatch events and managing it ourselves, we can create a workflow, easily monitor the progress and troubleshoot errors.", "NOW LET\u2019S CREATE OUR FIRST WORKFLOW!!!", "Once you\u2019re done with the Glue Workflow, you can run your workflow.", "Important Note: Don\u2019t forget to delete your workflow after you\u2019re done with tutorial, otherwise it\u2019ll be scheduled to run on the time you set.", "Amazon Athena is an interactive query service that makes it easy to analyze data in Amazon S3 using standard SQL. Athena is capable of querying CSV data. However, the Parquet file format significantly reduces the time and cost of querying the data.", "Open the AWS Management Console for Athena and Connect your Database and Table.", "let\u2019s see what\u2019s the crime ratio per year in Chicago.", "We will be creating Views in Athena, which later will be imported by Quicksight. You simply need to add the following line in the begging of a query.", "let\u2019s check out some monthly crime ratio", "let\u2019s check what were the top 5 trending crimes in Chicago.", "We also have location data, so we can display the top 5000 location points and determine which places are the hot-crimes-areas.", "QuickSight has a limit of displaying 5000 location points within a geographic chart at max", "You can create more similar queries and analyze your data. Store them in Views and we will import them in QuickSight next.", "Uploaded the rest of the queries on my Github", "Step 1: Open the Amazon QuickSight console as mentioned [1].", "Step 2: Step 2: Set up Amazon QuickSight account settings to access Athena and your S3 bucket. You can check [1] for more info.", "Step 4: Select NEW DATASET and then choose Athena.", "Step 5: Enter your data source name and select your view.", "Step 7: Here you can select either SPICE (cache).", "Step 8: You can add a new visualization, fields and metrics.", "Here\u2019re some sample charts that I created with my Views from Athena.", "You can also create reports visualizations, like the one here. It will give you an Athena Styled Query Output look.", "You can automatically refresh SPICE Dataset by using a schedule. For Standard or Enterprise editions, you can choose Daily, Weekly, or Monthly.", "For Enterprise edition only, you can choose Hourly. This setting refreshes your data set every hour, beginning at the time you choose.", "But if you want to maintain your customized schedule for dataset refresh, you can do so by using AWS SDK Boto3. Run the code below in lambda function and schedule your lambda.", "Key takeaways from the code above:", "In this step-by-step walkthrough, we developed a serverless datalake using AWS Glue, AWS Athena and AWS QuickSight. We performed each step from ingestion and curation to visualization.", "For upcoming stories, you should follow my profile Shafiqa Iqbal.", "Do you want to see some magic when you click and hold the clap button?", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F3a8a24cfa4af&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@shafiqa_iqbal?source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@shafiqa_iqbal?source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": "Shafiqa Iqbal"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb7a71d4661e7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&user=Shafiqa+Iqbal&userId=b7a71d4661e7&source=post_page-b7a71d4661e7----3a8a24cfa4af---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3a8a24cfa4af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3a8a24cfa4af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/serverless-data-lake", "anchor_text": "Serverless Data Lake"}, {"url": "https://unsplash.com/@gioshakara?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Giorgi Shakarashvili"}, {"url": "https://unsplash.com/s/photos/data-lake?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://medium.com/swlh/serverless-data-lake-storing-and-analysing-streaming-data-using-aws-60cf3bfe1efd", "anchor_text": "previous article"}, {"url": "https://d1.awsstatic.com/whitepapers/lambda-architecure-on-for-batch-aws.pdf", "anchor_text": "Lambda architecture"}, {"url": "https://medium.com/swlh/serverless-data-lake-storing-and-analysing-streaming-data-using-aws-60cf3bfe1efd", "anchor_text": "Serverless Data Lake: Storing and Analysing Streaming Data using AWS"}, {"url": "https://www.kaggle.com/currie32/crimes-in-chicago", "anchor_text": "Chicago Crimes"}, {"url": "https://boto3.amazonaws.com/v1/documentation/api/latest/reference/customizations/s3.html#boto3.s3.transfer.TransferConfig", "anchor_text": "boto3.s3.transfer.TransferConfig"}, {"url": "https://docs.aws.amazon.com/glue/latest/dg/monitor-continuations.html", "anchor_text": "Tracking Processed Data Using Job Bookmarks"}, {"url": "https://console.aws.amazon.com/iam/home?region=us-east-1#/policies/arn%3Aaws%3Aiam%3A%3Aaws%3Apolicy%2FAmazonS3FullAccess", "anchor_text": "AmazonS3FullAccess"}, {"url": "https://console.aws.amazon.com/iam/home?region=us-east-1#/policies/arn%3Aaws%3Aiam%3A%3Aaws%3Apolicy%2Fservice-role%2FAWSGlueServiceRole", "anchor_text": "AWSGlueServiceRole"}, {"url": "https://console.aws.amazon.com/iam/home?region=us-east-1#/policies/arn%3Aaws%3Aiam%3A%3Aaws%3Apolicy%2FCloudWatchLogsFullAccess", "anchor_text": "CloudWatchLogsFullAccess"}, {"url": "https://console.aws.amazon.com/iam/home?region=us-east-1#/policies/arn%3Aaws%3Aiam%3A%3Aaws%3Apolicy%2FAmazonSSMFullAccess", "anchor_text": "AmazonSSMFullAccess"}, {"url": "https://github.com/ShafiqaIqbal/AWS-Glue-Pyspark-ETL-Job", "anchor_text": "Here\u2019s"}, {"url": "https://medium.com/swlh/serverless-data-lake-storing-and-analysing-streaming-data-using-aws-60cf3bfe1efd", "anchor_text": "here"}, {"url": "https://github.com/ShafiqaIqbal/AWS-Athena-Queries", "anchor_text": "Uploaded the rest of the queries on my Github"}, {"url": "https://us-east-1.quicksight.aws.amazon.com/sn/start", "anchor_text": "Amazon QuickSight console"}, {"url": "https://us-east-1.quicksight.aws.amazon.com/sn/console/resources?", "anchor_text": "Amazon QuickSight account settings"}, {"url": "https://docs.aws.amazon.com/quicksight/latest/user/managing-permissions.html", "anchor_text": "access Athena and your S3 bucket"}, {"url": "https://medium.com/@shafiqa_iqbal", "anchor_text": "Shafiqa Iqbal"}, {"url": "https://www.buymeacoffee.com/shafiqaiqbal", "anchor_text": ""}, {"url": "http://Get an email whenever I publish an\u00a0article", "anchor_text": "email"}, {"url": "https://medium.com/@shafiqa_iqbal/membership", "anchor_text": "member"}, {"url": "https://www.instagram.com/__shafiqaiqbal__/", "anchor_text": "instagram"}, {"url": "https://www.linkedin.com/in/shafiqa-iqbal/", "anchor_text": "Linkedin"}, {"url": "https://aws.amazon.com/blogs/big-data/create-real-time-clickstream-sessions-and-run-analytics-with-amazon-kinesis-data-analytics-aws-glue-and-amazon-athena/", "anchor_text": "https://aws.amazon.com/blogs/big-data/create-real-time-clickstream-sessions-and-run-analytics-with-amazon-kinesis-data-analytics-aws-glue-and-amazon-athena/"}, {"url": "https://medium.com/tag/data-lake?source=post_page-----3a8a24cfa4af---------------data_lake-----------------", "anchor_text": "Data Lake"}, {"url": "https://medium.com/tag/aws-glue?source=post_page-----3a8a24cfa4af---------------aws_glue-----------------", "anchor_text": "Aws Glue"}, {"url": "https://medium.com/tag/aws-athena?source=post_page-----3a8a24cfa4af---------------aws_athena-----------------", "anchor_text": "Aws Athena"}, {"url": "https://medium.com/tag/aws-quicksight?source=post_page-----3a8a24cfa4af---------------aws_quicksight-----------------", "anchor_text": "Aws Quicksight"}, {"url": "https://medium.com/tag/serverless-data-lake?source=post_page-----3a8a24cfa4af---------------serverless_data_lake-----------------", "anchor_text": "Serverless Data Lake"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3a8a24cfa4af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&user=Shafiqa+Iqbal&userId=b7a71d4661e7&source=-----3a8a24cfa4af---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3a8a24cfa4af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&user=Shafiqa+Iqbal&userId=b7a71d4661e7&source=-----3a8a24cfa4af---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3a8a24cfa4af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F3a8a24cfa4af&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----3a8a24cfa4af---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----3a8a24cfa4af--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@shafiqa_iqbal?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@shafiqa_iqbal?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Shafiqa Iqbal"}, {"url": "https://medium.com/@shafiqa_iqbal/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.97K Followers"}, {"url": "http://instagram.com/littlelazyalpaca/", "anchor_text": "instagram.com/littlelazyalpaca/"}, {"url": "https://www.linkedin.com/in/shafiqa-iqbal/:", "anchor_text": "https://www.linkedin.com/in/shafiqa-iqbal/:"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb7a71d4661e7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&user=Shafiqa+Iqbal&userId=b7a71d4661e7&source=post_page-b7a71d4661e7--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd0bad5cd3a79&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-complete-guide-on-serverless-data-lake-using-aws-glue-athena-and-quicksight-3a8a24cfa4af&newsletterV3=b7a71d4661e7&newsletterV3Id=d0bad5cd3a79&user=Shafiqa+Iqbal&userId=b7a71d4661e7&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}