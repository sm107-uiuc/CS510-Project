{"url": "https://towardsdatascience.com/three-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a", "time": 1683002424.317892, "path": "towardsdatascience.com/three-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a/", "webpage": {"metadata": {"title": "Three Ways to Build a Neural Network in PyTorch | by Andr\u00e9 Fichel Nascimento | Towards Data Science", "h1": "Three Ways to Build a Neural Network in PyTorch", "description": "TLDR; This isn\u2019t meant to be a tutorial on PyTorch nor an article that explains how a neural network works. Instead, I thought it would be a good idea to share some of the stuff I\u2019ve learned in the\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["TLDR;This isn\u2019t meant to be a tutorial on PyTorch nor an article that explains how a neural network works. Instead, I thought it would be a good idea to share some of the stuff I\u2019ve learned in the Udacity Bertelsmann Scholarship, AI Program. Having said this, the goal of this article is to illustrate a few different ways that one can create a neural network in PyTorch.", "Prerequisites: I assume you know what a neural network is and how they work\u2026so let\u2019s dive in!", "Let\u2019s say you want to define the following neural network, with one input, two hidden and one output layer with relu activations in the intermediate layers and a sigmoid activation function for the output layer, like so:", "So this is a Fully Connected 16x12x10x1 Neural Network witn relu activations in hidden layers, sigmoid activation in output layer.", "One way to approach this is by building all the blocks. This is a low level approach, but it may be suited if you\u2019re trying to reproduce the latest and greatest deep learning architecture on a paper you just just read. Or maybe if you want to develop a customized layer. Either way, PyTorch has you covered. You\u2019ll need to define your weights and biases, but if you\u2019re comfortable at that level, you\u2019re good to go. The key thing here is that you will need to tell PyTorch what is variable or optimizable in your network, so that PyTorch knows how to perform gradient descent on your network. Let\u2019s look at how someone might approach this in low level PyTorch:", "In practice, most of us will likely use predefined layers and activation functions to train our networks. There are a couple of routes to go if you\u2019re headed in this direction. A more elegant approach involves creating your own neural network python class, by extending the Model class from torch.nn. There are many advantages of defining a neural network this way and perhaps most notably, it allows one to inherit all of the functionality of the torch.nn module while allowing the flexibility of overwriting the default model construction and forward pass method. In this approach, we will define two methods:", "The first is the initializer of the class and is where you\u2019ll define the layers that will compose the network. Typically we don\u2019t need to define the activation functions here since they can be defined in the forward pass (i.e. in the forward method), but it\u2019s not a rule and you can certainly do that if you want to (we\u2019ll actually see an example at the end).", "The second method is where you define the forward pass. This method takes an input that represents the features the model will be trained on. Here, you can call the activation functions and pass in as parameters the layers you\u2019ve previously defined in the constructor method. You\u2019ll need to pass the input as an argument to the first layer and after processing the activations, that output can be fed into the next layer and so on.", "Let\u2019s take a look at how we could do this in practice:", "And this is the output from above..", "In the example above, fc stands for fully connected layer, so fc1 is represents fully connected layer 1, fc2 is the fully connected layer 2 and etc. Notice that when we print the model architecture the activation functions do not appear. The reason is we\u2019ve used the activation functions from the torch.nn.functional module. It makes the code more compact and is suited for this kind of approach.", "There is still a more compact way to define neural networks in pytorch. This is a modular approach, made possible by the torch.nn.Sequential module and is especially appealing if you come from a Keras background, where you can define sequential layers, kind of like building something from lego blocks. This is a very similar approach to Keras\u2019s sequential API and leverages the torch.nn pre-built layers and activation functions. Using this approach, our feed-forward network can be defined a follows:", "Notice that the layers are indexed and include the activation functions. We can in fact inspect a single layer and debug the model weights by simply indexing the model object.", "This is interesting, but what if you have many different kinds of layers and activation functions? Calling them by an index may seem unfeasible in this case. Luckily you can name the layers using the same structure and passing as an argument an OrderedDict from the python collections module. That way, you get the best of both worlds. In other words, you keep the order of your layers and name them, allowing simpler and direct reference to the layers.", "Now let\u2019s inspect the second layer and its weights:", "When creating neural networks in PyTorch, you choose one approach over the other but there are times when you might prefer a mixed approach. PyTorch is very flexible in this sense and you can have for example a sequential approach inside of a class based approach like this:", "Although the feed-forward neural network used as the example throughout this text is simple and may not truly depict the benefit of one approach over the other, the main idea here was to show that there are many different approaches to defining a neural network in PyTorch and hopefully you could see how the PyTorch library is powerful and at the same time very flexible.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I\u2019m a Data Scientist interested in Machine Learning, Artificial Intelligence and NLP"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F8cea49f9a61a&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@fichel?source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@fichel?source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": "Andr\u00e9 Fichel Nascimento"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F34692f301f8f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&user=Andr%C3%A9+Fichel+Nascimento&userId=34692f301f8f&source=post_page-34692f301f8f----8cea49f9a61a---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8cea49f9a61a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8cea49f9a61a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@danist07?utm_source=medium&utm_medium=referral", "anchor_text": "\u8d1d\u8389\u513f DANIST"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----8cea49f9a61a---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/pytorch?source=post_page-----8cea49f9a61a---------------pytorch-----------------", "anchor_text": "Pytorch"}, {"url": "https://medium.com/tag/ai?source=post_page-----8cea49f9a61a---------------ai-----------------", "anchor_text": "AI"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----8cea49f9a61a---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----8cea49f9a61a---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8cea49f9a61a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&user=Andr%C3%A9+Fichel+Nascimento&userId=34692f301f8f&source=-----8cea49f9a61a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8cea49f9a61a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&user=Andr%C3%A9+Fichel+Nascimento&userId=34692f301f8f&source=-----8cea49f9a61a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8cea49f9a61a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F8cea49f9a61a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----8cea49f9a61a---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----8cea49f9a61a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@fichel?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@fichel?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Andr\u00e9 Fichel Nascimento"}, {"url": "https://medium.com/@fichel/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "32 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F34692f301f8f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&user=Andr%C3%A9+Fichel+Nascimento&userId=34692f301f8f&source=post_page-34692f301f8f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F96783c65e7c7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthree-ways-to-build-a-neural-network-in-pytorch-8cea49f9a61a&newsletterV3=34692f301f8f&newsletterV3Id=96783c65e7c7&user=Andr%C3%A9+Fichel+Nascimento&userId=34692f301f8f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}