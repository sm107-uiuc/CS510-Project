{"url": "https://towardsdatascience.com/build-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8", "time": 1683012000.962181, "path": "towardsdatascience.com/build-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8/", "webpage": {"metadata": {"title": "Build a BERT-based Semantic Search System\u2026For Star Trek | by Alex C-G | Towards Data Science", "h1": "Build a BERT-based Semantic Search System\u2026For Star Trek", "description": "If you read my previous article on Towards Data Science you\u2019ll know I\u2019m a bit of a Star Trek nerd. There\u2019s only one thing I like more than Star Trek, and that\u2019s building cool new stuff with AI. So I\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/gpt-3-is-the-future-but-what-can-nlp-do-in-the-present-7aae3f21e8ed", "anchor_text": "previous article on Towards Data Science", "paragraph_index": 0}, {"url": "https://github.com/jina-ai/jina/", "anchor_text": "Jina", "paragraph_index": 1}, {"url": "https://github.com/jina-ai/jinabox.js/", "anchor_text": "Jinabox", "paragraph_index": 6}, {"url": "https://github.com/cookiecutter/cookiecutter", "anchor_text": "cookiecutter", "paragraph_index": 13}, {"url": "https://www.kaggle.com/gjbroughton/start-trek-scripts", "anchor_text": "Star Trek dataset", "paragraph_index": 21}, {"url": "https://towardsdatascience.com/what-is-neural-search-and-why-should-i-care-4a6cee6b2249", "anchor_text": "my other previous articles", "paragraph_index": 42}, {"url": "https://docs.jina.ai/chapters/flow/index.html", "anchor_text": "without specifying them in YAML", "paragraph_index": 46}, {"url": "https://memory-alpha.fandom.com/wiki/Great_bird_of_the_galaxy", "anchor_text": "Great Bird of the Galaxy", "paragraph_index": 52}, {"url": "https://github.com/jina-ai/jina/tree/master/docs/chapters/101", "anchor_text": "Jina 101", "paragraph_index": 64}, {"url": "https://linuxize.com/post/how-to-add-swap-space-on-ubuntu-20-04/", "anchor_text": "creating a swap file", "paragraph_index": 67}, {"url": "https://askubuntu.com/questions/199565/not-enough-space-on-tmp", "anchor_text": "increase its size", "paragraph_index": 68}, {"url": "https://github.com/jina-ai/examples", "anchor_text": "example tutorials", "paragraph_index": 70}, {"url": "http://www.twitter.com/alexcg", "anchor_text": "Alex C-G", "paragraph_index": 72}, {"url": "https://github.com/jina-ai/jina/", "anchor_text": "Jina AI", "paragraph_index": 72}, {"url": "http://Jina.AI", "anchor_text": "Jina.AI", "paragraph_index": 74}, {"url": "https://github.com/jina-ai/", "anchor_text": "https://github.com/jina-ai/", "paragraph_index": 74}], "all_paragraphs": ["If you read my previous article on Towards Data Science you\u2019ll know I\u2019m a bit of a Star Trek nerd. There\u2019s only one thing I like more than Star Trek, and that\u2019s building cool new stuff with AI. So I thought I\u2019d combine the two yet again!", "In this tutorial we\u2019re going to build our own search engine to search all the lines from Star Trek: The Next Generation. We\u2019ll be using Jina, a neural search framework which uses deep learning to power our NLP search, though we could easily use it for image, audio or video search if we wanted to.", "If you\u2019re new to AI or search, don\u2019t worry. As long as you have some knowledge of Python and the command line you\u2019ll be fine. If it helps, think of yourself as Lieutenant Commander Data Science.", "Before going through the trouble of downloading, configuring and testing your search engine, let\u2019s get an idea of the finished product. In this case, it\u2019s exactly the same as what we\u2019re building, but with lines from South Park instead of Star Trek:", "Jina has a pre-built Docker image with indexed data from South Park. You can run it with:", "After getting Docker up and running, you can start searching for those South Park lines.", "Jinabox is a simple web-based front-end for neural search. You can see it in the graphic at the top of this tutorial.", "Note: If it times out the first time, that\u2019s because the query system is still warming up. Try again in a few seconds!", "Alternatively, you can open your shell and check the results via the RESTful API. The matched results are stored in topkResults.", "You\u2019ll see the results output in JSON format. Each result looks like:", "Now go back to your terminal running Docker and hit Ctrl-C (or Command-C on Mac) a few times to ensure you've stopped everything.", "Now that you know what we\u2019re building, let\u2019s get started!", "Let\u2019s get the basic files we need to get moving:", "We use cookiecutter to spin up a basic Jina app and save you having to do a lot of typing and setup.", "For our Star Trek example, use the following settings:", "Just use the defaults for all other fields. After cookiecutter has finished, let\u2019s have a look at the files it created:", "You should see a bunch of files:", "In the flows/ folder we can see index.yml and query.yml - these define the indexing and querying Flows for your app.", "In pods/ we see chunk.yml, craft.yml, doc.yml, and encode.yml - these Pods are called from the Flows to process data for indexing or querying.", "More on Flows and Pods later!", "In your terminal run this command to download and install all the required Python packages:", "Our goal is to find out who said what in Star Trek episodes when a user queries a phrase. The Star Trek dataset from Kaggle contains all the scripts and individual character lines from Star Trek: The Original Series all the way through Star Trek: Enterprise.", "We\u2019re just using a subset in this example, containing the characters and lines from Star Trek: The Next Generation. This has also been converted from JSON to CSV format, which is more suitable for Jina to process.", "Now let\u2019s ensure we\u2019re back in our base folder and download the dataset by running:", "Once that\u2019s finished downloading, let\u2019s get back into the star_trek directory and make sure our dataset has everything we want:", "You should see output consisting of characters (like MCCOY), a separator, (!), and the lines spoken by the character ( What about my age?):", "Note: Your character lines may be a little different. That\u2019s okay!", "Now we we need to pass startrek_tng.csv into app.py so we can index it. app.py is a little too simple out of the box, so let's make some changes:", "Open app.py in your editor and check the index function, we currently have:", "As you can see, this indexes just 3 strings. Let\u2019s load up our Star Trek file instead with the filepath parameter. Just replace the last line of the function:", "While we\u2019re here, let\u2019s reduce the number of documents we\u2019re indexing, just to speed things up while we\u2019re testing. We don\u2019t want to spend ages indexing only to have issues later on!", "In the section above the config function, let's change:", "That should speed up our testing by a factor of 100! Once we\u2019ve verified everything works we can set it back to 50000 to index more of our dataset.", "Now that we\u2019ve got the code to load our data, we\u2019re going to dive into writing our app and running our Flows! Flows are the different tasks our app performs, like indexing or searching the data.", "First up we need to build up an index of our file. We\u2019ll search through this index when we use the query Flow later.", "Your app will show a lot of output in the terminal, but you\u2019ll know it\u2019s finished when you see the line:", "This may take a little while the first time, since Jina needs to download the language model and tokenizer to process the data. You can think of these as the brains behind the neural network that powers the search.", "After a while you should see the terminal stop scrolling and display output like:", "\u26a0\ufe0f Be sure to note down the port number. We\u2019ll need it for curl and jinabox! In our case we'll assume it's 65481, and we use that in the below examples. If your port number is different, be sure to use that instead.", "\u2139\ufe0f python app.py search doesn't pop up a search interface - for that you'll need to connect via curl, Jinabox, or another client.", "curl will spit out a lot of information in JSON format - not just the lines you're searching for, but all sorts of metadata about the search and the lines it returns. Look for the lines starting with \"matchDoc\" to find the matches, like:", "Congratulations! You\u2019ve just built your very own search engine!", "For a more general overview of what neural search is and how it works, check one of my other previous articles. Jina itself is just one way to build a neural search engine, and it has a couple of important concepts: Flows and Pods:", "Just as a plant manages nutrient flow and growth rate for its branches, a Flow manages the states and context of a group of Pods, orchestrating them to accomplish one task. Whether a Pod is remote or running in Docker, one Flow rules them all!", "We define Flows in app.py to index and query the content in our Star Trek dataset.", "In this case our Flows are written in YAML format and loaded into app.py with:", "It really is that simple! Alternatively you can build Flows in app.py itself without specifying them in YAML.", "No matter whether you\u2019re dealing with text, graphics, sound, or video, all datasets need to be indexed and queried, and the steps for doing each (chunking, vector encoding) are more or less the same (even if how you perform each step is different \u2014 that\u2019s where Pods come in!)", "Every Flow has well, a flow to it. Different Pods pass data along the Flow, with one Pod\u2019s output becoming another Pod\u2019s input. Look at our indexing Flow as an example:", "If you look at startrek_tng.csv you'll see it's just one big text file. Our Flow processes it into something more suitable for Jina, which is handled by the Pods in the Flow. Each Pod performs a different task.", "You can see the following Pods in flows/index.yml:", "The full file is essentially just a list of Pods with parameters and some setup at the top of the file:", "Luckily, YAML is pretty human-readable. I regularly thank the Great Bird of the Galaxy it\u2019s not in Klingon, or even worse, XML!", "So, is that all of the Pods? Not quite! We always have another Pod working in silence \u2014 the gateway pod. Most of the time we can safely ignore it because it basically does all the dirty orchestration work for the Flow.", "In the query Flow we\u2019ve got the following Pods:", "Again, flows/query.yml gives some setup options and lists the Pods in order of use:", "When we were indexing we broke the Document into Chunks to index it. For querying we do the same, but this time the Document is the query the user types in, not the Star Trek dataset. We\u2019ll use many of the same Pods, but there are a few differences to bear in mind. In the big picture:", "And digging into the flows/query.yml, we can see it has an extra Pod and some more parameters compared to flows/index.yml:", "How does Jina know whether it should be indexing or searching? In our RESTful API we set the mode field in the JSON body and send the request to the corresponding API:", "As we discussed above, a Flow tells Jina what task to perform and is comprised of Pods. And a Pod tells Jina how to perform that task (i.e. what the right tool for job is). Both Pods and Flows are written in YAML.", "Let\u2019s start by looking at a Pod in our indexing Flow, flows/index.yml. Instead of the first Pod crafter, let's look at encoder which is a bit simpler:", "As we can see in the code above, the encoder Pod\u2019s YAML file is stored in pods/encode.yml, and looks like:", "The Pods uses the built-in TransformerTorchEncoder as its Executor. Each Pod has a different Executor based on its task, and an Executor represents an algorithm, in this case encoding. The Executor differs based on what's being encoded. For video or audio you'd use a different one. The with field specifies the parameters passed to TransformerTorchEncoder.", "When the Pod runs, data is passed in from the previous Pod, TransformerTorchEncoder encodes the data, and the Pod passes the data to the next Pod in the Flow.", "For a deeper dive on Pods, Flows, Executors and everything else, you can refer to Jina 101.", "Be sure to run pip install -r requirements.txt before beginning, and ensure you have lots of RAM/swap and space in your tmp partition (see below issues). This may take a while since there are a lot of prerequisites to install.", "If this error keeps popping up, look into the errors that were output onto the terminal to try to find which module is missing, and then run:", "Machine learning requires a lot of resources, and if your machine hangs this is often due to running out of memory. To fix this, try creating a swap file if you use Linux. This isn\u2019t such an issue on macOS, since it allocates swap automatically.", "This is often due to your /tmp partition running out of space so you'll need to increase its size.", "For this error you\u2019ll need to install the relevant software package onto your system. In Ubuntu this can be done with:", "Now that you have a broad understanding of how things work, you can try out some of more example tutorials to build image or video search, or stay tuned for our next set of tutorials that build upon your Star Trek app.", "Got an idea for a tutorial covering Star Trek and/or neural search? My commbadge is out of order right now, but you can leave a comment or note on this article for me to assimilate!", "Alex C-G is the Open Source Evangelist at Jina AI, and a massive Star Trek geek.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Developer Experience Lead at Jina.AI (https://github.com/jina-ai/), trekkie, and maker of things."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F7d7d28414cd8&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@alexcg1?source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@alexcg1?source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": "Alex C-G"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F218fd2fbdd9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&user=Alex+C-G&userId=218fd2fbdd9&source=post_page-218fd2fbdd9----7d7d28414cd8---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7d7d28414cd8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7d7d28414cd8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://commons.wikimedia.org/wiki/File:U.S.S._Enterprise_NCC_1701-D.jpg", "anchor_text": "Wikimedia Commons"}, {"url": "https://towardsdatascience.com/gpt-3-is-the-future-but-what-can-nlp-do-in-the-present-7aae3f21e8ed", "anchor_text": "previous article on Towards Data Science"}, {"url": "https://github.com/jina-ai/jina/", "anchor_text": "Jina"}, {"url": "https://giphy.com/gifs/reaction-229P3dnAW8RzceKbps", "anchor_text": "Giphy"}, {"url": "https://github.com/jina-ai/jinabox.js/", "anchor_text": "Jinabox"}, {"url": "https://github.com/jina-ai/jinabox.js/", "anchor_text": "Jinabox"}, {"url": "https://jina.ai/jinabox.js", "anchor_text": "jinabox"}, {"url": "http://localhost:45678/api/search", "anchor_text": "http://localhost:45678/api/search"}, {"url": "https://giphy.com/gifs/sesame-street-cookies-cookie-monster-HGe4zsOVo7Jvy", "anchor_text": "Giphy"}, {"url": "https://github.com/cookiecutter/cookiecutter", "anchor_text": "cookiecutter"}, {"url": "https://www.kaggle.com/gjbroughton/start-trek-scripts", "anchor_text": "Star Trek dataset"}, {"url": "https://github.com/jina-ai/jinabox.js/", "anchor_text": "Jinabox"}, {"url": "https://jina.ai/jinabox.js", "anchor_text": "jinabox"}, {"url": "http://localhost:65481/api/search", "anchor_text": "http://localhost:65481/api/search"}, {"url": "https://towardsdatascience.com/what-is-neural-search-and-why-should-i-care-4a6cee6b2249", "anchor_text": "my other previous articles"}, {"url": "https://github.com/jina-ai/jina/tree/master/docs/chapters/101", "anchor_text": "Jina 101"}, {"url": "https://docs.jina.ai/chapters/flow/index.html", "anchor_text": "without specifying them in YAML"}, {"url": "https://github.com/jina-ai/dashboard", "anchor_text": "Jina Dashboard"}, {"url": "https://memory-alpha.fandom.com/wiki/Great_bird_of_the_galaxy", "anchor_text": "Great Bird of the Galaxy"}, {"url": "https://github.com/jina-ai/dashboard", "anchor_text": "Jina Dashboard"}, {"url": "https://github.com/jina-ai/jina/tree/master/docs/chapters/101", "anchor_text": "Jina 101"}, {"url": "https://github.com/jina-ai/jina/tree/master/docs/chapters/101", "anchor_text": "Jina 101"}, {"url": "https://giphy.com/gifs/star-trek-riker-tng-tYelSVzQPtLdm", "anchor_text": "Giphy"}, {"url": "https://linuxize.com/post/how-to-add-swap-space-on-ubuntu-20-04/", "anchor_text": "creating a swap file"}, {"url": "https://askubuntu.com/questions/199565/not-enough-space-on-tmp", "anchor_text": "increase its size"}, {"url": "https://giphy.com/gifs/star-trek-booze-scotty-3ornjJpj2rAla2DLCE", "anchor_text": "Giphy"}, {"url": "https://github.com/jina-ai/examples", "anchor_text": "example tutorials"}, {"url": "http://www.twitter.com/alexcg", "anchor_text": "Alex C-G"}, {"url": "https://github.com/jina-ai/jina/", "anchor_text": "Jina AI"}, {"url": "https://medium.com/tag/data-science?source=post_page-----7d7d28414cd8---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----7d7d28414cd8---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----7d7d28414cd8---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/programming?source=post_page-----7d7d28414cd8---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/technology?source=post_page-----7d7d28414cd8---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7d7d28414cd8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&user=Alex+C-G&userId=218fd2fbdd9&source=-----7d7d28414cd8---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7d7d28414cd8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&user=Alex+C-G&userId=218fd2fbdd9&source=-----7d7d28414cd8---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7d7d28414cd8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F7d7d28414cd8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----7d7d28414cd8---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----7d7d28414cd8--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@alexcg1?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@alexcg1?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Alex C-G"}, {"url": "https://medium.com/@alexcg1/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "497 Followers"}, {"url": "http://Jina.AI", "anchor_text": "Jina.AI"}, {"url": "https://github.com/jina-ai/", "anchor_text": "https://github.com/jina-ai/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F218fd2fbdd9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&user=Alex+C-G&userId=218fd2fbdd9&source=post_page-218fd2fbdd9--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F61f49c83b86f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-bert-based-semantic-search-system-for-star-trek-7d7d28414cd8&newsletterV3=218fd2fbdd9&newsletterV3Id=61f49c83b86f&user=Alex+C-G&userId=218fd2fbdd9&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}