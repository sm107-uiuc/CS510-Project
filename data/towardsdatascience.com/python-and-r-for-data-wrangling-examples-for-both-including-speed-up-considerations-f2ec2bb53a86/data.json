{"url": "https://towardsdatascience.com/python-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86", "time": 1682997657.679929, "path": "towardsdatascience.com/python-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86/", "webpage": {"metadata": {"title": "Python And R for Data Wrangling: Compare Pandas and Tidyverse Code Side-By-Side, and Learn Speed-Up Tips. | by Theophano Mitsa | Towards Data Science", "h1": "Python And R for Data Wrangling: Compare Pandas and Tidyverse Code Side-By-Side, and Learn Speed-Up Tips.", "description": "A couple of years back, you would write your data analysis program, exclusively in one of these two languages: Python or R. Both languages offer great functionality from data exploration to modeling\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/from-r-vs-python-to-r-and-python-aa25db33ce17", "anchor_text": "hings have changed", "paragraph_index": 0}, {"url": "https://github.com/theomitsa/bilingual-R-Markdown/blob/master/biling.rmd", "anchor_text": "find on github.", "paragraph_index": 2}, {"url": "https://drive.google.com/file/d/1k6ASkLWCQoDCWTvHTuLYz-Vo1eCcerAB/view?usp=sharing", "anchor_text": "download a knitted version", "paragraph_index": 3}, {"url": "https://www.kaggle.com/sonumj/heart-disease-dataset-from-uci", "anchor_text": "heart.csv", "paragraph_index": 13}, {"url": "https://github.com/theomitsa/bilingual-R-Markdown/blob/master/arrayoperations", "anchor_text": "another bilingual R Markdown file,", "paragraph_index": 38}, {"url": "https://drive.google.com/file/d/1ID1RbER17OueZufjoKXZyO7ZzHDCYKB2/view?usp=sharing", "anchor_text": "download its knitted version", "paragraph_index": 38}], "all_paragraphs": ["A couple of years back, you would write your data analysis program, exclusively in one of these two languages: Python or R. Both languages offer great functionality from data exploration to modeling and have very loyal fans. However, things have changed [1]. These days, there are libraries, such as reticulate and PypeR, that allow you to incorporate Python code in R Markdown and R code in a Jupyter notebook respectively. Knowing basic functionality, such as data wrangling, in both languages, expands your programming horizons, allows you to work with people of either language and create bilingual notebooks, leveraging the best of each language. In this article, we will discuss data wrangling in Python and R, using the pandas and tidyverse libraries respectively, and tips to speed up your code. After you read the article, it will become obvious that Python and R, are quite similar in many of their expressions, at least in the area of data wrangling. So, with a little extra effort, you can master data wrangling in both languages, and become a \u201csuperR-Pythonista\u201d!", "Be a supeR-Pythonista (instead of just a Pythonista!)", "This article is accompanied by an R Markdown file, which you can find on github. In this file, data wrangling operations are implemented twice: in Python and R cells, adjacent to each other. This is facilitated by importing the reticulate library. The Python and R cells work independently currently; in my next article, I will show the passing of arguments between the Python and R cells and inter-language communication.", "The R Markdown file can also serve as two independent cheatsheets for Python and R data wrangling operations. You can also download a knitted version of the R Markdown file. The data wrangling for both languages is performed on similar structures: The R Data Frame, and the Python DataFrame. The specific implemented operations are:", "C. Select rows, columns, elements using indices, names, logical conditions, regular expressions. The filter() functions in Python and R will be presented.", "D. Delete-add rows, columns. We will discuss the mutate() function in R and map in Python.", "E. Apply a function to rows/columns, including lambda functions in Python.", "F. Speed-up code. We will discuss techniques, such as parallelization, and function compilation for code speed-up.", "In the aforementioned R Markdown file, the Python code is enclosed in the following brackets, which define a Python cell:", "while the R code is enclosed in these brackets:", "These brackets are automatically generated by RStudio, by clicking on the Insert tab and selecting the language you want.", "Programming tip: Before executing any Python cells in the R Markdown, execute the shell that imports the reticulate library. Note that in the same cell, we instruct RStudio, which Python to use. Also, it is a good idea to configure Python in the RStudio console, using the command py_config().", "It is important to note that in both languages, there are multiple ways to perform operations, many of which are presented in the aforementioned R Markdown file. Due to space constraints, in this article, we will only present a portion of them. Let us get started:", "As we see in the gist below, in both languages, we call a function that reads the csv file. In Python, this function is called through the pandas library. The heart.csv file is from Kaggle and the UCI repository.", "Notable in the Python code below, is the use of a lambda function (an anonymous inline function) to exclude from reading the columns defined in the drop_col list.", "Programming tip: It is a good idea to define the encoding for the read.csv() function in R, as shown below, to ensure proper reading of all column names. When I did not use the encoding, the name of the first column was read incorrectly. I had no need to define the encoding in Python.", "As we see below, in both languages, a Data Frame can be created from a lower order structure, matrix and array for Python and R respectively.", "In the R section, The DepositFrame Data Frame contains the bank deposits (in thousands) of 3 persons. The bank deposits are generated using the rnorm() function that generates 6 random numbers, with mean 12 and standard deviation 3.", "Programming tip: As you note in the R code below, we import the tidyverse library, which is a library that contains many packages, such as dplyr. The functions we need in the segment of our R code are defined only in the dplyr library. So why import tidyverse, instead of what we just need, which is dplyr? One reason is future extensibility (we might need to use functions from the other packages in tidyverse). The other reason is that when we import library(dplyr), we get a warning that its important function filter() is masked by another library. If we import library(tidyverse), we do not have this problem.", "Here we will examine two types of summarization: (a) Functions that summarize basic information about the Data Frame. (b) Functions that allow grouping and tailored insights in slices of the data.", "Functions That Describe General Info About the Data Frame", "In the following gist, in the R section, the head() function shows the first few rows (observations) of the Data Frame. The glimpse() function displays the number of observations, and variables (columns) along with the type, name, and values of the latter. Similar information to the glimpse() function is displayed by the str() function. A more useful function is the describe() function from the prettyR package, which displays basic statistics and number of valid cases for each variable. Variable statistical information is also displayed by the summary() function. Similarly to R, in the Python section, the head() function shows the first rows, while the describe() function displays basic statistics for each column, such as mean, min, and max.", "Both R and Python have functions for grouping based on a variable or a set of variables. As shown in the gist below, in R, we can use function tapply() from base R, to compute the mean cholesterol of men and women separately. Alternatively, we can use function group_by() followed by summarization functions such as count(), mean(), or summarize_all() . Similarly, as shown below, in Python, group summarization is performed by the function groupby() followed by summarization functions such as count().", "An additional example for grouping, summarizing in R:", "An additional example for grouping, summarizing in Python:", "Index-Based Selection of Rows, Columns, Elements", "An important note here is that indices in R start at 1, while in Python at 0. In Python, we use the iloc indexer to access integer locations.", "Both Python and R offer apply() functions that allow us to implement a function on rows or columns, depending on an extra argument. For example below, in R, if the middle argument is 2, the function is applied to columns, while if it is 1, it is applied to rows. In Python, the determining argument of the apply() function is axis (0, it is applied to columns, 1, to rows). Another interesting tidbit below is the use of a lambda function to multiply by 5 all elements.", "Here, we will briefly discuss three options for speeding up code in R: data.table, parallelization, and function compilation. For Python, the speed-up option that will be presented is modin.", "Data.table is an extension of Data Frame [2], and its advantages are two-fold:", "(a) For large files, much faster loading of data, than Data Frame. An example is shown in the gist below. I read a large file (66.9MB), using function read.csv(), which returns a Data Frame, and fread(), which returns a data.table. The difference is quite significant (e.g., user+system time, for data.table is approximately 30 times faster!). The reference for the data file I used is [3] in the references section.", "(b) Concise, compact filtering expressions, which also execute quite fast. An example of filtering with data.table and comparison with dplyr filtering is shown in the gist below. In this gist, we compute the mean age of men with cholesterol > 280 using filter() of library dplyr. We also compute it with data.table, which is done in one concise line of code.", "In R, parallelization is implemented using the parallel library [4], which allows our R program to utilize all cores in our computer. We can use the function detectCores() to find out how many cores we have and then we can use function makeCluster() to create a cluster with these cores. This is shown in the gist below. Then we can use, the parallel version of the apply() family of functions to perform various operations. For example, in the gist below, the sapply() function and its parallel version parSapply() are used to square a large set of numbers. We can see that the user+system time for parSapply() is 7.95+0.66=8.61 while for plain apply() is 11.80+0.03=11.83.", "An alternative way to speed up operations in R is to compile functions. This is achieved through the compiler library and its cmpfun() function [5]. The gist below shows this, as well as a comparison of parallelization, compilation, in terms of time consumed. We see that the fastest user+system time (7.73) is achieved when we combine parallelization and compilation. On their own, implementing only parallelization yields a faster user+system time (8.61) , than implementing only function compilation (8.87).", "To conclude our discussion on speeding R, it is worth mentioning the library gpuR [6] . Using the ViennaCL library, gpuR allows computation in parallel on any GPU, in contrast to previous R packages that depended on NVIDIA CUDA on the backend.", "As described in [7], modin is a Dataframe library that has the exact same API as pandas and allows significant speed-up of workflows (4-times faster on an 8 core machine). To use it, we only need to change one line of code. Instead of:", "import pandas as pd we will use:", "One word of caution. modin is built on top of Ray, so ensure that you have the right version of Ray.", "An additional freebie you can find in my github repository is another bilingual R Markdown file, that implements array creation (1-D and 2-D) and math functions using arrays (dot product, eigenvalues, etc.) in both Python and R. You can also download its knitted version.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I am a data scientist, ECE Ph.D. My interests are in AI, machine learning, and evidence-based medicine."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff2ec2bb53a86&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://theomitsa.medium.com/?source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": ""}, {"url": "https://theomitsa.medium.com/?source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": "Theophano Mitsa"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7709c007f0ca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&user=Theophano+Mitsa&userId=7709c007f0ca&source=post_page-7709c007f0ca----f2ec2bb53a86---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff2ec2bb53a86&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff2ec2bb53a86&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/from-r-vs-python-to-r-and-python-aa25db33ce17", "anchor_text": "hings have changed"}, {"url": "https://github.com/theomitsa/bilingual-R-Markdown/blob/master/biling.rmd", "anchor_text": "find on github."}, {"url": "https://drive.google.com/file/d/1k6ASkLWCQoDCWTvHTuLYz-Vo1eCcerAB/view?usp=sharing", "anchor_text": "download a knitted version"}, {"url": "https://www.kaggle.com/sonumj/heart-disease-dataset-from-uci", "anchor_text": "heart.csv"}, {"url": "https://github.com/theomitsa/bilingual-R-Markdown/blob/master/arrayoperations", "anchor_text": "another bilingual R Markdown file,"}, {"url": "https://drive.google.com/file/d/1ID1RbER17OueZufjoKXZyO7ZzHDCYKB2/view?usp=sharing", "anchor_text": "download its knitted version"}, {"url": "https://towardsdatascience.com/from-r-vs-python-to-r-and-python-aa25db33ce17", "anchor_text": "https://towardsdatascience.com/from-r-vs-python-to-r-and-python-aa25db33ce17"}, {"url": "https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html", "anchor_text": "https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html"}, {"url": "https://doi.org/10.7910/DVN/26147/OCLJIV", "anchor_text": "https://doi.org/10.7910/DVN/26147/OCLJIV"}, {"url": "https://www.r-bloggers.com/running-r-code-in-parallel/", "anchor_text": "https://www.r-bloggers.com/running-r-code-in-parallel/"}, {"url": "https://www.r-bloggers.com/faster-higher-stonger-a-guide-to-speeding-up-r-code-for-busy-people/", "anchor_text": "https://www.r-bloggers.com/faster-higher-stonger-a-guide-to-speeding-up-r-code-for-busy-people/"}, {"url": "https://cran.r-project.org/web/packages/gpuR/gpuR.pdf", "anchor_text": "https://cran.r-project.org/web/packages/gpuR/gpuR.pdf"}, {"url": "https://towardsdatascience.com/get-faster-pandas-with-modin-even-on-your-laptops-b527a2eeda74", "anchor_text": "https://towardsdatascience.com/get-faster-pandas-with-modin-even-on-your-laptops-b527a2eeda74"}, {"url": "https://medium.com/tag/data-science?source=post_page-----f2ec2bb53a86---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----f2ec2bb53a86---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----f2ec2bb53a86---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff2ec2bb53a86&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&user=Theophano+Mitsa&userId=7709c007f0ca&source=-----f2ec2bb53a86---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff2ec2bb53a86&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&user=Theophano+Mitsa&userId=7709c007f0ca&source=-----f2ec2bb53a86---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff2ec2bb53a86&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff2ec2bb53a86&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f2ec2bb53a86---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f2ec2bb53a86--------------------------------", "anchor_text": ""}, {"url": "https://theomitsa.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://theomitsa.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Theophano Mitsa"}, {"url": "https://theomitsa.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "904 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7709c007f0ca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&user=Theophano+Mitsa&userId=7709c007f0ca&source=post_page-7709c007f0ca--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ffc89d1445601&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-and-r-for-data-wrangling-examples-for-both-including-speed-up-considerations-f2ec2bb53a86&newsletterV3=7709c007f0ca&newsletterV3Id=fc89d1445601&user=Theophano+Mitsa&userId=7709c007f0ca&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}