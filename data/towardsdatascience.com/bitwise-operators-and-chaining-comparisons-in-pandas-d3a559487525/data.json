{"url": "https://towardsdatascience.com/bitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525", "time": 1683016403.846452, "path": "towardsdatascience.com/bitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525/", "webpage": {"metadata": {"title": "Bitwise operators and chaining comparisons in Pandas | by Alexandre Escol\u00e0 Nixon | Towards Data Science", "h1": "Bitwise operators and chaining comparisons in Pandas", "description": "When learning Pandas, it is natural to have a tendency to use Python\u2019s boolean operators ( and , or etc.) to chain conditions, since that is how it is done in Python. However, these are not the\u2026"}, "outgoing_paragraph_urls": [{"url": "https://docs.python.org/3/library/stdtypes.html#truth-value-testing", "anchor_text": "truthy/falsy", "paragraph_index": 3}, {"url": "https://wiki.python.org/moin/BitwiseOperators", "anchor_text": "python\u2019s bitwise operators", "paragraph_index": 9}, {"url": "https://wiki.python.org/moin/BitwiseOperators", "anchor_text": "here", "paragraph_index": 13}, {"url": "https://docs.python.org/3/reference/expressions.html#operator-precedence", "anchor_text": "Operator Precedence", "paragraph_index": 16}, {"url": "https://www.python.org/dev/peps/pep-0535/", "anchor_text": "PEP 535", "paragraph_index": 24}], "all_paragraphs": ["When learning Pandas, it is natural to have a tendency to use Python\u2019s boolean operators ( and , or etc.) to chain conditions, since that is how it is done in Python. However, these are not the operators we should be using in Pandas (or NumPy). Let me explain why\u2026", "In Python, chaining comparisons is straight forward:", "Here we\u2019re just checking if x is equal to 4 and that it is an even number. And in the same way, we can chain multiple conditions together as:", "This works because we are comparing boolean values (True or False), or truthy/falsy values (values which are evaluated to True or False), which produce, for the above example, an expression as True and True and True.", "However, a common mistake is to think that the same will work with arrays of boolean values, as a result from applying some comparison. For instance:", "As you can see, the above yields a ValueError. What has changed in this case? The difference is that we are no longer comparing boolean values, since x%2==0 yields:", "Which will clearly neither be True nor False. Python is telling us through the error that we need to apply an aggregation function to the result to disambiguate, a.any() or a.all() . Doing so will reduce the array to a single value:", "Which can now be compared with another boolean value.", "When we\u2019re working with an array or a Pandas DataFrame column and want to filter based on more than one comparison, we\u2019ll need to compute element-wise operations, in this case, logical element-wise operations.", "We\u2019ve discussed how python\u2019s boolean operators are not what we want, since they require that the terms being compared can be evaluated as True or False. For logical element-wise operations we should instead be using python\u2019s bitwise operators <<, >>, &, |, ~, and ^.", "You can think of python\u2019s bitwise operators as a boolean operator, but applied on an element-wise basis (on boolean arrays):", "So here we\u2019ve applied a bitwise AND (&) between the two resulting boolean vectors, which produces another array of the same shape resulting from the element-wise operation applied over its elements.", "Python has a bitwise operator equivalent for all boolean operators, as well as other operators which are listed bellow:", "And we also have the bitwise shift operators >> and << (see here).", "Going back to the above example, an important aspect to take into account is that with bitwise operators parenthesis are important!", "This is because bitwise operators have a higher precedence than comparison operators, meaning that the bitwise operation will precede that of the comparison.", "In the Expressions section of the Python documentation, under Operator Precedence, we\u2019ll find a table containing the precedence of all Python operators, from lowest precedence (least binding) to highest precedence (most binding):", "To more clearly understand the above, say we have an expression with a multiplication operator (*) and an exponentiation operator (**):", "Since the exponentiation operator has a higher precedence (see how it appears in a lower position in the table), python will first evaluate 2**2 , which is 4 and then 3*4=12. If we wanted to give the multiplication a higher precedence, we\u2019d have to parenthesise the expression as:", "Just how we\u2019d write the mathematical expression too in this case.", "Now the same applies to bitwise operators. Since == has a lower precedence than & , we\u2019d need to parenthesise the comparison expressions so that they are evaluated first:", "Another common mistake, is to try to chain operators as:", "This is not supported by NumPy (or Pandas), and yields a ValueError. The problem here, is that Python is internally translating the above to:", "Which again, takes us to the same error as in the example above: and is implicitly calling bool, and NumPy only permits implicit coercion to a boolean value for single elements (not arrays with size>1), since a boolean array with many values does not evaluate neither to True or False.", "It was actually proposed to make this possible in PEP 535, though it still remains deferred.", "In an upcoming post, I\u2019ll discuss more advanced comparison operations in Pandas and review some useful tips to keep in mind.", "Thanks a lot for taking the time to read this post and I hope you enjoyed it :)", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Personal interests \u2014 mainly photography and AI"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd3a559487525&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d3a559487525--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d3a559487525--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://alexandr-nixon.medium.com/?source=post_page-----d3a559487525--------------------------------", "anchor_text": ""}, {"url": "https://alexandr-nixon.medium.com/?source=post_page-----d3a559487525--------------------------------", "anchor_text": "Alexandre Escol\u00e0 Nixon"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6f77c7bf8755&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&user=Alexandre+Escol%C3%A0+Nixon&userId=6f77c7bf8755&source=post_page-6f77c7bf8755----d3a559487525---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd3a559487525&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd3a559487525&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/photos/xrVDYZRGdw4", "anchor_text": "Unsplash"}, {"url": "https://docs.python.org/3/library/stdtypes.html#truth-value-testing", "anchor_text": "truthy/falsy"}, {"url": "https://wiki.python.org/moin/BitwiseOperators", "anchor_text": "python\u2019s bitwise operators"}, {"url": "https://wiki.python.org/moin/BitwiseOperators", "anchor_text": "here"}, {"url": "https://docs.python.org/3/reference/expressions.html#operator-precedence", "anchor_text": "Operator Precedence"}, {"url": "https://docs.python.org/3/reference/expressions.html#operator-precedence", "anchor_text": "python docs"}, {"url": "https://www.python.org/dev/peps/pep-0535/", "anchor_text": "PEP 535"}, {"url": "https://medium.com/tag/python?source=post_page-----d3a559487525---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/pandas?source=post_page-----d3a559487525---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/numpy?source=post_page-----d3a559487525---------------numpy-----------------", "anchor_text": "Numpy"}, {"url": "https://medium.com/tag/programming?source=post_page-----d3a559487525---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d3a559487525---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd3a559487525&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&user=Alexandre+Escol%C3%A0+Nixon&userId=6f77c7bf8755&source=-----d3a559487525---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd3a559487525&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&user=Alexandre+Escol%C3%A0+Nixon&userId=6f77c7bf8755&source=-----d3a559487525---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd3a559487525&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d3a559487525--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd3a559487525&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d3a559487525---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d3a559487525--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d3a559487525--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d3a559487525--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d3a559487525--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d3a559487525--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d3a559487525--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d3a559487525--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d3a559487525--------------------------------", "anchor_text": ""}, {"url": "https://alexandr-nixon.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://alexandr-nixon.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Alexandre Escol\u00e0 Nixon"}, {"url": "https://alexandr-nixon.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "115 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6f77c7bf8755&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&user=Alexandre+Escol%C3%A0+Nixon&userId=6f77c7bf8755&source=post_page-6f77c7bf8755--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F61596630de2c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbitwise-operators-and-chaining-comparisons-in-pandas-d3a559487525&newsletterV3=6f77c7bf8755&newsletterV3Id=61596630de2c&user=Alexandre+Escol%C3%A0+Nixon&userId=6f77c7bf8755&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}