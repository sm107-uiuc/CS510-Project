{"url": "https://towardsdatascience.com/analyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099", "time": 1682993001.499924, "path": "towardsdatascience.com/analyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099/", "webpage": {"metadata": {"title": "Analyzing multigraphs in Neo4j Graph data science library | by Tomaz Bratanic | Towards Data Science", "h1": "Analyzing multigraphs in Neo4j Graph data science library", "description": "When times are tough, I think it is essential to focus on our relationships. Some of us concentrate more on social interactions. Others like to play around with neurons, while some just want to look\u2026"}, "outgoing_paragraph_urls": [{"url": "https://snap.stanford.edu/data/#socnets", "anchor_text": "social interactions", "paragraph_index": 0}, {"url": "https://github.com/connectome-neuprint/neuPrint", "anchor_text": "neurons", "paragraph_index": 0}, {"url": "http://networkrepository.com/asn.php", "anchor_text": "animals", "paragraph_index": 0}, {"url": "https://github.com/neo4j/graph-data-science", "anchor_text": "Neo4j Graph data science library", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/Multigraph", "anchor_text": "Wikipedia definition", "paragraph_index": 1}, {"url": "https://neo4j.com/docs/graph-data-science/1.0/algorithms/degree-centrality/", "anchor_text": "Degree centrality", "paragraph_index": 10}, {"url": "https://neo4j.com/docs/graph-data-science/1.0/management-ops/native-projection/", "anchor_text": "native projection", "paragraph_index": 12}, {"url": "https://neo4j.com/docs/graph-data-science/1.0/management-ops/cypher-projection/", "anchor_text": "cypher projection", "paragraph_index": 27}, {"url": "https://neo4j.com/graphacademy/", "anchor_text": "Neo4j Graph Academy", "paragraph_index": 31}, {"url": "https://neo4j.com/docs/graph-data-science/1.0/management-ops/cypher-projection/#cypher-projection-relationship-aggregation", "anchor_text": "official documentation", "paragraph_index": 34}, {"url": "https://github.com/neo4j/graph-data-science", "anchor_text": "Neo4j Graph Data Science", "paragraph_index": 51}, {"url": "https://github.com/tomasonjo/blogs/blob/master/GDS_Multigraph/GDS%20multigraph.ipynb", "anchor_text": "GitHub", "paragraph_index": 52}, {"url": "http://mng.bz/GGVN", "anchor_text": "http://mng.bz/GGVN", "paragraph_index": 54}], "all_paragraphs": ["When times are tough, I think it is essential to focus on our relationships. Some of us concentrate more on social interactions. Others like to play around with neurons, while some just want to look at cute animals. No matter your network preference, I would like to help you reflect on those relationships and find more (positive) insights about them. To do that, we will put on our data science hat and examine a simple network to learn how does the Neo4j Graph data science library deal with multigraphs and how to analyze them. I have to warn you that this will be a longer blog post and focused more on the technical details.", "What is a multigraph anyway? Let\u2019s look at the Wikipedia definition:", "In mathematics, and more specifically in graph theory, a multigraph is a graph which is permitted to have multiple edges (also called parallel edges), that is, edges that have the same end nodes. Thus two vertices may be connected by more than one edge.", "There are two distinct notions of multiple edges:", "- Edges without own identity: The identity of an edge is defined solely by the two nodes it connects. In this case, the term \u201cmultiple edges\u201d means that the same edge can occur several times between these two nodes.", "- Edges with own identity: Edges are primitive entities just like nodes. When multiple edges connect two nodes, these are different edges.", "To summarize the definition, the multigraph allows multiple relationships between a given pair of nodes. In other words, it means that we can have many connections of the same type between a pair of nodes like:", "Or connections with different types between a pair of nodes like:", "For example, in a knowledge graph, we might run into a combination of both.", "We will use the above example graph to demonstrate how the GDS library handles projecting multigraphs, what to look for, and what to expect. I have added weights to relationships as we will need them to demonstrate property aggregations, but more on that later.", "You can expect a deep dive into GDS multigraph projections, and little to no focus on the actual graph algorithms. We will use only the Degree centrality to examine the projected graphs.", "In the context of the GDS library, relationships without their own identity imply that we ignore the type of relationships in the process of projecting the graph.", "We will start with native projection examples. If we use the wildcard operator * to define the relationships we want to project, we ignore their type and bundle them all together. This can be understood as losing their own identity (type in the context of Neo4j).", "In the first example, we will observe the default behavior of the graph projection process.", "The default aggregation strategy doesn\u2019t perform any aggregations and projects all the relationships from the stored graph to memory without any transformations. If we check the relationshipCount, we observe that four relationships have been projected. We can also take a look at the relationshipProjection:", "Anytime you see a type:'*', you can be sure that all relationships have lost their type in the projection process. This also means that we can't perform additional filtering when executing the algorithms. To double-check the projected graph, we can use the degree centrality.", "As we expected, all four relationships have been projected. To have a reference for the future, let\u2019s also calculate the weighted degree centrality. By adding therelationshipWeightProperty parameter, we indicate we want to use the weighted variant of the algorithm.", "The result is the sum of weights of all the considered relationships. We have no use of this projected graph anymore, so remember to release it from memory.", "Depending on the use case, we might want to reduce our multigraph to a single graph during the projection process. This can be easily achieved with the aggregation parameter. We have to use the configuration map variant for the relationship definition.", "We notice by looking at the relationshipCount, that only a single relationship has been projected. If we want, we can double-check the results with the degree centrality.", "Don\u2019t forget to drop the projected graph once we are done.", "We have looked at the unweighted multigraph so far. Now it is time to look at what happens when we are dealing with a weighted multigraph, and we want to reduce it to a single graph. There are three different strategies we can pick for property aggregation strategy:", "In our next example, we will use the MIN property aggregation strategy to reduce a weighted multigraph to a single graph. By providing the property aggregation parameter, we indicate we want to reduce the stored graph to a single graph in the projection process.", "We can observe that the relationshipCount is 1, which means our multigraph has been successfully reduced to a single graph. Let's examine the relationshipProjection.", "Here we can observe that there are two aggregation configuration options, one on the relationship level and one on the property level. As far as I can tell, you should use the relationships level aggregation when dealing with unweighted networks and property level aggregation when dealing with weighted ones. We will again double-check the results with the degree centrality.", "To validate the MIN property aggregation, let's also calculate the weighted degree centrality.", "As we expected with the MIN property aggregation strategy, the single reduced weight has the minimum value of considered weights. Again, as we finished with the example, don't forget to drop the projected graph.", "Let\u2019s recreate the above examples with cypher projection. To lose the identity of the relationships and bundle them all together, we avoid providing the type column in the return of the relationship statement.", "Similarly to native projection, the default setting in cypher projection is to project all the relationships without any transformation during the projection process.", "By looking at the relationshipCount, we observe that all four relationships have been projected as intended. Let's also take a close look at the relationshipProjection.", "Remember, before we said that the type:\"*\" indicates that relationships lose their identity (type) during the projection process. The same applies to cypher projection. To verify the projected graph, we run the degree centrality.", "With cypher projection, we don\u2019t have access to relationship level aggregation strategies. This is no problem at all, as it is very straightforward to reduce the multigraph to a single graph using only the cypher query language. We simply add the DISTINCT clause in the return of the relationship statement, and it should be good to go. If you need more help with cypher, I suggest you take a look at Neo4j Graph Academy.", "The relationship count is 1, which means we have successfully reduced the multigraph. Remember to drop the projected graph.", "On the other hand, with cypher projection, we do have access to property level aggregation strategies. We don\u2019t really \u201cneed\u201d them as we can accomplish all the transformation using only cypher. To show you what I mean by that, we can apply the minimum property strategy aggregation using plain cypher like:", "However, if we look at the official documentation:", "One drawback of that approach is that we put more pressure on the Cypher execution engine and the query result consumes additional memory. An alternative approach is to use relationshipProperties as part of the optional configuration map. The syntax is identical to the property mappings used in the native projection.", "So, to conserve memory, we can use the property level aggregation strategies in the configuration map.", "The relationshipCount is 1, which confirms our successful multigraph reduction. Just to make sure, we can run the weighted centrality and validate results.", "With everything in order, we can release both projected graphs from memory.", "We also have the option to retain the type of relationships during the projection process. Among other things, this allows us to perform additional filtering when executing graph algorithms. However, we have to be careful, as projecting relationships with a preserved type is a bit different in the context of multigraphs.", "With the native projection, it is simple to declare that we want to preserve the type of relationships. All we have to do is specify which relationship types we want to consider, and the GDS engine will automatically bundle relationships under the specific relationship type. Let\u2019s take a look at some examples to gain a better understanding.", "From previous examples we already know that the default aggregation strategy does not perform any transformations. By defining the relationship types, we indicate to the GDS library that we want to retain their type after the projection process.", "As expected, therelationshipsCount is 4. Let's take a closer look at the relationshipProjection.", "We can see that we have three different bundles or groups of relationships. Each bundle composes of a single relationship type, which is defined with the type parameter. It is handy to look at relationshipProjection to validate what kind of graph we have projected and if the relationship types have been retained. Not much else to do with this in-memory graph.", "Like before, we can reduce our unweighted multigraph to a single graph with the relationship level aggregation parameter. We have to provide the aggregation parameter for each relationship type separately.", "Ok, so we reduced to a single graph, but the relationshipCount is 3. Why is it so? The multigraph reduction process works on the relationship type level, and because we have three distinct relationship types, a single relationship for each type has been projected. Let's calculate the degree centrality on the whole in-memory graph.", "As we explained, even though we have reduced each relationship type separately, we are still dealing with a multigraph on the whole. When running graph algorithms, you have to pay close attention to whether you are dealing with a multigraph or not, have you projected multiple relationship types and have you performed any transformations during projection, as all of this will affect the algorithm results.", "We can now drop this graph.", "Property aggregation strategies are very similar to before when we were dealing with relationships without identity. The only change is that now the aggregations are grouped by the relationship type.", "We get 3 relationships projected as we have learned that the aggregations happen on the relationship type level. We will double-check the results with the weighted degree.", "I feel like a broken record by now, but don\u2019t forget to drop the graph :)", "I skipped the examples for cypher projection with preserved relationship types to shorten this blog post a bit. Basically, all you have to do is to add the column type in the relationship statement, and it should behave identically to the native projection examples. I hope you got a better understanding of what is going on under the hood of the Neo4j Graph Data Science library during the projection process, which will hopefully help you find more and better insights. To sum it up, all aggregations either on relationship level or property level are grouped by the relationship type.", "Thanks for reading, and as always, the code is available on GitHub.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data explorer. Turn everything into a graph. Author of Graph algorithms for Data Science at Manning publication. http://mng.bz/GGVN"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F35c9b6d20099&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----35c9b6d20099--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----35c9b6d20099--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://bratanic-tomaz.medium.com/?source=post_page-----35c9b6d20099--------------------------------", "anchor_text": ""}, {"url": "https://bratanic-tomaz.medium.com/?source=post_page-----35c9b6d20099--------------------------------", "anchor_text": "Tomaz Bratanic"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F57f13c0ea39a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=post_page-57f13c0ea39a----35c9b6d20099---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F35c9b6d20099&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F35c9b6d20099&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://snap.stanford.edu/data/#socnets", "anchor_text": "social interactions"}, {"url": "https://github.com/connectome-neuprint/neuPrint", "anchor_text": "neurons"}, {"url": "http://networkrepository.com/asn.php", "anchor_text": "animals"}, {"url": "https://github.com/neo4j/graph-data-science", "anchor_text": "Neo4j Graph data science library"}, {"url": "https://en.wikipedia.org/wiki/Multigraph", "anchor_text": "Wikipedia definition"}, {"url": "https://neo4j.com/docs/graph-data-science/1.0/algorithms/degree-centrality/", "anchor_text": "Degree centrality"}, {"url": "https://neo4j.com/docs/graph-data-science/1.0/management-ops/native-projection/", "anchor_text": "native projection"}, {"url": "https://neo4j.com/docs/graph-data-science/1.0/management-ops/cypher-projection/", "anchor_text": "cypher projection"}, {"url": "https://neo4j.com/graphacademy/", "anchor_text": "Neo4j Graph Academy"}, {"url": "https://neo4j.com/docs/graph-data-science/1.0/management-ops/cypher-projection/#cypher-projection-relationship-aggregation", "anchor_text": "official documentation"}, {"url": "https://github.com/neo4j/graph-data-science", "anchor_text": "Neo4j Graph Data Science"}, {"url": "https://github.com/tomasonjo/blogs/blob/master/GDS_Multigraph/GDS%20multigraph.ipynb", "anchor_text": "GitHub"}, {"url": "https://medium.com/tag/neo4j?source=post_page-----35c9b6d20099---------------neo4j-----------------", "anchor_text": "Neo4j"}, {"url": "https://medium.com/tag/data-science?source=post_page-----35c9b6d20099---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/graph?source=post_page-----35c9b6d20099---------------graph-----------------", "anchor_text": "Graph"}, {"url": "https://medium.com/tag/algorithms?source=post_page-----35c9b6d20099---------------algorithms-----------------", "anchor_text": "Algorithms"}, {"url": "https://medium.com/tag/network?source=post_page-----35c9b6d20099---------------network-----------------", "anchor_text": "Network"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F35c9b6d20099&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=-----35c9b6d20099---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F35c9b6d20099&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=-----35c9b6d20099---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F35c9b6d20099&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----35c9b6d20099--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F35c9b6d20099&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----35c9b6d20099---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----35c9b6d20099--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----35c9b6d20099--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----35c9b6d20099--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----35c9b6d20099--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----35c9b6d20099--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----35c9b6d20099--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----35c9b6d20099--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----35c9b6d20099--------------------------------", "anchor_text": ""}, {"url": "https://bratanic-tomaz.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://bratanic-tomaz.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Tomaz Bratanic"}, {"url": "https://bratanic-tomaz.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3.1K Followers"}, {"url": "http://mng.bz/GGVN", "anchor_text": "http://mng.bz/GGVN"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F57f13c0ea39a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=post_page-57f13c0ea39a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Feab586d298c8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fanalyzing-multigraphs-in-neo4j-graph-data-science-library-35c9b6d20099&newsletterV3=57f13c0ea39a&newsletterV3Id=eab586d298c8&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}