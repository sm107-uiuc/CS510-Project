{"url": "https://towardsdatascience.com/building-a-custom-fraud-detection-dashboard-1a91bfc62111", "time": 1683017481.161265, "path": "towardsdatascience.com/building-a-custom-fraud-detection-dashboard-1a91bfc62111/", "webpage": {"metadata": {"title": "Building a Custom Fraud Detection Dashboard | by Akash Kaul | Towards Data Science", "h1": "Building a Custom Fraud Detection Dashboard", "description": "In this blog, you\u2019ll see some of the steps necessary to create a full fraud-detection web app connected to a backend graph database. We won\u2019t cover all of the components, but rather give a brief\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/TigerGraph-OSS/Fraud-Dashboard.git", "anchor_text": "here", "paragraph_index": 2}, {"url": "https://plotly.com/dash/", "anchor_text": "Dash", "paragraph_index": 6}, {"url": "https://www.tigergraph.com/", "anchor_text": "TigerGraph", "paragraph_index": 7}, {"url": "https://www.tigergraph.com/gsql/", "anchor_text": "GSQL", "paragraph_index": 7}, {"url": "https://medium.com/@akash_kaul/getting-started-with-tigergraph-starter-kits-5a4d8ddac974", "anchor_text": "Getting Started with TigerGraph Starter Kits", "paragraph_index": 8}, {"url": "https://pytigergraph.github.io/pyTigerGraph/", "anchor_text": "pyTigerGraph", "paragraph_index": 12}, {"url": "https://dash-bootstrap-components.opensource.faculty.ai", "anchor_text": "Dash Bootstrap Components", "paragraph_index": 19}, {"url": "https://dash-bootstrap-components.opensource.faculty.ai/docs/components/navbar/", "anchor_text": "documentation page", "paragraph_index": 20}, {"url": "https://dash-bootstrap-components.opensource.faculty.ai/examples/simple-sidebar/", "anchor_text": "an example", "paragraph_index": 25}, {"url": "https://dash.plotly.com/urls", "anchor_text": "dcc.Location", "paragraph_index": 30}, {"url": "https://dash.plotly.com/dash-html-components/div", "anchor_text": "html.Div", "paragraph_index": 32}, {"url": "https://plotly.com/python/", "anchor_text": "Plotly", "paragraph_index": 44}, {"url": "https://dash.plotly.com/datatable", "anchor_text": "DataTable", "paragraph_index": 50}, {"url": "https://towardsdatascience.com/creating-interactive-data-tables-in-plotly-dash-6d371de0942b?sk=983391f66a5d4dc4d47f1bfb110a3fad", "anchor_text": "this post", "paragraph_index": 50}, {"url": "https://dash.plotly.com/dash-core-components/dropdown", "anchor_text": "dcc.Dropdown", "paragraph_index": 56}, {"url": "https://dash.plotly.com/dash-core-components/datepickerrange", "anchor_text": "dcc.DatePickerRange", "paragraph_index": 56}, {"url": "https://shreya-chaudhary.medium.com/creating-a-timetree-in-tigergraph-e71505724e77", "anchor_text": "this awesome blog", "paragraph_index": 58}, {"url": "https://medium.com/u/9d61d58508ab?source=post_page-----1a91bfc62111--------------------------------", "anchor_text": "Shreya Chaudhary", "paragraph_index": 58}, {"url": "https://docs.tigergraph.com/dev/gsql-ref/ddl-and-loading/modifying-a-graph-schema#global-vs-local-schema-changes", "anchor_text": "schema change job", "paragraph_index": 59}, {"url": "https://docs.tigergraph.com/start/gsql-102/adv/dml#insert", "anchor_text": "Insert", "paragraph_index": 61}, {"url": "https://github.com/TigerGraph-OSS/Fraud-Dashboard.git", "anchor_text": "Colab notebook", "paragraph_index": 69}], "all_paragraphs": ["In this blog, you\u2019ll see some of the steps necessary to create a full fraud-detection web app connected to a backend graph database. We won\u2019t cover all of the components, but rather give a brief overview of some of the key parts.", "All-in-all, the full dashboard ends up looking like this.", "Note: You can find the full code here.", "The importance of data visualization cannot be understated. Visualizations are what allow developers to present \u201cmeaningless\u201d data in a way that\u2019s efficient, effective, and impactful. It\u2019s integral in understanding data and making decisions, and it has applications in every field. This, of course, includes the business and finance world.", "As important as data is, businesses can\u2019t properly evaluate the data unless it\u2019s in an easy-to-digest format. For areas like fraud detection, where properly understanding data is key to stopping malicious acts and saving billions of dollars, visualizations are extremely important.", "To create this fraud detection dashboard, we are using two main technologies.", "Dash is a Python package specifically made for designing analytical dashboards for data science. The library offers an enormous amount of ready-to-use components, including every common HTML component. It also comes with widgets such as sliders, text boxes, and navigation bars, all of which are extremely easy to use. Dash abstracts away the complicated HTML, CSS and JS and allows you to add components with jsut a few lines of code. But, they also offer the option to add custom styling or custom components, giving users true freedom in creating their dashboard.", "TigerGraph is one of the fastest graph database platform in the world. Using their streamlined platform, you can create graphs with billions of nodes and edges that operate in realtime. TigerGraph also makes use of GSQL, their own graph query language that mimics SQL syntax and allows for quick and easy querying of graph data.", "If you haven\u2019t already done so, check out Getting Started with TigerGraph Starter Kits. That blog goes through many of the features of the fraud detection graph database that is being used for this dashboard.", "With that, let\u2019s dive into creating this dashboard!", "There are a few packages needed for this project.", "From these packages, we can import everything we need.", "pyTigerGraph is Python package that manages connecting to your TigerGraph server and working with the built-in REST endpoints from TigerGraph. To set up the connector, we just need a few lines of code.", "The basic structure of the Dash app is as follows:", "Each of the components described below has to be placed in the app.layout body, while all of the callbacks have to be placed below or in a separate file.", "There are lots of different components that go into making this dashboard. In the full version, this dashboard has complex callback functions for user interaction, multiple pages for displaying different content, and live communication between the dashboard and the backend TigerGraph server.", "There\u2019s a lot to get through, so let\u2019s just go through each piece one-at-a-time.", "Note: The emphasis of these descriptions will be on the app components rather than the styling. The layout and CSS style for all components will be included, but should not be taken as the only way to style a dashboard.", "The navigation bar sits at the top of the page and is used to display basic information as well as other handy widgets (in our case, a search bar).", "To make the navigation bar, you can use Dash Bootstrap Components, a standalone Python package of Dash components modeled after the Bootstrap library.", "On the documentation page, you can find examples for creating all of the components available, including a navigation bar.", "Using this page as a start, we slightly modified the code to make the component more unique.", "Here\u2019s what the code looks like.", "We start by creating a search bar, which contains a input field and a button. We then add this search bar to the nav bar along with a clickable image and title.", "The code above produces a nav bar that looks like this.", "Once you have the nav bar done, the sidebar is very straightforward. The sidebar isn\u2019t a component included in the Dash Bootstrap components, but there is an example on their site that shows how to make one.", "Essentially, it is just a navigation bar that has been flipped sideways. Again, we modify the code slightly to fit our specifications.", "We use a nav for the different tabs on the side bar and basic components for the rest.", "Notice the two links we included. These links will be used for page navigation once we implement the multipage functionality to our app.", "The code creates the following sidebar:", "To allow our web-app to have multiple different pages, we need to use the dcc.Location component. This allows us to control the path after the domain name. For each page we want, we simply create a unique path and load that page when that path is called.", "So, what does this look like?", "For the layout, all we need to do is add the dcc.Location component and an html.Div component to store the page content.", "Now, we need to add two callback functions. We use the same links as used in the sidebar earlier", "The first function toggles the pathname after the domain name in the url, and the second sets the page content for each page.", "Note: The second callback returns \u201cuser_page\u201d and \u201ctransaction_page\u201d as the corresponding pages for each pathname. These will be defined in the next two component sections.", "The user page consists of different information about a particular user.", "The page has 5 components. There are 2 dials for displaying the user\u2019s risk scores, a bullet chart showing aggregate stats, and a bar chart and table displaying all of the user transactions.", "Here\u2019s how the page layout looks.", "Here\u2019s what the base code looks like. It is simply a collection of divs, rows, and columns.", "Note: There are no charts in the default page. This is because all of the charts are created dynamically. This allows the page to be updated when a new user ID is entered.", "To show an example of making the user information charts, let\u2019s look at one of the basic user risk score dials.", "First, we need to create a custom GSQL query in TigerGraph.", "This query simply takes in a user ID (i.e. \u201c333\u201d) and returns the average risk score of the user\u2019s credit cards. Here\u2019s the output from this query in JSON format.", "To make the chart, we use pyTigerGraph to run the query and Plotly to make the guage.", "Most of the code is cosmetic, except for the threshold value which we set to the output of the GSQL query.", "The code above produces a dial that looks like this:", "Now, let\u2019s see how we could integrate this chart into a callback.", "The callback takes the value typed into the search bar and creates the risk dial for the entered user ID. There is also a default value that gets triggered when the app is initially loaded.", "For our last section, we will cover the transaction page. This page presents a global view of a large collection of transactions in the database.", "The transactions are presented in a table using the DataTable component. The Dash DataTable offers a lot of customization and flexibility which we won\u2019t get into in this blog. But, if you\u2019re interested, check out this post that covers some cool aspects of the table component.", "We start by creating a blank table.", "Most of the settings shown are for table styling, and the documentation does a great job of explaining all of it.", "The corresponding table looks like this:", "Note: The virtualization setting makes it so rows beyond the height of the table are hidden, which helps with managing resources for large datasets.", "The general structure of the Transaction Page is as shown:", "The main component is the table, while a dcc.Dropdown and a dcc.DatePickerRange are included to use as filters for the table.", "To load the data from TigerGraph, we again need a custom GSQL query. But, first, we need to restructure the graph schema. The starter kit has all of the dates stored on the individual transactions. However, when sorting through dates tied to a million transactions, this becomes very inefficient.", "An alternative is creating a time tree. If you\u2019re unfamiliar with how time trees are structured or why they are used, check out this awesome blog by Shreya Chaudhary.", "The time trees can be added using a schema change job.", "The job simply adds the desired vertices and edges to implement the time tree.", "Now, the next step is to load these vertices with data. We can use the Insert function to do so.", "The script adds the date values stored in the Transaction vertex into the corresponding Day, Month, and Year vertices. The values are slightly modified to create unique ids for each vertex (for example, the month of May would have a separate vertex for each year that had transactions in May).", "Finally, the graph is updated, and we can write the query to get the transactions.", "The query first crawls the new time tree to get the Day vertices that fit into the input date range. Then, it grabs all the Transactions connected to these vertices, along with the information of the users involved, and sorts them by date in descending order.", "Everything is now ready on the database end, and we can now create a callback to dynamically create the table data.", "We first start by creating a method to run the installed query and clean up the output data. Then, we create a callback sensitive to the dropdown shown earlier. The callback returns the result of the method on the first run, and filters the data if a value is selected in the dropdown.", "I hope you enjoyed this overview of creating a fraud detection dashboard using a backend TigerGraph database and the Python Dash package. We only covered a few of the pieces used to make this awesome dashboard. Both of these technologies offer much more than what was covered, so I encourage you to continue exploring and learning on your own.", "There\u2019s much more to implement, and the full dashboard is shown below.", "If you want a look at the full code or deploy this dashboard yourself, you can check out this Colab notebook.", "Feel free to take a look to try to understand all of the moving pieces involved. If you get lost or confused, don\u2019t worry! The callbacks and GSQL queries used are much more complex since they enable features like live updates, realtime filtering of data, and creation of multiple charts at once.", "If you want help implementing this project or getting familiar with TigerGraph in general, check out the Discord and Community Channels!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1a91bfc62111&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----1a91bfc62111--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1a91bfc62111--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@akash_kaul?source=post_page-----1a91bfc62111--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@akash_kaul?source=post_page-----1a91bfc62111--------------------------------", "anchor_text": "Akash Kaul"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ffc0227505fc6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&user=Akash+Kaul&userId=fc0227505fc6&source=post_page-fc0227505fc6----1a91bfc62111---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1a91bfc62111&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1a91bfc62111&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@srd844?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Stephen Dawson"}, {"url": "https://unsplash.com/s/photos/graph?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://github.com/TigerGraph-OSS/Fraud-Dashboard.git", "anchor_text": "here"}, {"url": "https://plotly.com/dash/", "anchor_text": "Dash"}, {"url": "https://www.tigergraph.com/", "anchor_text": "TigerGraph"}, {"url": "https://www.tigergraph.com/gsql/", "anchor_text": "GSQL"}, {"url": "https://medium.com/@akash_kaul/getting-started-with-tigergraph-starter-kits-5a4d8ddac974", "anchor_text": "Getting Started with TigerGraph Starter Kits"}, {"url": "https://pytigergraph.github.io/pyTigerGraph/", "anchor_text": "pyTigerGraph"}, {"url": "https://dash-bootstrap-components.opensource.faculty.ai", "anchor_text": "Dash Bootstrap Components"}, {"url": "https://dash-bootstrap-components.opensource.faculty.ai/docs/components/navbar/", "anchor_text": "documentation page"}, {"url": "https://dash-bootstrap-components.opensource.faculty.ai/examples/simple-sidebar/", "anchor_text": "an example"}, {"url": "https://dash.plotly.com/urls", "anchor_text": "dcc.Location"}, {"url": "https://dash.plotly.com/dash-html-components/div", "anchor_text": "html.Div"}, {"url": "https://plotly.com/python/", "anchor_text": "Plotly"}, {"url": "https://dash.plotly.com/datatable", "anchor_text": "DataTable"}, {"url": "https://towardsdatascience.com/creating-interactive-data-tables-in-plotly-dash-6d371de0942b?sk=983391f66a5d4dc4d47f1bfb110a3fad", "anchor_text": "this post"}, {"url": "https://dash.plotly.com/dash-core-components/dropdown", "anchor_text": "dcc.Dropdown"}, {"url": "https://dash.plotly.com/dash-core-components/datepickerrange", "anchor_text": "dcc.DatePickerRange"}, {"url": "https://shreya-chaudhary.medium.com/creating-a-timetree-in-tigergraph-e71505724e77", "anchor_text": "this awesome blog"}, {"url": "https://medium.com/u/9d61d58508ab?source=post_page-----1a91bfc62111--------------------------------", "anchor_text": "Shreya Chaudhary"}, {"url": "https://docs.tigergraph.com/dev/gsql-ref/ddl-and-loading/modifying-a-graph-schema#global-vs-local-schema-changes", "anchor_text": "schema change job"}, {"url": "https://docs.tigergraph.com/start/gsql-102/adv/dml#insert", "anchor_text": "Insert"}, {"url": "https://github.com/TigerGraph-OSS/Fraud-Dashboard.git", "anchor_text": "Colab notebook"}, {"url": "https://discord.gg/F2c9b9v", "anchor_text": "Join the TigerGraph Discord Server!Check out the TigerGraph community on Discord - hang out with 358 other members and enjoy free voice and text chat.discord.gg"}, {"url": "https://community.tigergraph.com", "anchor_text": "TigerGraphA place to learn, ask questions, showcase cool projects, and connect with other TigerGraph developers!community.tigergraph.com"}, {"url": "https://medium.com/tag/graph-database?source=post_page-----1a91bfc62111---------------graph_database-----------------", "anchor_text": "Graph Database"}, {"url": "https://medium.com/tag/tigergraph?source=post_page-----1a91bfc62111---------------tigergraph-----------------", "anchor_text": "Tigergraph"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----1a91bfc62111---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/data-science?source=post_page-----1a91bfc62111---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-analysis?source=post_page-----1a91bfc62111---------------data_analysis-----------------", "anchor_text": "Data Analysis"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1a91bfc62111&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&user=Akash+Kaul&userId=fc0227505fc6&source=-----1a91bfc62111---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1a91bfc62111&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&user=Akash+Kaul&userId=fc0227505fc6&source=-----1a91bfc62111---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1a91bfc62111&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1a91bfc62111--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F1a91bfc62111&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----1a91bfc62111---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----1a91bfc62111--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----1a91bfc62111--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----1a91bfc62111--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----1a91bfc62111--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1a91bfc62111--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1a91bfc62111--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----1a91bfc62111--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----1a91bfc62111--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@akash_kaul?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@akash_kaul?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Akash Kaul"}, {"url": "https://medium.com/@akash_kaul/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "135 Followers"}, {"url": "https://www.linkedin.com/in/akash-kaul-6a8063194/", "anchor_text": "https://www.linkedin.com/in/akash-kaul-6a8063194/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ffc0227505fc6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&user=Akash+Kaul&userId=fc0227505fc6&source=post_page-fc0227505fc6--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe0f35f4f8238&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-custom-fraud-detection-dashboard-1a91bfc62111&newsletterV3=fc0227505fc6&newsletterV3Id=e0f35f4f8238&user=Akash+Kaul&userId=fc0227505fc6&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}