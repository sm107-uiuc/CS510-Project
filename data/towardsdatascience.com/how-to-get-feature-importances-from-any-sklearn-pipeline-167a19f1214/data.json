{"url": "https://towardsdatascience.com/how-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214", "time": 1683015033.92342, "path": "towardsdatascience.com/how-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214/", "webpage": {"metadata": {"title": "How to Get Feature Importances from Any Sklearn Pipeline | by Nicolas Bertagnolli | Towards Data Science", "h1": "How to Get Feature Importances from Any Sklearn Pipeline", "description": "Pipelines are amazing! I use them in basically every data science project I work on. But, easily getting the feature importance is way more difficult than it needs to be. In this tutorial, I\u2019ll walk\u2026"}, "outgoing_paragraph_urls": [{"url": "https://pypi.org/project/datasets/", "anchor_text": "datasets", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/good-grams-how-to-find-predictive-n-grams-for-your-problem-c04a5f320b39", "anchor_text": "good unigrams here", "paragraph_index": 12}, {"url": "https://gist.github.com/nbertagnolli/bf5bd2cc7e0b142d6a862e54dd3ac871", "anchor_text": "here", "paragraph_index": 24}, {"url": "https://www.linkedin.com/in/nicolas-bertagnolli-058aba81/", "anchor_text": "https://www.linkedin.com/in/nicolas-bertagnolli-058aba81/", "paragraph_index": 26}], "all_paragraphs": ["Pipelines are amazing! I use them in basically every data science project I work on. But, easily getting the feature importance is way more difficult than it needs to be. In this tutorial, I\u2019ll walk through how to access individual feature names and their coefficients from a Pipeline. After that, I\u2019ll show a generalized solution for getting feature importance for just about any pipeline.", "Let\u2019s start with a super simple pipeline that applies a single featurization step followed by a classifier.", "Here we use the excellent datasets python package to quickly access the imdb sentiment data. This package put together by HuggingFace has a ton of great datasets and they are all ready to go so you can get straight to the fun model building.", "The above pipeline defines two steps in a list. It first takes input and passes it through a TfidfVectorizer which takes in text and returns the TF-IDF features of the text as a vector. It then passes that vector to the SVM classifier.", "Notice how this happens in order, the TF-IDF step then the classifier. You can chain as many featurization steps as you\u2019d like. For example, the above pipeline is equivalent to:", "Here we do things even more manually. First, we get counts of every word, second, we apply the TF-IDF transformation, and finally, we pass this feature vector to the classifier. The TfidfVectorizer does those two in one step. But this illustrates the point. In a raw pipeline, things execute in order. We\u2019ll discuss how to stack features together a little later. For now, let\u2019s work on getting the feature importance for our first example model.", "Pipelines make it easy to access the individual elements. If you print out the model after training you\u2019ll see:", "This is saying there are two steps, one named vectorizer the other named classifier. We can access these by looking at the named_steps parameter of the pipeline like so:", "This will return our fitted TfidfVectorizer. Pretty neat! Most featurization steps in Sklearn also implement a get_feature_names() method which we can use to get the names of each feature by running:", "This will give us a list of every feature name in our vectorizer. Then we just need to get the coefficients from the classifier. For most classifiers in Sklearn this is as easy as grabbing the .coef_ parameter. (Ensemble methods are a little different they have a feature_importances_ parameter instead)", "Now we have the coefficients in the classifier and also the feature names. Let\u2019s put them together into a nice plot.", "So we can see that negative unigrams seem to be the most impactful. That\u2019s pretty cool. Getting these feature importance was easy. Let\u2019s try a slightly more complicated example.", "In most real applications I find I\u2019m combining lots of features together in intricate ways. Earlier we saw how a pipeline executes each step in order. How do we handle multiple simultaneous steps? The answer is the FeatureUnion class. Let\u2019s say we want to build a model where we take in TF-IDF bigram features but have some hand curated unigrams as well. (See my blog post on using models to find good unigrams here.) We can define this pipeline using a FeatureUnion. A FeatureUnion takes a transformer_list which can be a list of transformers, pipelines, classifiers, etc. and then concatenates their results.", "As you can see at a high level our model has two steps a union and a classifier. Inside the union we do two distinct featurization steps. We find a set of hand picked unigram features and then all bigram features.", "Extracting the features from this model is slightly more complicated. We have to go into the union, and then get all the individual features. Let\u2019s try and do this by hand and then see if we can generalize to any arbitrary Pipeline. We already know how to access members of a pipeline, it\u2019s the named_steps. To get inside of the FeatureUnion we can look directly at the transformer_list and step through each element. So the code would look something like this.", "Since the classifier is an SVM that operates on a single vector the coefficients will come from the same place and be in the same order. We can visualize our results again.", "Looks like our bigrams were much more informative than our hand selected unigrams.", "So we\u2019ve done some simple examples but now we want a way to do this for any (roughly any) Pipeline and FeatureUnion combination. For that we turn to our old friend Depth First Search (DFS). We are going to view a Pipeline as a tree. Each layer can have an arbitrary number of FeatureUnions but they will all stack up to a single feature vector in the end. There are roughly three cases to consider when traversing. The first is the base case where we are in an actual transformer or classifier that will generate our features. The second is if we are in a Pipeline. The third and final case is when we are inside of a FeatureUnion. Let\u2019s talk about these in a little more depth.", "Here we want to write a function which given a featurizer of some kind will return the names of the features. This is the base case in our DFS. In Sklearn there are a number of different types of things which can be used for generating features. Some examples are clustering techniques, dimensionality reduction methods, traditional classifiers, and preprocessors to name a few. Each one lets you access the feature names in a different way. For example, the text preprocessor TfidfVectorizer implements a get_feature_names method like we saw above. However, most clustering methods don\u2019t have any named features, they are arbitrary clusters, but they do have a fixed number of clusters. Let\u2019s write a helper function that given a Sklearn featurization method will return a list of features.", "Here we try and enumerate a number of potential cases that can occur inside of Sklearn. We use hasattr to check if the provided model has the given attribute, and if it does we call it to get feature names. If the method is something like clustering and doesn\u2019t involve actual named features we construct our own feature names by using a provided name. For example let\u2019s say we apply this method to PCA with two components and we\u2019ve named the step pca then the resultant feature names returned would be [pca_0, pca_1].", "Now we can implement the DFS.", "Let\u2019s step through this together. This function will take three things. The first is the model we want to analyze. This model should be a Pipeline. The second is a list of all named featurization steps we want to pull out. In our last example this was bigrams and handpicked. These are the names of the individual steps that we used in our model. The last parameter is the current name we are looking at. This is necessary for the recursion and doesn\u2019t matter on first pass. (I should make a helper method to hide this from the end user but this is less code to explain for now).", "With this in hand we can now take an arbitrarily nested pipeline, say for example the below code, and get the feature names in the correct order!", "In this example, we construct three hand written rule featurizers and also a sub pipeline which does multiple steps and results in dimensionality reduced features. We can get all the feature names from this pipeline using one line!", "There are a lot of ways to mix and match steps in a pipeline and getting the feature names can be kind of a pain. If we use DFS we can extract them all in the correct order. This method will work for most cases in SciKit-Learn\u2019s ecosystem but I haven\u2019t tested everything. To extend it you just need to look at the documentation of whatever class you\u2019re trying to pull names from and update the extract_feature_names method with a new conditional checking if the desired attribute is present. I hope this helps make Pipelines easier to use and explore : ). You can find a Jupyter notebook with some of the code samples for this piece here. As with all my posts if you get stuck please comment here or message me on LinkedIn I\u2019m always interested to hear from folks. Happy Coding!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "CAIO at mpathic. I\u2019m working on applying modern NLP techniques to improve communication. Let\u2019s connect https://www.linkedin.com/in/nicolas-bertagnolli-058aba81/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F167a19f1214&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----167a19f1214--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----167a19f1214--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://nbertagnolli.medium.com/?source=post_page-----167a19f1214--------------------------------", "anchor_text": ""}, {"url": "https://nbertagnolli.medium.com/?source=post_page-----167a19f1214--------------------------------", "anchor_text": "Nicolas Bertagnolli"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa998d10e34d8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&user=Nicolas+Bertagnolli&userId=a998d10e34d8&source=post_page-a998d10e34d8----167a19f1214---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F167a19f1214&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F167a19f1214&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/getting-started", "anchor_text": "Getting Started"}, {"url": "https://unsplash.com/@quinten149?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Quinten de Graaf"}, {"url": "https://unsplash.com/s/photos/pipeline?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://pypi.org/project/datasets/", "anchor_text": "datasets"}, {"url": "https://towardsdatascience.com/good-grams-how-to-find-predictive-n-grams-for-your-problem-c04a5f320b39", "anchor_text": "good unigrams here"}, {"url": "https://gist.github.com/nbertagnolli/bf5bd2cc7e0b142d6a862e54dd3ac871", "anchor_text": "here"}, {"url": "https://medium.com/tag/python?source=post_page-----167a19f1214---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----167a19f1214---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----167a19f1214---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/editors-pick?source=post_page-----167a19f1214---------------editors_pick-----------------", "anchor_text": "Editors Pick"}, {"url": "https://medium.com/tag/getting-started?source=post_page-----167a19f1214---------------getting_started-----------------", "anchor_text": "Getting Started"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F167a19f1214&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&user=Nicolas+Bertagnolli&userId=a998d10e34d8&source=-----167a19f1214---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F167a19f1214&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&user=Nicolas+Bertagnolli&userId=a998d10e34d8&source=-----167a19f1214---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F167a19f1214&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----167a19f1214--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F167a19f1214&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----167a19f1214---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----167a19f1214--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----167a19f1214--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----167a19f1214--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----167a19f1214--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----167a19f1214--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----167a19f1214--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----167a19f1214--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----167a19f1214--------------------------------", "anchor_text": ""}, {"url": "https://nbertagnolli.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://nbertagnolli.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Nicolas Bertagnolli"}, {"url": "https://nbertagnolli.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "286 Followers"}, {"url": "https://www.linkedin.com/in/nicolas-bertagnolli-058aba81/", "anchor_text": "https://www.linkedin.com/in/nicolas-bertagnolli-058aba81/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa998d10e34d8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&user=Nicolas+Bertagnolli&userId=a998d10e34d8&source=post_page-a998d10e34d8--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F1205c8722589&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-get-feature-importances-from-any-sklearn-pipeline-167a19f1214&newsletterV3=a998d10e34d8&newsletterV3Id=1205c8722589&user=Nicolas+Bertagnolli&userId=a998d10e34d8&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}