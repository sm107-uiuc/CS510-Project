{"url": "https://towardsdatascience.com/a-simple-guide-to-convolutional-neural-networks-751789e7bd88", "time": 1683003054.627359, "path": "towardsdatascience.com/a-simple-guide-to-convolutional-neural-networks-751789e7bd88/", "webpage": {"metadata": {"title": "A Simple Guide to Convolutional Neural Networks | by Nushaine Ferdinand | Towards Data Science", "h1": "A Simple Guide to Convolutional Neural Networks", "description": "Cars can recognize road signs. Facebook knows your best friends names. You can use your face to unlock your phone. This is all done by magic. I\u2019m just joking, there is no magic here, just plain, old\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.tensorflow.org/guide/keras/overview/", "anchor_text": "Tensorflow", "paragraph_index": 11}, {"url": "https://www.investopedia.com/terms/o/overfitting.asp", "anchor_text": "overfitting", "paragraph_index": 22}], "all_paragraphs": ["Cars can recognize road signs. Facebook knows your best friends names. You can use your face to unlock your phone. This is all done by magic.", "I\u2019m just joking, there is no magic here, just plain, old math. But serious talk though, all the stuff I just mentioned are examples of a convolutional neural network.", "But before diving into the code for a convolutional network, let\u2019s get an understanding of what a convolutional neural network (CNN) is and how it works.", "So why would we use a CNN over another type of neural network, say, a multi-layer perceptron? This is because CNNs are able to extract the features of an image, which an algorithm like a multi-layer perceptron (MLP) or a recursive neural network (RNN) does not have the ability to do.", "The architecture of a convolutional neural network looks something like this:", "We should note a couple of things from this. The network starts off with 2 convolutional and max-pooling layers, followed with 2 fully connected layers which end with an output layer. The convolution +max pooling layers is where the images are recognized (features are extracted), and the fully connected layers are where the images are classified into predefined classes.", "The first part in a convolutional neural network filters an image to extract features from the image, then it pools the extracted feature to reduce the size of the data and finally adds an activation function so that the network is a non-linear function. This can be summed to convolution + pooling + activation layers.", "A filter is a matrix which extracts features from an image (this is where the learning takes place). The dot product between the filter values and the image pixel values is forms the convolution layer.", "The filter tensor is a matrix of weights. The values in the filter matrix are updated each time the network performs backpropagation. However, the dimensions of the filter matrix are determined explicitly by the programmer.", "In a CNN, there are many different filters which extract various features in an image. As we progress through the network, the features extracted from an image get more and more specific. Let\u2019s take a stop sign for example.", "Since a filter in the first layer is used to detect a feature that can be easily recognized, this could be the octagonal shape of the stop sign. A filter in the second layer would be used to detect something more specific, like the text \u201cSTOP\u201d. A filter in the third layer could be used to detect something even more specific, like the letter \u201cS\u201d in \u201cSTOP\u201d.", "In Keras (a deep learning framework in Tensorflow), code for the first convolution layer would look something like this:", "Note: I won\u2019t go too much in-depth of how the code works, but I\u2019ll talk a bit about the architecture.", "So here, my convolution layer is 16 X 16 X 3, with a 5 X 5 filter. The programmer must explicitly define the dimensions of the filter, but the values in the filter are self-learned by the network.", "After the image is has passed through the first filter, it will then go on to the pooling layer. A pooling layer reduces the size of the filter layer, which allows us to train the model faster. Also, it prevents overfitting by dropping unwanted values in the filter tensor.", "A popular pooling method is called Max Pooling. It is the same process as filtering but this time we take the maximum value instead of the dot product. Check out the animation below:", "Now, we\u2019re going to ramp up the math. Re-Lu (Rectified Linear Unit) is a common activation function used in neural networks. An activation function is used to add non-linearity to the neural network. This allows us to solve much more complex problems than if our network is just a linear function. If we never had an activation function in our network, it would be a simple linear regression algorithm.", "The Re-Lu activation function is a function that will only return values if the value is greater than zero, helping decrease the training time.", "Now that all the features of the image have been extracted by the convolutional layers, its time to classify the images.", "In a fully connected layer, every neuron shares a connection with all the other neurons in the layer before and after it. That\u2019s why its called a \u201cFully Connected\u201d layer. Here is what they look like:", "Before entering our convoluted input into a dense (fully-connected) layer, we must flatten the tensor (our input). Flattening is turning our multi-dimensional input tensor input a 1-D input tensor. For example, say the final convolutional layer outputs a (28, 28, 3) tensor. Flattening this output would give the next layer an input of (2352, 1). 2352 comes from multiplying 28 X 28 X 3, which are the dimensions of the previous output tensor.", "This means that there are 2352 total pixels in the image. Flattening allows us to analyse every single pixel since now, every single pixel in the image has its own neuron.", "After the input is flattened, it passes through the dense layer. The dense layer does its thing, and then right before we reach the final dense layer, we do something called dropout. Dropping out neurons is randomly setting some of the output neurons to zero, just to speed up the training and backpropagation process, and to prevent overfitting our network.", "You just learned how to build a CNN, but what use is an untrained network! To master the art of CNN\u2019s, you must know how to train them too. In this article, I\u2019ll talk about the loss function and the optimizer that is used in a CNN.", "Simply put, a loss function is a way of calculating how accurate the data is. The goal of any optimization problem (any neural network) is to minimize the cost function.", "There are various types of loss functions. In CNN\u2019s, the loss function used is Cross-Entropy. Cross-Entropy calculates the difference between the probability distribution (can be a vector, matrix, tensor, etc.) of the network\u2019s output and the probability distribution of the labels.", "In our case (in a CNN), the data is represented in a vector. The cross-entropy loss calculates the difference between each element in the label vector (y) and the network\u2019s output vector (X), and then sum all those up to return the total loss for the network.", "The formula stated there includes some really intense mathematical notation, so if you want to go deeper in the maths, I suggest you go to the link below. However, you don\u2019t need to be fluent with the maths to write a CNN (especially in frameworks like Keras or Pytorch, since you only have to write \u201closs=cross_entropy\u201d, and Keras/Pytorch will take care of the rest).", "Optimization in machine learning is finding the best weights/biases which will return the lowest cost (loss). An optimizer is an algorithm that does exactly this. In CNN\u2019s (and most other deep neural nets), we use the Adam optimizer.", "If you\u2019re really interested in learning more about the Adam optimizer, put your statistics and calculus helmets on, and click the link below.", "Like before, you don\u2019t need to understand the nitty-gritty math behind how the optimizer works. In Keras, using the Adam optimizer is literally one line of code (optimizer=\u201cAdam\u201d)", "Awesome! You now know the basics of a CNN, so now you should choose a CNN project that you\u2019re really passionate about so you can go and apply what you just learned. In the meantime, check out the awesome tutorial down below where I learned how to write a road sign classifier!", "Just to summarize all of this up:", "Now its time to build your very own CNN!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "A big AI and car guy. I write on transportation, urban development, deep learning and that sorta stuff."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F751789e7bd88&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----751789e7bd88--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----751789e7bd88--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://nushainef.medium.com/?source=post_page-----751789e7bd88--------------------------------", "anchor_text": ""}, {"url": "https://nushainef.medium.com/?source=post_page-----751789e7bd88--------------------------------", "anchor_text": "Nushaine Ferdinand"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8e2e74cff09f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&user=Nushaine+Ferdinand&userId=8e2e74cff09f&source=post_page-8e2e74cff09f----751789e7bd88---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F751789e7bd88&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F751789e7bd88&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://martechtoday.com/how-visual-recognition-is-set-to-change-advertising-223719", "anchor_text": "(Source)"}, {"url": "https://towardsdatascience.com/a-comprehensive-guide-to-convolutional-neural-networks-the-eli5-way-3bd2b1164a53", "anchor_text": "Source: Sumit Saha"}, {"url": "https://www.tensorflow.org/guide/keras/overview/", "anchor_text": "Tensorflow"}, {"url": "https://miro.medium.com/max/2052/1*QkZ5OYHJvCnYPigMJ2SIyg.png", "anchor_text": "Source"}, {"url": "https://missinglink.ai/wp-content/uploads/2019/06/The-Role-of-a-Fully-Connected-Layer-in-a-CNN-700x430.png", "anchor_text": "Source"}, {"url": "https://sds-platform-private.s3-us-east-2.amazonaws.com/uploads/73_blog_image_1.png", "anchor_text": "Source"}, {"url": "https://www.investopedia.com/terms/o/overfitting.asp", "anchor_text": "overfitting"}, {"url": "https://www.youtube.com/watch?v=tRsSi_sqXjI", "anchor_text": "Source: Udacity"}, {"url": "https://towardsdatascience.com/adam-latest-trends-in-deep-learning-optimization-6be9a291375c", "anchor_text": "Adam \u2014 latest trends in deep learning optimization.Adam is an adaptive learning rate optimization algorithm that\u2019s been designed specifically for training deep neural\u2026towardsdatascience.com"}, {"url": "https://www.pyimagesearch.com/2019/11/04/traffic-sign-classification-with-keras-and-deep-learning/", "anchor_text": "Traffic Sign Classification with Keras and Deep Learning - PyImageSearchIn this tutorial, you will learn how to train your own traffic sign classifier/recognizer capable of obtaining over 95%\u2026www.pyimagesearch.com"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----751789e7bd88---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/tag/convolutional-network?source=post_page-----751789e7bd88---------------convolutional_network-----------------", "anchor_text": "Convolutional Network"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----751789e7bd88---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----751789e7bd88---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/classification?source=post_page-----751789e7bd88---------------classification-----------------", "anchor_text": "Classification"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F751789e7bd88&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&user=Nushaine+Ferdinand&userId=8e2e74cff09f&source=-----751789e7bd88---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F751789e7bd88&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&user=Nushaine+Ferdinand&userId=8e2e74cff09f&source=-----751789e7bd88---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F751789e7bd88&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----751789e7bd88--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F751789e7bd88&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----751789e7bd88---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----751789e7bd88--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----751789e7bd88--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----751789e7bd88--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----751789e7bd88--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----751789e7bd88--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----751789e7bd88--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----751789e7bd88--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----751789e7bd88--------------------------------", "anchor_text": ""}, {"url": "https://nushainef.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://nushainef.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Nushaine Ferdinand"}, {"url": "https://nushainef.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "92 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8e2e74cff09f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&user=Nushaine+Ferdinand&userId=8e2e74cff09f&source=post_page-8e2e74cff09f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fbf65bb0a55a2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-guide-to-convolutional-neural-networks-751789e7bd88&newsletterV3=8e2e74cff09f&newsletterV3Id=bf65bb0a55a2&user=Nushaine+Ferdinand&userId=8e2e74cff09f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}