{"url": "https://towardsdatascience.com/extensive-python-testing-on-travis-ci-4c24db9bf961", "time": 1682997249.339869, "path": "towardsdatascience.com/extensive-python-testing-on-travis-ci-4c24db9bf961/", "webpage": {"metadata": {"title": "Extensive Python testing on Travis CI | by Shay Palachy Affek | Towards Data Science", "h1": "Extensive Python testing on Travis CI", "description": "Say you have an open source Python project or package you are maintaining. You probably want to test it on the major Python versions that are currently in wide use. You definitely should. In some\u2026"}, "outgoing_paragraph_urls": [{"url": "https://gist.github.com/shaypal5/7fd766933fb265af6f71a88cb91dd08c", "anchor_text": "resulting .travis.yml file", "paragraph_index": 3}, {"url": "https://gist.github.com/shaypal5/7fd766933fb265af6f71a88cb91dd08c", "anchor_text": "a GitHub gist I created for it", "paragraph_index": 3}, {"url": "https://travis-ci.org", "anchor_text": "Travis CI", "paragraph_index": 4}, {"url": "https://travis-ci.org", "anchor_text": "Travis", "paragraph_index": 5}, {"url": "https://github.com/shaypal5/skift", "anchor_text": "small Python package", "paragraph_index": 6}, {"url": "https://github.com/shaypal5/skift/blob/master/setup.py", "anchor_text": "a simple", "paragraph_index": 6}, {"url": "https://github.com/shaypal5/skift/blob/master/setup.py", "anchor_text": "setup.py", "paragraph_index": 6}, {"url": "https://github.com/shaypal5/skift/blob/master/setup.py", "anchor_text": "file", "paragraph_index": 6}, {"url": "https://tox.readthedocs.io/en/latest/", "anchor_text": "tox, a powerful tool for automation and standardization of Python tests", "paragraph_index": 10}, {"url": "https://docs.travis-ci.com/user/build-matrix/", "anchor_text": "build matrix", "paragraph_index": 13}, {"url": "https://docs.travis-ci.com/user/languages/python/", "anchor_text": "Python builds are not available on the macOS environment", "paragraph_index": 24}, {"url": "https://docs.travis-ci.com/user/reference/osx/", "anchor_text": "which is currently Xcode 9.4.1 for Travis", "paragraph_index": 25}, {"url": "https://blog.travis-ci.com/search?q=xcode+python", "anchor_text": "actively searching the Travis blog for posts on Xcode images", "paragraph_index": 28}, {"url": "https://gist.github.com/shaypal5/7fd766933fb265af6f71a88cb91dd08c", "anchor_text": "the final file", "paragraph_index": 36}, {"url": "https://gist.github.com/shaypal5/7fd766933fb265af6f71a88cb91dd08c", "anchor_text": "Github gist", "paragraph_index": 37}, {"url": "https://gist.github.com/shaypal5/7fd766933fb265af6f71a88cb91dd08c", "anchor_text": "Github gist", "paragraph_index": 47}, {"url": "http://www.shaypalachy.com/", "anchor_text": "contact me through my personal website", "paragraph_index": 48}, {"url": "http://www.shaypalachy.com", "anchor_text": "www.shaypalachy.com", "paragraph_index": 50}], "all_paragraphs": ["Say you have an open source Python project or package you are maintaining. You probably want to test it on the major Python versions that are currently in wide use. You definitely should. In some cases you might also need to test it on different operating systems. I\u2019ll discuss both scenarios, and suggest a way to do just that, in this post.", "For the sake of this post I\u2019m going to assume you are:", "Just because it\u2019s a nice simple flow to follow, and it\u2019s the one that I use. The method presented here, however, can be easily adapted to other flows.", "The post below walks you through the stages and rational for the structure of the resulting .travis.yml file, which covers testing on different Python versions and operating systems thoroughly. If you\u2019re not interested in all that, you can just take a look at the final result in a GitHub gist I created for it.", "A great way to test your code on several Python versions is to use the Travis CI service, which offers (among other features) cloud-based, continuous testing, free for open source (i.e. public) GitHub projects. Let me briefly introduce you to basic Python testing with Travis. Feel free to skip ahead if you are familiar with the topic.", "To use Travis simply follow these three steps:", "So let\u2019s say you have a small Python package, with a simple setup.py file. And you have the following very basic .travis.yml that runs your tests through several Python versions:", "Let\u2019s go over each part of the above file:", "With this configuration, every commit to your repository will trigger a nice build for the corresponding project on Traivs CI, with each build being composed of one job per Python version (all on Linux machines), like so:", "You can also go into the log of each job and see the results of each command \u2014 either live or post factum:", "Another way to test your Python code on several Python versions is to use tox, a powerful tool for automation and standardization of Python tests. I\u2019m advocating for the above method because its one job == one Python version approach means builds finish faster (as up to three jobs run in parallel on Travis), and that you can immediately understand which version is giving you trouble without diving into the log. That\u2019s just my personal preference, of course.", "The first complication in multi-version Python testing arises when we try to use the above structure to test Python 3.7. If you just add 3.7 in the Python versions entries, your new 3.7 build will fail very early on, looking for an adequate archive. This is because Linux builds are run by default on Ubuntu 14.04 (nicknamed trusty), while jobs for Python 3.7 and higher require Ubuntu 16.04 (nicknamed xenial).", "You can solve this by adding a dist: xenial entry to your .travis.yml file, to have all version jobs build on Ubuntu 16.04. But what if you prefer testing lower versions on Ubuntu 14.04, and use xenial only for Python 3.7? While it\u2019s probably a negligible corner case, it will allow me to introduce Travis build matrices in a gradual manner, and these will prove to be crucial later on, so just go with me here.", "There are two ways to specify multiple parallel jobs in Travis. The first is to provide multiple options to more than one entry effecting the build environment; a build matrix of all possible combinations is automatically created and ran. For example, the following configuration produces a build matrix that expands to 4 individual (2 * 2 ) jobs:", "The second is to specify the exact combination of configurations you want in matrix.include. Continuing the above example, if parallelization is not available for Python 2.7, you might prefer specifying three specific jobs:", "Or, in our case, to run a Python 3.7 job on xenial, add a single entry:", "Cool. So we saw two ways to test Python 3.7 \u2014 the special snowflake of Pythons\u2014 on Travis, and got to know Travis build matrices a little bit. Let\u2019s move on.", "So, you\u2019re testing your simple pure-Python package on every important major version of Python. You\u2019re a responsible open-source contributor. Yay for you.", "But what if your Python project is not a pure-blood, but a muggle containing some specialized C++ code? Or maybe your code is pure-Python, but it interacts with the operating system (e.g. writing files, juggling threads or processes, etc.) in a non-trivial way, that can differ between operating systems?", "If that\u2019s the case, you definitely should test your code (and possibly also build it) on all three major OS, if you want your project to support them.", "For myself, the need arose on two projects, both pure Python:", "The solution I\u2019ve settled on was expanding the Travis build matrix to include specific combinations of operating systems and major Python versions, each to be run in it\u2019s own job, on a totally separate environment.", "Again, when comparing this approach to using tox, I\u2019ll say the main advantages are:", "Hopefully I\u2019ve convinced you this is a valid approach to multi-OS testing, so we can move to the specifics. We\u2019ll start with testing on macOS and finish with Windows.", "At the time of writing, Python builds are not available on the macOS environment. This doesn\u2019t mean it\u2019s impossible to test Python on macOS with Travis, just that the following naive approach won\u2019t work:", "Whatever the version number you assign to the python key, you\u2019ll get a macOS machine with Python 3.6.5 installed. This is because asking for a machine with os: osx spins up a machine using the default Xcode image, which is currently Xcode 9.4.1 for Travis.", "The current hack-ish way to get a macOS machine with a specific Python version is to ask for a specific Xcode image, using the osx_image tag, which you know comes preinstalled with the Python version you want to use.", "For example, to get a machine with Python 3.7 you can add the entry of osx_image: xcode10.2(you\u2019ll get Python 3.7.3, specifically). Cool. So how do you know which Xcode image comes with which Python version? Unfortunately, this mapping is not listed anywhere on Travis\u2019 website or documentation.", "Luckily for you, however, I did the dirty work and dug this information up. This basically entailed actively searching the Travis blog for posts on Xcode images releases to hunt down the Python versions on each image. The latest releases of major Python versions I have found are:", "Unfortunately, I haven\u2019t found a Travis Xcode image to come preinstalled with Python 3.5 (let me know if you do!).", "So you got the right Xcode tag. You still, however, need to adapt some of the build commands. For Python 3 versions, for example, we need to explicitly call pip3 and python3 to install and call (respectively) Python 3 code, since macOS comes preinstalled with Python 2 (which is what the python command points to):", "Considering this, you would have thought that a Python 2 job would require less custom entries. Unfortunately, because we\u2019re using the OS Python, pip installation commands need to be appended with the --user flags for Python 2. Moreover, as a result their CLI commands won\u2019t be installed, so we\u2019ll again have to call their commands through the python command:", "Good, we\u2019re done with testing Python on macOS. Have a cookie.", "Travis support for Windows builds is in an early access stage. Currently, only Windows Server (version 1803) is supported. This doesn\u2019t come with Python, but does come with Chocolatey, a package manager for Windows, which we\u2019re going to use to install Python.", "Since we are using Chocolatey to install Python, we are limited to the versions available through it. For Python 3, these are 3.5.4, 3.6.8 and 3.7.4. For Python 2, version 2.7.16 is currently the one installed by default.", "Here\u2019s a simple variation of a job entry to get a Windows-Python job, which includes the Chocolatey install command choco and an environment variable setup:", "As you can see, the generic script and after_success phases work just fine. You can take a look at the final file to see the slight variation required for each version, including Python 2.7.", "We have covered by now almost each and every combination of common operating system and important Python version. Combining the bits and pieces we looked at above, we can come up with a not-so-short .travis.yml file that provides comprehensive testing for Python projects, which you can find in a Github gist I\u2019ve created.", "I do, however, want to add a few final notes before I end this post.", "In some cases you might want to test your code continuously on specific OS-Version combinations that you expect to fail, like when certain tests fail on Windows but you are gearing towards adding Windows support in the near future. In that case, it is better to not have the entire build fail because of such jobs, so you don\u2019t get annoying build failure notifications (and also because you can then show off a nice and shiny \u201cbuild: passing\u201d badge on your repo).", "You can achieve this by adding an allow_failures entry under the matrix entry, detailing key-value pairs for which jobs are allowed to fail. For example, to have Python 3.7 on macOS allowed to fail, use:", "Setting - os: windows will allow all Windows builds to fail.", "Additionally, if you\u2019re already using the allow_failures logic, you might want to take advantage of the fast_finish capability. Setting fast_finish: true will determine the overall build status \u2014 pass or fail \u2014 as soon as all jobs which are not allowed to fail are done, while the rest of the jobs keep running. This is usually not crucial in small open-source projects, but it\u2019s nice to have, especially if jobs on some exotic OS or Python version are allowed to fail and take a lot of time.", "You can test your code against the development branches of different Python versions by adding the respective entry, like 3.7-dev under the python key. An important development branch to test against might be 3.8-dev, to prepare for what\u2019s to come. You probably also want to allow all jobs using development branches to fail.", "The solution I\u2019ve presented puts most of the special code for macOS and Windows builds in the build matrix. However, if you have some installation or testing code that is specific to Python version but should be run across all OS, you can condition commands on the value of the respective Travis\u2019 environment variable:", "To do same thing across all jobs for the same OS, use:", "Of course, if that is the case, you should probably consider handling this more cleanly in your setup.py file, by building the extras_require for test dynamically, based on Python version or OS (inferring it using Python code).", "Thank you for reading through this post. I hope you have found it useful. :) Again, you can take a look at the full resulting .travis.yml file in a dedicated Github gist.", "If you have any comments, corrections or ideas for improvements please write them below, or contact me through my personal website. Cheers!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Science Consultant. Teacher @ Tel Aviv University's business school. CEO @ Datahack nonprofit. www.shaypalachy.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F4c24db9bf961&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----4c24db9bf961--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4c24db9bf961--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://shay-palachy.medium.com/?source=post_page-----4c24db9bf961--------------------------------", "anchor_text": ""}, {"url": "https://shay-palachy.medium.com/?source=post_page-----4c24db9bf961--------------------------------", "anchor_text": "Shay Palachy Affek"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed0e9ae905e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&user=Shay+Palachy+Affek&userId=ed0e9ae905e3&source=post_page-ed0e9ae905e3----4c24db9bf961---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4c24db9bf961&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4c24db9bf961&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://codecov.io/gh/shaypal5/cachier", "anchor_text": "codecov.io"}, {"url": "https://github.com/shaypal5/pdpipe", "anchor_text": "dynamic test coverage badge on your repo"}, {"url": "https://gist.github.com/shaypal5/7fd766933fb265af6f71a88cb91dd08c", "anchor_text": "resulting .travis.yml file"}, {"url": "https://gist.github.com/shaypal5/7fd766933fb265af6f71a88cb91dd08c", "anchor_text": "a GitHub gist I created for it"}, {"url": "https://travis-ci.org", "anchor_text": "Travis CI"}, {"url": "https://travis-ci.org", "anchor_text": "Travis"}, {"url": "https://travis-ci.org/account/repositories", "anchor_text": "your repositories page"}, {"url": "https://github.com/shaypal5/skift", "anchor_text": "small Python package"}, {"url": "https://github.com/shaypal5/skift/blob/master/setup.py", "anchor_text": "a simple"}, {"url": "https://github.com/shaypal5/skift/blob/master/setup.py", "anchor_text": "setup.py"}, {"url": "https://github.com/shaypal5/skift/blob/master/setup.py", "anchor_text": "file"}, {"url": "https://codecov.io/gh/shaypal5/cachier", "anchor_text": "codecov.io"}, {"url": "https://tox.readthedocs.io/en/latest/", "anchor_text": "tox, a powerful tool for automation and standardization of Python tests"}, {"url": "https://docs.travis-ci.com/user/build-matrix/", "anchor_text": "build matrix"}, {"url": "https://github.com/shaypal5/cachier", "anchor_text": "Cachier"}, {"url": "https://github.com/shaypal5/skift", "anchor_text": "Skift"}, {"url": "http://scikit-learn.org", "anchor_text": "scikit-learn"}, {"url": "https://github.com/facebookresearch/fastText/tree/master/python", "anchor_text": "Python fastText"}, {"url": "https://docs.travis-ci.com/user/languages/python/", "anchor_text": "Python builds are not available on the macOS environment"}, {"url": "https://docs.travis-ci.com/user/reference/osx/", "anchor_text": "which is currently Xcode 9.4.1 for Travis"}, {"url": "https://blog.travis-ci.com/search?q=xcode+python", "anchor_text": "actively searching the Travis blog for posts on Xcode images"}, {"url": "https://gist.github.com/shaypal5/7fd766933fb265af6f71a88cb91dd08c", "anchor_text": "the final file"}, {"url": "https://gist.github.com/shaypal5/7fd766933fb265af6f71a88cb91dd08c", "anchor_text": "Github gist"}, {"url": "https://gist.github.com/shaypal5/7fd766933fb265af6f71a88cb91dd08c", "anchor_text": "Github gist"}, {"url": "http://www.shaypalachy.com/", "anchor_text": "contact me through my personal website"}, {"url": "https://medium.com/tag/continuous-integration?source=post_page-----4c24db9bf961---------------continuous_integration-----------------", "anchor_text": "Continuous Integration"}, {"url": "https://medium.com/tag/travis-ci?source=post_page-----4c24db9bf961---------------travis_ci-----------------", "anchor_text": "Travis Ci"}, {"url": "https://medium.com/tag/python?source=post_page-----4c24db9bf961---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/github?source=post_page-----4c24db9bf961---------------github-----------------", "anchor_text": "Github"}, {"url": "https://medium.com/tag/open-source?source=post_page-----4c24db9bf961---------------open_source-----------------", "anchor_text": "Open Source"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4c24db9bf961&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&user=Shay+Palachy+Affek&userId=ed0e9ae905e3&source=-----4c24db9bf961---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4c24db9bf961&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&user=Shay+Palachy+Affek&userId=ed0e9ae905e3&source=-----4c24db9bf961---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4c24db9bf961&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4c24db9bf961--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F4c24db9bf961&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----4c24db9bf961---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----4c24db9bf961--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----4c24db9bf961--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----4c24db9bf961--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----4c24db9bf961--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----4c24db9bf961--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----4c24db9bf961--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----4c24db9bf961--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----4c24db9bf961--------------------------------", "anchor_text": ""}, {"url": "https://shay-palachy.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://shay-palachy.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Shay Palachy Affek"}, {"url": "https://shay-palachy.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.8K Followers"}, {"url": "http://www.shaypalachy.com", "anchor_text": "www.shaypalachy.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed0e9ae905e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&user=Shay+Palachy+Affek&userId=ed0e9ae905e3&source=post_page-ed0e9ae905e3--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F738a5f2bbbb2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fextensive-python-testing-on-travis-ci-4c24db9bf961&newsletterV3=ed0e9ae905e3&newsletterV3Id=738a5f2bbbb2&user=Shay+Palachy+Affek&userId=ed0e9ae905e3&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}