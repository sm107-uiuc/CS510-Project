{"url": "https://towardsdatascience.com/python-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7", "time": 1682995562.969554, "path": "towardsdatascience.com/python-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7/", "webpage": {"metadata": {"title": "Python Tutorial: A Name Lookup Table for Fuzzy Name Data Sets | by Felix Kuestahler | Towards Data Science", "h1": "Python Tutorial: A Name Lookup Table for Fuzzy Name Data Sets", "description": "This is the sixth article of our journey into the Python data exploration world. Click on the link above the Title to get a list of all articles. Let\u2019s recap what we have achieved in our last lesson\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/python-tutorial-fuzzy-name-matching-algorithms-7a6f43322cc5", "anchor_text": "our last lesson", "paragraph_index": 1}, {"url": "https://jupyter.org/index.html", "anchor_text": "Jupyter Notebook", "paragraph_index": 4}, {"url": "https://www.anaconda.com/distribution/", "anchor_text": "Ancaconda", "paragraph_index": 6}, {"url": "https://github.com/talfco/clb-sentiment/blob/master/jupyter/lesson6/tutorial6.ipynb", "anchor_text": "my Github project", "paragraph_index": 8}, {"url": "https://betterexplained.com/articles/easy-permutations-and-combinations/", "anchor_text": "betterExplained.com", "paragraph_index": 13}, {"url": "https://www.statisticshowto.datasciencecentral.com/false-alarm-ratio-definition/", "anchor_text": "false alarm", "paragraph_index": 54}, {"url": "https://www.statisticshowto.datasciencecentral.com/false-positive-definition-and-examples/", "anchor_text": "Ref", "paragraph_index": 54}, {"url": "https://towardsdatascience.com/python-tutorial-fuzzy-name-matching-algorithms-7a6f43322cc5", "anchor_text": "tutorial", "paragraph_index": 65}, {"url": "https://github.com/talfco/clb-sentiment", "anchor_text": "Github project", "paragraph_index": 66}, {"url": "https://twitter.com/i/moments/1092507080307720193", "anchor_text": "here", "paragraph_index": 66}, {"url": "https://atnode.ch/", "anchor_text": "https://atnode.ch/", "paragraph_index": 68}], "all_paragraphs": ["This is the sixth article of our journey into the Python data exploration world. Click on the link above the Title to get a list of all articles.", "Let\u2019s recap what we have achieved in our last lesson. We established a person\u2019s name \u201cfuzzy\u201d name matching algorithm by using a normalization step as well as the power of the double metaphone algorithm.", "The algorithm may handle typos, special characters and other differences in the name attribute BUT it fails if any of the name components are missing on the twitter account name side.", "The problem is that the Twitter account name is concatenated by the user and therefore not deterministic (well we assume he isn\u2019t using a pseudonym and there is a chance for a match). As we have seen in the last tutorial, we tried to fix certain anomalies but the worked out solution seems not robust enough. So we have to invest additional time to build up a more robust solution, which tackles the \u201cMissing Name Components\u201d problem by using combinatorics.", "As part of my own ramp up into the Python data science world, I started recently to play around with Jupyter Notebook for Python.", "The Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, data visualization, machine learning, and much more.", "It\u2019s just awesome and via the Ancaconda distribution installed in minutes (well you need some spare disk space on your machine).", "I integrated it into my tutorial work-out process and from now on will describe the build out of algorithms and the coding in more detail in dedicated Jupyter notebooks.", "You can find the Jupyter notebook for this tutorial in my Github project. Using the Jupyter Notebook (side by side with this tutorial), allows you to play around and do real-time modifications of code sequences in the notebook. Amazingly Github renders a Jupyter Notebook file in its origin and easily readable Web view format. In case you want to look at the read-only format!", "What we want to achieve is that our algorithm is capable of managing missing name components. In the below example we could achieve a match by omitting the 2nd name component on both sides.", "Obviously, we want a generic algorithm which can handle any complexity in the twitter account name, i.e. a match should be possible as well in a naming construct like:", "The first problem we tackle with combinatorics, the second one, we solved already by applying the well known double metaphone algorithm.", "To derive any kind of Name Component constellations in case of missing elements, we have to understand the basic concepts in combinatorics.", "Let\u2019s answer this question first. Too long away from school? Check out this helpful six minutes video (from betterExplained.com) which freshes up the various concepts.", "Python provides in its standard library itertools already the function permutations and combinations which we want to inspect a little bit further.", "Let\u2019s apply it on our name sample to understand its mechanism. First the combinations function", "As well as the permutations function:", "As you can see within the permutation the order of a name component plays a role. There is a tuple for ('peter','alfred') as well as one for ('alfred','peter'). Within the combination the order of a name component is irrelevant.", "For us, the order plays not a role, 'peter escher' is treated as'escher peter' We anyway sort the name components before we apply the double methaphone algorithm. Therefore we use the combination function.", "Always think about \u201cpin code\u201d as a crib for \u201cpermutations\u201d. Any pin code lock mechanism is based on the number of permutations of a given set of \u201cdigits\u201d out of 10 elements: \u201c1234\u201d doesn\u2019t unlock the screen which is locked with \u201c4321\u201d.", "We now build up a lookup directory class which allows us to store name component combinations and compare them to a person name which we got from the Twitter API.", "The method add_person_to_lookup_table calculates all combinations of the provided name tuple, generates for each combination the associated double metaphone key and stores the key together with the unique person id in the lookup directory.", "The sequence diagram of the method is shown below, let\u2019s look at the various helper methods which are required.", "As a first step, we generate all combinations of name tuple. The following method calculates all combinations of a name tuple. For example for a 3 element tuple, the array built up consists of", "For example, the below 3 name tuple are resulting in the following list of combinations.", "In this method, we build up the directory by adding each tuple to our lookup directory.", "Our lookup directory is made of a tuple of two dictionaries, which are used store the key, value pairs. Our keys are the double metaphone tuple created from a name, and the value is the unique person identifier.", "On code line 3 we create a normalized name string out of a name component tuple. The method looks as follows", "The result is a lower case string of the sorted concatenated tuple name elements:", "The string is used to generate the double metaphone tuple, which are our keys for the dictionaries.", "On code line 5 and 10, we check if we have already an entry with the same key in the dictionary.", "Finally, we have the method ready, which allows us to add name tuples to the lookup directory.", "As an example, we add the following three persons to our lookup table.", "As we can see in the output, our entry for Peter with the key 'PTR' has an array of three-person identifiers.", "Our lookup directory is now ready and potentially filled with the person name data, which we retrieved via our Government API.", "What is missing the match_name method which allows us to lookup a name which we retrieved via the Twitter API. We are going to tackle this now.", "Our first step is to collect all lookup directory entries - which match our searched name tuple\u200a\u2014\u200ainto a result list.", "Running the match_name method on our sample loaded lookup directory produces the following output:", "As we can see, we have two tuples which point to one person_id and one tuple peter which points to 3 persons (Obviously surnames is re-used by multiple persons). The two tuples pointing to one person have the same id 'A123'. That means our match identified exactly one person. Would we have single person tuples in our result which are pointing to different persons would mean our match isn't unique.", "So we enhance our method to do this uniqueness check, as well (code line 12\u201320):", "Let\u2019s verify the algorithm on our test sample (as explained above all the content is also available as an interactive Jupyter notebook)", "So we are ready to apply the new lookup strategy to our program.", "We enhance our abstract GovAPI class by integrating a NameLookupDirectory class instance.", "We enhance add_person_record with the code sequence to build up our lookup directory (code line 22\u201329)", "We also add a new method for the match_name check, which will be called when we try to merge table records.", "The belowcalculate_name_matching method is not required anymore.", "In this class we have to refactor the calculate_name_matching method as well, we now call for the matching, thematch_name method of the govAPI class instance (line 5).", "If we have a match (7\u201314), we retrieve the full person record from the govAPI class.", "Remember that thecalculate_name_matching method gets called via the Panda apply method on each row record and as a result, the row will be complemented with the additional new columns:", "When we execute our program once again, our table Twitter retrieved table looks like this:", "In col_match1 we list the govAPI unique id and in col_match2 our result tuple list, which was analyzed. E.g.", "For the Twitter Name \u2018Christian Levrat\u2019 we found three entries in our lookup table:", "Our matching algorithm had a positive match because both entries are pointing to the same person id.", "Let\u2019s check out algorithm for false positives.", "A false positive is where you receive a positive result for a test, when you should have received a negative results. It\u2019s sometimes called a \u201cfalse alarm\u201d or \u201cfalse positive error.\u201d It\u2019s usually used in the medical field, but it can also apply to other areas (like software testing). (Ref)", "False positive means there are problems with the accuracy of our algorithm.", "When we browse through our Twitter table, we encounter the records below.", "They are both pointing to the same person id. When checking the govAPI table for the record, we get back the following record \u201c74 Christoph Eymann\u201d, which hasn\u2019t a Twitter account and therefore cannot be found in the Twitter table.", "\u201cChristophe Darbellay\u201d as well as \u201cChristoph M\u00f6rgeli\u201d were in the past politicians of the Swiss council and therefore not part of the govAPI list which we filtered for active members only.", "\u201cChristophe\u201d as well as \u201cChristoph\u201d are converted to the same double metaphone string and are matching to the govAPI record 74 of \u201cChristoph Leymann\u201d. Due to the fact that the govAPI list has only one person with a surname \u201cChristoph\u201d our algorithm returns a false positive for any person with a surname \u201cChristoph(e)\u201d and match it to \u201cChristoph Leymann\u201d. Would the govAPI list two persons with the surname \u201cChristoph\u201d the match record would point to two persons id and wouldn\u2019t unique anymore. Our algorithm wouldn\u2019t result in this case a false positive.", "Well, we have to readjust our algorithm and make it more strict. That means we change the condition of our name tuple generator that we", "only allow name component tuples which have at least the last name as an element.", "So we readjust our method and ask for the position of the last name in the tuple by the caller, when he adds a person to the directory.", "In the add_combinations_to_directory method we now add only tuples which contain the last_name (line 3).", "Rerunning our program results in the following matching statistics.", "This is actually not better as in our first attempt (refer to the following tutorial), but we got a more robust matching algorithm. It looks like that the used Twitter politician list isn\u2019t really up-to-date in context active members of the federal assembly. However, that\u2019s something for the next lesson, where we want to finalize the topic of data matching and move on.", "The source code you can find in the corresponding Github project, a list of all other articles here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Exploring the emerging world of decentralization. All content and opinion expressed in the context of my legal entity https://atnode.ch/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F2580e4eca6e7&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.cloudburo.net/?source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": ""}, {"url": "https://medium.cloudburo.net/?source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": "Felix Kuestahler"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F15626f27740c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&user=Felix+Kuestahler&userId=15626f27740c&source=post_page-15626f27740c----2580e4eca6e7---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2580e4eca6e7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2580e4eca6e7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/python-stat-tutorial", "anchor_text": "Python Statistic Tutorial Series"}, {"url": "https://towardsdatascience.com/python-tutorial-fuzzy-name-matching-algorithms-7a6f43322cc5", "anchor_text": "our last lesson"}, {"url": "https://jupyter.org/index.html", "anchor_text": "Jupyter Notebook"}, {"url": "https://www.anaconda.com/distribution/", "anchor_text": "Ancaconda"}, {"url": "https://github.com/talfco/clb-sentiment/blob/master/jupyter/lesson6/tutorial6.ipynb", "anchor_text": "my Github project"}, {"url": "https://betterexplained.com/articles/easy-permutations-and-combinations/", "anchor_text": "betterExplained.com"}, {"url": "https://unsplash.com/photos/eYZpTMc7hno?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Mirza Babic"}, {"url": "https://unsplash.com/search/photos/atm?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://www.statisticshowto.datasciencecentral.com/false-alarm-ratio-definition/", "anchor_text": "false alarm"}, {"url": "https://www.statisticshowto.datasciencecentral.com/false-positive-definition-and-examples/", "anchor_text": "Ref"}, {"url": "https://towardsdatascience.com/python-tutorial-fuzzy-name-matching-algorithms-7a6f43322cc5", "anchor_text": "tutorial"}, {"url": "https://github.com/talfco/clb-sentiment", "anchor_text": "Github project"}, {"url": "https://twitter.com/i/moments/1092507080307720193", "anchor_text": "here"}, {"url": "https://medium.com/tag/data-science?source=post_page-----2580e4eca6e7---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----2580e4eca6e7---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----2580e4eca6e7---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/tutorial?source=post_page-----2580e4eca6e7---------------tutorial-----------------", "anchor_text": "Tutorial"}, {"url": "https://medium.com/tag/python-stat-tutorial?source=post_page-----2580e4eca6e7---------------python_stat_tutorial-----------------", "anchor_text": "Python Stat Tutorial"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2580e4eca6e7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&user=Felix+Kuestahler&userId=15626f27740c&source=-----2580e4eca6e7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2580e4eca6e7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&user=Felix+Kuestahler&userId=15626f27740c&source=-----2580e4eca6e7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2580e4eca6e7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F2580e4eca6e7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----2580e4eca6e7---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----2580e4eca6e7--------------------------------", "anchor_text": ""}, {"url": "https://medium.cloudburo.net/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.cloudburo.net/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Felix Kuestahler"}, {"url": "https://medium.cloudburo.net/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "635 Followers"}, {"url": "https://atnode.ch/", "anchor_text": "https://atnode.ch/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F15626f27740c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&user=Felix+Kuestahler&userId=15626f27740c&source=post_page-15626f27740c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F1f17bfe73f81&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-tutorial-a-name-lookup-table-for-fuzzy-name-data-sets-2580e4eca6e7&newsletterV3=15626f27740c&newsletterV3Id=1f17bfe73f81&user=Felix+Kuestahler&userId=15626f27740c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}