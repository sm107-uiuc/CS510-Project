{"url": "https://towardsdatascience.com/machine-learning-visualization-fcc39a1e376a", "time": 1683014848.595862, "path": "towardsdatascience.com/machine-learning-visualization-fcc39a1e376a/", "webpage": {"metadata": {"title": "Machine Learning Visualization. A collection of a few interesting\u2026 | by Pier Paolo Ippolito | Towards Data Science", "h1": "Machine Learning Visualization", "description": "As part of any Data Science project, Data Visualization plays an important part in order to learn more about the available data and to identify any main pattern. In this article, we are going to\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/interactive-data-visualization-167ae26016e8", "anchor_text": "Data Visualization", "paragraph_index": 0}, {"url": "https://github.com/pierpaolo28/Data-Visualization/tree/master/Machine%20Learning%20Visualization", "anchor_text": "Github", "paragraph_index": 3}, {"url": "https://www.kaggle.com/pierpaolo28/notebooks", "anchor_text": "Kaggle Accounts", "paragraph_index": 3}, {"url": "https://towardsdatascience.com/hyperparameters-optimization-526348bb8e2d", "anchor_text": "my previous articles", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Parallel_coordinates", "anchor_text": "parallel coordinates plot", "paragraph_index": 6}, {"url": "https://www.kaggle.com/pierpaolo28/parallel-coordinates-plots?scriptVersionId=35973765", "anchor_text": "this link.", "paragraph_index": 8}, {"url": "https://www.wandb.com/articles/hyperparameter-tuning-as-easy-as-1-2-3", "anchor_text": "Weights & Biases Sweeps", "paragraph_index": 9}, {"url": "https://www.datawrapper.de/", "anchor_text": "Data Wrapper", "paragraph_index": 10}, {"url": "https://blog.datawrapper.de/datawrapper-python-package/", "anchor_text": "Python wrapper", "paragraph_index": 11}, {"url": "https://developer.datawrapper.de/docs/chart-types", "anchor_text": "this link.", "paragraph_index": 15}, {"url": "https://towardsdatascience.com/feature-selection-techniques-1bfab5fe0784", "anchor_text": "Feature Selection technique", "paragraph_index": 20}, {"url": "https://scikit-learn.org/stable/modules/tree.html", "anchor_text": "export_graphviz from sklearn.tree", "paragraph_index": 21}, {"url": "https://github.com/parrt/dtreeviz", "anchor_text": "dtreeviz", "paragraph_index": 21}, {"url": "http://rasbt.github.io/mlxtend/user_guide/plotting/plot_decision_regions/", "anchor_text": "Mlxtend", "paragraph_index": 26}, {"url": "https://www.kaggle.com/pierpaolo28/machine-learning-visualization-5", "anchor_text": "this link.", "paragraph_index": 27}, {"url": "https://pierpaolo28.github.io/Projects/project9.html", "anchor_text": "this link.", "paragraph_index": 28}, {"url": "https://towardsdatascience.com/feature-extraction-techniques-d619b56e31be", "anchor_text": "feature extraction techniques", "paragraph_index": 29}, {"url": "https://github.com/Prodicode/ann-visualizer", "anchor_text": "ANN Visualiser", "paragraph_index": 30}, {"url": "https://github.com/stared/livelossplot", "anchor_text": "Livelossplot", "paragraph_index": 31}, {"url": "https://pierpaolo28.github.io/Projects/ONNX/home.html?fbclid=IwAR13tKnQFfobSq4udV-N9FMfFZ6wUmAvU7GVn5yl0Cj4ttOw3uyl6TNNbMw", "anchor_text": "this link on my personal website", "paragraph_index": 39}, {"url": "https://towardsdatascience.com/feature-extraction-techniques-d619b56e31be", "anchor_text": "feature extraction technique", "paragraph_index": 42}, {"url": "https://github.com/pierpaolo28/Data-Visualization/tree/master/Machine%20Learning%20Visualization", "anchor_text": "Github account", "paragraph_index": 44}, {"url": "https://towardsdatascience.com/need-for-explainability-in-ai-and-robotics-75dc6077c9fa", "anchor_text": "Explainable AI", "paragraph_index": 45}, {"url": "https://captum.ai/", "anchor_text": "Captum", "paragraph_index": 47}, {"url": "https://github.com/EthicalML/XAI", "anchor_text": "XAI", "paragraph_index": 47}, {"url": "https://www.scikit-yb.org/en/latest/", "anchor_text": "Yellowbrick library", "paragraph_index": 49}, {"url": "https://www.tensorflow.org/tensorboard", "anchor_text": "TensorBoard", "paragraph_index": 50}, {"url": "https://www.wandb.com/", "anchor_text": "Weights & Biases", "paragraph_index": 50}, {"url": "https://neptune.ai/", "anchor_text": "Neptune.ai", "paragraph_index": 50}, {"url": "https://medium.com/@pierpaoloippolito28?source=post_page---------------------------", "anchor_text": "follow me on Medium", "paragraph_index": 52}, {"url": "http://eepurl.com/gwO-Dr?source=post_page---------------------------", "anchor_text": "mailing list", "paragraph_index": 52}, {"url": "https://linktr.ee/pierpaolo28", "anchor_text": "https://linktr.ee/pierpaolo28", "paragraph_index": 54}], "all_paragraphs": ["As part of any Data Science project, Data Visualization plays an important part in order to learn more about the available data and to identify any main pattern.", "Wouldn\u2019t be great if it could be possible to make as visually intuitive as possible also the Machine Learning part of the analysis?", "In this article, we are going to explore some techniques which could help us to face this challenge such as: Parallel Coordinates Plots, Summary Data Tables, drawing ANNs graphs and many more.", "All the code used in this article is freely available on my Github and Kaggle Accounts.", "Hyperparameter Optimization is one of the most common activities in Machine/Deep Learning. Machine Learning models tuning is a type of optimization problem. We have a set of hyperparameters (eg. learning rate, number of hidden units, etc\u2026) and we aim to find out the right combination of their values which can help us to find either the minimum (eg. loss) or the maximum (eg. accuracy) of a function.", "In one of my previous articles, I went into the details of how what kind of techniques we can use in this ambit and how to test them in a 3D space, in this article I will instead show you how we can accomplish that for reporting in a 2D space.", "One of the best solutions for this type of task is to use a parallel coordinates plot (Figure 1). Using this type of plot, we can in fact easily compare different variables (eg. features) together in order to discover possible relationships. In the case of Hyperparameters Optimization, this can be used as a simple tool to inspect what combination of parameters can give us the greatest test accuracy. Another possible use of parallel coordinates plots in Data Analysis is to inspect relationships in values between the different features in a data frame.", "In Figure 1, is available a practical example created using Plotly.", "Different techniques can be used in order to create Parallel Coordinates plots in Python such as using Pandas, Yellowbrick, Matplotlib or Plotly. Step by step examples using all these different methods are available in this my notebook at this link.", "Finally, another possible solution which can be used in order to create this type of plot is by using Weights & Biases Sweeps functionality. Weights & Biases is a free tool which can be used in order to automatically create plots and logs of different machine learning tasks (eg. learning curves, graphing models, etc\u2026) for either individuals or teams.", "Data Wrapper is a free online tool designed for professional charts creation. This tool is for example used in articles by journals such as The New York Times, Vox and WIRED. No sign-in is required and all the process can be completely done online.", "This year has been additionally created a Python wrapper for this tool. This can be easily installed using:", "In order to use the Python API, we additionally need to sign-up for Data Wrapper, go to the settings and create an API Key. Using this API Key, we would then be able to use remotely Data Wrapper.", "At this point, we can easily create a Bar Plot for example, by using the following few lines of code and passing a Pandas data frame as an input of our create_chart function.", "The resulting graph is available in the figure below.", "Once published our chart, we can then find it in the list of created charts on our Data Wrapper Account. Clicking on our chart, we will then find a list of different options which we can use in order to easily share our graph (eg. Embed, HTML, PNG, etc\u2026). A full list of all the different types of supported charts is available at this link.", "When working with time-series data, it can be really handy at times to be able to quickly understand on which datapoints our model is performing poorly, in order to try to understand what limitations it might be facing.", "One possible approach is to create a summary table with the actual and predicted values and some form of metrics summarising how well/bad a data point has been predicted.", "Using Plotly, this can be easily done by creating a plotting function:", "Calling this function would then result in the following output (feel free to test the table in Figure 3!):", "Decision Trees are one of the most easily explainable types of Machine Learning model. Thanks to their basilar structure, it is easily possible to examine how the algorithm decides to make its decision by looking at the conditions on the different branches of the tree. Additionally, Decision Trees can also be used as a Feature Selection technique, considering that the algorithm puts at the top levels of the tree the features which think are most valuable for our desired classification/regression task. In this way, the features at the bottom of the tree could be discarded since carrying less information.", "One of the easiest ways to visualise a classification/regression decision tree is to use export_graphviz from sklearn.tree. In this article, a different and more complete approach is provided using the dtreeviz library.", "Using this library, a Classification Decision Tree can be created by just using the following few lines of code:", "The resulting plot is available in Figure 4.", "In Figure 4, the different classes are represented by a different colour. The feature distributions of all the different classes are represented in the tree\u2019s starting node. As long as we move down each branch the algorithm tries then to best separate the different distributions using the feature described underneath each of the node graphs. The circles generated alongside the distributions represent the number of elements correctly classified after following a certain node, the bigger the number of elements the bigger the size of the circle.", "An example using a Decision Tree Regressor is instead shown in Figure 5.", "Decision Boundaries are one of the easiest approaches to graphically understand how a Machine Learning model is making its predictions. One of the easiest ways to plot decision boundaries in Python is to use Mlxtend. This library, can in fact be used for plotting decision boundaries of either Machine Learning and Deep Learning models. A simple example is shown in Figure 6.", "Some possible alternatives to Mlxtend are: Yellowbrick, Plotly or a plain Sklearn and Numpy implementation. Step by step examples using all these different methods are available in this my notebook at this link.", "Additionally, different animated versions of decision boundaries converging during training are available on my website at this link.", "One of the main limitations of plotting decision boundaries is that they can only be easily visualised in two or three dimensions. Due to these limitations, it might be therefore necessary most of the times to reduce the dimensionality of our input features (using some form of feature extraction techniques) before plotting the decision boundary.", "Another technique which can be quite useful when creating new neural network architectures is visualising their structure. This can be easily done using ANN Visualiser (Figure 7).", "Automatically being able to plot on live a neural network loss and accuracy during training and validation can be of great help in order to immediately see if the network is making any progress over time. This can be easily done by using Livelossplot.", "In Figure 8, is available an example of loss plot created in real-time in Pytorch while training a Variational Autoencoder (VAE).", "Using Livelossplot, this can be easily done by storing all the metrics we want to record in a dictionary and update the plot at the end of each iteration. This same procedure can then be applied if we are interested in creating multiple graphs (eg. one for the loss and one with the overall accuracy).", "Livelossplot can additionally be used with other libraries such as Keras, Pytorch-Lightin, Bokeh, etc\u2026", "Variational Autoencoders (VAE) are a type of probabilistic generative model used in order to create a latent representation of some input data (eg. images) able to concisely understand the original data and generate brand new data from it (eg. training a VAE model with different images of car designs, could then enable to model to create brand new imaginative car designs).", "Continuing from the example Variational Autoencoder trained using Livelossplot, we can even make our model more interesting by examining how the latent space (Figure 9) varies from one iteration to another (and therefore how much our model improved to distinguish the different classes over time).", "This can be easily done by adding the following function in the previous training loop:", "Finally, a similar procedure can be applied in order to visualise live also how our VAE improves from iteration to iteration in generating realistic images (Figure 10).", "A practical demonstration of a Variational Autoencoder deployed online using ONNX in order to make inference on the fly, is available at this link on my personal website.", "Neural Network Embeddings are a class of neural networks designed in order to learn how to convert some form of categorical data into numerical data. Using Embeddings can be considerably advantageous than using other techniques such as One Hot Encoding considering that, while converting the data, they are able to learn about its characteristics and therefore construct a more succinct representation (creating a latent space). Two of the most famous types of pre-trained word embeddings are word2vec and Glove.", "As a simple example, we are now going to plot an embed space representing different books authors. First of all, we need to create an train a model on some available data and then access the trained weights of the model embedded layer (in this case called embed) and store them in a data frame. Once this process is done, we then just have to plot the three different coordinates (Figure 11).", "In this example, the embedding dimensions of the network have been set directly to 3 in order to then easily create the 3D visualization. Another possible solution could have been to instead use a higher embedding output size and then apply some form of feature extraction technique (eg. t-SNE, PCA, etc\u2026) in order to visualise the results.", "Another interesting technique which can be used to visualise categorical data is Wordclouds (Figure 12). This type of representation, can, for example, be realised by creating a dictionary of book authors names and their respective frequency count in the dataset. Authors which appears more frequently in the dataset will be then represented in the figure with greater font size.", "As always, the complete code is available on my Github account.", "Explainable AI is nowadays a growing field of research. Use of AI in decision-making applications (such as employment) has recently caused some concerns both for individuals and authorities. This is because, when working with deep neural networks, it is currently not possible (at least to a full extent) to understand the decision-making process the algorithm performs when having to carry out a predetermined task. Because of this lack of transparency in the decision-making process, perplexities can arise from the public regarding the trustworthiness of the model itself. Therefore, the need for Explainable AI is now becoming the next prefixed evolutionary step in order to prevent the presence of any form of bias in AI models.", "During the last few years, different visualization techniques have been introduced in order to make Machine Learning more explainable such as:", "If you are interested in finding out more about how to make Machine Learning models more explainable, two of the most interesting libraries currently available in Python in order to apply Explainable AI in Deep Learning are Captum by Pytorch and XAI.", "As this research area is in constant improvement, I will aim to cover all these different topics (and more) in a future article dedicated to just Explainable AI.", "In case you are interested in finding out more Machine Learning Visualization techniques, the Python Yellowbrick library has a high focus on this topic. Some examples of visualizer provided are: features ranking, ROC/AUC curves, K-Elbow plots and various Text Visualization techniques.", "Finally, over the last few years, different frameworks have started being developed in order to make Machine Learning visualization easier such as: TensorBoard, Weights & Biases and Neptune.ai.", "I hope you enjoyed this article, thank you for reading!", "If you want to keep updated with my latest articles and projects follow me on Medium and subscribe to my mailing list. These are some of my contacts details:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Analytics @ Swiss Re, TDS Associate Editor and Freelancer. https://linktr.ee/pierpaolo28"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ffcc39a1e376a&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://pierpaoloippolito28.medium.com/?source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": ""}, {"url": "https://pierpaoloippolito28.medium.com/?source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": "Pier Paolo Ippolito"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb8391a6a5f1a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&user=Pier+Paolo+Ippolito&userId=b8391a6a5f1a&source=post_page-b8391a6a5f1a----fcc39a1e376a---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffcc39a1e376a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffcc39a1e376a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/getting-started", "anchor_text": "Getting Started"}, {"url": "https://towardsdatascience.com/interactive-data-visualization-167ae26016e8", "anchor_text": "Data Visualization"}, {"url": "https://github.com/pierpaolo28/Data-Visualization/tree/master/Machine%20Learning%20Visualization", "anchor_text": "Github"}, {"url": "https://www.kaggle.com/pierpaolo28/notebooks", "anchor_text": "Kaggle Accounts"}, {"url": "https://towardsdatascience.com/hyperparameters-optimization-526348bb8e2d", "anchor_text": "my previous articles"}, {"url": "https://en.wikipedia.org/wiki/Parallel_coordinates", "anchor_text": "parallel coordinates plot"}, {"url": "https://www.kaggle.com/pierpaolo28/parallel-coordinates-plots?scriptVersionId=35973765", "anchor_text": "this link."}, {"url": "https://www.wandb.com/articles/hyperparameter-tuning-as-easy-as-1-2-3", "anchor_text": "Weights & Biases Sweeps"}, {"url": "https://www.datawrapper.de/", "anchor_text": "Data Wrapper"}, {"url": "https://blog.datawrapper.de/datawrapper-python-package/", "anchor_text": "Python wrapper"}, {"url": "https://developer.datawrapper.de/docs/chart-types", "anchor_text": "this link."}, {"url": "https://towardsdatascience.com/feature-selection-techniques-1bfab5fe0784", "anchor_text": "Feature Selection technique"}, {"url": "https://scikit-learn.org/stable/modules/tree.html", "anchor_text": "export_graphviz from sklearn.tree"}, {"url": "https://github.com/parrt/dtreeviz", "anchor_text": "dtreeviz"}, {"url": "http://rasbt.github.io/mlxtend/user_guide/plotting/plot_decision_regions/", "anchor_text": "Mlxtend"}, {"url": "https://www.kaggle.com/pierpaolo28/machine-learning-visualization-5", "anchor_text": "this link."}, {"url": "https://pierpaolo28.github.io/Projects/project9.html", "anchor_text": "this link."}, {"url": "https://towardsdatascience.com/feature-extraction-techniques-d619b56e31be", "anchor_text": "feature extraction techniques"}, {"url": "https://github.com/Prodicode/ann-visualizer", "anchor_text": "ANN Visualiser"}, {"url": "https://github.com/stared/livelossplot", "anchor_text": "Livelossplot"}, {"url": "https://pierpaolo28.github.io/Projects/ONNX/home.html?fbclid=IwAR13tKnQFfobSq4udV-N9FMfFZ6wUmAvU7GVn5yl0Cj4ttOw3uyl6TNNbMw", "anchor_text": "this link on my personal website"}, {"url": "https://towardsdatascience.com/feature-extraction-techniques-d619b56e31be", "anchor_text": "feature extraction technique"}, {"url": "https://github.com/pierpaolo28/Data-Visualization/tree/master/Machine%20Learning%20Visualization", "anchor_text": "Github account"}, {"url": "https://towardsdatascience.com/need-for-explainability-in-ai-and-robotics-75dc6077c9fa", "anchor_text": "Explainable AI"}, {"url": "https://captum.ai/", "anchor_text": "Captum"}, {"url": "https://github.com/EthicalML/XAI", "anchor_text": "XAI"}, {"url": "https://www.scikit-yb.org/en/latest/", "anchor_text": "Yellowbrick library"}, {"url": "https://www.tensorflow.org/tensorboard", "anchor_text": "TensorBoard"}, {"url": "https://www.wandb.com/", "anchor_text": "Weights & Biases"}, {"url": "https://neptune.ai/", "anchor_text": "Neptune.ai"}, {"url": "https://medium.com/@pierpaoloippolito28?source=post_page---------------------------", "anchor_text": "follow me on Medium"}, {"url": "http://eepurl.com/gwO-Dr?source=post_page---------------------------", "anchor_text": "mailing list"}, {"url": "https://uk.linkedin.com/in/pier-paolo-ippolito-202917146?source=post_page---------------------------", "anchor_text": "Linkedin"}, {"url": "https://pierpaolo28.github.io/blog/?source=post_page---------------------------", "anchor_text": "Personal Blog"}, {"url": "https://pierpaolo28.github.io/?source=post_page---------------------------", "anchor_text": "Personal Website"}, {"url": "https://towardsdatascience.com/@pierpaoloippolito28?source=post_page---------------------------", "anchor_text": "Medium Profile"}, {"url": "https://github.com/pierpaolo28?source=post_page---------------------------", "anchor_text": "GitHub"}, {"url": "https://www.kaggle.com/pierpaolo28?source=post_page---------------------------", "anchor_text": "Kaggle"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----fcc39a1e376a---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----fcc39a1e376a---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----fcc39a1e376a---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/programming?source=post_page-----fcc39a1e376a---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/getting-started?source=post_page-----fcc39a1e376a---------------getting_started-----------------", "anchor_text": "Getting Started"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffcc39a1e376a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&user=Pier+Paolo+Ippolito&userId=b8391a6a5f1a&source=-----fcc39a1e376a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffcc39a1e376a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&user=Pier+Paolo+Ippolito&userId=b8391a6a5f1a&source=-----fcc39a1e376a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffcc39a1e376a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ffcc39a1e376a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----fcc39a1e376a---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----fcc39a1e376a--------------------------------", "anchor_text": ""}, {"url": "https://pierpaoloippolito28.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://pierpaoloippolito28.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Pier Paolo Ippolito"}, {"url": "https://pierpaoloippolito28.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "5.1K Followers"}, {"url": "https://linktr.ee/pierpaolo28", "anchor_text": "https://linktr.ee/pierpaolo28"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb8391a6a5f1a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&user=Pier+Paolo+Ippolito&userId=b8391a6a5f1a&source=post_page-b8391a6a5f1a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F4e32d8fa9b0e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-visualization-fcc39a1e376a&newsletterV3=b8391a6a5f1a&newsletterV3Id=4e32d8fa9b0e&user=Pier+Paolo+Ippolito&userId=b8391a6a5f1a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}