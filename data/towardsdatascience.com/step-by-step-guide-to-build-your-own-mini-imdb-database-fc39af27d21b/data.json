{"url": "https://towardsdatascience.com/step-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b", "time": 1682993256.8418171, "path": "towardsdatascience.com/step-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b/", "webpage": {"metadata": {"title": "Step-by-step guide to build your own \u2018mini IMDB\u2019 database | by Tirthajyoti Sarkar | Towards Data Science", "h1": "Step-by-step guide to build your own \u2018mini IMDB\u2019 database", "description": "How to use simple Python libraries and built-in capabilities to scrape the web for movie information and store them in a local SQLite database."}, "outgoing_paragraph_urls": [{"url": "https://docs.python.org/3/howto/urllib2.html", "anchor_text": "urllib module", "paragraph_index": 4}, {"url": "http://www.omdbapi.com/", "anchor_text": "Open Movie Database (OMDB) website", "paragraph_index": 5}, {"url": "http://javascript.crockford.com/", "anchor_text": "JavaScript Programming Language", "paragraph_index": 7}, {"url": "http://www.ecma-international.org/publications/files/ecma-st/ECMA-262.pdf", "anchor_text": "Standard ECMA-262 3rd Edition \u2014 December 1999", "paragraph_index": 7}, {"url": "http://docs.python-guide.org/en/latest/scenarios/json/", "anchor_text": "The json library", "paragraph_index": 8}, {"url": "https://docs.python.org/3/library/functions.html#open", "anchor_text": "open()", "paragraph_index": 9}, {"url": "https://docs.python.org/3/library/os.path.html#module-os.path", "anchor_text": "os.path", "paragraph_index": 9}, {"url": "https://docs.python.org/3/library/fileinput.html#module-fileinput", "anchor_text": "fileinput", "paragraph_index": 9}, {"url": "https://docs.python.org/3/library/tempfile.html#module-tempfile", "anchor_text": "tempfile", "paragraph_index": 9}, {"url": "https://docs.python.org/3/library/shutil.html#module-shutil", "anchor_text": "shutil", "paragraph_index": 9}, {"url": "https://www.pythoncentral.io/introduction-to-sqlite-in-python/", "anchor_text": "sqlite3 module", "paragraph_index": 10}, {"url": "https://github.com/tirthajyoti/Web-Database-Analytics-Python/blob/master/Movie_Database_Build.ipynb", "anchor_text": "boiler plate code is available", "paragraph_index": 11}, {"url": "https://github.com/tirthajyoti", "anchor_text": "Github repository", "paragraph_index": 11}, {"url": "https://github.com/tirthajyoti/Web-Database-Analytics-Python", "anchor_text": "please see my repository.", "paragraph_index": 21}, {"url": "https://github.com/tirthajyoti?tab=repositories", "anchor_text": "GitHub repositories", "paragraph_index": 22}, {"url": "https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/", "anchor_text": "add me on LinkedIn", "paragraph_index": 22}, {"url": "https://twitter.com/tirthajyotiS", "anchor_text": "follow me on Twitter.", "paragraph_index": 22}], "all_paragraphs": ["Often after a few introductory courses in Python, beginners wonder how to write a cool Python program which demonstrates somewhat advanced capabilities of the language such as web scraping or database manipulation. In this article, I will show how to use simple Python libraries and built-in capabilities to scrape the web for movie information and store them in a local SQLite database, which can later be queried for data analytics with movie info. Think of this as a project to build your own mini IMDB database!", "This type of data engineering task \u2014 gathering from web and building a database connection \u2014 is often the first step in a data analytics project. Before you do any cool predictive modeling, you need to master this step. This step is often messy and unstructured i.e. there is no one-shot formula or one-stop shop library which does it all for you. So, you have to extract the data from web, examine its structure and build your code to flawlessly crawl through it.", "Specifically, this demo will show the usage of following features,", "Brief descriptions of these are given below,", "The gateway from Python to web is done through urllib module. It is a Python module for fetching URLs (Uniform Resource Locators). It offers a very simple interface, in the form of the urlopen function. This is capable of fetching URLs using a variety of different protocols. It also offers a slightly more complex interface for handling common situations \u2014 like basic authentication, cookies, proxies and so on. These are provided by objects called handlers and openers.", "Web scraping is often done by API services hosted by external websites. Think of them as repository or remote database which you can query by sending search string from your own little program. In this particular example, we will take help from Open Movie Database (OMDB) website which gives an API key to registered users for downloading information about movies. Because it is a free service, they have a restriction of 1000 requests per day. Note, you have to register on their website and get your own API key for making request from your Python program.", "The data obtained from this API service comes back as a JSON file. Therefore, we need to parse/convert the JSON file into a Python object, which we can work with easily.", "JSON (JavaScript Object Notation) is a lightweight data-interchange format. It is easy for humans to read and write. It is easy for machines to parse and generate. It is based on a subset of the JavaScript Programming Language, Standard ECMA-262 3rd Edition \u2014 December 1999. JSON is a text format that is completely language independent but uses conventions that are familiar to programmers of the C-family of languages, including C, C++, C#, Java, JavaScript, Perl, Python, and many others. These properties make JSON an ideal data-interchange language.", "The json library can parse JSON pages from strings or files. The library parses JSON into a Python dictionary or list. It can also convert Python dictionaries or lists into JSON strings. It is an extremely useful module and very simple to learn. This module is likely to be used in any Python based web data analytics program as the majority of webpages nowadays use JSON as primary object type while returning data.", "This module provides a portable way of using operating system dependent functionality. If you just want to read or write a file see open(), if you want to manipulate paths, see the os.path module, and if you want to read all the lines in all the files on the command line see the fileinput module. For creating temporary files and directories see the tempfile module, and for high-level file and directory handling see the shutil module. In this demo, we will use OS module methods for checking existing directory and manipulate files to save some data.", "SQLite is a C library that provides a lightweight disk-based database that doesn\u2019t require a separate server process and allows accessing the database using a nonstandard variant of the SQL query language. Some applications can use SQLite for internal data storage. It\u2019s also possible to prototype an application using SQLite and then port the code to a larger database such as PostgreSQL or Oracle. The sqlite3 module of Python provides a SQL interface compliant with the DB-API 2.0 specification.", "The flow of the program is shown below. Please note that the boiler plate code is available in my Github repository. Please download/fork/star if you like it.", "The basic idea is to send request to external API with a movie title that is entered by the user. The program then tries to download the data and if successful, prints it out.", "Just for example, the JSON file looks like following,", "If the program finds a link to an image file for the poster of the movie, it asks the user if (s)he wants to download it. If user says OK, it downloads the image file to a local directory with the movie title as file name.", "Next, it asks the user if (s)he wants to save some basic information about the movie in a local database. If user gives the nod, it creates or inserts into a SQLite database a subset of the downloaded movie information.", "Here is the function definition to save in the database.", "The notebook also contains a function to save the information in an Excel file from an existing database.", "You will notice that the program uses a secret API key for accessing the data. This key can be obtained freely by going to OMDB website and be used for up to 1000 times a day. It is a very common practice to use a secret (user-specific) key for web scraping. The way I protect the integrity of my personal API key is that I create a small JSON file in the same directory of the Jupyter notebook, called APIkeys.json. The content of this file is hidden from the external user who will see my code. My Jupyter notebook reads this JSON file as a dictionary and copies the key corresponding to the movie website and appends that to the encoded URL request string that is sent by the urllib.request method.", "This article goes over a demo Python notebook to illustrate how to retrieve basic information about movies using a free API service and to save the movie posters and the downloaded information in a lightweight SQLite database.", "Above all, it demonstrates simple utilization of Python libraries such as urllib, json, and sqlite3, which are extremely useful (and powerful) tools for data analytics/ web data mining tasks.", "I hope readers can benefit from the provided Notebook file and build upon it as per their own requirement and imagination. For more web data analytics notebooks, please see my repository.", "If you have any questions or ideas to share, please contact the author at tirthajyoti[AT]gmail.com. Also you can check author\u2019s GitHub repositories for other fun code snippets in Python, R, or MATLAB and machine learning resources. If you are, like me, passionate about machine learning/data science, please feel free to add me on LinkedIn or follow me on Twitter.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Sr. Director of AI/ML platform | Stories on Artificial Intelligence, Data Science, and ML | Speaker, Open-source contributor, Author of multiple DS books"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ffc39af27d21b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----fc39af27d21b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fc39af27d21b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@tirthajyoti?source=post_page-----fc39af27d21b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@tirthajyoti?source=post_page-----fc39af27d21b--------------------------------", "anchor_text": "Tirthajyoti Sarkar"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcb9d97d4b61a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&user=Tirthajyoti+Sarkar&userId=cb9d97d4b61a&source=post_page-cb9d97d4b61a----fc39af27d21b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffc39af27d21b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffc39af27d21b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@charlesdeluvio?utm_source=medium&utm_medium=referral", "anchor_text": "Charles Deluvio \ud83c\uddf5\ud83c\udded\ud83c\udde8\ud83c\udde6"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://docs.python.org/3/howto/urllib2.html", "anchor_text": "urllib module"}, {"url": "http://www.omdbapi.com/", "anchor_text": "Open Movie Database (OMDB) website"}, {"url": "http://javascript.crockford.com/", "anchor_text": "JavaScript Programming Language"}, {"url": "http://www.ecma-international.org/publications/files/ecma-st/ECMA-262.pdf", "anchor_text": "Standard ECMA-262 3rd Edition \u2014 December 1999"}, {"url": "http://docs.python-guide.org/en/latest/scenarios/json/", "anchor_text": "The json library"}, {"url": "https://docs.python.org/3/library/functions.html#open", "anchor_text": "open()"}, {"url": "https://docs.python.org/3/library/os.path.html#module-os.path", "anchor_text": "os.path"}, {"url": "https://docs.python.org/3/library/fileinput.html#module-fileinput", "anchor_text": "fileinput"}, {"url": "https://docs.python.org/3/library/tempfile.html#module-tempfile", "anchor_text": "tempfile"}, {"url": "https://docs.python.org/3/library/shutil.html#module-shutil", "anchor_text": "shutil"}, {"url": "https://www.pythoncentral.io/introduction-to-sqlite-in-python/", "anchor_text": "sqlite3 module"}, {"url": "https://github.com/tirthajyoti/Web-Database-Analytics-Python/blob/master/Movie_Database_Build.ipynb", "anchor_text": "boiler plate code is available"}, {"url": "https://github.com/tirthajyoti", "anchor_text": "Github repository"}, {"url": "http://www.omdbapi.com/?'", "anchor_text": "http://www.omdbapi.com/?'"}, {"url": "https://github.com/tirthajyoti/Web-Database-Analytics-Python", "anchor_text": "please see my repository."}, {"url": "https://github.com/tirthajyoti?tab=repositories", "anchor_text": "GitHub repositories"}, {"url": "https://www.linkedin.com/in/tirthajyoti-sarkar-2127aa7/", "anchor_text": "add me on LinkedIn"}, {"url": "https://twitter.com/tirthajyotiS", "anchor_text": "follow me on Twitter."}, {"url": "https://medium.com/tag/analytics?source=post_page-----fc39af27d21b---------------analytics-----------------", "anchor_text": "Analytics"}, {"url": "https://medium.com/tag/python?source=post_page-----fc39af27d21b---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----fc39af27d21b---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/web-development?source=post_page-----fc39af27d21b---------------web_development-----------------", "anchor_text": "Web Development"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----fc39af27d21b---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffc39af27d21b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&user=Tirthajyoti+Sarkar&userId=cb9d97d4b61a&source=-----fc39af27d21b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffc39af27d21b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&user=Tirthajyoti+Sarkar&userId=cb9d97d4b61a&source=-----fc39af27d21b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffc39af27d21b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fc39af27d21b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ffc39af27d21b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----fc39af27d21b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----fc39af27d21b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----fc39af27d21b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----fc39af27d21b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----fc39af27d21b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----fc39af27d21b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----fc39af27d21b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----fc39af27d21b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----fc39af27d21b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@tirthajyoti?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@tirthajyoti?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Tirthajyoti Sarkar"}, {"url": "https://medium.com/@tirthajyoti/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "12.5K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcb9d97d4b61a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&user=Tirthajyoti+Sarkar&userId=cb9d97d4b61a&source=post_page-cb9d97d4b61a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fb285331282ca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-by-step-guide-to-build-your-own-mini-imdb-database-fc39af27d21b&newsletterV3=cb9d97d4b61a&newsletterV3Id=b285331282ca&user=Tirthajyoti+Sarkar&userId=cb9d97d4b61a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}