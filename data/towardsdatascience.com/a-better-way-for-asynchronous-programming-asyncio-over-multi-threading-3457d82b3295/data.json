{"url": "https://towardsdatascience.com/a-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295", "time": 1683003953.284529, "path": "towardsdatascience.com/a-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295/", "webpage": {"metadata": {"title": "A better way for asynchronous programming: asyncio over multi-threading | by Qian (Aria) Li | Towards Data Science", "h1": "A better way for asynchronous programming: asyncio over multi-threading", "description": "If you\u2019ve come here, it is probably because you have heard of asyncio module that\u2019s introduced in Python 3.4. You might have been wondering whether you should begin using it. I remember the moment I\u2026"}, "outgoing_paragraph_urls": [{"url": "https://docs.python.org/3/library/asyncio-task.html", "anchor_text": "asyncio", "paragraph_index": 0}, {"url": "https://realpython.com/python-concurrency/", "anchor_text": "here", "paragraph_index": 2}, {"url": "https://www.linkedin.com/in/lqian25", "anchor_text": "https://www.linkedin.com/in/lqian25", "paragraph_index": 17}], "all_paragraphs": ["If you\u2019ve come here, it is probably because you have heard of asyncio module that\u2019s introduced in Python 3.4. You might have been wondering whether you should begin using it. I remember the moment I got stunned by its brilliant performance. Before I learned about asyncio, I was using multi-processing and threading to speed jobs up. They worked well until one day I hit a bottleneck handling hundreds of millions of URL calls. The challenge pushed me to look for other feasible solutions to the I/O bound task. Though its syntax and concept seem complex at first, asyncio turns out to be a life-changer.", "Asyncio is all about asynchronous programming, but it is not the only option that runs jobs asynchronously. You might pause me here and ask, what\u2019s asynchronous programming? In simple words, asynchronous programming allows different tasks to start execution without waiting for the previous one to be completed. This is huge because the vast portion of the time taken to read the URLs is due to the network delay. It\u2019s unnecessary to suffer from high latencies and keep the machines idle while waiting for a response from another server. Asynchronous programming solves the exact problem.", "Multi-threading is a traditional solution that performs tasks asynchronously. Both asyncio and multi-threading run concurrently. Oh, wait, what\u2019s concurrency? Concurrency is a concept that opposes to parallelism; it means executing multiple tasks at the same time but not necessarily simultaneously while parallelism means executing tasks simultaneously. The difference between these two concepts is not important in the blog (see here for more about the difference), but keep in mind that we are not exploring parallelism solution in this blog. As good as it sounds, parallelism is not ideal for I/O bound tasks; it works well with CPU bound job.", "So why asyncio is faster than multi-threading if they both belong to asynchronous programming? It\u2019s because asyncio is more robust with task scheduling and provides the user with full control of code execution. You can pause the code by using the await keyword and during the wait, you could run nothing or go ahead executing other code. As a result, resources are not locked down during the wait.", "The way the tasks take turns for multi-threading is completely different. In threading, the Python interpreter is responsible for task scheduling. Having no prior knowledge of the code or the tasks, the interpreter gives each thread a slice of time to utilize the resources in turns before switching to the next thread. There is some level of inefficiency in this line of arrangement. A simple task could be cut off in the middle no matter how trivial it is. Resources could be locked down to a thread where the task is still waiting for a response from an outside server and therefore not ready to proceed. Consequently, there is still some waste in both time and resources.", "Before we get to asyncio, let\u2019s use multi-threading as a benchmark! My machine has 8 CPUs for all the examples.", "All libraries for the test are imported in the front. Yes, I use logging. I\u2019ve basically dropped print and switched to logging. And remember to always use exceptions. A detailed exception is best. But if you don\u2019t know or care about it, use general Exception!", "There are two functions in the code snippet.", "Now let\u2019s look at some performance results:", "The result is not bad at all. You can see that multi-threading has done a decent job reading 1000 URLs.", "This is basically asyncio version of fetch_url. I use aiohttp because it provides an excellent client session where we can make HTTP requests asynchronously.", "Besides aiohttp.ClientSession, the code probably looks strange with async and await syntax. These two are the key symbols of asyncio. The async def and async with statement create coroutine objects whose execution can be suspended; the await keyword tells the program which execution to wait for. The use of the two keywords makes it possible for the code to run asynchronously.", "We don\u2019t directly call the fetch function to fire up asynchronous execution. Instead, we need to create an event loop and add tasks in the loop. The below two lines of code help you get started with fetching only one URL.", "To run multiple URLs and asynchronously gather all responses, you would need to utilize ensure_future and gather functions from asyncio.", "I hope you still remember the previous multi-threading example because I\u2019m presenting you with a complete asyncio version! The code snippet has the same structure as the multi-threading example.", "The code was executed on the same 8-CPU machine as before and results are displayed below:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I\u2019m a data scientist professional with an interest in Python, technology and social science. (Linkedin -https://www.linkedin.com/in/lqian25)"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F3457d82b3295&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----3457d82b3295--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----3457d82b3295--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@lqian525?source=post_page-----3457d82b3295--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@lqian525?source=post_page-----3457d82b3295--------------------------------", "anchor_text": "Qian (Aria) Li"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdd9666e4b68a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&user=Qian+%28Aria%29+Li&userId=dd9666e4b68a&source=post_page-dd9666e4b68a----3457d82b3295---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3457d82b3295&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3457d82b3295&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.pexels.com/@kaboompics", "anchor_text": "Karolina Grabowska"}, {"url": "https://www.pexels.com/", "anchor_text": "Pexels"}, {"url": "https://docs.python.org/3/library/asyncio-task.html", "anchor_text": "asyncio"}, {"url": "https://realpython.com/python-concurrency/", "anchor_text": "here"}, {"url": "https://medium.com/tag/asynchronous-programming?source=post_page-----3457d82b3295---------------asynchronous_programming-----------------", "anchor_text": "Asynchronous Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----3457d82b3295---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/multithreading?source=post_page-----3457d82b3295---------------multithreading-----------------", "anchor_text": "Multithreading"}, {"url": "https://medium.com/tag/asyncio?source=post_page-----3457d82b3295---------------asyncio-----------------", "anchor_text": "Asyncio"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----3457d82b3295---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3457d82b3295&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&user=Qian+%28Aria%29+Li&userId=dd9666e4b68a&source=-----3457d82b3295---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3457d82b3295&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&user=Qian+%28Aria%29+Li&userId=dd9666e4b68a&source=-----3457d82b3295---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3457d82b3295&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----3457d82b3295--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F3457d82b3295&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----3457d82b3295---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----3457d82b3295--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----3457d82b3295--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----3457d82b3295--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----3457d82b3295--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----3457d82b3295--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----3457d82b3295--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----3457d82b3295--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----3457d82b3295--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@lqian525?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@lqian525?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Qian (Aria) Li"}, {"url": "https://medium.com/@lqian525/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "40 Followers"}, {"url": "https://www.linkedin.com/in/lqian25", "anchor_text": "https://www.linkedin.com/in/lqian25"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdd9666e4b68a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&user=Qian+%28Aria%29+Li&userId=dd9666e4b68a&source=post_page-dd9666e4b68a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F893f6d11ef32&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-better-way-for-asynchronous-programming-asyncio-over-multi-threading-3457d82b3295&newsletterV3=dd9666e4b68a&newsletterV3Id=893f6d11ef32&user=Qian+%28Aria%29+Li&userId=dd9666e4b68a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}