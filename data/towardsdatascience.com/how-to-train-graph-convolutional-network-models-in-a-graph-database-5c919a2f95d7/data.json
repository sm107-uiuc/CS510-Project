{"url": "https://towardsdatascience.com/how-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7", "time": 1683014527.654507, "path": "towardsdatascience.com/how-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7/", "webpage": {"metadata": {"title": "How to train graph convolutional network models in a graph database | by Changran Liu | Towards Data Science", "h1": "How to train graph convolutional network models in a graph database", "description": "A typical feedforward neural network takes the features of each data point as input and outputs the prediction. The neural network is trained utilizing the features and the label of each data point\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.tigergraph.com/2020/01/20/taking-your-first-steps-in-learning-tigergraph-cloud/", "anchor_text": "Creating You First TigerGraph Instance", "paragraph_index": 6}, {"url": "https://www.tigergraph.com/2020/01/20/taking-your-first-steps-in-learning-tigergraph-cloud/", "anchor_text": "Getting Started with TigerGraph Cloud Portal", "paragraph_index": 7}, {"url": "https://relational.fit.cvut.cz/dataset/CORA", "anchor_text": "Cora citation data", "paragraph_index": 7}, {"url": "https://github.com/ChangranLiu/Machine-Learning-in-TigerGraph/blob/master/GCN/GCNonCitationGraph.tar.gz", "anchor_text": "GCNonCitationGraph.tar.gz", "paragraph_index": 20}, {"url": "https://github.com/ChangranLiu/Machine-Learning-in-TigerGraph/tree/master/GCN", "anchor_text": "https://github.com/ChangranLiu/Machine-Learning-in-TigerGraph/tree/master/GCN", "paragraph_index": 20}], "all_paragraphs": ["A typical feedforward neural network takes the features of each data point as input and outputs the prediction. The neural network is trained utilizing the features and the label of each data point in the training data set. Such a framework has been shown to be very effective in a variety of applications, such as face identification, handwriting recognition, object detection, where no explicit relationships exist between data points. However, in some use cases, the prediction for a data point v(i) can be determined not only by its own features but also by the features of other data points v(j) when the relationship between v(i) and v(j) is given. For example, the topic of a journal paper (e.g computer science, physics, or biology) can be inferred from the frequency of words appearing in the paper. On the other hand, the reference in a paper can also be informative when predicting the topic of the paper. In this example, not only do we know the features of each individual data point (the word frequency), we also know the relationship between the data points (citation relation). So how can we combine them to increase the accuracy of the prediction?", "By applying graph convolutional networks (GCN), the features of an individual data point and its connected data points will be combined and fed into the neural network. Let\u2019s use the paper classification problem again as an example. In a citation graph (Fig. 1), each paper is represented by a vertex in the citation graph. The edges between the vertices represent the citation relationships. For simplicity, the edges are treated as undirected. Each paper and its feature vector are denoted as v_i and x_i respectively. Following the GCN model by Kipf and Welling [1], we can predict the topics of papers using a neural network with one hidden layer with the following steps:", "In the above workflow, steps 1 and 4 perform horizontal propagation where the information of each vertex is propagated to its neighbors. While steps 2 and 5 perform vertical propagation where the information on each layer is propagated to the next layer. (see Fig. 1) For a GCN with multiple hidden layers, there will be multiple iterations of horizontal and vertical propagations. It is worth noting that each time horizontal propagation is performed, the information of a vertex is propagated one-hop further on the graph. In this example, the horizontal propagation is performed twice (steps 2 and 4), so the prediction of each vertex not only depends on its own features, but also the features of all the vertices within 2-hop distance from it. Additionally, since the weight matrix W(0) and W(1)are shared by all the vertices, the size of the neural network does not have to increase with the graph size, which makes this approach scalable.", "By incorporating the graph features of each vertex, GCN can achieve high accuracy with a low label rate. In Kipf and Welling\u2019s work [1], over 80% accuracy can be obtained using 5% labeled vertices(entities) in the graph. Considering the whole graph needs to participate in the computation during the propagations, the space complexity to train a GCN model is O(E + V*N + M), where E and V are the number of edges and vertices in the graph, N is the number of features per vertex, and M is the size of the neural network.", "For industrial applications, a graph can have hundreds of millions of vertices and billions of edges, which means both the adjacency matrix A, feature matrix X and other intermediate variables (Fig. 1) can consume terabytes of memory during model training. Such a challenge can be resolved by training GCN in a graph database (GDB) where the graph can be distributed among a multi-node cluster and partially stored on disk. Moreover, graph-structured user data, such as social graphs, consumption graphs, and mobile graphs, is stored in the database management system in the first place. In-database model training also avoids exporting the graph data from the DBMS to other machine learning platforms and thus better support continuous model update over evolving training data.", "In this section, we will provision a graph database on TigerGraph cloud (with free tier), load a citation graph, and train a GCN model in the database. By following the steps below, you will have a paper classification model in 15 min.", "Follow the Creating You First TigerGraph Instance (first 3 steps) to provision a free instance on TigerGraph cloud. In step 1, choose \u201cGraph Convolutional Networks\u201d as the starter kit. In step 3, choose TG.Free. (* see the footnote if you cannot find the starter kit)", "Follow the Getting Started with TigerGraph Cloud Portal and log into GraphStudio. In the Map Data To Graph page, you will see how the data files are mapped to the graph. In this starter kit, the Cora citation data files have already been uploaded into the instance. The Cora data set has three files:", "Go to the Load Data page and click Start/Resume loading. After loading finishes, you can see the graph statistics on the right. The Cora data set has 2708 papers, 1433 different words (dimension of feature vector), and 7986 citation relationships. Each paper is labeled with 1 of the 7 different classes.", "In the Explore Graph page, you can see we just created a neural network on top of a citation graph. Each paper in the citation graph connects to multiple words. The weights on the HAS edges thus form a sparse feature vector. The 1433 different words connect to the 16 neurons in the hidden layer which connects to the 7 neurons (representing 7 different classes) in the output layer.", "In the Write Queries page, you will find the queries needed for GCN have already been added to the database. The queries are written in GSQL, the query language of TigerGraph. Click Install all queries to compile all the GSQL query into C++ code. You can also see a README query on this page. Follow the steps below to train a GCN.", "This query first normalizes the weights on CITE edges by assigning the weight between paper i and j as e_ij=1/(d_i*d_j) where d_i, d_j are the CITE out degrees of paper i and paper j. Second, it normalizes the weights on HAS edges by assigning the weight between paper p and word w as e_pw=1/dp where dp is the HAS out-degree of the paper w. Third, it samples 140, 500, and 1000 PAPER vertices for testing, validation, and training sets.", "This query initializes the weights for the neural network using the method by Glorot and Bengio [2]. The neural network has 1433 neurons in the input layer corresponding to the size of the vocabulary, 16 neurons in the hidden layer and 7 neurons in the output layer corresponding to the 7 classes of the papers.", "This query trains the graph convolutional neural network with the same hyperparameters used in Kipf and Welling [1]. Specifically, the model is evaluated using cross entropy loss, dropout regularization, and L2 regularization (5e-4) for the first layer. Adam optimizer has been implemented in this query and batch gradient descent is used for training. After the query finishes, the loss evaluated on the training and validation data together with the prediction accuracy evaluated on the testing data will be shown. As shown in the output of the training query, the accuracy reaches 53.2% after 5 training epochs. The number of epochs can be set as the query input for higher accuracy.", "This query applies the trained GCN for all the papers in the graph and visualizes the result.", "In the last section, we will dive into the queries to see how training a GCN is supported by the massive parallel processing framework of TigerGraph. Briefly, TigerGraph treats each vertex as a computation unit that can store, send, and process information. We will select some of the statements in the queries to illustrate how GSQL statements are executed.", "Let\u2019s look at the query initialization first. The first line will initialize a vertex set Papers that includes all the PAPER vertices in the graph. In the next SELECT statement, We will start from the vertex set Papers, and traverse all the CITE edges. For each edge (referred by e), its edge weight is computed from the outdegrees of its source vertex (referred by s) and its target vertex (referred by t) in parallel.", "Now let\u2019s look at the query training. The block below performs the horizontal and vertical propagations. As we discuss in the previous section, the horizontal propagation is where we send the information from each vertex to its neighbors, this is done by the line after ACCUM. It computes the feature vector of each target vertex (referred by t.@z_0) as the sum of the feature vector of its source vertex (referred by s.@zeta_0) weighted by e.weight. The next POST-ACCUM block does the vertical propagation. It applies the ReLU activation function and dropout regularization to the feature vector on each vertex first. Then it propagates the hidden layer feature (referred by s.@z_0) to the output layer. Again, TigerGraph will parallelize the computation in both ACCUM and POST-ACCUM blocks with respect to edges and vertices.", "The activation functions are implemented in C++ and imported to the TigerGraph user-defined function library. Below is the implementation of the ReLU function (ReLU_ArrayAccum)", "Training GCN models in a graph database takes advantage of the distributed computing framework of the graph database. It is a scalable solution for large graphs in real-world applications. In this article, we explain how GCN combines the features of each node together with the graph features to improve the accuracy of node classification in a graph. We also show a step-by-step example of training a GCN model on a citation graph using TigerGraph cloud service.", "* In case when the \u201cIn-Database Machine Learning for GCN (citation graph)\u201d starter kit is not available, you can (1) select the \u201cBlank\u201d starter kit in step 1. (2) Follow steps 2 and 3 to log into GraphStudio. (3) Download the GCNonCitationGraph.tar.gz and all the .csv files in the /data folder from https://github.com/ChangranLiu/Machine-Learning-in-TigerGraph/tree/master/GCN. (4) Import the .tar.gz file from the GraphStudio Home page using \u201cImport an existing solution\u201d. (5) Upload all the .csv files from Map Data to Graph page.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F5c919a2f95d7&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@liuchangran6106?source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@liuchangran6106?source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": "Changran Liu"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1e1029539216&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&user=Changran+Liu&userId=1e1029539216&source=post_page-1e1029539216----5c919a2f95d7---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5c919a2f95d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5c919a2f95d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/making-sense-of-big-data", "anchor_text": "Making Sense of Big Data"}, {"url": "https://www.tigergraph.com/2020/01/20/taking-your-first-steps-in-learning-tigergraph-cloud/", "anchor_text": "Creating You First TigerGraph Instance"}, {"url": "https://www.tigergraph.com/2020/01/20/taking-your-first-steps-in-learning-tigergraph-cloud/", "anchor_text": "Getting Started with TigerGraph Cloud Portal"}, {"url": "https://relational.fit.cvut.cz/dataset/CORA", "anchor_text": "Cora citation data"}, {"url": "https://docs.tigergraph.com/dev/gsql-ref/querying/select-statement#from-clause-vertex-and-edge-sets", "anchor_text": "SELECT statement:"}, {"url": "https://docs.tigergraph.com/start/accumulators-tutorial#introduction", "anchor_text": "ACCUM and POST-ACCUM"}, {"url": "https://docs.tigergraph.com/dev/gsql-ref/querying/operators-functions-and-expressions#user-defined-functions", "anchor_text": "User-defined functions"}, {"url": "https://github.com/ChangranLiu/Machine-Learning-in-TigerGraph/blob/master/GCN/GCNonCitationGraph.tar.gz", "anchor_text": "GCNonCitationGraph.tar.gz"}, {"url": "https://github.com/ChangranLiu/Machine-Learning-in-TigerGraph/tree/master/GCN", "anchor_text": "https://github.com/ChangranLiu/Machine-Learning-in-TigerGraph/tree/master/GCN"}, {"url": "https://medium.com/tag/graph-convolution-network?source=post_page-----5c919a2f95d7---------------graph_convolution_network-----------------", "anchor_text": "Graph Convolution Network"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----5c919a2f95d7---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/graph-database?source=post_page-----5c919a2f95d7---------------graph_database-----------------", "anchor_text": "Graph Database"}, {"url": "https://medium.com/tag/semi-supervised-learning?source=post_page-----5c919a2f95d7---------------semi_supervised_learning-----------------", "anchor_text": "Semi Supervised Learning"}, {"url": "https://medium.com/tag/making-sense-of-big-data?source=post_page-----5c919a2f95d7---------------making_sense_of_big_data-----------------", "anchor_text": "Making Sense Of Big Data"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5c919a2f95d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&user=Changran+Liu&userId=1e1029539216&source=-----5c919a2f95d7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5c919a2f95d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&user=Changran+Liu&userId=1e1029539216&source=-----5c919a2f95d7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5c919a2f95d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F5c919a2f95d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----5c919a2f95d7---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----5c919a2f95d7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@liuchangran6106?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@liuchangran6106?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Changran Liu"}, {"url": "https://medium.com/@liuchangran6106/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "50 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1e1029539216&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&user=Changran+Liu&userId=1e1029539216&source=post_page-1e1029539216--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F1e1029539216%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-graph-convolutional-network-models-in-a-graph-database-5c919a2f95d7&user=Changran+Liu&userId=1e1029539216&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}