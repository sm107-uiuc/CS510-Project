{"url": "https://towardsdatascience.com/interactive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b", "time": 1683016122.770271, "path": "towardsdatascience.com/interactive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b/", "webpage": {"metadata": {"title": "Interactive COVID-19 report with RMarkdown, Plotly, Leaflet and Shiny | by Luis Chaves | Towards Data Science", "h1": "Interactive COVID-19 report with RMarkdown, Plotly, Leaflet and Shiny", "description": "This post is part 3 of a series of 4 publications. Refer to part 1 for an overview of the series, part 2 for an explanation of the data sources and minor data cleaning, part 3 for the creation of the\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/create-an-interactive-covid-19-report-using-r-host-it-for-free-and-automate-its-update-41a5bdd46e9d", "anchor_text": "part 1", "paragraph_index": 0}, {"url": "https://rpubs.com/lucha6/covid-cleaning-owid-data", "anchor_text": "part 2", "paragraph_index": 0}, {"url": "https://github.com/lc5415/COVID19", "anchor_text": "[Project repo]", "paragraph_index": 0}, {"url": "https://plotly.com/r/treemaps/", "anchor_text": "Plotly R Treemap documentation", "paragraph_index": 11}, {"url": "https://plotly.com/r/reference/#treemap-hoverinfo", "anchor_text": "the documentation section", "paragraph_index": 15}, {"url": "https://github.com/lc5415/COVID19", "anchor_text": "GitHub repository", "paragraph_index": 22}, {"url": "https://github.com/lc5415/COVID19/blob/master/scripts/line_plot_daily.R", "anchor_text": "available in the repository.", "paragraph_index": 23}, {"url": "https://community.plotly.com/t/animated-map-not-showing-countries-with-na-values/42965", "anchor_text": "[1]", "paragraph_index": 24}, {"url": "https://community.plotly.com/t/slider-and-play-pause-buttons/7288", "anchor_text": "[2]", "paragraph_index": 24}, {"url": "https://community.plotly.com/", "anchor_text": "plotly community", "paragraph_index": 24}, {"url": "https://leafletjs.com/", "anchor_text": "Leaflet", "paragraph_index": 24}, {"url": "https://rstudio.github.io/leaflet/", "anchor_text": "R Leaflet package", "paragraph_index": 25}, {"url": "https://datahub.io/core/geo-countries#data", "anchor_text": "datahub.io", "paragraph_index": 26}, {"url": "https://cran.r-project.org/web/packages/rmapshaper/vignettes/rmapshaper.html", "anchor_text": "rmapshaper", "paragraph_index": 26}, {"url": "https://cran.r-project.org/web/packages/rmapshaper/vignettes/rmapshaper.html", "anchor_text": "package", "paragraph_index": 26}, {"url": "http://leaflet-extras.github.io/leaflet-providers/preview/", "anchor_text": "in this demo", "paragraph_index": 29}, {"url": "https://github.com/wkostelecki/ezplot", "anchor_text": "ezplot", "paragraph_index": 31}, {"url": "https://github.com/wkostelecki/ezplot", "anchor_text": "package", "paragraph_index": 31}, {"url": "https://pandoc.org/", "anchor_text": "pandoc", "paragraph_index": 35}, {"url": "https://shiny.rstudio.com/tutorial/", "anchor_text": "beginner's material in RStudio\u2019s site", "paragraph_index": 38}, {"url": "https://lucha6.shinyapps.io/covideda/", "anchor_text": "live document in the cloud", "paragraph_index": 52}, {"url": "https://github.com/lc5415/COVID19/blob/master/COVIDEDA.Rmd", "anchor_text": "the", "paragraph_index": 52}, {"url": "https://github.com/lc5415/COVID19/blob/master/COVIDEDA.Rmd", "anchor_text": ".Rmd", "paragraph_index": 52}, {"url": "https://github.com/lc5415/COVID19/blob/master/COVIDEDA.Rmd", "anchor_text": "document in GitHub", "paragraph_index": 52}, {"url": "https://www.shinyapps.io/admin/#/signup", "anchor_text": "create an account first", "paragraph_index": 53}, {"url": "https://lucha6.shinyapps.io/COVIDEDA/", "anchor_text": "https://lucha6.shinyapps.io/COVIDEDA/", "paragraph_index": 59}], "all_paragraphs": ["This post is part 3 of a series of 4 publications. Refer to part 1 for an overview of the series, part 2 for an explanation of the data sources and minor data cleaning, part 3 for the creation of the visualisations, building the report and the deploy the document into ShinyApps.io and part 4 (soon to be ready) for automatic data update, compilation and publishing of the report. [Project repo]", "Each article in the series is self-contained, meaning that you don\u2019t need to read the whole series to make the most out of it.", "\u00b7 Goal \u2218 Requirements\u00b7 Data input\u00b7 Plots \u2218 Treemap Charts \u2218 Line Charts \u2218 Map Charts \u2218 Enough plotting!\u00b7 Making a Shiny RMarkdown Report \u2218 Writing the report \u2218 Uploading your document to the Cloud \u2218 Publishing your app\u00b7 Conclusion", "In this tutorial, we will be learning how to make 7 kinds of charts to illustrate the progress of COVID19 across nations. We will then integrate these into an RMarkdown document and publish an interactive copy of it for free! \u2014 using RStudio premises.", "Experience using R, dplyr and ggplot is useful but not essential. Across all my writing/coding I try to make the scripts as human-readable as possible.", "First of all, today we will be using two datasets:", "Note: The tables above are truncated for visualisation purposes, the actual tables contain data from December, 31st 2019 onwards and for most countries/regions in the World.", "I will walk you through the 7 charts we will be making. For every plot the process is the same:", "There may be some overlap in the data wrangling across plots but that is ok. My aim here is to show how each plot can be made on its own.", "Treemap charts work great to represent hierarchies and the magnitude of each \u201cchild\u201d element in its \u201cparent\u201d. Here we are plotting COVID events by country which can further be grouped by continent which can, in turn, be grouped as part of the world. Let\u2019s see how to make the following plot with Plotly.", "In our treemap, the size of each box will be proportional to the number of events at the latest date for each country, hence we will be using the cumulative table.", "After going through the Plotly R Treemap documentation, two things become clear. First, we need all elements (countries, continents, world) in the treemap chart to have a corresponding value, as of now we only have data aggregated at the country level, we will need to aggregate this for each continent and to aggregate it globally. Second, we need a new column indicating the parent of each element: e.g. for Spain, Europe; for Europe, World, for World, nothing. Additionally, we will be calling each element labels as countries, continents and the \u201cWorld\u201d all need to be in the same column.", "Below is the commented script to wrangle the data to the correct specifications:", "Now that we have the data in the right format, making the plot is super easy:", "The hoverinfo argument takes care of the data displayed when hovering over any particular element. The specification here is saying:", "You can read more about further hovering options in the documentation section.", "Finally, we wish to actually store these plots as RDS objects to load them when our Shiny app loads instead of having to compute them at runtime. For this we use the following code:", "Note: You may find success simply saving the output of the plot_ly(...) function. When I first started working on this project I found that did not work. For me using the plotly_build() function fixed it.", "Here we will be making classic line plots describing the number of events by country or continent over time. In this instance, we won\u2019t be making plotly plots directly. Instead, we will be using ggplot2 and with use the ggplotly function to turn them into interactive plots. We will be making plots like the following:", "First, let\u2019s make our ggplot with the cumulative table:", "If you\u2019re not familiar with ggplot2, all these lines for a single plot may seem like a lot. While it may seem so, I believe this helps structure plots and also renders the code to be highly readable. Additionally, the group aesthetic (within the aes() function) is not often introduced in beginner ggplot tutorials. In our particular case, it is very important. If we were to not specify it, ggplot would think that the grouping variable for our line plot is continent and would make a very messy plot, see below for the comparison:", "Ok now that we\u2019ve made our ggplot, we can use ggplotly() to turn it into a plotly chart in one line. Moreover, given we have stored our ggplot as a variable we can modify it further, e.g. show the y-axis in log10 scale. Finally, we will pass the new plot through the plotly_build() function to be able to store it.", "I made 6 other line plots from the cumulative dataset that you can see in the GitHub repository for this project (including curves for events by continent with and without log10 scale). The code for all these plots follows the same structure.", "Again following the same principles and pretty much the same code I made another 6 plots like the one below from the daily dataset. The code for that is also available in the repository.", "Believe it or not, I won\u2019t be using the plotly map functions here. I have created maps with them before but I do not recommend using them. I\u2019ve stumbled across a few bugs([1], [2]) and the plotly community has been very unresponsive. Hence here we will use Leaflet. Unlike Plotly, Leaflet is solely focused on maps, hence they make much much better tools to build maps.", "Having been built by the RStudio team itself, the R Leaflet package has that R feeling to it and more especially a dplyr and ggplot feeling, where maps can be built by layers. Let\u2019s jump to the code. I will present how to make a simple static map. Making one with a timeline is much more complicated hence I will devote a future stand-alone article to it.", "First of all, we are going to need a GeoJSON file with the country boundaries. GeoJSON files are a standard used to store geographical boundaries (though many more exist such as shapefiles). I downloaded the countries GeoJSON file from datahub.io. Luckily country boundaries do not change much these days, hence we only need to download and process this file once. It is quite a beefy file for our usage (23MB), hence we will use a little trick to reduce its size. This will greatly improve the load time of our Shiny document (we are smart, we think ahead of time). The size of the file is so big because of all the details in the boundaries (e.g. the resolution of the coastlines). We can make use of the rmapshaper package and more broadly of the mapshaper tool to make our map more coarse and the file much smaller. Below is the script to do all of this from within R.", "The world_geojson object contains two main elements of interest: data and polygons. At this stage, the data element contains only two columns, ISO code and the corresponding region name. The polygons element contains the necessary information to draw the polygons for each region. We are going to first merge the data element with the cumulative dataset. Next, we are going to manually remove the polygons for which no data is available in the cumulative dataset. This last step is necessary because the data and polygons are matched by position instead of by some sort of identifier, if we did not perform this last step, the US would appear in Europe, France in Africa or Asia and so forth.", "Note: We are only plotting the latest available data for each region (lines 6\u20139)", "Now, all we have to do is the plotting using leaflet . As I said previously, Leaflet in R supports being built in layers, using the magrittr pipe operator (%>%). First, we are going to define a suitable colour palette, I\u2019ve chosen Blues which represent low values with a white-ish colour and uses more and more intense blues as values grow. Then we are going to initialize the main map with leaflet() just as we often do with ggplot() and add tiles, which is Leaflet jargon for the formatting of the map (colour of the sea, of the land\u2026 \u2014 explore different tiles in this demo).", "Now, we are finally going to have a look at the data on top of the map. We are going to add in the polygons and colour them proportionately to the number of cases in each country as per the end of October.", "Note, I\u2019ve coloured the regions proportionately to their log10 number of cases as otherwise, the disparity is so big that the colour scale is useless. We have also used the ez_labels() function from the ezplot package, which turns large numbers into a readable format (e.g. 86453625 to 86.4M).", "Finally, we are going to add a legend to our map and save the file so we can load it later.", "After this, our map looks like the one below. It is also interactive, you can get more details by hovering over the map (though this does not work in Medium, it will work when we publish the document in the Shiny server).", "Plotting is great but endless and also very context-dependent. Above I have shown how to make common and not so common plots to illustrate the COVID events over time but you could imagine countless more ways to do this!", "RMarkdown documents (.Rmd) are super versatile files that allow you to write intuitive Markdown text and executable R code chunks, all in one place. They are similar to Jupyter Notebooks but are stored as plain text documents as opposed to JSON syntax. RMarkdown documents support a bunch of output formats including PDF, HTML, Word and beamer slides. They also natively support Latex and HTML which is powered by the document compiler pandoc. All RMarkdown documents start with a header like this one:", "If you are working from RStudio you can create an RMarkdown template by going File > New File > RMarkdown\u2026", "You can visualise the rendered document by clicking the Knit option and additionally you can have several output formats for a single .Rmd document (such as html_document, pdf_document, word_document). My preferred output format is html_document , it allows for interaction with Plotly and Leaflet objects as well as searchable tables. One thing HTML does not support is an actual user interface where the user modifies something on the front end which triggers a change in the backend and results in an updated front-end.", "In the modern web, this is supported with JavaScript but as an R programmer, you may not want or have time to learn it, hence why we are going to use Shiny! This article is not a beginner Shiny tutorial but it will hopefully motivate you to get serious with learning Shiny. You can find beginner's material in RStudio\u2019s site.", "The magic with Shiny combined with RMarkdown is that you can simply add this line to your RMarkdown header and your document will work as a Shiny UI:", "That\u2019s it! Now let\u2019s write our document.", "We are going to first load all the plots we have previously made and then design the very basic UI.", "Now that we have loaded the plots, we simply need to design the Shiny UI, which is composed of an input element and of rendering functions that react to the changes in the input.", "An input block looks like this:", "The first argument is the input ID which Shiny is going to use to refer to this input handler. Next is the label of this input handle (label) which will appear right above the handle in the document, then the possible choices (choices) and finally the default choice (selected). Other input handling functions exist, such as: fileInput(), dateInput(), sliderInput(), checkboxInput() and others.", "Once, we got the input handling function ready, we just need a render*() function that handles the input, such as renderPlotly(), renderImage(), renderText() or others. As you can see below the layout and logic is super easy and intuitive:", "I could stop here but I\u2019ll give a last example to illustrate how a more complex logic can easily be handled with a few lines of code. If you are not interested, please skip to the last section where we finally deploy our Shiny document to the Cloud.", "The line plots we made earlier offer a great example to build more complex logic. We can have a handle for the mode of the plots (Daily/cumulative), another for geography (Country/continent), another one for the event type (Deaths/Cases) and a final one to enable log10 scale when the continent geography is chosen:", "Here we are going to take advantage of the fact that our plot names are standardised to make the logic more concise(see below).", "Depending on the inputs, we are going to build a string corresponding to one of the plot names using the ifelse() function. The logic for the geography choice is even more special because if \u201cContinent\u201d is chosen we will create a checkbox to enable log10 scale. To do this we use what's called a conditional panel as seen in the next code chunk, additionally, we are going to wrap all of our input handlers inside an inputPanel() which will make them look very good and tidy:", "This result in a tidy panel as shown below:", "And below, it\u2019s the logic to fetch the right plot based on the user\u2019s selection of inputs:", "I invite you once again to visit the live document in the cloud, as that will be the best way to understand what the UI experience is like. You can also find the source code for the .Rmd document in GitHub.", "If you have made it this far, I hope you have gotten some useful knowledge out of this article. All that is left to do is to upload our document to the RStudio servers. If it\u2019s the first time doing this you will need to create an account first.", "Once that is set-up you need to add your Shiny credentials to your RStudio or R session. You can do this via RStudio or via the terminal:", "Connect to Shiny via the terminal", "1 \u2014 Click on the blue publishing button as shown.", "2 \u2014 A window like this one should open, you can give you ShinyApp whatever name you want, here that will be COVIDEDA. On the left, you can see the files and directories that will be uploaded to the server.", "You can also upload the app from the R console by using the following command:", "From the moment your document (or app) is first published a folder called rsconnect/ will be created in your project directory. Every time you follow these steps again, you will be able to update your document! You can visit my report on this link: https://lucha6.shinyapps.io/COVIDEDA/", "In this article, I have illustrated how to create an interactive report to explore COVID19 data. We have made some cool plots using ggplot , plotly and leaflet . We have also learnt how to deploy 100% interactive documents with the help of RMarkdown and Shiny. The next article will cover how to automate the process of updating the datasets, plots and deploy the document without us having to even turn on our computers! \ud83d\ude2e\ud83d\ude43", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I am passionate about computer science and biology. I graduated as a biomedical engineer but I am now exploring data science and machine learning!"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fc6a716af7d9b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://lucharo.medium.com/?source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": ""}, {"url": "https://lucharo.medium.com/?source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": "Luis Chaves"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9980528d4b06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&user=Luis+Chaves&userId=9980528d4b06&source=post_page-9980528d4b06----c6a716af7d9b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc6a716af7d9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc6a716af7d9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/create-an-interactive-covid-19-report-using-r-host-it-for-free-and-automate-its-update-41a5bdd46e9d", "anchor_text": "part 1"}, {"url": "https://rpubs.com/lucha6/covid-cleaning-owid-data", "anchor_text": "part 2"}, {"url": "https://github.com/lc5415/COVID19", "anchor_text": "[Project repo]"}, {"url": "https://plotly.com/r/treemaps/", "anchor_text": "Plotly R Treemap documentation"}, {"url": "https://plotly.com/r/reference/#treemap-hoverinfo", "anchor_text": "the documentation section"}, {"url": "https://github.com/lc5415/COVID19", "anchor_text": "GitHub repository"}, {"url": "https://github.com/lc5415/COVID19/blob/master/scripts/line_plot_daily.R", "anchor_text": "available in the repository."}, {"url": "https://community.plotly.com/t/animated-map-not-showing-countries-with-na-values/42965", "anchor_text": "[1]"}, {"url": "https://community.plotly.com/t/slider-and-play-pause-buttons/7288", "anchor_text": "[2]"}, {"url": "https://community.plotly.com/", "anchor_text": "plotly community"}, {"url": "https://leafletjs.com/", "anchor_text": "Leaflet"}, {"url": "https://rstudio.github.io/leaflet/", "anchor_text": "R Leaflet package"}, {"url": "https://datahub.io/core/geo-countries#data", "anchor_text": "datahub.io"}, {"url": "https://cran.r-project.org/web/packages/rmapshaper/vignettes/rmapshaper.html", "anchor_text": "rmapshaper"}, {"url": "https://cran.r-project.org/web/packages/rmapshaper/vignettes/rmapshaper.html", "anchor_text": "package"}, {"url": "http://leaflet-extras.github.io/leaflet-providers/preview/", "anchor_text": "in this demo"}, {"url": "https://github.com/wkostelecki/ezplot", "anchor_text": "ezplot"}, {"url": "https://github.com/wkostelecki/ezplot", "anchor_text": "package"}, {"url": "https://pandoc.org/", "anchor_text": "pandoc"}, {"url": "https://shiny.rstudio.com/tutorial/", "anchor_text": "beginner's material in RStudio\u2019s site"}, {"url": "https://lucha6.shinyapps.io/covideda/", "anchor_text": "live document in the cloud"}, {"url": "https://github.com/lc5415/COVID19/blob/master/COVIDEDA.Rmd", "anchor_text": "the"}, {"url": "https://github.com/lc5415/COVID19/blob/master/COVIDEDA.Rmd", "anchor_text": ".Rmd"}, {"url": "https://github.com/lc5415/COVID19/blob/master/COVIDEDA.Rmd", "anchor_text": "document in GitHub"}, {"url": "https://www.shinyapps.io/admin/#/signup", "anchor_text": "create an account first"}, {"url": "https://www.shinyapps.io/", "anchor_text": "shinyapps.io"}, {"url": "https://lucha6.shinyapps.io/COVIDEDA/", "anchor_text": "https://lucha6.shinyapps.io/COVIDEDA/"}, {"url": "https://medium.com/tag/data-science?source=post_page-----c6a716af7d9b---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----c6a716af7d9b---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/covid-19?source=post_page-----c6a716af7d9b---------------covid_19-----------------", "anchor_text": "Covid-19"}, {"url": "https://medium.com/tag/shiny?source=post_page-----c6a716af7d9b---------------shiny-----------------", "anchor_text": "Shiny"}, {"url": "https://medium.com/tag/ui?source=post_page-----c6a716af7d9b---------------ui-----------------", "anchor_text": "UI"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc6a716af7d9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&user=Luis+Chaves&userId=9980528d4b06&source=-----c6a716af7d9b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc6a716af7d9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&user=Luis+Chaves&userId=9980528d4b06&source=-----c6a716af7d9b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc6a716af7d9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fc6a716af7d9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----c6a716af7d9b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----c6a716af7d9b--------------------------------", "anchor_text": ""}, {"url": "https://lucharo.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://lucharo.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Luis Chaves"}, {"url": "https://lucharo.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "46 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9980528d4b06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&user=Luis+Chaves&userId=9980528d4b06&source=post_page-9980528d4b06--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F3a6792600e4d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Finteractive-covid19-report-with-rmarkdown-plotly-leaflet-and-shiny-c6a716af7d9b&newsletterV3=9980528d4b06&newsletterV3Id=3a6792600e4d&user=Luis+Chaves&userId=9980528d4b06&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}