{"url": "https://towardsdatascience.com/drawing-financial-stock-market-charts-using-opengl-93254883bca7", "time": 1683005552.7204401, "path": "towardsdatascience.com/drawing-financial-stock-market-charts-using-opengl-93254883bca7/", "webpage": {"metadata": {"title": "Drawing financial stock market charts using OpenGL | by Mario Emmanuel | Towards Data Science", "h1": "Drawing financial stock market charts using OpenGL", "description": "I keep working on OpenGL as the ultimate way to display graphics. In this article, I will describe how to move data from CPU to the GPU. While this is the normal approach, all the information I have\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)", "anchor_text": "here", "paragraph_index": 10}, {"url": "https://www.khronos.org/opengl/wiki/Vertex_Specification", "anchor_text": "here", "paragraph_index": 15}, {"url": "https://ieee.shortcm.li/OP8dFS", "anchor_text": "https://ieee.shortcm.li/OP8dFS", "paragraph_index": 25}], "all_paragraphs": ["I keep working on OpenGL as the ultimate way to display graphics. In this article, I will describe how to move data from CPU to the GPU. While this is the normal approach, all the information I have found is focused on delivering data directly related to 3D rendering process (location, colour, normal) and I had a rough time understanding and locating information on how to move higher abstraction data to the GPU, further than the conventional 3D model points. The OpenGL community and available information did not help that much either in this case, as most people active in forums are usually involved in 3D engines.", "In plain English, I am trying to have the GPU doing the actual graphics models out of non-graphics related data which seems to be a not so common OpenGL task. This can be considered an intermediate step between doing pure rendering (OpenGL) and doing pure computing (OpenCL). We are offloading computational process into the GPU, but it is still code related to rendering.", "In my case, I am dealing with 2D stock market data, where I want the GPU to be in charge of processing all financial data to get everything displayed. As an example that might be easier to understand for those not familiar to financial charts, imagine that you are drawing a scene of a forest with many trees. The information you might pass to the GPU would include the location of the tree, an integer with the type of tree (we might have different types of trees to render), the height of the tree and its width. The GPU can construct hundreds of graphical primitives for each tree out of this simple information. By doing that, the CPU does not need to translate our highly abstracted wood model (location, tree type, width and height) into a drawable model. The improvement in performance is massive as we are leveraging on the large number of cores of the GPU. As a side benefit, we are also decoupling the graphic part from the application, moving all the rendering and graphic model building routines into GLSL.", "GPUs have massive power. As I am currently working on not so demanding 2D applications I have stabilised my development in an old OpenGL standard (3.3) using old and inexpensive NVIDIA Quadro cards, which were common in old trading workstations. I do this to ensure that my application can be used in legacy hardware. The cards I am working on count with 16 cores, which is not impressive, but modern cards have now hundreds of cores (at the time of writing this article, the Nvidia GeForce RTX 2080 Ti represents the state-of-the-art with 4352 cores). Having more than 4000 cores in a single \u2014 affordable \u2014 computer is simply blow-minding. However, even modest legacy cards improve graphics performance a lot when compared with the traditional approach where graphics are implemented at the application level using the CPU. As a trade-off, programming GLSL and offloading graphics to GPU makes programming more complex: debugging GLSL is challenging and sometimes frustrating.", "In this article, I will describe the points where I had issues, mainly because I was doing not so conventional things (like passing integers to a Vertex shader) and understanding the stride and offset. I focus on the specific concepts and code sections that were troublesome to me.", "Despite its name suggest that you are representing vertices (which incidentally is the most common use case), a vertex is just buffered data you move into the GPU, specifically into the vertex shader. This data can contain arbitrary information you need to draw the actual model. Normally this would include certain information about location, but it could imply even higher abstraction models where the locations are defined implicitly by that abstraction model.", "In our example, we will make our card to draw a simple candlestick chart. Our input data will be, therefore:", "Out of that, we want GLSL to draw:", "So our vertex information does not contain x/y location in the traditional sense. And it definitively does not involve graphical primitives (points/lines/triangles). We will just move the candle information into the GPU and let the card do all the drawing. By doing that:", "Programming GPUs using GLSL has certain limitations when compared with traditional programming. In the end, we are dealing with small cores optimised for rendering. GLSL is heavily influenced by C language, so it inherits several C types but at the same time, it has special types used to deal with vectors and matrices up to 4 elements. I am still investigating if variable size arrays can be moved into the GPU, but for the time now I am using the basic types:", "A comprehensive but still concise guide on GLSL Data Types can be found here.", "This means that in our case, where we have 6 integer values (I represent prices using integers instead of floats of doubles to preserve exact values) we can not use something like ivec6 because it does not exist.", "The source code (in Java using JOGL, but it would be similar in C++) creates a single array with all the information and three VBOs (Vertex Buffer Objects).", "This array will be used to feed each buffer. The information we need to deal is the stride and the offset so OpenGL Vertex shader can later locate the data. The specific glVertexAttribPointers used are:", "Notice how we are using glVertexAttribIPointer instead of glVertexAttribPointer because we are dealing with integer data. For some reason, I have not managed to get to pass negative integers, even using GL_INT instead of GL_UNSIGNED_INT.", "A good definition of how Vertex works can be found here and it was useful for me to understand the concepts involved.", "The Vertex shader can now pick up the whole data:", "For the input data, location layout attribute defines which specific attribute we are gathering, the numbers must match the ones used in glVertexAttribIPointer. This information is gathered from the geometry shader using variables gs_ohlc, gs_volume and gs_timestamp. Notice how out variable names in the Vertex shader must match against in variable names in the Geometry shader. Notice also how we are not using gl_Position because we are not dealing with any positions yet, just high-level abstract data. There is no need, you can still pass arbitrary data from Vertex to Geometry shader.", "The Geometry shader gathers the high-level data and constructs the graphic primitives. It even colours them depending on if the candle is bullish or bearish:", "We build our primitives (line_strips in this case) based on the OHLC and Timestamp data. The example is rude and lacks all the extra details required to draw a whole chart. But it illustrates how you can move abstract data into the GPU to implement the graphic primitives.", "In this article, I have reviewed some concepts that are not commonly discussed in OpenGL tutorials or documentation; not because they are not documented, but because they do not belong to the most common use case of passing float vertices information to perform 3D rendering.", "While the code is not complete, it is useful for those who had run their first tutorials in OpenGL and would like to better understand how data can be moved to shaders. It also lacks the whole other aspects that need to be covered to draw a whole chart, but it represents the aspects and OpenGL syntax that were troublesome to me.", "I am still investigating if the whole data might be passed as an array of 6 elements, to include potentially other cases where we might want to move larger pieces of data to the GPU. I also need to cover things such as scroll, zooming and scaling. GLSL is proving to be as thoughtful as a fascinating topic to learn from scratch. As mentioned before I am still having issues with simple stuff such as passing negative integers into the Vertex shader. This is a clear sign of how GLSL is not as intuitive as other technologies. The fact that most learning material is focused on 3D and that I am using Java JOGL (most of the material uses C++) does not facilitate this process either.", "The GPU power is amazing and I am also motivated to learn in the future about using this power for general computing through OpenCL or CUDA. It can be an extremely good choice for activities such as data engineering, backtesting software and ML.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Consultant, retail trader & lifelong learner | Linkedin https://ieee.shortcm.li/OP8dFS"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F93254883bca7&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----93254883bca7--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----93254883bca7--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@m.emmanuel?source=post_page-----93254883bca7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@m.emmanuel?source=post_page-----93254883bca7--------------------------------", "anchor_text": "Mario Emmanuel"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7728df51142e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&user=Mario+Emmanuel&userId=7728df51142e&source=post_page-7728df51142e----93254883bca7---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F93254883bca7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F93254883bca7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://commons.wikimedia.org/wiki/File:Krita%27s_OpenGL_canvas_drawing_quality.png", "anchor_text": "wikimedia commons"}, {"url": "https://www.khronos.org/opengl/wiki/Data_Type_(GLSL)", "anchor_text": "here"}, {"url": "https://www.khronos.org/opengl/wiki/Vertex_Specification", "anchor_text": "here"}, {"url": "https://medium.com/tag/data-science?source=post_page-----93254883bca7---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----93254883bca7---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/3d?source=post_page-----93254883bca7---------------3d-----------------", "anchor_text": "3d"}, {"url": "https://medium.com/tag/programming?source=post_page-----93254883bca7---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/fintech?source=post_page-----93254883bca7---------------fintech-----------------", "anchor_text": "Fintech"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F93254883bca7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&user=Mario+Emmanuel&userId=7728df51142e&source=-----93254883bca7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F93254883bca7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&user=Mario+Emmanuel&userId=7728df51142e&source=-----93254883bca7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F93254883bca7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----93254883bca7--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F93254883bca7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----93254883bca7---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----93254883bca7--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----93254883bca7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----93254883bca7--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----93254883bca7--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----93254883bca7--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----93254883bca7--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----93254883bca7--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----93254883bca7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@m.emmanuel?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@m.emmanuel?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Mario Emmanuel"}, {"url": "https://medium.com/@m.emmanuel/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "977 Followers"}, {"url": "https://ieee.shortcm.li/OP8dFS", "anchor_text": "https://ieee.shortcm.li/OP8dFS"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7728df51142e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&user=Mario+Emmanuel&userId=7728df51142e&source=post_page-7728df51142e--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ffd67658cd0f9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdrawing-financial-stock-market-charts-using-opengl-93254883bca7&newsletterV3=7728df51142e&newsletterV3Id=fd67658cd0f9&user=Mario+Emmanuel&userId=7728df51142e&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}