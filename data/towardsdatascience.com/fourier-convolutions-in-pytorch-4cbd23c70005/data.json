{"url": "https://towardsdatascience.com/fourier-convolutions-in-pytorch-4cbd23c70005", "time": 1683016658.9123042, "path": "towardsdatascience.com/fourier-convolutions-in-pytorch-4cbd23c70005/", "webpage": {"metadata": {"title": "Fourier Convolutions in PyTorch | Towards Data Science | Towards Data Science", "h1": "Fourier Convolutions in PyTorch", "description": "Math and code for efficiently computing large convolutions with FFTs."}, "outgoing_paragraph_urls": [{"url": "https://github.com/fkodom/fft-conv-pytorch", "anchor_text": "this Github repo", "paragraph_index": 0}, {"url": "https://github.com/fkodom/fft-conv-pytorch", "anchor_text": "my Github repo", "paragraph_index": 10}, {"url": "https://pytorch.org/docs/stable/generated/torch.nn.Conv1d.html#torch.nn.Conv1d", "anchor_text": "this equation", "paragraph_index": 16}, {"url": "https://pytorch.org/docs/stable/generated/torch.nn.Conv1d.html#torch.nn.Conv1d", "anchor_text": "here in the docs", "paragraph_index": 18}, {"url": "http://medium.com/the-dl", "anchor_text": "medium.com/the-dl", "paragraph_index": 35}], "all_paragraphs": ["Note: Complete methods for 1D, 2D, and 3D Fourier convolutions are provided in this Github repo. I also provide PyTorch modules, for easily adding Fourier convolutions to a trainable model.", "Convolutions are ubiquitous in data analysis. For decades, they\u2019ve been used in signal and image processing. More recently, they became an important ingredient in modern neural networks. You\u2019ve probably encountered convolutions if you work with data at all.", "Although discrete convolutions are more common in computational applications, I\u2019ll be working with the continuous form for most of this article, because it is much easier to prove the Convolution Theorem (discussed below) using continuous variables. After that, we will return to the discrete case and implement it in PyTorch using Fourier transforms. Discrete convolutions can be viewed as an approximation of continuous ones, where continuous functions are discretized on a regular grid. So we will not re-prove the Convolution Theorem for the discrete case.", "Mathematically, the Convolution Theorem can be stated as:", "where the continuous Fourier transform is (up to a normalization constant):", "In other words, convolution in position space is equivalent to direct multiplication in frequency space. This idea is fairly non-intuitive, but proving the Convolution Theorem is surprisingly easy for the continuous case. To do that, start by writing out the left hand side of the equation.", "Now switch the order of integration, make a substitution of variables (x = y + z), and separate the two integrands.", "Why should we care about all of this? Because the fast Fourier transform has a lower algorithmic complexity than convolution. Direct convolutions have complexity O(n\u00b2), because we pass over every element in g for each element in f. Fast Fourier transforms can be computed in O(n log n) time. They are much faster than convolutions when the input arrays are large. In those cases, we can use the Convolution Theorem to compute convolutions in frequency space, and then perform the inverse Fourier transform to get back to position space.", "Direct convolutions are still faster when the inputs are small (e.g. 3x3 convolution kernels). In machine learning applications, it\u2019s more common to use small kernel sizes, so deep learning libraries like PyTorch and Tensorflow only provide implementations of direct convolutions. But there are plenty of real-world use cases with large kernel sizes, where Fourier convolutions are more efficient.", "Now, I\u2019ll demonstrate how to implement a Fourier convolution function in PyTorch. It should mimic the functionality of torch.nn.functional.convNd and leverage FFTs behind the curtain without any additional work from the user. As such, it should accept three Tensors (signal, kernel, and optionally bias) and the padding to apply to the input. Conceptually, the inner workings of this function will be:", "Let\u2019s incrementally build the FFT convolution according the order of operations shown above. For this example, I\u2019ll just build a 1D Fourier convolution, but it is straightforward to extend this to 2D and 3D convolutions. Or visit my Github repo, where I\u2019ve implemented a generic N-dimensional Fourier convolution method.", "1 \u2014 Pad the Input Arrays", "We need to ensure that signal and kernel have the same size after padding. Apply the initial padding to signal, and then adjust the padding for kernel to match.", "Notice that I only pad kernel on one side. We want the original kernel on the left-hand side of the padded array, so that it aligns with the start of the signal array.", "This is very easy, because N-dimensional FFTs are already implemented in PyTorch. We simply use the built-in function, and compute the FFT along the last dimension of each Tensor.", "3 \u2014 Multiply the Transformed Tensors", "Surprisingly, this is the trickiest part of our function. There are two reasons for that. (1) PyTorch convolutions operate on multi-dimensional Tensors, so our signal and kernel Tensors are actually three-dimensional. From this equation in the PyTorch docs, we see that matrix multiplication is performed over the first two dimensions (excluding bias term):", "We\u2019ll need to include this matrix multiplication, as well as the direct multiplication over the transformed dimensions.", "(2) As shown here in the docs, PyTorch actually implements a cross-correlation method instead of convolution. (The same is true for TensorFlow and other deep learning libraries.) Cross-correlation is very closely related to convolution, but with an important sign change:", "This effectively reverses the orientation of the kernel (g), compared to convolution. Rather than manually flipping the kernel, we correct for this by taking the complex conjugate of our kernel in Fourier space. This is significantly faster and more memory efficient, since we do not need to create an entirely new Tensor. (A brief demonstration of how/why this works is included in the appendix at the end of the article.)", "PyTorch 1.7 brings improved support for complex numbers, but many operations on complex-valued Tensors are not supported in autograd yet. For now, we have to write our own complex_matmul method as a patch. It\u2019s not ideal, but it works and likely won\u2019t break for future versions.", "4 \u2014 Compute the Inverse Transform", "Computing the inverse transform is straightforward using torch.irfftn. Then, crop out the extra array padding.", "5 \u2014 Add Bias and Return", "Adding the bias term is also very easy. Remember that the bias has one element for each channel in the output array, and reshape accordingly.", "For completeness, let\u2019s compile all of these snippets into a cohesive function.", "Finally, we\u2019ll confirm that this is numerically equivalent to direct 1D convolution using torch.nn.functional.conv1d. We construct random Tensors for all inputs, and measure the relative difference in the output values.", "Each element differs by about 1e-5 \u2014 pretty accurate, considering that we\u2019re using 32-bit precision! Let\u2019s also perform a quick benchmark to measure the speed of each method:", "Measured benchmarks will change significantly with the machine you\u2019re using. (I\u2019m testing with a very old Macbook Pro.) For a kernel size of 1025, it appears that Fourier convolution is over 10 times faster.", "I hope this has provided a thorough introduction to Fourier convolutions. I think this is a really cool trick, and there are lots of real-world applications where it can be used. I also love math, so it\u2019s fun to see this intersection of programming and pure mathematics. All comments and constructive criticism are welcome and encouraged, and please clap if you enjoyed the article!", "Earlier in the article, we implemented cross-correlation by taking the complex conjugate of our kernel in Fourier space. I claimed that this effectively reverses the orientation of the kernel, and now I\u2019d like to demonstrate why that is. First, remember the formulae for convolution and cross-correlation:", "Then, let\u2019s look at the Fourier transform of our kernel (g):", "Take the complex conjugate of G. Note that the kernel g(x) is real-valued, so it is unaffected by conjugation. Then, make a change of variables (y = -x) and simplify the expression.", "So we\u2019ve effectively flipped the orientation of the kernel!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Director of Innovation at Plainsight | Creator of The DL: medium.com/the-dl"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F4cbd23c70005&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----4cbd23c70005--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4cbd23c70005--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://frank-odom.medium.com/?source=post_page-----4cbd23c70005--------------------------------", "anchor_text": ""}, {"url": "https://frank-odom.medium.com/?source=post_page-----4cbd23c70005--------------------------------", "anchor_text": "Frank Odom"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6f77d545fa4e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&user=Frank+Odom&userId=6f77d545fa4e&source=post_page-6f77d545fa4e----4cbd23c70005---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4cbd23c70005&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4cbd23c70005&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@fcornish?utm_source=medium&utm_medium=referral", "anchor_text": "Faye Cornish"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/fkodom/fft-conv-pytorch", "anchor_text": "this Github repo"}, {"url": "https://github.com/fkodom/fft-conv-pytorch", "anchor_text": "my Github repo"}, {"url": "https://pytorch.org/docs/stable/generated/torch.nn.Conv1d.html#torch.nn.Conv1d", "anchor_text": "this equation"}, {"url": "https://pytorch.org/docs/stable/generated/torch.nn.Conv1d.html#torch.nn.Conv1d", "anchor_text": "https://pytorch.org/docs/stable/generated/torch.nn.Conv1d.html#torch.nn.Conv1d"}, {"url": "https://pytorch.org/docs/stable/generated/torch.nn.Conv1d.html#torch.nn.Conv1d", "anchor_text": "here in the docs"}, {"url": "https://medium.com/tag/tutorial?source=post_page-----4cbd23c70005---------------tutorial-----------------", "anchor_text": "Tutorial"}, {"url": "https://medium.com/tag/python?source=post_page-----4cbd23c70005---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----4cbd23c70005---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/mathematics?source=post_page-----4cbd23c70005---------------mathematics-----------------", "anchor_text": "Mathematics"}, {"url": "https://medium.com/tag/engineering?source=post_page-----4cbd23c70005---------------engineering-----------------", "anchor_text": "Engineering"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4cbd23c70005&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&user=Frank+Odom&userId=6f77d545fa4e&source=-----4cbd23c70005---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4cbd23c70005&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&user=Frank+Odom&userId=6f77d545fa4e&source=-----4cbd23c70005---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4cbd23c70005&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4cbd23c70005--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F4cbd23c70005&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----4cbd23c70005---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----4cbd23c70005--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----4cbd23c70005--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----4cbd23c70005--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----4cbd23c70005--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----4cbd23c70005--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----4cbd23c70005--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----4cbd23c70005--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----4cbd23c70005--------------------------------", "anchor_text": ""}, {"url": "https://frank-odom.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://frank-odom.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Frank Odom"}, {"url": "https://frank-odom.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "335 Followers"}, {"url": "http://medium.com/the-dl", "anchor_text": "medium.com/the-dl"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6f77d545fa4e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&user=Frank+Odom&userId=6f77d545fa4e&source=post_page-6f77d545fa4e--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F471b95b23dd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffourier-convolutions-in-pytorch-4cbd23c70005&newsletterV3=6f77d545fa4e&newsletterV3Id=471b95b23dd7&user=Frank+Odom&userId=6f77d545fa4e&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}