{"url": "https://towardsdatascience.com/how-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa", "time": 1683003904.392809, "path": "towardsdatascience.com/how-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa/", "webpage": {"metadata": {"title": "How to build a real-time fraud detection pipeline using Faust and MLFlow | by Bogdan Cojocar | Towards Data Science", "h1": "How to build a real-time fraud detection pipeline using Faust and MLFlow", "description": "In this tutorial we will learn to start a Kafka cluster locally, to write a producer that sends messages, to create a simple machine learning training process for fraud detection, to expose the model\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.kaggle.com/mlg-ulb/creditcardfraud/data#", "anchor_text": "Kaggle credit card fraud competition", "paragraph_index": 2}, {"url": "https://github.com/BogdanCojocar/medium-articles/tree/master/realtime_fraud_detection", "anchor_text": "GitHub", "paragraph_index": 3}], "all_paragraphs": ["In this tutorial we will learn to start a Kafka cluster locally, to write a producer that sends messages, to create a simple machine learning training process for fraud detection, to expose the model via a REST interface and to do prediction in real-time.", "The main frameworks that we will use are:", "We will also need some data for our training. We can use a CSV source from a Kaggle credit card fraud competition.", "TL;DR: The code is on GitHub.", "Let\u2019s first build our fraud detection model. We will read the CSV data representing credit card transactions and apply a simple binary logistic regression classification between the two classes 0(not fraud) and 1(fraud) .", "As we can see, most of the columns that we read are float , except the Class , which is our target variable. Now let\u2019s do the training:", "For features we use V1 \u2014 V28 and Amount . We do the split between train and test data, and fit the model. We can check some performance metrics:", "If we just use only accuracy as a metric we can shot ourselves in the foot. Always use better performance indicators like f1_score , precision and recall .", "After the training we can save our new fraud detection model:", "We use the sklearn module inside MLFlow as this will help us with the servis part.", "Let\u2019s start a terminal in the root of our project and type the following command:", "This will take a little bit of time, as additionally to deploying a microservice, it will also create a conda environment. This is to ensure that next time when we do the deployment we have our dependencies locked at a certain version and in a separate virtual environment. If everything runs fine, we will notice that we have a url for our service:", "We can do a quick test from the terminal using cURL :", "We are sending a POST request using a JSON object containing the feature columns and a set of values. We will get back the answer from the classifier [0] .", "To build the cluster we will use a docker-compose file that will start all the docker containers needed: zookeeper and a broker.", "Now very briefly, kafka is a distributed streaming platform capable of handling a large number of messages, that are organized or grouped together into topics. In order to be able to process a topic in parallel, it has to be split into partitions, and the data from these partitions are stored into separate machines called brokers. And finally, zookeeper is used to manage the resources of the brokers in the clusters.To read or write into a kafka cluster we need a broker address and a topic.", "The docker-compose will start zookeper on port 2181 , a kafka broker on port 9092. Besides that we use another docker container kafka-create-topic for the sole purpose to create a topic (called test) in the kafka broker.", "To start the kafka cluster, we have to run the following command line instruction in the same folder where we have defined the docker compose file:", "This will start all the docker containers with logs. We should see something like this in the console:", "To be able to consume data in realtime we first must write some messages into kafka. We will use the confluent_kafka library in python to write a producer:", "We will send JSON messages having the format:", "It is the same format we use for the MLFlow web service, where data can contain multiple lists of values for the features.", "For each message we write into the queue we also need to assign a key. We will assign a random one based on the uuid to achieve a good distribution into the cluster. In the end, we also run a flush command to ensure that all the messages are sent.", "Once we run the confluent_kafka_producer we should receive a log telling us that the data has been sent correctly:", "We have reached our final step in the tutorial. With the Faust framework we will run a simple worker that will consume data from Kafka and will apply the prediction on the new features. We need to create a separate python script for this one. First, we define our Faust app, and the topic:", "We define the broker from where we read and the serializer format. We are happy to use raw as we will just pass the data to the machine learning algorithm.", "Now, let\u2019s define the coroutine. In the Faust framework, it\u2019s called anagent :", "The agent is an asynchronous process. We connect to the Kafka topic, and for each value that we read, we do a call to the REST service and obtain a result. As expected, this will run immediately after new values are available in Kafka.", "The script is finalised. Let\u2019s name it fraud_detection_worker.py . Now we can run it. From a terminal started in the root of the project we need to type:", "This will start a worker, which is an instance of the app. If we need more computing power, we can start additional workers.", "If everything is running fine, we will start to see the following logs:", "We have reached the end of this tutorial. I hope you enjoyed it and find it useful. We saw how now we have the option to use a pure python framework to do real-time data processing. This is a great advantage as a lot of the data science work out there is in this programming language.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Big data consultant. I write about the wonderful world of data."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F24e787dd51fa&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----24e787dd51fa--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----24e787dd51fa--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@bogdan.cojocar?source=post_page-----24e787dd51fa--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@bogdan.cojocar?source=post_page-----24e787dd51fa--------------------------------", "anchor_text": "Bogdan Cojocar"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa5d35fbaadc8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&user=Bogdan+Cojocar&userId=a5d35fbaadc8&source=post_page-a5d35fbaadc8----24e787dd51fa---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F24e787dd51fa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F24e787dd51fa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@jefflssantos?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Jefferson Santos"}, {"url": "https://unsplash.com/s/photos/fraud?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://github.com/robinhood/faust/", "anchor_text": "Faust"}, {"url": "https://en.wikipedia.org/wiki/Async/await", "anchor_text": "async/away"}, {"url": "https://www.confluent.io/", "anchor_text": "Kafka"}, {"url": "https://www.mlflow.org", "anchor_text": "MLFlow"}, {"url": "https://jupyterlab.readthedocs.io/en/stable/", "anchor_text": "Jupyter lab"}, {"url": "https://www.kaggle.com/mlg-ulb/creditcardfraud/data#", "anchor_text": "Kaggle credit card fraud competition"}, {"url": "https://github.com/BogdanCojocar/medium-articles/tree/master/realtime_fraud_detection", "anchor_text": "GitHub"}, {"url": "http://127.0.0.1:5000", "anchor_text": "http://127.0.0.1:5000"}, {"url": "http://127.0.0.1:9999/invocations", "anchor_text": "http://127.0.0.1:5000/invocations"}, {"url": "https://medium.com/tag/machie-learning?source=post_page-----24e787dd51fa---------------machie_learning-----------------", "anchor_text": "Machie Learning"}, {"url": "https://medium.com/tag/python?source=post_page-----24e787dd51fa---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----24e787dd51fa---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-engineering?source=post_page-----24e787dd51fa---------------data_engineering-----------------", "anchor_text": "Data Engineering"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----24e787dd51fa---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F24e787dd51fa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&user=Bogdan+Cojocar&userId=a5d35fbaadc8&source=-----24e787dd51fa---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F24e787dd51fa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&user=Bogdan+Cojocar&userId=a5d35fbaadc8&source=-----24e787dd51fa---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F24e787dd51fa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----24e787dd51fa--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F24e787dd51fa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----24e787dd51fa---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----24e787dd51fa--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----24e787dd51fa--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----24e787dd51fa--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----24e787dd51fa--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----24e787dd51fa--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----24e787dd51fa--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----24e787dd51fa--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----24e787dd51fa--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@bogdan.cojocar?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@bogdan.cojocar?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Bogdan Cojocar"}, {"url": "https://medium.com/@bogdan.cojocar/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "566 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa5d35fbaadc8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&user=Bogdan+Cojocar&userId=a5d35fbaadc8&source=post_page-a5d35fbaadc8--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ffaedcd759ecc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-build-a-real-time-fraud-detection-pipeline-using-faust-and-mlflow-24e787dd51fa&newsletterV3=a5d35fbaadc8&newsletterV3Id=faedcd759ecc&user=Bogdan+Cojocar&userId=a5d35fbaadc8&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}