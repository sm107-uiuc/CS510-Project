{"url": "https://towardsdatascience.com/automatically-inferring-relational-structure-from-files-ee0790c8002c", "time": 1683004307.746009, "path": "towardsdatascience.com/automatically-inferring-relational-structure-from-files-ee0790c8002c/", "webpage": {"metadata": {"title": "Automatically inferring relational structure from files | by Benjamin Peterson | Towards Data Science", "h1": "Automatically inferring relational structure from files", "description": "How can you automatically infer the underlying structure of data from a bunch of csv files? This article shows how to use python, pandas, and a bit of data visualization theory to do just that."}, "outgoing_paragraph_urls": [{"url": "https://pandas.pydata.org/about.html", "anchor_text": "pandas", "paragraph_index": 3}, {"url": "https://networkx.github.io/", "anchor_text": "etworkX", "paragraph_index": 3}, {"url": "https://en.wikipedia.org/wiki/Chi-squared_test", "anchor_text": "chi-squared measure", "paragraph_index": 13}, {"url": "https://en.wikipedia.org/wiki/Cram%C3%A9r%27s_V", "anchor_text": "here", "paragraph_index": 15}, {"url": "https://en.wikipedia.org/wiki/Bayesian_probability", "anchor_text": "Bayesian", "paragraph_index": 17}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.BernoulliNB.html", "anchor_text": "Bernoullian Bayes implementation in sklearn", "paragraph_index": 18}, {"url": "https://towardsdatascience.com/smarter-ways-to-encode-categorical-data-for-machine-learning-part-1-of-3-6dca2f71b159", "anchor_text": "this Towards Data Science article", "paragraph_index": 19}, {"url": "https://en.wikipedia.org/wiki/Hypergraph", "anchor_text": "hypergraphs", "paragraph_index": 44}, {"url": "https://ialab.it.monash.edu/webcola/examples/powergraph.html", "anchor_text": "cola project", "paragraph_index": 44}, {"url": "https://d3js.org/", "anchor_text": "d3", "paragraph_index": 50}, {"url": "https://en.wikipedia.org/wiki/Force-directed_graph_drawing", "anchor_text": "force directed layout", "paragraph_index": 50}, {"url": "https://stackoverflow.com/questions/13749885/control-spacing-in-twopi-graphviz", "anchor_text": "twopi", "paragraph_index": 52}], "all_paragraphs": ["They\u2019ve called you in because they need insight. A plan for the future, perhaps, or a critical evaluation of the present \u2014 either way, your vision will need to be supported by serious concrete evidence. And to achieve that, you\u2019ll need to source some raw data and turn that data into knowledge fast.", "What lands on your desk, in practice, is likely to be a bundle of CSV files, hastily assembled by business analysts, or discovered in a dusty server in the basement.", "We need to know what these files mean, but we can\u2019t easily employ standard ML algorithms for that purpose, because the kind of business data we\u2019re likely to be looking at is highly categorical \u2014 the nouns will be legal entities, staff members, sales, products and customers rather than numerical observations.", "In this article, we\u2019ll look at how to quickly achieve insight into the underlying structure of those CSV files, using Python, pandas, and NetworkX. Back-end code (not especially neat) for the functionality discussed in the article is available on request.", "(All images in this article are original. Graph images generated by DataSmith, my own graph visualization tool.)", "For the sake of argument let\u2019s take this realistic (and realistically dull\u2026) CSV file describing sales.", "Clearly some of these columns have particular relationships to each other. A given \u2018Country\u2019 is probably always in the same \u2018Region\u2019. \u2018Region\u2019 and \u2018RegID\u2019 seem to be roughly the same thing. It\u2019s not immediately clear whether \u2018Currency\u2019 always matches \u2018Country\u2019 or \u2018City\u2019, or whether \u2018ProdGrp\u2019 has any relationship to anything else. \u2018SaleID\u2019 looks like a good candidate for a primary key.", "What we want is a tool that will produce something like my pencil-and-paper analysis:", "Only we want it instant, correct, and presentable. The rest of this article describes an approach to solving this problem.", "There are lots of techniques we can use to infer an approximation of the data structure, but broadly we\u2019ll need a few basic building blocks:", "As a matter of fact, those above three steps are characteristic of many, if not all, challenges around the visualization of relationship information. We\u2019ll now look in turn at defining a measure, building a graph, and presenting useful conclusions from the graph.", "This section considers ways to measure relatedness between columns, and proposes a custom measure, the \u2018wharf coefficient\u2019. To infer a relational structure, we mostly want to answer the questions:", "We need a measure that tells us whether, and how much, columns are related. Our ML instincts might tell us to look for correlations between the columns. This isn\u2019t very effective, though, since pure correlation isn\u2019t really applicable between categorical variables.", "So, we look for a categorical version of correlation. That\u2019s what the common chi-squared measure is; it provides us with a numerical measure of the independence of two categorical variables.", "In practice, chi-squared is a horrible measure of dependence in the relational sense as it is not scaled and it\u2019s hard to know how we should react differently to a larger or smaller chi-squared value. To find a scaled measure of relatedness between columns, we can use a measure called Cramer\u2019s V; this measure is a scaled chi-squared:", "Wikipedia suggests an additional scaling step for Cramer\u2019s V here, which results in what is probably the \u2018most correct\u2019 correlation-like measure for categorical fields. And yet, in practise it\u2019s not that useful for the current task.", "The trouble with these measures is that they are reciprocal measures of relatedness. In order to answer our questions, we want a directional measure; we\u2019re looking for asymmetrical relationships in which column A implies column B but not (usually) vice versa.", "To measure the degree to which column A implies column B, we could use Bayesian logic. This has two great benefits:", "In practice, Bayesian logic is useful for our problem, but it has some drawbacks. In particular, most available implementations of Bayesian models don\u2019t work especially naturally with categorical inputs. For example, to use the very useful Bernoullian Bayes implementation in sklearn, We have to use what\u2019s called \u2018one hot\u2019 encoding to represent our input columns as a set of Booleans:", "This is a particular case of the general problem of transforming categorical data into a state suitable for vanilla ML algorithms, which is an interesting problem in its own right (see this Towards Data Science article for an introduction).", "While Bayesian approaches should certainly not be rejected for structure inference \u2014 in fact, they can be very useful \u2014 the aim here is to build a quick, simple tool. In particular, to infer structure across the whole file, which might be large, we\u2019ll need to compare every column to almost every other, and that would take time with Bayes. Furthermore, the Bayesian confidence level produces a number that\u2019s hard to interpret when one column almost implies the value of another.", "For these reasons, for the task at hand it\u2019s worth suggesting a new measure, the \u2018wharf coefficient\u2019 (so called because it\u2019s useful in Canary Wharf, a part of London that is rich in large CSV files). This is a simple measure answering the question:", "\u2018If I guessed the value of column B using the value of column A, what proportion of the time would I be correct?\u2019", "The wharf coefficient is found as follows:", "\u2026where a are the possible values of our target column, b are the possible values of our dependent column, and Nba is the number of records that have a particular pair of values in the two columns. In other words, it\u2019s the sum of the most frequent b values for each possible a value.", "The wharf coefficient is, of course, 1 when column A implies column B. If it\u2019s marginally below 1, that suggests that column A implies column B except for a specific number of data errors. If the value is lower, then some correlation between the columns is suggested and some tuning will be required to make a good guess as to whether there is an actual relationship.", "An advantage of the wharf coefficient is that it can be expressed as a single fast-running line of pandas (strange mental image, there) which is ideal for our use case.", "Another advantage is that it expresses a business-meaningful truth: \u2018If you assume column A does imply column B, you\u2019ll get the wrong answer exactly (1-w)*100 percent of the time\u2019.", "Having selected a measure of the dependence of one column on another, we go on to build a graph of the inferred underlying data structure. We need the graph because in order to extract knowledge from the implication matrix, we will use graph techniques to simplify the graph for display.", "We build an implication matrix by measuring the degree of implication between each pair of columns. In the case of our boring example sales data, the implication matrix happens to be:", "We can make a decision here as to how weak a relationship is worth considering. We can do this by defining a threshold below which the relationship between two columns is ignored. Assuming we use the wharf coefficient, the following threshold values are a good starting point:", "Some types of input columns should be removed from the data set before building the matrix. For example:", "In real life, this step is almost always required. In our example data such columns have already been pruned out for the sake of brevity.", "It may be necessary to fill NaNs, correct whitespace problems introduced in Excel, and do other cleaning. Fortunately, Python/pandas is a powerful tool for this kind of task.", "Our \u2018implication matrix\u2019 has cells that express the strength of the one-way relationship between columns. This happens to mean that it is also a graph adjacency matrix (in which relationship strength is column weight).", "Building a graph representation of the relationships is therefore easy; we wave the python magic wand and the highly useful NetworkX library builds us a graph in one step:", "In real life, there are a few bookkeeping tasks we have to do here \u2014 notably, the original DataFrame column names need to become node names in the NetworkX graph.", "Now we have access to a range of techniques (some already available in Python and some not) to extract decision-making inputs, i.e. knowledge, from the graph.", "In this section, we consider steps to present a quick, readable output from our graph of column relationships.", "We can easily identify primary key candidates; they\u2019ll be columns which imply every other column.", "For several purposes we\u2019ll want to remove primary keys so they don\u2019t clutter up the graph with their many relationships.", "We can identify groups of columns that are synonyms fairly easily too; two columns are synonyms if they each imply each other. This happens a lot in real life since so many files contain fields like \u2018Car Serial Number\u2019, \u2018Car Licence Number\u2019, \u2018Car ID\u2019 and so on which we expect to vary together. While finding pairs of columns that are synonyms is easy, identifying large groups of synonyms requires a little bit of graph theory which NetworkX can perform for us easily:", "What we\u2019re doing here is identifying \u2018strongly connected components\u2019, which are subgraphs of the graph in which all nodes have a two-way relationship. If they have a two-way relationship, they\u2019re synonyms, so each resulting subgraph is a set of synonyms. We then filter out subgraphs with just one node.", "Our next step of graph simplification is to compress together all the synonyms. For this we can use various methods but the \u2018most correct\u2019 is probably to use the extremely powerful PowerGraph approach. This approach compresses nodes that have similar relationships into single nodes. The following diagram gives an idea:", "A full discussion of PowerGraph, and the fascinating world of hypergraphs, is beyond the scope of this article. The cola project contains a fairly accessible implementation of PowerGraph. In my own code that goes with this article, I use a more linear approach; unfortunately, NetworkX doesn\u2019t give us a pre-packaged algorithm this time.", "Having found keys, and compressed synonyms, we can now look for dimensions. In fact, every column that\u2019s left that is not a key is a dimension (since we cleaned away all the measures earlier on), but merely knowing that isn\u2019t very useful. In real life, interesting dimensions have a structure; for instance, in our example, we expect \u2018City\u2019 to have an attribute \u2018Country\u2019 and probably an attribute \u2018Language\u2019 and/or \u2018Currency\u2019, even though we aren\u2019t quite sure how they join together.", "We discover these attributes using more handy NetworkX algorithms.", "Weakly connected components are subgraphs joined by one-way relationships; this is exactly what we expect each dimension to be, since the attributes in a dimension are connected by one-way \u2018is an attribute of\u2019 relationships.", "When we perform this step we find another opportunity for simplification. Our dimensions will wind up with excess relationships in. For example, if the real underlying structure is that \u2018city implied country, which implies region\u2019 then the implication matrix will also show that city implies region, even though that\u2019s not useful information for the human reader. We need to remove these excess relationships, as shown below.", "To do this, we can use another NetworkX algorithm to find a \u2018minumum spanning tree\u2019 of the subgraph that represents the dimension. This is a representation of the graph with as few edges as possible, and results in unnecessary relationships being removed.", "The most common way to represent a graph visually is by what the venerable and vital d3 project calls a \u2018force directed layout\u2019. If you use NetworkX and matplotlib, this is what you\u2019ll get (although NetworkX calls it a \u2018spring layout\u2019). This is generally not a very useful way to present small graphs of business-meaningful items (nor even a useful way to present most graphs in general, I\u2019d argue). By default, NetworkX and matplotlib yield the following visualization for our example graph:", "This is just barely adequate for checking that the code works and we have a graph, but not useful for presentation or decision-making.", "An appropriate layout choice, in this case, would be to take advantage of the fact that we know we have zero-or-more primary keys in the middle and zero-or-more branching dimensions connected to them. A radial layout like GraphViz twopi would be better but can still introduce visual noise \u2014 variations in positioning that look meaningful but are a product of the layout logic rather than of the graph. I\u2019ve implemented a task-specific layout that constrains dimensions to a straight line (with branches) radiating from the primary keys.", "Our final output looks like this:", "Not too far from what we\u2019d expect, but not a bad result for the couple of seconds it took (on a 7000 row input file). Three dimensions are visible, and we can see that while currency is per-country, language is per-city, which is something we might not have picked up on otherwise. A few synonyms have been identified and compressed together. The tool has used a layout that\u2019s suitable for displaying dimension information and it\u2019s added some subtle color to help us group the columns visually.", "I\u2019ve covered only the basics here. Further work might go along the following lines:", "Get in touch if you\u2019re interested in discussing problems like this. As noted above, the back-end code for the functions shown in this article is available on request (with no guarantees)! This is an area that offers huge opportunities to apply recent advances in analytics and visualization in a way that reduces costs and makes life easier.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I\u2019ve worked for decades in financial IT and information management, extracting decision-making knowledge from data. Always happy to talk."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fee0790c8002c&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----ee0790c8002c--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ee0790c8002c--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@bjslimited?source=post_page-----ee0790c8002c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@bjslimited?source=post_page-----ee0790c8002c--------------------------------", "anchor_text": "Benjamin Peterson"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fae6972486d7d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&user=Benjamin+Peterson&userId=ae6972486d7d&source=post_page-ae6972486d7d----ee0790c8002c---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fee0790c8002c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fee0790c8002c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://pandas.pydata.org/about.html", "anchor_text": "pandas"}, {"url": "https://networkx.github.io/", "anchor_text": "etworkX"}, {"url": "https://en.wikipedia.org/wiki/Chi-squared_test", "anchor_text": "chi-squared measure"}, {"url": "https://en.wikipedia.org/wiki/Cram%C3%A9r%27s_V", "anchor_text": "here"}, {"url": "https://en.wikipedia.org/wiki/Bayesian_probability", "anchor_text": "Bayesian"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.BernoulliNB.html", "anchor_text": "Bernoullian Bayes implementation in sklearn"}, {"url": "https://towardsdatascience.com/smarter-ways-to-encode-categorical-data-for-machine-learning-part-1-of-3-6dca2f71b159", "anchor_text": "this Towards Data Science article"}, {"url": "https://en.wikipedia.org/wiki/Hypergraph", "anchor_text": "hypergraphs"}, {"url": "https://ialab.it.monash.edu/webcola/examples/powergraph.html", "anchor_text": "cola project"}, {"url": "https://d3js.org/", "anchor_text": "d3"}, {"url": "https://en.wikipedia.org/wiki/Force-directed_graph_drawing", "anchor_text": "force directed layout"}, {"url": "https://stackoverflow.com/questions/13749885/control-spacing-in-twopi-graphviz", "anchor_text": "twopi"}, {"url": "https://theburningmonk.com/2015/05/a-consistent-approach-to-track-correlation-ids-through-microservices/", "anchor_text": "correlation IDs"}, {"url": "https://medium.com/tag/graph?source=post_page-----ee0790c8002c---------------graph-----------------", "anchor_text": "Graph"}, {"url": "https://medium.com/tag/data?source=post_page-----ee0790c8002c---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/tag/pandas?source=post_page-----ee0790c8002c---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/data-science?source=post_page-----ee0790c8002c---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----ee0790c8002c---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fee0790c8002c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&user=Benjamin+Peterson&userId=ae6972486d7d&source=-----ee0790c8002c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fee0790c8002c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&user=Benjamin+Peterson&userId=ae6972486d7d&source=-----ee0790c8002c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fee0790c8002c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ee0790c8002c--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fee0790c8002c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----ee0790c8002c---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----ee0790c8002c--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----ee0790c8002c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----ee0790c8002c--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----ee0790c8002c--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----ee0790c8002c--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----ee0790c8002c--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----ee0790c8002c--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----ee0790c8002c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@bjslimited?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@bjslimited?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Benjamin Peterson"}, {"url": "https://medium.com/@bjslimited/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "46 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fae6972486d7d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&user=Benjamin+Peterson&userId=ae6972486d7d&source=post_page-ae6972486d7d--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F8e94368e38dc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fautomatically-inferring-relational-structure-from-files-ee0790c8002c&newsletterV3=ae6972486d7d&newsletterV3Id=8e94368e38dc&user=Benjamin+Peterson&userId=ae6972486d7d&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}