{"url": "https://towardsdatascience.com/building-population-models-in-python-57f9e174d27d", "time": 1683006498.353417, "path": "towardsdatascience.com/building-population-models-in-python-57f9e174d27d/", "webpage": {"metadata": {"title": "Building population models in Python | by Max Miller | Towards Data Science", "h1": "Building population models in Python", "description": "One of the big challenges of doing \u2018data science\u2019 is collecting sufficient data. Many models, particularly for complicated problems like machine vision or natural language processing, require large\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.washingtonpost.com/graphics/2020/world/corona-simulator/", "anchor_text": "Washington Post", "paragraph_index": 2}, {"url": "https://www.youtube.com/watch?v=gxAaO2rsdIs", "anchor_text": "excellent video", "paragraph_index": 2}, {"url": "https://www.technologyreview.com/2017/04/11/5113/the-dark-secret-at-the-heart-of-ai/", "anchor_text": "famously opaque", "paragraph_index": 5}, {"url": "https://matplotlib.org/3.2.1/api/animation_api.html", "anchor_text": "creating animations", "paragraph_index": 12}, {"url": "https://imagemagick.org/", "anchor_text": "ImageMagick", "paragraph_index": 13}, {"url": "https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology", "anchor_text": "SIR epidemiological models", "paragraph_index": 20}, {"url": "https://github.com/3b1b/manim", "anchor_text": "his own animation", "paragraph_index": 28}], "all_paragraphs": ["One of the big challenges of doing \u2018data science\u2019 is collecting sufficient data. Many models, particularly for complicated problems like machine vision or natural language processing, require large data sets and while we may live in the era of big data, it\u2019s not always easy to tap into large, high quality data sets at home. Particularly for students of data science or new entrants in the field, the lack of neat data can seem like an impediment to learning \u2014 how much more mileage can we get out of the iris dataset, or the Titanic one?", "If you\u2019re a data scientist or data scientist in training looking for some side projects, I want to suggest that there\u2019s another way to practice highly relevant skills that doesn\u2019t require a lot of web scraping or premium access to curated data. If anything, the focus on high accuracy predictions \u2014 the sort of predictions that require models trained on lots of data \u2014 that a lot of data science instruction (in particular at the increasingly ubiquitous bootcamps) has does a disservice to one of the fundamental uses of building models: creating conceptual frameworks to better understand how or why things work the way they do. With this in mind, I contend that useful models can be built with no data collection necessary.", "In the world of the Covid-19 pandemic, such models have, if anything, shown themselves to be immensely valuable, both as the bases for concrete predictions and as tools for public communication. Perhaps you\u2019ve read the Washington Post article that basically went viral and quickly became their most viewed article online of all time. Or watched 3Blue1Brown\u2019s excellent video with his models of various pandemic scenarios. In both of these cases, and many others, very useful illustrative visuals have been built on top of models that required no previous data. Of course, these models have a slightly different set of goals; they\u2019re not trying to predict an exact number of cases or anything like that, rather, they aim to build an intuition for how certain features may influence outcomes. But, that is still valuable and in the case of a novel disease for which there is literally no historical data, that may be the best you can do.", "Something that\u2019s worth emphasizing is that, for how informative they are, from a technical perspective, the sort of models and visuals highlighted in the Washington Post are not particularly difficult to build. Most entry level data scientists with a basic command of Python and the common math and plotting libraries should have the technical skills to build out models like that and create the sort of animated or interactive visuals to accompany them. With that in mind, here are a couple of small projects developing population models and accompanying visuals for anyone interested in creating their own visuals in this vein.", "Rule One for Any Sort of Modeling: Do Your Research and Don\u2019t Trust the Results Too Much!", "This really applies to any project, but its importance is amplified if your model isn\u2019t being built on empirical observation. These days it\u2019s common to judge predictive models on how they perform, not on what they say about why they make certain predictions \u2014 deep neural networks are even famously opaque \u2014 but the sorts of models we\u2019ll be discussing don\u2019t have the luxury of a validation set. Instead they are a series of assumptions that have been operationalized so you can see how they play out. What sorts of assumptions or simplifications can you make and still see usable results? It depends very much on what you\u2019re modeling, and the only way to tell what sort of models make sense is to build up some domain knowledge first.", "These sorts of models will also typically not give you exact predictions and shouldn\u2019t be treated as such. It\u2019s important here to understand that the goal isn\u2019t necessarily to predict the future, but to get a feel for how certain things influence potential outcomes. Before I describe building an epidemiological model, let me disclaim that I am not an epidemiologist, and neither, for that matter, are the creators of the other Covid-19 models I\u2019ve mentioned. None of the models we create should be understood as hard predictions about exactly how the disease will spread. Instead, they can be illustrative of the sort of connections and influences that can exist in the real world, or of the magnitude of certain effects. There is a saying, usually attributed to George Box, that all models are wrong, but some are useful. We are aiming to be squarely in the wrong but useful category.", "Project 1: Simple population models using Lotka-Volterra", "The Lotka-Volterra equations are a set of simple, differential equations, also known as the predator-prey equations, which you may have encountered in a high school biology class. True to their name, they model the dynamics of interacting populations of predator and prey animals, where the growth or decline in each population depends in part on both of the current population sizes. A large population of hares in a region will allow the population of foxes that feed on the hares to grow, but as the number of foxes grows, the predation may start to decrease the number of hares, which will in turn put pressure on the population of foxes, and so on.", "For our purposes, the Lotka-Volterra equations are a good place to start because they are simple to implement. There are only two equations, one describing the rate of change in the population of the prey species and a similar one for the predator species. The formula for the prey population is in the form of:", "Where x is the current prey population, y is the current predator population, alpha is a growth constant for the prey and beta is a constant representing the rate of predation. The corresponding equation for the prey population is:", "Taken together, these two equations create periodic curves, with the prey population growing rapidly during periods of low predator population, only to be driven down again as the predator population grows. If the idea of solving differential equations seems daunting to you, recognize that you can implement this without any complicated math by taking a momentary estimate for each rate of change, incrementing time forward a little, and then calculating a new rates of change, which is all I\u2019ve done here:", "While this isn\u2019t an unattractive graph, we\u2019re looking to really exploit the power of the visual, and we can do that in two ways. One way is to animate the graph, tracing out these curves as if in real time. Matplotlib, the most ubiquitous Python graphing library, actually actually has a module dedicated to creating animations. The module only has two methods. One creates animations by collecting a series of Matplotlib artist objects (like the Axes or Line2d objects that represent either the locations of the things you\u2019re graphing or the way they\u2019re graphed). The other applies a function you supply it to repeatedly update a graph. The module is pretty capable, but it can be a little sensitive, so it\u2019s worth walking through an example in detail.", "For this case, I\u2019ll use the .FuncAnimation() function, which will repeatedly call a function to update the graph\u2019s information. You could, in principle, use this function to continuously update your underlying model, and if you wanted to throw up an animation that didn\u2019t have a set ending and watch it continue to play out indefinitely, that would make sense. In cases where you have a set ending to the animation in mind, I have generally found it easier to simply run the model for however long you need to create the data and then use the animation function to reference increasing portions of this data. One other thing to bear in mind is that Matplotlib will display animations on its own, it doesn\u2019t come with a way to save them down as a video file or gif out of the box. You\u2019ll need an external package to do that. I used ImageMagick to make my gifs. Complete code bloc to implement an animation of the Lotke-Volterra equations is here:", "This is what this code creates:", "The model is deterministic; for any given values of the four parameters, and for any given starting values for the two populations, the sizes of the two populations will only play out in one way. The question to consider is how will this path play out as the parameters are changed. How will the graph change as the rate of predation is increased or decreased? What factors will change the length of the period?", "To really explore the interplay of the parameters in our model, we can turn to our second trick, which is adding interactivity. It would be helpful to be able to set new values for each of the parameters and have the visual automatically recalculate without needing to change our code. For that, we might consider building out a dashboard with a tool like Dash (Matplotlib also has tools for graph interactivity, but Dash is a common tool and for this purpose, it will be simpler to use). Let\u2019s set up a simple dashboard with four sliders to control the value of the parameters.", "The code to set up a dashboard in Dash comes in two parts. In the first part, we define the layout of the dashboard, using Dash\u2019s html components module to control the html layout of the dashboard. In the second, a series of callback functions connect the whatever inputs you have, like our sliders in this case, to the graph and define how the plot will react to an input.", "This example dash is pretty spare, there\u2019s no styling after all, just the core components of the dashboard, yet the ability to play with the parameters and see the results in real time makes for a revealing visual that let\u2019s you really look into how the equations work. One interesting feature of the equations that isn\u2019t obvious on the surface is that that tamping down alpha, the growth rate of the prey species, doesn\u2019t actually decrease the peaks that the prey species reaches, because those peaks are determined by the interaction between the predator and prey species, and the lower growth rate ends up tamping down the population of the predator species as well:", "Of course, there\u2019s the important question of if this model actually describes how animal populations in the wild change over time. For that answer, we would need to read up on biology, but I would reiterate that this model doesn\u2019t need to need to forecast actual animal populations with exactitude in order to be useful.", "Going from the static, two equation model to a more dynamic, semi-random model of the sort highlighted in the Washington Post or 3Blue1Brown video requires a bit more coding, but less than you might imagine. The sort of SIR epidemiological models they highlight have more moving parts, with numerous individuals being modeled out and a certain amount of random chance playing a role, but then, the computer does most of the heavy lifting. The real work is in thinking out how to set the model up, not actually doing the modeling.", "This sort of model is a prime use case for object oriented programming. After all, the model is really just representing a bunch of individuals with certain attributes (whether or not they\u2019ve been infected, their location, how long they\u2019ve been infected, etc.) and certain ways of interacting (moving from place to place, transmitting the disease). So we can simulate the workings of the model by creating a class of object representing individual cases and letting them interact.", "For this model, our class needs a handful of attributes. Of course, we need to know if the individual is sick or not, so one attribute is \u2018status\u2019, which I\u2019ll set to 0 for uninfected but susceptible, 1 for sick and 2 for removed. Each individual also needs a location, and some information about how they move around, so I gave them all a \u2018speed\u2019 as well. I also imagined each individual as having a set of \u2018bounds\u2019, marking the general area that they moved around in. You could use this to model, say, people living in different cities (as 3Blue1Brown does) or perhaps different communities, with some linkages between them, but not complete overlap.", "Finally, you need to describe the way that individuals may change and interact. In this simple version, I include a method that sets an individual\u2019s direction of movement, one that changes their location along that direction of movement and one that covers possible transmission. In this model, I assume that being near enough to an infectious person (our model\u2019s crude proxy for social interaction) carries a certain probability of catching the disease. In this example the radius and probability are global variables, so I set them the same for everyone, but you could easily change the code to make them attributes of the individuals themselves and set to different values for different individuals (perhaps some individuals are naturally less susceptible than others). In this simple example, you might set up the class like this:", "Now that you have this class set up, actually running the model is pretty straightforward. Generate a bunch of objects and place them randomly throughout the grid, a handful of them should be instantiated with the \u2018status\u2019 set to 1, representing infected. In each turn, update their positions, see if any transmission occurs and then track how many people are infected. Rinse and repeat, keeping track of how many people are in each category in each turn and then generate your plot from the data, this time using the ArtistAnimation() function, which takes a list of Matplotlib artist objects:", "This generates this plot, much like the ones generated in the Washington Post article:", "Creating the animated scatter plot follows essentially the same steps, except we also need to track the locations of every individual, in addition to their status. To make the visual easier to follow, I also dropped the number of individuals created and slowed them down (and also decreased the infectious radius and the probability of infection, because when you slow the individuals down they spend more turns near each other as they slowly pass by, essentially pushing your infection rate up).", "Which will create something along the lines of this, subject to chance:", "There are two main differences between these plots and those produced by Grant Sanderson at 3Blue1Brown. One is the quality of the styling \u2014 I\u2019ve put up these examples with as little styling as possible to show the mechanics of the code as clearly as possible, while the 3Blue1Brown animations are carefully and beautifully rendered for maximum clarity of the final animations. Animations as well crafted as Grant\u2019s may be beyond my capabilities \u2014 he actually wrote his own animation library to create his videos \u2014 but it\u2019s possible to clean up the visuals using just Matplotlib\u2019s tools to produce some excellent animations.", "The second big difference is really not about the model or the code, it\u2019s about how informative the questions being asked are. Again, though, I would stress that anyone with some curiosity and the willingness to do a bit of research can start to ask interesting questions. How could you make the model better conform to what we\u2019re learning about the disease? How would changes in the behavior of the individuals in these models affect the outcomes? The barrier to looking for answers is lower than you might think.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data scientist with a particular passion for limericks, policy and renewable energy."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F57f9e174d27d&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----57f9e174d27d--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----57f9e174d27d--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@max.samuel.miller?source=post_page-----57f9e174d27d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@max.samuel.miller?source=post_page-----57f9e174d27d--------------------------------", "anchor_text": "Max Miller"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdfd5ba1a8332&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&user=Max+Miller&userId=dfd5ba1a8332&source=post_page-dfd5ba1a8332----57f9e174d27d---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F57f9e174d27d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F57f9e174d27d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.washingtonpost.com/graphics/2020/world/corona-simulator/", "anchor_text": "Washington Post"}, {"url": "https://www.youtube.com/watch?v=gxAaO2rsdIs", "anchor_text": "excellent video"}, {"url": "https://www.technologyreview.com/2017/04/11/5113/the-dark-secret-at-the-heart-of-ai/", "anchor_text": "famously opaque"}, {"url": "https://matplotlib.org/3.2.1/api/animation_api.html", "anchor_text": "creating animations"}, {"url": "https://imagemagick.org/", "anchor_text": "ImageMagick"}, {"url": "https://en.wikipedia.org/wiki/Compartmental_models_in_epidemiology", "anchor_text": "SIR epidemiological models"}, {"url": "https://github.com/3b1b/manim", "anchor_text": "his own animation"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----57f9e174d27d---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/modeling?source=post_page-----57f9e174d27d---------------modeling-----------------", "anchor_text": "Modeling"}, {"url": "https://medium.com/tag/data-science?source=post_page-----57f9e174d27d---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/covid-19?source=post_page-----57f9e174d27d---------------covid_19-----------------", "anchor_text": "Covid-19"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----57f9e174d27d---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F57f9e174d27d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&user=Max+Miller&userId=dfd5ba1a8332&source=-----57f9e174d27d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F57f9e174d27d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&user=Max+Miller&userId=dfd5ba1a8332&source=-----57f9e174d27d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F57f9e174d27d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----57f9e174d27d--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F57f9e174d27d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----57f9e174d27d---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----57f9e174d27d--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----57f9e174d27d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----57f9e174d27d--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----57f9e174d27d--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----57f9e174d27d--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----57f9e174d27d--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----57f9e174d27d--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----57f9e174d27d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@max.samuel.miller?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@max.samuel.miller?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Max Miller"}, {"url": "https://medium.com/@max.samuel.miller/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "409 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdfd5ba1a8332&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&user=Max+Miller&userId=dfd5ba1a8332&source=post_page-dfd5ba1a8332--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F930bd413e257&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-population-models-in-python-57f9e174d27d&newsletterV3=dfd5ba1a8332&newsletterV3Id=930bd413e257&user=Max+Miller&userId=dfd5ba1a8332&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}