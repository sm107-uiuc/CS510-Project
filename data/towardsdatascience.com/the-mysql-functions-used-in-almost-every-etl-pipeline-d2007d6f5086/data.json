{"url": "https://towardsdatascience.com/the-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086", "time": 1683003998.250638, "path": "towardsdatascience.com/the-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086/", "webpage": {"metadata": {"title": "The MySQL Functions Used in (Almost) Every ETL Pipeline | by J.P. Rinfret | Towards Data Science", "h1": "The MySQL Functions Used in (Almost) Every ETL Pipeline", "description": "What does \u201cETL\u201d stand for? To answer this, let\u2019s consider the 80/20 rule that every Data Scientist knows: a data scientist\u2019s time is allocated 80% to Extracting, Transforming, and Loading data and\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.youtube.com/watch?v=lDnL1gwCE0o", "anchor_text": "here", "paragraph_index": 5}, {"url": "https://www.youtube.com/watch?v=KjA2LhT4TRU", "anchor_text": "here", "paragraph_index": 5}, {"url": "https://www.w3schools.com/sql/default.asp", "anchor_text": "further reading", "paragraph_index": 34}], "all_paragraphs": ["What does \u201cETL\u201d stand for? To answer this, let\u2019s consider the 80/20 rule that every Data Scientist knows: a data scientist\u2019s time is allocated 80% to Extracting, Transforming, and Loading data and 20% to simultaneously watching The Office re-runs and Amazon Prime\u2019s Jack Ryan as to juxtapose John Krasinski\u2019s incredible range.", "In this blog, we will examine some of the most frequently used MySQL functions, five to be exact and in no particular order, that every SQL beginner should have committed to memory.", "Since the purpose of this blog is to focus on the frequently used SQL commands, we will only be focusing on the data extraction process of the pipeline.", "To kick us off, let\u2019s import Pandas and Sqlite3 and define a \u201ccursor.\u201d The cursor object allows us to call the .execute() method to perform SQL commands.", "Now that we are connected to our database, which is a local file called \u201cdata.sqlite\u201d, we can start extracting the data. But first, let\u2019s examine the database schema:", "As we can see, we have multiple tables some of which have one-to-one relationships and some have one-to-many relationships (more on that here and here).", "The SELECT function is what allows us to grab the desired data. Let\u2019s say we wanted every column in the orderdetails table. We could write a query like the below:", "However, instead of writing out each column we can simply use an asterisk to grab every column.", "Now if your data contained duplicate entries, you can call DISTINCT to grab only unique data points before putting the data into a dataframe.", "Notice that the first four rows of the above dataframe have the same orderNumber. We can see that each orderNumber contains multiple productCodes, each with their own quantity and price. Let\u2019s say for each order we wanted to know the total amount the customer spent \u2014 notice we do not have a total column for each product. This is where aggregator functions can come in handy. Note, when using aggregator functions, it is very import to always include the GROUP BY function (more on this later) so that it is known what to aggregate the data on, in this case orderNumber.", "The JOIN command is used to select multiple rows from different tables using a common column (a.k.a. the foreign key). We will focus on the four most common join clauses: outer, inner, left, and right. Note that you must define the common column with either ON or USING. The syntax for ON would be \u2026 ON table1.common_column_name = table2.common_column_name whereas the syntax for USING is simply \u2026 USING (common_column_name).", "An OUTER JOIN returns data where the is a match in either the left or right table.", "An INNER JOIN returns data where the is a match in both the left and right table.", "A LEFT JOIN returns all records from the left table plus the matching rows from the right table.", "A RIGHT JOIN returns all records from the right table plus the matching rows from the left table.", "Now let\u2019s walk through an example. Using our previous schema, let\u2019s say we wanted the employee number, first name, last name, and zip code of every employee. We could perform a simple INNER JOIN of the employees table and offices table using officeCode as our foreign key (this is just one of many ways to do this).", "Note, when using joins you have to specify which table you are pulling the columns from. This can be done using the syntax table_name.column_name in the SELECT clause. This can be tedious so a more common approach is to assign a nickname for each table. The above code labels the employees table as \u201ce\u201d and the offices table as \u201co\u201d to avoid typing out the full table name for each column needed.", "The WHERE function is used when we want to set a certain conditional on the data we want. Additionally, you can use WHERE along with AND, OR, NOT, LIKE, and BETWEEN to set specific requirements for the data. Let\u2019s look at a couple of quick examples (these queries are not using the original schema and are purely illustrative).", "The ORDER BY command organizes our data by a specified column in ascending (default) or descending order. Let\u2019s revisit our original schema for a quick example.", "Let\u2019s grab customerName, creditLimit, addressLine1, city, state, postalCode, and country from the customers table. We will order the results alphabetically by state and then by city. Finally, we will only consider the U.S. customers who have a creditLimit of more than $25,000.", "Let\u2019s query the exact same data except this time we will sort the rows by creditLimit and only look at the top 5 creditLimits (using the LIMIT clause)", "As mentioned earlier, the GROUP BY function is typically used with aggregator functions in order to group the \u201cresults\u201d data by one or more columns. Below is a simple example of how we can group by one column in order to see an aggregator function applied to a different column. Specifically, let\u2019s say we wanted to see which five states, U.S. only, we do the most business in. This could involve grouping the data by states and summing the orderTotal column we calculated earlier.", "Note that in the above code you can pass 1, 2, etc. instead of the column_name. This specifies the location of the column (relative to the SELECT cause) to group the results on. So in the above example, we could have said \u201cGROUP BY 1\u201d instead of \u201cGROUP BY state\u201d since state is in the 1 position of the SELECT clause", "Another important function that is commonly used with the GROUP BY function is HAVING. The HAVING function is similar to the WHERE function in that it creates a condition that needs to be satisfied for a row to be included in the results, but it is different in that the HAVING clause assigns the conditional directly to the GROUP BY command. This might be a tad bit confusing so let\u2019s try using some code to clarify this point.", "The below code pulls for us the customerName, customerNumber, productName, productCode, and totalOrdered for any customer who has ordered 10 or more of the products cumulative. Note that the HAVING clause acts similarly to the WHERE clause here but only applies to the GROUP BY 1 (customerName), 4 (productCode).", "Subqueries are basically queries within queries. They can be used in many ways to solve many different problems. But ultimately, you want use subqueries when your conditionals get complicated and would require multiple JOIN commands and/or multiple WHERE commands.", "For example, what if we wanted to get the firstName, lastName, and city of every employee in an office with less than 5 employees. One way of handling this would be to first query a results set of offices with less than 5 employees and then only consider the firstName, lastName, and city of the employees whose officeCodes is in the results set. Let\u2019s see what the code looks like for that:", "In this blog we covered the 5 most frequently used MySQL functions in a typical ETL Pipeline, along with all of their corresponding clauses/commands. So let\u2019s quickly recap.", "Function 1: SELECT, SELECT DISTINCT, SELECT + an aggregator function and AS (alias for what the column should be called in the output)", "Function 2: JOIN (OUTER/INNER/LEFT/RIGHT) + ON or USING", "Function 3: WHERE + AND/OR/NOT, LIKE, BETWEEN", "Function 4: ORDER BY + ASC (default) or DESC", "Function 5: GROUP BY + HAVING", "Subqueries: a query within a query", "I highly encourage everyone reading this blog to do further reading. What do you think? Are there any honorable mentions?", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "TEM @ Komodo Health \u2014 Blogs & Opinions are Mine Only | Data Science & Machine Learning at Flatiron School | Mathematics at Fairfield University"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd2007d6f5086&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d2007d6f5086--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d2007d6f5086--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@jprinfret?source=post_page-----d2007d6f5086--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jprinfret?source=post_page-----d2007d6f5086--------------------------------", "anchor_text": "J.P. Rinfret"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3b361e3c4389&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&user=J.P.+Rinfret&userId=3b361e3c4389&source=post_page-3b361e3c4389----d2007d6f5086---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd2007d6f5086&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd2007d6f5086&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@realaxer?utm_source=medium&utm_medium=referral", "anchor_text": "tian kuan"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.youtube.com/watch?v=lDnL1gwCE0o", "anchor_text": "here"}, {"url": "https://www.youtube.com/watch?v=KjA2LhT4TRU", "anchor_text": "here"}, {"url": "https://www.w3schools.com/sql/sql_join.asp", "anchor_text": "https://www.w3schools.com/sql/sql_join.asp"}, {"url": "https://www.w3schools.com/sql/sql_join.asp", "anchor_text": "https://www.w3schools.com/sql/sql_join.asp"}, {"url": "https://www.w3schools.com/sql/sql_join.asp", "anchor_text": "https://www.w3schools.com/sql/sql_join.asp"}, {"url": "https://www.w3schools.com/sql/sql_join.asp", "anchor_text": "https://www.w3schools.com/sql/sql_join.asp"}, {"url": "https://www.w3schools.com/sql/default.asp", "anchor_text": "further reading"}, {"url": "https://medium.com/tag/sql?source=post_page-----d2007d6f5086---------------sql-----------------", "anchor_text": "Sql"}, {"url": "https://medium.com/tag/data-engineering?source=post_page-----d2007d6f5086---------------data_engineering-----------------", "anchor_text": "Data Engineering"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d2007d6f5086---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-analysis?source=post_page-----d2007d6f5086---------------data_analysis-----------------", "anchor_text": "Data Analysis"}, {"url": "https://medium.com/tag/database?source=post_page-----d2007d6f5086---------------database-----------------", "anchor_text": "Database"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd2007d6f5086&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&user=J.P.+Rinfret&userId=3b361e3c4389&source=-----d2007d6f5086---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd2007d6f5086&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&user=J.P.+Rinfret&userId=3b361e3c4389&source=-----d2007d6f5086---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd2007d6f5086&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d2007d6f5086--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd2007d6f5086&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d2007d6f5086---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d2007d6f5086--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d2007d6f5086--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d2007d6f5086--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d2007d6f5086--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d2007d6f5086--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d2007d6f5086--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d2007d6f5086--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d2007d6f5086--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jprinfret?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jprinfret?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "J.P. Rinfret"}, {"url": "https://medium.com/@jprinfret/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "215 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3b361e3c4389&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&user=J.P.+Rinfret&userId=3b361e3c4389&source=post_page-3b361e3c4389--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F2f7d93cc09a2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-mysql-functions-used-in-almost-every-etl-pipeline-d2007d6f5086&newsletterV3=3b361e3c4389&newsletterV3Id=2f7d93cc09a2&user=J.P.+Rinfret&userId=3b361e3c4389&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}