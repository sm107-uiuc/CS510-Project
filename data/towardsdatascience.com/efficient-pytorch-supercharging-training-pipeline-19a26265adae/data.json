{"url": "https://towardsdatascience.com/efficient-pytorch-supercharging-training-pipeline-19a26265adae", "time": 1683012711.866401, "path": "towardsdatascience.com/efficient-pytorch-supercharging-training-pipeline-19a26265adae/", "webpage": {"metadata": {"title": "Efficient PyTorch \u2014 Supercharging Training Pipeline | by Eugene Khvedchenya | Towards Data Science", "h1": "Efficient PyTorch \u2014 Supercharging Training Pipeline", "description": "The final goal of every deep learning project is to bring value to the product. Of course, we want to have the best possible model. What is \u201cbest\u201d \u2014 depends on the particular use case, and I will\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/catalyst-team/catalyst", "anchor_text": "Catalyst", "paragraph_index": 1}, {"url": "https://github.com/BloodAxe/pytorch-toolbelt", "anchor_text": "pytorch-toolbelt", "paragraph_index": 1}, {"url": "https://github.com/catalyst-team/catalyst", "anchor_text": "Catalyst", "paragraph_index": 4}, {"url": "https://github.com/PyTorchLightning/pytorch-lightning", "anchor_text": "PyTorch-Lightning", "paragraph_index": 4}, {"url": "https://github.com/fastai/fastai", "anchor_text": "Fast.AI", "paragraph_index": 4}, {"url": "https://pytorch.org/ignite/", "anchor_text": "Ignite", "paragraph_index": 4}, {"url": "https://pytorch.org/ecosystem/", "anchor_text": "others", "paragraph_index": 4}, {"url": "https://www.wandb.com/", "anchor_text": "Weights&Biases", "paragraph_index": 13}, {"url": "https://github.com/catalyst-team/alchemy", "anchor_text": "Alchemy", "paragraph_index": 13}, {"url": "http://TensorBoard.dev", "anchor_text": "TensorBoard.dev", "paragraph_index": 13}, {"url": "https://www.kaggle.com/c/global-wheat-detection", "anchor_text": "Global Wheat Detection", "paragraph_index": 17}, {"url": "https://www.amazon.com/Mastering-OpenCV-Practical-Computer-Projects/dp/1849517827/ref=sr_1_2?dchild=1&keywords=Mastering+OpenCV+for+practical&qid=1591877326&sr=8-2", "anchor_text": "Mastering OpenCV for practical computer-vision projects", "paragraph_index": 34}, {"url": "https://www.kaggle.com/bloodaxe", "anchor_text": "master", "paragraph_index": 34}, {"url": "https://github.com/albumentations-team/albumentations", "anchor_text": "Albumentations", "paragraph_index": 34}, {"url": "https://github.com/BloodAxe/pytorch-toolbelt", "anchor_text": "-toolbelt", "paragraph_index": 34}, {"url": "https://www.linkedin.com/in/cvtalks/", "anchor_text": "https://www.linkedin.com/in/cvtalks/", "paragraph_index": 34}], "all_paragraphs": ["The final goal of every deep learning project is to bring value to the product. Of course, we want to have the best possible model. What is \u201cbest\u201d \u2014 depends on the particular use case, and I will leave this discussion aside from this post. I want to talk about how to get the maximum from your train.py script.", "Disclaimer: In the next section, I will include a few source-code listings. Most of them are tailored for the Catalyst framework (version 20.08) and available in pytorch-toolbelt.", "Advice 1 \u2014 Leverage high-level training frameworks from PyTorch ecosystem", "PyTorch offers excellent flexibility and freedom in writing your training loop from scratch. In theory, this opens an endless possibility to write any training logic. In practice, you rarely will write exotic training loops for training CycleGAN, distilling BERT, or implementing 3D object detection from scratch.", "Writing a full training loop from scratch is an excellent way to learn the fundamentals of PyTorch. Yet I highly recommend switching into high-level frameworks once you get some grasp. There are plenty of options: Catalyst, PyTorch-Lightning, Fast.AI, Ignite, and others. High-level libraries save your time by:", "It takes some time to get the maximum from these high-level libraries. However, this one-time investment pays off in the long-run.", "Advice 2 \u2014 Look at additional metrics during the training", "Nearly every quick-start example project for classifying images in MNIST or CIFAR and even ImageNet have one thing in common \u2014 they report a minimal set of metrics during and after the training. Most often, it\u2019s Top-1 and Top-5 accuracy, error rate, train/validation losses, and that\u2019s it. Although these metrics are essential, it\u2019s just the tip of an iceberg!", "Modern image classification models have tens of millions of parameters. Do you want to evaluate it using only one scalar value?", "CNN classification model that has the best Top-1 accuracy may not be the best one in terms of generalization. Depending on your domain and requirements, you may want to save models with the lowest false-positive/false-negative rates or the one with the highest average precision.", "Let me give you some ideas, what data you can log during the training:", "Advice 3 \u2014 Use TensorBoard or any other solution to monitor progress of training", "Probably the last thing you want to do when training a model is to look at the console output. A powerful dashboard where you can see all the metrics all at once is a way more efficient way to check the results of the training.", "For small number experiments and non-distributed environments, TensorBoard is a gold standard. It\u2019s fully supported in PyTorch since version 1.3 and provides a rich set of features to manage trials. There are more advanced cloud-based solutions like Weights&Biases, Alchemy, and TensorBoard.dev that makes it easier to monitor and compare training sessions over multiple machines.", "When using Tensorboard, I typically log set of metrics:", "It\u2019s super-important to look at the predictions of the model visually. Sometimes training data is noisy; sometimes, the model is over-fitting to artifacts of an image. By visualizing the best and worst batch (based on loss or your metric of interest), you can get valuable insight into cases where your models perform well and poorly.", "Advice 5 \u2014 Visualize best and worst batch every epoch. It may give you invaluable insights", "For example, in the Global Wheat Detection challenge, we need to detect wheat heads on the image. By visualizing the pictures of the best batch (based on mAP metric), we see that model does a near-perfect job in finding small objects.", "In contrast, when we look at the first sample of the worst batch, we see that model struggles to make accurate predictions on large objects. The visual analysis gives an invaluable insight for any data-scientist.", "Looking at the worst batch also helps to spot errors in data labeling. Usually, samples with wrong labels with have a bigger loss and hence will emerge in the worst batch. By doing a visual check of the worst batch at each epoch, you can eliminate those mistakes:", "Advice 4 \u2014 If your model returns more than one value \u2014 use Dict to return the result. Don\u2019t use tuple.", "In complex models, it is not uncommon to return multiple outputs. For instance, object detection models usually return bounding boxes and their labels, in image segmentation CNN-s we often return intermediate masks for deep supervision, multi-task learning is also viral these days.", "In many open-source implementations, I see quite often something like:", "With all the respect to authors, I claim this is a bad, very bad approach to return results from the model. Here\u2019s what I recommend to use instead:", "This advice somewhat resonate with postulate from \u201cThe Zen of Python\u201d \u2014 \u201cExplicit is better than implicit\u201d. Following this rule will make your code much cleaner and easier to maintain.", "So why I think the second option is better? For several reasons:", "With Dict you can even change the behavior of your model to return additional outputs on demand. For instance, here\u2019s a short snippet demonstrating how to return multiple \u201cmain\u201d outputs and two \u201cauxiliary\u201d outputs for metric learning:", "The same advice applies to Dataset class. For the Cifar-10 toy example, it is ok to return the image and its corresponding label as a tuple. But when dealing with multi-task or multi-input models, you want to return samples from your dataset as Dict type:", "When you have Dictionaries in your code, you can reference input/outputs with name constants everywhere. Following this rule will make your training pipeline very clear and easy to follow:", "Advice 5 \u2014 Use torch.autograd.detect_anomaly() to find arithmetical anomalies during the training", "If you see any NaNs or Inf in the loss/metrics during the training \u2014 an alarm should ring in your head. It is an indicator that something is wrong in your pipeline. Typically, it could be caused by:", "To find the exact place in your code, where Nan/Inf appears for the first time, PyTorch offers an easy-to-use method torch.autograd.detect_anomaly():", "Use it for debugging purposes and disabled otherwise since anomaly detection brings computational overhead and slows down training loop at around 10\u201315%.", "Thanks for reading! I hope you enjoy it and found some take-away\u2019s from this post. And what your tips & tricks you want to share? Please write in comments your know-hows, or if you\u2019re interested in particular PyTorch-related topics \u2014 let me know too!", "Eugene is a computer vision & machine learning engineer with more than ten years of experience in software development. Author of \u201cMastering OpenCV for practical computer-vision projects\u201d book. Kaggle master. Member of Albumentations core team. Author of pytorch-toolbelt. OpenCV, PyTorch, and Catalyst contributor. https://www.linkedin.com/in/cvtalks/", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Eugene Khvedchenya is a computer vision developer skilled in high-performance image processing. In his spare time he loves to share his knowledge or doing sport"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F19a26265adae&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----19a26265adae--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----19a26265adae--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@eugenekhvedchenya?source=post_page-----19a26265adae--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@eugenekhvedchenya?source=post_page-----19a26265adae--------------------------------", "anchor_text": "Eugene Khvedchenya"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3b010eb08569&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&user=Eugene+Khvedchenya&userId=3b010eb08569&source=post_page-3b010eb08569----19a26265adae---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F19a26265adae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F19a26265adae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@stripdua?utm_source=medium&utm_medium=referral", "anchor_text": "Nur Faizin"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/catalyst-team/catalyst", "anchor_text": "Catalyst"}, {"url": "https://github.com/BloodAxe/pytorch-toolbelt", "anchor_text": "pytorch-toolbelt"}, {"url": "https://unsplash.com/@colterolmstead?utm_source=medium&utm_medium=referral", "anchor_text": "Colter Olmstead"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/catalyst-team/catalyst", "anchor_text": "Catalyst"}, {"url": "https://github.com/PyTorchLightning/pytorch-lightning", "anchor_text": "PyTorch-Lightning"}, {"url": "https://github.com/fastai/fastai", "anchor_text": "Fast.AI"}, {"url": "https://pytorch.org/ignite/", "anchor_text": "Ignite"}, {"url": "https://pytorch.org/ecosystem/", "anchor_text": "others"}, {"url": "https://unsplash.com/@mcverry?utm_source=medium&utm_medium=referral", "anchor_text": "Mikail McVerry"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.wandb.com/", "anchor_text": "Weights&Biases"}, {"url": "https://github.com/catalyst-team/alchemy", "anchor_text": "Alchemy"}, {"url": "http://TensorBoard.dev", "anchor_text": "TensorBoard.dev"}, {"url": "https://github.com/BloodAxe/Catalyst-Inria-Segmentation-Example/blob/master/fit_predict.py#L258", "anchor_text": "https://github.com/BloodAxe/Catalyst-Inria-Segmentation-Example/blob/master/fit_predict.py#L258"}, {"url": "https://www.kaggle.com/c/global-wheat-detection", "anchor_text": "Global Wheat Detection"}, {"url": "https://unsplash.com/@brett_jordan?utm_source=medium&utm_medium=referral", "anchor_text": "Brett Jordan"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.amazon.com/Mastering-OpenCV-Practical-Computer-Projects/dp/1849517827/ref=sr_1_2?dchild=1&keywords=Mastering+OpenCV+for+practical&qid=1591877326&sr=8-2", "anchor_text": "Mastering OpenCV for practical computer-vision projects"}, {"url": "https://www.kaggle.com/bloodaxe", "anchor_text": "master"}, {"url": "https://github.com/albumentations-team/albumentations", "anchor_text": "Albumentations"}, {"url": "https://github.com/BloodAxe/pytorch-toolbelt", "anchor_text": "-toolbelt"}, {"url": "https://www.linkedin.com/in/cvtalks/", "anchor_text": "https://www.linkedin.com/in/cvtalks/"}, {"url": "https://medium.com/tag/pytorch?source=post_page-----19a26265adae---------------pytorch-----------------", "anchor_text": "Pytorch"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----19a26265adae---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/catalyst?source=post_page-----19a26265adae---------------catalyst-----------------", "anchor_text": "Catalyst"}, {"url": "https://medium.com/tag/tips-and-tricks?source=post_page-----19a26265adae---------------tips_and_tricks-----------------", "anchor_text": "Tips And Tricks"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F19a26265adae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&user=Eugene+Khvedchenya&userId=3b010eb08569&source=-----19a26265adae---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F19a26265adae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&user=Eugene+Khvedchenya&userId=3b010eb08569&source=-----19a26265adae---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F19a26265adae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----19a26265adae--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F19a26265adae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----19a26265adae---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----19a26265adae--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----19a26265adae--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----19a26265adae--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----19a26265adae--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----19a26265adae--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----19a26265adae--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----19a26265adae--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----19a26265adae--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@eugenekhvedchenya?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@eugenekhvedchenya?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Eugene Khvedchenya"}, {"url": "https://medium.com/@eugenekhvedchenya/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "221 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3b010eb08569&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&user=Eugene+Khvedchenya&userId=3b010eb08569&source=post_page-3b010eb08569--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F3b010eb08569%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-pytorch-supercharging-training-pipeline-19a26265adae&user=Eugene+Khvedchenya&userId=3b010eb08569&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}