{"url": "https://towardsdatascience.com/making-matplotlib-beautiful-by-default-d0d41e3534fd", "time": 1683007840.2718878, "path": "towardsdatascience.com/making-matplotlib-beautiful-by-default-d0d41e3534fd/", "webpage": {"metadata": {"title": "Making Matplotlib Beautiful By Default | by Callum Ballard | Towards Data Science", "h1": "Making Matplotlib Beautiful By Default", "description": "If you\u2019ve ever made a data visualisation in Python, chances are you\u2019ve used Matplotlib. It\u2019s a package that divides opinion. Some notionally simple visualisations take a baffling amount of code to\u2026"}, "outgoing_paragraph_urls": [{"url": "https://matplotlib.org/3.1.0/gallery/color/named_colors.html", "anchor_text": "named colours in Matplotlib", "paragraph_index": 4}, {"url": "http://colormind.io/", "anchor_text": "Colormind.io", "paragraph_index": 6}, {"url": "https://matplotlib.org/3.1.1/gallery/color/colormap_reference.html", "anchor_text": "viridis", "paragraph_index": 9}, {"url": "https://colordesigner.io/gradient-generator", "anchor_text": "colordesigner.io", "paragraph_index": 9}, {"url": "https://seaborn.pydata.org/", "anchor_text": "Seaborn", "paragraph_index": 12}, {"url": "https://seaborn.pydata.org/examples/heatmap_annotation.html", "anchor_text": "Heatmaps", "paragraph_index": 12}, {"url": "https://seaborn.pydata.org/examples/wide_form_violinplot.html", "anchor_text": "Violins", "paragraph_index": 12}, {"url": "https://seaborn.pydata.org/examples/joint_kde.html", "anchor_text": "Joint Plots", "paragraph_index": 12}, {"url": "https://matplotlib.org/3.2.1/tutorials/introductory/customizing.html", "anchor_text": "own tutorial on the matter", "paragraph_index": 14}, {"url": "https://towardsdatascience.com/how-happy-is-my-girlfriend-be895381d7c2", "anchor_text": "one of my blogs", "paragraph_index": 18}, {"url": "https://www.linkedin.com/in/callum-ballard/", "anchor_text": "LinkedIn", "paragraph_index": 19}], "all_paragraphs": ["If you\u2019ve ever made a data visualisation in Python, chances are you\u2019ve used Matplotlib. It\u2019s a package that divides opinion. Some notionally simple visualisations take a baffling amount of code to produce. In this day and age, people expect to be able to interact with charts \u2014 something not offered with vanilla Matplotlib. And, perhaps most importantly, Matplotlib charts can often look plain bad.", "It\u2019s true that the default Matplotlib settings can make your visuals look plain, if not a little dated (if we\u2019re being generous). Its default shade of blue haunts the dreams of many a data scientist.", "One of the under-appreciated aspects of Matplotlib, however, is just how customisable it is. Far from the above example, you can create seriously intricate visuals (admittedly, this one took many lines of code, and a chunk of time rarely available to most data scientists).", "What\u2019s more, we can write some relatively code to set default visual settings. We can get quite granular. Don\u2019t want that annoying box around every plot? Get rid of it by default. Want to use your brand\u2019s colour palette without having to specify the hex codes every single time? Set them by default. Want to use Comic Sans for all your chart labels? Seek professional help (though you can set this by default as well, if you really insist).", "Though there are named colours in Matplotlib (such as the well known colours \u2018bisque\u2019, \u2018lavenderblush\u2019, and \u2018lightgoldenrodyellow\u2019), plots will also take colours in the form of hex codes. This is especially useful if we want to use a custom colour palette. For example, my CB91 brand uses a pre-defined set of colours.", "We can set these as variables, by passing their hexes as strings:", "Note \u2014 if you want to create your own colour palette, there are some useful tools online that can help. Colormind.io is especially cool \u2014 it uses deep learning to learn colour styles from photographs, movies, and popular art, and hence recommend hues and shades that go well together. Also, I can confirm that as a Brit, switching indiscriminately between \u2018color\u2019 and \u2018colour\u2019 has resulted in some deeply annoying code errors in my time.", "We can put these defined colours into a list, and then pass this list into Matplotlib\u2019s colour \u2018cycler\u2019.", "It will now use \u2018CB91_Blue\u2019 as the default chart colour for all plots in the notebook AND cycle through the colour list in order when creating multi-category plots.", "You can also define gradients using lists of hex colours, which can then be used pretty much anywhere where viridis is a valid entry (e.g. Seaborn heatmaps). Of course, to make these gradients nice and smooth, you need lots of defined hex values in that list (at least 40 in my experience). Creating such a long list manually can be a pain \u2014 I instead suggest generating one automatically using a site like colordesigner.io (simply choose the colours that you want the gradient to transition between, max out the number of gradient steps, then extract the hex codes from the resulting HTML).", "Edit: Peter Cahill has written a Python function that will generate gradient lists with n steps between two colour hexes\u2014 see the responses to this blog, below.", "Here\u2019s an example of a gradient running between two of my brand\u2019s colours, and how they look on a matplotlib chart.", "One of Matplotlib\u2019s nicest features comes in the form of an entirely different package; Seaborn. A library that uses Matplotlib as a base, Seaborn is a great way to create more complex chart types, like Heatmaps, Violins, and Joint Plots in a line or two of code.", "One lesser known feature of Seaborn is its ability to control Matplotlib plot defaults, using the .set() method. This is a neat way to tidy up plots, changing the colour and weight of axes (or removing them entirely), and the default font. We can also use the .set_context() method to fine-tune font size settings.", "An example of how I use all of this is given below (a full list of everything you can control with the .set() method can be found in Matplotlib\u2019s own tutorial on the matter).", "How you structure a repo is, of course, a very personal thing. I find that having all of the discussed code at the top of a Jupyter notebook can be quite untidy \u2013 especially by the time you need to set up multiple different gradients and their associated lists of 40+ hex codes. Moreover, if you have multiple notebooks in a repo, it can be a pain to keep things consistent if you ever want to make changes to the visual defaults.", "To address these issues, I like to keep all the code pertaining to visual defaults in a separate python file elsewhere in the repo (called \u2018cb91visuals.py\u2019) then import them as part of the standard imports at the top of each notebook. Thus, all the messy lists of hex codes are kept hidden, and if you do need to make an edit, this only needs to be done in one place, with changes automatically reflected everywhere as required.", "There are some other lesser-known Matplotlib/Seaborn commands that I use quite a lot. I tend not to have them set as default, but they can be useful nonetheless.", "\u2026would put numerical labels on a horizontal bar chart, for example the following chart that featured in one of my blogs a couple of weeks ago. Note, to do this I also used the sns.despine() method to remove the x-axis, and passed plt.xticks([]) to remove the axis ticks.", "Thanks for reading all the way to the end of the blog! I\u2019d love to hear any comments about the above, or any of the concepts that the piece touches on. If you have any other Matplotlib tips and tricks, feel free to leave a message below, or reach out to me through LinkedIn.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Analysis Lead at Cleo AI, McKinsey & LSE Alumni, previously published in The Economist. Typically found listening to Japanese Math Rock..."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd0d41e3534fd&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@callumballard?source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@callumballard?source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": "Callum Ballard"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3bcc53c95269&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&user=Callum+Ballard&userId=3bcc53c95269&source=post_page-3bcc53c95269----d0d41e3534fd---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd0d41e3534fd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd0d41e3534fd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.cb91.io/", "anchor_text": "my website"}, {"url": "https://matplotlib.org/3.1.0/gallery/color/named_colors.html", "anchor_text": "named colours in Matplotlib"}, {"url": "http://colormind.io/", "anchor_text": "Colormind.io"}, {"url": "https://matplotlib.org/3.1.1/gallery/color/colormap_reference.html", "anchor_text": "viridis"}, {"url": "https://colordesigner.io/gradient-generator", "anchor_text": "colordesigner.io"}, {"url": "https://seaborn.pydata.org/", "anchor_text": "Seaborn"}, {"url": "https://seaborn.pydata.org/examples/heatmap_annotation.html", "anchor_text": "Heatmaps"}, {"url": "https://seaborn.pydata.org/examples/wide_form_violinplot.html", "anchor_text": "Violins"}, {"url": "https://seaborn.pydata.org/examples/joint_kde.html", "anchor_text": "Joint Plots"}, {"url": "https://matplotlib.org/3.2.1/tutorials/introductory/customizing.html", "anchor_text": "own tutorial on the matter"}, {"url": "https://towardsdatascience.com/how-happy-is-my-girlfriend-be895381d7c2", "anchor_text": "one of my blogs"}, {"url": "https://www.linkedin.com/in/callum-ballard/", "anchor_text": "LinkedIn"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----d0d41e3534fd---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d0d41e3534fd---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----d0d41e3534fd---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/matplotlib?source=post_page-----d0d41e3534fd---------------matplotlib-----------------", "anchor_text": "Matplotlib"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----d0d41e3534fd---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd0d41e3534fd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&user=Callum+Ballard&userId=3bcc53c95269&source=-----d0d41e3534fd---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd0d41e3534fd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&user=Callum+Ballard&userId=3bcc53c95269&source=-----d0d41e3534fd---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd0d41e3534fd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd0d41e3534fd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d0d41e3534fd---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d0d41e3534fd--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@callumballard?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@callumballard?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Callum Ballard"}, {"url": "https://medium.com/@callumballard/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3bcc53c95269&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&user=Callum+Ballard&userId=3bcc53c95269&source=post_page-3bcc53c95269--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F107151aaecd0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmaking-matplotlib-beautiful-by-default-d0d41e3534fd&newsletterV3=3bcc53c95269&newsletterV3Id=107151aaecd0&user=Callum+Ballard&userId=3bcc53c95269&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}