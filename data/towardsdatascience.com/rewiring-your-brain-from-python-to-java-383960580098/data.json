{"url": "https://towardsdatascience.com/rewiring-your-brain-from-python-to-java-383960580098", "time": 1683014312.7082272, "path": "towardsdatascience.com/rewiring-your-brain-from-python-to-java-383960580098/", "webpage": {"metadata": {"title": "Rewiring Your Brain from Python to Java | by Dan Hales | Towards Data Science", "h1": "Rewiring Your Brain from Python to Java", "description": "Confession: my personal experience is almost the complete opposite of the title of this article. I actually started with C++ in college, moved to Java to teach AP Computer Science A, and then entered\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/danhales/java-neural-network", "anchor_text": "neural network package", "paragraph_index": 0}, {"url": "https://www.jgrasp.org/", "anchor_text": "jgrasp", "paragraph_index": 5}, {"url": "https://medium.com/@johnmcclean/lambdas-are-not-functional-programming-63533ce2eb74", "anchor_text": "a far cry from functional programming", "paragraph_index": 40}], "all_paragraphs": ["Confession: my personal experience is almost the complete opposite of the title of this article. I actually started with C++ in college, moved to Java to teach AP Computer Science A, and then entered Python territory to work with all of the snazzy data science libraries available. Now that I\u2019m working on a Java project again (a neural network package that is really pushing my understanding of the underlying math to its limits), I\u2019m really paying attention to the little differences in how the languages work. In particular, I\u2019ve been making notes about the places where standard Python habits can become huge roadblocks when traveling through Java.", "This post is directed at Python programmers (in particular, data scientists) traveling in the opposite lane; I\u2019ll detail some of the initial conceptual hurdles you may face when learning to adapt your Python instincts to Java territory. In particular, I\u2019m going to be avoiding superficial differences like snake_case vs camelCase or how Java requires you to end a statement with a semicolon while Python makes it optional. I\u2019m also going to avoid diving too deeply into OOP vs. functional programming. The focus of this post is the way in which Java requires you to think differently about how to solve whatever problem you\u2019re working on.", "Although it may seem daunting, just remember that many programmers before you have successfully learned Java, so it absolutely can be done.", "In Python, you can write an entire \u201cHello World\u201d program with console output in a single line of code:", "To accomplish this in Java, you need to create an entire class, complete with a main method to serve as the entry point.", "At its heart, every Java program is essentially some class\u2019s main method working with variables and telling other classes what to do (and sometimes, that main method is hidden deep within automated files, like with Android projects). Although there are some ways to run Java outside of a complete class\u2013\u2013I was a big fan of the interactions tab in jgrasp while teaching\u2013\u2013there are some hoops to jump through to make this happen.", "In short, while Python allows you to feed a few commands directly into the interpreter to test out an algorithm, working with Java requires you to place that code in context.", "And then there\u2019s the elephant in the Room above: System.out.println() . This seems like way more work than it should be just to produce console output, right? That\u2019s because we\u2019re being very, very particular about how we want our output to be displayed; out of all of the different places we could put that text, we want it to go to the console, as opposed to a log file, a pop-up window, or a server off in the ether. Python, by default assumes that by print you want the text displayed on the console, but Java does not generally make assumptions like that.", "This leads to our next point\u2026", "Python lets you get away with a lot. Think about how many times you\u2019ve written code like:", "only to have to follow it up with:", "in order to figure out what, exactly, mystery_method() is returning.", "This isn\u2019t necessarily the best way to go about things; obviously, the docs should explain what you\u2019re going to get from mystery_method() , so it\u2019s definitely possible that you already know what you\u2019re getting before you call it. But Python lets you get away with this. You can create a variable for that_value_i_need and know that it can handle whatever mystery_method() spits out.", "Furthermore, you can be pretty confident that you can pull off a high-wire act like this, without even having to think about the data types involved:", "After all, important_value is just a variable, which can hold any data type it needs to\u2026 right?", "In Java, this is absolutely not the case. When declaring a variable, you need to specify its data type from the get-go, and then you\u2019re locked in throughout its lifetime.", "While this might sound daunting and restrictive at first, I find that reading somebody else\u2019s code is so much easier in Java. I can confidently point to a variable and say, \u201cx is an int , because it was declared as an inton line 72. If it\u2019s holding a value returned by someUsefulMethod , that tells mesomeUsefulMethod returns an int (or something that can be promoted to an int , like a short ).", "Although this initially presents you with what feels like an impenetrable wall of reserved words floating around in everyone else\u2019s code and error: cannot find symbolmessages when you try to run yours, the fact that Java requires you to be so specific leads to code being significantly more self-documenting, predictable, and unambiguous than Python. And although I need to be way more meticulous when writing my Java code, I feel significantly more confident in understanding how it works.", "Speaking of documentation, javadoc is a powerful tool for generating clean documentation\u2013\u2013even if you haven\u2019t explicitly written comments (which you should). javadoc will read your code and generate organized html files indicating exactly what data types you need to pass a method and what value you can get in return. Most IDEs even have a button that will do this for you.", "And in order to keep things as unambiguous as possible\u2026", "Let\u2019s revisit our Hello World program in Python. How many different ways could we write it?", "Python gives you a lot of options for accomplishing the same task\u2013\u2013in the above example, we can enclose our string with four distinct syntaxes. This legitimately threw me for a loop when I was learning Python; how could I know which one to use, and when? Is there an elegant rule of thumb to remember?", "If you\u2019re a Python programmer with even a tiny amount of experience, you already know what\u2019s coming: \u201cMost people just go with single quotes. Unless there\u2019s an apostrophe in the string, in which case you can enclose it with double quotes. Unless there\u2019s both an apostrophe and a double quote in the string, in which case you can enclose it in triple single quotes. And I guess if you have single, double, triple single and triple double quotes inside your string, then you can always just go back to single quotes and use an escape character wherever you need it.\u201d", "Because Java is so specific and so strict, learning to work with String s is significantly more straightforward: Always enclose them in double quotes. If you have a double quote inside your String , put an escape character \\ before it: \\\u201d. If you have a \\inside your String, put an escape character before it: \\\\. If you ever see single quotes, like with 'a' , that means you\u2019re dealing with a char , not a String .", "And if you\u2019ve gotten used to being able to throw every value you can think of\u2013\u2013from an int to a KitchenSink\u2013\u2013into a list in Python, you\u2019ll find that working with Java arrays require a very different mindset. All elements in a Java array have to have the same data type, similar to an ndarray or a Series , but with careful design, you can get around this limitation with polymorphic references.", "Although this specificity can be annoying, it makes your code significantly more predictable, which is my gold standard for readability. Blocks are grouped together with curly braces rather than indents, so you can easily tell where they start and end. While this isn\u2019t a huge issue on your computer, I\u2019ve found that grouping by indent in a printed Python book (where the code is split over multiple pages) can create problems for people new to that language.", "Additionally, this strictness means variable scope is significantly easier to wrap your head around in Java than it is in Python, and if you respect the curly braces, it often boils down to, \u201cDefined in the curly braces? Only exists in the curly braces.\u201d You actually have to put in work to declare global variables available to all class methods in Java, whereas in Python you might accidentally wind up using a syntactically valid (yet perfectly inappropriate) value from a completely different part of your program if you ever recycle a variable name. On top of that, you can actually have private fields in your class, instead of hoping everyone respects your underscored variable name.", "And if you ever make a mistake? Well, rather than letting your code run for 90% of its runtime then aborting when it encounters its first error\u2026", "Obviously, Python will parse your code before running it and generate a SyntaxError if it can\u2019t figure out what you\u2019re going for, but I\u2019m sure all of you (especially data scientists) have been annoyed at one point or another when your code screeches to a halt over a simple error, after accomplishing half of what you wanted it to do.", "Oftentimes (in my experience, anyway), this happens because you\u2019ve attempted to perform some sort of an operation \u2014 say, calling a method \u2014 on an object of the wrong type. It\u2019s not a syntax error (you remembered the . !), so the parser doesn\u2019t catch it, and the traceback takes you down a rabbit hole into the core libraries, so you can see exactly what Python assumed you wanted to do with the mystery object you gave it.", "In Java, this step happens before you run your code. Because you\u2019ve locked your variable into a specific data type when you declared it, the Java compiler can verify that every operation you attempt to perform on that object actually exists before runtime, and if the compiler detects an operation that isn\u2019t defined for that data type, your program will not compile and run at all.", "That\u2019s not to say that you\u2019ll never have your Java program terminate unexpectedly \u2014 there is a dynamic aspect to the language, so you\u2019ll become very good friends withNullPointerException and ArrayIndexOutOfBoundsException\u2013\u2013but this added layer of verification, combined with the strict and specific nature of Java, tends to funnel these runtime errors down predictable alleys.", "A downside to this strictness is that Java method calls can become unruly pretty quickly. I absolutely love the functional side of Python, and have started relying not only on unordered keyword arguments, but also passing functions and having default values for optional parameters.", "This is totally valid Python code\u2026", "\u2026which would not fly in Java. Because Java is static-typed, you lock in the data type when you declare the variable. This means you have to pass values that have exactly that data type in exactly the same order as they appear in the method signature. While this reduces flexibility, it also reduces misuse of your code.", "While you can have methods with the same name handle different lists of parameters, Java handles this via overloading, which requires you to write a different version of the method to handle each sequence of data types you want to support as a parameter list. Java checks the data types you passed, sees if there is a method defined for handling that sequence of data types, and calls that method\u2013\u2013methods with the same name and different parameters aren\u2019t really linked in any other way.", "And if you want to provide a default value for one of your parameters? You have to overload that method and drop the default-value parameter from the list.", "The fact that signatures are defined by the data types in the parameter list instead of the name of the variable also creates issues when you\u2019re used to thinking in Python. For example, if we wanted to provide default arguments for overloaded versions of this method:", "We would run into an issue by including two versions with the same data types in their parameter list:", "Both of these methods are called getArea and both expect a double , so when you call getArea(12.3); , Java does not know which path to go down.", "In addition to that, while Java does have some support for lambda expressions, they\u2019re a far cry from functional programming, and attempting to think through a functional solution in an object-oriented language is begging for disaster.", "Oh, and return types? Java limits you to one\u2013\u2013and you have to specify the data type when you write the method, which requires you to know what you want to return well in advance. You may be used to thinking about Python as being able to return multiple values\u2026", "\u2026but it actually returns a single object\u2013\u2013all of the values bundled into a tuple:", "You can be surprisingly productive in Python without ever knowing this fact, but in Java you always have to know what your methods are returning.", "This one might be a bit of a hot take (especially for people coming from a language like C that don\u2019t have automatic garbage collection), but there are certain pieces of Java that require you to think about what\u2019s going on, memory-wise. I\u2019m talking about reference variables!", "For example, what happens when you try to run the following code in Python?", "If you\u2019re coming from a totally-Python background, you\u2019ll expect the following output:", "On the flip side, what do you get from the following Java code?", "That\u2019s right! It will print the memory address. Here\u2019s where my computer stored that:[I@6d06d69c", "Again, Python makes the assumption that when you print a variable referencing a list, you want to see the list\u2019s contents, while Java, by default, prints exactly what is stored in that reference variable: the location of the array in memory. To display the contents, you would need to loop through them:", "While this takes a little bit of effort to wrap your brain around, it forces you to think about what\u2019s actually being passed when you throw around reference variables (the memory address of that object), which gives you a deeper understanding of how your computer is actually carrying out its tasks.", "While Java is not as low-level as other languages, it\u2019s much easier to make the leap from Java reference variables to C pointers than it is to leap from Python references, because you\u2019re used to encountering problems like the one above that force you to consider the memory address.", "But the lack of Python\u2019s \u201cset it and forget it\u201d mentality isn\u2019t limited to reference variables.", "When I think about what makes Python a useful language, I don\u2019t generally think about language features or syntax. I think about the Python ecosystem. With a quick trip to the command line, you can use something like", "to download a snazzy_new_library for use whenever you need it.", "Although you will find people on message who will insist that package tools like maven or gradle are just as powerful as pip or conda , the reality is that while these tools are, indeed, powerful, they aren\u2019t really equivalent. Java programs are generally structured differently\u2013\u2013rather than making a package globally available to any program in that environment, packages tend to be bundled directly with the application that needs them, and often need to be either added manually by dropping a jar file into the right place, or included with a tool that manages your dependences (which is what tools likemaven and gradle are actually great at).", "This can be inconvenient for Python programmers, because it requires you to jump through additional hoops to include a useful existing library on your project, and the size of the project files can get bloated as a result. On the other hand, bundling the included library with the project ensures that the necessary code is actually available when it\u2019s needed.", "Having to adapt your problem-solving skills to fit the quirks of a new programming language can be a scary task, but picking up a new language really does expand the arsenal of tools in your tool kit\u2013\u2013even in your first language. C pointers confused me until I got used to working with Java reference variables, and lambda expressions in Java baffled me until I saw how they were used in functional programming with Python\u2026 which in turn wraps back around to clarifying why we need function pointers in C.", "Although it may seem daunting, just remember that many programmers before you have successfully learned Java, so it absolutely can be done.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F383960580098&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----383960580098--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----383960580098--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://danhalesprogramming.medium.com/?source=post_page-----383960580098--------------------------------", "anchor_text": ""}, {"url": "https://danhalesprogramming.medium.com/?source=post_page-----383960580098--------------------------------", "anchor_text": "Dan Hales"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F81b7a04fbca0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&user=Dan+Hales&userId=81b7a04fbca0&source=post_page-81b7a04fbca0----383960580098---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F383960580098&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F383960580098&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/danhales/java-neural-network", "anchor_text": "neural network package"}, {"url": "https://unsplash.com/@tricell1991?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Waranont (Joe)"}, {"url": "https://unsplash.com/s/photos/java-island?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://www.jgrasp.org/", "anchor_text": "jgrasp"}, {"url": "https://unsplash.com/@nate_dumlao?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Nathan Dumlao"}, {"url": "https://unsplash.com/s/photos/building-blocks?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://unsplash.com/@scott_umstattd?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Scott Umstattd"}, {"url": "https://unsplash.com/s/photos/kitchen-sink?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://medium.com/@johnmcclean/lambdas-are-not-functional-programming-63533ce2eb74", "anchor_text": "a far cry from functional programming"}, {"url": "https://medium.com/tag/java?source=post_page-----383960580098---------------java-----------------", "anchor_text": "Java"}, {"url": "https://medium.com/tag/python?source=post_page-----383960580098---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----383960580098---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/programming-languages?source=post_page-----383960580098---------------programming_languages-----------------", "anchor_text": "Programming Languages"}, {"url": "https://medium.com/tag/data-science?source=post_page-----383960580098---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F383960580098&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&user=Dan+Hales&userId=81b7a04fbca0&source=-----383960580098---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F383960580098&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&user=Dan+Hales&userId=81b7a04fbca0&source=-----383960580098---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F383960580098&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----383960580098--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F383960580098&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----383960580098---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----383960580098--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----383960580098--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----383960580098--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----383960580098--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----383960580098--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----383960580098--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----383960580098--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----383960580098--------------------------------", "anchor_text": ""}, {"url": "https://danhalesprogramming.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://danhalesprogramming.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Dan Hales"}, {"url": "https://danhalesprogramming.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "58 Followers"}, {"url": "http://www.linkedin.com/in/danhalesprogramming", "anchor_text": "www.linkedin.com/in/danhalesprogramming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F81b7a04fbca0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&user=Dan+Hales&userId=81b7a04fbca0&source=post_page-81b7a04fbca0--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F5fadc2c2a97b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frewiring-your-brain-from-python-to-java-383960580098&newsletterV3=81b7a04fbca0&newsletterV3Id=5fadc2c2a97b&user=Dan+Hales&userId=81b7a04fbca0&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}