{"url": "https://towardsdatascience.com/tsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f", "time": 1683014098.8835561, "path": "towardsdatascience.com/tsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f/", "webpage": {"metadata": {"title": "A Python Library to Generate a Synthetic Time Series Data | by MANIE TADAYON | Towards Data Science", "h1": "A Python Library to Generate a Synthetic Time Series Data", "description": "Synthetic data is widely used in various domains. This is because many modern algorithms require lots of data for efficient training, and data collection and labeling usually are a time-consuming\u2026"}, "outgoing_paragraph_urls": [{"url": "https://ieeexplore.ieee.org/abstract/document/9084102/", "anchor_text": "Predicting Student Performance in an Educational Game Using a Hidden Markov Model", "paragraph_index": 34}], "all_paragraphs": ["Synthetic data is widely used in various domains. This is because many modern algorithms require lots of data for efficient training, and data collection and labeling usually are a time-consuming process and are prone to errors. Furthermore, some real-world data, due to its nature, is confidential and cannot be shared.", "Some methods, such as generative adversarial network\u00b9, are proposed to generate time series data. However, GAN is hard to train and might not be stable; besides, it requires a large volume of data for efficient training.", "This article will introduce the tsBNgen, a python library, to generate synthetic time series data based on an arbitrary dynamic Bayesian network structure.", "Although tsBNgen is primarily used to generate time series, it can also generate cross-sectional data by setting the length of time series to one.", "The following is a list of topics discussed in this article.", "tsBNgen is a python package released under the MIT license to generate time series data from an arbitrary Bayesian network structure. Bayesian networks are a type of probabilistic graphical model widely used to model the uncertainties in real-world processes. Dynamic Bayesian networks (DBNs)are a special class of Bayesian networks that model temporal and time series data.", "Bayesian networks receive lots of attention in various domains, such as education and medicine. For example, in\u00b2, the authors used an HMM, a variant of DBN, to predict student performance in an educational video game. One significant advantage of directed graphical models (Bayesian networks) is that they can represent the causal relationship between nodes in a graph; hence they provide an intuitive method to model real-world processes. This statement makes tsBNgen very useful software to generate data once the graph structure is determined by an expert. In a sense, tsBNgen unlike data-driven methods like the GAN is a model-based approach.", "To learn more about the package, documentation, and examples, please visit the following GitHub repository.", "I recently created a series of YouTube videos on to use this package. The videos are also on my GitHub page and you can access them here:", "I try to go over the Bayesian network and tsBNgen package in detail. If you have any questions or comments, you can ask me on my YouTube channel.", "Following is the list of supported features and capabilities of tsBNgen:", "To use tsBNgen, either clone the above repository or install the software using the following commands:", "After the software is successfully installed, then issue the following commands to import all the functions and variables.", "This is all you need to take advantage of all the functionalities that exist in the software.", "Before going over some examples, let me define the following parameters, which will be used throughout this section.Note: The following description, tables (as a form of an image), and images are obtained from this paper by the author\u00b3.", "Assume you would like to generate data for the following architecture in Fig 1, which is an HMM structure.", "The top layer nodes are known as states, and the lower ones are called the observation. In HMM, states are discrete, while observations can be either continuous or discrete. The following tables summarize the parameters setting and probability distributions for Fig 1.", "In Table 1, T refers to the length of time series, N refers to the number of samples, and loopback determines the length of the temporal connection. For example, a loopback value of 1 implies that a node is connected to some other nodes at a previous time.", "Note: tsBNgen can simulate the standard Bayesian network (cross-sectional data) by setting T=1.", "Architecture 1 with the above CPDs and parameters can easily be implemented as follows:", "The above code generates a 1000 time series with length of 20 correspondings to states and observations. Observations are normally distributed with a particular mean and standard deviation. The states are discrete (hence the \u2018D\u2019) and take four possible levels determined by the N_level variable. loopbacks is a dictionary in which each key has the following form: node+its parent. Since in architecture 1, only states, namely node 0 (according to the graph\u2019s topological ordering), are connected across time and the parent of node 0 at time t is node 0 at time t-1; therefore, the key value for the loopbacks is \u201800\u2019 and since the temporal connection only spans one unit of time, its value is 1. Node_Type determines the categories of nodes in the graph. For example in this example, the first node is discrete (\u2018D\u2019) and the second one is continuous (\u2018C\u2019). Mat represents the adjacency matrix of the network.", "The total time to generate the above data is 2.06 (s), and running the model through the HMM algorithm gives us more than 93.00 % accuracy for even five samples.Now let\u2019s take a look at a more complex example. From now on, to save some space, I avoid showing the CPD tables and only show the architecture and the python code used to generate data.", "Example 2 refers to the architecture in Fig 2, where the nodes in the first two layers are discrete and the last layer nodes(u\u2082) are continuous.", "Based on the graph\u2019s topological ordering, you can name them nodes 0, 1, and 2 per time point. Let\u2019s say you would like to generate data when node 0 (the top node) takes two possible values (binary), node 1(the middle node) takes four possible values, and the last node is continuous and will be distributed according to Gaussian distribution for every possible value of its parents. The following python codes simulate this scenario for 2000 samples with a length of 20 for each sample.", "As the above code shows, node 0 (the top node) has no parent in the first time step (This is what the variable Parent represents). This is sometimes known as the root or an exogenous variable in a causal or Bayesian network. Node 1 is connected to node 0 and node 2 is connected to both nodes 0 and 1. To represent the structure for other time-steps after time 0, the variable Parent2 is used. This says node 0 is connected to itself across time (since \u201800\u2019 is [1] in loopbacks then time t is connected to t-1 only). Node 1 is connected to node 0 for the same time and to node 1 in the previous time (This can be seen from the loopback variable as well).", "Since tsBNgen is a model-based data generation then you need to provide the distribution (for exogenous node) or conditional distribution of each node. If you would like to generate synthetic data corresponding to architecture with arbitrary distribution then you can choose CPD and CPD2 to be anything you like as long as the sum of entries for each discrete distribution is 1. For example, the CPD for node 0 is [0.6, 0.4]. You can change these values to be anything you like as long as they are added to 1.", "Example 3 refers to the architecture in Fig 3, where the nodes in the first two layers are discrete and the last layer nodes(u\u2082) are continuous.", "Assume you would like to generate data when node 0 (the top node) is binary, node 1(the middle node) takes four possible values, and node 2 is continuous and will be distributed according to Gaussian distribution for every possible value of its parents. The following python codes simulate this scenario for 1000 samples with a length of 10 for each sample.", "In the same way, you can generate time series data for any graphical models you want. This is a wonderful tool since lots of real-world problems can be modeled as Bayesian and causal networks.", "For more examples, up-to-date documentation please visit the following GitHub page.", "If you would like to know more make sure you watch my recent videos on my YouTube channel.", "Bonus: If you would like to see a comparative analysis of graphical modeling algorithms such as the HMM and deep learning methods such as the LSTM on a synthetically generated time series, please look at this paper\u2074.", "In this article, I introduced the tsBNgen, a python library to generate synthetic data from an arbitrary BN. The features and capabilities of the software are explained using two examples. For more up-to-date information about the software, please visit the GitHub page mentioned above.", "[1] M. Frid-Adar, E. Klangand, M. Amitai, J. Goldberger, H. Greenspan, Synthetic data augmentation using gan for improved liver lesion classification(2018), IEEE 2018 15th international symposium on biomedicalimaging.", "[2] M. Tadayon, G. Pottie, Predicting Student Performance in an Educational Game Using a Hidden Markov Model(2020), IEEE 2020 IEEE Transactions on Education.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Applied/Research scientist at Amazon. Ph.D. in Electrical and Computer Engineering at UCLA. Expert in time series, machine learning, and causal inference."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F4b46e178cd9f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://manitadayon.medium.com/?source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": ""}, {"url": "https://manitadayon.medium.com/?source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": "MANIE TADAYON"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2674819db812&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&user=MANIE+TADAYON&userId=2674819db812&source=post_page-2674819db812----4b46e178cd9f---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4b46e178cd9f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4b46e178cd9f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@behz?utm_source=medium&utm_medium=referral", "anchor_text": "Behzad Ghaffarian"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://unsplash.com/@miroslava?utm_source=medium&utm_medium=referral", "anchor_text": "Miroslava"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/manitadayon/tsBNgen", "anchor_text": "manitadayon/tsBNgenDescription Instruction tsBNgen is a Python package to generate time series data based on an arbitrary Bayesian Network\u2026github.com"}, {"url": "https://github.com/manitadayon/tsBNgen", "anchor_text": "manitadayon/tsBNgenDescription Instruction tsBNgen is a Python package to generate time series data based on an arbitrary Bayesian Network\u2026github.com"}, {"url": "https://ieeexplore.ieee.org/abstract/document/9084102/", "anchor_text": "Predicting Student Performance in an Educational Game Using a Hidden Markov Model"}, {"url": "https://arxiv.org/abs/2009.04595", "anchor_text": "tsBNgen: A Python Library to Generate Time Series Data from an Arbitrary Dynamic Bayesian Network Structure"}, {"url": "https://arxiv.org/abs/2008.03825", "anchor_text": "Comparative Analysis of the Hidden Markov Model and LSTM: A Simulative Approach"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----4b46e178cd9f---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/bayesian-statistics?source=post_page-----4b46e178cd9f---------------bayesian_statistics-----------------", "anchor_text": "Bayesian Statistics"}, {"url": "https://medium.com/tag/synthetic-data?source=post_page-----4b46e178cd9f---------------synthetic_data-----------------", "anchor_text": "Synthetic Data"}, {"url": "https://medium.com/tag/probabilistic-models?source=post_page-----4b46e178cd9f---------------probabilistic_models-----------------", "anchor_text": "Probabilistic Models"}, {"url": "https://medium.com/tag/python?source=post_page-----4b46e178cd9f---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4b46e178cd9f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&user=MANIE+TADAYON&userId=2674819db812&source=-----4b46e178cd9f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4b46e178cd9f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&user=MANIE+TADAYON&userId=2674819db812&source=-----4b46e178cd9f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4b46e178cd9f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F4b46e178cd9f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----4b46e178cd9f---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----4b46e178cd9f--------------------------------", "anchor_text": ""}, {"url": "https://manitadayon.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://manitadayon.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "MANIE TADAYON"}, {"url": "https://manitadayon.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "101 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2674819db812&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&user=MANIE+TADAYON&userId=2674819db812&source=post_page-2674819db812--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F85f3c71785b9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftsbngen-a-python-library-to-generate-time-series-data-from-an-arbitrary-dynamic-bayesian-network-4b46e178cd9f&newsletterV3=2674819db812&newsletterV3Id=85f3c71785b9&user=MANIE+TADAYON&userId=2674819db812&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}