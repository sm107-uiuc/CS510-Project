{"url": "https://towardsdatascience.com/creating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e", "time": 1683006351.045274, "path": "towardsdatascience.com/creating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e/", "webpage": {"metadata": {"title": "Creating a Discord Bot from Scratch and Connecting to MongoDB | by Zareeb Chowdhury | Towards Data Science", "h1": "Creating a Discord Bot from Scratch and Connecting to MongoDB", "description": "Discord is a messaging platform that is incredibly friendly towards developers. A major outlet for discord developers is the production of discord bots which can perform an infinite number of tasks\u2026"}, "outgoing_paragraph_urls": [{"url": "http://mongodb.com", "anchor_text": "mongodb.com", "paragraph_index": 16}], "all_paragraphs": ["Discord is a messaging platform that is incredibly friendly towards developers. A major outlet for discord developers is the production of discord bots which can perform an infinite number of tasks such as sending messages, playing music, and even allowing the ability to have mini-games in a chat server. In this tutorial, we will create a discord bot using Python that will track certain messages that users send and add a scoring system using MongoDB.", "To begin, first, install the discord.py, dnspython, and pymongo, module in the terminal. Dnspython and pymongo will be used for our MongoDB connection.", "Following that, import all the modules that you just installed.", "After this, we then have to activate our bot on the discord web app. To begin, head over to:", "and click on the developer portal.", "Once clicking on the Developer Portal, click on the blue button in the top right that says \u201cNew Application\u201d. Once you enter a name for your bot, you should see a screen like this:", "Next, go ahead and click on the tab on the right-hand side of the screen that says \u201cBot\u201d. You should see a screen like this:", "After you reach this screen, click on the blue button on the right that says \u201cAdd Bot\u201d. You should see a screen like this:", "Here you will see all the information for your bot, including the Token which allows you to access the bot. Make sure that you keep this token safe because it is the one thing that determines who can access the bot and change its functionality. Next, we have to add the bot to a server. In this tutorial, there is a separate server that has been created for testing. To add the bot to a server, go ahead and click on the \u201cOAuth2\u201d tab on the left-hand side of the screen. This tool creates an access URL for your bot which then connects to the Discord \u201cOAuth2 API\u201d. You should see a screen like this:", "Once you reach this screen, select the box that says \u201cbot\u201d. Once you click on the box, selectable permissions should show up on the screen. For this bot, you may select the box that says \u201cAdministrator\u201d to allow for all permissions for the purpose of testing. However, when creating a bot that you want to add to a public server, you may not want to add all permissions.", "Once all your options are selected, an URL will be autogenerated. Copy that URL to your clipboard and paste it into your browser. Once you are sent to that URL, select the server you wish to add the bot to. Congratulations you have now officially added your first bot to your server!", "Now that we have added the bot to our server, we can begin programming! We have to first create a connection to the bot. This is what the token is used for.", "In this code snippet, I saved the token for my bot in a separate text file and then stored that value in the variable \u201ctoken\u201d. After this, I created a Client, which is the connection your bot has to Discord and its APIs. In the snippet, you can see that the client has its \u201con_ready()\u201d function implemented. This function is called once the bot is ready for further action. Delving further into the on_ready() function, the keyword \u201casync\u201d represents that the function is asynchronous and happens along with any other function that is running. This will make more sense once the bot has more functionality implemented into it. Finally, we are running the client with the token that we have saved in our variable. If you run this snippet, you should get the name of your bot output on the screen followed by the remaining print statement.", "Next, we must program the bot to read user messages and determine if there is a keyword that it will pick up for its leveling system. For this bot, I will be using the words \u201cdiscord\u201d, \u201cpython\u201d, \u201ccode\u201d, and \u201clego\u201d. These keywords will not be case sensitive.", "Here, we have created another event for our Client which implements the function \u201con_message()\u201d. This function simply runs when a user sends a message to a channel. It should print the basic information about the message sent such as its channel, author, the name of the author, and what the message is. Once the bot checks for a keyword such as \u201cpython\u201d, it will send to the channel that it was accepted. Here is the finished code snippet for sending and receiving messages:", "Now that we have the basic functionality of sending and receiving messages, it is now time to log the user level in our MongoDB database! We are going to be calculating the user level simply by counting how many times a user has said a keyword.", "First, we must create a MongoDB account at mongodb.com in order to create a cluster, AKA a group of databases. Once you have created an account, you will be prompted with this screen:", "When creating a database, MongoDB stores your cluster in one of its physical databases so you must select your region and provider. Select whatever region you are closest located to ensure the fastest feedback time. If you wish, you may change the name of your cluster as well. Once you have created a cluster (which will take 1\u20133 minutes), you will see the following screen:", "We must now connect to our cluster. To do so, click on the button that says \u201cCONNECT\u201d. This will prompt you with this screen:", "Simply click on the green button that says \u201cAdd Your Current IP Address\u201d. From there, create a user to link to the cluster. Make sure to remember your credentials for the user because it will be used for further steps. Once you complete that, move on to your connection method. This is the screen that will appear:", "For this tutorial, we will be using MongoDB Compass which is MongoDB\u2019s GUI that allows for easy access to clusters and a good way to have analytics on your data. If you do not have MongoDB Compass, follow the instructions it provides for downloading the program. Once you download MongoDB Compass you will see a screen as such:", "Going back to the MongoDB online, you will see a screen like this:", "The URL that you are given is what you will copy and paste into your MongoDB Compass portal. In the URL, you will see that a part of it has \u201c<password>\u201d. You will replace this with the password for your cluster user account. Once you paste this link into your MongoDB Compass portal, you will see your cluster!", "Now, let\u2019s move back to the web portal for MongoDB and explore our cluster. Go ahead and click on the button that says \u201cCOLLECTIONS\u201d. A collection is a subgroup in your cluster where you can store your data. It will ask if you wish to load a sample dataset. Let\u2019s load it to get an idea of the structure of the cluster. It may take a few seconds to load.", "What we are going to do next is to create a database to store our user data for the bot. Click on the button that says \u201c+ Create Database\u201d. Name the database whatever you wish. Data in MongoDB is stored in a hierarchy. It is structured as Cluster > Database > Collection. Once we create a database, we also need to create a collection that will be stored in the database.", "We now have an empty database waiting to be filled with our user data!", "For retrieving and uploading data to our database, there are many functions created by MongoDB API and we will not completely cover all the functions that are used. If you wish to explore further here is the MongoDB documentation:", "To begin, let\u2019s begin where we left off. We will be adding on to the current Discord Bot code that we have.", "These are the imports that we will need to run our code. What we have to do next is connect to our cluster in our code and then navigate to where we store our data (User Data).", "At first, we must connect to our cluster. Where it says \u201cCONNECTION_URL\u201d in the code, replace it with the URL that you used to connect to MongoDB Compass and surround it with quotation marks. The link is not shown in this tutorial because it contains a security breach. After that, we must connect to our database and then to our collection. We are now in the location that we need to be in!", "What we have to do next is select attributes for each entry that is put into our database. Each entry would be considered one unique user which should include the username, their score, and their ID. Each entry in a MongoDB database is associated with a unique ID. You can either have it autogenerated for you, or you can decide it yourself. For our purposes, it will be best if we make the entry ID the user ID in Discord.", "In this snippet, we created a variable named \u201cpost\u201d which contains the attributes of our entry. We then insert those attributes into our \u201cUserData\u201d collection. Once we run the program and type in \u201cpython\u201d in our Discord server, we will see our data stored in the database.", "Add the code that sends data to our database to all other keywords that our bot is searching for. As of right now, the code will look like this:", "However, there is a slight issue with the program that we have. Once we type in another keyword, the database cannot enter the same user again. We can fix this up with some simple conditional statements.", "Here we created a query to our database and basically asked if there were any entries with a preexisting ID that is the same as the current one being entered. If the current ID that is being entered is different, then the new user is logged into the database. Next, we have to modify what will happen to a user if it already exists in the database.", "In this code snippet, we are basically updating a preexisting entry if the user is already registered in the database. We first find the user with the .find() method and we then loop through the user and capture its \u201cscore\u201d attribute. We then add one to that value. Finally, we use the .update_one() function to update the \u201cscore\u201d attribute specifically. After adding this function to all keywords, you have a completed Discord bot linked to MongoDB! Here is the entire code:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "A young passion-driven explorer of machine learning and computer logic hoping to contribute my thoughts to a public space."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F828ad1c7c22e&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@zareeb.chowdhury234?source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@zareeb.chowdhury234?source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": "Zareeb Chowdhury"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed452ae11315&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&user=Zareeb+Chowdhury&userId=ed452ae11315&source=post_page-ed452ae11315----828ad1c7c22e---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F828ad1c7c22e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F828ad1c7c22e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.google.com/imgres?imgurl=https%3A%2F%2Fdiscordapp.com%2Fassets%2Ff7a4131e47f50b48b3f85f73c47ff1dc.png&imgrefurl=https%3A%2F%2Fdiscordapp.com%2F&tbnid=llbk160_bIKyPM&vet=12ahUKEwi8hOLUvP3oAhVIGt8KHY7ZCrwQMygAegUIARCYAg..i&docid=tL3jcu20AJy75M&w=1200&h=630&q=discord&ved=2ahUKEwi8hOLUvP3oAhVIGt8KHY7ZCrwQMygAegUIARCYAg", "anchor_text": "Source"}, {"url": "https://discordapp.com/", "anchor_text": "Discord - A New Way to Chat with Friends & CommunitiesDiscord is the easiest way to communicate over voice, video, and text, whether you're part of a school club, a nightly\u2026discordapp.com"}, {"url": "http://mongodb.com", "anchor_text": "mongodb.com"}, {"url": "https://pymongo.readthedocs.io/en/stable/", "anchor_text": "PyMongo 3.10.1 Documentation \u2014 PyMongo 3.10.1 documentationIf you\u2019re having trouble or have questions about PyMongo, the best place to ask is the MongoDB user group. Once you get\u2026pymongo.readthedocs.io"}, {"url": "https://www.google.com/imgres?imgurl=https%3A%2F%2Fdiscordapp.com%2Fassets%2Ff7a4131e47f50b48b3f85f73c47ff1dc.png&imgrefurl=https%3A%2F%2Fdiscordapp.com%2F&tbnid=llbk160_bIKyPM&vet=12ahUKEwi7xrC5pPvoAhVDCN8KHWGZBtQQMygBegUIARCbAg..i&docid=tL3jcu20AJy75M&w=1200&h=630&q=discord&ved=2ahUKEwi7xrC5pPvoAhVDCN8KHWGZBtQQMygBegUIARCbAg", "anchor_text": "Google Image Result for https://discordapp.com/assets/f7a4131e47f50b48b3f85f73c47ff1dc.pngEdit descriptionwww.google.com"}, {"url": "https://realpython.com/how-to-make-a-discord-bot-python/", "anchor_text": "How to Make a Discord Bot in Python - Real PythonIn this step-by-step tutorial, you'll learn how to make a Discord bot in Python and interact with several APIs. You'll\u2026realpython.com"}, {"url": "https://pymongo.readthedocs.io/en/stable/", "anchor_text": "pymongo.readthedocs.io"}, {"url": "https://medium.com/tag/mongodb?source=post_page-----828ad1c7c22e---------------mongodb-----------------", "anchor_text": "Mongodb"}, {"url": "https://medium.com/tag/python?source=post_page-----828ad1c7c22e---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/tutorial?source=post_page-----828ad1c7c22e---------------tutorial-----------------", "anchor_text": "Tutorial"}, {"url": "https://medium.com/tag/bots?source=post_page-----828ad1c7c22e---------------bots-----------------", "anchor_text": "Bots"}, {"url": "https://medium.com/tag/discord?source=post_page-----828ad1c7c22e---------------discord-----------------", "anchor_text": "Discord"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F828ad1c7c22e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&user=Zareeb+Chowdhury&userId=ed452ae11315&source=-----828ad1c7c22e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F828ad1c7c22e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&user=Zareeb+Chowdhury&userId=ed452ae11315&source=-----828ad1c7c22e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F828ad1c7c22e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F828ad1c7c22e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----828ad1c7c22e---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----828ad1c7c22e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@zareeb.chowdhury234?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@zareeb.chowdhury234?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Zareeb Chowdhury"}, {"url": "https://medium.com/@zareeb.chowdhury234/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed452ae11315&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&user=Zareeb+Chowdhury&userId=ed452ae11315&source=post_page-ed452ae11315--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2Fed452ae11315%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-a-discord-bot-from-scratch-and-connecting-to-mongodb-828ad1c7c22e&user=Zareeb+Chowdhury&userId=ed452ae11315&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}