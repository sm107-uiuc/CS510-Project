{"url": "https://towardsdatascience.com/data-structures-in-python-a-brief-introduction-b4135d7a9b7d", "time": 1683012520.4826949, "path": "towardsdatascience.com/data-structures-in-python-a-brief-introduction-b4135d7a9b7d/", "webpage": {"metadata": {"title": "Data Structures in Python\u2014 A Brief Introduction | by Sowmya Krishnan | Towards Data Science", "h1": "Data Structures in Python\u2014 A Brief Introduction", "description": "You have multiples algorithms, the steps of which require fetching the smallest value in a collection at any given point of time. Values are assigned to variables but are constantly modified, making\u2026"}, "outgoing_paragraph_urls": [{"url": "https://docs.python.org/3/tutorial/introduction.html#lists", "anchor_text": "lists", "paragraph_index": 54}, {"url": "https://docs.python.org/3/tutorial/datastructures.html#dictionaries", "anchor_text": "dictionaries", "paragraph_index": 54}, {"url": "https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences", "anchor_text": "tuples", "paragraph_index": 54}, {"url": "https://python.swaroopch.com/data_structures.html", "anchor_text": "A Byte of Python", "paragraph_index": 55}, {"url": "https://github.com/sowmya20", "anchor_text": "https://github.com/sowmya20", "paragraph_index": 57}, {"url": "https://asbeyondwords.wordpress.com/", "anchor_text": "https://asbeyondwords.wordpress.com/", "paragraph_index": 57}], "all_paragraphs": ["You have multiples algorithms, the steps of which require fetching the smallest value in a collection at any given point of time. Values are assigned to variables but are constantly modified, making it impossible for you to remember all the changes. One way to work through this problem is to store this collection in an unsorted array and then scan this collection every time, to find the required value. But considering the collection has N elements, this would lead to an increase in the required amount of time proportional to N.", "Data structures to the rescue! Let us invent a common operation that \u2018finds the minimum value from a set of elements.\u2019 Here, the data structure is the common operation that all these algorithms will make use of to find the minimum element much faster.", "There is no one single way of looking up data. Hence, when using an algorithm, make sure to understand the kind of data structures used by it and the operations they are a part of. The main purpose of a data structure is to speed up operations. In the above example, when I talk about an unsorted array, that too is a data structure. If the algorithm you are working with doesn\u2019t care about a quicker result, you could continue using the array to get results.", "In case a data structure is what your algorithm requires, time must be spent on designing and maintaining one so that it becomes easier to query and update the structure.", "Data structures provide us with a specific and way of storing and organizing data such that they can be easily accessed and worked with efficiently. In this article, you will learn about the various Python data structures and how they are implemented.", "A link to my GitHub repository to access the Jupyter notebook used for this demonstration:", "Broadly speaking, data structures can be classified into two types \u2014 primitive and non-primitive. The former is the basic way of representing data which contain simple values. The latter is a more advanced and a complex way of representing data that contain a collection of values in various formats.", "Non primitive data structures can further be categorized into built-in and user defined structures. Python offers implicit support for built in structures that include List, Tuple, Set and Dictionary. Users can also create their own data structures (like Stack, Tree, Queue, etc.) enabling them to have a full control over their functionality.", "A list is a mutable sequence that can hold both homogeneous and heterogeneous data, in a sequential manner. An address is assigned to every element of the list, called an Index. The elements within a list are comma-separated and enclosed within square brackets.", "You can add, remove, or change elements from the list without changing its identity. Following are some of the functions used commonly while working with lists:", "Lists can contain different types of variable, even in the same list.", "Adding an element to a list:", "The outputs vary while using different functions like insert, extend and append with a list.", "\u00b7 The insert function adds an element at the position/index specified.", "\u00b7 The append function will add all elements specified, as a single element.", "\u00b7 The extend function will add elements on a one-by-one basis.", "Lists can be indexed using square brackets to retrieve the element stored in a position. Indexing in lists returns the entire item at that position whereas in strings, the character at that position is returned.", "Once again, notice the outputs while using different functions like pop, delete and remove with the list. Remove is used when you want to remove element by specifying its value. We use del to remove an element by index, pop() to remove it by index if you need the returned value.", "While indexing is limited to accessing a single element, slicing accesses a sequence of data from a list.", "Slicing is done by defining the index values of the first element and the last element from the parent list that is required in the sliced list. It is written as [ a : b ] where a, b are the index values from the parent list. If a or b is not defined, then the index value is considered to be the first value for a if a is not defined and the last value for b when b is not defined.", "\u00b7 In a list with elements as string, max( ) and min( ) is applicable. max( ) would return a string element whose ASCII value is the highest and the lowest when min( ) is used.", "\u00b7 Only the first index of each element is considered each time and if their value is the same then the second index is considered and so on and so forth.", "And what happens in case numbers are declared as strings?", "Even if the numbers are declared in a string the first index of each element is considered and the maximum and minimum values are returned accordingly.", "You can also find the maximum and minimum values based on the length of a string.", "Copying & working on a list:", "Although no operation has been performed on the copied list, the values for it have also been changed. This is because you have assigned the same memory space of new_list to new_list_2.", "If you recall, in slicing we had seen that parent list [a:b] returns a list from parent list with start index a and end index b and if a and b is not mentioned then by default it considers the first and last element. We use the same concept here.", "Tuples are used to hold together multiple objects. Unlike lists, tuples are both immutable and specified within parentheses instead of square brackets. The values within a tuple cannot be overridden, that is, they cannot be changed, deleted, or reassigned. Tuples can hold both homogeneous and heterogeneous data.", "Creating and accessing elements from a tuple:", "Think of tuples as something which has to be True for a particular something and cannot be True for no other values. For better understanding, let\u2019s use the divmod() function.", "Here the quotient has to be 3 and the remainder has to be 1. These values cannot be changed whatsoever when 10 is divided by 3. Hence divmod returns these values in a tuple.", "Count and Index are used with tuples as they are with lists.", "If you are looking to implement something like a telephone book, a dictionary is what you need. Dictionaries basically store \u2018key-value\u2019 pairs. In a phone directory, you\u2019ll have Phone and Name as keys and the various names and numbers assigned are the values. The \u2018key\u2019 identifies an item and the \u2018value\u2019 stores the item\u2019s value. The \u2018key-value\u2019 pairs are separated by commas and the values are separated from the keys using a colon \u2018:\u2019 character.", "You can add, remove, or change existing key-value pairs in a dictionary. Below mentioned are some of the common functions performed using a dictionary.", "Adding or changing a key-value pair:", "\u00b7 Use the pop() function to delete values, which returns the value that has been deleted.", "\u00b7 To retrieve the key-value pair, you use the popitem() function which returns a tuple of the key and value.", "\u00b7 To clear the entire dictionary, you use the clear() function.", "\u00b7 values( ) function returns a list with all the assigned values in the dictionary.", "\u00b7 keys( ) function returns all the index or the keys to which contains the values that it was assigned to.", "Sets are an unordered collection of unique elements. Sets are mutable but can hold only unique values in the dataset. Set operations are similar to the ones used in arithmetic.", ".union() \u2014 combines data in both sets", ".intersection() \u2014 outputs data common to both sets", ".difference() \u2014 deletes the data present in both and outputs data present only in the set passed.", ".symmetricdifference() \u2014 deletes the data present in both and outputs the data which is remaining in both sets.", "a) Push \u2014 To add data into the stack.", "b) Pop \u2014 To remove data from the stack.", "We can implement stacks using modules and data structures from the Python library, namely \u2014 list, collections.deque, queue.LifoQueue.", "2. Queue: Queue is a linear data structure which is based on the First in First out principle (FIFO). The data which is entered first will be accessed first. Operations on a queue can be performed from both ends, head and tail. En-queue and De-queue are terms for operations used to add or delete items from a queue. Similar to Stacks, we can implement stacks using modules and data structures from the Python library, namely \u2014 list, collections.deque.", "3. Tree: Trees are no-linear data structures consisting of roots and nodes. The point of origination of the data is termed as the parent node and every other node arising subsequently has is a child node. The last nodes are the leaf nodes. The level of the nodes shows the depth of information in a tree.", "4. Graph: A graph in python typically store data collection of points called vertices (nodes) and edges (edges). A graph can be represented using the python dictionary data types. The keys of the dictionary are represented as vertices and the values represent the edges between the vertices.", "Data structures help organizing information and whether you are a novice or a programming veteran, you can\u2019t ignore the crucial concepts surrounding data structures.", "For a more exhaustive coverage of the different data structures used in Python, refer to the following links:", "\u00b7 The official Python documentation for lists, dictionaries, and tuples", "\u00b7 The book A Byte of Python.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "A business analyst/data scientist, I write about almost anything that interests me. https://github.com/sowmya20 | https://asbeyondwords.wordpress.com/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb4135d7a9b7d&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@svak1962?source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@svak1962?source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": "Sowmya Krishnan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F292301e5d539&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&user=Sowmya+Krishnan&userId=292301e5d539&source=post_page-292301e5d539----b4135d7a9b7d---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb4135d7a9b7d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb4135d7a9b7d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/sowmya20/DataStructures_Intro", "anchor_text": "sowmya20/DataStructures_IntroContribute to sowmya20/DataStructures_Intro development by creating an account on GitHub.github.com"}, {"url": "https://en.wikipedia.org/wiki/Stack_(abstract_data_type)", "anchor_text": "https://en.wikipedia.org/wiki/Stack_(abstract_data_type)"}, {"url": "https://www.guru99.com/python-queue-example.html", "anchor_text": "https://www.guru99.com/python-queue-example.html"}, {"url": "https://sites.google.com/site/learnwithdatastructures/content/graphs", "anchor_text": "https://sites.google.com/site/learnwithdatastructures/content/graphs"}, {"url": "https://codepumpkin.com/graph/", "anchor_text": "https://codepumpkin.com/graph/"}, {"url": "https://docs.python.org/3/tutorial/introduction.html#lists", "anchor_text": "lists"}, {"url": "https://docs.python.org/3/tutorial/datastructures.html#dictionaries", "anchor_text": "dictionaries"}, {"url": "https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences", "anchor_text": "tuples"}, {"url": "https://python.swaroopch.com/data_structures.html", "anchor_text": "A Byte of Python"}, {"url": "https://docs.python.org/3/tutorial/datastructures.html", "anchor_text": "https://docs.python.org/3/tutorial/datastructures.html"}, {"url": "https://medium.com/tag/python?source=post_page-----b4135d7a9b7d---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-structures?source=post_page-----b4135d7a9b7d---------------data_structures-----------------", "anchor_text": "Data Structures"}, {"url": "https://medium.com/tag/data-science?source=post_page-----b4135d7a9b7d---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb4135d7a9b7d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&user=Sowmya+Krishnan&userId=292301e5d539&source=-----b4135d7a9b7d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb4135d7a9b7d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&user=Sowmya+Krishnan&userId=292301e5d539&source=-----b4135d7a9b7d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb4135d7a9b7d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb4135d7a9b7d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b4135d7a9b7d---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b4135d7a9b7d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@svak1962?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@svak1962?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sowmya Krishnan"}, {"url": "https://medium.com/@svak1962/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "75 Followers"}, {"url": "https://github.com/sowmya20", "anchor_text": "https://github.com/sowmya20"}, {"url": "https://asbeyondwords.wordpress.com/", "anchor_text": "https://asbeyondwords.wordpress.com/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F292301e5d539&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&user=Sowmya+Krishnan&userId=292301e5d539&source=post_page-292301e5d539--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fb8608f7ff229&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-structures-in-python-a-brief-introduction-b4135d7a9b7d&newsletterV3=292301e5d539&newsletterV3Id=b8608f7ff229&user=Sowmya+Krishnan&userId=292301e5d539&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}