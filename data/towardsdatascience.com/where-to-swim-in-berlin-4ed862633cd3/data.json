{"url": "https://towardsdatascience.com/where-to-swim-in-berlin-4ed862633cd3", "time": 1683006257.164614, "path": "towardsdatascience.com/where-to-swim-in-berlin-4ed862633cd3/", "webpage": {"metadata": {"title": "Where to swim in Berlin!. Using open data with pandas and\u2026 | by Craig Dickson | Towards Data Science", "h1": "Where to swim in Berlin!", "description": "I love swimming! Especially outdoors. In Summer in Berlin, there\u2019s nothing I like better than heading to one of the nice lakes or rivers and cooling off in the water. This is something I particularly\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.visitberlin.de/en/lakes-beaches-berlin", "anchor_text": "nice lakes or rivers", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/Loch", "anchor_text": "many beautiful lochs", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/List_of_rivers_of_Scotland", "anchor_text": "rivers", "paragraph_index": 0}, {"url": "https://www.google.com/search?q=cool+guy&client=firefox-b-d&sxsrf=ALeKk00b_LDzeOo0YqhL8qgvJNKg9PhYIA:1587039593991&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiC5fmZ9-zoAhW86KYKHccRCi0Q_AUoAXoECA4QAw&biw=1280&bih=585", "anchor_text": "cool guy", "paragraph_index": 1}, {"url": "https://www.python.org/", "anchor_text": "Python", "paragraph_index": 1}, {"url": "https://pandas.pydata.org/", "anchor_text": "pandas", "paragraph_index": 1}, {"url": "https://numpy.org/", "anchor_text": "Numpy", "paragraph_index": 1}, {"url": "https://twitter.com/craigdoesdata", "anchor_text": "feedback", "paragraph_index": 2}, {"url": "https://daten.berlin.de/", "anchor_text": "Open Data website", "paragraph_index": 3}, {"url": "https://daten.berlin.de/datensaetze/liste-der-badestellen", "anchor_text": "list of bathing spots,", "paragraph_index": 3}, {"url": "https://github.com/thecraigd/Badestellen", "anchor_text": "here", "paragraph_index": 4}, {"url": "https://mybinder.org/v2/gh/thecraigd/Badestellen/94c3fad7d7ca9540f0649cb24778fa3384368bb4", "anchor_text": "here", "paragraph_index": 4}, {"url": "https://matplotlib.org/tutorials/introductory/customizing.html", "anchor_text": "style sheets", "paragraph_index": 15}, {"url": "https://matplotlib.org/3.1.1/gallery/style_sheets/style_sheets_reference.html", "anchor_text": "here", "paragraph_index": 15}, {"url": "https://matplotlib.org/3.2.1/contents.html", "anchor_text": "documentation", "paragraph_index": 16}, {"url": "https://stackoverflow.com/", "anchor_text": "Stack Overflow", "paragraph_index": 16}, {"url": "https://medium.com/better-programming/if-you-want-to-be-a-senior-developer-stop-focusing-on-syntax-d77b081cb10b", "anchor_text": "Google is your friend", "paragraph_index": 16}, {"url": "https://www.geeksforgeeks.org/python-pandas-dataframe/", "anchor_text": "DataFrame", "paragraph_index": 20}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html", "anchor_text": ".groupby()", "paragraph_index": 21}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html", "anchor_text": "pd.DataFrame()", "paragraph_index": 25}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html", "anchor_text": "the documentation", "paragraph_index": 25}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.count.html", "anchor_text": ".count()", "paragraph_index": 27}, {"url": "https://de.wikipedia.org/wiki/Berlin#Stadtgliederung", "anchor_text": "Wikipedia,", "paragraph_index": 29}, {"url": "https://en.wikipedia.org/wiki/Reliability_of_Wikipedia", "anchor_text": "more accurate", "paragraph_index": 29}, {"url": "http://daten.berlin.de", "anchor_text": "daten.berlin.de", "paragraph_index": 30}, {"url": "https://daten.berlin.de/datensaetze/einwohnerinnen-und-einwohner-berlin-lor-planungsr%C3%A4umen-am-31122018", "anchor_text": "most recent data available", "paragraph_index": 30}, {"url": "https://www.statistik-berlin-brandenburg.de/opendata/Beschreibung_EWR_Datenpool_2018.pdf", "anchor_text": "guide", "paragraph_index": 31}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.iloc.html", "anchor_text": ".iloc[]", "paragraph_index": 33}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html", "anchor_text": ".groupby()", "paragraph_index": 34}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.core.groupby.GroupBy.sum.html", "anchor_text": ".sum()", "paragraph_index": 34}, {"url": "https://www.statistik-berlin-brandenburg.de/regionalstatistiken/r-gesamt_neu.asp?Ptyp=410&Sageb=33000&creg=BBB&anzwer=8", "anchor_text": "assigned a number", "paragraph_index": 35}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.merge.html", "anchor_text": "merge(),", "paragraph_index": 38}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.merge.html", "anchor_text": "pd.merge()", "paragraph_index": 39}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.merge.html", "anchor_text": "pd.merge()", "paragraph_index": 40}, {"url": "https://www.analyticsvidhya.com/blog/2020/02/joins-in-pandas-master-the-different-types-of-joins-in-python/", "anchor_text": "\u2018inner join\u2019", "paragraph_index": 40}, {"url": "https://www.statistik-berlin-brandenburg.de/webapi/jsf/tableView/tableView.xhtml", "anchor_text": "Office of Statistics of Berlin-Brandenburg", "paragraph_index": 46}, {"url": "https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html", "anchor_text": ".read_csv()", "paragraph_index": 46}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_excel.html", "anchor_text": ".read_excel()", "paragraph_index": 46}, {"url": "https://developers.google.com/edu/python/lists", "anchor_text": "list", "paragraph_index": 46}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.copy.html", "anchor_text": ".copy()", "paragraph_index": 47}, {"url": "https://www.geeksforgeeks.org/copy-python-deep-copy-shallow-copy/", "anchor_text": "read more about it", "paragraph_index": 47}, {"url": "https://www.berlin.de/en/public-transportation/", "anchor_text": "public transportation system", "paragraph_index": 52}, {"url": "https://twitter.com/craigdoesdata", "anchor_text": "craigdoesdata", "paragraph_index": 56}, {"url": "https://github.com/thecraigd/Badestellen", "anchor_text": "Github page", "paragraph_index": 57}, {"url": "https://mybinder.org/v2/gh/thecraigd/Badestellen/94c3fad7d7ca9540f0649cb24778fa3384368bb4", "anchor_text": "Binder", "paragraph_index": 57}, {"url": "http://www.craigdoesdata.de", "anchor_text": "http://www.craigdoesdata.de", "paragraph_index": 58}], "all_paragraphs": ["I love swimming! Especially outdoors. In Summer in Berlin, there\u2019s nothing I like better than heading to one of the nice lakes or rivers and cooling off in the water. This is something I particularly appreciate as it is possible much less often in my native Scotland. Although there are many beautiful lochs and rivers there, for most of the year only the hardiest of souls would jump in without a wetsuit!", "With that in mind, I decided to take a look at which area of Berlin would be best for someone to live in if access to outdoor swimming was their top priority. As I am a very cool guy, I chose to investigate that in Python using the popular and powerful data analysis package pandas (with some backup from old friends Matplotlib and Numpy).", "My aim here is to provide a beginner-friendly guide to using some basic-but-powerful features in pandas and Matplotlib \u2014 creating DataFrames, .groupby(), .merge() plus a few others \u2014 to help people getting started with Data Analysis. Hopefully, I can illustrate with examples of my code how I manipulate my example data, and the reader can take that and re-work it for their own needs and projects. That\u2019s the plan anyway! Any and all feedback is gratefully received.", "The first step for this, as for any Data Analysis project, is to find some data. Thankfully, the government of Berlin has an Open Data website where you can find all manner of interesting (and, if we\u2019re being honest, less interesting) datasets to investigate. Among them, we find this list of bathing spots, which is exactly what we are looking for. Thanks, Open Data Berlin!", "Let\u2019s get cracking with the data analysis then! You can follow along with the notebook on Github here or you can run it on Binder here without installing anything.", "First, let\u2019s import the libraries we\u2019re going to use, and import the data itself.", "Note that I\u2019m using a Jupyter Notebook, so I\u2019m using displayinstead of print here, which gives a more attractive and easy to navigate output. That\u2019s a pro-tip for you right there!", "This gives us output like this:", "The DataFrame bad has 39 rows (each representing a different bathing spot) and 23 columns (each with a different attribute relating to that spot). That should give us something to work with.", "Now would be a good time to mention something which will be a limitation to our analysis in general. This dataset includes only \u2018official\u2019 bathing spots in the city. Berliners are pretty unruly by German standards, and in general fairly likely to also find and utilise \u2018unofficial\u2019 bathing spots \u2014 indeed if you look around in the summer you\u2019ll find people swimming basically anywhere it looks good (as well as some places it doesn\u2019t).", "However, I\u2019m going to assume that the number of official and unofficial bathing spots in any particular district will be highly correlated, as they are both driven by one underlying variable. Any guesses which variable I\u2019m thinking of?", "If you guessed \u2018number of bodies of water in that area\u2019 then you win the prize (there is no prize)! I think this is a fairly safe assumption, at least for our purposes, but when undertaking any Data Analysis it is always vital to examine your assumptions to see if they can be justified or if there are some hidden biases or systematic errors sneaking their way into your data. No dataset is perfect, and we often have to work with it anyway, but our work will always be improved if we can be as conscious as possible of the ways in which our data is imperfect. OK, philosophy over \u2014 back to the bathing spots!", "Now using Matplotlib we can very easily take a look at the distribution of the bathing spots around the city.", "This gives us output like this:", "I used a couple of little tricks to make this a little prettier than the default output from plt.hist(bad['bezirk'])prettier. The rwidth=0.8 term reduces the width of the bars to 80% instead of the default 100%, which gives us some space between the bars. That makes the chart (to my eyes, at least) more readable. bins=np.arange(number of columns + 1) \u2014 0.5 centres the bars over the ticks on the x-axis, which again just makes the output look a bit nicer to me. Note that you\u2019ll need to change the (9) to the number of columns you have + 1 to make this work for your chart.", "plt.xticks(rotation=90) rotates the labels 90\u00b0 so they\u2019re not just a big mess of overlapping text. You can try 45\u00b0 if a jauntier angle is your thing. Finally, plt.style.use('seaborn')takes advantage of the pre-existing style sheets for Matplotlib (examples here), which let you use one line of code to change multiple presentation features on your plot and get a more personalised look with very little effort!", "Matplotlib is super-flexible, but that flexibility means on the other hand that you often need to specifically tell it what to do if you want it to do something in particular. A benefit of its popularity is that the answer to your question is usually just one google search away. The documentation is on the whole extensive and clear, with examples provided, and Stack Overflow is *ahem* overflowing with questions asked and answers given. In general, I\u2019ve found the Python community extremely welcoming, and if you have a question or want to do something, the chances are very high that someone else has wanted to do that same thing and asked about it somewhere online. At any level of programming, or of Data Analysis in general, Google is your friend.", "Let\u2019s take a look at our beautiful histogram, after we went to all that trouble to create it. We can see that of the 12 districts in Berlin, 8 have official bathing spots. Lichtenberg, Mitte and Pankow have one each, and Treptow-K\u00f6penick is way out ahead with 11. Looking on the map, this makes sense \u2014 Treptow-K\u00f6penick is the biggest district and from a glance seems to have the most blue in it.", "That\u2019s our most basic level of analysis complete. In just a couple of steps, we\u2019ve created a pandas DataFrame from raw data from a CSV file, and created a visualisation that clearly displays some meaningful information from that data. But we can go further!", "Perhaps it would be interesting to know how many people live in the different districts so we can control for the population of the districts. Maybe Treptow-K\u00f6penick is the most populous district and that\u2019s why it has the most bathing spots? Or perhaps it\u2019s simply the biggest and that\u2019s the reason? Doing a little more manipulation and analysis of the data would allow us to answer these questions, controlling for other variables (such as population and area).", "Happily, pandas makes this easy to do with its powerful Data Analysis functions and its central feature, the DataFrame.", "To do this we will need to create a DataFrame which contains the information which we have displayed in our histogram. We can do that using .groupby() and a little imagination!", "Which when we plot it as a bar chart gives us:", "Exactly the same plot as before, except for changes in the format due to the first one being a histogram and the second a bar chart. We could get distracted playing with Matplotlib formatting, but all we wanted to do was confirm that this DataFrame contains the information it should.", "Back to our line of code that created this DataFrame. This is pretty intense! In fact this is probably the single most complex line of code we\u2019ll see in this analysis, so let\u2019s break it down.", "We\u2019re using pd.DataFrame() to create a DataFrame. This function can take a Python dictionary as input, where it uses the key as the column name and the values as the column data. I encourage you to read through the documentation to get a solid understanding of this. In our case, we use the dictionary", "as the source of our DataFrame. The key 'Number_of_Badestellen' is just the column heading, the main action here is the term in the value side of the dictionary: bad['bezirk'].groupby(bad['bezirk']).count()", "Here we\u2019re simply taking the \u2018bezirk\u2019 column of our original DataFrame, grouping by the values of the same column and applying the .count() aggregator to tell us how many times each value appears in that column. For example, \u2018Charlottenburg-Wilmersdorf\u2019 appears 4 times in the column bezirk in the DataFrame bad. This creates a row for the value \u2018Charlottenburg-Wilmersdorf\u2019 with the corresponding value \u20184\u2019. Nice!", "Now with this data represented as a DataFrame, we\u2019re ready to source and integrate some further data to answer our questions. This is where things really get going!", "Berlin is a large and growing city, with a total population of 3,748,148 as of December 2018 (where did I get that figure from? Stick around\u2014 all will be revealed shortly!). For our purposes, it would be good to find the population at the district level. This information is available from Wikipedia, but can we trust that? While Wikipedia is, in general, more accurate than its reputation would lead you to believe, it\u2019s always good practice to get our information from primary sources where possible. It\u2019s also good practice for our Data Analysis skills to do it ourselves.", "Once again we turn to daten.berlin.de for some data. A quick search finds that the most recent data available is from December 2018 \u2014 let\u2019s take that and see if it can give us the information that we\u2019re looking for.", "This DataFrame has 447 rows and 51 columns, so it\u2019s worth taking a moment to understand what data is here and how it\u2019s relevant to what we want to do. Thankfully the Amt f\u00fcr Statistik Berlin-Brandenburg (the creators of this dataset, the Office for Statistics of Berlin-Brandenburg) provide a supplementary guide to clarify matters.", "We are just trying to find a figure for the total number of inhabitants of each district in Berlin. Consulting our guide we can identify that the columns we are mainly interested in are \u2018BEZ\u2019 (for Bezirk \u2014 district, here given as a number) and \u2018E_E\u2019 (for Einwohner insgesamt \u2014 total inhabitants). We have 447 data points here, which is more than our 12 districts, but that\u2019s understandable because the Office for Statistics of Berlin-Brandenburg collects and provides this data at a more granular level than that. With a couple of lines of code we can extract the information we want from this data.", "First, we create a new DataFrame containing only the columns that we\u2019re interested in. We can do this very easily in pandas using .iloc[]:", "This gives us a DataFrame with 447 rows and 2 columns. We can aggregate the figures by district very easily using .groupby() chained with .sum(). This adds the values in the \u2018Total inhabitants\u2019 column E_E together for each row with a unique value in the BEZ column. This will give us the sum of inhabitants per district, exactly what we\u2019re looking for.", "Nice! Now we have the total populations by district. However, the districts are just given as numbers. How are we supposed to know which district is which? Well, after some research, it turns out that the districts in Berlin are each assigned a number administratively, and this is always used by our friends at the Office for Statistics of Berlin-Brandenburg, and in other official cases. Good to know!", "We can create a Python List with the names of the districts and add it as a column to our new DataFrame, and at the same time give it some more meaningful column names, like so:", "So by this point, we\u2019ve manipulated the official statistics from the Office for Statistics of Berlin-Brandenburg down to a simple DataFrame containing exactly the data that we\u2019re interested in. Now it\u2019s time to join our DataFrames together so we can get back to answering our question \u2014 which district of Berlin has the most bathing spots per person?", "Pandas is here for us again. We can do this very simply with just one line of code, using pd.merge(), like so:", "So what the heck just happened? We used the very powerful pd.merge() function to join our two DataFrames, stellen_pro_bezirk and einwohner_sum into one shiny new DataFrame. To do this we need to tell pandas which columns to merge \u2018on\u2019 (i.e. which columns to look for matches in), which is what the arguments left_on='bezirk', right_on='Bezirk' are doing here. If our columns had the same name (which would have been a pretty smart thing to do when we were naming them tbh) then we could have just used on='Bezirk', but pandas is flexible enough to give us options.", "The default merge with pd.merge() is what\u2019s called an \u2018inner join\u2019 \u2014 this means that rows are only returned where there is a match. This is why we end up with 8 rows in our new DataFrame pop_and_badestellen despite einwohner_sum having 12 rows. The rows where \u2018bezirk\u2019 and \u2018Bezirk\u2019 don\u2019t match are simply dropped when we use an inner join. In our case, this is exactly the behavior we want, but if we would like an outer join (where all rows are kept and the missing values are filled with Null values (NaN in pandas), we can do that easily by using the argument how='outer'.", "Alright, now we\u2019ve merged our DataFrames, let\u2019s keep things moving and start controlling for population! We can do this with some very simple maths:", "Here we created a new column in our DataFrame (badestellen_pro_einwohner) which is simply the result of dividing the number of bathing spots in each district by the population there. I told you the maths was simple! Now we can plot this new column and see what we can learn.", "Beautiful! So we can see here that when we control for population, the results are roughly the same. Treptow-K\u00f6penick is still out in the lead with the most bathing spots per person who lives there, Reinickendorf is still in second place and the rest of the order is basically in line with the absolute numbers we plotted earlier.", "That is perhaps not as exciting as if controlling for population had completely upended the results from earlier, but this is very useful information to have for our analysis. We can see that if we\u2019re thinking in absolute terms about the number of bathing spots, or if we\u2019re looking at the number of bathing spots per inhabitant, our data is showing us similar things. If we\u2019re going to make recommendations based on our analysis (and believe me, we are!) then this strengthens those.", "Our next step is to take the area of each district into account. Treptow-K\u00f6penick is the biggest district in the city, so perhaps that\u2019s why there are so many bathing spots there. Let\u2019s do some further analysis and see what we can discover.", "Our first step here is to source data for the area of each district. I sourced this again from our old friends at the Office of Statistics of Berlin-Brandenburg. We could do something fancy like save this as a CSV or Excel file and import it using pandas (.read_csv() and .read_excel() would be the weapons of choice in this case), and if our dataset here was larger then this would definitely be the smart way to go. However, we just have 12 entries so we can simply write a Python list (in the same order as the data in our DataFrame) and add it as a new column to a copy of our einwohner_sum DataFrame, like so:", "It\u2019s necessary to use the .copy() method if we want to create a new DataFrame object (a so-called \u2018deep copy\u2019). If we were to just use einwohner_area = einwohner_sum, any subsequent changes would affect both DataFrames, as they both work as references to an object within Python. This is fairly complicated, but you can read more about it to get a better handle on how this works in Python.", "Then we simply add a new column \u2018Fl\u00e4che\u2019 (it\u2019s German for \u2018area\u2019) that is our new list. Boom!", "Then we follow a process that will be very familiar if you read the previous section of this article (and if you didn\u2019t, what are you doing here? Go back and read it! It\u2019s great!).", "Now we have all the information we need to see the results, but we just have one more step to make this into a beautiful chart as we have before.", "Looking at our results here, we can see that if you\u2019re just interested in the pure concentration of bathing spots in the area then Reinickendorf is the place to be. Previous champion Treptow-K\u00f6penick has been relegated to third place by this metric \u2014 still a strong showing, but no longer in top place.", "So what have we learned? Well, mainly that if you\u2019re interested in having the largest choice of bathing spots nearby, along with the fewest other people using them, then Treptow-K\u00f6penick is the place to be! However, Berlin has an excellent public transportation system so just because this district has the highest rate of bathing spots per inhabitant, doesn\u2019t mean you\u2019ll have the whole place to yourself.", "If you\u2019re more interested in pure concentration of bathing spots (maybe you want to visit several in one day?), then Reinickendorf is the place for you. In general from this analysis, however, we can safely make a recommendation to a hypothetical person looking for a new place to live, whose most important concern is having lots of bathing spots nearby. They should move to Treptow-K\u00f6penick. It\u2019s nice there!", "This illustrates a vital point for any Data Analysis project. You can make the most beautiful visualisations, or manipulate the data in the most fancy and complex way, but ultimately to make your analysis meaningful and useful, you need to have domain knowledge of the area you\u2019re analysing, or partner with someone with that knowledge. This helps you avoid embarrassing misunderstandings, and also helps you make useful insights which actually produce benefits for your audience, whoever they might be.", "I hope this article helped you see how easily and powerfully we can manipulate data using Python with the pandas and Matplotlib libraries. The techniques we used here are all ones you can use again and again in future Data Analysis projects you work on.", "Thanks very much for taking the time to explore this topic with me. As always, I strongly welcome your feedback \u2014 you can contact me on Twitter at @craigdoesdata to let me know how I could have done this analysis more effectively. I am very much still learning and I want to learn your secrets too, so please share them with me.", "Again, the whole Jupyter Notebook and associated files are available on my Github page and on Binder, and I encourage you to play around with them.", "Data Scientist, based in Berlin, Germany. Python, SQL, R, Tableau. He / him. I\u2019m the one on the left in the photo. http://www.craigdoesdata.de"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F4ed862633cd3&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/@thecraigdickson?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "Craig Dickson"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7106ad46fcdd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&user=Craig+Dickson&userId=7106ad46fcdd&source=post_page-7106ad46fcdd----4ed862633cd3---------------------post_header-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4ed862633cd3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&user=Craig+Dickson&userId=7106ad46fcdd&source=-----4ed862633cd3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4ed862633cd3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&source=-----4ed862633cd3---------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://www.pexels.com/@aleksandr-neplokhov-486399?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Aleksandr Neplokhov"}, {"url": "https://www.pexels.com/photo/man-cannonballing-to-the-lake-1371808/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Pexels"}, {"url": "https://www.visitberlin.de/en/lakes-beaches-berlin", "anchor_text": "nice lakes or rivers"}, {"url": "https://en.wikipedia.org/wiki/Loch", "anchor_text": "many beautiful lochs"}, {"url": "https://en.wikipedia.org/wiki/List_of_rivers_of_Scotland", "anchor_text": "rivers"}, {"url": "https://www.google.com/search?q=cool+guy&client=firefox-b-d&sxsrf=ALeKk00b_LDzeOo0YqhL8qgvJNKg9PhYIA:1587039593991&source=lnms&tbm=isch&sa=X&ved=2ahUKEwiC5fmZ9-zoAhW86KYKHccRCi0Q_AUoAXoECA4QAw&biw=1280&bih=585", "anchor_text": "cool guy"}, {"url": "https://www.python.org/", "anchor_text": "Python"}, {"url": "https://pandas.pydata.org/", "anchor_text": "pandas"}, {"url": "https://numpy.org/", "anchor_text": "Numpy"}, {"url": "https://twitter.com/craigdoesdata", "anchor_text": "feedback"}, {"url": "https://daten.berlin.de/", "anchor_text": "Open Data website"}, {"url": "https://daten.berlin.de/datensaetze/liste-der-badestellen", "anchor_text": "list of bathing spots,"}, {"url": "https://github.com/thecraigd/Badestellen", "anchor_text": "here"}, {"url": "https://mybinder.org/v2/gh/thecraigd/Badestellen/94c3fad7d7ca9540f0649cb24778fa3384368bb4", "anchor_text": "here"}, {"url": "https://matplotlib.org/tutorials/introductory/customizing.html", "anchor_text": "style sheets"}, {"url": "https://matplotlib.org/3.1.1/gallery/style_sheets/style_sheets_reference.html", "anchor_text": "here"}, {"url": "https://matplotlib.org/3.2.1/contents.html", "anchor_text": "documentation"}, {"url": "https://stackoverflow.com/", "anchor_text": "Stack Overflow"}, {"url": "https://medium.com/better-programming/if-you-want-to-be-a-senior-developer-stop-focusing-on-syntax-d77b081cb10b", "anchor_text": "Google is your friend"}, {"url": "https://commons.wikimedia.org/wiki/User:TUBS", "anchor_text": "TUBS"}, {"url": "https://commons.wikimedia.org/wiki/File:Berlin,_administrative_divisions_(%2Bdistricts_-boroughs_-pop)_-_de_-_colored.svg", "anchor_text": "Wikipedia"}, {"url": "https://creativecommons.org/licenses/by-sa/3.0", "anchor_text": "CC BY-SA"}, {"url": "https://www.geeksforgeeks.org/python-pandas-dataframe/", "anchor_text": "DataFrame"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html", "anchor_text": ".groupby()"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html", "anchor_text": "pd.DataFrame()"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html", "anchor_text": "the documentation"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.count.html", "anchor_text": ".count()"}, {"url": "https://de.wikipedia.org/wiki/Berlin#Stadtgliederung", "anchor_text": "Wikipedia,"}, {"url": "https://en.wikipedia.org/wiki/Reliability_of_Wikipedia", "anchor_text": "more accurate"}, {"url": "http://daten.berlin.de", "anchor_text": "daten.berlin.de"}, {"url": "https://daten.berlin.de/datensaetze/einwohnerinnen-und-einwohner-berlin-lor-planungsr%C3%A4umen-am-31122018", "anchor_text": "most recent data available"}, {"url": "https://www.statistik-berlin-brandenburg.de/opendata/Beschreibung_EWR_Datenpool_2018.pdf", "anchor_text": "guide"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.iloc.html", "anchor_text": ".iloc[]"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html", "anchor_text": ".groupby()"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.core.groupby.GroupBy.sum.html", "anchor_text": ".sum()"}, {"url": "https://www.statistik-berlin-brandenburg.de/regionalstatistiken/r-gesamt_neu.asp?Ptyp=410&Sageb=33000&creg=BBB&anzwer=8", "anchor_text": "assigned a number"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.merge.html", "anchor_text": "merge(),"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.merge.html", "anchor_text": "pd.merge()"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.merge.html", "anchor_text": "pd.merge()"}, {"url": "https://www.analyticsvidhya.com/blog/2020/02/joins-in-pandas-master-the-different-types-of-joins-in-python/", "anchor_text": "\u2018inner join\u2019"}, {"url": "https://www.statistik-berlin-brandenburg.de/webapi/jsf/tableView/tableView.xhtml", "anchor_text": "Office of Statistics of Berlin-Brandenburg"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html", "anchor_text": ".read_csv()"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.read_excel.html", "anchor_text": ".read_excel()"}, {"url": "https://developers.google.com/edu/python/lists", "anchor_text": "list"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.copy.html", "anchor_text": "einwohner_area = einwohner_sum"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.copy.html", "anchor_text": ".copy()"}, {"url": "https://www.geeksforgeeks.org/copy-python-deep-copy-shallow-copy/", "anchor_text": "read more about it"}, {"url": "https://www.berlin.de/en/public-transportation/", "anchor_text": "public transportation system"}, {"url": "https://twitter.com/craigdoesdata", "anchor_text": "craigdoesdata"}, {"url": "https://github.com/thecraigd/Badestellen", "anchor_text": "Github page"}, {"url": "https://mybinder.org/v2/gh/thecraigd/Badestellen/94c3fad7d7ca9540f0649cb24778fa3384368bb4", "anchor_text": "Binder"}, {"url": "https://www.craigdoesdata.de/", "anchor_text": "craigdoesdata.de"}, {"url": "https://medium.com/tag/python?source=post_page-----4ed862633cd3---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-analysis?source=post_page-----4ed862633cd3---------------data_analysis-----------------", "anchor_text": "Data Analysis"}, {"url": "https://medium.com/tag/pandas?source=post_page-----4ed862633cd3---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/matplotlib?source=post_page-----4ed862633cd3---------------matplotlib-----------------", "anchor_text": "Matplotlib"}, {"url": "https://medium.com/tag/swimming?source=post_page-----4ed862633cd3---------------swimming-----------------", "anchor_text": "Swimming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4ed862633cd3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&user=Craig+Dickson&userId=7106ad46fcdd&source=-----4ed862633cd3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4ed862633cd3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&user=Craig+Dickson&userId=7106ad46fcdd&source=-----4ed862633cd3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4ed862633cd3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7106ad46fcdd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&user=Craig+Dickson&userId=7106ad46fcdd&source=post_page-7106ad46fcdd----4ed862633cd3---------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F5edb8f2d3595&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&newsletterV3=7106ad46fcdd&newsletterV3Id=5edb8f2d3595&user=Craig+Dickson&userId=7106ad46fcdd&source=-----4ed862633cd3---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "Written by Craig Dickson"}, {"url": "https://medium.com/@thecraigdickson/followers?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "171 Followers"}, {"url": "https://towardsdatascience.com/?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "http://www.craigdoesdata.de", "anchor_text": "http://www.craigdoesdata.de"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7106ad46fcdd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&user=Craig+Dickson&userId=7106ad46fcdd&source=post_page-7106ad46fcdd----4ed862633cd3---------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F5edb8f2d3595&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhere-to-swim-in-berlin-4ed862633cd3&newsletterV3=7106ad46fcdd&newsletterV3Id=5edb8f2d3595&user=Craig+Dickson&userId=7106ad46fcdd&source=-----4ed862633cd3---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/designing-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2?source=author_recirc-----4ed862633cd3----0---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=author_recirc-----4ed862633cd3----0---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=author_recirc-----4ed862633cd3----0---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "Craig Dickson"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----4ed862633cd3----0---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/designing-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2?source=author_recirc-----4ed862633cd3----0---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "Designing a Relational Database and Creating an Entity Relationship DiagramLearn to create, update and interrogate your own fully-functional relational database using SQL with free open-source software \u2014 Part 1"}, {"url": "https://towardsdatascience.com/designing-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2?source=author_recirc-----4ed862633cd3----0---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "15 min read\u00b7Jul 17, 2020"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F89c1c19320b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&user=Craig+Dickson&userId=7106ad46fcdd&source=-----89c1c19320b2----0-----------------clap_footer----8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/designing-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2?source=author_recirc-----4ed862633cd3----0---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "3"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F89c1c19320b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&source=-----4ed862633cd3----0-----------------bookmark_preview----8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----4ed862633cd3----1---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://barrmoses.medium.com/?source=author_recirc-----4ed862633cd3----1---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://barrmoses.medium.com/?source=author_recirc-----4ed862633cd3----1---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "Barr Moses"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----4ed862633cd3----1---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----4ed862633cd3----1---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "Zero-ETL, ChatGPT, And The Future of Data EngineeringThe post-modern data stack is coming. Are we ready?"}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----4ed862633cd3----1---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "9 min read\u00b7Apr 3"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F71849642ad9c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fzero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c&user=Barr+Moses&userId=2818bac48708&source=-----71849642ad9c----1-----------------clap_footer----8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----4ed862633cd3----1---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "21"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F71849642ad9c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fzero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c&source=-----4ed862633cd3----1-----------------bookmark_preview----8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----4ed862633cd3----2---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://medium.com/@mattchapmanmsc?source=author_recirc-----4ed862633cd3----2---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://medium.com/@mattchapmanmsc?source=author_recirc-----4ed862633cd3----2---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "Matt Chapman"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----4ed862633cd3----2---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----4ed862633cd3----2---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "The Portfolio that Got Me a Data Scientist JobSpoiler alert: It was surprisingly easy (and free) to make"}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----4ed862633cd3----2---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "\u00b710 min read\u00b7Mar 24"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F513cc821bfe4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4&user=Matt+Chapman&userId=bf7d13fc53db&source=-----513cc821bfe4----2-----------------clap_footer----8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----4ed862633cd3----2---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "42"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F513cc821bfe4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4&source=-----4ed862633cd3----2-----------------bookmark_preview----8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5?source=author_recirc-----4ed862633cd3----3---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=author_recirc-----4ed862633cd3----3---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=author_recirc-----4ed862633cd3----3---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "Craig Dickson"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----4ed862633cd3----3---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5?source=author_recirc-----4ed862633cd3----3---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "Coding and Implementing a Relational Database using MySQLLearn to create, update and interrogate your own fully-functional relational database using SQL with free open source software \u2014 Part 2"}, {"url": "https://towardsdatascience.com/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5?source=author_recirc-----4ed862633cd3----3---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": "17 min read\u00b7Jul 17, 2020"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd9bc69be90f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcoding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5&user=Craig+Dickson&userId=7106ad46fcdd&source=-----d9bc69be90f5----3-----------------clap_footer----8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5?source=author_recirc-----4ed862633cd3----3---------------------8d8273ef_089f_4e93_8884_ab9dc017d09a-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "1"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd9bc69be90f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcoding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5&source=-----4ed862633cd3----3-----------------bookmark_preview----8d8273ef_089f_4e93_8884_ab9dc017d09a-------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "See all from Craig Dickson"}, {"url": "https://towardsdatascience.com/?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "See all from Towards Data Science"}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://thepycoach.com/?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://thepycoach.com/?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "The PyCoach"}, {"url": "https://artificialcorner.com/?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Artificial Corner"}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "You\u2019re Using ChatGPT Wrong! Here\u2019s How to Be Ahead of 99% of ChatGPT UsersMaster ChatGPT by learning prompt engineering."}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "\u00b77 min read\u00b7Mar 17"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fartificial-corner%2F886a50dabc54&operation=register&redirect=https%3A%2F%2Fartificialcorner.com%2Fyoure-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54&user=The+PyCoach&userId=fb44e21903f3&source=-----886a50dabc54----0-----------------clap_footer----7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "276"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F886a50dabc54&operation=register&redirect=https%3A%2F%2Fartificialcorner.com%2Fyoure-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54&source=-----4ed862633cd3----0-----------------bookmark_preview----7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://medium.com/@mattchapmanmsc?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://medium.com/@mattchapmanmsc?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Matt Chapman"}, {"url": "https://towardsdatascience.com/?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "The Portfolio that Got Me a Data Scientist JobSpoiler alert: It was surprisingly easy (and free) to make"}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "\u00b710 min read\u00b7Mar 24"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F513cc821bfe4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4&user=Matt+Chapman&userId=bf7d13fc53db&source=-----513cc821bfe4----1-----------------clap_footer----7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "42"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F513cc821bfe4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4&source=-----4ed862633cd3----1-----------------bookmark_preview----7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://alexcancode.medium.com/?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://alexcancode.medium.com/?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Alexander Nguyen"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Why I Keep Failing Candidates During Google Interviews\u2026They don\u2019t meet the bar."}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "\u00b74 min read\u00b7Apr 13"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Fdc8f865b2c19&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwhy-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19&user=Alexander+Nguyen&userId=a148fd75c2e9&source=-----dc8f865b2c19----0-----------------clap_footer----7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----4ed862633cd3----0---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "90"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fdc8f865b2c19&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwhy-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19&source=-----4ed862633cd3----0-----------------bookmark_preview----7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/from-data-to-clusters-when-is-your-clustering-good-enough-5895440a978a?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://erdogant.medium.com/?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://erdogant.medium.com/?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Erdogan Taskesen"}, {"url": "https://towardsdatascience.com/?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/from-data-to-clusters-when-is-your-clustering-good-enough-5895440a978a?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "From Data to Clusters; When is Your Clustering Good Enough?Sensible clusters and hidden gems can be found using clustering approaches but you need the right cluster evaluation method!"}, {"url": "https://towardsdatascience.com/from-data-to-clusters-when-is-your-clustering-good-enough-5895440a978a?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "\u00b717 min read\u00b76 days ago"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5895440a978a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-data-to-clusters-when-is-your-clustering-good-enough-5895440a978a&user=Erdogan+Taskesen&userId=4e636e2ef813&source=-----5895440a978a----1-----------------clap_footer----7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/from-data-to-clusters-when-is-your-clustering-good-enough-5895440a978a?source=read_next_recirc-----4ed862633cd3----1---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "2"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5895440a978a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-data-to-clusters-when-is-your-clustering-good-enough-5895440a978a&source=-----4ed862633cd3----1-----------------bookmark_preview----7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----4ed862633cd3----2---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://medium.com/@arthurmello_?source=read_next_recirc-----4ed862633cd3----2---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://medium.com/@arthurmello_?source=read_next_recirc-----4ed862633cd3----2---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Arthur Mello"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----4ed862633cd3----2---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----4ed862633cd3----2---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Exploratory Data Analysis: The Ultimate WorkflowExplore the true potential of your data with Python"}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----4ed862633cd3----2---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "\u00b716 min read\u00b7Apr 20"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Fa82b1d21f747&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fexploratory-data-analysis-the-ultimate-workflow-a82b1d21f747&user=Arthur+Mello&userId=9d32d5e0ac40&source=-----a82b1d21f747----2-----------------clap_footer----7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----4ed862633cd3----2---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "5"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa82b1d21f747&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fexploratory-data-analysis-the-ultimate-workflow-a82b1d21f747&source=-----4ed862633cd3----2-----------------bookmark_preview----7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://medium.com/geekculture/stop-doing-this-on-chatgpt-get-ahead-99-users-ai-artificial-intelligence-productivity-prompt-engineering-4-f3441bf7a25a?source=read_next_recirc-----4ed862633cd3----3---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://medium.com/@rfeers?source=read_next_recirc-----4ed862633cd3----3---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://medium.com/@rfeers?source=read_next_recirc-----4ed862633cd3----3---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Josep Ferrer"}, {"url": "https://medium.com/geekculture?source=read_next_recirc-----4ed862633cd3----3---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Geek Culture"}, {"url": "https://medium.com/geekculture/stop-doing-this-on-chatgpt-get-ahead-99-users-ai-artificial-intelligence-productivity-prompt-engineering-4-f3441bf7a25a?source=read_next_recirc-----4ed862633cd3----3---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "Stop doing this on ChatGPT and get ahead of the 99% of its usersUnleash the Power of AI Writing with Effective Prompts"}, {"url": "https://medium.com/geekculture/stop-doing-this-on-chatgpt-get-ahead-99-users-ai-artificial-intelligence-productivity-prompt-engineering-4-f3441bf7a25a?source=read_next_recirc-----4ed862633cd3----3---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": "\u00b78 min read\u00b7Mar 31"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgeekculture%2Ff3441bf7a25a&operation=register&redirect=https%3A%2F%2Fmedium.com%2Fgeekculture%2Fstop-doing-this-on-chatgpt-get-ahead-99-users-ai-artificial-intelligence-productivity-prompt-engineering-4-f3441bf7a25a&user=Josep+Ferrer&userId=8213af8f3ccf&source=-----f3441bf7a25a----3-----------------clap_footer----7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://medium.com/geekculture/stop-doing-this-on-chatgpt-get-ahead-99-users-ai-artificial-intelligence-productivity-prompt-engineering-4-f3441bf7a25a?source=read_next_recirc-----4ed862633cd3----3---------------------7ef335c0_f233_40a0_8e67_887fbd9e6b60-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "71"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff3441bf7a25a&operation=register&redirect=https%3A%2F%2Fmedium.com%2Fgeekculture%2Fstop-doing-this-on-chatgpt-get-ahead-99-users-ai-artificial-intelligence-productivity-prompt-engineering-4-f3441bf7a25a&source=-----4ed862633cd3----3-----------------bookmark_preview----7ef335c0_f233_40a0_8e67_887fbd9e6b60-------", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "See more recommendations"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=post_page-----4ed862633cd3--------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}