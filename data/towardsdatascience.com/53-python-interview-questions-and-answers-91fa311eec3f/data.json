{"url": "https://towardsdatascience.com/53-python-interview-questions-and-answers-91fa311eec3f", "time": 1683006002.050216, "path": "towardsdatascience.com/53-python-interview-questions-and-answers-91fa311eec3f/", "webpage": {"metadata": {"title": "53 Python Interview Questions and Answers | by GreekDataGuy | Towards Data Science", "h1": "53 Python Interview Questions and Answers", "description": "Not so long ago I started a new role as a \u201cData Scientist\u201d which turned out to be \u201cPython Engineer\u201d in practice. I would have been more prepared if I\u2019d brushed up on Python\u2019s thread lifecycle instead\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/u/9741fe0eea34?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Searge Boremchuq", "paragraph_index": 24}, {"url": "https://medium.com/u/b3236beb43a6?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Chrisjan Wust", "paragraph_index": 38}, {"url": "https://medium.com/u/a582f1392208?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Michael Graeme Short", "paragraph_index": 39}, {"url": "https://medium.com/u/e0fac81c6192?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Michael P. Reilly", "paragraph_index": 51}, {"url": "https://medium.com/u/b3236beb43a6?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Chrisjan Wust", "paragraph_index": 61}, {"url": "https://towardsdatascience.com/numpy-array-cookbook-generating-and-manipulating-arrays-in-python-2195c3988b09", "anchor_text": "post", "paragraph_index": 65}, {"url": "https://medium.com/u/2b6097a12719?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "\u0415\u0432\u0433\u0435\u043d\u0438\u0439 \u041a\u0440\u0430\u043c\u0430\u0440\u043e\u0432", "paragraph_index": 98}, {"url": "https://medium.com/u/b3236beb43a6?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Chrisjan Wust", "paragraph_index": 98}, {"url": "http://gmail.com", "anchor_text": "gmail.com", "paragraph_index": 120}], "all_paragraphs": ["Not so long ago I started a new role as a \u201cData Scientist\u201d which turned out to be \u201cPython Engineer\u201d in practice.", "I would have been more prepared if I\u2019d brushed up on Python\u2019s thread lifecycle instead of recommender systems in advance.", "In that spirit, here are my python interview/job preparation questions and answers. Most data scientists write a lot code so this applies to both scientists and engineers.", "Whether you\u2019re interviewing candidates, preparing to apply to jobs or just brushing up on Python, I think this list will be invaluable.", "I\u2019ve been asked this question in every python / data science interview I\u2019ve ever had. Know the answer like the back of your hand.", "Without importing the Template class, there are 3 ways to interpolate strings.", "Early in my python career I assumed these were the same\u2026 hello bugs. So for the record, is checks identity and == checks equality.", "We\u2019ll walk through an example. Create some lists and assign them to names. Note that b points to the same object as a in below.", "Check equality and note they are all equal.", "But do they have the same identity? Nope.", "We can verify this by printing their object id\u2019s.", "c has a different id than a and b.", "Another questions I\u2019ve been asked in every interview. It\u2019s deserves a post itself, but you\u2019re prepared if you can walk through writing your own example.", "A decorator allows adding functionality to an existing function by passing that existing function to a decorator, which executes the existing function as well as additional code.", "We\u2019ll write a decorator that that logs when another function is called.", "Write the decorator function. This takes a function, func, as an argument. It also defines a function, log_function_called, which calls func() and executes some code, print(f'{func} called.'). Then it return the function it defined", "Let\u2019s write other functions that we\u2019ll eventually add the decorator to (but not yet).", "Now add the decorator to both.", "See how we can now easily add logging to any function we write just by adding @logging above it.", "Range generates a list of integers and there are 3 ways to use it.", "The function takes 1 to 3 arguments. Note I\u2019ve wrapped each usage in list comprehension so we can see the values generated.", "range(stop) : generate integers from 0 to the \u201cstop\u201d integer.", "range(start, stop) : generate integers from the \u201cstart\u201d to the \u201cstop\u201d integer.", "range(start, stop, step) : generate integers from \u201cstart\u201d to \u201cstop\u201d at intervals of \u201cstep\u201d.", "Thanks Searge Boremchuq for suggesting a more pythonic way to do this!", "Instance methods : accept self parameter and relate to a specific instance of the class.", "Static methods : use @staticmethod decorator, are not related to a specific instance, and are self-contained (don\u2019t modify class or instance attributes)", "Class methods : accept cls parameter and can modify the class itself", "We\u2019re going to illustrate the difference around a fictional CoffeeShop class.", "CoffeeShop class has an attribute, specialty, set to 'espresso' by default. Each instance of CoffeeShop is initialized with an attribute coffee_price . It also has 3 methods, an instance method, a static method and a class method.", "Let\u2019s initialize an instance of the coffee shop with a coffee_price of 5. Then call the instance method make_coffee.", "Now call the static method. Static methods can\u2019t modify class or instance state so they\u2019re normally used for utility functions, for example, adding 2 numbers. We used ours to check the weather.Its sunny. Great!", "Now let\u2019s use the class method to modify the coffee shop\u2019s specialty and then make_coffee.", "Note how make_coffee used to make espresso but now makes drip coffee!", "The purpose of this question is to see if you understand that all functions are also objects in python.", "func is the object representing the function which can be assigned to a variable or passed to another function. func() with parentheses calls the function and returns what it outputs.", "map returns a map object (an iterator) which can iterate over returned values from applying a function to every element in a sequence. The map object can also be converted to a list if required.", "Above, I added 3 to every element in the list.", "A reader suggested a more pythonic implementation. Thanks Chrisjan Wust !", "Also, thanks Michael Graeme Short for the corrections!", "This can be tricky to wrap your head around until you use it a few times.", "reduce takes a function and a sequence and iterates over that sequence. On each iteration, both the current element and output from the previous element are passed to the function. In the end, a single value is returned.", "Filter literally does what the name says. It filters elements in a sequence.", "Each element is passed to a function which is returned in the outputted sequence if the function returns True and discarded if the function returns False.", "Note how all elements not divisible by 2 have been removed.", "Be prepared to go down a rabbit hole of semantics if you google this question and read the top few pages.", "In a nutshell, all names call by reference, but some memory locations hold objects while others hold pointers to yet other memory locations.", "Let\u2019s see how this works with strings. We\u2019ll instantiate a name and object, point other names to it. Then delete the first name.", "What we see is that all these names point to the same object in memory, which wasn\u2019t affected by del x.", "Here\u2019s another interesting example with a function.", "Notice how adding an s to the string inside the function created a new name AND a new object. Even though the new name has the same \u201cname\u201d as the existing name.", "Thanks Michael P. Reilly for the corrections!", "Note how reverse() is called on the list and mutates it. It doesn\u2019t return the mutated list itself.", "Let\u2019s see the results of multiplying the string \u2018cat\u2019 by 3.", "The string is concatenated to itself 3 times.", "A list is outputted containing the contents of [1,2,3] repeated twice.", "Self refers to the instance of the class itself. It\u2019s how we give methods access to and the ability to update the object they belong to.", "Below, passing self to __init__() gives us the ability to set the color of an instance on initialization.", "Adding 2 lists together concatenates them. Note that arrays do not function the same way.", "We\u2019ll discuss this in the context of a mutable object, a list. For immutable objects, shallow vs deep isn\u2019t as relevant.", "i) Reference the original object. This points a new name, li2, to the same place in memory to which li1 points. So any change we make to li1 also occurs to li2.", "ii) Create a shallow copy of the original. We can do this with the list() constructor, or the more pythonic mylist.copy() (thanks Chrisjan Wust !).", "A shallow copy creates a new object, but fills it with references to the original. So adding a new object to the original collection, li3, doesn\u2019t propagate to li4, but modifying one of the objects in li3 will propagate to li4.", "iii) Create a deep copy. This is done with copy.deepcopy(). The 2 objects are now completely independent and changes to either have no affect on the other.", "Note: Python\u2019s standard library has an array object but here I\u2019m specifically referring to the commonly used Numpy array.", "I wrote another comprehensive post on arrays.", "Remember, arrays are not lists. Arrays are from Numpy and arithmetic functions like linear algebra.", "We need to use Numpy\u2019s concatenate function to do it.", "Note this is a very subjective question and you\u2019ll want to modify your response based on what the role is looking for.", "Python is very readable and there is a pythonic way to do just about everything, meaning a preferred way which is clear and concise.", "I\u2019d contrast this to Ruby where there are often many ways to do something without a guideline for which is preferred.", "When working with a lot data, nothing is quite as helpful as pandas which makes manipulating and visualizing data a breeze.", "Immutable means the state cannot be modified after creation. Examples are: int, float, bool, string and tuple.", "Mutable means the state can be modified after creation. Examples are list, dict and set.", "Slicing notation takes 3 arguments, list[start:stop:step], where step is the interval at which elements are returned.", "Pickling is the go-to method of serializing and unserializing objects in Python.", "In the example below, we serialize and unserialize a list of dictionaries.", "Dict is python datatype, a collection of indexed but unordered keys and values.", "JSON is just a string which follows a specified format and is intended for transferring data.", "ORMs (object relational mapping) map data models (usually in an app) to database tables and simplifies database transactions.", "SQLAlchemy is typically used in the context of Flask, and Django has it\u2019s own ORM.", "Any takes a sequence and returns true if any element in the sequence is true.", "All returns true only if all elements in the sequence are true.", "Looking up a value in a list takes O(n) time because the whole list needs to be iterated through until the value is found.", "Looking up a key in a dictionary takes O(1) time because it\u2019s a hash table.", "This can make a huge time difference if there are a lot of values so dictionaries are generally recommended for speed. But they do have other limitations like needing unique keys.", "A module is a file (or collection of files) that can be imported together.", "A package is a directory of modules.", "So packages are modules, but not all modules are packages.", "Increments and decrements can be done with +- and -= .", "This can be done by converting the list to a set then back to a list.", "Note that sets will not necessarily maintain the order of a list.", "append adds a value to a list while extend adds values in another list to a list.", "This can be done with the abs() function.", "You can use the zip function to combine lists into a list of tuples. This isn\u2019t restricted to only using 2 lists. It can also be done with 3 or more.", "You can\u2019t \u201csort\u201d a dictionary because dictionaries don\u2019t have order but you can return a sorted list of tuples which has the keys and values that are in the dictionary.", "In the below example, Audi, inherits from Car. And with that inheritance comes the instance methods of the parent class.", "The easiest way is to split the string on whitespace and then rejoin without spaces.", "2 readers recommended a more pythonic way to handle this following the Python ethos that Explicit is better than Implicit. It\u2019s also faster because python doesn\u2019t create a new list object. Thanks \u0415\u0432\u0433\u0435\u043d\u0438\u0439 \u041a\u0440\u0430\u043c\u0430\u0440\u043e\u0432 and Chrisjan Wust !", "enumerate() allows tracking index when iterating over a sequence. It\u2019s more pythonic than defining and incrementing an integer representing the index.", "pass means do nothing. We typically use it because Python doesn\u2019t allow creating a class, function or if-statement without code inside it.", "In the example below, an error would be thrown without code inside the i > 3 so we use pass.", "continue continues to the next element and halts execution for the current element. So print(i) is never reached for values where i < 3.", "break breaks the loop and the sequence is not longer iterated over. So elements from 3 onward are not printed.", "List comprehension is generally accepted as more pythonic where it\u2019s still readable.", "The ternary operator is a one-line if/else statement.", "The syntax looks like a if condition else b.", "This can be done by passing the dictionary to python\u2019s list() constructor, list().", "You can use the upper() and lower() string methods.", "remove() remove the first matching value.", "del removes an element by index.", "pop() removes an element by index and returns that element.", "Below we\u2019ll create dictionary with letters of the alphabet as keys, and index in the alphabet as values.", "Python provides 3 words to handle exceptions, try, except and finally.", "In the simplistic example below, the try block fails because we cannot add integers with strings. The except block sets val = 10 and then the finally block prints complete.", "You never know what questions will come up in interviews and the best way to prepare is to have a lot of experience writing code.", "That said, this list should cover most anything you\u2019ll be asked python-wise for a data scientist or junior/intermediate python developer roles.", "I hope this was as helpful for you as writing it was for me.", "Are there any great questions I missed?", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Just a developer. Contact: greek.data.guy \u201cat\u201d gmail.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F91fa311eec3f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://greekdataguy.medium.com/?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": ""}, {"url": "https://greekdataguy.medium.com/?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "GreekDataGuy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd67bf018ae6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&user=GreekDataGuy&userId=d67bf018ae6d&source=post_page-d67bf018ae6d----91fa311eec3f---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F91fa311eec3f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F91fa311eec3f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@brookecagle?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Brooke Cagle"}, {"url": "https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "http://twitter.com/logging", "anchor_text": "@logging"}, {"url": "http://twitter.com/logging", "anchor_text": "@logging"}, {"url": "https://medium.com/u/9741fe0eea34?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Searge Boremchuq"}, {"url": "http://twitter.com/staticmethod", "anchor_text": "@staticmethod"}, {"url": "http://twitter.com/classmethod", "anchor_text": "@classmethod"}, {"url": "https://medium.com/u/b3236beb43a6?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Chrisjan Wust"}, {"url": "https://medium.com/u/a582f1392208?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Michael Graeme Short"}, {"url": "https://medium.com/u/e0fac81c6192?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Michael P. Reilly"}, {"url": "https://medium.com/u/b3236beb43a6?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Chrisjan Wust"}, {"url": "https://towardsdatascience.com/numpy-array-cookbook-generating-and-manipulating-arrays-in-python-2195c3988b09", "anchor_text": "post"}, {"url": "https://medium.com/u/2b6097a12719?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "\u0415\u0432\u0433\u0435\u043d\u0438\u0439 \u041a\u0440\u0430\u043c\u0430\u0440\u043e\u0432"}, {"url": "https://medium.com/u/b3236beb43a6?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Chrisjan Wust"}, {"url": "https://medium.com/tag/python?source=post_page-----91fa311eec3f---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----91fa311eec3f---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----91fa311eec3f---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----91fa311eec3f---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/coding?source=post_page-----91fa311eec3f---------------coding-----------------", "anchor_text": "Coding"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F91fa311eec3f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&user=GreekDataGuy&userId=d67bf018ae6d&source=-----91fa311eec3f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F91fa311eec3f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&user=GreekDataGuy&userId=d67bf018ae6d&source=-----91fa311eec3f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F91fa311eec3f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F91fa311eec3f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----91fa311eec3f---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----91fa311eec3f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----91fa311eec3f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----91fa311eec3f--------------------------------", "anchor_text": ""}, {"url": "https://greekdataguy.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://greekdataguy.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "GreekDataGuy"}, {"url": "https://greekdataguy.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "9.97K Followers"}, {"url": "http://gmail.com", "anchor_text": "gmail.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd67bf018ae6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&user=GreekDataGuy&userId=d67bf018ae6d&source=post_page-d67bf018ae6d--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F26b33036e2a7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F53-python-interview-questions-and-answers-91fa311eec3f&newsletterV3=d67bf018ae6d&newsletterV3Id=26b33036e2a7&user=GreekDataGuy&userId=d67bf018ae6d&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}