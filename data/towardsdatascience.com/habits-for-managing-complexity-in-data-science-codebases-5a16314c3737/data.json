{"url": "https://towardsdatascience.com/habits-for-managing-complexity-in-data-science-codebases-5a16314c3737", "time": 1683001204.382067, "path": "towardsdatascience.com/habits-for-managing-complexity-in-data-science-codebases-5a16314c3737/", "webpage": {"metadata": {"title": "Better habits for managing complexity in data science codebases | by David | Towards Data Science", "h1": "Better habits for managing complexity in data science codebases", "description": "If you\u2019ve tried your hand at machine learning or data science, you know that code can get messy, quickly. Typically, code to train ML models is written in Jupyter notebooks and it\u2019s full of (i) side\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/davified/clean-code-ml/blob/master/notebooks/titanic-original.ipynb", "anchor_text": "messy", "paragraph_index": 0}, {"url": "https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201", "anchor_text": "John Ousterhout", "paragraph_index": 6}, {"url": "https://github.com/abiodunjames/Awesome-Clean-Code-Resources", "anchor_text": "several languages", "paragraph_index": 9}, {"url": "https://github.com/zedr/clean-code-python", "anchor_text": "Python", "paragraph_index": 9}, {"url": "https://github.com/davified/clean-code-ml", "anchor_text": "clean-code-ml repo", "paragraph_index": 9}, {"url": "https://en.wikipedia.org/wiki/Law_of_flat_surfaces", "anchor_text": "Law of Flat Surfaces", "paragraph_index": 17}, {"url": "https://github.com/davified/clean-code-ml/blob/master/docs/refactoring-process.md", "anchor_text": "clean-code-ml repo", "paragraph_index": 24}, {"url": "https://www.thoughtworks.com/insights/blog/test-driven-development-best-thing-has-happened-software-design", "anchor_text": "its benefits", "paragraph_index": 26}, {"url": "https://github.com/davified/clean-code-ml/blob/master/src/tests/test_model_metrics.py", "anchor_text": "example", "paragraph_index": 27}, {"url": "https://www.youtube.com/watch?v=K0hg6o9MWKQ", "anchor_text": "continuous integration (CI) pipeline", "paragraph_index": 28}, {"url": "https://rogerdudler.github.io/git-guide/", "anchor_text": "git commits", "paragraph_index": 29}, {"url": "https://nuclearsquid.com/writings/git-add/", "anchor_text": "git add -p", "paragraph_index": 32}, {"url": "https://www.thoughtworks.com/insights/articles/intelligent-enterprise-series-cd4ml", "anchor_text": "Continuous Delivery for Machine Learning (CD4ML)", "paragraph_index": 35}], "all_paragraphs": ["If you\u2019ve tried your hand at machine learning or data science, you know that code can get messy, quickly.", "Typically, code to train ML models is written in Jupyter notebooks and it\u2019s full of (i) side effects (e.g. print statements, pretty-printed dataframes, data visualisations) and (ii) glue code without any abstraction, modularisation and automated tests.", "While this may be fine for notebooks targeted at teaching people about the machine learning process, in real projects it\u2019s a recipe for unmaintainable mess. The lack of good coding habits makes code hard to understand and consequently, modifying code becomes painful and error-prone. This makes it increasingly difficult for data scientists and developers to evolve their ML solutions to adapt to business needs.", "Complexity is unavoidable, but it can be compartmentalized. In our homes, when we don\u2019t actively organise and rationalise where, why and how we place things, mess accumulates and what should have been a simple task (e.g. finding a key) becomes unnecessarily time-consuming and frustrating. The same applies to our codebase.", "Every time we write code in a way that adds another moving part, we increase complexity and add one more thing to hold in our head. While we cannot\u200a\u2014\u200aand should not try to\u200a\u2014\u200aescape from the essential complexity of a problem, we often add unnecessary accidental complexity and unnecessary cognitive load through bad coding practices.", "If we can keep complexity under control by applying the principles listed below, our brains are freed up to solve the actual problem we want to solve. With this as our backdrop, we\u2019ll share some techniques for identifying bad habits that add to complexity in code as well as habits that can help us manage complexity.", "\u201cOne of the most important techniques for managing software complexity is to design systems so that developers only need to face a small fraction of the overall complexity at any given time.\u201d (John Ousterhout)", "Unclean code adds to complexity by making code difficult to understand and modify. As a consequence, changing code to respond to business needs becomes increasingly difficult, and sometimes even impossible.", "One common bad habit (or \u201ccode smell\u201d) is leaving dead code in the code base. Dead code is code which is executed but whose result is never used in any other computation. Dead code is yet another unrelated thing that developers have to hold in our head when coding. For example, compare these two code samples:", "Clean code practices have been written about extensively in several languages, including Python. We\u2019ve adapted these clean code principles for the machine learning context, and you can find them in this clean-code-ml repo.", "Functions simplify our code by abstracting away complicated implementation details and replacing them with a simpler representation \u2014 its name.", "Imagine you\u2019re in a restaurant. You\u2019re given a menu. Instead of telling you the name of the dishes, this menu spells out the recipe for each dish. For example, one such dish is:", "It would have been easier for us if the menu hid all the steps in the recipe (i.e. the implementation details) and instead gave us the name of the dish (i.e. an interface, an abstraction of the dish). (Answer: that was lentil soup).", "To illustrate this point, here\u2019s a code sample from a notebook in Kaggle\u2019s Titanic competition before and after refactoring to a function.", "By abstracting away the complexity into functions, we made our code readable, testable and reusable.", "When we refactor to functions, our entire notebook can be simplified and made more elegant:", "Our mental overhead is now drastically reduced. We\u2019re no longer forced to process many many lines of implementation details to understand the entire flow. Instead, the abstractions (i.e. functions) abstract away the complexity and tell us what they do, and save us from having to spend mental effort figuring out how they do it.", "In interior design, there is a concept (the \u201cLaw of Flat Surfaces\u201d) which states that \u201cany flat surface within a home or office tends to accumulate clutter.\u201d Jupyter notebooks are the flat surface of the ML world.", "Sure, Jupyter notebooks are great for quick prototyping. But it\u2019s where we tend to put many things \u2014 glue code, print statements, glorified print statements (df.describe() or df.plot()), unused import statements and even stack traces ( \ud83d\ude48). Despite our best intentions, so long as the notebooks are there, mess tends to accumulate.", "Notebooks are useful because they give us fast feedback, and that\u2019s often what we want when we\u2019re given a new dataset and a new problem. However, the longer the notebooks become, the harder it is to get feedback on whether our changes are working.", "For instance, when we change a line of code, the only way to ensure that everything still works is to restart and re-run the entire notebook(s). We\u2019re forced to take on the complexity of the whole codebase even though we just want to work on one small part of it.", "In contrast, if we had extracted our code into functions and Python modules and if we have unit tests, the test runner will give us feedback on our changes in a matter of seconds, even when there are hundreds of functions.", "Hence, our goal is to move code out of notebooks into Python modules and packages as early as possible. That way they can rest within the safe confines of unit tests and domain boundaries. This will help to manage complexity by providing a structure for organizing code and tests logically and make it easier for us to evolve our ML solution.", "So, how do we move code out of Jupyter notebooks? Assuming you already have your code in a Jupyter notebook, you can follow this process:", "The details of each step in this process can be found in the clean-code-ml repo.", "So far, we\u2019ve talked about writing tests after the code is already written in the notebook. This recommendation isn\u2019t ideal, but it\u2019s still far better than not having unit tests.", "There is a myth that we cannot apply test-driven development (TDD) to machine learning projects. To us, this is simply untrue. In any machine learning project, most of the code is concerned with data transformations (e.g. data cleaning, feature engineering) and a small part of the codebase is actual machine learning. Such data transformations can be written as pure functions that return the same output for the same input, and as such, we can apply TDD and reap its benefits. For instance, TDD can help us break down big and complex data transformations into smaller bite-size problems that we can fit in our head, one at a time.", "As for testing that the actual machine learning part of the code works as we expect it to, we can write functional tests to assert that the metrics of the model (e.g. accuracy, precision, etc) are above our expected threshold. In other words, these tests assert that the model functions according to our expectations (hence the name, functional test). Here\u2019s an example of such a test:", "When we\u2019ve written these unit tests and functional tests, we can make them run on a continuous integration (CI) pipeline whenever a team member pushes code. This will allow us to catch errors as soon as they are introduced into our codebase, and not a few days or weeks later.", "When we don\u2019t make small and frequent git commits, we increase unnecessary mental overhead. While we\u2019re working on a problem, the changes for earlier ones are still shown as uncommitted. This distracts us visually and subconsciously; it makes it harder for us to focus on the current problem.", "For example, look at the first and second images below. Can you find out which function we\u2019re working on? Which image gave you an easier time?", "When we make small and frequent commits, we get the following benefits:", "So, how small of a commit is small enough? Try to commit when there is a single group of logically related changes and passing tests. One technique is to look out for the word \u201cand\u201d in our commit message, e.g. \u201cAdd exploratory data analysis and split sentences into tokens and refactor model training code\u201d. Each of these three changes could be split up into three logical commits. In this situation, you can use git add -p to stage code in smaller batches to be committed.", "We hope that this article has been helpful for you. These are habits which have helped us manage complexity in machine learning and data science projects, and they\u2019ve helped us remain agile and productive in our projects.", "If you have other thoughts and tips on this, please feel free to leave a comment :-)", "P.P.S. If you\u2019re interested in examples of how organisations can adopt continuous delivery practices to help machine learning practitioners and projects be agile, you can check out our article on Continuous Delivery for Machine Learning (CD4ML).", "P.P.P.S. Special thanks to Aditi, Chandni, Danilo, Gareth and Jonathan for the feedback on this article!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F5a16314c3737&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----5a16314c3737--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5a16314c3737--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://davified.medium.com/?source=post_page-----5a16314c3737--------------------------------", "anchor_text": ""}, {"url": "https://davified.medium.com/?source=post_page-----5a16314c3737--------------------------------", "anchor_text": "David"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1f3c1dbd7daa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&user=David&userId=1f3c1dbd7daa&source=post_page-1f3c1dbd7daa----5a16314c3737---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5a16314c3737&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5a16314c3737&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.pexels.com/@fox-58267", "anchor_text": "https://www.pexels.com/@fox-58267"}, {"url": "https://github.com/davified/clean-code-ml/blob/master/notebooks/titanic-original.ipynb", "anchor_text": "messy"}, {"url": "https://www.amazon.com/Philosophy-Software-Design-John-Ousterhout/dp/1732102201", "anchor_text": "John Ousterhout"}, {"url": "https://github.com/abiodunjames/Awesome-Clean-Code-Resources", "anchor_text": "several languages"}, {"url": "https://github.com/zedr/clean-code-python", "anchor_text": "Python"}, {"url": "https://github.com/davified/clean-code-ml", "anchor_text": "clean-code-ml repo"}, {"url": "https://en.wikipedia.org/wiki/Law_of_flat_surfaces", "anchor_text": "Law of Flat Surfaces"}, {"url": "https://github.com/davified/clean-code-ml/blob/master/docs/refactoring-process.md", "anchor_text": "clean-code-ml repo"}, {"url": "https://www.thoughtworks.com/insights/blog/test-driven-development-best-thing-has-happened-software-design", "anchor_text": "its benefits"}, {"url": "https://github.com/davified/clean-code-ml/blob/master/src/tests/test_model_metrics.py", "anchor_text": "example"}, {"url": "https://www.youtube.com/watch?v=K0hg6o9MWKQ", "anchor_text": "continuous integration (CI) pipeline"}, {"url": "https://rogerdudler.github.io/git-guide/", "anchor_text": "git commits"}, {"url": "https://blog.cleancoder.com/uncle-bob/2014/12/17/TheCyclesOfTDD.html", "anchor_text": "red-green-refactor"}, {"url": "https://www.facebook.com/notes/kent-beck/one-bite-at-a-time-partitioning-complexity/1716882961677894/", "anchor_text": "red-red-red-revert"}, {"url": "https://nuclearsquid.com/writings/git-add/", "anchor_text": "git add -p"}, {"url": "https://www.thoughtworks.com/insights/blog/coding-habits-data-scientists", "anchor_text": "https://www.thoughtworks.com/insights/blog/coding-habits-data-scientists"}, {"url": "https://www.thoughtworks.com/insights/articles/intelligent-enterprise-series-cd4ml", "anchor_text": "Continuous Delivery for Machine Learning (CD4ML)"}, {"url": "https://medium.com/tag/data-science?source=post_page-----5a16314c3737---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----5a16314c3737---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/software-development?source=post_page-----5a16314c3737---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/ai?source=post_page-----5a16314c3737---------------ai-----------------", "anchor_text": "AI"}, {"url": "https://medium.com/tag/ds-in-the-real-world?source=post_page-----5a16314c3737---------------ds_in_the_real_world-----------------", "anchor_text": "Ds In The Real World"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5a16314c3737&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&user=David&userId=1f3c1dbd7daa&source=-----5a16314c3737---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5a16314c3737&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&user=David&userId=1f3c1dbd7daa&source=-----5a16314c3737---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5a16314c3737&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5a16314c3737--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F5a16314c3737&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----5a16314c3737---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----5a16314c3737--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----5a16314c3737--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----5a16314c3737--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----5a16314c3737--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----5a16314c3737--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----5a16314c3737--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----5a16314c3737--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----5a16314c3737--------------------------------", "anchor_text": ""}, {"url": "https://davified.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://davified.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "David"}, {"url": "https://davified.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "238 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1f3c1dbd7daa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&user=David&userId=1f3c1dbd7daa&source=post_page-1f3c1dbd7daa--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F3148001d9627&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhabits-for-managing-complexity-in-data-science-codebases-5a16314c3737&newsletterV3=1f3c1dbd7daa&newsletterV3Id=3148001d9627&user=David&userId=1f3c1dbd7daa&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}