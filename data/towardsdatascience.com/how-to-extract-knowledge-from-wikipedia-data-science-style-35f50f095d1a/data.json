{"url": "https://towardsdatascience.com/how-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a", "time": 1683003709.512748, "path": "towardsdatascience.com/how-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a/", "webpage": {"metadata": {"title": "How to Extract Knowledge from Wikipedia, Data Science Style | by Michael Li | Towards Data Science", "h1": "How to Extract Knowledge from Wikipedia, Data Science Style", "description": "As Data Scientists, people tend to think what they do is developing and experimenting with sophisticated and complicated algorithms, and produce state of the art results. This is largely true. It is\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/SPARQL", "anchor_text": "SPARQL", "paragraph_index": 1}, {"url": "https://en.wiktionary.org/wiki/sparkle", "anchor_text": "sparkle", "paragraph_index": 2}, {"url": "https://en.wikipedia.org/wiki/Recursive_acronym", "anchor_text": "recursive acronym", "paragraph_index": 2}, {"url": "https://en.wikipedia.org/wiki/SPARQL#cite_note-2", "anchor_text": "[2]", "paragraph_index": 2}, {"url": "https://en.wikipedia.org/wiki/RDF_query_language", "anchor_text": "RDF query language", "paragraph_index": 2}, {"url": "https://en.wikipedia.org/wiki/Semantic_Query", "anchor_text": "semantic", "paragraph_index": 2}, {"url": "https://en.wikipedia.org/wiki/Query_language", "anchor_text": "query language", "paragraph_index": 2}, {"url": "https://en.wikipedia.org/wiki/Database", "anchor_text": "databases", "paragraph_index": 2}, {"url": "https://en.wikipedia.org/wiki/Resource_Description_Framework", "anchor_text": "Resource Description Framework (RDF)", "paragraph_index": 2}, {"url": "https://w.wiki/4EU", "anchor_text": "WikiData Query Service", "paragraph_index": 6}, {"url": "https://query.wikidata.org", "anchor_text": "Wikidata Query Service", "paragraph_index": 10}, {"url": "https://www.wikidata.org/wiki/Q80", "anchor_text": "Tim Berners-Lee", "paragraph_index": 14}, {"url": "https://en.wikipedia.org/wiki/DBpedia", "anchor_text": "DBpedia", "paragraph_index": 28}, {"url": "https://medium.com/u/72c98619a048?source=post_page-----dbe7106145f5----------------------", "anchor_text": "Michael Li", "paragraph_index": 29}, {"url": "https://twitter.com/lymenlee", "anchor_text": "@lymenlee", "paragraph_index": 29}, {"url": "https://wayofnumbers.com/", "anchor_text": "wayofnumbers.com", "paragraph_index": 29}, {"url": "https://www.linkedin.com/in/michael-li-dfw", "anchor_text": "https://www.linkedin.com/in/michael-li-dfw", "paragraph_index": 31}], "all_paragraphs": ["As Data Scientists, people tend to think what they do is developing and experimenting with sophisticated and complicated algorithms, and produce state of the art results. This is largely true. It is what a data scientist is mostly proud of and the most innovative and rewarding part. But what people usually don\u2019t see is the sweat they go through to gather, process, and massage the data that leads to the great results. That\u2019s why you can see SQL appears on most of the data scientist position requirements.", "There is another query language that could prove very useful in acquiring data from multiple sources and databases, Wikipedia the biggest among them. The query language is called SPARQL. According to Wikipedia:", "SPARQL (pronounced \u201csparkle\u201d, a recursive acronym[2] for SPARQL Protocol and RDF Query Language) is an RDF query language \u2014 that is, a semantic query language for databases \u2014 able to retrieve and manipulate data stored in Resource Description Framework (RDF) format", "Well, this is not a very good definition. It hardly tells you what it can do. To translate it into human-readable language:", "SPARQL is a query language similar to SQL in syntax but works on a knowledge graph database like Wikipedia, that allows you to extract knowledge and information by defining a series of filters and constraints.", "If this is still too abstract to you, look at the image below:", "It is a timeline of awarded chemistry Nobel prizes, generated by the WikiData Query Service website, using the code below:", "Anyone familiar with SQL will find the above code quite intuitive. I\u2019ll use another example to explain basically how to formulate similar queries to achieve the results you interested in.", "SPARQL works on multiple knowledge graph databases. To know what knowledge graph is, let\u2019s start with something everyone is familiar with: Wikipedia. Wikipedia is the go-to place for most people when they want to research a topic/subject. If you go to Python creator Guido van Rossum\u2019s page, you\u2019ll see a detailed page with all kinds of good information.", "The problem with this page is it\u2019s not organized. You can search on keywords, but you cannot easily find out the relationship between the information nodes. That\u2019s where the knowledge graph comes into play. The red rectangle on the above page spells \u201cWikidata Item\u201d, click it will bring you to the knowledge graph view of the same page:", "Here we can see all information about Guido is well organized into categories, each category has multiple items. Use SPARQL, you can easily query this information. To do this, Wikipedia provides another page, a user-friendly query service called Wikidata Query Service:", "This is where we can experiment with SPARQL. On the WikiData page, we observed that Guido is a programmer (obviously!), now what if we want to know other programmers that have an entry on Wikipedia? Let\u2019s see the SPARQL code:", "Here we defined a ?person as the subject of interest, this is also what will appear as a column in our query results. Then we specify some constraints with WHERE . The constraints are wdt:P106 need to be wd:Q5482740. What? You say. Let me explain it in more detail. wdt is a prefix of a \u2018predicate\u2019 or \u2018attribute\u2019 of the subject while wd is the prefix of a value(object in SPARQL terms, but that\u2019s not important) of the attribute. wdt: means I am gonna specify an attribute of the subject here, and wd: means I will specify what the value of this attribute is. So what is P106 and Q5482740 ? These are just a code for the specific attribute and value. P106 stands for \u2018occupation\u2019 and Q5482740 stands for \u2018programmer\u2019. This line of code means, I want the ?person subject to have an attribute of \u2018occupation\u2019 of \u2018programmer\u2019. Not that scary anymore, right? You can find these codes easily on the WikiData page mentioned above.", "Run the query and you\u2019ll get the following results:", "We got a bunch of person items with different wd:value . If you look closer at the value, they are actually the code for a different person. For example, the first one wd:Q80 is Tim Berners-Lee, the inventor of WWW. This is not intuitive, we want to be able to directly see the names. To do that, we add a WikiData \u2018label service\u2019 that helps us translate the code to name, like so:", "Similar syntax, we want the person to have a \u2018label\u2019 attribute, and we define a personLabel value variable to hold these values so we can display them in the query results. Also, we added the personLabel into our SELECT phrase so it will be displayed. Please be noted that I also added a FILTER below to only display the French language label, otherwise it will show multiple language labels for one person, which is not what we want:", "From the above results, we can see that we have some 790 results. This is way too many. Let\u2019s narrow them down to the ones that are \u2018somebody\u2019 in the industry. Someone that has an attribute of \u2018notable work\u2019:", "Again, wdt:P800 means \u2018notable work\u2019 attribute, everything else is similar. We then get the following results:", "Now we have only 175 results, with each person\u2019s notable work also listed. But wait, why we have five Richard Stallman? Turns out, Richard has more than one notable work, thus listed multiple times in the results. Let\u2019s fix this by grouping all the notable work into one attribute:", "Here \u2018GROUP BY\u2019 is used. Also, GROUP_CONCAT function is used to concatenate multiple notableworkLabel into a new column works (I will not explain how these functions work, just want to quickly show you what SPARQL can do. Please feel free to Google if you want to know more, there are plenty of tutorial articles and videos out there):", "Now we have a 90 results list, with all the \u2018who-is-who\u2019 in the software engineering world. But SPARQL can do more. Let\u2019s add some faces to the names:", "The same pattern, we just added an OPTIONAL keyword prior since we don\u2019t want to exclude someone if he doesn\u2019t have an image in his profile. We also switch the view into \u2018Image Grid\u2019 :", "Wow! This is much better. I saw quite some familiar faces! Maybe you wonder where are these guys located? Let\u2019s find out:", "You can decipher the code above yourself maybe. It basically says I want this person to have an attribute of country, put into a variable country, then find out the coordinates of the country and put into a variable cood. With the coordinates, we can activate the \u2018map\u2019 view:", "We can see we have a lot of them in the US, some in Europe and others scattered around other parts of the world.", "With a few lines of codes, we figured out the big influencers in the software industry, what they are known of, where they are and how they look. As you can see the potential here is limitless.", "You can click the \u2018Example\u2019 button on the WikiData page to find out more fun and interesting examples you can do with it.", "As an assignment for this article, can you figure out how to add the \u2018date of birth\u2019 attribute and generate a timeline graph like the one at the beginning of this article?", "In this article, we used WikiData as a knowledge graph example to introduce SPARQL query language. There are other knowledge graphs out there like DBpedia, etc. This article is by no means a comprehensive tutorial. I just want to introduce the language to more people, so knowledge and information extraction can be done a bit more efficiently.", "Found this article useful? Follow me (Michael Li) on Medium or you can find me on Twitter @lymenlee or my blog site wayofnumbers.com. You could also check out my most popular articles below!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist | Blogger | Product Manager | Developer | Pentester | https://www.linkedin.com/in/michael-li-dfw"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F35f50f095d1a&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----35f50f095d1a--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----35f50f095d1a--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://lymenlee.medium.com/?source=post_page-----35f50f095d1a--------------------------------", "anchor_text": ""}, {"url": "https://lymenlee.medium.com/?source=post_page-----35f50f095d1a--------------------------------", "anchor_text": "Michael Li"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F72c98619a048&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&user=Michael+Li&userId=72c98619a048&source=post_page-72c98619a048----35f50f095d1a---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F35f50f095d1a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F35f50f095d1a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://en.wikipedia.org/wiki/SPARQL", "anchor_text": "SPARQL"}, {"url": "https://en.wiktionary.org/wiki/sparkle", "anchor_text": "sparkle"}, {"url": "https://en.wikipedia.org/wiki/Recursive_acronym", "anchor_text": "recursive acronym"}, {"url": "https://en.wikipedia.org/wiki/SPARQL#cite_note-2", "anchor_text": "[2]"}, {"url": "https://en.wikipedia.org/wiki/RDF_query_language", "anchor_text": "RDF query language"}, {"url": "https://en.wikipedia.org/wiki/Semantic_Query", "anchor_text": "semantic"}, {"url": "https://en.wikipedia.org/wiki/Query_language", "anchor_text": "query language"}, {"url": "https://en.wikipedia.org/wiki/Database", "anchor_text": "databases"}, {"url": "https://en.wikipedia.org/wiki/Resource_Description_Framework", "anchor_text": "Resource Description Framework (RDF)"}, {"url": "https://w.wiki/4EU", "anchor_text": "WikiData Query Service"}, {"url": "https://query.wikidata.org", "anchor_text": "Wikidata Query Service"}, {"url": "https://www.wikidata.org/wiki/Q80", "anchor_text": "Tim Berners-Lee"}, {"url": "https://en.wikipedia.org/wiki/DBpedia", "anchor_text": "DBpedia"}, {"url": "https://medium.com/u/72c98619a048?source=post_page-----dbe7106145f5----------------------", "anchor_text": "Michael Li"}, {"url": "https://twitter.com/lymenlee", "anchor_text": "@lymenlee"}, {"url": "https://wayofnumbers.com/", "anchor_text": "wayofnumbers.com"}, {"url": "https://towardsdatascience.com/this-is-cs50-a-pleasant-way-to-kick-off-your-data-science-education-d6075a6e761a", "anchor_text": "\u201cThis is CS50\u201d: A Pleasant Way to Kick Off Your Data Science EducationWhy CS50 is especially good to solidify your software engineering foundationtowardsdatascience.com"}, {"url": "https://towardsdatascience.com/two-sides-of-the-same-coin-fast-ai-vs-deeplearning-ai-b67e9ec32133", "anchor_text": "Two Sides of the Same Coin: Jeremy Howard\u2019s fast.ai vs Andrew Ng\u2019s deeplearning.aiHow Not to \u2018Overfit\u2019 Your AI Learning by Taking Both fast.ai and deeplearning.ai coursestowardsdatascience.com"}, {"url": "https://towardsdatascience.com/what-you-need-to-know-about-netflixs-jupyter-killer-polynote-dbe7106145f5", "anchor_text": "What You Need to Know About Netflix\u2019s \u2018Jupyter Killer\u2019: Polynote \ud83d\udcd6It\u2019s about time Jupyter Notebook has its worthy competitortowardsdatascience.com"}, {"url": "https://medium.com/tag/sparql?source=post_page-----35f50f095d1a---------------sparql-----------------", "anchor_text": "Sparql"}, {"url": "https://medium.com/tag/data-science?source=post_page-----35f50f095d1a---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/wikipedia?source=post_page-----35f50f095d1a---------------wikipedia-----------------", "anchor_text": "Wikipedia"}, {"url": "https://medium.com/tag/wikidata?source=post_page-----35f50f095d1a---------------wikidata-----------------", "anchor_text": "Wikidata"}, {"url": "https://medium.com/tag/programming?source=post_page-----35f50f095d1a---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F35f50f095d1a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&user=Michael+Li&userId=72c98619a048&source=-----35f50f095d1a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F35f50f095d1a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&user=Michael+Li&userId=72c98619a048&source=-----35f50f095d1a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F35f50f095d1a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----35f50f095d1a--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F35f50f095d1a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----35f50f095d1a---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----35f50f095d1a--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----35f50f095d1a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----35f50f095d1a--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----35f50f095d1a--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----35f50f095d1a--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----35f50f095d1a--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----35f50f095d1a--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----35f50f095d1a--------------------------------", "anchor_text": ""}, {"url": "https://lymenlee.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://lymenlee.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Michael Li"}, {"url": "https://lymenlee.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.5K Followers"}, {"url": "https://www.linkedin.com/in/michael-li-dfw", "anchor_text": "https://www.linkedin.com/in/michael-li-dfw"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F72c98619a048&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&user=Michael+Li&userId=72c98619a048&source=post_page-72c98619a048--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F95661b899f04&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-extract-knowledge-from-wikipedia-data-science-style-35f50f095d1a&newsletterV3=72c98619a048&newsletterV3Id=95661b899f04&user=Michael+Li&userId=72c98619a048&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}