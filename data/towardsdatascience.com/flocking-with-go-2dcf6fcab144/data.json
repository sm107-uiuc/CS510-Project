{"url": "https://towardsdatascience.com/flocking-with-go-2dcf6fcab144", "time": 1682993204.748982, "path": "towardsdatascience.com/flocking-with-go-2dcf6fcab144/", "webpage": {"metadata": {"title": "Flocking with Go. How to create a flocking simulation on\u2026 | by Sau Sheong | Towards Data Science", "h1": "Flocking with Go", "description": "I have been writing flocking simulations for a long time. I played around with it with Java, but the earliest one I still have a record of was with JRuby and Swing called Utopia. I wrote one using\u2026"}, "outgoing_paragraph_urls": [{"url": "https://youtu.be/x44s8TTWm5E", "anchor_text": "Utopia", "paragraph_index": 0}, {"url": "http://shoesrb.com/", "anchor_text": "Shoes", "paragraph_index": 0}, {"url": "http://shop.oreilly.com/product/0636920022626.do", "anchor_text": "Exploring Everyday Things with R and Ruby", "paragraph_index": 0}, {"url": "https://github.com/gosu/gosu", "anchor_text": "Gosu", "paragraph_index": 0}, {"url": "https://github.com/sausheong/utopia", "anchor_text": "here", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/Flocking_(behavior)", "anchor_text": "Flocking", "paragraph_index": 1}, {"url": "http://www.red3d.com/cwr/boids/", "anchor_text": "boids", "paragraph_index": 2}, {"url": "https://github.com/electron/electron", "anchor_text": "Electron", "paragraph_index": 5}, {"url": "https://towardsdatascience.com/a-gentle-introduction-to-genetic-algorithms-c5bc15827e2d", "anchor_text": "A gentle introduction to genetic algorithms", "paragraph_index": 6}, {"url": "https://www.iterm2.com/", "anchor_text": "iTerm2", "paragraph_index": 6}, {"url": "http://mathinsight.org/vector_introduction", "anchor_text": "vector", "paragraph_index": 9}, {"url": "https://en.wikipedia.org/wiki/ANSI_escape_code", "anchor_text": "ANSI escape sequences", "paragraph_index": 27}, {"url": "https://www.iterm2.com/documentation-images.html", "anchor_text": "iTerm2", "paragraph_index": 29}, {"url": "http://github.com/sausheong/goids", "anchor_text": "http://github.com/sausheong/goids", "paragraph_index": 31}], "all_paragraphs": ["I have been writing flocking simulations for a long time. I played around with it with Java, but the earliest one I still have a record of was with JRuby and Swing called Utopia. I wrote one using Shoes and that was the one in my Exploring Everyday Things with R and Ruby book. Sometime after, (I was unhappy with Shoes in general), I re-wrote it again using Gosu, a 2D game development library for Ruby and C++. This version can be found here.", "Flocking simulations are basically a software program that simulates the flocking behavior of birds. This flocking behavior is very somewhat similar to the swarming behavior of insects or the shoaling behavior of fish. It\u2019s considered an emergent behavior \u2014 a behavior that arises from individuals following simple rules and doesn\u2019t involve any central coordination. Such behavior, especially seen in murmurations of starlings or swarms of barracuda can be a breath-taking phenomenon.", "Flocking was first simulated in software by Craig Reynolds, a programmer who developed a software program called boids and published a paper on the topic in 1987 in the proceedings of the ACM SIGGRAPH conference. Since then, there has been a number of advancements in simulating flocking but nonetheless the basic idea still remains pretty simple.", "Boids itself used three basic rules to describe how an individual boid moves around:", "These rules have been expanded and in some cases, more rules have been added but the fundamental idea is that a localised reaction by an individual following a few simple rules can result in complex, unexpected behavior.", "While I have been programming in Go seriously for a few years (it\u2019s my primary programming language now), I haven\u2019t been able to figure out a good way to write a flocking simulation with Go all this time. The biggest problem is that Go is mostly a backend programming language and doesn\u2019t really have a GUI toolkit. While there were a few attempts, including bindings to GTK and QT, none of them fit what I wanted. If you\u2019re looking for one for a desktop application, you are probably better off using Electron and building a web application in Go to back that up.", "That is, until I was fiddling around with genetic algorithms in my post A gentle introduction to genetic algorithms. In that post, I was trying to display an image to the terminal, in my case, the excellent iTerm2. There\u2019s where I stumbled on this hack on iTerm2 that allows me to display images on the screen.", "Naturally if I can display one image, I can always display multiple images. And if I can display multiple images, I can also display them overlaying each other, one after another. And if I can display them fast enough \u2026", "I call them goids, of course. A Goid is a simple struct with information on its position, velocity and color.", "Position and color is pretty easy to understand. Velocity here is not simply the speed the goid is moving but also direction it is moving. In this case, Vx and Vy is how far away the goid is going to be away the next loop, and also directionally where it\u2019s going to be. Mathematically speaking, while X and Y is the scalar position (it tells you how far away from origin on a 2D plane), Vx and Vyis a vector.", "Creating goids is relatively simple. Each goid must be within the window and its starting velocity is smaller than its size.", "The bulk of the work is in the move function.", "Flocking simulations have advanced considerably since 30 years ago, but for this simple simulation I used the 3 classic rules from boids. All 3 rules require the goid to know who its neighbours are so it makes sense to figure that out first.", "First, we clone the entire population of goids, then we use sort.SliceStable to sort the cloned array by distance from the goid in question. Finding the distance is just a matter of using the Pythagoras theorem.", "This gives us a list of neighbouring goids, sorted by distances away. Let\u2019s look at the first rule.", "This is the personal space rule. Let\u2019s say you\u2019re in a train with a number of other commuters, and it stops at a station where there are a number of people getting in. As they come in, they will fill up the space, and there will be some who end up too close to you. What would you do? You\u2019re going to move a bit away from them but not too close to others, and finally settling down to a comfortable distance from everyone else. This is that rule.", "We\u2019re only interested in a limited number of neighbouring goids, which is specified by the parameter numNeighbours. The neighbouring goids must also be within the parameter separationFactor (not all neighbouring goids are close enough for it to be uncomfortable). Once these goids are in that space, we move a bit away from each one of them. Then we update the velocity to that distance away, and then move the goid by that velocity.", "This is the peer pressure rule. Peer pressure is direct influence on people by their peers to change their behaviour to conform to their of the group. You might be familiar with peer pressure \u2014 when you see your neighbours with their shiny new 4K TV or iPhone X you might be tempted to get one for yourself as well. There are plenty of other examples of peer pressure in our lives that it doesn\u2019t need further explanation, and this is exactly what the alignment rule is.", "As before, we are only interested in a limited number of neighbouring goids specified by numNeighbours. However instead of affecting the position of the goid, this rule changes the velocity of the goid and we add up the velocity of all the neighbouring goids, and divide it by the number of neighbours. The final value modifies the velocity instead of replacing it altogether, while the position of the goid is modified by the new value.", "This is the phalanx rule. The Greek phalanx was a rectangular, close-rank infantry formation that marched and fought as one entity. It was one of the most effective and enduring military formations in ancient warfare. Its effectiveness lies in the tight formation of impenetrable shields and spears that slowly advanced forward, breaking through enemy ranks. The Romans later took the same idea to create the three-line Roman legion that was used to conquer the known world.", "As with the other rules, we are only interested in the neighbouring goids. We take the average position of all these neighbours (adding up the positions of all the neighbours and dividing it by the number of neighbours), and subtract the goid\u2019s position from it. This value is then divided by a coherenceFactor that determines how much the goids want to cohere with its neighbours. If the coherenceFactor is too high, the goids will end up not moving, if it\u2019s too low it will end up sticking too closely with each other, forming clusters of tightly-knit goids.", "Now that we have the rules we can run simulation, but since our view is limited to the parameters windowWidth and windowHeight, once the goids wander off the screen we can\u2019t see it anymore. Which means after a while, it\u2019s just an empty screen. To stop that from happening, if a goid wanders off the screen, we magically transport it to the other side of the window.", "The final piece of the puzzle is drawing the goids themselves.", "Each frame is an image of width windowWidth and height windowHeight. WIthin this frame, we draw each goid as a circle, and then we draw a line to represent the goid\u2019s tail. This line goes against the direction of where the goid is going, so we subtract the position of the goid from its velocity.", "We have all the functions needed now, so let\u2019s put it all together in the main function.", "There are a few more functions that you've not seen before. What are clearScreen, hideCursor, showCursor and printImage? These are the functions that actually display the simulation.", "Let\u2019s look at clearScreen, hideCursor and showCursor.", "So what\u2019s the strange escape sequences we used? These are ANSI escape sequences used to control the various options on text terminals. They are mostly a relic of the past but still widely implemented in terminal emulators such as iTerm2. All sequences start with ESC (27 or in hex 0x1B), followed by a second byte that provides the control option. In particular, ESC followed by [indicates that the next byte is a Control Sequence Introducer (CSI), which is a set of useful sequences. For example, ?25h shows the cursor and ?25l hides the cursor. And as you would have probably guessed, 2J clears the entire screen and moves the cursor to the upper left of the screen.", "Let\u2019s look at how we print the image to the screen.", "This is an interesting hack that is only found (as far as I know) in iTerm2. that allows you to take the base64 representation of a binary image and prints it inline on the terminal. The escape sequence 2;0H at the start of the line is a CSI that moves the cursor to row 2, column 0, where we want to print the image.", "This is how it looks when I run it.", "All the code found here can get found at http://github.com/sausheong/goids.", "Flocking simulations have been done to the death, but I enjoy writing it. There is a certain zen in seeing how the little guys move around not as individuals but as a swarm that has its own mind. I started doing more simulations after learning about flocking and writing flocking simulations and I\u2019ll probably be writing more in the future.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F2dcf6fcab144&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://me.dm/@sausheong", "anchor_text": "Mastodon"}, {"url": "https://towardsdatascience.com/?source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://sausheong.com/?source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": ""}, {"url": "https://sausheong.com/?source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": "Sau Sheong"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa358058b2410&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&user=Sau+Sheong&userId=a358058b2410&source=post_page-a358058b2410----2dcf6fcab144---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2dcf6fcab144&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2dcf6fcab144&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://youtu.be/x44s8TTWm5E", "anchor_text": "Utopia"}, {"url": "http://shoesrb.com/", "anchor_text": "Shoes"}, {"url": "http://shop.oreilly.com/product/0636920022626.do", "anchor_text": "Exploring Everyday Things with R and Ruby"}, {"url": "https://github.com/gosu/gosu", "anchor_text": "Gosu"}, {"url": "https://github.com/sausheong/utopia", "anchor_text": "here"}, {"url": "https://en.wikipedia.org/wiki/Flocking_(behavior)", "anchor_text": "Flocking"}, {"url": "https://unsplash.com/@tumbao1949?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "James Wainscoat"}, {"url": "https://unsplash.com/s/photos/flock?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "http://www.red3d.com/cwr/boids/", "anchor_text": "boids"}, {"url": "https://github.com/electron/electron", "anchor_text": "Electron"}, {"url": "https://towardsdatascience.com/a-gentle-introduction-to-genetic-algorithms-c5bc15827e2d", "anchor_text": "A gentle introduction to genetic algorithms"}, {"url": "https://www.iterm2.com/", "anchor_text": "iTerm2"}, {"url": "https://www.youtube.com/watch?v=Un-BdBSOGKY", "anchor_text": "https://www.youtube.com/watch?v=Un-BdBSOGKY"}, {"url": "http://mathinsight.org/vector_introduction", "anchor_text": "vector"}, {"url": "https://en.wikipedia.org/wiki/ANSI_escape_code", "anchor_text": "ANSI escape sequences"}, {"url": "https://www.iterm2.com/documentation-images.html", "anchor_text": "iTerm2"}, {"url": "http://github.com/sausheong/goids", "anchor_text": "http://github.com/sausheong/goids"}, {"url": "https://medium.com/tag/golang?source=post_page-----2dcf6fcab144---------------golang-----------------", "anchor_text": "Golang"}, {"url": "https://medium.com/tag/go?source=post_page-----2dcf6fcab144---------------go-----------------", "anchor_text": "Go"}, {"url": "https://medium.com/tag/simulation?source=post_page-----2dcf6fcab144---------------simulation-----------------", "anchor_text": "Simulation"}, {"url": "https://medium.com/tag/boid?source=post_page-----2dcf6fcab144---------------boid-----------------", "anchor_text": "Boid"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2dcf6fcab144&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&user=Sau+Sheong&userId=a358058b2410&source=-----2dcf6fcab144---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2dcf6fcab144&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&user=Sau+Sheong&userId=a358058b2410&source=-----2dcf6fcab144---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2dcf6fcab144&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F2dcf6fcab144&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----2dcf6fcab144---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----2dcf6fcab144--------------------------------", "anchor_text": ""}, {"url": "https://sausheong.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://sausheong.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sau Sheong"}, {"url": "https://sausheong.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.6K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa358058b2410&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&user=Sau+Sheong&userId=a358058b2410&source=post_page-a358058b2410--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fb7ba9640486a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fflocking-with-go-2dcf6fcab144&newsletterV3=a358058b2410&newsletterV3Id=b7ba9640486a&user=Sau+Sheong&userId=a358058b2410&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://www.manning.com/books/go-web-programming", "anchor_text": "Go Web Programming2016"}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}