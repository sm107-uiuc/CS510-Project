{"url": "https://towardsdatascience.com/static-code-analysis-for-python-bdce10b8d287", "time": 1683012515.502912, "path": "towardsdatascience.com/static-code-analysis-for-python-bdce10b8d287/", "webpage": {"metadata": {"title": "Static Code Analysis for Python. Type and style checking, potential\u2026 | by Martin Thoma | Towards Data Science", "h1": "Static Code Analysis for Python", "description": "Static code analysis looks at the code without executing it. It is usually extremely fast to execute, requires little effort to add to your workflow, and can uncover common mistakes. The only\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Cyclomatic_complexity", "anchor_text": "cyclomatic complexity", "paragraph_index": 2}, {"url": "https://books.google.de/books?id=vtNWAAAAMAAJ&pg=PA3&redir_esc=y", "anchor_text": "A Complexity Measure", "paragraph_index": 2}, {"url": "https://pypi.org/project/radon/", "anchor_text": "radon", "paragraph_index": 4}, {"url": "https://github.com/scipy/scipy/blob/master/scipy/sparse/linalg/eigen/lobpcg/lobpcg.py#L127", "anchor_text": "The most complex part of scipy", "paragraph_index": 5}, {"url": "https://stackoverflow.com/a/25011492/562769", "anchor_text": "source", "paragraph_index": 7}, {"url": "https://www.goodreads.com/quotes/835238-indeed-the-ratio-of-time-spent-reading-versus-writing-is", "anchor_text": "source", "paragraph_index": 8}, {"url": "https://www.python.org/dev/peps/pep-0008/", "anchor_text": "PEP-8", "paragraph_index": 9}, {"url": "https://www.python.org/dev/peps/pep-0008/#maximum-line-length", "anchor_text": "maximum line length of 79", "paragraph_index": 9}, {"url": "https://martin-thoma.com/python-style-guide/#maximum-line-length", "anchor_text": "reasons", "paragraph_index": 9}, {"url": "https://pypi.org/project/black/", "anchor_text": "black", "paragraph_index": 10}, {"url": "https://github.com/google/yapf", "anchor_text": "yapf", "paragraph_index": 11}, {"url": "https://www.python.org/dev/peps/pep-0257/", "anchor_text": "PEP-257", "paragraph_index": 12}, {"url": "https://medium.com/dailyjs/why-you-should-always-use-a-linter-and-or-pretty-formatter-bb5471115a76", "anchor_text": "You should always use a linter", "paragraph_index": 15}, {"url": "https://medium.com/u/7d09bba59347?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": "Alberto Gimeno", "paragraph_index": 15}, {"url": "https://pypi.org/project/flake8/", "anchor_text": "Flake8", "paragraph_index": 16}, {"url": "https://incolumitas.com/data/thesis.pdf", "anchor_text": "Typosquatting in Programming Language Package Managers", "paragraph_index": 17}, {"url": "https://incolumitas.com/2016/06/08/typosquatting-package-managers/", "anchor_text": "blog post", "paragraph_index": 17}, {"url": "https://arxiv.org/pdf/2003.03471.pdf", "anchor_text": "interesting follow-up", "paragraph_index": 17}, {"url": "https://is.muni.cz/th/y41ft/thesis_final_electronic.pdf", "anchor_text": "Attacks on Package Managers", "paragraph_index": 17}, {"url": "https://mail.python.org/pipermail/security-announce/2017-September/000000.html", "anchor_text": "2017", "paragraph_index": 17}, {"url": "https://www.bleepingcomputer.com/news/security/ten-malicious-libraries-found-on-pypi-python-package-index/", "anchor_text": "2017", "paragraph_index": 17}, {"url": "https://nakedsecurity.sophos.com/2017/09/19/pypi-python-repository-hit-by-typosquatting-sneak-attack/", "anchor_text": "2017", "paragraph_index": 17}, {"url": "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/typosquatting-in-python-repositories/", "anchor_text": "2019", "paragraph_index": 17}, {"url": "https://snyk.io/blog/malicious-packages-found-to-be-typo-squatting-in-pypi/", "anchor_text": "2019", "paragraph_index": 17}, {"url": "https://sysdig.com/blog/malicious-python-libraries-jeilyfish-dateutil/", "anchor_text": "2019", "paragraph_index": 17}, {"url": "https://github.com/jspeed-meyers/pypi-scan", "anchor_text": "pypi-scan", "paragraph_index": 17}, {"url": "https://pypi.org/project/pypi-parker/", "anchor_text": "pypi-parker", "paragraph_index": 17}, {"url": "https://medium.com/u/af80ede3ec71?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": "William Bengtsson", "paragraph_index": 17}, {"url": "https://pypi.org/project/prospector/", "anchor_text": "prospector", "paragraph_index": 19}, {"url": "https://pypi.org/project/flake8-breakpoint/", "anchor_text": "flake8-breakpoint", "paragraph_index": 21}, {"url": "https://pypi.org/project/flake8-print/", "anchor_text": "flake8-print", "paragraph_index": 21}, {"url": "https://pypi.org/project/flake8-debugger/", "anchor_text": "flake8-debugger", "paragraph_index": 21}, {"url": "https://pypi.org/project/flake8-fixme/", "anchor_text": "flake8-fixme", "paragraph_index": 21}, {"url": "https://pypi.org/project/flake8-todo/", "anchor_text": "flake8-todo", "paragraph_index": 21}, {"url": "https://pypi.org/project/pylint/", "anchor_text": "pylint", "paragraph_index": 22}, {"url": "https://medium.com/analytics-vidhya/type-annotations-in-python-3-8-3b401384403d", "anchor_text": "type annotations work in Python", "paragraph_index": 32}, {"url": "https://levelup.gitconnected.com/ci-pipelines-for-python-projects-9ac2830d2e38", "anchor_text": "CI pipelines", "paragraph_index": 32}, {"url": "https://github.com/regebro/pyroma", "anchor_text": "pyroma", "paragraph_index": 34}, {"url": "https://martinthoma.medium.com/membership", "anchor_text": "https://martinthoma.medium.com/membership", "paragraph_index": 39}], "all_paragraphs": ["Static code analysis looks at the code without executing it. It is usually extremely fast to execute, requires little effort to add to your workflow, and can uncover common mistakes. The only downside is that it is not tailored towards your code.", "In this article, you will learn how to perform various types of static code analysis in Python. While the article focuses on Python, the types of analysis can be done in any programming language.", "One way to measure code complexity is the cyclomatic complexity, also called McCabe complexity as defined in A Complexity Measure:", "where N is the number of nodes in the control flow graph, E is the number of edges and P is the number of condition-nodes (if-statements, while/for loops).", "You can calculate it in Python with radon:", "The first letter shows the type of block (F for function, C for class). Then radon gives the line number, the name of the class/function, a grade (A, B, C, D, E, or F), and the actual complexity as a number. Typically, a complexity below 10 is ok. The most complex part of scipy has a complexity of 61.", "Besides radon, there are various other packages and Flake8 plugins:", "You might have heard the words \u201cpythonic code\u201d. It means to not only write correct Python code but use the languages features how they are intended to be used (source). It is for sure an opinionated term, but there are a lot of plugins that show you what a large part of the community considers to be pythonic.", "Writing code in a similar style to other Python projects is valuable as people will have an easier time reading the code. This is important as we read software more often than we write it (source).", "Let\u2019s start with PEP-8: It\u2019s a style guide written and accepted by the Python community in 2001. So it\u2019s been around for a while and most people want to follow most of it. The main part which I\u2019ve seen most people not to agree with is the maximum line length of 79. I\u2019m always recommending to follow this advice in 95% of your codebase. I gave reasons for that.", "For pure code formatting, you should use an auto formatter. I grew into liking black because it does NOT allow customization. Code formatted by black always looks the same. As you cannot customize it, you don\u2019t need to discuss it. It just solves the issue of conflicting styles and arguments around it. Black is maintained by the Python Software Foundation and likely the most commonly adopted auto formatter for Python.", "yapf by Google is another auto formatter.", "For docstrings, there is PEP-257. All of those rules are widely accepted in the community, but they still allow a wide variety of docstrings. There are three commonly used styles:", "I love the NumpyDoc format as it is super easy to read even when you just have it inside a text editor. Numpydoc is also well-supported by editors.", "Here you can see the three in comparison:", "You should always use a linter, as Alberto Gimeno pointed out. They can check your style, but more importantly, show potential errors.", "Flake8 is a wrapper around PyFlakes, pycodestyle, and a McCabe script. It is the most commonly used tool for linting in Python. Flake8 is awesome because there are so many plugins for it. I found 223 packages with the string \u201cflake8\u201d within the name and looked at many of them. I\u2019ve also looked at packages with the trove classifier Framework :: Flake8 and found 143 packages of which 122 started with flake8- . Only 21 packages had the Flake8 Framework trove classifier but didn\u2019t start with flake8- and only two of them looked interesting.", "Side note: Typo squatting is an issue every open package repository has to fight with (Bachelor\u2019s Thesis: Typosquatting in Programming Language Package Managers which has a blog post and an interesting follow-up, Bachelor\u2019s Thesis: Attacks on Package Managers). There are examples in Python for it causing harm (2017, 2017, 2017, 2019, 2019, 2019). There is pypi-scan for finding examples and pypi-parker to prevent common typos to be used. William Bengtsson also did something similar to harden the Python community against this thread. See his article below for more information about his project. Package parkinginflates the number of packages on PyPI and I filtered them by looking for the summary \u201cA package to prevent exploit\u201d.", "Here are some of the interesting flake8 plugins:", "An alternative to parts of Flake8 prospector. It couples tools, but it is way less commonly used and thus not as flexible as Flake8.", "It happened quite a couple of times to me: I\u2019ve added some code while developing a new feature or debugging an old one and forgot to remove it afterward. It was most often caught by the reviewer, but it is not necessary to distract the reviewer with this.", "flake8-breakpoint checks for forgotten breakpoints and flake8-print will complain about every print statement. flake8-debugger, flake8-fixme, flake8-todo go in the same direction.", "pylint is one of the most wide-spread linters in Python. The features of pylint for sure overlaps with Flake8, but there is one feature I love: Checking for code duplication \u2764", "Who hasn\u2019t done it: You removed a functionality, but the code could be handy. So you comment it out. Or you add a if False block around it. Sometimes more sophisticated by adding a configuration option you don\u2019t need.", "The clean solution is to have a single, clear commit that removes that feature. Maybe add a git tag so that you can find it later if you want to add it again.", "And then there is code which is dead, but you forgot about it. Luckily, you can automatically detect it:", "Some plugins helped me to learn something about Python. For example, the following helped me to get rid of small little bugs and inconsistencies:", "The following new style nudging plugins aim to push you to use modern style Python:", "This is one of the most valuable categories for me. If you know more plugins which help to use new styles, let me know \ud83d\ude03", "Flake8 has some plugins which don\u2019t add more linting functionality, but improve flake8 in another way:", "And some plugins people might need for legal reasons like flake8-author, flake8-copyright, and flake8-license.", "To Flake8 plugin authors: Please make sure that you list the error codes your plugin introduces and that you give at least some examples of what your plugin considers bad / good.", "It\u2019s possible in Python, but you need to do it. It\u2019s not done automatically. I\u2019ve written a longer article about how type annotations work in Python. There are multiple tools you can use, but I recommend mypy. You can run it via pytest by using pytest-mypy or via flake8 by using flake8-mypy , but I prefer to run it separately. The main reason for it is that the output given by CI pipelines is cleaner.", "You can integrate type checking (e.g. via mypy) into your editor, but the type annotations alone already go a long way as they document what is expected.", "pyroma rates how well a Python project complies with the best practices of the Python packaging ecosystem.", "Here are some examples of my projects:", "In this series, we already had:", "Let me know if you\u2019re interested in other topics around testing with Python.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I\u2019m a Software Engineer with over 10 years of Python experience (Backend/ML/AI). Support me via https://martinthoma.medium.com/membership"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fbdce10b8d287&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://martinthoma.medium.com/?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": ""}, {"url": "https://martinthoma.medium.com/?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": "Martin Thoma"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F287aa3cfe747&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&user=Martin+Thoma&userId=287aa3cfe747&source=post_page-287aa3cfe747----bdce10b8d287---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbdce10b8d287&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbdce10b8d287&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://commons.wikimedia.org/wiki/File:Trilobite_under_magnifying_glass_icon.svg", "anchor_text": "Offnfopt"}, {"url": "https://unsplash.com/@barkiple?utm_source=medium&utm_medium=referral", "anchor_text": "John Barkiple"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://en.wikipedia.org/wiki/Cyclomatic_complexity", "anchor_text": "cyclomatic complexity"}, {"url": "https://books.google.de/books?id=vtNWAAAAMAAJ&pg=PA3&redir_esc=y", "anchor_text": "A Complexity Measure"}, {"url": "https://pypi.org/project/radon/", "anchor_text": "radon"}, {"url": "https://github.com/scipy/scipy/blob/master/scipy/sparse/linalg/eigen/lobpcg/lobpcg.py#L127", "anchor_text": "The most complex part of scipy"}, {"url": "https://pypi.org/project/flake8-annotations-complexity/", "anchor_text": "flake8-annotations-complexity"}, {"url": "https://pypi.org/project/flake8-cognitive-complexity/", "anchor_text": "flake8-cognitive-complexity"}, {"url": "https://pypi.org/project/flake8-expression-complexity/", "anchor_text": "flake8-expression-complexity"}, {"url": "https://pypi.org/project/flake8-functions/", "anchor_text": "flake8-functions"}, {"url": "https://pypi.org/project/mccabe/", "anchor_text": "mccabe"}, {"url": "https://pypi.org/project/wily/", "anchor_text": "wily"}, {"url": "https://pypi.org/project/xenon/", "anchor_text": "xenon"}, {"url": "https://unsplash.com/@huntersrace?utm_source=medium&utm_medium=referral", "anchor_text": "Hunters Race"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://stackoverflow.com/a/25011492/562769", "anchor_text": "source"}, {"url": "https://www.goodreads.com/quotes/835238-indeed-the-ratio-of-time-spent-reading-versus-writing-is", "anchor_text": "source"}, {"url": "https://www.python.org/dev/peps/pep-0008/", "anchor_text": "PEP-8"}, {"url": "https://www.python.org/dev/peps/pep-0008/#maximum-line-length", "anchor_text": "maximum line length of 79"}, {"url": "https://martin-thoma.com/python-style-guide/#maximum-line-length", "anchor_text": "reasons"}, {"url": "https://github.com/psf/black/blob/master/docs/_static/logo2.png", "anchor_text": "Black contributors"}, {"url": "https://pypi.org/project/black/", "anchor_text": "black"}, {"url": "https://github.com/google/yapf", "anchor_text": "yapf"}, {"url": "https://lasagne.readthedocs.io/en/latest/modules/nonlinearities.html#lasagne.nonlinearities.sigmoid", "anchor_text": "Lasagne"}, {"url": "https://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.prewitt.html#scipy.ndimage.prewitt", "anchor_text": "Scipy"}, {"url": "https://unsplash.com/@lauradewilde97?utm_source=medium&utm_medium=referral", "anchor_text": "Laura Dewilde"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.python.org/dev/peps/pep-0257/", "anchor_text": "PEP-257"}, {"url": "https://numpydoc.readthedocs.io/en/latest/format.html", "anchor_text": "NumpyDoc-style"}, {"url": "https://github.com/google/styleguide/blob/gh-pages/pyguide.md#38-comments-and-docstrings", "anchor_text": "Google-style"}, {"url": "https://sphinx-rtd-tutorial.readthedocs.io/en/latest/docstrings.html", "anchor_text": "Sphinx-style"}, {"url": "https://medium.com/dailyjs/why-you-should-always-use-a-linter-and-or-pretty-formatter-bb5471115a76", "anchor_text": "You should always use a linter"}, {"url": "https://medium.com/u/7d09bba59347?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": "Alberto Gimeno"}, {"url": "https://pypi.org/project/flake8/", "anchor_text": "Flake8"}, {"url": "https://incolumitas.com/data/thesis.pdf", "anchor_text": "Typosquatting in Programming Language Package Managers"}, {"url": "https://incolumitas.com/2016/06/08/typosquatting-package-managers/", "anchor_text": "blog post"}, {"url": "https://arxiv.org/pdf/2003.03471.pdf", "anchor_text": "interesting follow-up"}, {"url": "https://is.muni.cz/th/y41ft/thesis_final_electronic.pdf", "anchor_text": "Attacks on Package Managers"}, {"url": "https://mail.python.org/pipermail/security-announce/2017-September/000000.html", "anchor_text": "2017"}, {"url": "https://www.bleepingcomputer.com/news/security/ten-malicious-libraries-found-on-pypi-python-package-index/", "anchor_text": "2017"}, {"url": "https://nakedsecurity.sophos.com/2017/09/19/pypi-python-repository-hit-by-typosquatting-sneak-attack/", "anchor_text": "2017"}, {"url": "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/typosquatting-in-python-repositories/", "anchor_text": "2019"}, {"url": "https://snyk.io/blog/malicious-packages-found-to-be-typo-squatting-in-pypi/", "anchor_text": "2019"}, {"url": "https://sysdig.com/blog/malicious-python-libraries-jeilyfish-dateutil/", "anchor_text": "2019"}, {"url": "https://github.com/jspeed-meyers/pypi-scan", "anchor_text": "pypi-scan"}, {"url": "https://pypi.org/project/pypi-parker/", "anchor_text": "pypi-parker"}, {"url": "https://medium.com/u/af80ede3ec71?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": "William Bengtsson"}, {"url": "https://medium.com/@williambengtson/python-typosquatting-for-fun-not-profit-99869579c35d", "anchor_text": "Python Typosquatting for Fun not Profitby William Bengtson | @__musclesmedium.com"}, {"url": "https://github.com/mschwager/cohesion", "anchor_text": "cohesion"}, {"url": "https://pypi.org/project/flake8-assert-msg/", "anchor_text": "flake8-assert-msg"}, {"url": "https://pypi.org/project/flake8-blind-except/", "anchor_text": "flake8-blind-except"}, {"url": "https://pypi.org/project/flake8-builtins/", "anchor_text": "flake8-builtins"}, {"url": "https://pypi.org/project/flake8-docstrings/", "anchor_text": "flake8-docstrings"}, {"url": "https://pypi.org/project/flake8-isort/", "anchor_text": "flake8-isort"}, {"url": "https://pypi.python.org/pypi/isort", "anchor_text": "isort"}, {"url": "https://github.com/globality-corp/flake8-logging-format", "anchor_text": "flake8-logging-format"}, {"url": "https://pypi.org/project/flake8-pytest-style/", "anchor_text": "flake8-pytest-style"}, {"url": "https://pypi.org/project/flake8-requirements/", "anchor_text": "flake8-requirements"}, {"url": "https://pypi.org/project/flake8-graphql/", "anchor_text": "flake8-graphql"}, {"url": "https://pypi.org/project/flake8_implicit_str_concat/", "anchor_text": "flake8_implicit_str_concat"}, {"url": "https://pypi.org/project/flake8-mock/", "anchor_text": "flake8-mock"}, {"url": "https://pypi.org/project/flake8-nb/", "anchor_text": "flake8-nb"}, {"url": "https://pypi.org/project/flake8-pyi/", "anchor_text": "flake8-pyi"}, {"url": "https://pypi.org/project/flake8-variables-names/", "anchor_text": "flake8-variables-names"}, {"url": "https://pypi.org/project/pep8-naming/", "anchor_text": "pep8-naming"}, {"url": "https://pypi.org/project/pandas-vet/", "anchor_text": "pandas-vet"}, {"url": "https://pypi.org/project/wemake-python-styleguide/", "anchor_text": "wemake-python-styleguide"}, {"url": "https://pypi.org/project/prospector/", "anchor_text": "prospector"}, {"url": "https://unsplash.com/@esptroy?utm_source=medium&utm_medium=referral", "anchor_text": "Troy Bridges"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://pypi.org/project/flake8-bandit/", "anchor_text": "flake8-bandit"}, {"url": "https://pypi.org/project/flake8-bugbear/", "anchor_text": "flake8-bugbear"}, {"url": "https://pypi.org/project/flake8-requests/", "anchor_text": "flake8-requests"}, {"url": "https://pypi.org/project/flake8-breakpoint/", "anchor_text": "flake8-breakpoint"}, {"url": "https://pypi.org/project/flake8-print/", "anchor_text": "flake8-print"}, {"url": "https://pypi.org/project/flake8-debugger/", "anchor_text": "flake8-debugger"}, {"url": "https://pypi.org/project/flake8-fixme/", "anchor_text": "flake8-fixme"}, {"url": "https://pypi.org/project/flake8-todo/", "anchor_text": "flake8-todo"}, {"url": "https://pypi.org/project/pylint/", "anchor_text": "pylint"}, {"url": "https://unsplash.com/@greyharpoon?utm_source=medium&utm_medium=referral", "anchor_text": "Kenny Orr"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://pypi.org/project/flake8-eradicate/", "anchor_text": "flake8-eradicate"}, {"url": "https://pypi.org/project/vulture/", "anchor_text": "vulture"}, {"url": "https://unsplash.com/@brookecagle?utm_source=medium&utm_medium=referral", "anchor_text": "Brooke Cagle"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://pypi.org/project/flake8-comprehensions/", "anchor_text": "flake8-comprehensions"}, {"url": "https://pypi.org/project/flake8-executable/", "anchor_text": "flake8-executable"}, {"url": "https://en.wikipedia.org/wiki/Shebang_(Unix)", "anchor_text": "shebangs"}, {"url": "https://pypi.org/project/flake8-raise/", "anchor_text": "flake8-raise"}, {"url": "https://pypi.org/project/flake8-pytest/", "anchor_text": "flake8-pytest"}, {"url": "https://pypi.org/project/flake8-pathlib/", "anchor_text": "flake8-pathlib"}, {"url": "https://docs.python.org/3.4/library/pathlib.html", "anchor_text": "Pathlib"}, {"url": "https://pypi.org/project/flake8-string-format/", "anchor_text": "flake8-string-format"}, {"url": "https://pypi.org/project/flake8-printf-formatting/", "anchor_text": "flake8-printf-formatting"}, {"url": "https://pypi.org/project/flake8-sfs/", "anchor_text": "flake8-sts"}, {"url": "https://pypi.org/project/flake8-colors/", "anchor_text": "flake8\u2013colors"}, {"url": "https://pypi.org/project/flake8-csv/", "anchor_text": "flake8-csv"}, {"url": "https://pypi.org/project/flake8-json/", "anchor_text": "flake8-json"}, {"url": "https://pypi.org/project/flake8-dashboard/", "anchor_text": "flake8-dashboard"}, {"url": "https://pypi.org/project/flake8-html/", "anchor_text": "flake8-html"}, {"url": "https://aperezhortal.github.io/flake8-dashboard/example_dashboard/index.html", "anchor_text": "dashboard demo"}, {"url": "https://pypi.org/project/flake8-immediate/", "anchor_text": "flake8-immediate"}, {"url": "https://pypi.org/project/flake8-strftime/", "anchor_text": "flake8-strftime"}, {"url": "https://pypi.org/project/flake8-SQL/", "anchor_text": "flake8-SQL"}, {"url": "http://py-find-injection", "anchor_text": "py-find-injection"}, {"url": "https://pypi.org/project/flake8-tuple/", "anchor_text": "flake8-tuple"}, {"url": "https://medium.com/analytics-vidhya/type-annotations-in-python-3-8-3b401384403d", "anchor_text": "type annotations work in Python"}, {"url": "https://levelup.gitconnected.com/ci-pipelines-for-python-projects-9ac2830d2e38", "anchor_text": "CI pipelines"}, {"url": "https://unsplash.com/@tobystodart?utm_source=medium&utm_medium=referral", "anchor_text": "Toby Stodart"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/regebro/pyroma", "anchor_text": "pyroma"}, {"url": "https://medium.com/swlh/unit-testing-in-python-basics-21a9a57418a0", "anchor_text": "The basics of Unit Testing in Python"}, {"url": "https://levelup.gitconnected.com/unit-testing-in-python-mocking-patching-and-dependency-injection-301280db2fed", "anchor_text": "Patching, Mocks and Dependency Injection"}, {"url": "https://medium.com/analytics-vidhya/how-to-test-flask-applications-aef12ae5181c", "anchor_text": "How to test Flask applications"}, {"url": "https://medium.com/python-in-plain-english/unit-testing-in-python-tox-and-nox-833e4bbce729", "anchor_text": "tox and nox"}, {"url": "https://medium.com/python-in-plain-english/unit-testing-in-python-structure-57acd51da923", "anchor_text": "Structuring Unit Tests"}, {"url": "https://levelup.gitconnected.com/ci-pipelines-for-python-projects-9ac2830d2e38", "anchor_text": "CI-Pipelines"}, {"url": "https://levelup.gitconnected.com/unit-testing-in-python-property-based-testing-892a741fc119", "anchor_text": "Property-based Testing"}, {"url": "https://medium.com/analytics-vidhya/unit-testing-in-python-mutation-testing-7a70143180d8", "anchor_text": "Mutation Testing"}, {"url": "https://towardsdatascience.com/static-code-analysis-for-python-bdce10b8d287", "anchor_text": "Static Code Analysis"}, {"url": "https://towardsdatascience.com/pytest-plugins-to-love-\ufe0f-9c71635fbe22", "anchor_text": "Pytest Plugins to Love"}, {"url": "https://medium.com/tag/programming?source=post_page-----bdce10b8d287---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----bdce10b8d287---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/python?source=post_page-----bdce10b8d287---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/static-code-analysis?source=post_page-----bdce10b8d287---------------static_code_analysis-----------------", "anchor_text": "Static Code Analysis"}, {"url": "https://medium.com/tag/software-development?source=post_page-----bdce10b8d287---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbdce10b8d287&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&user=Martin+Thoma&userId=287aa3cfe747&source=-----bdce10b8d287---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbdce10b8d287&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&user=Martin+Thoma&userId=287aa3cfe747&source=-----bdce10b8d287---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbdce10b8d287&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fbdce10b8d287&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----bdce10b8d287---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----bdce10b8d287--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----bdce10b8d287--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----bdce10b8d287--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----bdce10b8d287--------------------------------", "anchor_text": ""}, {"url": "https://martinthoma.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://martinthoma.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Martin Thoma"}, {"url": "https://martinthoma.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "6.2K Followers"}, {"url": "https://martinthoma.medium.com/membership", "anchor_text": "https://martinthoma.medium.com/membership"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F287aa3cfe747&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&user=Martin+Thoma&userId=287aa3cfe747&source=post_page-287aa3cfe747--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F7f2b4a3f3c8f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstatic-code-analysis-for-python-bdce10b8d287&newsletterV3=287aa3cfe747&newsletterV3Id=7f2b4a3f3c8f&user=Martin+Thoma&userId=287aa3cfe747&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}