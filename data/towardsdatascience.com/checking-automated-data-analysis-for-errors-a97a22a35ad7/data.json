{"url": "https://towardsdatascience.com/checking-automated-data-analysis-for-errors-a97a22a35ad7", "time": 1682995614.076426, "path": "towardsdatascience.com/checking-automated-data-analysis-for-errors-a97a22a35ad7/", "webpage": {"metadata": {"title": "Checking Automated Data Analysis for Errors | by Peter Grant | Towards Data Science", "h1": "Checking Automated Data Analysis for Errors", "description": "This is the fourth article in a series teaching you to how to write programs that automatically analyze scientific data. The first presented the concept and motivation, then laid out the high level\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/@petergrant_81989/automating-scientific-data-analysis-part-1-c9979cd0817e", "anchor_text": "first", "paragraph_index": 0}, {"url": "https://medium.com/@petergrant_81989/automating-scientific-data-analysis-part-2-12331b46003", "anchor_text": "second", "paragraph_index": 0}, {"url": "https://medium.com/@petergrant_81989/automating-analysis-of-scientific-data-sets-84f5027d6d26", "anchor_text": "third", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/automating-scientific-data-analysis-part-2-a26bd749fa8d", "anchor_text": "Automating Scientific Data Analysis Part 2", "paragraph_index": 17}], "all_paragraphs": ["This is the fourth article in a series teaching you to how to write programs that automatically analyze scientific data. The first presented the concept and motivation, then laid out the high level steps. The second taught you how to structure data sets to make automated data analysis possible, and automatically identify the conditions of each test. The third article discussed creating a for loop that automatically performs calculations on each test result and saves the results. This fourth post will cover perhaps the most important part of the entire process: Checking the data and analysis results for errors, to avoid letting them impact the final results.", "Perhaps the strongest argument against automation of data analysis, is that of reliability. A computer algorithm that mindlessly performs calculations and analysis won\u2019t identify poorly performed tests or mistakes in analysis, and these oversights will lead to errors in the final project results. This isn\u2019t simply people being afraid of new ways of doing things, it\u2019s a legitimate concern. It\u2019s especially true in the case of laboratory testing; lab tests don\u2019t always progress as planned, and sometimes those mistakes need to be identified during data analysis.", "Fortunately, it\u2019s possible to add error checking methods to the program. Some of these techniques, namely printing intermediate outputs and plotting all data, require manual data checking though still significantly less human effort than fully manual data analysis. Others, namely creating an automated data checking algorithm, allow the program to do the error checking on their own significantly reducing data checking time demands. Combined with the natural repeatability of computer programs, these approaches can lead to data analysis processes that are more robust than manual calculations, while also being significantly faster.", "The following sections will describe these three approaches to data quality checking in Python programs.", "Printing intermediate outputs is analogous to showing all calculations. This is a good practice because it both facilitates debugging when the program is created, and allows others to check the results and build confidence in the automated data analysis program. Because many people won\u2019t want to review Python code directly, they won\u2019t be able to check the formulas as they might with an Excel spreadsheet. This makes it especially important to provide as many intermediate outputs as possible so people can check the calculations on their own.", "The basic premise behind printing intermediate outputs is to present as many steps in the calculations as possible in a format similar to Excel. This facilitates checking the results from the code by making it easier for others to understand. Then they can easily perform their own calculations, and compare their results to the Python output. This is generally performed using the two following steps.", "1. Present as many calculation details as possible within the data frame. External variables, or lists may be necessary, but should be used sparingly. Containing all of the data and calculations in a single data frame makes it easier for others to understand and check the calculations.", "2. Print the data frame from each test to a unique .csv file.", "Some aspects of presenting calculation details within the data frame come naturally. Most calculations will be performed on the data frame, and the results will be stored in the data frame as a direct result. Other aspects require a little extra effort. For instance, constants would more naturally be used as independent variables, but adding a column for them in the data frame allows others to check these constants while examining only the output table.", "Saving a new .csv file for each test is a useful way to ensure that all calculations throughout an entire project are saved, rather than overwriting old calculations as results from new tests are analyzed. This is generally done by 1) Creating a new folder as each test is analyzed, to store the results from that test and 2) Saving the results to a .csv file using a dynamic file name that changes to represent the conditions of the test currently being analyzed. These two goals can be accomplished using the following code. Note that the example code uses the techniques shown in Part 2 to track the conditions of the test.", "Breaking the preceding code into five steps, it:", "1. Uses the techniques from Part 2 to identify the nominal conditions of the data set currently being analyzed. For the context of this chapter, this ensures that the program has the information it needs to create names of folders and files, and that the results are stored in an orderly fashion which can easily be understood later.", "2. Uses the conditions read in Step 1 to create a variable named Folder. The path of Folder is unique to this test and uses the conditions of the test in the name of the file.", "3. Checks to see if there is already a folder matching that name and, if not, creates one.", "4. The fourth step is to perform all calculations on the data. To simplify this discussion, and keep it focused on printing intermediate outputs, the calculations are represented by a single comment above.", "5. After the analysis is completed, this step writes the data frame to a new .csv file. The .csv file is located within the new folder, containing the nominal test conditions, and itself contains the nominal test conditions. This rigorous naming structure ensures that the correct data set can easily be located as needed later.", "One convenient way to check the quality of test data and the performance of the associated data analysis is via plots. The advantage of automated data analysis programs is that they can rapidly create plots for hundreds of tests, reducing the manual labor required to generate them individually. This allows the user to rapidly peruse the plots, and rapidly ensure data quality.", "The process of automatically generating and savings plots for each test is now something that the reader can do. The general process is to use the techniques described in Automating Scientific Data Analysis Part 2 and Automating Analysis of Scientific Data Sets to create a program that cycles through all the data sets, performs the needed calculations, generates the needed plots, and saves the results. These techniques have been covered already.", "The key concept here is to plot enough features of the data set to be able to quickly, and visually check to ensure that the test proceeded correctly. Returning to the heat exchanger example as described in Part 2, this means that saved plots must allow the user to quickly determine:", "1. That the test hot-side and cold-side flow rates closely matched the nominal test conditions called for in the test plan,", "2. That the test hot-side and cold-side inlet water temperatures matched the nominal test conditions called for in the test plan,", "3. That all parameters were steady enough to ensure quality, steady-state operation,", "4. That the filters used to identify the steady state period of the test selected the correct portion of the data set, and", "5. That the final steady-state effectiveness value is steady and reasonable.", "This goal can be accomplished with three plots.", "Figure 1 presents an example plot showing the water flow rate across both sides of the heat exchanger. Assume for the sake of this example that the nominal flow rate conditions for this test were 3.5 gal/min on both sides of the device. In Figure 13, both flow rates range between 3.4 and 3.6 gal/min. This is a small amount of variation, within the anticipated range of variation in a test, and thus closely matches the nominal test conditions. Figure 1 shows that the first condition is satisfied. Examples of dissatisfactory operation include an average flow rate of 3.2 gal/min on either side, or scatter ranging from 3.0 to 4.0 gal/min.", "Figure 1 also shows that the flow rates meet condition three. While there is a small amount of scatter in the data, as anticipated, the long-term trend is very stable right around 3.5 gal/min. A test would be considered dissatisfactory if, for example, the flow rate had temporarily dropped to 3.0 gal/min before returning to the set flow rate.", "Figure 2 serves the same purposes for temperature data. The example data assumes a 100.4 \u00b0F inlet temperature on the hot side, and 50 \u00b0F inlet temperature on the cold side. Like the flow rate data, the test is considered valid if the recorded inlet temperatures are close to those nominal conditions, and do not vary dramatically throughout the steady state portion of the test. Both of those conditions are met, so this plot indicates that the recorded temperatures meet conditions two and three.", "Figure 3 presents a plot of the calculated effectiveness of the heat exchanger. Per the techniques shown in Part 2, this data set is filtered to only show data after the valves switch to the test flow rate. The data clearly bounces around an effectiveness rating of 0.34 with some variation. The variation is expected, because there\u2019s some variation in both the temperature and flow rate data. The first few data points make it clear that the unit was in a transition period when the filter first applied, but there are only a few so the impact on calculated average effectiveness is minimal. Aside from those beginning points, the presented effectiveness is quite stable. This plot confirms that conditions four and five are met by this data set.", "Having these three plots available allows the user to ensure that this test was performed correctly, and that the data is valid, with mere seconds of active involvement. Including a section in an automated data analysis program that creates and saves the required plots is a very effective and efficient way to ensure the quality of a data set.", "The most detailed and automated way to check the quality of the data in a test is to create an automated data checker. This is a script that reviews the measured data to determine what was recorded, compares it to the nominal test conditions, determines if they\u2019re acceptable, and report unacceptable results to the user. This can be advantageous for the user as it limits the number of plots that need to be manually reviewed. Projects with hundreds of tests can easily yield thousands of plots, and reducing the number that need to be reviewed saves significant amounts of time, tedium, and project budget.", "The following code provides an example of how this process can be accomplished. Assume that the program already has a data frame named \u201cTemp\u201d to temporarily store information about questionable results, and a second data frame name \u201cSuspiciousTests\u201d with the full list.", "1. First, it compares the nominal hot-side inlet temperature, Temperature_Hot, to the average measured hot-side inlet temperature. If the difference is greater than a pre-specified value, set with the variable Threshold_Difference_Temperature, it determines that there was an issue with the test.", "2. If there was an issue with the test, it records the parameters of the test. These parameters include the filename, nominal test conditions, a code representing the test condition that was not met, and the measured value of that condition. These entries are all added to the SuspiciousTests data frame.", "3. After the program processes all the data, SuspiciousTests is printed to a .csv file creating a record of which tests appear to be dis-satisfactory.", "The example showed a single check, comparing the average hot-side inlet temperature to the nominal condition for the test. A thorough program would include checks for the other test parameters, as well as checks of the standard deviation to ensure that all parameters were stable.", "In general, it\u2019s best to remember the following guidelines when creating an automated data checking algorithm:", "The content provided in the articles thus far have taught you how to structure data sets for automation, automatically open and analyze all files, and check the data sets for errors. The next step is to store these results in a way that allows you to naturally develop regressions. That will be covered in my next article.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Scientist at Lawrence Berkeley National Laboratory who also teaches skills you need to build a fulfilling career."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fa97a22a35ad7&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://petergrant-81989.medium.com/?source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": ""}, {"url": "https://petergrant-81989.medium.com/?source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": "Peter Grant"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F985f2ff02845&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&user=Peter+Grant&userId=985f2ff02845&source=post_page-985f2ff02845----a97a22a35ad7---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa97a22a35ad7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa97a22a35ad7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://medium.com/@petergrant_81989/automating-scientific-data-analysis-part-1-c9979cd0817e", "anchor_text": "first"}, {"url": "https://medium.com/@petergrant_81989/automating-scientific-data-analysis-part-2-12331b46003", "anchor_text": "second"}, {"url": "https://medium.com/@petergrant_81989/automating-analysis-of-scientific-data-sets-84f5027d6d26", "anchor_text": "third"}, {"url": "https://towardsdatascience.com/automating-scientific-data-analysis-part-2-a26bd749fa8d", "anchor_text": "Automating Scientific Data Analysis Part 2"}, {"url": "https://medium.com/tag/data-science?source=post_page-----a97a22a35ad7---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----a97a22a35ad7---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/automation?source=post_page-----a97a22a35ad7---------------automation-----------------", "anchor_text": "Automation"}, {"url": "https://medium.com/tag/science?source=post_page-----a97a22a35ad7---------------science-----------------", "anchor_text": "Science"}, {"url": "https://medium.com/tag/data-analysis?source=post_page-----a97a22a35ad7---------------data_analysis-----------------", "anchor_text": "Data Analysis"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa97a22a35ad7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&user=Peter+Grant&userId=985f2ff02845&source=-----a97a22a35ad7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa97a22a35ad7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&user=Peter+Grant&userId=985f2ff02845&source=-----a97a22a35ad7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa97a22a35ad7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fa97a22a35ad7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----a97a22a35ad7---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----a97a22a35ad7--------------------------------", "anchor_text": ""}, {"url": "https://petergrant-81989.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://petergrant-81989.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Peter Grant"}, {"url": "https://petergrant-81989.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "969 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F985f2ff02845&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&user=Peter+Grant&userId=985f2ff02845&source=post_page-985f2ff02845--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F90e3ec001185&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fchecking-automated-data-analysis-for-errors-a97a22a35ad7&newsletterV3=985f2ff02845&newsletterV3Id=90e3ec001185&user=Peter+Grant&userId=985f2ff02845&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}