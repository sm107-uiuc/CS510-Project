{"url": "https://towardsdatascience.com/freeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107", "time": 1682997571.950387, "path": "towardsdatascience.com/freeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107/", "webpage": {"metadata": {"title": "Freeing the data scientist mind from the curse of vectoRization | by Daniel Moura | Towards Data Science", "h1": "Freeing the data scientist mind from the curse of vectoRization", "description": "Data Scientists learned to avoid loops and recursion because they make Python/R code slow. I will show you that Julia sets you free from these constraints."}, "outgoing_paragraph_urls": [{"url": "https://blogs.mathworks.com/loren/2016/02/12/run-code-faster-with-the-new-matlab-execution-engine/", "anchor_text": "Matlab introduced it in 2002", "paragraph_index": 0}, {"url": "https://ucidatascienceinitiative.github.io/IntroToJulia/Html/WhyJulia", "anchor_text": "very nice notebook", "paragraph_index": 0}, {"url": "https://twitter.com/daniel_c_moura", "anchor_text": "Tweeter", "paragraph_index": 25}, {"url": "https://www.linkedin.com/in/dmoura/", "anchor_text": "LinkedIn", "paragraph_index": 25}, {"url": "https://vimeo.com/danielcmoura", "anchor_text": "Vimeo", "paragraph_index": 25}, {"url": "http://linkedin.com/in/dmoura", "anchor_text": "linkedin.com/in/dmoura", "paragraph_index": 27}, {"url": "http://vimeo.com/danielcmoura", "anchor_text": "vimeo.com/danielcmoura", "paragraph_index": 27}], "all_paragraphs": ["Nowadays, most data scientists use either Python or R as their main programming language. That was also my case until I met Julia earlier this year. Julia promises performance comparable to statically typed compiled languages (like C) while keeping the rapid development features of interpreted languages (like Python, R or Matlab). This performance is achieved by just-in-time (JIT) compilation. Instead of interpreting code, Julia compiles code in runtime. While JIT compilation has been around for sometime now (e.g. Matlab introduced it in 2002), Julia was designed for performance with JIT compilation in mind. Type stability and multiple-dispatch are key design concepts in Julia that put it apart from the competition. There is a very nice notebook by the Data Science Initiative at the University of California that explains these concepts if you want to learn more.", "Somewhere in time, we started using interpreted languages for handling large datasets (I guess datasets grew bigger and bigger and we kept using the same tools). We learned that, for the sake of performance, we want to avoid loops and recursion. Instead, we want to use vectorized operations or specialized implementations that take data structures (e.g. arrays, dataframes) as input and handle them in a single call. We do this because in interpreted languages we pay an overhead for each time we execute an instruction. While I was happy coding in R, it involved having a set of strategies for avoiding loops and recursion and many times the effort was being directed to \u201chow do I avoid the pitfalls of an interpreted language?\u201d. I got to a point where I was coding C functions to tackle bottlenecks on my R scripts and, while performance clearly improved, the advantages of using R were getting lost in the way. That was when I started looking for alternatives and I found Julia.", "In this post, we will start by solving a simple problem in R where I will try to illustrate the mindset and limitations when programming in interpreted languages. Then, we will solve the same problem with Julia, showing how the mindset differs completely and how C-like performance can be achieved out of the box.", "Sometimes it is not clear how to get the best performance using vectorization.", "This problem is solved in R using the dist function of the stats package:", "R\u2019s implementation returns a distance matrix that we convert into a vector.", "Let us pretend that dist is not available. How would you code it in R?", "Solving this problem with a loop-based approach is straightforward: we need an outer loop for iterating over the first element of the pair and an inner loop for the second element. Since the L1-distance is symmetric (|a-b| = |b-a|), we just need to do this for half the combinations, while avoiding calculating the distances of points to themselves (the diagonal of the matrix). A loop-based implementation in R would look like this:", "If you program in R, you would say that this is not proper R code\u2026 loops are slow and produce very verbose code\u2026 there should be a way of vectorizing.", "One way to drop loops is by generating vectors with all combinations of pairs. Basically, we are finding the (row, column) coordinates of the lower triangle of the distance matrix. Then, we can calculate the distances with a single vectorized operation. We know that we are paying a memory penalty, but we hope that the vectorization pays off.", "Another alternative is to use R\u2019s outer function for generating a matrix with the differences between all combinations of two points (including redundant combinations). Then, we only need to retrieve the absolute value of the lower triangular part of the matrix. We might feel reluctant because we are making ~2 times more operations (and storing them in memory), but this does result in cleaner and more readable code.", "As we travel along the vectorization pathway, the code is becoming more compact, but is it becoming faster? We are exchanging compactness by more memory and more operations\u2026 it is not trivial to predict which of these implementations is the most efficient.", "We could go on an on trying to figure out what is the best way to avoid the pitfalls of R when we already have a simple loop-based solution (which would be difficult to beat in a compiled language). So, if this function is performance-critical, it might make sense to implement it in C, CPP or Fortran. A CPP translation of the original implementation, integrated with R via the Rcpp library, would look like this:", "The loop-based implementation in R was the slowest, as expected (and would be much slower before version 3.4 where JIT became available). By vectorizing, we decrease computation time but increase memory consumption, which can become a problem as the size of the input increases. Even after our vectorization efforts, we are still far from the performance of R\u2019s dist function.", "Rcpp allowed decreasing both computation time and memory requirements, outperforming R\u2019s core implementation. This is not surprising as R\u2019s dist function is much more flexible, adding several options and input validation. While it is great that we can inject C/CPP code into R scripts, now we are dealing with two programming languages and we have lost the goodies of interactive programming for the CPP code.", "Julia\u2019s programming mindset differs completely from R\u2019s. The most efficient solution is attained by a loop-based approach that preallocates memory.", "If you want to write less code, you can do so at the expense of computational efficiency. One way of compressing code is through comprehensions.", "The above comprehension is much more compact than the loop-based implementation while embodying the same logic. The main disadvantage of this approach is that the output vector is not preallocated. Since the compiler cannot predict the size of the output, the output grows dynamically as needed.", "Finally, if you prefer a vectorized approach, you also have that choice in Julia. Translating R\u2019s implementation based on the outer function would look like this:", "Unlike in R, we expect this to be the least efficient approach since it requires more memory and unnecessary (redundant) operations.", "Julia stands out by delivering C-like performance out of the box. The tradeoff between code compactness and efficiency is very clear, with C-like code delivering C-like performance. Comprehensions are a good compromise as they are simpler to code, less prone to bugs, and equally memory-efficient for this problem.", "When using R for tackling computational intensive tasks, we hope to find a specialized function to solve our problem. If a specialized function is not available, we either need to program it in C/CPP or go through the vectorization pathway. If we choose the second, we will probably end up far from the performance we would get from the first.", "Vectorization, comprehension, map-filter-reduce are all great tools that can save you time and deliver a more compact and readable code. However, programmers should not be forced to use them because of performance limitations of the programming language. You do not want to spend your time experimenting several ways to implement a solution when there is a straightforward and otherwise efficient implementation.", "Julia allows you to choose between code compactness and computational efficiency, making this tradeoff very clear. You can implement C-like loops, R-like vectorizations, or Python-like comprehensions. It\u2019s up to you. You can optimize the ratio between the time you need to code the solution and the time the solution takes to run. You can implement your own algorithms without relying on a second language.", "Being much younger than Python and R, Julia is fighting its way through the data science community. I loved when I started using Matlab 13 years ago because of the way I could interact with data. I am now loving how I can write faster code faster and how I am free to implement virtually any algorithm in Julia. Give it a go, I am sure you will love it too!", "You can find me on Tweeter, LinkedIn and Vimeo (check out my datavizs!)", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Computer Scientist and Engineer passionate about Data and Algorithms linkedin.com/in/dmoura vimeo.com/danielcmoura"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F11634c370107&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----11634c370107--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----11634c370107--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@daniel.c.moura?source=post_page-----11634c370107--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@daniel.c.moura?source=post_page-----11634c370107--------------------------------", "anchor_text": "Daniel Moura"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7cd388a0c4da&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&user=Daniel+Moura&userId=7cd388a0c4da&source=post_page-7cd388a0c4da----11634c370107---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F11634c370107&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F11634c370107&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@dhudson_creative?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Debby Hudson"}, {"url": "https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://blogs.mathworks.com/loren/2016/02/12/run-code-faster-with-the-new-matlab-execution-engine/", "anchor_text": "Matlab introduced it in 2002"}, {"url": "https://ucidatascienceinitiative.github.io/IntroToJulia/Html/WhyJulia", "anchor_text": "very nice notebook"}, {"url": "https://github.com/dcmoura/blogposts", "anchor_text": "github.com/dcmoura/blogposts"}, {"url": "https://twitter.com/daniel_c_moura", "anchor_text": "Tweeter"}, {"url": "https://www.linkedin.com/in/dmoura/", "anchor_text": "LinkedIn"}, {"url": "https://vimeo.com/danielcmoura", "anchor_text": "Vimeo"}, {"url": "https://medium.com/tag/programming?source=post_page-----11634c370107---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/r?source=post_page-----11634c370107---------------r-----------------", "anchor_text": "R"}, {"url": "https://medium.com/tag/julia?source=post_page-----11634c370107---------------julia-----------------", "anchor_text": "Julia"}, {"url": "https://medium.com/tag/data-science?source=post_page-----11634c370107---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----11634c370107---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F11634c370107&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&user=Daniel+Moura&userId=7cd388a0c4da&source=-----11634c370107---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F11634c370107&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&user=Daniel+Moura&userId=7cd388a0c4da&source=-----11634c370107---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F11634c370107&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----11634c370107--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F11634c370107&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----11634c370107---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----11634c370107--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----11634c370107--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----11634c370107--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----11634c370107--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----11634c370107--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----11634c370107--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----11634c370107--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----11634c370107--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@daniel.c.moura?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@daniel.c.moura?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Daniel Moura"}, {"url": "https://medium.com/@daniel.c.moura/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "124 Followers"}, {"url": "http://linkedin.com/in/dmoura", "anchor_text": "linkedin.com/in/dmoura"}, {"url": "http://vimeo.com/danielcmoura", "anchor_text": "vimeo.com/danielcmoura"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7cd388a0c4da&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&user=Daniel+Moura&userId=7cd388a0c4da&source=post_page-7cd388a0c4da--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F1f1cf45cd698&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffreeing-the-data-scientist-mind-from-the-curse-of-vectorization-11634c370107&newsletterV3=7cd388a0c4da&newsletterV3Id=1f1cf45cd698&user=Daniel+Moura&userId=7cd388a0c4da&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}