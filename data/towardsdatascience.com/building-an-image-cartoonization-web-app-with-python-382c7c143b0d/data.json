{"url": "https://towardsdatascience.com/building-an-image-cartoonization-web-app-with-python-382c7c143b0d", "time": 1683011491.002798, "path": "towardsdatascience.com/building-an-image-cartoonization-web-app-with-python-382c7c143b0d/", "webpage": {"metadata": {"title": "Building an Image Cartoonization Web App with Python | by Ruben Winastwan | Towards Data Science", "h1": "Building an Image Cartoonization Web App with Python", "description": "As an avid street-photography person who spend almost every weekend wandering around the city to hunt some photos, Adobe Lightroom is always my go-to software to edit my raw photos to make it more\u2026"}, "outgoing_paragraph_urls": [{"url": "https://jblindsay.github.io/ghrg/Whitebox/Help/FilterLaplacian.html", "anchor_text": "here", "paragraph_index": 30}, {"url": "https://devcenter.heroku.com/articles/heroku-cli", "anchor_text": "Heroku CLI", "paragraph_index": 45}, {"url": "https://image-cartooning-app.herokuapp.com/", "anchor_text": "here", "paragraph_index": 53}, {"url": "https://github.com/marcellusruben/Image_Cartooning_Web_App", "anchor_text": "GitHub", "paragraph_index": 54}], "all_paragraphs": ["As an avid street-photography person who spend almost every weekend wandering around the city to hunt some photos, Adobe Lightroom is always my go-to software to edit my raw photos to make it more \u201cinstagrammable\u201d.", "This got me thinking, wouldn\u2019t it be awesome if I can somehow create my own simple image editing software?", "The emergence of open source computer vision library like OpenCV and open source app framework like Streamlit enables me to realize this idea. With under 100 lines of code, you can build your own image cartooning web app that somehow mimicking the functionality of Adobe Lightroom.", "In this article, I want to show you how to build a simple web app to turn your image into cartoon-like image, depending on the filters, using OpenCV and Streamlit.", "There are two main steps that we often need to do to convert an image into a cartoon: edge detection and region smoothing.", "The main purpose of edge detection is obviously to emphasize the edge of an image, because normally a cartoon image has well-defined edges. Meanwhile, the main purpose of region smoothing is to remove the insignificant color boundaries and to reduce the noise or grain of the image, making the image less pixelated.", "Depending on the filters, we can obtain different image cartoonization result. In this article, there are going to be four different filters:", "Next, I want to show you how to apply each filters and what kind of result that you would expect from each of them.", "With Pencil Sketch filter, your image will be converted into a sketch as if your image has been drawn using a pencil. Below is the entire code to convert your image into a pencil sketch using OpenCV.", "It\u2019s amazing that we can convert our image into a pencil sketch-like picture with only three lines of code using OpenCV. Now let me explain what actually happens with our image line-by-line.", "In the first line, we convert our image from color into grayscale with cvtColor() function from OpenCV. I think this is pretty straightforward that the result from this line is that our image turns into its grayscale representation.", "Next, we blur the image using Gaussian Blur. By blurring the grayscale image, we are basically smoothing the image, trying to reduce the noise of the image. Plus, blurring is the necessary step for us to detect the edge of the image.", "To blur the image, we can use GaussianBlur() function from OpenCV. The (25, 25) that I put in the GaussianBlur() function there is the size of the kernel.", "Since we use Gaussian Blur, the distribution of the pixel value in a kernel follows a normal distribution. The larger the number the kernel, the larger the standard deviation would be and hence, the stronger the blurring effect will be. Below is the example of the blurring result with different kernel size.", "The final step would be dividing the original grayscale image with the blurred grayscale image. Dividing the image gives us a ratio of change between each pixel of two images. The stronger the blurry effects, the more the value of each pixel changes with respect to its origin and hence, it gives us sharper pencil sketch.", "Below is the result of using Pencil Sketch filter.", "In short, Detail Enhancement filter gives us a cartoon effect by sharpening the image, smoothing the colors, and enhancing the edges. Below is the entire code to convert your image into cartoon with this filter.", "The first step is the same as before, that we need to convert the image into a grayscale image.", "Next, instead of using Gaussian Blur, Median Blur is applied. To do this, we use medianBlur() function from OpenCV. Median Blur works by computing the median of pixel values that overlaps with the kernel, and then replacing its central pixel value with the computed median value. However, you can use Gaussian Blur if you wish.", "Next, we need to detect the edges of the image. To do this, adaptive threshold is applied with adaptiveThreshold() function from OpenCV. The main goal of adaptive threshold is to convert each pixel values in each region of an image into either completely black or completely white, depending on the mean value of the pixel overlapped by the kernel.", "Below is the visualization of what adaptive threshold does to the blurred image.", "To make the image looks sharper, we can use detailEnhance() filter from OpenCV. There are two parameters that you need to specify as an argument:", "Finally, we use the result of adaptive threshold as a mask. Then, merge the result of detail enhancement based on the value of the mask to create a sharp effect with well-defined edge.", "Below is the example result of Detail Enhancement filters.", "One big advantage of using Bilateral Filter is that we can smooth the image and the colors while preserving the edge at the same time. Below is the entire code to convert your image into cartoon-like with bilateral filtering.", "If you take a closer look, all of the steps are similar with the one from Detail Enhancement filter, however this time instead of using detailEnhance() function, we use bilateralFilter()function from openCV.", "The argument that you need to pass when you call this function is the same as the one with detailEnhance(), with only one additional parameter, which is the kernel size d. First, you need to specify the image source, then d, sigma_s, and sigma_r values that controls the smoothing effect and to preserve the edge.", "Below is the result example of using Bilateral Filter.", "Pencil Edges filter creates a new image that contains only significant edges and white background. To apply this filter, below is the complete code.", "The first two steps are the same as the other filters. First, we convert the image into a grayscale image. Next, we blur the image with the kernel size of 25.", "Now what\u2019s different is the next step, in which we apply Laplacian filter to detect the edges. Depending on the size of the kernel, the value in a Laplacian filter can be different. If you want to know more about the value of Laplacian filter with different kernel size, you can read it here.", "What Laplacian filter does is that it will emphasize the edge of an object with brighter and darker intensity than the gray-level inside of the object and the background of the image. Below is the example of before and after the application of Laplacian filter.", "Next, we invert the result of Laplacian filter so that the darker gray color become brighter and vice versa. Finally, by applying the threshold() function from openCV, we can convert the grayscale image into either completely black or completely white, depending on the threshold value that we specified.", "Below is the result example of Pencil Edge filter.", "After we created the code for image cartoonization filters, now we are ready to create an image cartoonization web app.", "As a first step, we need to put all of the codes for image cartoonization filters we have created into one function for an easy access. Notice that so far, we have hard-coded every parameter values like the size of the kernel and so on.", "Now instead of hard-coding every parameter values, we can actually let the user to specify a value based on their preference using a slider. To do this, we can use streamlit.slider() function from Streamlit. Below is the example of its implementation.", "With this slider, you can create an interactive image cartoonization web app, just like Adobe Lightroom. The result of your image cartoonization will be changed and updated in real-time every time you tweak the value of the kernel and other parameters.", "We can apply this streamlit.slider() in each of image cartoonization filter we have created above to replace the hard-coded parameter values.", "Next, we need to add a widget such that the user can upload their own image that they want to convert into a cartoon. For this purpose, we can use streamlit.file_uploader() function from Streamlit. To add some texts into our web app, we can use streamlit.text() or streamlit.write() function from Streamlit.", "After the user have uploaded their image, now we need to display the image, edit the image using one of the image cartoonization filter, and display the cartoonized image so that the user knows whether they want to tweak the slider further. To display the image, we can use streamlit.image() function from Streamlit.", "Below is the implementation of how you can build an image cartoonization web app in under 100 lines of code.", "Now you can open your Prompt, then head up into the working directory of your Python file which contains the code above. Next, you need to run the code with the following command.", "Finally, you\u2019re able to play around with your image cartoonization web app on your local computer! Below is the sample of the web app.", "This section is totally optional, but if you want to deploy your web app such that other people can also access your web app, you can deploy your web app using Heroku.", "To deploy your web app to Heroku, the first thing is to create a Heroku account for free and then download the Heroku CLI.", "The next thing you need to do is to create four additional files in the same directory as your Python file, which are:", "Next, open your Command Prompt, then heads up to the working directory of your Python file and these four additional files. In it, type heroku login in order for you to be logged into your Heroku account.", "Now you can create a new app by typing heroku create your-app-name . To make sure that you\u2019re inside of your newly created app, type the following:", "Next, you need to add a buildpack in your newly created app for OpenCV to be able to operate on Heroku. To add the necessary buildpack, type the following on your Heroku CLI.", "Now you are set. Next you need to initialize an empty git by typing git init followed by git add ., git commit , and git push heroku master commands.", "After that, the deployment process will begin and it may take some time to wait for this deployment process. At the end, Heroku will generate an URL of your newly deployed web app.", "And that\u2019s it! Now you\u2019ve built your own image cartoonization web app that mimicking the functionality of Adobe Lightroom.", "You can see the example of the deployed version of this image cartoonization web app here", "or you can see the full code of this image cartoonization on my GitHub page.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Science || Machine Learning || Computer Vision || NLP"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F382c7c143b0d&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----382c7c143b0d--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----382c7c143b0d--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@marcellusruben?source=post_page-----382c7c143b0d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@marcellusruben?source=post_page-----382c7c143b0d--------------------------------", "anchor_text": "Ruben Winastwan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5dae9da73c9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&user=Ruben+Winastwan&userId=5dae9da73c9b&source=post_page-5dae9da73c9b----382c7c143b0d---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F382c7c143b0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F382c7c143b0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://jblindsay.github.io/ghrg/Whitebox/Help/FilterLaplacian.html", "anchor_text": "here"}, {"url": "https://devcenter.heroku.com/articles/heroku-cli", "anchor_text": "Heroku CLI"}, {"url": "https://image-cartooning-app.herokuapp.com/", "anchor_text": "here"}, {"url": "https://github.com/marcellusruben/Image_Cartooning_Web_App", "anchor_text": "GitHub"}, {"url": "https://medium.com/tag/data-science?source=post_page-----382c7c143b0d---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----382c7c143b0d---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/image-processing?source=post_page-----382c7c143b0d---------------image_processing-----------------", "anchor_text": "Image Processing"}, {"url": "https://medium.com/tag/python?source=post_page-----382c7c143b0d---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----382c7c143b0d---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F382c7c143b0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&user=Ruben+Winastwan&userId=5dae9da73c9b&source=-----382c7c143b0d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F382c7c143b0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&user=Ruben+Winastwan&userId=5dae9da73c9b&source=-----382c7c143b0d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F382c7c143b0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----382c7c143b0d--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F382c7c143b0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----382c7c143b0d---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----382c7c143b0d--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----382c7c143b0d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----382c7c143b0d--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----382c7c143b0d--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----382c7c143b0d--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----382c7c143b0d--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----382c7c143b0d--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----382c7c143b0d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@marcellusruben?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@marcellusruben?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ruben Winastwan"}, {"url": "https://medium.com/@marcellusruben/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "925 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5dae9da73c9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&user=Ruben+Winastwan&userId=5dae9da73c9b&source=post_page-5dae9da73c9b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F46c6747bd93b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-image-cartoonization-web-app-with-python-382c7c143b0d&newsletterV3=5dae9da73c9b&newsletterV3Id=46c6747bd93b&user=Ruben+Winastwan&userId=5dae9da73c9b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}