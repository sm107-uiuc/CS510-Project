{"url": "https://towardsdatascience.com/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5", "time": 1683015847.5144699, "path": "towardsdatascience.com/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5/", "webpage": {"metadata": {"title": "Create a professional dashboard with Dash and CSS Bootstrap | by Gabriele Albini | Towards Data Science", "h1": "Create a professional dashboard with Dash and CSS Bootstrap", "description": "In this article, I am going through the steps I followed to create an interactive dashboard, using PlotlyDash, a library for Python and R, and enhancing the layout with CSS Bootstrap. This is a\u2026"}, "outgoing_paragraph_urls": [{"url": "https://corporate-dash.herokuapp.com/", "anchor_text": "https://corporate-dash.herokuapp.com/", "paragraph_index": 2}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#059c", "anchor_text": "3. Configuring the folder structure for a multi-page dashboard", "paragraph_index": 5}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#4adb", "anchor_text": "4. Conceptualizing the layout with the CSS Bootstrap Grid system", "paragraph_index": 6}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#469c", "anchor_text": "4.1 Building the layout framework with CSS Bootstrap", "paragraph_index": 7}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#0767", "anchor_text": "4.2 Styling Dash components accessing to their CSS classes", "paragraph_index": 8}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#b179", "anchor_text": "5.1 Multi dropdown filter : how to have a \u201cSelect All\u201d option", "paragraph_index": 9}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#a4a9", "anchor_text": "5.2 Unveiling seasonality patterns with Heatmaps", "paragraph_index": 10}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#0d77", "anchor_text": "5.3 Providing additional information when hovering on data points", "paragraph_index": 11}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#fd73", "anchor_text": "6. How to deploy and share the dashboard", "paragraph_index": 12}, {"url": "https://dash.plotly.com/urls", "anchor_text": "https://dash.plotly.com/urls", "paragraph_index": 21}, {"url": "https://codepen.io/chriddyp/pen/bWLwgP.css", "anchor_text": "https://codepen.io/chriddyp/pen/bWLwgP.css", "paragraph_index": 31}, {"url": "https://plotly.com/python/reference/heatmap/#heatmap-colorscale", "anchor_text": "available here", "paragraph_index": 89}, {"url": "https://plotly.com/python/hover-text-and-formatting/", "anchor_text": "official documentation", "paragraph_index": 93}, {"url": "https://plotly.com/python/reference/scatter/#scatter-hovertemplate", "anchor_text": "here", "paragraph_index": 97}, {"url": "https://www.youtube.com/watch?v=b-M2KQ6_bM4", "anchor_text": "this video", "paragraph_index": 100}], "all_paragraphs": ["In this article, I am going through the steps I followed to create an interactive dashboard, using PlotlyDash, a library for Python and R, and enhancing the layout with CSS Bootstrap.", "Dash library is written on top of Flask, Plotly.js, and React.js, that allows to build data visualization apps in pure Python, rendered via the web browser.", "The final result I produced can be displayed here: https://corporate-dash.herokuapp.com/", "This is a multi-page dashboard, simulating a business scenario, where there normally are some layout guidelines to be respected (corporate colours scheme, a pre-defined font, a corporate website that can inspire us, \u2026) and some sales-related KPIs to be monitored.", "The first page is filled with different types of charts (scatter plots, bar charts, bubble charts, heat-maps) and a recap table, with random data; the other pages are blank, but useful to show how to build a multi-page structure.", "3. Configuring the folder structure for a multi-page dashboard", "4. Conceptualizing the layout with the CSS Bootstrap Grid system", "4.1 Building the layout framework with CSS Bootstrap", "4.2 Styling Dash components accessing to their CSS classes", "5.1 Multi dropdown filter : how to have a \u201cSelect All\u201d option", "5.2 Unveiling seasonality patterns with Heatmaps", "5.3 Providing additional information when hovering on data points", "6. How to deploy and share the dashboard", "Dashboards are intended to provide a clear and accurate view on some business-relevant KPIs, enabling the end user to understand what\u2019s presented, find the information needed, apply some filters, and hopefully derive some conclusions.", "This dashboard is designed like a website, composed by different pages with a top navigator bar.", "Each page content is divided into three parts:", "I have deliberately avoided to offer any way for the user to export the underlying data: due to the raising concerns around data privacy and data loss, the dashboard is intended to use aggregated data only. Raw data points are unreachable to the end user.", "There are plenty of user guidelines and introductions to plotly Dash.", "I\u2019ve personally found very useful to go through these sources, which explains plenty of examples:", "Despite going through all these useful sources, I\u2019ve had to face many challenges, especially in order to understand how to customise Dash components the way I wanted.", "For this reason, I will also focus on this aspect in the steps below: the enhanced features and the layout, the visual identify of the end result is a very important aspect that can make the difference.", "The app source-code files should be structured as recommended by the Dash guidelines (https://dash.plotly.com/urls) to enable a multi-page navigation. Based on this guide, I\u2019ve used the following approach to minimise any code change or adaptation.", "Within the root folder, Dash will look for:", "If this structure is followed for the assets subfolder, the app will automatically detect and use the favico.ico file or the .css files, with no code needed! Just name an image like \u201cfavicon.ico\u201d and place it within root/assets and Dash will automatically use it.", "There are some additional files within the root folder (such as the .gitgnore, README.md, Procfile, requirements.txt) : these files are needed to deploy the app on Heroku or store the code on Git Hub.", "With the app folder structure in place, the next thing to configure is the overall layout of our pages. We can\u2019t talk about a web application layout without mentioning .css files, which centralise almost all layout properties and that can be read by the browser.", "In very few words, .css files define the properties (fonts properties, sizes, colors, backgounds, \u2026) of html components, also used by Dash.", "The App will start applying the layout properties to the corresponding html components, reading them from the .css files stored in the \u201cassets\u201d folder of the app.", "It is important to note that: if the properties for the same html component (eg. a H2 html title font family) is defined in multiple .css files, the last one read by the app will be applied (let\u2019s ignore the !important css suffix for now).", "CSS properties can also be defined by creating some custom \u201cclass\u201d, then assigned to the html components (like a div) we want to style.", "In my example, I\u2019ve used 3 .css files, which I\u2019ve named with some leading numbers to ensure that they are read by the app in a specific order:", "I\u2019ve seen that many Plotly Dash examples use a basic .css template (https://codepen.io/chriddyp/pen/bWLwgP.css): this is not a requirement for the app and I chose not to use it for my dashboard (I\u2019ve used the official .css Bootstrap file, instead).", "CSS Boostrap provides a lot of predefined .css properties, classes and layout features we can reuse. CSS Bootstrap is famous for the known \u201cgrid systems\u201d which helps to scale websites pages depending on the device sizes used.", "In short, we can think of our webpage as a table of rows and up to 12-columns: our html components can be placed inside this grid, which will have a dynamic size, according to the screen of the device it is displayed on.", "I think this helped me a lot to obtain the layout I had in mind, which looked like the following:", "I\u2019ve started thinking about the layout from the different sections (the \u201crows\u201d of my page), and then picturing in my mind the different columns of the dashboard.", "I\u2019ve assumed that, like in a business scenario, some colours are already part of the corporate visual identity (in this case a sort of green palette with some pink elements) and I\u2019ve picked a nice font-family called Dosis.", "After that, I\u2019ve been creating the scheme in the picture, with the different placeholders and the columns Bootstrap .css classes I\u2019ve used.", "Within the CSS Bootstrap grid system, different .div elements are nested, each with its class, starting from a row and then one or more columns. CSS Bootstrap has different columns classes, from col-1 to col-12, meaning that we can have the dynamic column width we wish, starting from a column which will be a 1/12 of the max width, till a column which will use the full width available (12/12). Within each column, it is possible to nest another row-columns sequence of .Div.", "All these classes can be assigned to the html.Div([]) elements, within their className property.", "This system helps to keep each section of the dashboard in order, with a designated area for each Dash component that is also dynamic to the screen used.", "For instance, the following structure has been used to style the header, the navbar and the filters.", "The filters section consists of the following components:", "Externally, we have a row and column div:", "Within the 12-col Div column, we have another \u201crow\u201d div containing the following set of columns:", "Once the layout is defined, the next challenge, from a user-interface perspective, is to properly style each Dash component, such as date ranges (dcc.DatePickerRange), dropdown filters(dcc.Dropdown), etc.", "All of these components have a \u201cstyle\u201d property, where we can define the css properties we want to style, such as font-size, colour, white-space, and many more. Most of the layout enhancements we want to achieve, can be achieved defining the right css property, within the \u201cstyle\u201d of the Dash component. However, I faced different challenges in styling some features of these components, which seems inaccessible from their \u201cstyle\u201d properties. I\u2019ve read similar challenges online from many different users, wondering how to style certain feature or detail of these components.", "I think the main challenge here is to identify what\u2019s the right CSS property that is used by Dash. There\u2019s in fact a method to point and click, or \u201cinspect\u201d each element on the page, and unveil the CSS property it is defined by.", "We can in-fact run the app in the browser, right-click on the page and choose \u201cInspect\u201d: this will pop-up a window, on the right-side of the page, where we can navigate through the html and css code of the page. At the top of the page, we can click on this tool", "We can finally hover on the element we want to style and get all its CSS classes and properties to understand what to change / redefine.", "A DatePickerRange by default look like this:", "We can change the component layout from the \u201cstyle\u201d property and define the font-size, add a border with some colour, etc. But how to modify that arrow that separates the start date from the end date ? How to change the green colours highlighting the selected days or around the helper icon?", "These elements seem unreachable from the \u201cstyle\u201d property and we have to use a different method to change their layout properties. Within the browser, if we inspect and select the arrow, we\u2019ll see something like that:", "This component is using some CSS classes, that we can modify by adding some code into our custom CSS file, forcing the arrow to a new size:", "Similarly, we can unveil how the change the calendar style by inspecting the calendar selection:", "By analysing this element, it seems that \u201c.CalendarDay__selected\u201d is the CSS class for the date extremes that are selected, while \u201c.CalendarDay__selected_span\u201d is the CSS class used for all the days in between the two extremes. It is possible to use these classes to change the background colours of the calendar (and to define some layout modifications when hovering the mouse on the different days). I\u2019ve added the code below to the custom CSS file:", "(\u201c!important\u201d overrides any other layout definition for the same CSS element or class).", "Another element which I found difficult to style was the DataTable that I used in the recap section at the top of the dashboard.", "DataTables have, by default, a feature that enables to select a cell, making it appear in a pink/red background colour. Additionally, by using the default CSS Bootstrap file, a default setting will change the background colour to white for all the table rows we hover on.", "I wanted to really change these two default properties which were clashing with my overall layout.", "First of all, the selectable cell is not actually a CSS property but a component property which can be disabled: adding \u201ccell_selectable = False\u201d within the creation of the DataTable removes this functionality.", "In order to change the row hovering colour, with the method explained before we can see that DataTable rows are actually <tr> </tr> html elements, with no particular CSS class associated.", "In order to customize the background colour when hovering on rows, I\u2019ve added the following on the custom CSS file:", "Once the dashboard layout has been defined and the chart and filter components have been placed on the page, let\u2019s move to the callbacks.", "I\u2019ll go through some examples of Callbacks, focusing on the most troublesome that I\u2019ve used.", "Dashboards very often include one or more dropdown filters, allowing the user to select one or multiple values at the same time.", "In very simple cases, there shouldn\u2019t be any Callback \u201cbehind\u201d the dropdown component: the user selects one or more dropdown options; the selected values are normally \u201cinputs\u201d for other callbacks that adjust what\u2019s presented on charts.", "However, in more complex cases, we may want to have a multi-dropdown selection, where the options of a second dropdown depend on the selections of the first dropdown. In the example that I\u2019ve created, I have a country dropdown and a city dropdown: the city dropdown options, definitely depend on the country that has already been chosen.", "To add some more complexity, I\u2019ve noticed there is not an out-of-the-box feature, in Dash, to \u201cSelect All\u201d. Especially in those cases where the dropdown options are long lists, it is highly recommended to add a way to \u201cSelect All\u201d, otherwise we would need to enter one by one all the options every time we want to analyse all values. Additionally, I also wanted to configure the dashboard in a way that \u201cno selection\u201d (ie. leave the dropdown blank) means that all options are considered.", "In order to achieve all the features described here, I\u2019ve followed the steps listed right below.", "First of all, I\u2019ve created a list of options for each of the Dropdown components. The data that I randomly created has the \u201cCountry\u201d information on one column, and the \u201cCity\u201d information on another. I\u2019ve simply created two unique lists, one for all possible cities and one for all possible countries and I\u2019ve added a \u201c(Select All)\u201d entry, which I wanted to have at the top of the option list.", "Next, I\u2019ve included the Dropdown component on the page layout, simply specifying the \u201cmulti\u201d property:", "I\u2019ve then defined a callback that takes as input the list of values (selections) from the first Dropdown and returns, as output, the list of options of the second Dropdown.", "Given that the list of options depends on the values, I\u2019ve generated a dictionary where each key is a possible value of the first dropdown, and each value is a list of all possible options of the second dropdown. The result looks like the following:", "{Brasil : [Fortaleza, Rio De Janiero, Sao Paulo],", "To finalize the Callback, some key considerations are:", "As a first step, I\u2019ve created a variable (isselect_all), useful to determine if the user has left the first dropdown blank, or if the user chose \u201cSelect All\u201d, or neither of these two possibilities.", "In the first two cases, the callbacks simply returns a sorted list of all possible cities. Otherwise, the user is picking one or more countries individually, therefore I\u2019m using the previously created dictionary (that I named repo_groups_l1_l2) to calculate a sorted list of all possible cities.", "Among all possible charts, Heatmaps are ideal whenever we\u2019d like to plot 3 dimensions and show seasonality or patterns in data. For instance, I\u2019ve included a heatmap to show sales trend across the year (week number in my case) and day of the week, to see if there is any seasonality on these two dimensions.", "The weekdays will be on the x-axis, the calendar week numbers will be on the y-axis; each cell will be colored depending on the sale volumes. The heatmap will also need to respond to filters (based on dates and on the city and country dropdowns).", "First of all, let\u2019s include a placeholder for the heatmap within the dash layout. In the below code, the headtmap will be in the last column with the id \u201csales-weekly-heatmap\u201d:", "Then, let\u2019s move to the callback, which will have:", "In the data preparation part, I had to include some statements to handle the \u201cSelect All\u201d for both the dropdown selections. In case the user has chosen this option from the dropdown, the dataframe doesn\u2019t need to be filtered by country/city; otherwise, only the values selected by user will be considered from the initial complete dataframe:", "I\u2019ve then filtered the dataframe by stard and end date and finally aggregated it by week number and weekday:", "In order to draw some nice and consistent charts, across the dashboard, I\u2019ve created a go.Layout() variable (named corporate_layout) at the top of the callback file. This layout variable includes a lot of properties that are almost all the same across all dashboard charts (chart transparent background, font family, title font size, gridlines, zerolines, overall height, legend syle, margins, \u2026).", "Inside each chart callbacks, a new fig = go.Figure(data=data, layout=corporate_layout) is defined. This allows then to update the fig layout (via this command: fig.update_layout()) to adapt the corporate_layout and include the chart title and the axis titles.", "With this approach, the main layout of the chart is defined only once: this helps keeping the code clean, but also flexible; i.e. in order to change all charts height, we simply need to adjust one variable in the whole code.", "Regarding the \u201cdata\u201d component of the go.Figure, I\u2019ve used a go.Heatmap(), including a colorscale, which I\u2019ll describe right below.", "Plotly heatmap includes some standard colorscales we can choose from, or we can assign a custom created one.", "Plotly provides some instructions (available here) to create a custom colorscale. The colorscale that I\u2019ve used look like this : a list of 11 colors that are used by the heatmap according to the percentile of each datapoint.", "In order to generate colors in some gradient sequence, I\u2019ve created a function that takes as input the amount of colors we need to generate and the RGB values of two colors: one will be the \u201cstarting point\u201d and the other will be the \u201ctarget point\u201d. The function, for each color, increments the RGB values of the same amount, reaching the target one. It is a very simplistic approach, but this function serves the purpose:", "We can finally add the colorscale to the Heatmap to unveil some seasonality : as we can see, sales seem to decrease between week 10 and 20; then they started to increase reaching again the same levels by week 25+. We don\u2019t have a significant seasonality within the days of the week.", "Within Dash, hovertemplates can be defined to specify what data is shown in what format, when the user hovers the mouse on the datapoints.", "It may be useful to include additional information in the hovertemplate, besides the data which is already used by the chart (x and y value, for instance). Plotly official documentation provides useful alternatives: I am going to present the one that I found most effective.", "In the chart below, I\u2019ve created a stacked bar-chart, where every country is represented by each vertical bar, showing the sales as the sum of each city individual sales. When hovering, I also wanted to show the information about the total target as opposed to the sales:", "The \u201ctarget\u201d by city is an information present in the datasource, but it is something which is not shown in the chart: where is the hover-template taking this info?", "The approach I followed is to basically create, within the dataframe used by the chart, a new column containing all info I wanted to present in the hovertemplate:", "Plotly hovertemplate requires some html formatting: \u201c<i> </i>\u201d for instance means that the content will be italic; \u201c<extra> </extra>\u201d is used to remove the trace name of the datapoint. Values are formatted with the d3-format\u2019s syntax (as explained by Plotly here): \u201c{:,d}\u201d is used to include thousand\u2019s separators (in case you\u2019re wondering how that would work for other value types: percentages with 2 decimals can be formatted like this: \u201c{:.2%}\u201d; dates can be formatted like: \u201c{x|%a, %d-%b-%Y}\u201d.", "Once we have the hovertext within the data, we can use it in the chart, just by assigning the dataframe column to the chart hovertemplate.", "Dashboards created via Dash can be deployed as Flask application. Heroku is definitely one of the most effective ways to make the application available online (and for free).", "The guide I used to get this app deployed is very well explained through this video, including a list of approx. 15 steps to get this app online.", "Plotly Dash is definitely a fun and very powerful Python library: I have been looking for a quick way to get repeatable analysis automated and very well presented and this definitely served the purpose!", "With Python knowledge, some html & css experience, I was able to realize this dashboard during spare time in few weeks: I must say that embodying CSS Bootstrap to the layout made the difference and definitely allowed to build an underlying \u201cgrid\u201d that allows to control very easily every section of the dashboard in the way I wanted to be.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Constant Learner, passionate about data analytics, ML and data visualization. Interested in work, tech, music & guitar"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe1829e238fc5&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e1829e238fc5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e1829e238fc5--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://gabri-albini.medium.com/?source=post_page-----e1829e238fc5--------------------------------", "anchor_text": ""}, {"url": "https://gabri-albini.medium.com/?source=post_page-----e1829e238fc5--------------------------------", "anchor_text": "Gabriele Albini"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F93c18fcb4ee6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&user=Gabriele+Albini&userId=93c18fcb4ee6&source=post_page-93c18fcb4ee6----e1829e238fc5---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe1829e238fc5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe1829e238fc5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/hands-on-tutorials", "anchor_text": "Hands-on Tutorials"}, {"url": "https://github.com/gabri-al/corporate-dashboard", "anchor_text": "Git"}, {"url": "https://corporate-dash.herokuapp.com/", "anchor_text": "Heroku"}, {"url": "https://corporate-dash.herokuapp.com/", "anchor_text": "https://corporate-dash.herokuapp.com/"}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#ab91", "anchor_text": "1. Dashboard Objectives"}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#b13a", "anchor_text": "2. Getting started with Dash"}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#059c", "anchor_text": "3. Configuring the folder structure for a multi-page dashboard"}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#4adb", "anchor_text": "4. Conceptualizing the layout with the CSS Bootstrap Grid system"}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#469c", "anchor_text": "4.1 Building the layout framework with CSS Bootstrap"}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#0767", "anchor_text": "4.2 Styling Dash components accessing to their CSS classes"}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#f8c5", "anchor_text": "5. Callbacks & Components"}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#b179", "anchor_text": "5.1 Multi dropdown filter : how to have a \u201cSelect All\u201d option"}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#a4a9", "anchor_text": "5.2 Unveiling seasonality patterns with Heatmaps"}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#0d77", "anchor_text": "5.3 Providing additional information when hovering on data points"}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#fd73", "anchor_text": "6. How to deploy and share the dashboard"}, {"url": "http://medium.com/gabri-albini/create-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5#9a04", "anchor_text": "7. Conclusions"}, {"url": "https://dash.plotly.com/", "anchor_text": "https://dash.plotly.com/"}, {"url": "https://towardsdatascience.com/how-to-build-a-complex-reporting-dashboard-using-dash-and-plotl-4f4257c18a7f", "anchor_text": "https://towardsdatascience.com/how-to-build-a-complex-reporting-dashboard-using-dash-and-plotl-4f4257c18a7f"}, {"url": "https://dash.plotly.com/urls", "anchor_text": "https://dash.plotly.com/urls"}, {"url": "https://getbootstrap.com/docs/3.4/getting-started/", "anchor_text": "website"}, {"url": "https://codepen.io/chriddyp/pen/bWLwgP.css", "anchor_text": "https://codepen.io/chriddyp/pen/bWLwgP.css"}, {"url": "https://plotly.com/python/reference/heatmap/#heatmap-colorscale", "anchor_text": "available here"}, {"url": "https://plotly.com/python/hover-text-and-formatting/", "anchor_text": "official documentation"}, {"url": "https://plotly.com/python/reference/scatter/#scatter-hovertemplate", "anchor_text": "here"}, {"url": "https://www.youtube.com/watch?v=b-M2KQ6_bM4", "anchor_text": "this video"}, {"url": "https://medium.com/tag/dash?source=post_page-----e1829e238fc5---------------dash-----------------", "anchor_text": "Dash"}, {"url": "https://medium.com/tag/python?source=post_page-----e1829e238fc5---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/dashboard?source=post_page-----e1829e238fc5---------------dashboard-----------------", "anchor_text": "Dashboard"}, {"url": "https://medium.com/tag/css?source=post_page-----e1829e238fc5---------------css-----------------", "anchor_text": "CSS"}, {"url": "https://medium.com/tag/hands-on-tutorials?source=post_page-----e1829e238fc5---------------hands_on_tutorials-----------------", "anchor_text": "Hands On Tutorials"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe1829e238fc5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&user=Gabriele+Albini&userId=93c18fcb4ee6&source=-----e1829e238fc5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe1829e238fc5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&user=Gabriele+Albini&userId=93c18fcb4ee6&source=-----e1829e238fc5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe1829e238fc5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e1829e238fc5--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe1829e238fc5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e1829e238fc5---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e1829e238fc5--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e1829e238fc5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e1829e238fc5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e1829e238fc5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e1829e238fc5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e1829e238fc5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e1829e238fc5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e1829e238fc5--------------------------------", "anchor_text": ""}, {"url": "https://gabri-albini.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://gabri-albini.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Gabriele Albini"}, {"url": "https://gabri-albini.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "108 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F93c18fcb4ee6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&user=Gabriele+Albini&userId=93c18fcb4ee6&source=post_page-93c18fcb4ee6--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fb8b488814e5d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-professional-dasbhoard-with-dash-and-css-bootstrap-e1829e238fc5&newsletterV3=93c18fcb4ee6&newsletterV3Id=b8b488814e5d&user=Gabriele+Albini&userId=93c18fcb4ee6&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}