{"url": "https://towardsdatascience.com/a-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7", "time": 1683009355.964833, "path": "towardsdatascience.com/a-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7/", "webpage": {"metadata": {"title": "A Practical Guide to Getting Set-up with PostgreSQL \ud83d\udc18 | by Emile Gill | Towards Data Science", "h1": "A Practical Guide to Getting Set-up with PostgreSQL \ud83d\udc18", "description": "Getting started with PostgreSQL, pgAdmin and SQLAlchemy for Python. Incorporate SQL into the heart of your Python projects."}, "outgoing_paragraph_urls": [{"url": "https://www.dataquest.io/blog/why-sql-is-the-most-important-language-to-learn/", "anchor_text": "this", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/the-most-in-demand-skills-for-data-scientists-4a4a8db896db", "anchor_text": "this", "paragraph_index": 0}, {"url": "https://learnsql.com/blog/four-reasons-aspiring-data-scientists-must-learn-sql/", "anchor_text": "this", "paragraph_index": 0}, {"url": "https://www.datacamp.com/", "anchor_text": "DataCamp", "paragraph_index": 2}, {"url": "https://www.dataquest.io/", "anchor_text": "DataQuest", "paragraph_index": 2}, {"url": "https://www.compose.com/articles/what-postgresql-has-over-other-open-source-sql-databases/", "anchor_text": "What PostgreSQL has over other open source SQL databases", "paragraph_index": 3}, {"url": "https://www.pgadmin.org/", "anchor_text": "here", "paragraph_index": 4}, {"url": "https://www.postgresqltutorial.com/postgresql-server-and-database-objects/", "anchor_text": "this", "paragraph_index": 6}, {"url": "https://www.pgadmin.org/docs/pgadmin4/3.x/managing_database_objects.html", "anchor_text": "pgAdmin documentation", "paragraph_index": 6}, {"url": "https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide", "anchor_text": "European Centre for Disease Prevention and Control,", "paragraph_index": 7}, {"url": "https://opendata.ecdc.europa.eu/covid19/casedistribution", "anchor_text": "here", "paragraph_index": 7}, {"url": "https://www.sqlalchemy.org/", "anchor_text": "documentation", "paragraph_index": 12}, {"url": "https://www.tutorialspoint.com/sqlalchemy/index.htm", "anchor_text": "this tutorial", "paragraph_index": 12}, {"url": "https://docs.sqlalchemy.org/en/13/intro.html#installation-guide", "anchor_text": "official installation guide", "paragraph_index": 15}, {"url": "https://docs.sqlalchemy.org/en/13/core/engines.html#database-urls", "anchor_text": "here", "paragraph_index": 17}, {"url": "http://emilegill.com", "anchor_text": "emilegill.com", "paragraph_index": 39}], "all_paragraphs": ["As current, or aspiring, data professionals, we are often reminded of the importance of having a solid grounding in SQL (if you\u2019re not convinced, check out this, this and this).", "Although, perhaps, less glamorous a skill to flaunt than Python, or machine learning, you\u2019d be hard-pressed to find a Data Science job advert that didn\u2019t reference SQL (see above chart). That said, with multiple flavours of the language to choose from, and many different tools through which we can interact with databases, it can be difficult to know where to get started when learning SQL.", "While it may be tempting to attempt to learn SQL through online courses with embedded IDEs such as DataCamp or DataQuest, the real learning process comes when we are able to play and experiment with our own personal projects. To do this, we must be able to: set up our own database, load in relevant datasets, and query our data. The aim of this post is to demonstrate how, in a matter of minutes, we can get set-up to do all of these things.", "There are an array of database management systems (DBMS) available to choose from, notably: PostgreSQL, MySQL, Oracle, SQL Server, SQLite. Here we will use PostgreSQL: a popular, open-source solution (What PostgreSQL has over other open source SQL databases).", "During the installation, make sure to keep the box for pgAdmin 4 ticked; this will be an important addition to our set-up. If you need to install pgAdmin separately you can do so here.", "pgAdmin is a management tool for Postgres; it essentially sits on top of our PostgreSQL installation and provides an elegant GUI for us to visualise and interact with database objects. Once we have installed Postgres and pgAdmin (as detailed above) we can go ahead and open pgAdmin 4 to see for ourselves. It should pop-up in a browser window and will prompt us to set a master password if this is the first time we are using it.", "As we can see, there is one Server available for us to connect to, corresponding to our local PostgreSQL 12 installation. Within this, we can see the default \u201cpostgres\u201d database and a nested list of its comprising database objects. We don\u2019t need to worry too much about what all these objects are for the purposes of our set-up, but this article does a pretty good job of explaining the basic concepts, and the pgAdmin documentation goes into more detail.", "Let\u2019s now create a new database and try to import some data so we can get started querying it. We will assume no prior knowledge of SQL commands and so, for now, we will use pgAdmin\u2019s user interface to interact with PostgreSQL. To keep topical we will use the Covid-19 Geographic Case Distribution dataset provided by the European Centre for Disease Prevention and Control, which can be found here as a CSV.", "Creating a database is as simple as right-clicking the \u2018Databases\u2019 object, selecting \u2018Create\u2019 followed by \u2018Database\u2019, and choosing an appropriate name. Equivalently we can create a table by right-clicking the \u2018Tables\u2019 object. The only difference now being that we need to specify the names and data types of each column in our table. It\u2019s important that we match the order of our columns with the order in the dataset we intend to import, though the names do not necessarily have to be the same.", "Now that we have created our database and a table to house our CSV dataset, we can go ahead import it. Right-clicking the table object that we just created we can select the \u2018Import/Export\u2019 dialog, specifying that we want to Import data, selecting our chosen file and letting pgAdmin know that the data has a header that we want to skip when importing.", "We now have everything we need to get started querying the data for our project. Navigating to the very top of the window, we can select the \u2018Tools\u2019 menu, followed by the \u2018Query Tool\u2019 option. This will open up a new tab in our window where we can compose our SQL code and execute it, in order to see the data output. We even have the option to download this output as a CSV file.", "Now that we have a basic set-up, allowing us to interact with our PostgreSQL database using the pgAdmin GUI, let\u2019s take a look at how we can extend this further. In the next section, we will see how we can programmatically interact with PostgreSQL databases: a more practical way of embedding Postgres into the heart of our projects.", "SQLAlchemy is a neat library for Python: self-proclaimed as \u201cThe Database Toolkit for Python\u201d, it enables us to access the functionality of our databases in a clean, Pythonic way. The full extent of what we can do with SQLAlchemy is beyond this set-up, but the official documentation and this tutorial should be plenty to get started with if you\u2019re interested in exploring it further. Here we will look at how we can use SQLAlchemy to run raw SQL commands to our database within a Python script, as well as loading in data from a pandas Dataframe.", "Let\u2019s start by attempting to replicate the process above of creating a table and loading in our CSV dataset. The SQL command for creating a table is simple; all we need to provide is a table name and a list of all the columns we want to be included in our table, along with their corresponding data type:", "The addition of DROP TABLE IF EXISTS means that if our worldwide_cases table already exists then we will drop, i.e. remove, it before running the CREATE TABLE command.", "To run these SQL commands from within a Python script, we will first need to install SQLAlchemy, this can be done simply through pip with pip install SQLAlchemy . For alternative methods of installation check out the official installation guide.", "We can now connect to our Postgres database using SQLAlchemy\u2019s create_engine function:", "The connection_uri string that we pass to create_engine is what lets SQLAlchemy know where to find our database, and is composed using the general structure given above. First we let SQLAlchemy know that we are working with \u2018postgres\u2019 and not some other flavour of SQL. We then pass our \u2018username\u2019 and \u2018password\u2019 (unless you have specifically created a new user then you can use the default username \u2018postgres\u2019 and the password which you initially set). The values of \u2018host\u2019 and \u2018port\u2019 determine the server on which the database is running; given that we have installed Postgres locally this will most likely be the default of localhost:5432. Finally, we specify the name of the database which we are attempting to connect to. For more information on constructing the URI, you can find the documentation here.", "Once we have created an engine instance for our database, we can execute SQL commands simply using the following:", "Putting all of this together we can write a create_table.py script which will connect to our database and execute the required SQL commands from our create_table.sql file:", "We should now have a blank table named worldwide_cases in our covid-19 database (which will have overwritten the table we created earlier if you followed along in the last section). You can verify this in pgAdmin by right-clicking on the database and selecting \u201cRefresh\u201d, which should then enable us to see the table nested under \u201cSchemas/public/Tables\u201d. Or, alternatively, by opening the Query Tool and running the command SELECT * FROM worldwide_cases .", "Now let\u2019s load some data into our table!", "Loading data couldn\u2019t be simpler using SQLAlchemy in conjunction with the familiar pandas library. We can use the df.to_sql() method of pandas DataFrame class to directly load data into a specified table:", "We specify the name of the table we wish to populate, as well as a SQLAlchemy engine connecting us to our database. We can also stipulate the behaviour in the case that the table already exists with the if_exists argument. In our case, since our table has already been set up, we will \u2018append\u2019 our DataFrame to the table. We could, however, also have set the value to \u2018fail\u2019, which would raise an exception in our code if the table already exists, or \u2018replace\u2019, in which case the table is dropped and recreated from the data.", "In fact, we didn\u2019t need to go to the trouble of creating a table in advance in the previous section. It was a worthwhile demonstration of how we can run raw SQL commands using SQLAlchemy; however, we could have simply run our df.to_sql() command and the table would have been magically created for us. We can specify the data types of the columns in our table using the dtype argument which takes a dictionary of the column names and SQL data types akin to how we specified them in our CREATE TABLE command. If we don\u2019t specify this, pandas will infer the datatypes from the data in our DataFrame.", "The full script to load our dataset into our worldwide_cases table is outlined below:", "The only addition here is a few lines to rename the columns of our CSV dataset in line with the column headers we chose in our table. I have used a bit of SQLAlchemy trickery, offering a nice demonstration of how it can be used to access database objects in a Pythonic way. Importing the MetaData and Table classes, we can instantiate a table object, reflecting our worldwide_cases table; from this, we can access its columns attribute. This was just a shortcut to save writing out a list of all the column names again, but we could have equivalently passed df.columns = list_of_column_names, so feel free to do that if you\u2019d prefer.", "Finally, we can recreate the last part of the procedure we demonstrated in pgAdmin: querying our dataset.", "Say we were interested in exploring which countries currently have the highest total number of cases, we might produce a query similar to the one below.", "We saw above that we could run raw SQL commands through SQLAlchemy to create a table. Let\u2019s try this with our SELECT query and see what happens:", "Running the above script to execute our SQL query and store the results (which can be accessed as a list using the fetchall() method), returns the following output:", "We now have a tuple-like object for each row in our dataset, which we can parse and manipulate in whatever way we like to incorporate this data into our Python script. This is great; exactly what we needed. Although, wouldn\u2019t it be nice if we could get the data straight into a pandas DataFrame, without any prior manipulation? Well, we\u2019re in luck. In the same way that pandas offers a df.to_sql() method of loading data into a database, we can also use it\u2019s pd.read_sql() to execute queries through our database connection.", "The pd.read_sql() method is actually a combination of two separate methods: pd.read_sql_table() and pd.read_sql_query(). The former taking its first argument as the name of the table we wish to read, and the latter a SQL query. Hence, with pd.read_sql() we can supply either, depending on whether we want to read a single table or perform a query. Let\u2019s now go ahead and put this into practice to execute our above query.sql query:", "We now have a neat DataFrame object of our query results, giving us immediate access to the suite of resources pandas offers for manipulating data:", "The purpose of this post was to demonstrate a simple set-up enabling us to get started learning SQL and give us the freedom to use it within our own projects and data exploration. We now have PostgreSQL installed on our system, pgAdmin to interact with it via a GUI, and we have seen that we can use SQLAlchemy to load and query data from within a Python script.", "Now it\u2019s your turn: go and learn more about SQL and what it is capable of, interrogate datasets of your choice to find insights, and immerse PostgreSQL into the heart of your Python projects!", "All the source code for this blog can be found here:", "If you enjoyed this post, feel free to check out some of my other articles:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Engineer @ Skyscanner | emilegill.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fa1bf37a0cfd7&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@emilegill743?source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@emilegill743?source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": "Emile Gill"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F52b1a8846410&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&user=Emile+Gill&userId=52b1a8846410&source=post_page-52b1a8846410----a1bf37a0cfd7---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa1bf37a0cfd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa1bf37a0cfd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@bepnamanh?utm_source=medium&utm_medium=referral", "anchor_text": "Nam Anh"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.dataquest.io/blog/why-sql-is-the-most-important-language-to-learn/", "anchor_text": "this"}, {"url": "https://towardsdatascience.com/the-most-in-demand-skills-for-data-scientists-4a4a8db896db", "anchor_text": "this"}, {"url": "https://learnsql.com/blog/four-reasons-aspiring-data-scientists-must-learn-sql/", "anchor_text": "this"}, {"url": "https://www.dataquest.io/blog/why-sql-is-the-most-important-language-to-learn/", "anchor_text": "Want a Job in Data? Learn SQL\u201d, DataQuest Blog"}, {"url": "https://www.datacamp.com/", "anchor_text": "DataCamp"}, {"url": "https://www.dataquest.io/", "anchor_text": "DataQuest"}, {"url": "https://wiki.postgresql.org/wiki/File:PostgreSQL_logo.3colors.svg", "anchor_text": "https://wiki.postgresql.org/wiki/File:PostgreSQL_logo.3colors.svg"}, {"url": "https://www.compose.com/articles/what-postgresql-has-over-other-open-source-sql-databases/", "anchor_text": "What PostgreSQL has over other open source SQL databases"}, {"url": "https://www.postgresql.org/", "anchor_text": "here"}, {"url": "https://www.pgadmin.org/", "anchor_text": "here"}, {"url": "https://www.postgresqltutorial.com/postgresql-server-and-database-objects/", "anchor_text": "this"}, {"url": "https://www.pgadmin.org/docs/pgadmin4/3.x/managing_database_objects.html", "anchor_text": "pgAdmin documentation"}, {"url": "https://www.ecdc.europa.eu/en/publications-data/download-todays-data-geographic-distribution-covid-19-cases-worldwide", "anchor_text": "European Centre for Disease Prevention and Control,"}, {"url": "https://opendata.ecdc.europa.eu/covid19/casedistribution", "anchor_text": "here"}, {"url": "https://unsplash.com/@art_maltsev?utm_source=medium&utm_medium=referral", "anchor_text": "Artem Maltsev"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.sqlalchemy.org/", "anchor_text": "documentation"}, {"url": "https://www.tutorialspoint.com/sqlalchemy/index.htm", "anchor_text": "this tutorial"}, {"url": "https://docs.sqlalchemy.org/en/13/intro.html#installation-guide", "anchor_text": "official installation guide"}, {"url": "https://docs.sqlalchemy.org/en/13/core/engines.html#database-urls", "anchor_text": "here"}, {"url": "https://unsplash.com/@wolfgang_hasselmann?utm_source=medium&utm_medium=referral", "anchor_text": "Wolfgang Hasselmann"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/emilegill743/postgres-setup", "anchor_text": "emilegill743/postgres-setupGetting started with PostgreSQL, pgAdmin and SQLAlchemy for Python. - emilegill743/postgres-setupgithub.com"}, {"url": "https://towardsdatascience.com/finding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe", "anchor_text": "Finding a grocery delivery slot, the smart wayUsing Python, Heroku and Twilio to scrape data from a grocery website\u2019s API and get a text notification when slots\u2026towardsdatascience.com"}, {"url": "https://medium.com/tag/postgres?source=post_page-----a1bf37a0cfd7---------------postgres-----------------", "anchor_text": "Postgres"}, {"url": "https://medium.com/tag/sql?source=post_page-----a1bf37a0cfd7---------------sql-----------------", "anchor_text": "Sql"}, {"url": "https://medium.com/tag/python?source=post_page-----a1bf37a0cfd7---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----a1bf37a0cfd7---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----a1bf37a0cfd7---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa1bf37a0cfd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&user=Emile+Gill&userId=52b1a8846410&source=-----a1bf37a0cfd7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa1bf37a0cfd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&user=Emile+Gill&userId=52b1a8846410&source=-----a1bf37a0cfd7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa1bf37a0cfd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fa1bf37a0cfd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----a1bf37a0cfd7---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----a1bf37a0cfd7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@emilegill743?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@emilegill743?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Emile Gill"}, {"url": "https://medium.com/@emilegill743/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "84 Followers"}, {"url": "http://emilegill.com", "anchor_text": "emilegill.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F52b1a8846410&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&user=Emile+Gill&userId=52b1a8846410&source=post_page-52b1a8846410--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd55e0ccbd656&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-practical-guide-to-getting-set-up-with-postgresql-a1bf37a0cfd7&newsletterV3=52b1a8846410&newsletterV3Id=d55e0ccbd656&user=Emile+Gill&userId=52b1a8846410&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}