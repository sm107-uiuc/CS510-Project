{"url": "https://towardsdatascience.com/pytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0", "time": 1683012330.875593, "path": "towardsdatascience.com/pytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0/", "webpage": {"metadata": {"title": "Pytorch Lightning AI ML Tutorial Medium | Towards Data Science", "h1": "Pytorch Lightning Machine Learning Zero To Hero In 75 Lines Of Code", "description": "Pytorch Lightning has features that will drastically reduce your development time. Once you understand the Basics your efficiency will increase magically. Under the hood, Lightning is still Pytorch\u2026"}, "outgoing_paragraph_urls": [{"url": "https://arxiv.org/abs/1506.01186", "anchor_text": "Cyclical Learning Rates for Training Neural Networks", "paragraph_index": 21}, {"url": "https://github.com/davidtvs/pytorch-lr-finder", "anchor_text": "https://github.com/davidtvs/pytorch-lr-finder", "paragraph_index": 21}, {"url": "https://twitter.com/san_sluck", "anchor_text": "Twitter", "paragraph_index": 29}, {"url": "https://www.linkedin.com/in/sandro-luck-b9293a181/", "anchor_text": "LinkedIn", "paragraph_index": 29}, {"url": "https://www.youtube.com/channel/UCHD5o0P16usdF00-ZQVcFog?view_as=subscriber", "anchor_text": "YouTube", "paragraph_index": 30}], "all_paragraphs": ["Pytorch Lightning has features that will drastically reduce your development time. Once you understand the Basics your efficiency will increase magically. Under the hood, Lightning is still Pytorch but way easier and faster to work with. You do not have to worry about most things. Sit back and relax and Lightning does its work.", "NOTE: I will show in this article the CPU-based code, but will add a GPU-based version at the bottom of this article (minor differences)", "As we can see we simply import all cool features and we are ready to go. We will look at each of them once we use it", "We will now define our own dataset, Lightning handles it from there. We could also load one from the internet, but knowing how to get our own data into the model is key!", "9 lines for your dataset, this is basically still plain Pytorch. A dataset is a class from PyTorch that allows us to leverage many benefits. All we have to do is make our class inherit from \u201cDataset\u201d. A dataset class needs minimally these 3 methods.", "Today we will build a very simple model, that will learn to predict whether the sum of all input elements is >0 or <0. This allows us to learn about Lightning with minimal cluttering around our code.", "__init__: here we initiate the dataset, we basically just create a random tensor of shape (samples, dimension). You can imagine this being a Table with 42 rows and 21000 columns, where each cell is between -1 and 1.", "__getitem__: Pytorch needs a way to retrieve the item at \u201cindex\u201d here we basically just return the \u201cindex-th\u201d item from our dataset. We then generate a label, the label here is 1 if the sum of the input elements is >0 and 0 otherwise. Eventually, we return a tuple (Features, Label) so Lightning can do its job.", "__len__: Pytorch wants to know how many samples we have in the dataset. self.dataset.size() return the dimensions of our table (42,21000) and [0] takes the 42 our of the tuple, this is our length.", "Let the games begin. We will now define a really simple but powerful model! A model in Lightning needs to inherit from \u201cLightningModule\u201d. For a Lightning model to work we need to define at least the __init__(),forward(),train_dataloader() and training_step() functions. We will even define a few more to get into some shiny features that are brighter than Zeus himself.", "__init__(): Here we basically just define a Linear-layer model with 2048 nodes in each, we will use them later in the forward step. Additionally, we define the self.lr and the self.batch_size to use Lightning auto-learning features later on. Yes, you heard right we will learn them while training!", "forward(): This is the heart and soul of our model. Here we define how the information flows through our model. We basically just call our layers in order and do a simple reshape at the end to get things consistent. Basically, the input here is one of the rows of our spreadsheet we then throw it through our pipeline, and in the end the output will be between 0 and 1.", "configure_optimizer: We define an adam optimizer, this is the thing that helps us learn. We make the learning rate tuneable such that we can learn that one too", "train_dataloader(): This function has to return a data loader. A data loader is an object that helps Pytorch feed the training samples into the model, it handles the batch size for use and saves tons of code. We simply throw the dataset we defined in 1. into it and say we will generate 43210 samples. Ah, life can sometimes be simpler than being bored in quarantine.", "The next for functions are basically a bit of repetition work for us. We define a loss function such that Adam knows what to optimize. The validation data loader is the same thing we just programmed and helps us simply getting a good comparison set so we can implement early stopping later. The rest is simply aggregating statistics for our super cool visualization.", "Congratulations the last piece of code will be your reward. We will define a simple main function to start our killer pipeline.", "Let\u2019s bring this together! First, we use the cool function seed_everything(42) this will greatly help us in making our runs more reproducible. While it doesn\u2019t make Machine Learning completely predictable, it definitely helps to eliminate most randomness.", "In this example we will use our CPU, so we don\u2019t have to spin up our machines. But running it with GPU is just as easy, I will leave the GPU code at the bottom (4 lines are different)", "Early stopping is a great mechanism to avoid overfitting with this easy call we can monitor the validation loss. As soon as the training loss and the validation loss diverge the model will stop training. We can assume then that we did neither overfit nor underfit two of the main problems in machine learning.", "After we cast the model to our CPU, we can start up our Trainer! This is basically all, we can now start to learn and fit our model. After this, we simply save our model and we are done. Let\u2019s get into the two big time-saving features, I love those two more than my beloved cat, they safe me probably a full day of work per week.", "As we can see the Early stopping hits at around 21 epochs, this is the point were further training does not reduce the validation loss any further. The Trainer simply stops there and selects that model.", "This is probably one of the most useful Machine Learning features ever discovered. No more tweaking the learning rate, no more grid searching, power at the tip of your fingers. So how does it work? We simply turn on the flag \u201cauto_lr_find = True\u201d in our Trainer and we are ready to go. What this basically does it tests several learning rates and checks which one is king. It does so by testing how much the loss decreases on a selection of batches. For more details, I can recommend the excellent paper \u201c Cyclical Learning Rates for Training Neural Networks\u201d or for a more simple and hands-on explanation this https://github.com/davidtvs/pytorch-lr-finder explains a very similar process pretty straight forward.", "Another killer feature that really can save a lot of thinking capacity. It helped me a lot figuring out what GPU can run with how many batches when working on a cluster with several different types a godsend invention. To turn it on we simply set \u201cauto_scale_batch_size=True\u201d.", "DANGER WARNING: When you run auto batch and auto-learning rate together these processes will takes ages (but it will work). So first find the ideal batch size then use the learning rate finder.", "Auto batch scaling Automatically tries to find the largest batch size that fits into memory, before any training. While with this simple example we won't hit the ceiling, once you run your serious models this will converge really fast.", "One more thing. What we coded in these 75 lines is enough for a simple visualization using tensorboard. After you ran the code a folder name lightning_logs will be created and populated with the results of our run. All we have to do is run the command tensorboard with the flag logdir and we are good to analyze what we did!", "As we can see we recorded both the validation loss and the training loss. We did this simply by returning it inside the validation_step/training_step function. The plots are made with the batches on the X-axis, we could change that by returning only the aggregated the values over epochs, inside the validation_epoch_end function.", "We saw how easy life can be. Pytorch Lightning probably one of the least effort per feature modules out there. While we did not cover all features we did look at the most important ones from my perspective. Another few honorable mentions are Half precision training, multi-GPU support, and various logging and datasets downscaling features.", "You have now the skills and knowledge to train your first model carried by the speed of lightning under your wings. Make sure to stay tuned and follow me for more productivity and performance hacks in your Machine Learning models and pipelines.", "If you enjoyed this article, I would be excited to connect on Twitter or LinkedIn.", "Make sure to check out my YouTube channel, where I will be publishing new videos every week.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I want to empower you to build the future. As a Machine Learning Engineer, I am passionate about everything in the data sphere Computer Science (MSc ETH)"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F7892f3ba83c0&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@DataWithSandro?source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@DataWithSandro?source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": "Sandro Luck (Data With Sandro)"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6b3d6b362026&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&user=Sandro+Luck+%28Data+With+Sandro%29&userId=6b3d6b362026&source=post_page-6b3d6b362026----7892f3ba83c0---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7892f3ba83c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7892f3ba83c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://arxiv.org/abs/1506.01186", "anchor_text": "Cyclical Learning Rates for Training Neural Networks"}, {"url": "https://github.com/davidtvs/pytorch-lr-finder", "anchor_text": "https://github.com/davidtvs/pytorch-lr-finder"}, {"url": "https://twitter.com/san_sluck", "anchor_text": "Twitter"}, {"url": "https://www.linkedin.com/in/sandro-luck-b9293a181/", "anchor_text": "LinkedIn"}, {"url": "https://www.youtube.com/channel/UCHD5o0P16usdF00-ZQVcFog?view_as=subscriber", "anchor_text": "YouTube"}, {"url": "https://medium.com/tag/data-science?source=post_page-----7892f3ba83c0---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----7892f3ba83c0---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/pytorch?source=post_page-----7892f3ba83c0---------------pytorch-----------------", "anchor_text": "Pytorch"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----7892f3ba83c0---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/programming?source=post_page-----7892f3ba83c0---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7892f3ba83c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&user=Sandro+Luck+%28Data+With+Sandro%29&userId=6b3d6b362026&source=-----7892f3ba83c0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7892f3ba83c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&user=Sandro+Luck+%28Data+With+Sandro%29&userId=6b3d6b362026&source=-----7892f3ba83c0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7892f3ba83c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F7892f3ba83c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----7892f3ba83c0---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----7892f3ba83c0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@DataWithSandro?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@DataWithSandro?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sandro Luck (Data With Sandro)"}, {"url": "https://medium.com/@DataWithSandro/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "853 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6b3d6b362026&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&user=Sandro+Luck+%28Data+With+Sandro%29&userId=6b3d6b362026&source=post_page-6b3d6b362026--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F9572238a79c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpytorch-lightning-machine-learning-zero-to-hero-in-75-lines-of-code-7892f3ba83c0&newsletterV3=6b3d6b362026&newsletterV3Id=9572238a79c3&user=Sandro+Luck+%28Data+With+Sandro%29&userId=6b3d6b362026&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}