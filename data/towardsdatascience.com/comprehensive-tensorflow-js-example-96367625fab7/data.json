{"url": "https://towardsdatascience.com/comprehensive-tensorflow-js-example-96367625fab7", "time": 1683000528.614197, "path": "towardsdatascience.com/comprehensive-tensorflow-js-example-96367625fab7/", "webpage": {"metadata": {"title": "Comprehensive TensorFlow.js Example | by Andrej Baranovskij | Towards Data Science", "h1": "Comprehensive TensorFlow.js Example", "description": "TensorFlow.js helps to democratize Machine Learning. The aim of this post is to get JavaScript developers up to speed quickly with TensorFlow.js implementation."}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/report-time-execution-prediction-with-keras-and-tensorflow-8c9d9a889237", "anchor_text": "Report Time Execution Prediction with Keras and TensorFlow", "paragraph_index": 0}, {"url": "https://www.manning.com/books/deep-learning-with-javascript", "anchor_text": "Deep Learning with JavaScript", "paragraph_index": 3}, {"url": "https://github.com/tensorflow/tfjs-examples/tree/master/boston-housing", "anchor_text": "Boston Housing", "paragraph_index": 3}, {"url": "https://www.oracle.com/webfolder/technetwork/jet/index.html", "anchor_text": "Oracle JET", "paragraph_index": 14}, {"url": "https://www.npmjs.com/package/papaparse", "anchor_text": "Papaparse", "paragraph_index": 16}], "all_paragraphs": ["I have implemented an app which includes TensorFlow.js API usage. First I will walk you through the app functionality and then will dive into implementation details. This app implements a business report execution time prediction use case (this time in JavaScript), which was explained in my previous post \u2014 Report Time Execution Prediction with Keras and TensorFlow.", "For the model training, I\u2019m using 50 epochs (data is processed in batches of 10) and the learning rate is set to 0.001. Neural Network is based on two processing layers and one output layer. The model training process runs in the browser:", "Application is deployed and available live here:", "Model is trained to forecast the expected wait time for business report execution. Implementation is done based on explanation and material from this excellent book \u2014 Deep Learning with JavaScript and multivariate regression example \u2014 Boston Housing.", "When you open the application for the first time, the model needs to be trained. After the model is trained, it will be saved to local indexeddb. After the browser is reopened, the model will remain available from indexeddb and you could select it to be reused or train the new model (previously saved model will be replaced).", "After the training process completes, it will print a set of variables showing model quality:", "Run predict function for the below data \u2014 result 514 seconds :", "Change time slot to the afternoon \u2014 predicted time will increase to 573 seconds. This means the model was trained correctly, based on training data \u2014 reports run longer in the afternoon:", "Increase the number of parameters. With more parameters, fewer data to process \u2014 report should run faster. The model confirms this with a prediction which returns faster time:", "Let\u2019s change report ID and number of parameters. Observe predicted time:", "Now we will do transfer learning \u2014 re-train model with new targets (in this sample for simplicity reasons I\u2019m using just one row of data, but I would recommend to re-train model with multiple rows of data). Data below wasn\u2019t included in the training set, this is a new target. Call train method \u2014 it should run very fast. Test-set loss probably will be worse (that\u2019s fine for this exercise) than based on original training, because we are using previous test set data, which doesn\u2019t directly relate with the new target. New target \u2014 400 seconds, for Report ID = 1 (assuming for the specific user time is different than the one from the training and this user can update the model). Re-training (when we train on top of the existing model \u2014 transfer learning) result:", "When the model is re-trained, run predict for the same number as before \u2014 you will see prediction result will be adjusted and equal to the target we were using for re-train:", "Now change Report ID to the one we were using initially, change the number of report parameters to the original value, along with the time slot. You will see that now we predict the shorter time, this is due to recent model retraining, where shorter time was set a target:", "Try to change parameters and see the results.", "Application structure is pretty straightforward. All the logic is implemented in appController.js. UI is implemented in index.html. Web app is implemented with Oracle JavaScript library \u2014 Oracle JET. To run the app on your local, follow these two steps:", "There is a listener defined in appController.js. When application load, this listener is invoked and it takes care of loading data, converting it to tensors and computing baseline.", "Data is loaded through the helper module \u2014 data.js. I\u2019m using Papaparse library to parse CSV. The original dataset is based on four columns:", "I noticed model doesn\u2019t train well directly from this data. Data transformation is needed for report ID and daypart columns. These columns are categorical and are transformed by creating as many new columns, as there are unique categorical values:", "This data transformation helps to run much more precise training. I\u2019m using 1200 rows of data for the training and 300 rows for testing. Make sure to shuffle data before splitting it into train and test datasets. I\u2019m using helper function for this task, taken from Boston Housing example app.", "Arrays of data are converted to tensors using TensorFlow.js function tensor2d:", "TensorFlow.js model is constructed with two processing layers and an output layer to return predicted value:", "Once the model is constructed, compile it and run fit function to train the model. I would recommend using validation split option, this way during training it will validate the quality of the training:", "Function fit provides onEpochEnd callback where we can record training progress and push data to the UI.", "Once the training is complete, evaluate the model by running it against test data. Take square root from the returned number, this will be tolerated error in seconds, based on the current model training (if the result is not tolerable, try to retrain model by changing the structure of Neural Network layers, try to adjust training params):", "At the end save the model. There are multiple options where to save the model, you can even push it to the server. In this example I save the model in indexeddb locally in the browser:", "After the model is trained, we can run predict function. I\u2019m loading model back from the saved state in indexeddb, constructing input tensor and executing TensorFlow.js predict:", "Final step \u2014 transfer learning, existing model re-training with additional data (in this case data shape is the same, we train for the new targets). To make re-training more efficient, we must freeze part of the layers from the original model. This way previously trained model weights will not be affected and model training will run faster. Normally you should run training with multiple new elements, in this case for simplicity reasons \u2014 I run training with a single new entry.", "The model layer can be frozen by setting trainable property to false:", "Run fit function with new data on top of the existing model:", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F96367625fab7&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----96367625fab7--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----96367625fab7--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://andrejusb.medium.com/?source=post_page-----96367625fab7--------------------------------", "anchor_text": ""}, {"url": "https://andrejusb.medium.com/?source=post_page-----96367625fab7--------------------------------", "anchor_text": "Andrej Baranovskij"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbbd1211c851b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&user=Andrej+Baranovskij&userId=bbd1211c851b&source=post_page-bbd1211c851b----96367625fab7---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F96367625fab7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F96367625fab7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/report-time-execution-prediction-with-keras-and-tensorflow-8c9d9a889237", "anchor_text": "Report Time Execution Prediction with Keras and TensorFlow"}, {"url": "https://regressiontfjs-node.herokuapp.com/", "anchor_text": "https://regressiontfjs-node.herokuapp.com/"}, {"url": "https://www.manning.com/books/deep-learning-with-javascript", "anchor_text": "Deep Learning with JavaScript"}, {"url": "https://github.com/tensorflow/tfjs-examples/tree/master/boston-housing", "anchor_text": "Boston Housing"}, {"url": "https://www.oracle.com/webfolder/technetwork/jet/index.html", "anchor_text": "Oracle JET"}, {"url": "https://www.npmjs.com/package/papaparse", "anchor_text": "Papaparse"}, {"url": "https://github.com/abaranovskis-redsamurai/automation-repo/tree/master/regressiontfjs", "anchor_text": "GitHub"}, {"url": "https://regressiontfjs-node.herokuapp.com/", "anchor_text": "https://regressiontfjs-node.herokuapp.com/"}, {"url": "https://medium.com/tag/tensorflowjs?source=post_page-----96367625fab7---------------tensorflowjs-----------------", "anchor_text": "Tensorflowjs"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----96367625fab7---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/programming?source=post_page-----96367625fab7---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/javascript?source=post_page-----96367625fab7---------------javascript-----------------", "anchor_text": "JavaScript"}, {"url": "https://medium.com/tag/web-development?source=post_page-----96367625fab7---------------web_development-----------------", "anchor_text": "Web Development"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F96367625fab7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&user=Andrej+Baranovskij&userId=bbd1211c851b&source=-----96367625fab7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F96367625fab7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&user=Andrej+Baranovskij&userId=bbd1211c851b&source=-----96367625fab7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F96367625fab7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----96367625fab7--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F96367625fab7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----96367625fab7---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----96367625fab7--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----96367625fab7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----96367625fab7--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----96367625fab7--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----96367625fab7--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----96367625fab7--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----96367625fab7--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----96367625fab7--------------------------------", "anchor_text": ""}, {"url": "https://andrejusb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://andrejusb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Andrej Baranovskij"}, {"url": "https://andrejusb.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.2K Followers"}, {"url": "https://github.com/katanaml", "anchor_text": "https://github.com/katanaml"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbbd1211c851b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&user=Andrej+Baranovskij&userId=bbd1211c851b&source=post_page-bbd1211c851b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd22cc5338107&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomprehensive-tensorflow-js-example-96367625fab7&newsletterV3=bbd1211c851b&newsletterV3Id=d22cc5338107&user=Andrej+Baranovskij&userId=bbd1211c851b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}