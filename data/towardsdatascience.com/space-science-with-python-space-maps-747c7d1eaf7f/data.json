{"url": "https://towardsdatascience.com/space-science-with-python-space-maps-747c7d1eaf7f", "time": 1683006912.5142798, "path": "towardsdatascience.com/space-science-with-python-space-maps-747c7d1eaf7f/", "webpage": {"metadata": {"title": "Space Science with Python \u2014 Space maps | by Thomas Albin | Towards Data Science", "h1": "Space Science with Python \u2014 Space maps", "description": "This is the 5th part of my Python tutorial series \u201cSpace Science with Python\u201d. All codes that are shown here are uploaded on GitHub. Enjoy! In our last tutorials we computed the position and velocity\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/ThomasAlbin/SpaceScienceTutorial", "anchor_text": "GitHub", "paragraph_index": 0}, {"url": "https://naif.jpl.nasa.gov/naif/toolkit.html", "anchor_text": "SPICE", "paragraph_index": 1}, {"url": "https://github.com/AndrewAnnex/SpiceyPy", "anchor_text": "spiceypy", "paragraph_index": 1}, {"url": "https://naif.jpl.nasa.gov/naif/toolkit.html", "anchor_text": "SPICE", "paragraph_index": 12}, {"url": "https://docs.python.org/3/library/datetime.html", "anchor_text": "datetime", "paragraph_index": 13}, {"url": "https://github.com/AndrewAnnex/SpiceyPy", "anchor_text": "spiceypy", "paragraph_index": 13}, {"url": "https://numpy.org/", "anchor_text": "numpy", "paragraph_index": 13}, {"url": "https://pandas.pydata.org/", "anchor_text": "pandas", "paragraph_index": 13}, {"url": "https://matplotlib.org/", "anchor_text": "matplotlib", "paragraph_index": 13}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/furnsh_c.html", "anchor_text": "furnsh", "paragraph_index": 13}, {"url": "https://docs.python.org/3/library/datetime.html#datetime.datetime.now", "anchor_text": "datetime.datetime.now()", "paragraph_index": 13}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/utc2et_c.html", "anchor_text": "utc2et", "paragraph_index": 14}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html", "anchor_text": "pandas dataframe", "paragraph_index": 15}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/req/naif_ids.html", "anchor_text": "NAIF ID code", "paragraph_index": 15}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/spkezp_c.html", "anchor_text": "spkezp", "paragraph_index": 16}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/recrad_c.html", "anchor_text": "recrad", "paragraph_index": 17}, {"url": "https://www.giss.nasa.gov/tools/gprojector/help/projections/", "anchor_text": "NASA\u2019s GISS website", "paragraph_index": 20}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/sphrec_c.html", "anchor_text": "sphrec", "paragraph_index": 29}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/pxform_c.html", "anchor_text": "pxform", "paragraph_index": 30}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/recrad_c.html", "anchor_text": "recrad", "paragraph_index": 31}, {"url": "https://stellarium.org/de/", "anchor_text": "Stellarium", "paragraph_index": 35}], "all_paragraphs": ["This is the 5th part of my Python tutorial series \u201cSpace Science with Python\u201d. All codes that are shown here are uploaded on GitHub. Enjoy!", "In our last tutorials we computed the position and velocity vectors of different celestial objects. We determined the apparent angular distance between objects (so called phase-angle) and worked on some small projects using Python and the NASA library SPICE (using the SPICE wrapper spiceypy).", "In the next couple of weeks we will learn and work together on (scientific) data and larger projects that will cover e.g.:", "Before we start with our scientific deep dives we need to cover 2 fundamental topics:", "It may sound like dry theory, but we will work closely with Python examples. With a solid knowledge fundament and understanding of both topics, in combination with SPICE and other tools that will follow, you will be prepared to achieve great scientific insights!", "A 3-dimensional coordinate system has an x, y and z component. All three components are aligned orthogonally, so the angle between all components is 90\u00b0. The orientation of the components fulfil the so called right-hand rule:", "Make a fist. Do a \u201cthumbs up\u201d with your right hand (x axis). Point the forefinger (y axis) to the front (make a \u201cpistol\u201d gesture). Now, point the middle finger away from the palm (z axis).", "Now let\u2019s take a look at the first coordinate system: The Ecliptic Coordinate System. It is widely used for Space Science and for interplanetary missions and can be applied for Solar System centred or planetary tasks. In our last tutorials I was already referring to this system as ECLIPJ2000 (SPICE naming convention).", "Let\u2019s take a look at Earth. Our planet revolves around the Sun on an imaginary plane, the so called ecliptic plane. Now, for a coordinate system, we need to define 2 axes; the third one results from the right-hand rule. The x axis is the so called Vernal Equinox: At the beginning of spring, we take the a look at the Sun. The corresponding direction is defined as the x axis (see sketch below). At this very moment, based on the direction to the Sun and the Earth\u2019s velocity vector, we get the ecliptic plane. The z axis is perpendicular to this plane (to the Ecliptic north) and the y axis results from the right-hand rule.", "Any 3-dimensional vector can be transformed to spherical coordinates that can be described by 3 parameters: the radius, the azimuth and the inclination. Projecting these values on a unit sphere (sphere with radius = 1) leads to a sky map. The following coordinates describe the position on this map:", "This means that l=0\u00b0 and b=0\u00b0 (x axis) is the Vernal Equinox point.", "Now what does J2000 mean? Due to gravitational perturbations of other planets our Earth\u2019s orbit \u201cwobbles\u201d a little bit. Consequently, the ecliptic plane changes slightly with time. To avoid a yearly or even daily reference frame update, the ecliptic plane that is being defined at the date J2000 (noon 1st January 2000) is commonly used.", "Okay, enough theory. Let\u2019s have a look at the programming part. How can we work with these reference frames? How can we compute positions on the sky? And how does SPICE helps us with that?", "Let\u2019s compute and plot a sky map with the coordinates of the Sun, Venus, Mars and our Moon. First, we need to import all necessary modules that were already introduced and used in the previous tutorials: datetime, spiceypy (SPICE wrapper), numpy, pandas and matplotlib (plotting). Before we can compute any positions, we need the SPICE kernel meta file that contains the relative paths to the relevant kernels. It contains the spk kernel de432s.bsp for the planetary positions and naif0012.tls for the time conversions and leap seconds. The meta file is loaded with furnsh. We set this very moment (datetime.datetime.now()) as the date-time object and convert it directly to a corresponding string (line 12). Please consider the following warning from the official datetime documentation if you are using .now():", "Line 15 converts the UTC string to the corresponding Ephemeris time (ET) with the SPICE function utc2et.", "For the computation a pandas dataframe is defined. This dataframe will contain all resulting coordinates of the ET respectively the UTC time (line 7+8). The positions are computed in a for-loop that iterates through a dictionary of all needed celestial bodies and their NAIF ID code (defined in line 13). Since the loaded spk kernel does not contains the planet\u2019s centre of Mars, the barycentre is used (ID: 4).", "Now, the for-loop iterates through the dictionary and computes the directional vector to each celestial object as seen from Earth (line 8\u201313). The SPICE function spkezp is used for this purpose with the following input arguments:", "Thanks to the SPICE function recrad, the direction vectors can be easily converted to spherical coordinates. The longitude and latitude values are the second and third output values, respectively. The first output value is the length (norm) of the vector and is not needed in our case.", "Now we have the coordinates of our objects. Plotting should be quite easy, right? We can create a simple matplotlib plot and we are done.", "Not so fast \u2026 A rectangular plot would be quick and dirty and there are better solutions to plot sky coordinates. If you \u201ccut a sphere\u201d and try to project its surface in 2 dimensions one has several projection options, like:", "Each projection type has its advantages and disadvantages, like representing an equal area map, but not providing correct angular measures (Mollweide). The Aitoff projection provides only a length accuracy and equal area around the meridian and equator, respectively. Hammer compensates these Aitoff issues. An extensive list of projections can be found on the NASA\u2019s GISS website. Let\u2019s have a look at an empty map with an Aitoff projection. The following Python code creates the figure below:", "You can see the latitude values range from -90\u00b0 to +90\u00b0 and the longitudes vary between -180\u00b0 and +180\u00b0. As mentioned before however, the longitude values in the Ecliptic Coordinate System range from 0\u00b0 to 360\u00b0. Further, the longitude\u2019s values count from right to left. matplotlib does not allow one to redefine the projection properties and one cannot easily invert the x axis with a formatting function. Thus, we need to create a small workaround and be a little bit creative. The following coding part shows a for-loop that iterates through all longitude values and creates a new column with longitudes \u201cfor the plot\u201d:", "All angles are given in radians. Values that are larger than pi (180\u00b0) exceed the plotting range of matplotlib. The modulo operator is applied with pi (% np.pi). The remainder is consequently between 0 and pi and should be \u201con the left side\u201d of the projection map (-180\u00b0 to 0\u00b0), so we need to subtract pi. Finally we multiply the result with -1 to invert the x axis values.", "Now we can plot the coordinates of the celestial bodies in Ecliptic coordinates. First a dark background is set (line 4) because \u2026 space is dark! Line 7 defines the figure and the line after sets the projection. We use the UTC time stamp as a title (line 11) and a simple array defines some colours (line 14) that are used in a for-loop that iterates through all celestial bodies (line 17 to 24). Line 27 to 30 redefine the x ticks and replace the matplotlib ticks with the ecliptic longitudes. Finally, the labels are set, a legend and grid are created and the plot is saved. The resulting sky map can be seen below.", "The sky map shows the Ecliptic Coordinate System and the positions of the Sun, Venus, Mars and the Moon at around 5 pm on the 5th May 2020. You can see that the planets are located close to the ecliptic plane. The Moon is almost 180\u00b0 away from the Sun. Have a look outside at the evening: It is almost Full Moon.", "Did you consider buying a telescope? It is a calm and inspiring hobby. Either in a group or alone you can explore the planets, galaxies and other cosmic wonders from your backyard (if it is not too light-polluted). But there are a lot of different telescope types and mounts. One common mount type is the so called equatorial mount. This mount is aligned with the rotation axis of the Earth and \u201crotates with the sky\u201d. Long exposure images, or visual observations without constant re-adjustments are possible with these mounts. Modern mounts have an internal clock combined with an electric motor to compensate the rotation.", "The corresponding coordinate system is the so called Equatorial Coordinate System (In SPICE it is simply called J2000 \u2026 a little bit confusing, considering that J2000 is a timestamp), where the x axis points to the Vernal Equinox direction and the z axis is the rotation axis of Earth. Earth\u2019s equator is inclined with respect to the Ecliptic plane (around 23\u00b0, see 2nd sketch at the beginning) and does not \u201coverlap\u201d with the Ecliptic Coordinate System.", "The longitude and latitude in equatorial coordinates are described as:", "Now, let\u2019s compute the equatorial coordinates for our celestial bodies of interest. We apply again a for-loop that iterates through all bodies and we apply the same functions as before to compute the directional vector and the coordinates in the Equatorial Coordinate System.", "To visualise the resulting distortion between the Ecliptic and Equatorial Coordinate System, we add the ecliptic plane in our computations. For this purpose, an additional pandas dataframe is created (line 6). Line 11 adds the longitude coordinates in ECLIPJ2000, from 0 to 2*pi (360\u00b0), as an array. Line 12 adds the latitude values. Actually, the coordinates should be 0\u00b0, in this case we need the spherical coordinate convention. Line 18 to 23 converts the spherical ecliptic coordinates to directional vectors using the SPICE function sphrec. The function needs the distance r (here: unit sphere with radius 1), the latitude (colat) and longitude (lon) values. The returned vectors are the directional vectors of the ecliptic plane in a vectorised Ecliptic Coordinate System (x, y, z components).", "In a next step we need to transform these vectors to the vectorised Equatorial Coordinate System (x, y, z components). We use the SPICE function pxform that computes a 3x3 transformation matrix between both coordinate systems. The function requires the following input:", "With the transformation matrix we can transform the vectors from ECLIPJ2000 to J2000 as shown in line 10 and 11. The matrix is applied with a dot product on the vectors. Afterwards (line 15\u201324) the vectors in the vectorised Equatorial Coordinate System can be transformed to right ascension and declination values using the SPICE function recrad.", "Now we can plot the celestial objects and add the ecliptic plane in equatorial coordinates (line 17\u201319) as a blue dotted line. Similarly as before, we set some formatting properties and change the x ticks to right ascension hours (line 22\u201325). The resulting figure is shown below.", "You can see that the ecliptic plane describes a sinusoidal curve on the Equatorial Coordinate System. The Sun and the planets are again close to the ecliptic plane. The Sun is at around 3 hours and has a declination of more than 15 degrees. During the year, the Sun \u201cmoves\u201d along the blue dotted line from right to left. You can see seasonal variations: The Sun crossed already the 0h / 0\u00b0 Vernal Equinox point and moves \u201chigher\u201d in declination. This mean that the readers of you who live on the northern hemisphere will have longer days until the beginning of Summer. Afterwards, the Sun moves downwards and the days get shorter.", "Today we learned how to compute the coordinates of celestial bodies for different coordinate systems. This knowledge will be required for future tutorials, where we will make observation planning and asteroid tracking.", "Astronomers and radio telescope operators need to compute these coordinates precisely, e.g., to find objects, for the determination of an asteroids orbits or to track and communicate with satellites and spacecraft missions. If you want to get a \u201cbetter feeling\u201d about this topic with more flexibility and visualisations (but with less Python computations) have a look at the Open Source planetarium software Stellarium.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist and Engineer. Astrophysicist and Solar System researcher \u2014 Now working in the automotive industry"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F747c7d1eaf7f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://thomas-albin.medium.com/?source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": ""}, {"url": "https://thomas-albin.medium.com/?source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": "Thomas Albin"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe5af1ec51465&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&user=Thomas+Albin&userId=e5af1ec51465&source=post_page-e5af1ec51465----747c7d1eaf7f---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F747c7d1eaf7f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F747c7d1eaf7f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/space-science-with-python", "anchor_text": "Space Science With Python"}, {"url": "https://unsplash.com/@connerbaker?utm_source=medium&utm_medium=referral", "anchor_text": "Conner Baker"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/ThomasAlbin/SpaceScienceTutorial", "anchor_text": "GitHub"}, {"url": "https://naif.jpl.nasa.gov/naif/toolkit.html", "anchor_text": "SPICE"}, {"url": "https://github.com/AndrewAnnex/SpiceyPy", "anchor_text": "spiceypy"}, {"url": "https://upload.wikimedia.org/wikipedia/commons/5/50/Ecliptic_grid_globe.png", "anchor_text": "Wikipedia / Wikimedia Commons;"}, {"url": "https://creativecommons.org/licenses/by-sa/3.0/", "anchor_text": "CC BY-SA 3.0"}, {"url": "https://naif.jpl.nasa.gov/naif/toolkit.html", "anchor_text": "SPICE"}, {"url": "https://docs.python.org/3/library/datetime.html", "anchor_text": "datetime"}, {"url": "https://github.com/AndrewAnnex/SpiceyPy", "anchor_text": "spiceypy"}, {"url": "https://numpy.org/", "anchor_text": "numpy"}, {"url": "https://pandas.pydata.org/", "anchor_text": "pandas"}, {"url": "https://matplotlib.org/", "anchor_text": "matplotlib"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/furnsh_c.html", "anchor_text": "furnsh"}, {"url": "https://docs.python.org/3/library/datetime.html#datetime.datetime.now", "anchor_text": "datetime.datetime.now()"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/utc2et_c.html", "anchor_text": "utc2et"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html", "anchor_text": "pandas dataframe"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/req/naif_ids.html", "anchor_text": "NAIF ID code"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/spkezp_c.html", "anchor_text": "spkezp"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/req/abcorr.html", "anchor_text": "NAIF detailed documentation"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/recrad_c.html", "anchor_text": "recrad"}, {"url": "https://www.giss.nasa.gov/tools/gprojector/help/projections/", "anchor_text": "NASA\u2019s GISS website"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/sphrec_c.html", "anchor_text": "sphrec"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/pxform_c.html", "anchor_text": "pxform"}, {"url": "https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/recrad_c.html", "anchor_text": "recrad"}, {"url": "https://stellarium.org/de/", "anchor_text": "Stellarium"}, {"url": "https://medium.com/tag/pyhton?source=post_page-----747c7d1eaf7f---------------pyhton-----------------", "anchor_text": "Pyhton"}, {"url": "https://medium.com/tag/space?source=post_page-----747c7d1eaf7f---------------space-----------------", "anchor_text": "Space"}, {"url": "https://medium.com/tag/science?source=post_page-----747c7d1eaf7f---------------science-----------------", "anchor_text": "Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----747c7d1eaf7f---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/space-science-with-python?source=post_page-----747c7d1eaf7f---------------space_science_with_python-----------------", "anchor_text": "Space Science With Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F747c7d1eaf7f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&user=Thomas+Albin&userId=e5af1ec51465&source=-----747c7d1eaf7f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F747c7d1eaf7f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&user=Thomas+Albin&userId=e5af1ec51465&source=-----747c7d1eaf7f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F747c7d1eaf7f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F747c7d1eaf7f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----747c7d1eaf7f---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----747c7d1eaf7f--------------------------------", "anchor_text": ""}, {"url": "https://thomas-albin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://thomas-albin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Thomas Albin"}, {"url": "https://thomas-albin.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "432 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe5af1ec51465&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&user=Thomas+Albin&userId=e5af1ec51465&source=post_page-e5af1ec51465--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe56e0e06b404&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-space-maps-747c7d1eaf7f&newsletterV3=e5af1ec51465&newsletterV3Id=e56e0e06b404&user=Thomas+Albin&userId=e5af1ec51465&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}