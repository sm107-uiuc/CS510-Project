{"url": "https://towardsdatascience.com/fundamentals-of-generative-adversarial-networks-b7ca8c34f0bc", "time": 1683015897.839304, "path": "towardsdatascience.com/fundamentals-of-generative-adversarial-networks-b7ca8c34f0bc/", "webpage": {"metadata": {"title": "Fundamentals of Generative Adversarial Networks | by James Loy | Towards Data Science", "h1": "Fundamentals of Generative Adversarial Networks", "description": "In 2014, a then-unknown Ph.D. student named Ian Goodfellow introduced Generative Adversarial Networks (GANs) to the world. GANs were unlike anything the AI community had seen, and Yann LeCun\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.quora.com/What-are-some-recent-and-potentially-upcoming-breakthroughs-in-deep-learning", "anchor_text": "the most interesting idea in the last 10 years in ML", "paragraph_index": 0}, {"url": "https://github.com/NVlabs/stylegan2", "anchor_text": "NVIDIA\u2019s hyper-realistic face generator", "paragraph_index": 1}, {"url": "https://www.pytorchlightning.ai/", "anchor_text": "PyTorch Lightning", "paragraph_index": 33}], "all_paragraphs": ["In 2014, a then-unknown Ph.D. student named Ian Goodfellow introduced Generative Adversarial Networks (GANs) to the world. GANs were unlike anything the AI community had seen, and Yann LeCun described it as \u201cthe most interesting idea in the last 10 years in ML\u201d.", "Since then, much research effort have poured into GANs, and many state-of-the-art AI applications such as NVIDIA\u2019s hyper-realistic face generator are derived from Goodfellow\u2019s work on GANs.", "Author\u2019s note: All images and animations in this article are created by the author. If you would like to use the images for educational purposes, kindly drop me a note in the comments. Thank you!", "At a high level, GANs are neural networks that learn how to generate realistic samples of the data on which they were trained on. For example, given photos of handwritten digits, GANs learn how to generate realistic photos of more handwritten digits. More impressively, GANs can even learn to generate realistic photos of human beings, such as those below.", "So how do GANs work? Fundamentally, GANs learn the distribution of the subject of interest. For example. GANs that are trained on handwritten digits learn the distribution of the data. Once the distribution of the data has been learnt, the GAN can simply sample from the distribution to generate realistic images.", "To solidify our understanding of the distribution of the data, let\u2019s consider the following example. Suppose that we have the following 6 images below.", "Each image is a grayish box, and for simplicity, let\u2019s assume that each image consists of just 1 pixel. In other words, there is just one grayish pixel in each image.", "Now, suppose that each pixel has a possible value between -1 and 1, where a white pixel has a value of -1 and a black pixel has a value of 1. The 6 gray images would therefore have the following pixel values:", "What do we know about the distribution of the pixel values? Well, just by inspection, we know that most pixel values are around 0, with few values nearing the extremities (-1 and 1). We can therefore assume that the distribution is a gaussian, with a mean of 0.", "Note: With more samples, it is trivial to derive the gaussian distribution of this data by calculating the mean and standard deviation. However, this is not our focus since it is intractable to calculate the data distribution of complex subjects, unlike in this simple example.", "This data distribution is useful because it allows us to generate more gray looking images, just like the 6 above. To generate more similar images, we can randomly sample from the distribution.", "While it may be trivial to figure out the underlying distribution of gray pixels, computing the distribution of cats, dogs, cars or any other complex object is often mathematically intractable.", "How then, do we learn the underlying distribution of complex objects? The obvious answer is to use neural networks. Given sufficient data, we can train a neural network to learn any complex function, such as the underlying distribution of the data.", "In a GAN, the generator is the neural network that learns the underlying distribution of the data. To be more specific, a generator takes as input a random distribution (also known as \u2018noise\u2019 in GANs literature), and learns a mapping function that maps the input to the desired output, which is the actual underlying distribution of the data.", "However, notice that a key component is missing in the architecture above. What loss function should we use to train the generator? How do we know if the images generated actually resemble actual handwritten digits? As always, the answer is \u2018use a neural network\u2019. This second network is known as the discriminator.", "The discriminator\u2019s role is to judge and assess the quality of output images from the generator. Technically, the discriminator is a binary classifier. It accepts images as input, and outputs a probability that the image is real (i.e. actual training image), or fake (i.e. from the generator).", "Initially, the generator struggles to produce images that look real, and the discriminator can easily distinguish real and fake images without making too many mistakes. Since the discriminator is a binary classifier, we can quantify the performance of the discriminator using the Binary Cross-Entropy (BCE) Loss.", "The discriminator\u2019s BCE loss is an important signal for the generator. Recall earlier, that by itself the generator doesn\u2019t know if the generated images resemble the real images. However, the generator can use the discriminator\u2019s BCE loss as a signal to obtain feedback for its generated images.", "Here\u2019s how it works. We send images output by the generator to the discriminator and it predicts the probability that the image is real. Initially, when the generator is poor, the discriminator can easily classify the images as fake, resulting in a low BCE loss. However, the generator eventually improves and the discriminator starts to make more mistakes, misclassifying the fake images as real, which results in a higher BCE loss. Therefore, the discriminator\u2019s BCE loss signals the quality of image output by the generator, and the generator seeks to maximize this loss.", "As we can see from the animation above, the BCE loss from the discriminator is correlated to the quality of images produced by the generator.", "The generator uses the discriminator\u2019s loss as an indicator of the quality of its generated images. The objective of the generator is to tune its weights such that the BCE loss from the discriminator is maximized, effectively \u2018fooling\u2019 the discriminator.", "But what about the discriminator? So far, we assumed that we have a perfectly working discriminator right from the start. However, this assumption isn\u2019t true and the discriminator requires training as well.", "Since the discriminator is a binary classifier, its training procedure is straightforward. We\u2019ll provide a batch of labelled real and fake images to the discriminator, and we\u2019ll use the BCE loss to tune the weights of the discriminator. We train the discriminator to identify real vs fake images, preventing the discriminator from being \u2018fooled\u2019 by the generator.", "Let\u2019s put everything together now and see how GANs work.", "By now, you know that GANs consist of two interlinked networks, the generator and the discriminator. In conventional GANs, generators and discriminators are simple feedforward neural networks.", "What\u2019s unique to GANs is that the generator and discriminator are trained in turns, adversarial to one another.", "To train the generator, we use a noise vector sampled from a random distribution as input. In practice, we use a 100 length vector drawn from a gaussian distribution as the noise vector. The input is passed through a series of fully connected layers in the feedforward neural network. The output of the generator is an image, which in our MNIST example, is a 28x28 array. The generator passes its output to the discriminator, and uses the discriminator\u2019s BCE loss to tune its weights, with the aim of maximizing the discriminator\u2019s loss.", "To train the discriminator, we use labelled images from the generator, as well as actual images as input. The discriminator learns to classify the images as real or fake, and is trained using the BCE loss function.", "In practice, we train the generator and discriminator in turns, one after another. This training scheme is akin to a two-player minimax adversarial game, as the generator aims to maximize the discriminator\u2019s loss, and the discriminator aims to minimize its own loss.", "Now that we understand the theory behind GANs, let\u2019s put it into practice by creating our own GAN from scratch using PyTorch!", "First of all, let\u2019s bring in the MNIST dataset. The torchvision library allows us to get the MNIST dataset easily. We\u2019ll do some standard normalizing to the images before flattening the 28x28 MNIST images to a 784 tensor. This flattening is required as the layers in the network are fully connected layers.", "Next, let\u2019s write the code for the generator class. From what we have seen earlier, a generator is simply a feedforward neural network that accepts a 100 length tensor and outputs a 784 tensor. In a generator, the size of the dense layers are usually doubled after each layer (256, 512, 1024).", "That was easy wasn\u2019t it? Now, let\u2019s write the code for the discriminator class. The discriminator is also a feedforward neural network that accepts a 784 length tensor, and outputs a tensor of size 1 , denoting the probability that the input belongs to class 1 (real image). Unlike the generator, we halve the size of the dense layers after each layer(1024, 512, 256).", "Now, we\u2019re going to create a GAN class that encompasses both the generator and the discriminator class. This GAN class will contain the code for training the generator and discriminator in turns, according to the training scheme that we have discussed earlier. We\u2019re going to use PyTorch Lightning for this, in order to simplify our code and reduce boilerplate code.", "The code is commented above and it\u2019s pretty self explanatory given what we have discussed so far. Notice how modularizing our code using PyTorch Lightning makes it look so neat and readable!", "We can now train our GAN. We\u2019ll train it using the GPU, for 100 epochs.", "All that\u2019s left now is to visualize the generated images. In the training_epoch_end() function from our GAN class above, we saved the images output from the generator after each training epoch into a list.", "We can visualize these images by plotting them on a grid. The code below randomly selects 10 images generated after the 100th training epoch and plots them on a grid.", "That\u2019s pretty good! The output resembles real handwritten digits. Our generator has definitely learnt how to fool the discriminator.", "Finally, as promised, we\u2019ll create the animation shown at the top of the post. Using theFuncAnimation function in matplotlib , we\u2019ll animate the images on the plot, frame by frame.", "Congrats! You made it to the end of this tutorial. I hope you\u2019ve enjoyed reading this as much as I\u2019ve enjoyed writing this. Fortunately for us, this is not the end of our journey. Shortly after the original GAN was introduced by Goodfellow, the scientific community poured in huge efforts in this area, which led to a proliferation of GAN-based AI models.", "I\u2019m beginning a series of tutorials just like this, where I illustrate, explain and code up the different variations of GANs, including important ones such as Deep Convolutional GAN (DCGAN) and Conditional GAN (CGAN). Be sure to follow me (if you haven\u2019t already!) to be informed whenever the new tutorials are out.", "The code here can be found in my Github repository as well. I will be updating this repository continuously to include other variations of GANs in the future.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist \u2022 Author & Writer"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb7ca8c34f0bc&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@jamesloyys?source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jamesloyys?source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": "James Loy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe7803b4cff21&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&user=James+Loy&userId=e7803b4cff21&source=post_page-e7803b4cff21----b7ca8c34f0bc---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb7ca8c34f0bc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb7ca8c34f0bc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/getting-started", "anchor_text": "Getting Started"}, {"url": "https://www.quora.com/What-are-some-recent-and-potentially-upcoming-breakthroughs-in-deep-learning", "anchor_text": "the most interesting idea in the last 10 years in ML"}, {"url": "https://github.com/NVlabs/stylegan2", "anchor_text": "NVIDIA\u2019s hyper-realistic face generator"}, {"url": "https://thispersondoesnotexist.com/", "anchor_text": "https://thispersondoesnotexist.com/"}, {"url": "https://www.pytorchlightning.ai/", "anchor_text": "PyTorch Lightning"}, {"url": "https://github.com/jamesloyys/PyTorch-Lightning-GAN", "anchor_text": "jamesloyys/PyTorch-Lightning-GANImplementations of various GAN architectures using PyTorch Lightning github.com"}, {"url": "https://medium.com/tag/generative-adversarial?source=post_page-----b7ca8c34f0bc---------------generative_adversarial-----------------", "anchor_text": "Generative Adversarial"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----b7ca8c34f0bc---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----b7ca8c34f0bc---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/editors-pick?source=post_page-----b7ca8c34f0bc---------------editors_pick-----------------", "anchor_text": "Editors Pick"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb7ca8c34f0bc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&user=James+Loy&userId=e7803b4cff21&source=-----b7ca8c34f0bc---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb7ca8c34f0bc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&user=James+Loy&userId=e7803b4cff21&source=-----b7ca8c34f0bc---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb7ca8c34f0bc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb7ca8c34f0bc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b7ca8c34f0bc---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b7ca8c34f0bc--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jamesloyys?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jamesloyys?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "James Loy"}, {"url": "https://medium.com/@jamesloyys/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "7K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe7803b4cff21&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&user=James+Loy&userId=e7803b4cff21&source=post_page-e7803b4cff21--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fedd027f2b30e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffundamentals-of-generative-adversarial-networks-b7ca8c34f0bc&newsletterV3=e7803b4cff21&newsletterV3Id=edd027f2b30e&user=James+Loy&userId=e7803b4cff21&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}