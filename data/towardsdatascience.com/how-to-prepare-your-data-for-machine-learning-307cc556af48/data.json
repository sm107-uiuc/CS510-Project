{"url": "https://towardsdatascience.com/how-to-prepare-your-data-for-machine-learning-307cc556af48", "time": 1683014540.640543, "path": "towardsdatascience.com/how-to-prepare-your-data-for-machine-learning-307cc556af48/", "webpage": {"metadata": {"title": "How To Prepare Your Data For Machine Learning | by Frank Zickert | Quantum Machine Learning | Towards Data Science", "h1": "How To Prepare Your Data For Machine Learning", "description": "On April 15, 1912, the Titanic sank after colliding with an iceberg. Being considered unsinkable, there weren\u2019t enough lifeboats for everyone on board. 1502 out of 2224 passengers and crew members\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.pyqml.com/page?ref=medium_prepare&dest=/", "anchor_text": "Hands-On Quantum Machine Learning With Python", "paragraph_index": 1}, {"url": "https://www.kaggle.com/c/titanic/data", "anchor_text": "Data tab", "paragraph_index": 11}, {"url": "https://www.pyqml.com/page?ref=medium_prepare&dest=/", "anchor_text": "Hands-On Quantum Machine Learning With Python.", "paragraph_index": 77}, {"url": "https://www.pyqml.com/page?ref=medium_prepare&dest=/", "anchor_text": "here", "paragraph_index": 78}], "all_paragraphs": ["TL;DR: This post covers the complete preparation of the Titanic Shipwreck dataset.", "This post is part of the book: Hands-On Quantum Machine Learning With Python", "The sinking of the Titanic is one of the most infamous shipwrecks in history.", "On April 15, 1912, the Titanic sank after colliding with an iceberg. Being considered unsinkable, there weren\u2019t enough lifeboats for everyone on board. 1502 out of 2224 passengers and crew members died that night.", "Of course, the 722 survivors must have had some luck. But it seems as if certain groups of people had better chances to survive than others.", "Therefore, the sinking of the Titanic has also become a famous starting point for anyone interested in machine learning.", "If you have some experience with machine learning, you\u2019ll probably know the legendary Titanic ML competition provided by Kaggle.", "If you don\u2019t know Kaggle yet, Kaggle is among the world\u2019s largest data science communities. It offers many interesting datasets and therefore, it is a good place to get started.", "The problem to be solved is simple. Use machine learning to create a model that, given the passenger data, predicts which passengers survived the Titanic shipwreck.", "In order to get the dataset, you\u2019ll need to create a Kaggle account (it\u2019s free) and join the competition. Even though Kaggle is all about competitions, you don\u2019t need to take part in them actively by uploading your solution.", "When you join a competition, you need to accept and abide by the rules that govern how many submissions you can make per day, the maximum team size, and other competition-specific details.", "You\u2019ll find the competition data in the Data tab at the top of the competition page. Then, scroll down to find the list of files.", "There are three files in the data:", "The file train.csv contains the data of a subset of the Titanic's passengers. This file is supposed to serve your algorithm as basis to learn whether a passenger survived or not.", "The file test.csv contains the data of another subset of passengers. It serves to determine how good your algorithm performs.", "The gender_submission.csv file is an example that shows how you should structure your predictions if you plan to submit them to Kaggle. Since we're here to start learning and not yet be ready to compete, we'll skip this file.", "Download the files train.csv and test.csv.", "The first thing we need to do is to load the data. We use Pandas for that. It is renowned in the machine learning community for data processing. It offers a variety of useful functions, such as a function to load .csv-files: read_csv.", "We loaded our data into train and test. These are Pandas DataFrames.", "A DataFrame keeps the data in a two-dimensional structure with labels. Such as a database table or a spreadsheet. It provides a lot of useful attributes and functions out of the box.", "For instance, the DataFrame's attribute shape provides a tuple of two integers that denote the number of rows and the number of columns.", "We can see we have 891 training and 418 testing entries. More interestingly, the train dataset has one more column than the test dataset.", "The DataFrame's info() method shows some more detailed information. Have a look at the train dataset.", "The info method returns a list of the columns: their index, their names, how many entries have actual values (are not null), and the type of values.", "Let\u2019s have a look at the test dataset, too.", "When comparing both info, we can see the test dataset misses the column Survived that indicates whether a passenger survived or died.", "As Kaggle notes, they use the test dataset to evaluate the submissions. If they provided the correct answer, it wouldn't be much of a competition anymore, would it? It is our task to predict the correct label.", "Since we do not plan to submit our predictions to Kaggle to get an evaluation of how our algorithm performed, the test dataset is quite useless for us.", "So, we concentrate on the train dataset.", "The info output is quite abstract. Wouldn't it be good to see some actual data? No problem. That's what the head-method is for.", "The head method shows the column heads and the first five rows. With this impression, let's go through the columns. You can read an explanation on the Kaggle page, too.", "Each column represents one feature of our data. The PassengerId is a consecutive number identifying each row. Survived is the indicator on whether the passenger survived (0 = No, 1 = Yes). Pclass is the ticket class (1 = 1st, 2 = 2nd, 3 = 3rd). Then we have self-explanatory Name, Sex, and Age.", "SibSp denotes the number of this passenger's siblings or spouses aboard the Titanic. Parch denotes the number of this passenger's parents or children aboard the Titanic.", "Then, there are the Fare the passenger paid, the Cabin number and the port of embarkation (embarked) (C = Cherbourg, Q = Queenstown, S = Southampton).", "Our data has different types. There is numerical data, such as the Age, SibSp, Parch, and the Fare. There is categorial data. Some of the categories are represented by numbers (Survived, Pclass). Some are represented by text (Sex and Embarked). And there is textual data (Name, Ticket, and Cabin).", "This is quite a mess. For a computer. Furthermore, when having another look at the result of train.info(), you can see that the counts vary for different columns. While we have 891 values for most columns, we only have 714 for Age, 204 for Cabin, and 889 for Embarked.", "Before we can feed our data into any machine learning algorithm, we need to clean up.", "Most machine learning algorithms don\u2019t work well with missing values. There are three options of how we can fix this:", "We can accomplish these things easily using DataFrame\u2019s dropna(), drop(), and fillna() methods. There is no one best option in general. But you should carefully consider the specific context.", "There are only two passengers whose port of embarkation we don\u2019t know. These account for less than 1% of our data. If we completely disregard these two passengers, we won\u2019t see completely different results. Thus, we drop these rows (line 3) with the dropna-method.", "The dropna-method takes the column (\"Embarked\") as named parameter subset. This parameter specifies the columns that determine whether to remove the row (passenger). If at least one value of these columns is missing, the row gets removed.", "The situation is different with regard to the Cabin. We only have this information for 204 out of 991 passengers. It is questionable if this is enough to draw any information from. We don't know why these values miss. Even if we found the Cabin to be highly correlated with the survival of a passenger, we wouldn't know whether this correlation can be generalized to all passengers or whether there is a selection bias meaning that the fact that we know the Cabin depends on some other aspect.", "We drop the whole column with the method drop. We provide the column (Cabin) we want to remove as positioned argument. The value 1 we provide as named argument axis specifies that we want to remove the whole column.", "Next, we know the Age of 714 passengers. Removing all the passengers from consideration whose Age we don't know doesn't seem to be an option because they account for about 22% of our data, quite a significant portion. Removing the whole column doesn't seem to be a good option either. First, we know the Age of most of the passengers and intuition suggest that the Age might be important for someone's chance to survive.", "We fill the missing values with the fillna method (line 13). Since we want to fill only the missing values in the Age column, we call this function on this column and not the whole DataFrame. We provide as argument the value we want to set. This is the mean age of all passengers we calculated before (line 12).", "Great. We now have 889 rows, 10 columns, and no missing data anymore.", "The goal of machine learning is to create an algorithm that is able to predict data. Or, as we said before: to put a label on a thing. While we use already labeled data when building our algorithm, the goal is to predict labels we don\u2019t know yet.", "We don\u2019t tell our algorithm how it can decide which label to select. Rather, we tell the algorithm, \u201chere is the data, figure it out yourself\u201d. That being said, a savvy algorithm may be able to memorize all the data you provide it with. This is referred to as overfitting. The result is an algorithm performing well on known data, but poorly on unknown data.", "If our goal was to only predict labels we know already, the best thing we could do is to memorize all passengers and whether they survived. But if we want to create an algorithm that performs well even on unknown data, we need to prevent memorization.", "We have not even started building our algorithm. Yet, the bare features we provide our algorithm with affect whether the algorithm will be able to memorize data. Because we have potential identifiers in our data.", "When looking at the first five entries of the dataset, three columns appear suspicious: the PassengerId, the Name, and the Ticket.", "The PassengerId is a subsequent number. There should be no connection between how big the number is and whether a passenger survived.", "Neither should the name of a passenger or the number on a ticket be a decisive factor for survival. Rather, these are data identifying single passengers. Let\u2019s validate this assumption.", "Let\u2019s have a look at how many unique values are in these columns.", "Name and PassengerId are perfect identifiers. Each of the 889 rows in our dataset has a unique value.", "And there are 680 different Ticket numbers. A possible explanation for the Ticket not to be a perfect identifier may be family tickets. Yet, a prediction based on this data appears to support memorization rather than learning transferable insights.", "As we will see throughout this book, all the algorithms, both classic and quantum algorithms, work with numbers. Nothing but numbers. If we want to use textual data, we need to translate it into numbers.", "Scikit-Learn provides a transformer for this task called LabelEncoder.", "First, we import the LabelEncoder (line 1) and initialize an instance (line 2). We loop through the columns with textual data (Sex and Embarked) (line 4). For each column, we need to fit the encoder to the data in the column (line 5) before we can transform the values (line 6).", "Finally, let\u2019s have another look at our DataFrame. You can see that both, Sex and Embarked are now numbers (int64). In our case, 0 denotes male and 1 denotes female passengers. But when you run the transformation again you may yield different assignments.", "Machine learning algorithms only work with numbers. Moreover, they usually work with numbers with identical scales. If numbers have different scales, the algorithm may consider those with higher scales to be more important.", "Even though all our data is numerical, it is not yet uniformly scaled. The values of most of the columns range between 0 and 3. But Age and Fare have far bigger scales.", "The max method returns the maximum value in a column. As we can see, the oldest passenger was 80 years old and the highest fare was about 512.", "A common way to cope with data of different scales is min-max-scaling (also known as normalization). This process shifts and rescales values so that they end up ranging from 0 to 1. It subtracts the minimum value from each value and divides it by the maximum minus the minimum value.", "Scikit-Learn provides the MinMaxScaler transformer to do this for us.", "Again, we first import the transformer (line 1) and initialize it (line 3). Then, we fit the transformer to our data (line 4) and transform it (line 5).", "As a result, all the data in our dataset range between 0.0 and 1.0.", "The scaler returns a Numpy-array instead of a Pandas DataFrame", "We already mentioned the goal of building an algorithm that does not only perform well on data it already knows but one that also predicts the labels of yet unknown data.", "That\u2019s why it is important to separate the data into a training and a testing set. We use the training set to build our algorithm. And we use the testing set to validate its performance.", "Even though Kaggle provides a testing set, we skipped it for not including the Survived column. We would need to ask Kaggle every time we wanted to validate it. To keep things simple and be able to do the validation on our own, we rather spare some rows from the Kaggle training set for testing.", "Separating a test set is quite simple. Scikit-learn provides a useful method for that, too. This is train_test_split.", "Further, we need to separate the input data from the resulting label we want to predict.", "We separate the input columns from the labels with Python array indices (lines 3\u20134). The first column (position 0) contains the Survived flag we want to predict. The other columns contain the data we use as input.", "train_test_split separates the training from the testing data set. The parameter test_size = 0.2 (= 20%) specifies the portion we want the testing set to have.", "We can see our training data set consists of 711 entries. Accordingly, our testing set consists of 178 entries. We have input 7 columns and a single column output.", "Let\u2019s save our prepared data so that we can use it in the future without needing to repeat all these steps.", "This post is part of the book: Hands-On Quantum Machine Learning With Python.", "Get the first three chapters for free here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "You're interested in quantum computing and machine learning. But you don't know how to get started? Let me help"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F307cc556af48&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----307cc556af48--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----307cc556af48--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://pyqml.medium.com/?source=post_page-----307cc556af48--------------------------------", "anchor_text": ""}, {"url": "https://pyqml.medium.com/?source=post_page-----307cc556af48--------------------------------", "anchor_text": "Frank Zickert | Quantum Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feebfab42a2c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=post_page-eebfab42a2c4----307cc556af48---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F307cc556af48&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F307cc556af48&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.pyqml.com/page?ref=medium_prepare&dest=/", "anchor_text": "Hands-On Quantum Machine Learning With Python"}, {"url": "https://www.kaggle.com/c/titanic/data", "anchor_text": "Data tab"}, {"url": "https://www.pyqml.com/page?ref=medium_prepare&dest=/", "anchor_text": "Hands-On Quantum Machine Learning With Python."}, {"url": "https://www.pyqml.com/page?ref=medium_prepare&dest=/", "anchor_text": "here"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----307cc556af48---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----307cc556af48---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data?source=post_page-----307cc556af48---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/tag/python?source=post_page-----307cc556af48---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-pre-processing?source=post_page-----307cc556af48---------------data_pre_processing-----------------", "anchor_text": "Data Pre Processing"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F307cc556af48&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=-----307cc556af48---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F307cc556af48&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=-----307cc556af48---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F307cc556af48&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----307cc556af48--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F307cc556af48&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----307cc556af48---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----307cc556af48--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----307cc556af48--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----307cc556af48--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----307cc556af48--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----307cc556af48--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----307cc556af48--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----307cc556af48--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----307cc556af48--------------------------------", "anchor_text": ""}, {"url": "https://pyqml.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://pyqml.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Frank Zickert | Quantum Machine Learning"}, {"url": "https://pyqml.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "7.9K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feebfab42a2c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=post_page-eebfab42a2c4--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F2d21069992f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-prepare-your-data-for-machine-learning-307cc556af48&newsletterV3=eebfab42a2c4&newsletterV3Id=2d21069992f0&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}