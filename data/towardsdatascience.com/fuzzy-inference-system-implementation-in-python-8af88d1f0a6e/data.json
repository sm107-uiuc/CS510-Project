{"url": "https://towardsdatascience.com/fuzzy-inference-system-implementation-in-python-8af88d1f0a6e", "time": 1683007256.123801, "path": "towardsdatascience.com/fuzzy-inference-system-implementation-in-python-8af88d1f0a6e/", "webpage": {"metadata": {"title": "Fuzzy Inference System implementation in Python | by Carmel Gafa | Towards Data Science", "h1": "Fuzzy Inference System implementation in Python", "description": "In a previous article, we discussed the basics of fuzzy sets and fuzzy inferencing. The report also illustrated the construction of a possible control application using a fuzzy inferencing method. In\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/a-very-brief-introduction-to-fuzzy-logic-and-fuzzy-systems-d68d14b3a3b8", "anchor_text": "previous article", "paragraph_index": 0}, {"url": "https://github.com/carmelgafa/ml_from_scratch/tree/master/fuzzy_inference", "anchor_text": "Github", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/a-very-brief-introduction-to-fuzzy-logic-and-fuzzy-systems-d68d14b3a3b8", "anchor_text": "article", "paragraph_index": 29}, {"url": "https://pythonhosted.org/scikit-fuzzy/", "anchor_text": "skfuzzy", "paragraph_index": 42}, {"url": "http://carmelgafa.com", "anchor_text": "carmelgafa.com", "paragraph_index": 45}], "all_paragraphs": ["In a previous article, we discussed the basics of fuzzy sets and fuzzy inferencing. The report also illustrated the construction of a possible control application using a fuzzy inferencing method. In this article, we will build a multi-input/multi-output fuzzy inference system using the Python programming language. It is assumed that the reader has a clear understanding of fuzzy inferencing and has read the article mentioned previously.", "All the code listed in this article is available on Github.", "The diagram below illustrates the structure of the application. The design is based on several considerations on Fuzzy Inference Systems, some being:", "Therefore a rule will contain several clauses of antecedent type and some clauses of consequent type. Clauses will be of the form:", "We will discuss some implementation details of the classes developed for this system in the following sections:", "A FuzzySet requires the following parameters so that it can be initiated:", "It is, therefore, possible to represent a fuzzy set by using two numpy arrays; one that will hold the domain values and one that will hold the degree-of-membership values. Initially, all degree-of-membership values will be all set to zero. It can be argued that if the minimum and maximum values are available together with the resolution of the set, the domain numpy array is not required as the respective values can be calculated. While this is perfectly true, a domain array was preferred in this example project so that the code is more readable and simple.", "In the context of a fuzzy variable, all the sets will have the same minimum, maximum and resolution values.", "As we are dealing with a discretized domain, it will be necessary to adjust any value used to set or retrieve the degree-of-membership to the closest value in the domain array.", "The class contains methods whereby a set of a given shape can be constructed given a corresponding number of parameters. In the case of a triangular set, for example, three parameters are provided, two that define the extents of the sets and one for the apex. It is possible to construct a triangular set by using these three parameters as can be seen in the figure below.", "Since the sets are based on numpy arrays, the equation above can be translated directly to code, as can be seen below. Sets having different shapes can be constructed using a similar method.", "The FuzzySet class also contains union, intersection and negation operators that are necessary so that inferencing can take place. All operator methods return a new fuzzy set with the result of the operation that took place.", "Finally, we implemented the ability to obtain a crisp result from a fuzzy set using the centre-of-gravity method that is referred to in some detail in the previous article. It is important to mention that there is a large number of defuzzification methods are available in the literature. Still, as the centre-of-gravity method is overwhelmingly popular, it is used in this implementation.", "As discussed previously, variables can be of input or output in type, with the difference affecting the fuzzy inference calculation. A FuzzyVariable is a collection of sets that are held in a python dictionary having the set name as the key. Methods are available to add FuzzySets to the variable, where such sets will take the variable\u2019s limits and resolution.", "For input variables, fuzzification is carried out by retrieving the degree-of-membership of all the sets in the variable for a given domain value. The degree-of-membership is stored in the set as it will be required by the rules when they are evaluated.", "Output variables will ultimately produce the result of a fuzzy inference iteration. This means that for Mamdani-type systems, as we are building here, output variables will hold the union of the fuzzy contributions from all the rules, and will subsequently defuzzify this result to obtain a crisp value that can be used in real-life applications.", "Therefore, output variables will require an additional FuzzySet attribute that will hold the output distribution for that variable, where the contribution that was resulting from each rule and added using the set union operator. The defuzzification result can then be obtained by calling the centre-of-gravity method for output distribution set.", "The FuzzyClause class requires two attributes; a fuzzy variable and a fuzzy set so that the statement", "can be created. Clauses are used to implement statements that can be chained together to form the antecedent and consequent parts of the rule.", "When used as an antecedent clause, the FuzzyClause returns the last degree-of-membership value of the set, that is calculated during the fuzzification stage as we have seen previously.", "The rule will combine the degree-of-membership values from the various antecedent clauses using the min operator, obtaining the rule activation that is then used in conjunction with the consequent clauses to obtain the contribution of the rule to the output variables. This operation is a two-step process:", "The FuzzyRule class will, therefore, require two attributes:", "During the execution of the FuzzyRule, the procedure explained above is carried out. The FuzzyRule coordinates all the tasks by utilizing all the various FuzzyClauses as appropriate.", "At the topmost level of this architecture, we have the FuzzySystem that coordinates all activities between the FuzzyVariables and FuzzyRules. Hence the system contains the input and output variables, that are stored in python dictionaries using variable-names as keys and a list of the rules.", "One of the challenges presented at this stage is the method that the end-user will use to add rules, that should ideally abstract the implementation detail of the FuzzyClause classes. The method that was implemented consists of providing two python dictionaries that will contain the antecedent and consequent clauses of the rule in the following format;", "A more user-friendly method is to provide the rule as a string and then parse that string to create the rule, but this seemed an unnecessary overhead for a demonstration application.", "Addition of a new rule to the FuzzySystem", "The execution of the inference process can be achieved with a few lines of code given this structure, where the following steps are carried out;", "As a final note, the Fuzzy Inferencing System implemented here contains additional functions to plot fuzzy sets and variables and to obtain information about an inference step execution.", "In this section, we will discuss the use of the fuzzy inference system. In particular, we will implement the fan speed case study that was designed in the previous article in this series.", "A fuzzy system begins with the consideration of the input and output variables, and the design of the fuzzy sets to explain that variable.", "The variables will require a lower and upper limit and, as we will be dealing with discrete fuzzy sets, the resolution of the system. Therefore a variable definition will look as follows", "where the variable \u2018Temperature\u2019 ranges between 10 and 40 degrees and is discretized in 100 bins.", "The fuzzy sets define for the variable will require different parameters depending on their shape. In the case of triangular sets, for example, three parameters are needed, two for the lower and upper extremes having a degree of membership of 0 and one for the apex which has a degree-of-membership of 1. A triangular set definition for variable \u2018Temperature\u2019 can, therefore, look as follows;", "where the set called \u2018Cold\u2019 has extremes at 10 and 25 and apex at 10 degrees. In our system, we considered two input variables, \u2018Temperature\u2019 and \u2018Humidity\u2019 and a single output variable \u2018Speed\u2019. Each variable us described by three fuzzy sets. The definition of the output variable \u2018Speed\u2019 looks as follows:", "As we have seen before, the fuzzy system is the entity that will contain these variables and fuzzy rules. Hence the variables will have to be added to a system as follows:", "A fuzzy system executes fuzzy rules to operate of the form", "where the If part of the rule contains several antecedent clauses and the then section will include several consequent clauses. To keep things simple, we will assume rules that require an antecedent clause from each input variable and are only linked together with an \u2018and\u2019 statement. It is possible to have statements linked by \u2018or\u2019 and statements can also contain operators on the sets like \u2018not\u2019.", "The simplest way to add a fuzzy rule to our system is to provide a list of the antecedent clauses and consequent clauses. One method of doing so is by using a python dictionary that contains", "entries for the clause sets. Hence the above rule can be implemented as follows:", "Execution of the system involves inputting values for all the input variables and getting the values for the output values in return. Again this is achieved through the use of dictionaries that us the name of the variables as keys.", "The system will return a dictionary containing the name of the output variables as keys, and the defuzzified result as values.", "In this article, we have looked at the practical implementation of a fuzzy inference system. Whilst the library presented here will require some further work so that it can be used in real projects, including validation and exception handling, it can serve as the basis for projects that require Fuzzy Inferencing. It is also recommended to look at some open-source projects that are available, in particular skfuzzy, a fuzzy logic toolbox for SciPy.", "In the next article, we will examine ways whereby a fuzzy system can be created from a dataset so that that fuzzy logic can be used in machine learning scenarios. Similarly to this introduction to Fuzzy Logic concepts, a practical article will follow.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Passionate about engineering, AI and their impact on society- carmelgafa.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F8af88d1f0a6e&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@carmelgafa?source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@carmelgafa?source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": "Carmel Gafa"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6724b79eb1b0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&user=Carmel+Gafa&userId=6724b79eb1b0&source=post_page-6724b79eb1b0----8af88d1f0a6e---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8af88d1f0a6e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8af88d1f0a6e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/a-very-brief-introduction-to-fuzzy-logic-and-fuzzy-systems-d68d14b3a3b8", "anchor_text": "previous article"}, {"url": "https://github.com/carmelgafa/ml_from_scratch/tree/master/fuzzy_inference", "anchor_text": "Github"}, {"url": "https://towardsdatascience.com/a-very-brief-introduction-to-fuzzy-logic-and-fuzzy-systems-d68d14b3a3b8", "anchor_text": "article"}, {"url": "https://pythonhosted.org/scikit-fuzzy/", "anchor_text": "skfuzzy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8af88d1f0a6e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&user=Carmel+Gafa&userId=6724b79eb1b0&source=-----8af88d1f0a6e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8af88d1f0a6e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&user=Carmel+Gafa&userId=6724b79eb1b0&source=-----8af88d1f0a6e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8af88d1f0a6e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F8af88d1f0a6e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----8af88d1f0a6e---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----8af88d1f0a6e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@carmelgafa?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@carmelgafa?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Carmel Gafa"}, {"url": "https://medium.com/@carmelgafa/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "107 Followers"}, {"url": "http://carmelgafa.com", "anchor_text": "carmelgafa.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6724b79eb1b0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&user=Carmel+Gafa&userId=6724b79eb1b0&source=post_page-6724b79eb1b0--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F398fca6166f8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzy-inference-system-implementation-in-python-8af88d1f0a6e&newsletterV3=6724b79eb1b0&newsletterV3Id=398fca6166f8&user=Carmel+Gafa&userId=6724b79eb1b0&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}