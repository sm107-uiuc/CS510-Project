{"url": "https://towardsdatascience.com/serving-machine-learning-models-from-python-bd8c43fb61d5", "time": 1683017659.2485461, "path": "towardsdatascience.com/serving-machine-learning-models-from-python-bd8c43fb61d5/", "webpage": {"metadata": {"title": "Serving Machine Learning Models from Python | by Furkan Artun\u00e7 | Towards Data Science", "h1": "Serving Machine Learning Models from Python", "description": "In this article I am going to show how to built a simple model server application using pypmml, os.stat module and Flask. The main serving format will be pmml but it can be extended other formats\u2026"}, "outgoing_paragraph_urls": [{"url": "http://dmg.org/", "anchor_text": "DMG (Data Mining Group)", "paragraph_index": 1}, {"url": "https://docs.python.org/3/library/logging.config.html", "anchor_text": "link", "paragraph_index": 3}, {"url": "https://github.com/beetbox/confuse", "anchor_text": "confuse library", "paragraph_index": 4}, {"url": "https://stackoverflow.com/questions/4205130/what-is-duck-typing#:~:text=duck%20typing%20is%20a%20style,implementation%20of%20a%20specific%20interface.", "anchor_text": "duck typing", "paragraph_index": 5}, {"url": "https://github.com/autodeployai/pypmml-spark", "anchor_text": "pypmml", "paragraph_index": 6}, {"url": "https://www.baeldung.com/spring-scheduled-tasks", "anchor_text": "@Scheduled", "paragraph_index": 8}, {"url": "https://realpython.com/inner-functions-what-are-they-good-for/", "anchor_text": "python-closure", "paragraph_index": 8}, {"url": "https://realpython.com/primer-on-python-decorators/", "anchor_text": "python-decorators", "paragraph_index": 8}, {"url": "https://pypi.org/project/watchdog/", "anchor_text": "watchdog", "paragraph_index": 10}, {"url": "https://docs.python.org/3/library/stat.html", "anchor_text": "os.stat module", "paragraph_index": 10}, {"url": "https://github.com/artuncF/Simple-Generic-ML-Model-Server", "anchor_text": "my github", "paragraph_index": 19}], "all_paragraphs": ["In this article I am going to show how to built a simple model server application using pypmml, os.stat module and Flask. The main serving format will be pmml but it can be extended other formats (which are supported by pypmml ) as well.", "Before starting to talk about details, I should explain why I used pmml as main format. It is a commonly used and well supported standart developed by DMG (Data Mining Group). It is easy to move pmml files one machine to another machine and they are platform independent. Pickle models are dependent on the class which is used while creating model. If the model class changes with next library version, you will not be able to unpickle models with never version. Unlike pickle, loading and unloading pmml models are not dependent on the class they are created from. Therefore, pmml is a robust format to serve machine learning models. It has a reasonable amount of variation in models they support. The only con of serving models as pmml is that it is heavy, it reserves a lot of memory comparing serialized formats. It can be an issue if there is a lot of models; otherwise, it is safe format.", "At first the application configuration should be done. I used YAML format to configure application. Configuration file as follows:", "The configuration includes the watcher module tag and its required parameters. Setting models_path parameter requires an environment variable which is PROJECT_HOME to be set. It should be exported to point the right location for model files while in your python environment. If you are unfamiliar with environment variables and bash command you can update the config file as you wish. The app tag contains the required parameters to run flask app. If your 9001 port is occupied by another process, you better set it to unoccupied port to start app. As it can be seen logging configuration is added here as well. It has two loggers for two main component with a log formatter. It has a basic console handler, the file handlers can be added. You can check the link for detailed info.", "Then in order to use this configuration in modules, we have to load it. I used a library called confuse to load configuration. It can automatically look for a config.yaml file in project or you can guide with path. The PyYAML can also be used but I currently found the confuse and I wanted to use it. You can find the detailed info for confuse library:", "Above code snippet is the util module to load configuration. A configuration class inherited from confuse.Configuration is created to set custom parameter config_dir. Then the application name is given to notice that which application\u2019s config will be loaded. ModelServerAppConf returns a kind of view object. Unless you call get() on cfg object, it will return a hard to use \u201cunidentifiable flying object(ufo)\u201d . Otherwise, you get a dictionary and parameters can be accessed easily. I debugged the app for 30 minutes because the logging module couldn\u2019t read the version property caused by the returned object is not dict and the property cannot be read. It made me consider the statement that duck typing leads faster development/prototyping. Anyway do not forget to call get() while using confuse library to load configuration.", "It is very easy to load existing machine learning models using pypmml library. It does not matter whether you published pmml file from knime, python or sas. The library supports other file types as well.", "Above code is a util module that contains model loading function.", "Because I want to poll a directory for changes in specific intervals I need a delayer method. The solution that I come up with is inspired by the Spring\u2019s @Scheduled annotation used with fixed delay. Python has a cool feature as decorators which extends (functionality not inheritance), decorates and wraps the caller objects mentioning that the functions are also objects in python. Grasping the logic of decorators requires understanding the closure in python. The explanation for closure can be reached from python-closure and for decorators from python-decorators.", "I want to mention the class attributes here. In wrapper function, you can access the the caller object (Wrapper class in this case) reference (self) which uses the decorator. Then using the getattr function, the specific attribute can be retrieved from class. It is used here to pass class property fixedDelay time to decorator as parameter.", "To consistently poll a directory, there are alternative solutions like watchdog. I prefer to build it with using more primitive blocks. The watcher module uses the listdir from os and benefits from the functionality given by os.stat module. You can check the modification events on directory for specific files ignoring the unintended changes.", "The watcher has 3 polling methods called with scheduled decorator giving the delay property names as parameter. Poll app service constantly checks the pmml serving app is up or down. Poll delete and poll load functions controls the directory for deleting or adding operations. notify_host_on_change is the callback for these 3 methods to inform server app about modifications. If the app server down, it cannot send any information to server and constantly tries to send. When the app gets up, the metadata will be refreshed and send to server calling the load end point. On operation delete the unload end point called to delete model from server. To start watching call the watch method in file watcher object.", "Now it is time to define end points a.k.a flask routes. There are 5 end points to such as health, info, load, unload, predict. The info end point can be used by user to learn about model names and features. The predict is used to make prediction as well. The other end points used by wrapper module. When a new model put into the models directory, watcher calls the load module to make new model ready for prediction. The same procedure is applied for removed models with unload route.", "There is no constraint that prevents users to call load, unload and it may fool the application. It is the one of the open points for this application along with other security configurations.", "So we now have what we all need. We can start up the application.", "I am starting the watcher first using the python src/watcher.py command. I intentionally logged $PROJECT_HOME as it is to not expose info, you should see a full path in your log.", "Then starting the server with writing python app.py and hitting enter from command line. I strongly suggest you to use virtual environments for your python projects. If you are using already be sure you are in the right environment.", "We saw that the application is on the way and loaded a model. I am using postman for http client. So I call info end point with get request for demonstration purposes and the response is as follows:", "The returning response shows the needed features and model names when performing prediction. So the prediction request body consists of model name and features in json format. After getting models info, we can make prediction via predict endpoint using given example event.", "In this article, I try to demonstrate a model server developed using python. Developing models, making them production ready and preparing the infrastructure is the daily job for machine learning engineer. It is a simple demonstration to give inspiration and idea. I hope it is useful. You can access the entire project from my github.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "MSc. Student @ITU | Software Engineer & Machine Learning Engineer"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fbd8c43fb61d5&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://fuartunc.medium.com/?source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": ""}, {"url": "https://fuartunc.medium.com/?source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": "Furkan Artun\u00e7"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9cdc40dcac24&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&user=Furkan+Artun%C3%A7&userId=9cdc40dcac24&source=post_page-9cdc40dcac24----bd8c43fb61d5---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbd8c43fb61d5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbd8c43fb61d5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/hands-on-tutorials", "anchor_text": "Hands-on Tutorials"}, {"url": "https://unsplash.com/@coldenbourg?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Carl Oldenbourg"}, {"url": "https://unsplash.com/s/photos/server?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "http://dmg.org/", "anchor_text": "DMG (Data Mining Group)"}, {"url": "https://docs.python.org/3/library/logging.config.html", "anchor_text": "link"}, {"url": "https://github.com/beetbox/confuse", "anchor_text": "confuse library"}, {"url": "https://stackoverflow.com/questions/4205130/what-is-duck-typing#:~:text=duck%20typing%20is%20a%20style,implementation%20of%20a%20specific%20interface.", "anchor_text": "duck typing"}, {"url": "https://github.com/autodeployai/pypmml-spark", "anchor_text": "pypmml"}, {"url": "https://www.baeldung.com/spring-scheduled-tasks", "anchor_text": "@Scheduled"}, {"url": "https://realpython.com/inner-functions-what-are-they-good-for/", "anchor_text": "python-closure"}, {"url": "https://realpython.com/primer-on-python-decorators/", "anchor_text": "python-decorators"}, {"url": "https://pypi.org/project/watchdog/", "anchor_text": "watchdog"}, {"url": "https://docs.python.org/3/library/stat.html", "anchor_text": "os.stat module"}, {"url": "https://github.com/artuncF/Simple-Generic-ML-Model-Server", "anchor_text": "my github"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----bd8c43fb61d5---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/python-flask?source=post_page-----bd8c43fb61d5---------------python_flask-----------------", "anchor_text": "Python Flask"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----bd8c43fb61d5---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/editors-pick?source=post_page-----bd8c43fb61d5---------------editors_pick-----------------", "anchor_text": "Editors Pick"}, {"url": "https://medium.com/tag/hands-on-tutorials?source=post_page-----bd8c43fb61d5---------------hands_on_tutorials-----------------", "anchor_text": "Hands On Tutorials"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbd8c43fb61d5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&user=Furkan+Artun%C3%A7&userId=9cdc40dcac24&source=-----bd8c43fb61d5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbd8c43fb61d5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&user=Furkan+Artun%C3%A7&userId=9cdc40dcac24&source=-----bd8c43fb61d5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbd8c43fb61d5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fbd8c43fb61d5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----bd8c43fb61d5---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----bd8c43fb61d5--------------------------------", "anchor_text": ""}, {"url": "https://fuartunc.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://fuartunc.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Furkan Artun\u00e7"}, {"url": "https://fuartunc.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "19 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9cdc40dcac24&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&user=Furkan+Artun%C3%A7&userId=9cdc40dcac24&source=post_page-9cdc40dcac24--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F9cdc40dcac24%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fserving-machine-learning-models-from-python-bd8c43fb61d5&user=Furkan+Artun%C3%A7&userId=9cdc40dcac24&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}