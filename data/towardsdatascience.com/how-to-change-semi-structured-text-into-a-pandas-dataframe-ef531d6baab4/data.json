{"url": "https://towardsdatascience.com/how-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4", "time": 1683016394.849799, "path": "towardsdatascience.com/how-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4/", "webpage": {"metadata": {"title": "How to change semi-structured text into a Pandas dataframe | by Alan Jones | Towards Data Science", "h1": "How to change semi-structured text into a Pandas dataframe", "description": "These days much of the data you find on the internet are nicely formatted as JSON, Excel files or CSV. But some aren\u2019t. I needed a simple dataset to illustrate my articles on data visualisation in\u2026"}, "outgoing_paragraph_urls": [{"url": "https://technofile.substack.com/", "anchor_text": "articles", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/plotting-with-pandas-an-introduction-to-data-visualization-8bd7c0831650", "anchor_text": "Python", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/starting-data-visualization-with-the-julia-langauge-and-jupyter-notebooks-289bc9f0cd09", "anchor_text": "Julia", "paragraph_index": 1}, {"url": "https://technofile.substack.com/", "anchor_text": "here", "paragraph_index": 44}, {"url": "https://projectcodeed.blogspot.com/2021/02/an-alternative-method-for-changing-semi.html", "anchor_text": "here", "paragraph_index": 45}], "all_paragraphs": ["These days much of the data you find on the internet are nicely formatted as JSON, Excel files or CSV. But some aren\u2019t.", "I needed a simple dataset to illustrate my articles on data visualisation in Python and Julia and decided upon weather data (for London, UK) that was publicly available from the UK Met Office.", "The problem was that it was a text file that looked like a CSV file but it was actually really formatted for a human reader. So, I needed to do a bit of cleaning and tidying in order to be able to create a Pandas dataframe and plot graphs.", "This article is about the different techniques that I used to transform this semi-structured text file into a Pandas dataframe with which I could perform data analysis and plot graphs.", "I could, no doubt, have converted the file with a text editor \u2014 that would have been very tedious. But I decided it would be more fun to do it programmatically with Python and Pandas. Also, and perhaps more importantly, writing a program to download and format the data meant that I could automatically keep it up to date with no extra effort.", "There were a number of problems. First, there was the structure of the file. The data were tabulated but preceded by a free format description, so this was the first thing that had to go. Secondly, the column names were in two rows rather than the one that is conventional in a spreadsheet file. Then, although it looked a bit like a CSV file, there were no delimiters: the data were separated by a variable number of blank spaces.", "Lastly, the number of data columns changed part way through the file. The data ranges from 1948 to the current time but the figures for 2020 were labelled \u2018Provisional\u2019 in an additional column.", "Then there was the form of the data. In the early years some data were missing and that missing data was represented by a string of dashes. Other columns had a \u2018#\u2019 attached to what was otherwise numeric data. Neither of these could be recognised as numerical data by Pandas.", "Each of these problems had to be addressed for Pandas to make sense of the data.", "The data is in the public domain and provided by the Met Office as a simple text file. You can see the format in the image at the top of this article (along with the resulting dataframe and a graph drawn from the data).", "Reading a csv file in Pandas is quite straightforward and, although this is not a conventional csv file, I was going to use that functionality as a starting point.", "The function read_csv from Pandas is generally the thing to use to read either a local file or a remote one. Unfortunately, this did not work with the Met Office file because the web site refuses the connection. I\u2019m not 100% sure but I imagine it is because it doesn\u2019t like the \u2018User Agent\u2019 in the HTTP header supplied by the function (the user agent is normally the name/description of the browser that is accessing the web page \u2014 I don\u2019t know, offhand, what read_csv sets it to).", "I\u2019m not aware of any mechanism that will allow me to change the User Agent for read_csv but there is a fairly simple way around this: use the requests library. (The requests library lets you set the HTTP headers including the User Agent.)", "Using requests you can download the file to a Python file object and then use read_csv to import it to a dataframe. Here\u2019s the code.", "First import the libraries that we will use:", "(If you have any missing you\u2019ll have to conda/pip install them.)", "And here is the code to download the data:", "Just a minute, didn\u2019t I say that I was going to set the User Agent? Well, as it happens, the default setting that requests uses appears to be acceptable to the Met Office web site, so without any further investigation, I just used the simple function call you see above. The requests call gets the file and returns the text. That is then converted to a file object by StringIO.", "Now we are nearly ready to read the file. I needed to take a look at the raw file first and this showed me that the first 5 lines were unstructured text. I would need to skip those lines to read the file as csv.", "The next two lines were the column names. I decided to skip those, too, and provide my own names. Those names are \u2018Year\u2019, \u2018Month\u2019, \u2018Tmax\u2019, \u2018Tmin\u2019, \u2018AF\u2019, \u2018Rain\u2019, \u2018Sun\u2019. The first two are obvious, Tmax and Tmin are the maximum and minimum temperatures in a month, AF is the number of days when there was air frost in a month, Rain is the number of millimeters of rain and Sun is the number of hours of sunshine.", "I recorded these things in variables like this:", "These will be used in the read_csv call.", "read_csv needs some other parameters set for this particular job. It needs to know the delimiter used in the file, the default is a comma (what else?) but here the delimiter is a space character, in fact more than one space character. So, I need to tell pandas this (delimiter=` \u00b4). And because there are several spaces between the fields, Pandas needs to know to ignore these (skipinitialspace=True).", "I need to tell it that it should skip the first few rows (skiprows=comment_lines+header), not regard any row in the file as a header (header=None) and the names of the columns (names=col_names).", "Finally, I know that when it gets to the year 2020 the number of columns change. This would normally throw an exception and no dataframe would be returned. But setting error_bad_lines=False suppresses the error and ignores the bad lines.", "Here is the resulting code that creates the dataframe weather.", "That produces a dataframe that contains all the data up the first bad line (the one with the extra column).", "The individual data items need fixing but the next job is to append the rest of the file. This time I\u2019ll read the file again, using similar parameters but I\u2019ll find the length of the dataframe that I\u2019ve just read and skip all of those lines. The remaining part of the file contains 8 columns, so I need to add a new column name as well. Otherwise the call to read_csv is similar to before.", "Also, notice that I had to set the pointer back to the beginning of the file using seek(0) otherwise there would be nothing to read as we already had reached the end of the file.", "Similar to the other dataframe but with an extra column.", "The next trick is to merge the two dataframes and to do this properly I have to make them the same shape. So, I have a choice, delete the Status column in the second dataframe or add one to the first dataframe. For the purposes of this exercise, I\u2019ve decided to not lose the status information and add a column to the first. The extra column is called Status and for the 2020 data its value is \u2018Provisional\u2019. So, I\u2019ll create a Status column in the first dataframe and set all the values to \u2018Final\u2019.", "And now I\u2019ll append the second dataframe to the first and add the parameter ignore_index=True in order not to duplicate the indices but rather create a new index for the combined dataframe.", "Now we have to deal with the data in each column. Let\u2019s take a look at the data types.", "As you can see, Pandas has done its best to interpret the data types: Tmax, Tmin and Rain are correctly identified as floats and Status is an object (basically a string). But AF and Sun have been interpreted as strings, too, although in reality they ought to be numbers. The reason for this is that some of the values in the Sun and AF columns are the string \u2018 \u2014 -\u2019 (meaning no data) or the number has a # symbol attached to it.", "It\u2019s only the Sun column that has the # symbol attached to the number of hours of sunshine, so the first thing is to just get rid of that character in that column. A string-replace does the job; the code below removes the character by replacing it with an empty string.", "Now the numbers in the Sun column are correctly formatted but Pandas still regards the Sun and AF columns data as strings so we can\u2019t read the column as numbers and cannot therefore draw charts using this data.", "Changing the representation of the data is straightforward; we use the function to_numeric to convert the string values to numbers. Using this function the string would convert the string \u201c123.4\u201d to a floating point number 123.4. But some of the values in the columns that we want to convert are the string \u2018 \u2014 -\u2019, which cannot be reasonably interpreted as a number.", "The trick is to set the parameter errors to coerce. This will force any strings that cannot be interpreted as numbers to the value NaN (not a number) which is the Python equivalent of a null numeric value. And this is exactly what we want because the string \u2018 \u2014 -\u2019 in this dataframe means \u2018no data\u2019.", "Here is the code to correct the values in the two columns.", "The dataframe now looks like this:", "You can see the NaN values and if we look at the data types again we see this:", "Now all of the numeric data are floating point values \u2014 exactly what is needed.", "To illustrate that this is what we want here is a plot of the rainfall for the year 2000.", "It is unlikely that you will find that you need to do exactly the same manipulations on a text file that I have demonstrated here but I hope that you may have found my experience useful and that you may be able to adapt the techniques that I have used here for your own purposes.", "Thanks for reading and if you would like to keep up to date with the articles that I publish, please consider subscribing to my free newsletter here.", "Update: I have written a new more generic version of the above program here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fef531d6baab4&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://me.dm/@alanjones", "anchor_text": "Mastodon"}, {"url": "https://towardsdatascience.com/?source=post_page-----ef531d6baab4--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ef531d6baab4--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@alan-jones?source=post_page-----ef531d6baab4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@alan-jones?source=post_page-----ef531d6baab4--------------------------------", "anchor_text": "Alan Jones"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7d3f5fb94faa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&user=Alan+Jones&userId=7d3f5fb94faa&source=post_page-7d3f5fb94faa----ef531d6baab4---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fef531d6baab4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fef531d6baab4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://technofile.substack.com/", "anchor_text": "articles"}, {"url": "https://towardsdatascience.com/plotting-with-pandas-an-introduction-to-data-visualization-8bd7c0831650", "anchor_text": "Python"}, {"url": "https://towardsdatascience.com/starting-data-visualization-with-the-julia-langauge-and-jupyter-notebooks-289bc9f0cd09", "anchor_text": "Julia"}, {"url": "https://technofile.substack.com/", "anchor_text": "here"}, {"url": "https://projectcodeed.blogspot.com/2021/02/an-alternative-method-for-changing-semi.html", "anchor_text": "here"}, {"url": "https://medium.com/tag/data-science?source=post_page-----ef531d6baab4---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----ef531d6baab4---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/pandas?source=post_page-----ef531d6baab4---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/programming?source=post_page-----ef531d6baab4---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/hands-on-tutorials?source=post_page-----ef531d6baab4---------------hands_on_tutorials-----------------", "anchor_text": "Hands On Tutorials"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fef531d6baab4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&user=Alan+Jones&userId=7d3f5fb94faa&source=-----ef531d6baab4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fef531d6baab4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&user=Alan+Jones&userId=7d3f5fb94faa&source=-----ef531d6baab4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fef531d6baab4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ef531d6baab4--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fef531d6baab4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----ef531d6baab4---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----ef531d6baab4--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----ef531d6baab4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----ef531d6baab4--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----ef531d6baab4--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----ef531d6baab4--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----ef531d6baab4--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----ef531d6baab4--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----ef531d6baab4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@alan-jones?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@alan-jones?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Alan Jones"}, {"url": "https://medium.com/@alan-jones/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7d3f5fb94faa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&user=Alan+Jones&userId=7d3f5fb94faa&source=post_page-7d3f5fb94faa--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ffc3a6cdb7554&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-change-semi-structured-text-into-a-pandas-dataframe-ef531d6baab4&newsletterV3=7d3f5fb94faa&newsletterV3Id=fc3a6cdb7554&user=Alan+Jones&userId=7d3f5fb94faa&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}