{"url": "https://towardsdatascience.com/emojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535", "time": 1682996781.680597, "path": "towardsdatascience.com/emojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535/", "webpage": {"metadata": {"title": "EMOJIFY- Machine Learning Web App using Flask + Containerization +Deployment on AWS | by Sriram TM | Towards Data Science", "h1": "EMOJIFY- Machine Learning Web App using Flask + Containerization +Deployment on AWS", "description": "In this tutorial, I will share my learning on building a simple end to end Machine Learning web app using Flask and later deploying it on AWS. The purpose of an ML model is well served only if it can\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/bfelbo/DeepMoji/tree/master/data", "anchor_text": "Deep Moji", "paragraph_index": 1}, {"url": "https://deepmoji.mit.edu/", "anchor_text": "link", "paragraph_index": 1}, {"url": "https://github.com/SRIRAM777/Emojify-ML-Flask-App", "anchor_text": "Github repo.", "paragraph_index": 1}, {"url": "https://github.com/bfelbo/DeepMoji/tree/master/data", "anchor_text": "Deep Moji", "paragraph_index": 4}, {"url": "https://docs.docker.com/docker-for-mac/install/", "anchor_text": "link", "paragraph_index": 21}, {"url": "https://aws.amazon.com/free/", "anchor_text": "link", "paragraph_index": 25}, {"url": "https://www.linkedin.com/in/sriram-muralishankar/", "anchor_text": "Sriram Muralishankar", "paragraph_index": 40}, {"url": "https://www.linkedin.com/in/sriram-muralishankar/", "anchor_text": "https://www.linkedin.com/in/sriram-muralishankar/", "paragraph_index": 42}], "all_paragraphs": ["In this tutorial, I will share my learning on building a simple end to end Machine Learning web app using Flask and later deploying it on AWS. The purpose of an ML model is well served only if it can be used interactively through a web app by the users. The traditional Jupyter notebooks only provide an interactive console and are not much useful for leveraging it to a web app.", "Flask is a micro-framework written in Python which can help us in quickly getting started in building the app. We will train the data from Deep Moji dataset using Long Short Term Memory(LSTM) units in Keras. We will then save the final model as a HDF5 file and use it later for prediction purpose. The final application will be working similarly like the one mentioned in this link. Let\u2019s dive deeper on how the whole web app can be built and deployed in AWS using a Docker container. The code for this project can be found in my Github repo.", "8. Pushing the Docker image to AWS ECR", "9. Deploying the Flask app on AWS EC2", "We will be using the Deep Moji dataset and in particular the PsychExp dataset for building the model. The dataset consists of 7840 samples, in which each line contains a text message and the labels which are encoded as a One Hot vector. The labels belong to one of these 7 classes \u2014 [Joy, Fear, Anger, Sadness, Disgust, Shame, Guilt]. An example line in the dataset looks like this: [ 1. 0. 0. 0. 0. 0. 0.] I am very happy today.", "In this function we are extracting the texts and labels from the pickle file and then writing them to a text file.", "In read text file function we are returning a list which contains the text messages and labels. Then we are separating out the messages and labels into separate lists.", "For any ML model, we have to feed the data in a numerical format so that they can be processed. Similarly, in order to classify our input text among the 7 classes, we have to convert our input sentence into a word vector representation. We will be using the pre-trained 50-dimensional Glove word embeddings for this purpose.", "The above \u2018read_glove_vector\u2019 function returns a list of indices given their words, words given their indices and the corresponding 50-dimensional representation for each word.", "Before building the embedding layer let us know why an Embedding layer is used. Let us consider that we have a text corpus of 1000 words. The one hot encoding of each word in the text will be a vector having 999 zeros and 1 non zero value. These vectors are very sparse and are not very suitable for large datasets. In word embeddings, the words are represented by dense vectors where each vector is the projection of a word in continuous vector space. So, instead of projecting the words in a higher dimension, word embeddings help in projecting them into a much lower dimension. Moreover, word embeddings help us in capturing the relationship between words which are otherwise difficult to capture using one hot encoded vectors. Let us see how we implement this embedding layer for our app:", "Here the first argument to the embedding layer is the total number of words in the Glove word embeddings and the second argument is the dimension in which each word is represented in the vector space.", "Bi-Directional RNN\u2019s have two networks- one which trains information in the forward direction and the other in the reverse direction. Hence these models have access to both past as well as the future data unlike the standard LSTM\u2019s which have access to only the past data.", "Let us see its implementation in our app using Keras.", "Here we are building a deep recurrent neural network which contains a Bi-Directional LSTM with Batch Normalization and Dropout. Softmax activation is used here to get the probability distribution across the 7 classes.", "This is a simplified image showing the architecture of our whole LSTM model.", "We will be using Categorical Cross Entropy as our loss function since we will be classifying the output among the 7 classes. We will be trying to minimize this loss in each epoch so that it performs well on the test data. Adam optimizer is used which helps us in speeding up the training process. Accuracy is the performance metric that we use here to evaluate the model.", "We will be then using the save_model of Tensorflow to save the Keras model so that we can load it later to give out predictions. An accuracy of 86% was achieved after training for 30 epochs.", "First we have to install flask using the command- pip install flask. Then create a file called application.py which is the main backend file for our application.", "First, we have to instantiate an object of the Flask class. We are then loading the already trained model using the load_model function. We have also saved a pickle file for the text tokenizer so that it can be used for tokenizing the future text inputs. There are two routes- predict and update. The \u2018predict\u2019 route receives the values entered in the input text field and we tokenize the text using the tokenizer object. We make predictions for the input text using the loaded model and then return the response back in JSON format. The \u2018update\u2019 route is used for updating the predicted values if they are incorrect in order to fine tune the model for new inputs. Although this might not be the correct way of updating the model in large scale systems, I wanted to try out how model retraining works. To return back the correct Emoji responses for the prediction, the following Javascript file is created.", "Another Javascript file can help us in the update action by choosing the values from the dropdown and send a POST request to the \u2018update\u2019 route to update the values. I\u2019m not very great in building the UI and hence the frontend part can very well be changed according to our needs.", "We will be making our app to run on host 0.0.0.0 and port 5000. We will configure this in the Docker file also. This is how the final application after running in our localhost looks like.", "Docker is an open source application that allows users to create, manage, deploy applications using containers. Applications that are run using Docker reside in an environment of their own and house dependencies that are needed for running the application. Docker can be installed on Mac using the following link. After installing docker move to our application folder in the terminal. Create a Docker file which instructs the docker to install the dependencies and perform other commands while building the docker image.", "The above Dockerfile instructs the docker to install python from the Docker hub and then create an \u2018app\u2019 directory to copy all the contents of our web app. It then installs all the packages mentioned in the requirements.txt file. Then the port 5000 is exposed to access the application from outside the container. By default, the application.py file is run using the CMD command. We will name the docker image \u2018flaskapp\u2019. Now we have to build the docker image using the following command.", "The \u2018.\u2019 at the end of this command copies all the files in the current directory to build the image. We will then run the docker container at port 5000 using the docker image that is created above. The command is as follows:", "Check if the application is accessible outside the container by launching the app on port 5000 in the browser.", "I assume that there is already an account created in AWS. If not, anyone can get started for free by following this link. We have to install the awscli in our desktop by using pip install awscli --upgrade --user in order to perform actions in AWS directly from the terminal. We have to configure our AWS credentials using the command aws configure from our terminal where we enter our access key ID, secret access key, default region, and output format.", "We will be using the AWS Elastic Container Registry to store and deploy our docker container images. We have to first create a repository in AWS ECR in order to store Docker images. This is done using the following command:", "Then to get permission to access the AWS ECR we enter the following command-", "Then we tag our flaskapp container in local with the repository that is created. Here account_id and region name differs for each user.", "Then we have to push our local docker image to the repository created in AWS ECR.", "After pushing the image to AWS ECR, we have to create an EC2 instance in which we can serve the web app. AWS offers many instances in the free tier range and we can make use of that. We will be launching a Linux machine with most of the configurations which are set by default and the security groups alone which are changed as follows:", "SSH -> Only from our IP and", "These security group rules are necessary for our web app to run. Once the instance is launched and is running, we can ssh into the instance by entering the following command in the terminal in the same folder in which our \u2018pem\u2019 file is present.", "Once we are logged into the instance we can install docker by using the following command and start it.", "We have to configure the AWS credentials as we did before by entering aws configure command again. Then enter the following commands so that the ec2 user is added to perform docker commands in Linux machine.", "Then exit the instance and ssh again into the instance. Run the following commands to pull the docker image from AWS ECR and then run the docker container in the Linux machine.", "Get the public IP of the instance from the instance details page and add port 5000 while launching it in the browser. Voila!!! The app is finally up and running on AWS.", "Let us check for some inputs where wrong predictions are given.", "Now we shall update the model with the label as \u2018Sad\u2019 for the above input.", "There it is!! The model has updated its response for the new input text and will try to improve its predictions for future inputs.", "Since this is my first blog, I request you folks to share your views about the content and quality of this blog. If there are any doubts, I am more than happy to help. You can connect with me on Linkedin @ Sriram Muralishankar .", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "ML Aspirant. Loves learning new stuff especially anything related to AI. Freshworks. Linkedin- https://www.linkedin.com/in/sriram-muralishankar/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F14a9bdb75535&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----14a9bdb75535--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----14a9bdb75535--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@sriramtm97?source=post_page-----14a9bdb75535--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sriramtm97?source=post_page-----14a9bdb75535--------------------------------", "anchor_text": "Sriram TM"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feff66bd41bdf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&user=Sriram+TM&userId=eff66bd41bdf&source=post_page-eff66bd41bdf----14a9bdb75535---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F14a9bdb75535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F14a9bdb75535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/bfelbo/DeepMoji/tree/master/data", "anchor_text": "Deep Moji"}, {"url": "https://deepmoji.mit.edu/", "anchor_text": "link"}, {"url": "https://github.com/SRIRAM777/Emojify-ML-Flask-App", "anchor_text": "Github repo."}, {"url": "https://github.com/bfelbo/DeepMoji/tree/master/data", "anchor_text": "Deep Moji"}, {"url": "http://thelillysblog.com/2017/10/02/sentiment-analysis-with-deep-learning/", "anchor_text": "Architecture of our Neural Network"}, {"url": "https://docs.docker.com/docker-for-mac/install/", "anchor_text": "link"}, {"url": "https://aws.amazon.com/free/", "anchor_text": "link"}, {"url": "https://www.linkedin.com/in/sriram-muralishankar/", "anchor_text": "Sriram Muralishankar"}, {"url": "https://github.com/bfelbo/DeepMoji/tree/master/data", "anchor_text": "https://github.com/bfelbo/DeepMoji/tree/master/data"}, {"url": "https://github.com/Kulbear/deep-learning-coursera/blob/master/Sequence%20Models/Emojify%20-%20v2.ipynb", "anchor_text": "https://github.com/Kulbear/deep-learning-coursera/blob/master/Sequence%20Models/Emojify%20-%20v2.ipynb"}, {"url": "https://docs.aws.amazon.com/", "anchor_text": "https://docs.aws.amazon.com/"}, {"url": "https://docs.docker.com/", "anchor_text": "https://docs.docker.com/"}, {"url": "https://medium.com/tag/docker?source=post_page-----14a9bdb75535---------------docker-----------------", "anchor_text": "Docker"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----14a9bdb75535---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----14a9bdb75535---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/aws?source=post_page-----14a9bdb75535---------------aws-----------------", "anchor_text": "AWS"}, {"url": "https://medium.com/tag/data-science?source=post_page-----14a9bdb75535---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F14a9bdb75535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&user=Sriram+TM&userId=eff66bd41bdf&source=-----14a9bdb75535---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F14a9bdb75535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&user=Sriram+TM&userId=eff66bd41bdf&source=-----14a9bdb75535---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F14a9bdb75535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----14a9bdb75535--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F14a9bdb75535&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----14a9bdb75535---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----14a9bdb75535--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----14a9bdb75535--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----14a9bdb75535--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----14a9bdb75535--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----14a9bdb75535--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----14a9bdb75535--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----14a9bdb75535--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----14a9bdb75535--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sriramtm97?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sriramtm97?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sriram TM"}, {"url": "https://medium.com/@sriramtm97/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "6 Followers"}, {"url": "https://www.linkedin.com/in/sriram-muralishankar/", "anchor_text": "https://www.linkedin.com/in/sriram-muralishankar/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feff66bd41bdf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&user=Sriram+TM&userId=eff66bd41bdf&source=post_page-eff66bd41bdf--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2Feff66bd41bdf%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Femojify-machine-learning-web-app-using-flask-containerization-deployment-on-aws-14a9bdb75535&user=Sriram+TM&userId=eff66bd41bdf&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}