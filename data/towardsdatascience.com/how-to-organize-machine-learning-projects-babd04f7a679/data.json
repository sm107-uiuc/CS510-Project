{"url": "https://towardsdatascience.com/how-to-organize-machine-learning-projects-babd04f7a679", "time": 1683014242.8540668, "path": "towardsdatascience.com/how-to-organize-machine-learning-projects-babd04f7a679/", "webpage": {"metadata": {"title": "How to Organize Machine Learning Projects | by Rachel Draelos, MD, PhD | Towards Data Science", "h1": "How to Organize Machine Learning Projects", "description": "This post describes best practices for organizing machine learning projects that I have found to be highly effective during my PhD in machine learning. Python is a great language for machine\u2026"}, "outgoing_paragraph_urls": [{"url": "https://glassboxmedicine.com/2019/05/11/automated-chest-x-ray-interpretation/", "anchor_text": "chest x-ray classification", "paragraph_index": 9}, {"url": "https://www.anaconda.com/blog/using-pip-in-a-conda-environment", "anchor_text": "this can cause issues", "paragraph_index": 15}, {"url": "https://docs.conda.io/projects/conda/en/4.6.0/_downloads/52a95608c49671267e40c689e0bc00ca/conda-cheatsheet.pdf", "anchor_text": "Conda Cheat Sheet", "paragraph_index": 16}, {"url": "https://github.com/rachellea/pytorch-computer-vision", "anchor_text": "https://github.com/rachellea/pytorch-computer-vision", "paragraph_index": 17}, {"url": "https://github.com/rachellea/pytorch-computer-vision", "anchor_text": "https://github.com/rachellea/pytorch-computer-vision", "paragraph_index": 22}, {"url": "https://glassboxmedicine.com/2019/06/01/everything-you-need-to-know-about-preparing-tabular-data-for-machine-learning-code-included/", "anchor_text": "data processing tutorial", "paragraph_index": 30}, {"url": "https://github.com/rachellea/glassboxmedicine", "anchor_text": "code", "paragraph_index": 30}, {"url": "https://github.com/rachellea/pytorch-computer-vision/blob/master/src/unit_tests.py", "anchor_text": "here", "paragraph_index": 38}, {"url": "https://matplotlib.org/", "anchor_text": "matplotlib", "paragraph_index": 40}, {"url": "https://seaborn.pydata.org/", "anchor_text": "seaborn", "paragraph_index": 41}, {"url": "https://github.com/rachellea/pytorch-computer-vision", "anchor_text": "tutorial repository", "paragraph_index": 43}, {"url": "https://github.com/rachellea/pytorch-computer-vision/blob/master/Demo-0-Unit-Tests-and-Visualization.py", "anchor_text": "Demo-0-Unit-Tests-and-Visualization.py", "paragraph_index": 43}, {"url": "https://github.com/rachellea/pytorch-computer-vision/tree/master/src", "anchor_text": "src/unit_tests.py", "paragraph_index": 43}, {"url": "https://github.com/rachellea/pytorch-computer-vision/blob/master/load_dataset/custom_pascal.py", "anchor_text": "load_dataset/custom_pascal.py", "paragraph_index": 44}, {"url": "https://docs.python.org/3/library/pdb.html", "anchor_text": "Python debugger", "paragraph_index": 48}, {"url": "https://realpython.com/python-debugging-pdb/", "anchor_text": "import pdb and then put \u201cpdb.set_trace()\u201d at the specific point where you want to stop", "paragraph_index": 52}, {"url": "https://datapastry.com/blog/why-i-dont-use-jupyter-notebooks-and-you-shouldnt-either/", "anchor_text": "Why I don\u2019t use Jupyter notebooks and you shouldn\u2019t either", "paragraph_index": 55}, {"url": "https://towardsdatascience.com/5-reasons-why-jupyter-notebooks-suck-4dc201e27086", "anchor_text": "5 reasons why jupyter notebooks suck", "paragraph_index": 55}, {"url": "https://www.kdnuggets.com/2019/11/notebook-anti-pattern.html", "anchor_text": "The Notebook Anti-Pattern", "paragraph_index": 55}, {"url": "https://glassboxmedicine.com/2020/09/22/how-to-organize-machine-learning-projects-python-git-anaconda-code-and-no-jupyter-notebooks/", "anchor_text": "http://glassboxmedicine.com", "paragraph_index": 56}], "all_paragraphs": ["This post describes best practices for organizing machine learning projects that I have found to be highly effective during my PhD in machine learning.", "Python is a great language for machine learning. Python includes a bunch of libraries that are super useful for ML:", "Git version control is extremely useful for keeping machine learning projects organized.", "Git is a tool that can be used to keep track of all changes that you make to your code. A Git \u201crepository\u201d is a directory containing your code files. Git uses space-efficient techniques so that it does not store multiple copies of your code but instead stores relative changes between old files and new files. Git helps keep your directory of code files clean and organized because only the most recent versions are \u201cobviously\u201d present (although you can easily access any version of your code at any time). You choose when to mark that changes have occurred, using a \u201ccommit\u201d which bundles together specific changes to your code along with a written description that you provide. Git repositories also make it easy to share code and collaborate. On the whole, Git is a way better solution to preserving old code functionality than saving a million different versions of your code under \u201cmyscript_v1.py\u201d, \u201cdataprocessing_v56.py\u201d, \u201cutils_73.py\u201d and so on.", "Git version control is available through GitHub, GitLab, and Bitbucket to name a few. I use GitHub most frequently. Once you have GitHub set up and are used to using it, it takes about 2 minutes to set up a new repository.", "Here are the steps to get GitHub set up on your machine:", "Let\u2019s say you have now changed some code in myeditedscript.py. To \u201ccommit\u201d to the repository (i.e. log in that change):", "Anaconda is a package manager. It enables creation of different computing environments which may contain different Python versions and/or different packages and/or different package versions. Anaconda is especially useful when you are working on multiple projects that have conflicting dependencies.", "Anaconda is easy to use. Steps:", "Next, create an environment. I find it useful to name the environment after the project that it\u2019s for. For example, if the project is about chest x-ray classification using a neural network, the environment could be called chestxraynn:", "Note that you do NOT want to put quotes around the environment name, otherwise the quote characters themselves will be part of the environment name. Also, you can choose any version of Python that you want. It does not have to be Python 3.5.", "Once the environment is created it is time to activate the environment. \u201cActivation\u201d merely means that you will be \u201cput inside the environment\u201d so that you can use all of the software that\u2019s installed inside of it.", "To activate the environment on Windows, run this command:", "You can install packages inside the environment using the \u201cconda install\u201d command.", "For example, the conda command to install matplotlib is:", "You can just Google \u201cconda install packagename\u201d to locate the page that tells you what conda command to run to install that package. Technically within a conda environment you can also install packages using pip, but this can cause issues and so should be avoided if possible.", "Anaconda will take care of making sure that the versions of everything inside the environment are compatible. For more commands see the Conda Cheat Sheet.", "It\u2019s also possible to create a conda environment from a file that someone else has put together. In the GitHub repository https://github.com/rachellea/pytorch-computer-vision, there is a file called tutorial_environment.yml. This file specifies the dependencies needed to run the tutorial code. To create a conda environment based on this file, all you need to do is run the following command in the Anaconda prompt:", "Code organization is very important. At various points in the past I have encountered research code that is thousands of lines crammed in one module, with no documentation, repeated chunks of code copied and pasted everywhere, some blocks of code commented out with no explanation, and weird variable names. The code doesn\u2019t run, and even if it did run, it is probably not correct.", "I have also encountered a lot of nice code \u2014 for example, all the code I have looked at in the PyTorch implementation is organized and well-documented.", "It will save you a lot of time in the long run if you write good quality code for your own projects. One aspect of good quality code is its organization within a module.", "Use multiple modules to organize your code, and organize these modules into directories.", "A simple example organization that I like is demonstrated in the GitHub repository that I put together for this post and other related posts: https://github.com/rachellea/pytorch-computer-vision", "The overall organization is as follows:", "Here is the overall organization of the repository:", "Note that while there is a data set stored in this repository (those PNGs in the directories \u201ctrain\u201d, \u201cval\u201d, and \u201ctest\u201d) it is generally speaking not a good idea to put your data set into your repository. The only reason there is a data set in this repository is because it is a tiny fake dataset that was created for example purposes. Unless your data is very small, it should not go in the repository.", "Note that you need an empty file called __init__.py in each of the subdirectories so that modules can import files from these directories.", "Here is how to get a module called awesomecode.py to import a module called helpercode.py based on what directories they are located in relative to each other:", "It is good to write a lot of documentation. Comment everything. Document all your functions and methods and classes with docstrings. Sometimes it is helpful to document a function before you write it. It is also OK if the documentation is longer than the code sometimes. It\u2019s better to be \u201coverly clear\u201d than not clear enough.", "The image above is a simple function rand_rotate() that randomly rotates a 3D numpy array representing a CT volume. The docstring could be improved by specifying that <ctvol> is a 3D numpy array. The comments are helpful because they explain why the vector indicating what rotation was performed uses (k-1) \u2014 it\u2019s because the chosen_k is 1, 2, or 3 but Python is zero-indexed. Simple comments like this can prevent confusion later.", "The image above shows documentation from some of my data processing tutorial code.", "Documentation will ensure that when you look back on old code, you can quickly remember what it does. Documentation will prevent you from accidentally breaking your own code when you see something that looks weird and have the gut instinct to change it \u2014 if there\u2019s a comment next to it explaining why the weird thing is necessary, you\u2019ll leave it alone. Documentation will also enable other people to use your code.", "Always use descriptive variable names. \u201cvolumetric_attn_gr_truth\u201d is a better variable name than \u201ctruth\u201d (what truth?), and way better than \u201cgt\u201d or heaven forbid \u201cg\u201d. It is OK if your variables have long names. They should never ever have single-letter names.", "Even if you are iterating over rows and columns, use \u201crow\u201d and \u201ccol\u201d as your variable names instead of \u201ci\u201d and \u201cj\u201d. I once spent an entire day looking for a very weird bug that turned out to be caused by iterating over a 2D array incorrectly because I\u2019d switched \u201ci\u201d and \u201cj\u201d in one line of code out of hundreds. That was the last time I use a single-letter variable name.", "A lot of people claim that they don\u2019t have time to write tests for their code because \u201cit\u2019s just for research.\u201d I would argue that it\u2019s even more important to test research code, because the whole point of research is that you don\u2019t know what the \u201cright answer\u201d is \u2014 and how can you know if you\u2019ve reached the right answer if you don\u2019t know whether your code producing the answers is correct?", "Every time I have spent a day writing unit tests for my code, I have found mistakes \u2014 some of them tiny, and some of them more significant. If you write unit tests you will catch mistakes in your code. If you write unit tests for other people\u2019s code, you will find mistakes in their code as well.", "In addition to facilitating code correctness, unit testing also helps enforce good code organization, by discouraging you from writing \u201cgod functions\u201d that do too many things at once. God functions are usually a nightmare to test, and should be broken down into smaller, more manageable functions.", "At the very least, it\u2019s a good idea to unit test the most critical parts of your code, e.g. complicated data processing or strange tensor rearrangements within a model. It is never a waste of time to make sure that your code is right.", "You can see a very simple example of unit tests here. These unit tests include testing of some built-in PyTorch functions for demonstration purposes.", "Especially in computer vision, it is useful to perform sanity checks using visualizations.", "matplotlib is great for viewing images, segmentation maps, images with bounding boxes, etc. Here is an example of a visualization produced by applying matplotlib\u2019s imshow() function to an input image:", "seaborn is designed for statistical data visualization. It is great for making heatmaps and for producing sophisticated visualizations of performance metrics. Here are some examples of plots that can be made with approximately one line of code in seaborn:", "Both matplotlib and seaborn can be used to create visualizations that display in an instant whether the input data looks reasonable, whether the ground truth looks reasonable, whether the data processing has proceeded without messing anything up accidentally, whether a model\u2019s output makes sense, etc.", "In the tutorial repository, Demo-0-Unit-Tests-and-Visualization.py will run the unit tests in src/unit_tests.py and will then run visualizations of the PASCAL VOC 2012 dataset images and segmentation ground truth.", "In order to run the visualization part of the demo, change the path in the Demo-0-Unit-Tests-and-Visualization.py to a path on your machine in which you can store the PASCAL VOC 2012 dataset and uncomment the line under the path to download the dataset. Once the dataset is downloaded you can run the visualizations. The code that makes the visualizations is in load_dataset/custom_pascal.py. At the moment, the total number of images_to_visualize is set to 3 in the demo file; if you want to visualize more images, you can increase that number further, e.g. to 100.", "Here is what the visualizations look like:", "From the visualizations we can infer several useful things:", "If you are in a \u201cnon-interactive environment\u201d (i.e. a terminal with no graphical user interface) then you will need to turn off interactive plotting and save your figures so you can open them elsewhere:", "The Python debugger is an extremely useful tool, because it allows you to inspect everything in the state at the place where your program crashed, and run snippets of code at the place where your program crashed so you can try out possible solutions. Using the Python debugger is way more efficient than debugging with print statements, and it will save you hours and hours of time. The Python debugger can also be used with PyTorch; you can inspect tensors, gradients, logging dataframes, etc.", "To run a script interactively in a terminal using the Python debugger, use the following command:", "You will see a (Pdb) prompt show up. Type \u2018c\u2019 to continue. (That is just a lone lowercase letter c, for continue).", "To get out of the Python debugger, use \u2018q\u2019 (that is a lone lowercase letter q, for quit). You may have to use q twice to fully quit.", "If you want to stop at a specific point in your program, then within the relevant module you can import pdb and then put \u201cpdb.set_trace()\u201d at the specific point where you want to stop. Or, if you don\u2019t want to bother importing pdb, you can just write \u201cassert False\u201d at the place you want to stop and that will guarantee the program dies where you want it to (although that is not the official way to use the Python debugger).", "Given all of the previous sections, I must now recommend never using jupyter notebooks for machine learning projects, or really for any coding project that\u2019s going to take you longer than a couple days.", "What are notebooks good for? Some possibly acceptable use cases are initial data visualization, homework assignments, \u201cpresentation-style\u201d software, and interactive demonstrations. (However, I argue that all of those can also be accomplished without using jupyter notebooks.)", "I am not the only person in existence who believes that it is better to avoid jupyter notebooks for machine learning projects. For further reading/reference, see Why I don\u2019t use Jupyter notebooks and you shouldn\u2019t either by Daoud Clarke; 5 reasons why jupyter notebooks suck by Alexander Mueller; and The Notebook Anti-Pattern by Kristina Young.", "Originally published at http://glassboxmedicine.com on September 22, 2020.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I am a physician with a PhD in Computer Science. My research focuses on machine learning methods development for medical data. I am the CEO of Cydoc."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fbabd04f7a679&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----babd04f7a679--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----babd04f7a679--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://rachel-draelos.medium.com/?source=post_page-----babd04f7a679--------------------------------", "anchor_text": ""}, {"url": "https://rachel-draelos.medium.com/?source=post_page-----babd04f7a679--------------------------------", "anchor_text": "Rachel Draelos, MD, PhD"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F209c0f742bcf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&user=Rachel+Draelos%2C+MD%2C+PhD&userId=209c0f742bcf&source=post_page-209c0f742bcf----babd04f7a679---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbabd04f7a679&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbabd04f7a679&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://numpy.org/", "anchor_text": "numpy"}, {"url": "https://pandas.pydata.org/", "anchor_text": "pandas"}, {"url": "https://pytorch.org/", "anchor_text": "PyTorch"}, {"url": "https://www.tensorflow.org/", "anchor_text": "TensorFlow"}, {"url": "https://keras.io/", "anchor_text": "Keras"}, {"url": "https://scikit-learn.org/stable/", "anchor_text": "scikit-learn"}, {"url": "https://matplotlib.org/", "anchor_text": "matplotlib"}, {"url": "https://seaborn.pydata.org/", "anchor_text": "seaborn"}, {"url": "https://github.com/logos", "anchor_text": "GitHub Logos and Usage"}, {"url": "https://git-scm.com/downloads", "anchor_text": "https://git-scm.com/downloads"}, {"url": "https://github.com/", "anchor_text": "www.github.com"}, {"url": "https://docs.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent", "anchor_text": "Generating a new SSH key"}, {"url": "https://docs.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account", "anchor_text": "Adding a new SSH key to your GitHub account"}, {"url": "https://docs.anaconda.com/anaconda/install/", "anchor_text": "https://docs.anaconda.com/anaconda/install/"}, {"url": "https://glassboxmedicine.com/2019/05/11/automated-chest-x-ray-interpretation/", "anchor_text": "chest x-ray classification"}, {"url": "https://www.anaconda.com/blog/using-pip-in-a-conda-environment", "anchor_text": "this can cause issues"}, {"url": "https://docs.conda.io/projects/conda/en/4.6.0/_downloads/52a95608c49671267e40c689e0bc00ca/conda-cheatsheet.pdf", "anchor_text": "Conda Cheat Sheet"}, {"url": "https://github.com/rachellea/pytorch-computer-vision", "anchor_text": "https://github.com/rachellea/pytorch-computer-vision"}, {"url": "https://github.com/rachellea/pytorch-computer-vision", "anchor_text": "https://github.com/rachellea/pytorch-computer-vision"}, {"url": "https://github.com/rachellea/pytorch-computer-vision", "anchor_text": "pytorch-computer-vision"}, {"url": "https://glassboxmedicine.com/2019/06/01/everything-you-need-to-know-about-preparing-tabular-data-for-machine-learning-code-included/", "anchor_text": "data processing tutorial"}, {"url": "https://github.com/rachellea/glassboxmedicine", "anchor_text": "code"}, {"url": "https://github.com/rachellea/pytorch-computer-vision/blob/master/src/unit_tests.py", "anchor_text": "here"}, {"url": "https://matplotlib.org/", "anchor_text": "matplotlib"}, {"url": "https://matplotlib.org/3.1.0/gallery/images_contours_and_fields/image_demo.html", "anchor_text": "Image Demo"}, {"url": "https://matplotlib.org/users/license.html#:~:text=Matplotlib%20only%20uses%20BSD%20compatible,are%20acceptable%20in%20matplotlib%20toolkits.", "anchor_text": "BSD license"}, {"url": "https://seaborn.pydata.org/", "anchor_text": "seaborn"}, {"url": "https://seaborn.pydata.org/examples/grouped_violinplots.html", "anchor_text": "seaborn grouped violinplots"}, {"url": "https://seaborn.pydata.org/examples/grouped_boxplot.html", "anchor_text": "seaborn grouped boxplots"}, {"url": "https://seaborn.pydata.org/generated/seaborn.heatmap.html", "anchor_text": "seaborn heatmap"}, {"url": "https://github.com/mwaskom/seaborn/blob/master/LICENSE", "anchor_text": "BSD license"}, {"url": "https://github.com/rachellea/pytorch-computer-vision", "anchor_text": "tutorial repository"}, {"url": "https://github.com/rachellea/pytorch-computer-vision/blob/master/Demo-0-Unit-Tests-and-Visualization.py", "anchor_text": "Demo-0-Unit-Tests-and-Visualization.py"}, {"url": "https://github.com/rachellea/pytorch-computer-vision/tree/master/src", "anchor_text": "src/unit_tests.py"}, {"url": "https://github.com/rachellea/pytorch-computer-vision/blob/master/load_dataset/custom_pascal.py", "anchor_text": "load_dataset/custom_pascal.py"}, {"url": "https://docs.python.org/3/library/pdb.html", "anchor_text": "Python debugger"}, {"url": "https://realpython.com/python-debugging-pdb/", "anchor_text": "import pdb and then put \u201cpdb.set_trace()\u201d at the specific point where you want to stop"}, {"url": "https://datapastry.com/blog/why-i-dont-use-jupyter-notebooks-and-you-shouldnt-either/", "anchor_text": "Why I don\u2019t use Jupyter notebooks and you shouldn\u2019t either"}, {"url": "https://towardsdatascience.com/5-reasons-why-jupyter-notebooks-suck-4dc201e27086", "anchor_text": "5 reasons why jupyter notebooks suck"}, {"url": "https://www.kdnuggets.com/2019/11/notebook-anti-pattern.html", "anchor_text": "The Notebook Anti-Pattern"}, {"url": "https://commons.wikimedia.org/wiki/File:So_happy_smiling_cat.jpg", "anchor_text": "Wikipedia"}, {"url": "https://glassboxmedicine.com/2020/09/22/how-to-organize-machine-learning-projects-python-git-anaconda-code-and-no-jupyter-notebooks/", "anchor_text": "http://glassboxmedicine.com"}, {"url": "https://medium.com/tag/data-science?source=post_page-----babd04f7a679---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----babd04f7a679---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----babd04f7a679---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/python?source=post_page-----babd04f7a679---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----babd04f7a679---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbabd04f7a679&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&user=Rachel+Draelos%2C+MD%2C+PhD&userId=209c0f742bcf&source=-----babd04f7a679---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbabd04f7a679&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&user=Rachel+Draelos%2C+MD%2C+PhD&userId=209c0f742bcf&source=-----babd04f7a679---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbabd04f7a679&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----babd04f7a679--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fbabd04f7a679&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----babd04f7a679---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----babd04f7a679--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----babd04f7a679--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----babd04f7a679--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----babd04f7a679--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----babd04f7a679--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----babd04f7a679--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----babd04f7a679--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----babd04f7a679--------------------------------", "anchor_text": ""}, {"url": "https://rachel-draelos.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://rachel-draelos.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Rachel Draelos, MD, PhD"}, {"url": "https://rachel-draelos.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "576 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F209c0f742bcf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&user=Rachel+Draelos%2C+MD%2C+PhD&userId=209c0f742bcf&source=post_page-209c0f742bcf--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fa0377bd1bf3d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-organize-machine-learning-projects-babd04f7a679&newsletterV3=209c0f742bcf&newsletterV3Id=a0377bd1bf3d&user=Rachel+Draelos%2C+MD%2C+PhD&userId=209c0f742bcf&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}