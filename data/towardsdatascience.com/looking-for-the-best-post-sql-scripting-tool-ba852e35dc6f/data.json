{"url": "https://towardsdatascience.com/looking-for-the-best-post-sql-scripting-tool-ba852e35dc6f", "time": 1683016971.772036, "path": "towardsdatascience.com/looking-for-the-best-post-sql-scripting-tool-ba852e35dc6f/", "webpage": {"metadata": {"title": "Looking for the Best Post-SQL Scripting Tool | by Jerry Zhang | Towards Data Science", "h1": "Looking for the Best Post-SQL Scripting Tool", "description": "SQL (or the stored procedure) can handle most of the database computations. If the computations are complex or hard to deal in SQL, we use another programming language to read data out of the\u2026"}, "outgoing_paragraph_urls": [{"url": "http://c.raqsoft.com.cn/forward?goto=http%3A%2F%2Fc.raqsoft.com%2Farticle%2F1594003670080", "anchor_text": "How Python Handles Big Files", "paragraph_index": 33}, {"url": "https://www.linkedin.com/in/witness998", "anchor_text": "https://www.linkedin.com/in/witness998", "paragraph_index": 51}], "all_paragraphs": ["SQL (or the stored procedure) can handle most of the database computations. If the computations are complex or hard to deal in SQL, we use another programming language to read data out of the database to manipulate it. Such a programming language handles the data read and manipulation with a simple script. So we call the process the post-SQL scripting.", "The scenarios that SQL is not good at handling include complex set-based operations, order-based operations, associative operations and multi-step computations, etc. Due to SQL\u2019s incomplete set orientation and lack of explicit set data type, it\u2019s almost impossible to reuse the intermediate sets generated during the computation. The forced aggregate after each grouping operation makes it impossible to use the post-grouping subsets. The unordered-set-based SQL adopts a very roundabout way to handle order-based computations, like inter-row (group) computations and ranking operations. The language generates temporary sequence numbers using JOIN(s) or subqueries, making the program hard to write and slow to compute. Record reference is another SQL\u2019s incapability. The language uses a subquery or a JOIN statement to express the relationship. Code becomes ridiculously complicated when there are multiple data levels or when self-joins are needed. SQL doesn\u2019t foster multi-step coding. Programmers have to write very long query containing layers of subqueries. Though stored procedures can alleviate the problem, they are not always available. DBA has strict rules about the privileges of using stored procedures, and old and small databases don\u2019t support stored procedures. Besides, it\u2019s inconvenient to debug a stored procedure. This makes it unsuitable to do a procedural computation.", "There are other scenarios that require post-SQL scripting. To migrate the algorithm between different database products or between database and non-relational database, data source or output target isn\u2019t the database but a file, and mixed computation performed between multiple databases, for example. All these external database computations need post-SQL scripting.", "The most important role of a post-SQL script is to achieve the complex computations that SQL is not good at. It would be better if they had some advanced features, such as the ability of processing data of various sources (files and non-relational databases, for example) and handling a relatively large amount of data, and satisfactory performance. But, the basic thing is that the scripting tool should be able to perform database read/write conveniently.", "The popular post-SQL scripting tools are Java, Python pandas and esProc. Now let\u2019s look at and examine their scripting abilities.", "High-level languages, such C++ and Java, are theoretically almighty and thus are able to manage computations SQL is hard to deal with. Java supports generic type and has relatively comprehensive set orientation to handle complex set-based computations. A Java array has intrinsic sequence numbers to implement order-based computations conveniently. Java can express a relationship using object reference and handle join operations well. It also supports procedural syntax, including branch and loop, to achieve complex multi-step computations.", "Unfortunately, Java lacks class libraries for structured computations. It hardcodes even the simplest structured computations and creates the most basic data type manually. That makes Java code lengthy and complicated.", "Here\u2019s an example of order-based computation: get the number of longest consecutively rising trading days for a stock. Database AAPL stores a stock\u2019s price information in fields including transaction dates and closing price.", "In an intuitive way, we loop through the records ordered by dates, add 1 to the number of consecutive rising days (the initial value is 0) if the closing price of the current record is greater than that of the previous one; and compare the number of consecutively rising days with the current largest number of consecutively rising days (the initial value is 0) to get the new largest number and reset the number as 0. Repeat the process until the loop is over and the current largest number is the final desired one.", "SQL can\u2019t implement the intuitive algorithm because it doesn\u2019t support order-based computations. But it has its own tricks. It groups stock records ordered by dates. The way is like this: put records whose closing prices rise consecutively in one group, that is, group the current record with the previous one if its closing price rises and create a new group if its price lowers; then count the members in every group and find the largest number, which is the largest number of consecutively rising days.", "he SQL program is not long but contains 4 layers of nested queries. The trick is peculiar and intelligible and hard to imagine.", "Java, however, can do this in an intuitive way:", "The later part of the Java program implements the above intuitive algorithm with only one layer of loop.", "On the other hand, the Java program is lengthy though it is simple and easy to understand.", "The program will be extremely long if it involves structured computation like grouping and join.", "Java is also able but too roundabout in implementing advanced features like handling mixed data sources, performance optimization and big data processing.", "In summary, Java is an excellent universal enterprise programming language but not specific enough due to the absence of class libraries for structured computations. The lack of focus results in roundabout and lengthy code and removes the language from the position of the most ideal post-SQL scripting tool.", "Python boasts concise syntax and numerous third-party function libraries, among which Pandas is for structured data processing. That\u2019s why Pandas is a popular post-SQL scripting tool.", "Pandas has the capability to code a complex computation in a relatively simple way.", "For example, to find the number of largest consecutively rising days for a stock, Pandas has its own way:", "In the snippet, Pandas uses dataFrame structure to handle structured data. dataFrame has intrinsic sequence numbers that enable producing simpler code for order-based computations and easy access of a value in another row. Pandas offers a compact encapsulation of SQL data retrieval feature to generate shorter and more concise code than Java.", "Here\u2019s an example of set-based operation: to split one row into multiple rows. Database table tb has two fields, where ANOMALIES field stores tab-separated strings. The task is to split ANOMALIES by spaces to generate multiple rows with same ID.", "The core Pandas code is as follows (database input and output is omitted):", "Pandas splits each string into a dataFrame and concatenate multiple dataFrames using its set-related functions. The code is concise. To achieve similar effect in Java, manual work is needed and the code is complicated.", "As a structured computation function library, Pandas produces much more concise code than Java, only for relatively simple scenarios. It generates lengthy and hard to understand code when the computation becomes really complex.", "Here\u2019s an example involving both set-based operation and order-based operation. Database duty records daily arrangement of duties. A worker may work shift for several workdays continuously before another worker replace him. The task is to get records of continuous shift working for each worker. Below is the data structure:", "The code is still roundabout even I have omitted the databased input and output.", "Another example involves set-based operation and multi-step computation. Database table loan records loan information. It has four fields \u2014 loan ID, amount, term and rate, as shown below. The task is to calculate the details.", "The details include payment, interest, principle and principle balance for each term. The expected result is as follows:", "Below is the core Pandas code:", "So you see that Pandas is not always concise. This is probably because the third-party function library hasn\u2019t enough syntax support from Python. The lack of focus on structured computation is another reason.", "The lack of focus is reflected by handling mixed data sources. Pandas doesn\u2019t have the uniform interface for various types of data sources. It doesn\u2019t support complex data sources, such as Hadoop and MongoDb. It supports the local files of popular formats only. Users have to turn to a third-party, the fourth-party actually, function library to write complicated access code. Pandas even doesn\u2019t have a universal database interface. There are several function libraries, PyMySQL, sqlalchemy and MySQLdb, for accessing MySQL, for example. But this isn\u2019t the key problem. Pandas can support almost all popular databases more or less.", "The key to a join operation involving heterogeneous sources is to be able to read in the data. Pandas gives a satisfactory solution, still for relatively simple scenarios. Any complex joins will make the implementation hard and difficult to understand.", "Pandas is not so good at handling big data because it doesn\u2019t have cursor data type. It hardcodes the data retrieval by loop instead of launching an automatic data exchange between the memory and external storage. The code is thus unusually complicated. You can learn more in How Python Handles Big Files.", "Not excellent though, Pandas provides good performance. An obvious weakness is that it\u2019s difficult to implement multithreaded processing in Python. Since database IO is slow, we use parallel processing to increase the retrieval performance when there is abundant database space. Pythons problem is that it needs a third-party function library to do this, leading to complicated code, awkward algorithm description, inefficient execution and non-universal queries.", "In a word, Pandas is intended for structured computations but fails the expectation.", "esProc is equipped with a wealth of structured computation functions. Different from Pandas, esProc is an enterprise level product and truly professional rather than a third-party function library under a larger organization. esProc has the uniform and all-round syntax for structured data processing and provides consistent structured data types in a bottom-up way to support as flexible and dynamic cooperation of functions as possible. These enable esProc to handle post-SQL computations conveniently and efficiently.", "As a professional structured data processing tool, esProc is an expert in handling complex computations that SQL is awkward to deal with. To find the largest number of consecutive rising trading days for a stock, for example, esPoc only needs to lines of code to implement the intuitive algorithm mentioned above:", "The script uses table sequence structure and the loop function. A table sequence is specially designed for structured computations. It enables easier access of values in another row and more convenient context for handling order-based computations. A loop function gets rid of most of the for statements, though they are still needed in certain complex situations, to much simplify the code. esProc offers a more compact encapsulation of SQL data retrieval method and thus produces shorter code than Pandas.", "To split one row into multiple rows, esProc has the following concise script:", "esProc can handle more complex scenarios in an effortless way.", "To get the duty details, for instance, esProc generates a much shorter script:", "To calculate the loan installment details, esProc gives simpler solution than Pandas:", "esProc can handle complex scenarios that Pandas find it hard to manage in a convenient and simple way. To handle one involving multi-step computation, set-based operation and dynamic data structure, for instance, esProc inserts the sub table to the main table horizontally in a graceful and smooth way:", "esProc generates a rather simple script:", "esProc also has advanced features to tackle some particularly thorny scenarios.", "It supports access of heterogeneous data sources, including various file formats and complex sources such as Hadoop and MongoDB. This allows analysts to use same script to process data coming from various sources, including both databases and non-databases.", "esProc supplies cursor mechanism from the low level to hide the details of data exchange between memory and external storage from the top level and to permit analysts to handle a large amount of data using syntax they employ to manipulate a small amount of data.", "Database table orders records a large number of orders that can\u2019t fit into the memory. So we need to do an out-of-database computation. The task is to get the largest three orders for each salesperson. Below is the esProc script:", "esProc also has a series of simple and easy to use performance optimization methods. Suppose the monthly data in orders table is almost equal and we want to perform a multithreaded query by month in order to increase the performance. esProc has the following script:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Products and resources that simplify hard data processing tasks. If you have any questions, send me a message. https://www.linkedin.com/in/witness998"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fba852e35dc6f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://simplifydataprocessing.medium.com/?source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": ""}, {"url": "https://simplifydataprocessing.medium.com/?source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": "Jerry Zhang"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1a807787661b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&user=Jerry+Zhang&userId=1a807787661b&source=post_page-1a807787661b----ba852e35dc6f---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fba852e35dc6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fba852e35dc6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@eugen1980?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Eugen Str"}, {"url": "https://unsplash.com/@eugen1980?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "http://c.raqsoft.com.cn/forward?goto=http%3A%2F%2Fc.raqsoft.com%2Farticle%2F1594003670080", "anchor_text": "How Python Handles Big Files"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fba852e35dc6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&user=Jerry+Zhang&userId=1a807787661b&source=-----ba852e35dc6f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fba852e35dc6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&user=Jerry+Zhang&userId=1a807787661b&source=-----ba852e35dc6f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fba852e35dc6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fba852e35dc6f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----ba852e35dc6f---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----ba852e35dc6f--------------------------------", "anchor_text": ""}, {"url": "https://simplifydataprocessing.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://simplifydataprocessing.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Jerry Zhang"}, {"url": "https://simplifydataprocessing.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "236 Followers"}, {"url": "https://www.linkedin.com/in/witness998", "anchor_text": "https://www.linkedin.com/in/witness998"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1a807787661b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&user=Jerry+Zhang&userId=1a807787661b&source=post_page-1a807787661b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F38074cfc7c09&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flooking-for-the-best-post-sql-scripting-tool-ba852e35dc6f&newsletterV3=1a807787661b&newsletterV3Id=38074cfc7c09&user=Jerry+Zhang&userId=1a807787661b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}