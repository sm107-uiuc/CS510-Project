{"url": "https://towardsdatascience.com/understanding-generator-expressions-in-python-fe0c4534619", "time": 1683008998.255409, "path": "towardsdatascience.com/understanding-generator-expressions-in-python-fe0c4534619/", "webpage": {"metadata": {"title": "Understanding Generator Expressions In Python | by Richmond Alake | Towards Data Science", "h1": "Understanding Generator Expressions In Python", "description": "This article is an introduction to generator expressions(Genexps) within the Python programming language. This article is aimed at developers of all levels. If you\u2019re a beginner, you can pick up new\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.python.org/dev/peps/pep-0289/", "anchor_text": "generator expressions(Genexps)", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/basics-of-list-comprehensions-in-python-e8b75da50b30", "anchor_text": "list comprehensions(listcomps)", "paragraph_index": 4}, {"url": "https://docs.python.org/3/library/timeit.html", "anchor_text": "timeit", "paragraph_index": 19}], "all_paragraphs": ["This article is an introduction to generator expressions(Genexps) within the Python programming language.", "This article is aimed at developers of all levels. If you\u2019re a beginner, you can pick up new concepts such as generator expressions, list comprehensions(listcomps) and sequence type generations. Intermediate developers can learn a thing or two on scalability and memory efficiency, or simply use this article as a refresher.", "Within this article, you will find the following:", "Genexps are elegant and memory-efficient solutions to generating sequence types such as arrays, tuples, collections within python.", "Generator expressions are comparable to list comprehensions(listcomps) \u2014 another means of constructing the list sequence type within python. Genexps and listcomps share similarities in the way they are implemented.", "The shortcode snippet below depicts their syntactic similarity:", "In the code below, generator expression used to calculate the sum of a range of values that are incremented by an integer.", "Although subtle, the main difference between the genexp and listcomp examples above is that the genexp start and end with brackets, while the listcomp starts and ends with square brackets \u2014 a better term would be \u2018parenthesis\u2019.", "Here is another example of using generator expressions to create a tuple.", "Generation expressions are memory-efficient in comparison to listcomps. Genexps memory efficiency is a result of the utilization of the python iterator protocol to \u2018yield\u2019 or return the items within the iterator. In contrast, list comprehensions utilize memory for a generated list, and it\u2019s content.", "A generator will only yield items within its iterator when required, hence giving genexps memory-efficient characteristics.", "If what is written above is not clear enough, the code snippet below will make it all more apparent. The snippet below shows the memory size requirement (in bytes) of genexps and listcomps examples.", "In the code snippet above, we can observe that the list comprehension uses 17632624 bytes; whereas the generator expression utilized a measly 112 bytes in memory.", "It\u2019s also possible to access the content of the sequences by using the next function of the iterator for the generator expression and list indexing for the list comprehension.", "Another advantage of generator expressions is their time efficiency characteristics when compared to list comprehensions.", "For many developers out there, especially beginners, you are more familiar and exposed to the utilization of list comprehension.", "But in most cases, the benefits of using generator expressions are not so easy to ignore, especially when the speed of program execution is of great importance.", "In practical scenarios, when you are iterating over a sequence once, you\u2019ll most likely be better off utilizing a genexps. For more flexibility and multiple iterations of sequences, you are likely to utilize listcomps.", "The code snippet below demonstrates the execution time differences between listcomps and genexps.", "Using the timeit python module, we can measure the execution time of lines of code, just as seen above.", "As we can observe, the generator expression takes less than two seconds (generator_exp_time: 1.51\u2026), and the list comprehension execution time is almost 20x more.", "Here is a summary of the advantages of generation expressions within python:", "Generator expressions aren\u2019t complicated at all, and they make python written code efficient and scalable.", "For beginners, learning when to use list comprehensions and generator expressions is an excellent concept to grasp early on in your career.", "To connect with me or find more content similar to this article, do the following:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Machine Learning Content Creator with 1M+ views\u2014 Computer Vision Engineer. Interested in gaining and sharing knowledge on Technology and Finance"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ffe0c4534619&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----fe0c4534619--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fe0c4534619--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://richmondalake.medium.com/?source=post_page-----fe0c4534619--------------------------------", "anchor_text": ""}, {"url": "https://richmondalake.medium.com/?source=post_page-----fe0c4534619--------------------------------", "anchor_text": "Richmond Alake"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F88797ba3f2f6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&user=Richmond+Alake&userId=88797ba3f2f6&source=post_page-88797ba3f2f6----fe0c4534619---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffe0c4534619&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffe0c4534619&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@nesabymakers?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "NESA by Makers"}, {"url": "https://unsplash.com/s/photos/coding?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://www.python.org/dev/peps/pep-0289/", "anchor_text": "generator expressions(Genexps)"}, {"url": "https://towardsdatascience.com/basics-of-list-comprehensions-in-python-e8b75da50b30", "anchor_text": "list comprehensions(listcomps)"}, {"url": "https://unsplash.com/@franckinjapan?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Franck V."}, {"url": "https://unsplash.com/s/photos/compute-memory?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://unsplash.com/@gaellemarcel?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Gaelle Marcel"}, {"url": "https://unsplash.com/s/photos/time?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://docs.python.org/3/library/timeit.html", "anchor_text": "timeit"}, {"url": "https://wiki.python.org/moin/Generators", "anchor_text": "generator functions"}, {"url": "https://www.youtube.com/channel/UCNNYpuGCrihz_YsEpZjo8TA", "anchor_text": "YouTube channel"}, {"url": "https://www.youtube.com/channel/UCNNYpuGCrihz_YsEpZjo8TA", "anchor_text": "here"}, {"url": "https://medium.com/@richmond.alake", "anchor_text": "Medium"}, {"url": "https://www.linkedin.com/in/richmondalake/", "anchor_text": "LinkedIn"}, {"url": "https://medium.com/tag/programming?source=post_page-----fe0c4534619---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----fe0c4534619---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/software-development?source=post_page-----fe0c4534619---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/data-science?source=post_page-----fe0c4534619---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----fe0c4534619---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffe0c4534619&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&user=Richmond+Alake&userId=88797ba3f2f6&source=-----fe0c4534619---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffe0c4534619&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&user=Richmond+Alake&userId=88797ba3f2f6&source=-----fe0c4534619---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffe0c4534619&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fe0c4534619--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ffe0c4534619&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----fe0c4534619---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----fe0c4534619--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----fe0c4534619--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----fe0c4534619--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----fe0c4534619--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----fe0c4534619--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----fe0c4534619--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----fe0c4534619--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----fe0c4534619--------------------------------", "anchor_text": ""}, {"url": "https://richmondalake.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://richmondalake.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Richmond Alake"}, {"url": "https://richmondalake.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "7.3K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F88797ba3f2f6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&user=Richmond+Alake&userId=88797ba3f2f6&source=post_page-88797ba3f2f6--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F366f35b0b39b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstanding-generator-expressions-in-python-fe0c4534619&newsletterV3=88797ba3f2f6&newsletterV3Id=366f35b0b39b&user=Richmond+Alake&userId=88797ba3f2f6&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}