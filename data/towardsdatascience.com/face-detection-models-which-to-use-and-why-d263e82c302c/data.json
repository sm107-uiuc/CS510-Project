{"url": "https://towardsdatascience.com/face-detection-models-which-to-use-and-why-d263e82c302c", "time": 1683010196.7761002, "path": "towardsdatascience.com/face-detection-models-which-to-use-and-why-d263e82c302c/", "webpage": {"metadata": {"title": "Face Detection Models: Which to Use and Why? | by Vardan Agarwal | Towards Data Science", "h1": "Face Detection Models: Which to Use and Why?", "description": "A complete tutorial on implementing different face detection models in Python followed, by comparison, to find out the best one to use for real-time scenarios."}, "outgoing_paragraph_urls": [{"url": "https://www.theguardian.com/technology/2020/jun/09/ibm-quits-facial-recognition-market-over-law-enforcement-concerns", "anchor_text": "here", "paragraph_index": 0}, {"url": "https://www.washingtonpost.com/technology/2020/06/11/microsoft-facial-recognition/", "anchor_text": "here", "paragraph_index": 0}, {"url": "https://link.springer.com/chapter/10.1007/978-3-642-31686-9_46", "anchor_text": "Rapid Object Detection using a Boosted Cascade of Simple Features", "paragraph_index": 2}, {"url": "https://docs.opencv.org/3.4/db/d28/tutorial_cascade_classifier.html", "anchor_text": "here", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/cnn-based-face-detector-from-dlib-c3696195e01c", "anchor_text": "here", "paragraph_index": 5}, {"url": "https://arxiv.org/abs/1604.02878", "anchor_text": "Joint Face Detection and Alignment Using Multi-task Cascaded Convolutional Networks", "paragraph_index": 6}, {"url": "https://github.com/vardanagarwal/Proctoring-AI/tree/master/face_detection/models", "anchor_text": "repo", "paragraph_index": 10}, {"url": "https://github.com/opencv/opencv/tree/master/samples/dnn", "anchor_text": "Github page of OpenCV DNN", "paragraph_index": 14}, {"url": "https://www.pyimagesearch.com/", "anchor_text": "pyimagesearch", "paragraph_index": 16}, {"url": "https://www.learnopencv.com/", "anchor_text": "learnopencv", "paragraph_index": 16}, {"url": "https://unsplash.com/@madskillsdixon", "anchor_text": "Bruce Dixon", "paragraph_index": 18}, {"url": "https://unsplash.com/@chriscurry92", "anchor_text": "Chris Curry", "paragraph_index": 18}, {"url": "https://unsplash.com/@seemurray", "anchor_text": "Chris Murray", "paragraph_index": 18}, {"url": "https://unsplash.com/@ezj", "anchor_text": "Ethan Johnson", "paragraph_index": 18}, {"url": "https://unsplash.com/@z734923105", "anchor_text": "Jerry Zhang", "paragraph_index": 18}, {"url": "https://unsplash.com/@jesswilsonww24", "anchor_text": "Jessica Wilson", "paragraph_index": 18}, {"url": "https://unsplash.com/@rosam2020", "anchor_text": "Roland Samuel", "paragraph_index": 18}, {"url": "https://unsplash.com/@timmossholder", "anchor_text": "Tim Mossholder", "paragraph_index": 18}, {"url": "https://github.com/vardanagarwal/Proctoring-AI/tree/master/face_detection", "anchor_text": "repo", "paragraph_index": 33}], "all_paragraphs": ["Face detection is one of the most fundamental aspects of computer vision. It is the base of many further studies like identifying specific people to marking key points on the face. Recently, it has been quite a lot in the news due to racial profiling incidents as elaborated here and here where people of color are being misidentified more than white people. So major tech companies like IBM, Microsoft, and Amazon have banned their systems being used by the police. However, this article won\u2019t be dwelling on those aspects and we will merely be trying to draw bounding boxes on faces using pre-trained models like Haar cascades, dlib frontal face detector, MTCNN, and a Caffe model using OpenCV\u2019s DNN module. Then we will compare them to find out which works the best for real-time applications.", "We will be using Haar, dlib, Multi-task Cascaded Convolutional Neural Network (MTCNN), and OpenCV\u2019s DNN module. If you already know about them or don\u2019t want to go in their technical details, feel free to skip this section and move straight on to the code. Otherwise, let\u2019s learn how they work.", "They were proposed way back in 2001 by Paul Viola and Micheal Jones in their paper, \u201cRapid Object Detection using a Boosted Cascade of Simple Features.\u201d It is super fast to work with and like the simple CNN, it extracts a lot of features from images. The best features are then selected via Adaboost. This reduces the original 160000+ features to 6000 features. But applying all these features in a sliding window will still take a lot of time. So they introduced a Cascade of Classifiers, where the features are grouped. If a window fails at the first stage, these remaining features in that cascade are not processed. If it passes then the next feature is tested and the same procedure is repeated. If a window can pass all the features then it is classified as a face region. For more detailed reading, you can refer here.", "Haar cascades require a lot of positive and negative training images to train. Thankfully, these cascades come bundled with the OpenCV library along with the trained XML files.", "Dlib is a C++ toolkit containing machine learning algorithms used to solve real-world problems. Although it is written in C++ it has python bindings to run it in python. It also has the great facial landmark keypoint detector which I used in one of my earlier articles to make a real-time gaze tracking system.", "The frontal face detector provided by dlib works using features extracted by Histogram of Oriented Gradients (HOG) which are then passed through an SVM. In the HOG feature descriptor, the distribution of the directions of gradients is used as features. Moreover, Dlib provides a more advanced CNN based face detector, however, that does not work in real-time on a CPU which is one of the goals we are looking for so it has been ignored in this article. Nonetheless, if you want to read about it you can refer here.", "It was introduced by Kaipeng Zhang, et al. in 2016 in their paper, \u201cJoint Face Detection and Alignment Using Multi-task Cascaded Convolutional Networks.\u201d It not only detects the face but also detects five key points as well. It uses a cascade structure with three stages of CNN. First, they use a fully convolutional network to obtain candidate windows and their bounding box regression vectors, and the highly overlapped candidates are overlapped using on-maximum suppression (NMS). Next, these candidates are passed to another CNN which rejects a large number of false positives and performs calibration of bounding boxes. In the final stage, the facial landmark detection is performed.", "It is a Caffe model which is based on the Single Shot-Multibox Detector (SSD) and uses ResNet-10 architecture as its backbone. It was introduced post OpenCV 3.3 in its deep neural network module. There is also a quantized Tensorflow version that can be used but we will use the Caffe Model.", "Dlib and MTCNN are both pip installable, whereas Haar Cascades and DNN face detectors require OpenCV.", "If you are using Anaconda then install these using conda commands:", "In this section, I will explain the code of all these different models. The weights of HOG based descriptor of Dlib and MTCNN already come pre-bundled with their installation. The Haar cascade XML files along with the weights and layer file of the face detector of the DNN module can be downloaded from my Github repo.", "As you can see it is very easy to make predictions using Haar cascades. Just initialize the model using cv2.CascadeClassifier followed by detection using cv2.detectMultiScle. Then loop over all the faces and draw them on to the image.", "Dlib, unlike all the other models, works on grayscale images. It returns a \u2018rectangle object of dlib module\u2019 which not only contains the coordinates but also other information like area and center.", "Load the MTCNN module from mtcnn.mtcnn and initialize it. The function detect_faces is used to find the results. This returns a JSON style dictionary which has the coordinates of the faces along with their confidence of prediction and the coordinates of facial landmarks detected.", "Load the network using cv2.dnn.readNetFromCaffe and pass the model's layers and weights as its arguments. This is found on the Github page of OpenCV DNN.", "To achieve the best accuracy run the model on BGR images resized to 300x300 applying mean subtraction of values (104, 177, 123) for each blue, green and red channels correspondingly.", "There is a lot of discrepancy around the value for green. In articles of pyimagesearch and learnopencv, I found both of them had used 117 instead of 177 so I used 117 in the cv2.dnn.blobFromImage function. Finally, a 4-D array is returned which contains the confidence and coordinates scaled down to the range of 0 to 1 such that by multiplying them by the original width and height to predictions for the original image can be obtained as opposed to of the 300x300 on which the model predicted.", "I created two small databases containing 10 images each with one created from photos from Unsplash and the other from Google to see how the techniques fare on both large and small images. Let\u2019s check them out one by one.", "Before I start, I would like to give picture credits to Bruce Dixon, Chris Curry, Chris Murray, Ethan Johnson, Jerry Zhang, Jessica Wilson, Roland Samuel, and Tim Mossholder whose images I have used. As the average dimensions of the images were around 5000x5000, both the height and width have been reduced by half before processing.", "Haar cascades as expected performed the worst out of all of them having a lot of false positives as well. Dlib and MTCNN had pretty even performance with one edging the others and visa-versa. DNN module had an all or nothing type of performance. On closer inspection, we can see that it did not perform well on images having small face sizes that might have occurred due to resizing it to 300x300 before starting so let\u2019s see how it would have performed if the original size was taken. To do this just change (300, 300) in cv2.dnn.blobFromImage() to original width and height respectively and remove the resize function.", "So the results have considerably improved by taking full-size images, however, this way the DNN module has not been able to make any prediction where the face size is large. Example:", "These images from Unsplash were very large so I decided to check out some small images as well to see the performance on them. All the images taken had a reusability license with modification. The average dimensions are 220x220 and they are processed as it is except for the DNN module where the images are resized to 300x300 and the results were not good if original size images were used.", "This created a problem for Dlib facial detector as it cannot detect faces that are less than the size of 80x80 and as the images were very small the faces were even smaller. So the image was scaled up by the factor of 2 for testing but this is a huge problem in using Dlib as the face size cannot be very small and upsampling the image will result in more processing time.", "Again as expected Haar performed the worst. MTCNN gave perfect results barring a couple of images and could not identify 2 faces in all. DNN came a close second and was not able to identify 3 faces. Dlib missed a lot more faces and we should also not forget that it had images upscaled by a factor of 2 already.", "So before moving on to the video part let\u2019s recap the things we have learned from the results of this section.", "Note: Dlib\u2019s prediction sometimes misses the chin or the forehead due to the face that is was manually annotated by Davis King, the author of Dlib, so if the task you are working on cannot afford this don\u2019t use Dlib.", "Before beginning why not clarify what objectives we will be testing our models on:", "The size of each frame passed to the models is 640x360 and they are processed as it is except for the DNN model which is reduced to 300x300.", "OpenCV\u2019s DNN module hit a home run here. It was able to detect side faces up to insane angles and was largely unfazed by quick head movement as well. The others were no match for it and failed at large angles and quick movement.", "Again, the facial detection module of OpenCV\u2019s DNN is the clear winner here. Let me provide the exact results. There are a total of 642 frames in this video. DNN module was able to detect the face in 601 of them! In comparison, the second place was taken by Haar, yes Haar, which got the face in 479 of them followed by a close third in MTCNN with 464 frames. Dlib was way behind with the face detected in only 401 frames.", "The goal here was to see how well these models perform in very low light and when a light source is right behind the person.", "Let\u2019s give credit where it\u2019s due as only Haar cascade was the only model able to detect the face in the dark in a couple of frames, while the DNN model provided a false positive during that time. When the light was switched on the DNN module was the back at its work providing completely accurate predictions. Dlib\u2019s output was a little shaky but better than Haar cascade which was able to predict even fewer frames and gave some false positives as well. The real surprise was MTCNN. It failed to detect the face in even a single frame suggesting lighting conditions need to good if it is to be used.", "The values reported are obtained using an Intel i5 7th gen processor and the image size passed is 640x360 except for the DNN module which is passed a 300x300 image as it has been done until now.", "All the codes and files and be found here on my Github repo. This aim was to find the face detection model best suited for face detection in an online proctoring scenario. If you are interested in knowing more about it you can read this article.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd263e82c302c&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d263e82c302c--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d263e82c302c--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@vardanagarwal16?source=post_page-----d263e82c302c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@vardanagarwal16?source=post_page-----d263e82c302c--------------------------------", "anchor_text": "Vardan Agarwal"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe0b122513e3b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&user=Vardan+Agarwal&userId=e0b122513e3b&source=post_page-e0b122513e3b----d263e82c302c---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd263e82c302c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd263e82c302c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@z734923105", "anchor_text": "Jerry Zhang"}, {"url": "https://unsplash.com/?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.theguardian.com/technology/2020/jun/09/ibm-quits-facial-recognition-market-over-law-enforcement-concerns", "anchor_text": "here"}, {"url": "https://www.washingtonpost.com/technology/2020/06/11/microsoft-facial-recognition/", "anchor_text": "here"}, {"url": "https://link.springer.com/chapter/10.1007/978-3-642-31686-9_46", "anchor_text": "Rapid Object Detection using a Boosted Cascade of Simple Features"}, {"url": "https://docs.opencv.org/3.4/db/d28/tutorial_cascade_classifier.html", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/real-time-eye-tracking-using-opencv-and-dlib-b504ca724ac6", "anchor_text": "Real-time eye tracking using OpenCV and DlibLearn to create a real-time gaze detector through the webcam in python with this tutorial.towardsdatascience.com"}, {"url": "https://towardsdatascience.com/cnn-based-face-detector-from-dlib-c3696195e01c", "anchor_text": "here"}, {"url": "https://arxiv.org/abs/1604.02878", "anchor_text": "Joint Face Detection and Alignment Using Multi-task Cascaded Convolutional Networks"}, {"url": "https://unsplash.com/@grohsfabian?utm_source=medium&utm_medium=referral", "anchor_text": "Fabian Grohs"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/vardanagarwal/Proctoring-AI/tree/master/face_detection/models", "anchor_text": "repo"}, {"url": "https://github.com/opencv/opencv/tree/master/samples/dnn", "anchor_text": "Github page of OpenCV DNN"}, {"url": "https://www.pyimagesearch.com/", "anchor_text": "pyimagesearch"}, {"url": "https://www.learnopencv.com/", "anchor_text": "learnopencv"}, {"url": "https://unsplash.com/@madskillsdixon", "anchor_text": "Bruce Dixon"}, {"url": "https://unsplash.com/@chriscurry92", "anchor_text": "Chris Curry"}, {"url": "https://unsplash.com/@seemurray", "anchor_text": "Chris Murray"}, {"url": "https://unsplash.com/@ezj", "anchor_text": "Ethan Johnson"}, {"url": "https://unsplash.com/@z734923105", "anchor_text": "Jerry Zhang"}, {"url": "https://unsplash.com/@jesswilsonww24", "anchor_text": "Jessica Wilson"}, {"url": "https://unsplash.com/@rosam2020", "anchor_text": "Roland Samuel"}, {"url": "https://unsplash.com/@timmossholder", "anchor_text": "Tim Mossholder"}, {"url": "https://github.com/vardanagarwal/Proctoring-AI/tree/master/face_detection", "anchor_text": "repo"}, {"url": "https://towardsdatascience.com/automating-online-proctoring-using-ai-e429086743c8", "anchor_text": "Automating Online Proctoring Using AISemi-automate proctoring based on vision and audio based capabilities to prevent cheating in online exams and monitor\u2026towardsdatascience.com"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----d263e82c302c---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----d263e82c302c---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----d263e82c302c---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----d263e82c302c---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d263e82c302c---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd263e82c302c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&user=Vardan+Agarwal&userId=e0b122513e3b&source=-----d263e82c302c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd263e82c302c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&user=Vardan+Agarwal&userId=e0b122513e3b&source=-----d263e82c302c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd263e82c302c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d263e82c302c--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd263e82c302c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d263e82c302c---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d263e82c302c--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d263e82c302c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d263e82c302c--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d263e82c302c--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d263e82c302c--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d263e82c302c--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d263e82c302c--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d263e82c302c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@vardanagarwal16?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@vardanagarwal16?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Vardan Agarwal"}, {"url": "https://medium.com/@vardanagarwal16/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "399 Followers"}, {"url": "https://www.linkedin.com/in/vardan-agarwal-6bb123168/", "anchor_text": "https://www.linkedin.com/in/vardan-agarwal-6bb123168/"}, {"url": "https://www.buymeacoffee.com/vardan", "anchor_text": "https://www.buymeacoffee.com/vardan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe0b122513e3b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&user=Vardan+Agarwal&userId=e0b122513e3b&source=post_page-e0b122513e3b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F4ce0157411b4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fface-detection-models-which-to-use-and-why-d263e82c302c&newsletterV3=e0b122513e3b&newsletterV3Id=4ce0157411b4&user=Vardan+Agarwal&userId=e0b122513e3b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}