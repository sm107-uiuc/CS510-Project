{"url": "https://towardsdatascience.com/bigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3", "time": 1683017505.004181, "path": "towardsdatascience.com/bigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3/", "webpage": {"metadata": {"title": "BigQuery UNNEST example | Towards Data Science", "h1": "BigQuery UNNEST: How to work with nested data in BigQuery", "description": "An overview of the BigQuery UNNEST function, and how this can unnest json array and struct data from Firebase."}, "outgoing_paragraph_urls": [{"url": "https://console.cloud.google.com/bigquery?p=firebase-public-project&d=analytics_153293282&t=events_20180915&page=table", "anchor_text": "here", "paragraph_index": 11}, {"url": "https://www.ancoris.com/solutions/data_analytics_ai", "anchor_text": "Ancoris Data, Analytics & AI", "paragraph_index": 50}], "all_paragraphs": ["We frequently apply machine learning techniques to event-based data in order to generate high-value insights; from predicting customer churn using people\u2019s recent activity of say, a subscription-based product, to scoring how engaged a user is on a piece of content for feeding into a recommendation engine.", "Event-based data is a good example of semi-structured-data.", "Structured data is data that adheres to a rigid tabular format. This makes it ideal for storing in say, a database table or a spreadsheet.", "Semi-structured data, however, has variations in its structure; attributes are not fixed(equivalent to columns in a database table), and, to further complicate things, the data itself can be nested.", "To illustrate this, consider the following use case: We want to consolidate event data generated from 3 different apps that users interact with via mobile devices and laptops/desktop PCs.", "Some of the attributes received in the event data will be common across all apps. A timestamp, for example, to indicate when the event occurred. Other attributes will only apply to certain applications/devices. Furthermore, some of these attributes may have multiple occurrences within the context of a single event, and therefore creates a need for the data to be nested.", "Semi-structured data is typically stored as JSON or XML, and is the foundation of no-SQL data stores such as Google\u2019s Firebase, or MongoDB.", "Alongside structured data, Google\u2019s BigQuery also supports the storage of semi-structured data via two nested datatypes: the array and the struct.", "Furthermore, BigQuery makes it really easy to ingest JSON, XML, and other such data into its tables, to facilitate further analysis.", "We will explore a common example of event-data exported from Firebase and loaded into BigQuery. We will show how to work with the data and explore useful BigQuery functions, including UNNEST.", "We assume you already have a Google Cloud Project with access to BigQuery. If not, you can easily create one (for free) using the link below.", "For this example, we use some really good, publically available Firebase data from here. These are simulated events from an online game.", "We start by creating a dataset in our BigQuery project to contain our example tables. To do this:", "3. Enter \u201cblog_unnest\u201d as the dataset name, and leave all other defaults. Click Create Dataset.", "Now we have a dataset, we can create a table called firebase_raw that contains a sample (1,000 rows) of Firebase event data. To do this, simply run this in the BigQuery UI:", "Tip: Notice the Firebase to BigQuery export generates an events table that is sharded by the event date (in bold above). In this example, we are extracting data from shard 20180801, which contains all events seen on 1 Aug 2018.", "The limit keyword tells BigQuery to limit rows to 1,000. Like the top n feature if you come from an MS SQL background.", "With the sample data loaded, we can explore its structure. Clicking on the firebase_raw table, we see the columns listed. Note the event_params is of type RECORD \u2014 indicating it is a nested field.", "If we run the simple query below, we can see what the data looks like.", "Event_params (highlighted) is a nested field, with each nested row representing a parameter for that event. We can see there are 5 nested rows for this \u201clevel complete quickplay\u201d event, one row per parameter.", "In Firebase, typically each event needs its own unique set of supporting parameters, and you can see how storing them in this way makes it possible.", "Event_date is a regular column, indicating which day the event occurred.", "Event_timestamp represents a derivative of Unix time to denote when the event took place.", "Tip: Event_timestamp in Firebase denotes the number of microseconds since 1 Jan 1970. To convert this into a BigQuery timestamp, you can use BigQuery\u2019s timestamp_micros function:", "The UNNEST function allows us to easily query nested fields, such as the parameters in our event data.", "Suppose we want to flatten our event data into rows, and extract:", "The first two are easy. But the last two are more difficult. Here is where the UNNEST function comes into play:", "This produces the output that we want:", "UNNEST takes the rows in our nested event_params struct, unpacks these, and produces a table with a single struct for each row in the original event_params nested field. In our case, this nested field contained 5 rows per parent event row.", "The cross join applies a cartesian product of the 5 nested rows with the parent event row.", "In our case, the first attribute we wanted to extract from event_params was the value. So, we alias our cross join unnest function call as param_value, and then add the following where clause to filter on the key:", "Remember, the rows in our param_value are themselves a struct. So, when we extract the int_value in the select clause, we need to use this notation to reference the value:", "Tip: if you want to select all the attributes in a struct, and not just the int_value as we did here, you can just do this:", "Which will add each attribute is a column in the result set. Useful if you want to explore structs where you don\u2019t really know what the structure is:", "There is another way to use the UNNEST function to achieve the same output as our previous example. We can use an inline select, instead of the multipe cross joins:", "One advantage of using the inline select approach over cross join, is it handles missing attributes much better.", "For example, say we want to bring back a third attribute, \u201cfoo\u201d, from the event_params. This parameter only applies to certain events, and if it is missing, we still want our other data returned. Note foo does not exist in our test data.", "Running this returns 0 rows. This is because, in a similar way to how applying a where clause limits rows to a left outer join, the same applies to a cross join.", "However, if we amend our inline select approach:", "This time, we get our expected result; rows returned with the foo column containing nulls.", "In some ways, this approach is also easier to read and is easier to add additional attributes because only the select clause needs to be modified. In terms of the amount of data scanned, the two approaches are identical.", "Tip: as a general rule we try to avoid inline selects as joins are typically more performant; however in this use case, the performance is identical and we would typically opt for the inline select approach.", "Lastly, we show you how to convert a data type (or do other manipulations) to nested data whilst maintaining the data in its nested form.", "Again, we use the BigQuery UNNEST function to achieve this. The basic approach is to:", "Keeping with the Firebase event data, in the user_properties nested field we find another timestamp attribute called set_timestamp_micros that is again in the Unix like format and therefore difficult to read. We want to apply a timestamp_micros() function to this attribute, converting it to a human-readable timestamp.", "We can achieve this using the following combination of UNNEST, ARRAY, and STRUCT:", "If you take the time to understand the above, you should be well on your way to mastering the UNNEST function and working with Firebase, and other semi-structured data.", "As we have seen, BigQuery is really flexible in that it can store both structured and semi-structured data via its support for nested data types. This lends itself really well for analysing and applying machine learning activities on event data, which is inherently semi-structured.", "The notation in BigQuery for working with nested data does have a bit of a learning curve, and this was partly the motivation for writing this article \u2014 to help fellow data scientists and analysts who might be faced with this challenge to see a working example complete with explanations.", "We specifically hope those of you who are working with Firebase event data (a very common use case in the field), will find this helpful and should hopefully save you some time!", "2. Learn more about Ancoris Data, Analytics & AI", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Head of Data, Analytics & AI @ Ancoris. Part of a highly committed team of data scientists, mathematicians & engineers delivering Google Cloud client solutions"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff27006a64c3&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f27006a64c3--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f27006a64c3--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://google-cloud-data.medium.com/?source=post_page-----f27006a64c3--------------------------------", "anchor_text": ""}, {"url": "https://google-cloud-data.medium.com/?source=post_page-----f27006a64c3--------------------------------", "anchor_text": "James Green"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe242c1ce5f6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&user=James+Green&userId=e242c1ce5f6d&source=post_page-e242c1ce5f6d----f27006a64c3---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff27006a64c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff27006a64c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://cloud.google.com/free", "anchor_text": "GCP Free Tier - Free Extended Trials and Always Free | Google Cloud20+ free products Get free hands-on experience with popular products, including Compute Engine and Cloud Storage, up to\u2026cloud.google.com"}, {"url": "https://console.cloud.google.com/bigquery?p=firebase-public-project&d=analytics_153293282&t=events_20180915&page=table", "anchor_text": "here"}, {"url": "https://cloud.google.com/bigquery/docs/reference/standard-sql/arrays", "anchor_text": "here"}, {"url": "https://www.ancoris.com/solutions/data_analytics_ai", "anchor_text": "Ancoris Data, Analytics & AI"}, {"url": "https://medium.com/tag/bigquery?source=post_page-----f27006a64c3---------------bigquery-----------------", "anchor_text": "Bigquery"}, {"url": "https://medium.com/tag/firebase?source=post_page-----f27006a64c3---------------firebase-----------------", "anchor_text": "Firebase"}, {"url": "https://medium.com/tag/google-cloud-platform?source=post_page-----f27006a64c3---------------google_cloud_platform-----------------", "anchor_text": "Google Cloud Platform"}, {"url": "https://medium.com/tag/data-science?source=post_page-----f27006a64c3---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----f27006a64c3---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff27006a64c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&user=James+Green&userId=e242c1ce5f6d&source=-----f27006a64c3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff27006a64c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&user=James+Green&userId=e242c1ce5f6d&source=-----f27006a64c3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff27006a64c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f27006a64c3--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff27006a64c3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f27006a64c3---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f27006a64c3--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f27006a64c3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f27006a64c3--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f27006a64c3--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f27006a64c3--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f27006a64c3--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f27006a64c3--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f27006a64c3--------------------------------", "anchor_text": ""}, {"url": "https://google-cloud-data.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://google-cloud-data.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "James Green"}, {"url": "https://google-cloud-data.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "216 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe242c1ce5f6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&user=James+Green&userId=e242c1ce5f6d&source=post_page-e242c1ce5f6d--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F354049f3c33d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbigquery-unnest-how-to-work-with-nested-data-in-bigquery-f27006a64c3&newsletterV3=e242c1ce5f6d&newsletterV3Id=354049f3c33d&user=James+Green&userId=e242c1ce5f6d&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}