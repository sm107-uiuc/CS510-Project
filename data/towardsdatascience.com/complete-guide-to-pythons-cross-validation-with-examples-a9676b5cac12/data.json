{"url": "https://towardsdatascience.com/complete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12", "time": 1683008131.9694898, "path": "towardsdatascience.com/complete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12/", "webpage": {"metadata": {"title": "Complete guide to Python\u2019s cross-validation with examples | by Vaclav Dekanovsky | Towards Data Science", "h1": "Complete guide to Python\u2019s cross-validation with examples", "description": "Examples and use cases of sklearn\u2019s cross-validation explaining KFold, shuffling, stratification, and the data ratio of the train and test sets. Cross-validation is an important concept in machine\u2026"}, "outgoing_paragraph_urls": [{"url": "https://scikit-learn.org/stable/modules/cross_validation.html", "anchor_text": "Sklearn library", "paragraph_index": 2}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html", "anchor_text": "sklearn\u2019s train_test_split method", "paragraph_index": 6}, {"url": "https://scikit-learn.org/stable/modules/cross_validation.html", "anchor_text": "scikit-learn", "paragraph_index": 9}, {"url": "https://github.com/vaasha/Machine-leaning-in-examples/blob/master/sklearn/cross-validation/Cross%20Validation.ipynb", "anchor_text": "github", "paragraph_index": 10}, {"url": "https://en.wikipedia.org/wiki/Iris_setosa", "anchor_text": "Iris setosa", "paragraph_index": 20}, {"url": "https://en.wikipedia.org/wiki/Iris_virginica", "anchor_text": "Iris virginica", "paragraph_index": 20}, {"url": "https://en.wikipedia.org/wiki/Iris_versicolor", "anchor_text": "Iris versicolor", "paragraph_index": 20}, {"url": "https://github.com/vaasha/Machine-leaning-in-examples/blob/master/sklearn/cross-validation/Cross%20Validation.ipynb", "anchor_text": "github", "paragraph_index": 21}, {"url": "https://scikit-learn.org/stable/modules/cross_validation.html#leave-one-out-loo", "anchor_text": "sklearn documentation", "paragraph_index": 32}, {"url": "http://cross-validation-iterators-for-grouped-data", "anchor_text": "sklearn documentation about groups", "paragraph_index": 33}, {"url": "https://scikit-learn.org/stable/modules/cross_validation.html#time-series-split", "anchor_text": "TimeSeriesSplit", "paragraph_index": 34}, {"url": "https://www.kaggle.com/c/titanic", "anchor_text": "Kaggle Titanic competition", "paragraph_index": 36}, {"url": "https://github.com/vaasha/Machine-leaning-in-examples/blob/master/sklearn/cross-validation/Cross%20Validation.ipynb", "anchor_text": "github", "paragraph_index": 43}], "all_paragraphs": ["Examples and use cases of sklearn\u2019s cross-validation explaining KFold, shuffling, stratification, and the data ratio of the train and test sets.", "Cross-validation is an important concept in machine learning which helps the data scientists in two major ways: it can reduce the size of data and ensures that the artificial intelligence model is robust enough. Cross validation does that at the cost of resource consumption, so it\u2019s important to understand how it works before you decide to use it.", "In this article, we will briefly review the benefits of cross-validation and afterward I\u2019ll show you detailed application using a broad variety of methods in the popular python Sklearn library. We will learn:", "Normally you split the data into 3 sets.", "Introducing cross-validation into the process helps you to reduce the need for the validation set because you\u2019re able to train and test on the same data.", "In most common cross-validation approach you use part of the training set for testing. You do it several times so that each data point appears once in the test set.", "Even though sklearn\u2019s train_test_split method is using a stratified split, which means that the train and test set have the same distribution of the target variable, it\u2019s possible that you accidentally train on a subset which doesn\u2019t reflect the real world.", "Imagine that you try to predict whether a person is a male or a female by his or her height and weight. One would assume that taller and heavier people would rather be males; though if you\u2019re very unlucky your train data would only contain dwarf men and tall Amazon women. Thanks to cross validation you perform multiple train_test split and while one fold can achieve extraordinary good results the other might underperform. Anytime one of the splits shows unusual results it means that there\u2019s an anomaly in your data.", "If your cross-validation split doesn\u2019t achieve similar score, you have missed something important about the data.", "You can always write your own function to split the data, but scikit-learn already contains cover 10 methods for splitting the data which allows you to tackle almost any problem.", "Let\u2019s start coding though. You download the complete example on github.", "Then let\u2019s initiate sklearn\u2019s Kfold method without shuffling, which is the simplest option for how to split the data. I\u2019ll create two Kfolds, one splitting data 3-times and other doing 5 folds.", "If I pass my range to the KFold it will return two lists containing indices of the data points which would fall into train and test set.", "KFold returns indices not the real datapoints.", "Since KFold returns the index, if you want to see the real data we must use np.take in NumPy array or .iloc in pandas.", "To better understand how the KFold method divides the data, let\u2019s display it on a chart. Because we have used shuffled=False the first data point belongs to the test set in the first fold, the next one as well. The test and train data points are nicely arranged.", "It\u2019s important to say that the number of fold influences that size of your test set. 3 folds tests on 33% of the data while 5 folds on 1/5 which equals to 20% of the data.", "Each data points appears once in the test set and k-times in the train set", "Your data might follow a specific order and it might be risky to select the data in order of appearance. That can be solved by setting KFold\u2019s shuffle parameter to True. In that case KFold will randomly pick the datapoints which would become part of the train and test set. Or to be precise not completely randomly, random_state influences which points appear each set and the same random_state always results in the same split.", "Working on the real problem you will rarely have a small array as an input so let\u2019s have a look at the real example using a well-known Iris dataset.", "Iris dataset contain 150 measurements of petal and sepal sizes of 3 varieties of the iris flower \u201450 Iris setosas, 50 Iris virginicas and 50 Iris versicolors", "In the github notebook I run a test using only a single fold which achieves 95% accuracy on the training set and 100% on the test set. What was my surprise when 3-fold split results into exactly 0% accuracy. You read it well, my model did not pick a single flower correctly.", "Do you remember that unshuffled KFold picks the data in order? Our set contains 150 observations, the first 50 belongs to one specie, 51\u2013100 to the other, and the remaining to the third one. Our 3-fold model was very unlucky to always pick measurement of two of the Irises while the test set contained only the flowers which the model has never seen.", "To address this problem we can change the shuffled=True parameter and choose the samples randomly. But that also runs into problems.", "The groups are still not balanced. You are often training on a much higher number of samples of one type while testing on different types. Let\u2019s see if we can do something about that.", "In many scenarios it is important to preserve the same distribution of samples in the train and test set. That is achieved by StratifiedKFold which can again be shuffled or unshuffled.", "You can see that the KFold divides the data into the groups which have the kept the ratios. StratifiedKFold reflects the distribution of the target variable even in case some of the values appear more often in the dataset. It doesn\u2019t however evaluate the distribution of the input measurements. We will talk more about that at the end.", "To enjoy the benefits of cross-validation you don\u2019t have to split the data manually. Sklearn offers two methods for quick evaluation using cross-validation. cross-val-score returns a list of model scores and cross-validate also reports training times.", "Besides the functions mentioned above sklearn is endowed with a whole bunch of other methods to help you address specific needs.", "Repeated Kfold would create multiple combinations of train-test split.", "While regular cross-validation makes sure that you see each data point once in the test set, ShuffleSplit allows you to specify how many features are picked to test in each fold.", "LeaveOneOut and LeavePOut solve the need in other special cases. The first one always leaves only one sample to be in the test set.", "As a general rule, most authors, and empirical evidence, suggest that 5- or 10- fold cross validation should be preferred to LOO. \u2014 sklearn documentation", "GroupKFold has its place in scenarios when you have multiple data samples taken from the same subject. For example more than one measurement from the same person. It\u2019s likely that data from the same group will behave similarly and if you will train on one of the measurements and test on the other you will get a good score, but it won\u2019t prove that your model generalizes well. GroupKFold assures that the whole group goes either to the train or to the test set. Read more in sklearn documentation about groups.", "Problems involving time series are also sensitive to the order of data points. It\u2019s usually much easier to guess past based on current knowledge than to predict the future. For this reason it makes sense to always feed the time series models with older data while predicting the newer ones. Sklearn\u2019s TimeSeriesSplit does exactly that.", "There is one last matter which is crucial to highlight. You might think that the stratified split would solve all your machine learning problems, but it\u2019s not true. StratifiedKFold ensures that there remains the same ratio of the targets in both train and test set. In our case 33% of each type of Iris.", "To demonstrate that on an unbalanced dataset we will look at popular Kaggle Titanic competition. Your goal would be to train an AI model that would predict whether a passenger on Titanic survived or died when the ship sank. Let\u2019s look at how StratiffiedKFold would divide the survivors and victims in the dataset in each fold.", "It looks good, isn\u2019t it? However, your data might still be improperly split. If you look at the distribution of the key features (I purposefully choose this distribution to demonstrate my point, because often it\u2019s enough to shuffle the data to get much more balanced distribution) you will see that you often try to predict the results based on training data which are different from the test set. For example if you look at the distribution of the genders in the train and test sets.", "Cross-validation at least helps you to realize this problem in case the score of the model differs significantly for each fold. Imagine you would be so unlucky, using only a single split which would perfectly suit your test data, but catastrophically fail on real-world scenarios.", "It a very complex task to balance your data so that you train and test on ideal distribution. Many argue that it\u2019s not necessary, because the model should generalize good enough to work on the unknown data.", "I would nevertheless encourage you to think about the distribution of features. Imagine that you would have a shop where customers are mostly men and you would try to predict sales using data from a marketing campaign targeted to women. It wouldn\u2019t be the best model for your shop.", "Train-test split is a basic concept in many machine learning assignments, but if you have enough resources consider applying cross-validation to your problem. It will not only help you use less data, but an inconsistent score on the different folds would suggest that you have missed some important relation inside your data.", "Sklearn library contains a bunch of methods to split the data to fit your AI exercise. You can create basic KFold, shuffle the data, or stratify them according to the target variable. You can use additional methods or just test your model with cross-validate or cross-val-score without bothering with manual data split. In any case your resulting score should show a stable pattern, because you don\u2019t want your model to depend on \u2018lucky\u2019 data split to perform well.", "All data, charts, and python processing was summarized in the notebook available on github.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data scientist who loves to explore everything and write about the topics from multiple points of view."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fa9676b5cac12&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----a9676b5cac12--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a9676b5cac12--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://vdekanovsky.medium.com/?source=post_page-----a9676b5cac12--------------------------------", "anchor_text": ""}, {"url": "https://vdekanovsky.medium.com/?source=post_page-----a9676b5cac12--------------------------------", "anchor_text": "Vaclav Dekanovsky"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed473176733b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&user=Vaclav+Dekanovsky&userId=ed473176733b&source=post_page-ed473176733b----a9676b5cac12---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa9676b5cac12&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa9676b5cac12&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.freepik.com/free-photos-vectors/people", "anchor_text": "Freepik"}, {"url": "https://scikit-learn.org/stable/modules/cross_validation.html", "anchor_text": "Sklearn library"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html", "anchor_text": "sklearn\u2019s train_test_split method"}, {"url": "https://scikit-learn.org/stable/modules/cross_validation.html", "anchor_text": "scikit-learn"}, {"url": "https://github.com/vaasha/Machine-leaning-in-examples/blob/master/sklearn/cross-validation/Cross%20Validation.ipynb", "anchor_text": "github"}, {"url": "https://github.com/vaasha/Machine-leaning-in-examples/blob/master/sklearn/cross-validation/Cross%20Validation.ipynb", "anchor_text": "github"}, {"url": "https://commons.wikimedia.org/wiki/File:Kosaciec_szczecinkowaty_Iris_setosa.jpg", "anchor_text": "Iris setosa"}, {"url": "https://creativecommons.org/licenses/by-sa/3.0/deed.en", "anchor_text": "CC BY_SA 3.0"}, {"url": "https://commons.wikimedia.org/wiki/File:Iris_virginica_2.jpg", "anchor_text": "Iris virginica"}, {"url": "https://creativecommons.org/licenses/by-sa/4.0/deed.en", "anchor_text": "CC BY_SA 4.0"}, {"url": "https://commons.wikimedia.org/wiki/File:Blue_Flag,_Ottawa.jpg", "anchor_text": "Iris versicolor"}, {"url": "https://creativecommons.org/licenses/by-sa/3.0/deed.en", "anchor_text": "CC BY_SA 3.0"}, {"url": "https://en.wikipedia.org/wiki/Iris_setosa", "anchor_text": "Iris setosa"}, {"url": "https://en.wikipedia.org/wiki/Iris_virginica", "anchor_text": "Iris virginica"}, {"url": "https://en.wikipedia.org/wiki/Iris_versicolor", "anchor_text": "Iris versicolor"}, {"url": "https://github.com/vaasha/Machine-leaning-in-examples/blob/master/sklearn/cross-validation/Cross%20Validation.ipynb", "anchor_text": "github"}, {"url": "https://scikit-learn.org/stable/modules/cross_validation.html#leave-one-out-loo", "anchor_text": "sklearn documentation"}, {"url": "http://cross-validation-iterators-for-grouped-data", "anchor_text": "sklearn documentation about groups"}, {"url": "https://scikit-learn.org/stable/modules/cross_validation.html#time-series-split", "anchor_text": "TimeSeriesSplit"}, {"url": "https://www.kaggle.com/c/titanic", "anchor_text": "Kaggle Titanic competition"}, {"url": "https://github.com/vaasha/Machine-leaning-in-examples/blob/master/sklearn/cross-validation/Cross%20Validation.ipynb", "anchor_text": "github"}, {"url": "https://towardsdatascience.com/visualization-with-plotly-express-comprehensive-guide-eb5ee4b50b57", "anchor_text": "Visualization with Plotly.Express: Comprehensive guideOne dataset and over 70 charts. Interactivity and animation often in a single line of code.towardsdatascience.com"}, {"url": "https://towardsdatascience.com/is-something-better-than-pandas-when-the-dataset-fits-the-memory-7e8e983c4fe5", "anchor_text": "Pandas alternatives - Vaex, Dash, PySpark and Julia - and when to use them"}, {"url": "https://towardsdatascience.com/stop-persisting-pandas-data-frames-in-csvs-f369a6440af5", "anchor_text": "Persist pandas in other formats than CSV"}, {"url": "https://towardsdatascience.com/read-csv-to-data-frame-in-julia-programming-lang-77f3d0081c14", "anchor_text": "Read CSV in Julia, an alternative to python"}, {"url": "https://towardsdatascience.com/pythons-geocoding-convert-a-list-of-addresses-into-a-map-f522ef513fd6", "anchor_text": "How to turn list of addresses or regions into a map"}, {"url": "https://medium.com/@vdekanovsky/machine-learning-saving-machines-cbb715de70b7", "anchor_text": "Various application of anomaly detection"}, {"url": "https://towardsdatascience.com/dealing-with-extra-white-spaces-while-reading-csv-in-pandas-67b0c2b71e6a", "anchor_text": "How to deal with extra whitespaces in CSV using Pandas"}, {"url": "https://medium.com/tag/python?source=post_page-----a9676b5cac12---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/crossvalidation?source=post_page-----a9676b5cac12---------------crossvalidation-----------------", "anchor_text": "Crossvalidation"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----a9676b5cac12---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----a9676b5cac12---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----a9676b5cac12---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa9676b5cac12&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&user=Vaclav+Dekanovsky&userId=ed473176733b&source=-----a9676b5cac12---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa9676b5cac12&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&user=Vaclav+Dekanovsky&userId=ed473176733b&source=-----a9676b5cac12---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa9676b5cac12&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a9676b5cac12--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fa9676b5cac12&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----a9676b5cac12---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----a9676b5cac12--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----a9676b5cac12--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----a9676b5cac12--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----a9676b5cac12--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----a9676b5cac12--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----a9676b5cac12--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----a9676b5cac12--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----a9676b5cac12--------------------------------", "anchor_text": ""}, {"url": "https://vdekanovsky.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://vdekanovsky.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Vaclav Dekanovsky"}, {"url": "https://vdekanovsky.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "623 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed473176733b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&user=Vaclav+Dekanovsky&userId=ed473176733b&source=post_page-ed473176733b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F41f38caa0bb5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomplete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12&newsletterV3=ed473176733b&newsletterV3Id=41f38caa0bb5&user=Vaclav+Dekanovsky&userId=ed473176733b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}