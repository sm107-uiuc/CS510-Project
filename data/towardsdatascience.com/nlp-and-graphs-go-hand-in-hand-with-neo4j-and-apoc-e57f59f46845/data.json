{"url": "https://towardsdatascience.com/nlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845", "time": 1683007196.6604888, "path": "towardsdatascience.com/nlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845/", "webpage": {"metadata": {"title": "NLP goes hand in hand with graphs | Towards Data Science", "h1": "NLP goes hand in hand with graphs", "description": "Get ready, as today we will be roleplaying Neo from the Matrix. After he has had his moment of revelation, Neo realizes that even though the world seems very unstructured and random, there is a\u2026"}, "outgoing_paragraph_urls": [{"url": "https://miro.medium.com/max/1400/1*WZZ9OWp3QJjcswTITitJKw.jpeg", "anchor_text": "Neo from the Matrix", "paragraph_index": 0}, {"url": "https://imgur.com/a/eR1t5Sk", "anchor_text": "Neo4j glasses", "paragraph_index": 0}, {"url": "https://neo4j.com/developer/neo4j-desktop/", "anchor_text": "Neo4j Desktop", "paragraph_index": 1}, {"url": "https://neo4j.com/download-center/", "anchor_text": "Neo4j Download Center", "paragraph_index": 1}, {"url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures", "anchor_text": "APOC", "paragraph_index": 4}, {"url": "https://github.com/neo4j/graph-data-science", "anchor_text": "Graph Data Science", "paragraph_index": 4}, {"url": "https://neo4j.com/docs/labs/apoc/current/nlp/", "anchor_text": "APOC NLP procedures", "paragraph_index": 6}, {"url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases", "anchor_text": "APOC NLP dependencies", "paragraph_index": 6}, {"url": "https://neo4j.com/docs/labs/apoc/current/misc/static-values/", "anchor_text": "static value storage", "paragraph_index": 7}, {"url": "https://www.kaggle.com/kevintoms/news-data", "anchor_text": "Kaggle News dataset", "paragraph_index": 11}, {"url": "https://www.kaggle.com/kevintoms", "anchor_text": "Kevin Toms", "paragraph_index": 11}, {"url": "https://neo4j.com/docs/labs/apoc/current/nlp/gcp/#nlp-gcp-classify", "anchor_text": "APOC text classification procedure", "paragraph_index": 13}, {"url": "https://cloud.google.com/natural-language/docs", "anchor_text": "Natural Language API", "paragraph_index": 13}, {"url": "https://cloud.google.com/natural-language/pricing", "anchor_text": "30.000 free classification requests per month", "paragraph_index": 13}, {"url": "https://neo4j.com/docs/labs/apoc/current/graph-updates/periodic-execution/#commit-batching", "anchor_text": "documentation", "paragraph_index": 14}, {"url": "https://i.kym-cdn.com/entries/icons/mobile/000/018/083/image.jpg", "anchor_text": "favorite yoga pose", "paragraph_index": 14}, {"url": "https://tbgraph.wordpress.com/2017/04/01/neo4j-location-trees/", "anchor_text": "hierarchical trees in Neo4j", "paragraph_index": 17}, {"url": "https://www.thedeadbolt.com/wp-content/uploads/2019/08/cropped_cropped_pierce-brosnan-mammia-mia-3-617x350.jpg", "anchor_text": "great yoga pose", "paragraph_index": 30}, {"url": "https://nlp.stanford.edu/projects/coref.shtml", "anchor_text": "coreference resolution", "paragraph_index": 31}, {"url": "https://en.wikipedia.org/wiki/Sentiment_analysis", "anchor_text": "sentiment analysis", "paragraph_index": 34}, {"url": "https://aws.amazon.com/comprehend/", "anchor_text": "Comprehend", "paragraph_index": 34}, {"url": "https://github.com/neo4j/graph-data-science", "anchor_text": "Graph Data Science library", "paragraph_index": 38}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/node-similarity/", "anchor_text": "the Node similarity algorithm", "paragraph_index": 38}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/louvain/", "anchor_text": "Louvain algorithm", "paragraph_index": 38}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/similarity/", "anchor_text": "similarity algorithms in GDS", "paragraph_index": 39}, {"url": "https://en.wikipedia.org/wiki/Jaccard_index", "anchor_text": "Jaccard similarity score", "paragraph_index": 40}, {"url": "https://towardsdatascience.com/exploring-the-graph-catalog-feature-of-neo4j-graph-data-science-plugin-on-a-lord-of-the-rings-d2de0d0a023", "anchor_text": "native projection", "paragraph_index": 42}, {"url": "https://towardsdatascience.com/how-to-use-cypher-projection-in-neo4j-graph-data-science-library-on-a-lord-of-the-rings-social-b3459138c4f1", "anchor_text": "cypher projection", "paragraph_index": 42}, {"url": "https://neo4j.com/docs/graph-data-science/current/management-ops/cypher-projection/", "anchor_text": "official documentation", "paragraph_index": 43}, {"url": "https://en.wikipedia.org/wiki/Complete_graph", "anchor_text": "complete graph", "paragraph_index": 45}, {"url": "https://tbgraph.wordpress.com/2017/11/17/neo4j-marvel-social-graph-algorithms-community-detection/", "anchor_text": "community structure in the Marvel universe", "paragraph_index": 48}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/louvain/", "anchor_text": "Louvain algorithm", "paragraph_index": 48}, {"url": "https://developers.google.com/knowledge-graph", "anchor_text": "Google Knowledge Graph", "paragraph_index": 50}, {"url": "https://www.wikidata.org/wiki/Wikidata:Main_Page", "anchor_text": "WikiData", "paragraph_index": 50}, {"url": "https://tbgraph.wordpress.com/2017/03/07/neo4j-apoc-triggers-and-web-apis/", "anchor_text": "my blog posts", "paragraph_index": 52}, {"url": "https://neo4j.com/tag/twin4j/", "anchor_text": "twin4j developer newsletter", "paragraph_index": 56}, {"url": "https://twitter.com/markhneedham", "anchor_text": "Mark Needham", "paragraph_index": 56}, {"url": "https://markhneedham.com/blog/tag/wikidata/", "anchor_text": "how to query WikiData", "paragraph_index": 56}, {"url": "https://www.wikidata.org/wiki/Wikidata:Main_Page", "anchor_text": "Wikidata", "paragraph_index": 57}, {"url": "https://query.wikidata.org/", "anchor_text": "Wikidata query service", "paragraph_index": 57}, {"url": "https://neo4j.com/", "anchor_text": "Neo4j", "paragraph_index": 60}, {"url": "https://neo4j.com/tag/twin4j/", "anchor_text": "Twin4j newsletter", "paragraph_index": 60}, {"url": "https://github.com/tomasonjo/blogs/blob/master/apoc_nlp_procedures/APOC%20NLP%20procedures.ipynb", "anchor_text": "GitHub", "paragraph_index": 61}, {"url": "http://mng.bz/GGVN", "anchor_text": "http://mng.bz/GGVN", "paragraph_index": 63}], "all_paragraphs": ["Get ready, as today we will be roleplaying Neo from the Matrix. After he has had his moment of revelation, Neo realizes that even though the world seems very unstructured and random, there is a structured green code hiding behind all this disarray. We will take his knowledge of finding hidden structures in chaos and apply it to text. What might at first seem as only unstructured chaos, will soon become quite structured and full of insights once we put on our Neo4j glasses.", "This is the first time we will be using Neo4j Desktop in a blog post. You can get it at the Neo4j Download Center. It is a GUI application that makes the administration and management of local Neo4j databases more comfortable and convenient as it grants the ability to spin up database instances and more with just a few clicks. As this might also be your first time interacting with it, I have prepared a short guide on how to set up the Neo4j environment and get everything up and ready.", "After a successful installation of the Neo4j Desktop, you should be able to see the graphical interface on your monitor. We will begin by creating a new database instance by clicking on the Add Database button.", "Select Create a Local graph, set the password, and press Create. We have now successfully instantiated a new database. The next step is to add plugins to the database instance. Click on the three dots in the upper right corner of the database instance and select Manage.", "Go to the Plugins tab and install your required plugins. For this blog post, you will need both the APOC and Graph Data Science plugins.", "p.s. Yes, the GDS library is now available for Neo4j 4.x.", "APOC NLP procedures are stored in a separate file, and so, we have to install them manually. We can install any custom plugin by merely copying it to the plugins folder. Open the plugins folder as shown below and copy the APOC NLP dependencies in there.", "APOC allows us to store sensitive information such as JDBC credentials or API keys in the static value storage. Think of it as the environment file for Neo4j, where we define variables that can be easily accessed with cypher later. We will store the GCP and AWS credentials in the static value storage. The first step is to obtain the API credentials:", "After we have obtained the credentials, let\u2019s go ahead and create apoc.conf in the $Neo4j/conf folder. Store these three lines in the file.", "We can now start the Neo4j instance and investigate if the static storage works as intended with this query.", "If you have successfully followed all the steps so far, you should have a Neo4j instance running with added APOC NLP and GDS libraries. If you prefer not to set up the static value storage, just copy and paste your cloud credentials directly into queries where applicable.", "We will be using the Kaggle News dataset made available by Kevin Toms. It contains the content of around 10000 news articles. The dataset was prepared in January 2019. Unfortunately, the author offers no information about the source and the timeline of the dataset. Before we begin, we have to download the dataset and copy it to the import folder. You can access the import folder from Neo4j Desktop, as shown below.", "We will import each article as a separate node with the title and the content stored as the properties of the node.", "We will start our analysis with the APOC text classification procedure powered by Google\u2019s Natural Language API. It classifies the input text in distinct content categories. As far as I have noticed, it works best for news articles and not so well on fictional literature. Google offers 30.000 free classification requests per month, so that\u2019s quite enough to start a hobby project.", "As we need to process 10.000 articles, we will be using theapoc.periodic.iterate procedure to handle the batching process. Learn more about it in the documentation. The process will take a couple of minutes, so feel free to grab a coffee or do your favorite yoga pose while you wait.", "While you sip your delicious coffee, we can take a look at the results of the classification. Let\u2019s start by viewing some example category names just so we know what we are dealing with.", "Category names are between one and three levels deep. Levels are separated by the slash character ( / ). For example, \"/News\" contains only one level, while \"/Finance/Insurance\" contains two levels of categories. We will extract the top-level category for each classification name and store it back to our graph. This will enable us to filter and group by top-level categories more straightforwardly. The new graph schema will look like:", "When dealing with hierarchical trees in Neo4j, there are some rules I learned along the way that can help us simplify and optimize our queries. One of them is that we should have only a single relationship type throughout the whole tree. This way, we can easily query one or two levels deep, as we will see.", "Let\u2019s define a unique constraint for the top-level category node.", "We can extract and store the top-level category by merely splitting the classification name.", "Let\u2019s check out the number of articles by the top-level category. You can observe that as we are dealing with only a single relationship type in our category tree, traversing two levels deep is very simple.", "One thing to notice is that the results of the query show more articles than there actually are in our graph. This is due to some articles having more than a single classification. We will quickly inspect results by looking at the content of two articles from the Science category.", "Both articles seem to be heavily focused on science and technology. We didn\u2019t really do an in-depth analysis of the results, but we will assume that the Natural Language API does its job of classifying news articles well.", "In essence, NER is a process of identifying various entities in text and grouping them in categories such as persons, organizations, locations, and more. Which entity types we are looking for, depends entirely on the use-case. Sometimes we want to know which persons and organizations are mentioned in a given article, and other times we might be more interested in knowing which genes and proteins are referred. There exist a plethora of pre-trained models that you can use, and if none works for you, you can always train your own NER model, but this is beyond the scope of this blog post. Let\u2019s look at an example named entities found in the above scientific article.", "We can observe that the model is good at finding persons and organizations in the text, but not perfect. We can\u2019t really blame it for labeling \u201cKibble\u201d as an organization. The model was trained to recognize people and organizations in news articles and not really designed to read scientific articles. Both AWS and GCP offer their own NER models in their cloud API portfolio. We will compare them on two random stories and choose the more fitting for our use-case.", "We will start by identifying named entities with Google\u2019s Natural Language API. There is a dedicated APOC procedure apoc.nlp.gcp.entities.*, which makes it very easy to interact with the API. The procedure has two distinct modes:", "We will be using the graph mode of the procedure. As mentioned, the graph mode creates a virtual graph that we can visualize with Neo4j Browser. By setting the parameter write:false, we won't store the results back to the Neo4j.", "GCP found five different types of entities. If we look at the entity type person, we\u2019ll notice that on top of \u201cEilen Macken\u201d, GCP also labels words like \u201cmother\u201d and \u201cwoman\u201d as a person. Interestingly, it recognized \u201csearch\u201d as an event. In my opinion, GCP tries to label as many words as possible, which can be a good or bad thing, depending on the use case.", "Similarly to GCP, we also have a dedicated APOC procedure apoc.nlp.aws.entities.* for AWS NER requests.", "At first glance, we can observe that AWS found fewer entities than GCP. It also does not include words like \u201cwoman\u201d and \u201cmother\u201d under person entities. My opinion is that if you are trying to do some sort of topic modeling, then maybe GCP might be a better fit, while for creating knowledge graphs, AWS might be better. We will use AWS to analyze and extract entities from all articles in our database. As we need to batch our NER process, we will use the apoc.periodic.iterate procedure.", "If you hurry, you have time for another great yoga pose before the NER process finishes. Let me know how it goes. Alright, we can now check the results of the NER process. We will begin by investigating the most mentioned people in the articles.", "We chose AWS as it did not include words like \u201corphan\u201d or \u201cgenealogist\u201d under person type. I guess no model is perfect as we can see that \u201cPM\u201d, \u201cCEO\u201d, and \u201cPresident\u201d appear as person entities. One way to solve this problem would be to add coreference resolution as a step of the NER pipeline, but as we are dealing with third-party NLP pipelines, we don\u2019t have that luxury. Let\u2019s now look at the most mentioned persons in sports articles.", "All top ten mentioned persons in sports are Indian cricket players. Virat Kohli really stands out, so I guess he is the captain of the team. One weak point of such NER extraction is that Virat Kohli and Kohli are treated as two separate entities. This can be explained that he is sometimes mentioned with full name and other times only with the last name. Another interesting use-case would be to look at which locations and events share the most articles.", "The results look quite nice. It looks like CES 2019 happened in Las Vegas, United India Rally in Kolkata, G20 forum in Argentina, and Word Economic Forum in Davos. On top of that, there is talk about Brexit between the UK and the EU.", "AWS also offers sentiment analysis in its Comprehend API bundle. It categorizes text into four distinct sentiment groups:", "We will run the sentiment analysis on all of our articles. I would imagine that more or less news should be neutral, except for maybe sports. There is a particular APOC procedure apoc.nlp.aws.sentiment.* that handles AWS sentiment API requests with the same two modes (stream & graph) as the procedure for NER processing.", "We will look at co-mentions of persons and events in sports articles that AWS Comprehend labeled as positive.", "It looks like tennis players are winning tennis tournaments. The Indian cricket team with Virat Kohli as their captain has won the 2011 World cup and Melbourne Test. Or so I might imagine given the results.", "If you have read any of my blog posts, you know that I like to write about the Graph Data Science library. This blog is no different. First, we will project a bipartite network to a unipartite one with the help of the Node similarity algorithm. In the next step, we will search for communities within the projected unipartite graph with the Louvain algorithm.", "A bipartite network is just a fancy way of saying that the graph contains two distinct sets of nodes, and likewise, a unipartite network contains only a single set of nodes. In our example, we will start with a bipartite network that includes both articles and NER entities. In the next step, we will project it to a unipartite network with the help of similarity algorithms in GDS. Here is a diagram of what will actually happen behind the scenes.", "We can think of unipartite projection as a process of translating indirect relationships to direct ones. The difference between similarity algorithms is just the metric being used to calculate similarity score or weight. For example, the Node similarity algorithm uses the Jaccard similarity score. It is defined as the size of the intersection divided by the size of the union. If we wanted to, we could also project a unipartite network of articles instead of persons and inspect how similar articles are based on the entities mentioned in them.", "Before we run any algorithms, let\u2019s just quickly refresh how does the GDS library work.", "The graph analytics pipeline consists of three main parts. In the first part, the graph loader reads the stored graph from Neo4j and loads it as an in-memory projected graph. We can use either native projection or cypher projection to load the projected graph. In the second step, we execute the graph algorithms in sequence. We can use the results of one graph algorithm as an input to another one. Last but not least, we store or stream the results back to Neo4j.", "We will use the cypher projection to load the in-memory graph. If you need a quick refresher on how it works, I suggest you take a look at the official documentation. In the node statement, we will describe all articles that are in the top-level category of news and also all person entities. In the relationship statement, we will describe all the links between news articles and person entities.", "The next step is to infer a similarity network between person entities with the help of the Node similarity algorithm. We can influence how sparse or dense the similarity network will be with the following three parameters:", "Usually, we have little to no idea how sparse the graph will be beforehand. And we definitely don\u2019t want to end up with a complete graph. We can evaluate the similarity network with the stats mode of the algorithm. This way, we don't store or mutate any results before we fine-tune the above three parameters.", "At first glance, the nodes don\u2019t seem to be very similar. This is fine. We want to infer a sparse network as community detection algorithms fare poorly on very dense graphs. Determining the most optimal similarity parameter values requires a combination of art and science, but with some experience, you will get good at it. We will set the similarityCutoff to be 0.6 while leaving the degreeCutoff and topK parameters at their default values. Using the mutate mode, we store the results of the algorithm back to the in-memory projected graph.", "Community detection algorithms are designed to help us understand the structure of complex networks. The most apparent application is finding groups of friends in a social network. We think of a community as a densely connected group of nodes, similar to how a group of friends is highly interconnected. Let\u2019s take a look at some community structure visualizations to gain a better understanding.", "This is a visualization I did a couple of years ago when I was analyzing the community structure in the Marvel universe. The color of the node indicates the group affiliation. We can observe that communities consist of highly interconnected nodes that have fewer links to other clusters. In this blog post, we will use the Louvain algorithm to inspect the community structure of our inferred similarity network.", "The communities found are relatively small. This is directly a consequence of the similarityCutoff parameter value. If we chose a lower threshold, more nodes would be deemed similar, and likely we would get bigger communities. Likewise, we would also get bigger communities if we increased the size of our dataset and processed a couple of thousand articles more. That being said, it is time to move to the data enrichment chapter and add some context to our entities.", "We found a couple of small communities in our graph. Some persons are quite famous, and it is not hard to find a common denominator between the members of communities. For example, I know that Harrison Ford, Halle Berry, and Jim Parsons are all actors, so I would assume the rest of the group are also actors. We could go and google them. A better idea would be to programmatically enrich the entities in our graph using external data providers like Google Knowledge Graph or WikiData. That is precisely what we are going to do next.", "We are going to enrich only the persons that were returned in the previous query (members of the top five largest communities). To avoid running the community detection multiple times, we will first store the results of the Louvain algorithm back to Neo4j.", "A long time ago I have already used Google Knowledge Graph API in one of my blog posts. One of the reasons I write is that I have a repository of useful cypher queries that I can copy-paste from and use in later analyses.", "We will use the Knowledge Graph API to enrich the members of the largest communities with description and detailed description properties.", "Let\u2019s now look at the largest five communities of persons and include their Knowledge Graph descriptions.", "With the addition of the enriched descriptions, we get a better sense of who are the members of communities. We can observe that the largest cluster is comprised of tennis players. The knowledge graph doesn\u2019t identify any members of the second-largest group. It does, however, know that \u201cUluberia\u201d is actually a city in India and not a person.", "The main reason why I am subscribed to the weekly twin4j developer newsletter is that I can copy-paste cypher queries from other people. Mark Needham did a whole series on how to query WikiData with cypher. He did all the hard work, so we can enjoy the fruits of his labor by copy-pasting his cypher queries. He also developed the APOC NLP procedures we just used, so kudos to Mark!", "For all of you who have never heard of the Wikidata before, they describe themselves as a free and open knowledge base that can be read and edited by both humans and machines. After inspecting it for a bit, I can say that it is quite wealthy with information and definitely worth checking out. We will add the date of birth, occupation, and nationality information to the members of the largest communities. Check out the Wikidata query service for more details about data enrichment options.", "Let\u2019s now inspect the largest communities and include the additional information we acquired from Wikidata.", "The results look very impressive. I bet you didn\u2019t know that there are at least two people named Jim Parsons. One of them is an actor, and the other one is a race car driver. And we are only scratching the surface of the information that is available through Wikidata API.", "If you are still here, I salute you. This is my longest blog post to date. Even though it felt at times as I am writing a mini-book or a chapter of my non-existent book, I am happy as I think it turned out really nice and I learned a lot along the way. I hope you did too. If you enjoyed it and would like me to write longer posts like this one, do let me know. In the meantime, you can download Neo4j and get started working on your own NLP pipeline. And don\u2019t forget to subscribe to the Twin4j newsletter.", "The code is available on GitHub.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data explorer. Turn everything into a graph. Author of Graph algorithms for Data Science at Manning publication. http://mng.bz/GGVN"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe57f59f46845&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e57f59f46845--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e57f59f46845--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://bratanic-tomaz.medium.com/?source=post_page-----e57f59f46845--------------------------------", "anchor_text": ""}, {"url": "https://bratanic-tomaz.medium.com/?source=post_page-----e57f59f46845--------------------------------", "anchor_text": "Tomaz Bratanic"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F57f13c0ea39a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=post_page-57f13c0ea39a----e57f59f46845---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe57f59f46845&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe57f59f46845&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://miro.medium.com/max/1400/1*WZZ9OWp3QJjcswTITitJKw.jpeg", "anchor_text": "Neo from the Matrix"}, {"url": "https://imgur.com/a/eR1t5Sk", "anchor_text": "Neo4j glasses"}, {"url": "https://neo4j.com/developer/neo4j-desktop/", "anchor_text": "Neo4j Desktop"}, {"url": "https://neo4j.com/download-center/", "anchor_text": "Neo4j Download Center"}, {"url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures", "anchor_text": "APOC"}, {"url": "https://github.com/neo4j/graph-data-science", "anchor_text": "Graph Data Science"}, {"url": "https://neo4j.com/docs/labs/apoc/current/nlp/", "anchor_text": "APOC NLP procedures"}, {"url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases", "anchor_text": "APOC NLP dependencies"}, {"url": "https://neo4j.com/docs/labs/apoc/current/misc/static-values/", "anchor_text": "static value storage"}, {"url": "https://developers.google.com/places/web-service/get-api-key", "anchor_text": "How to get Google credentials"}, {"url": "https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys", "anchor_text": "How to get AWS credentials"}, {"url": "https://www.kaggle.com/kevintoms/news-data", "anchor_text": "Kaggle News dataset"}, {"url": "https://www.kaggle.com/kevintoms", "anchor_text": "Kevin Toms"}, {"url": "https://neo4j.com/docs/labs/apoc/current/nlp/gcp/#nlp-gcp-classify", "anchor_text": "APOC text classification procedure"}, {"url": "https://cloud.google.com/natural-language/docs", "anchor_text": "Natural Language API"}, {"url": "https://cloud.google.com/natural-language/pricing", "anchor_text": "30.000 free classification requests per month"}, {"url": "https://neo4j.com/docs/labs/apoc/current/graph-updates/periodic-execution/#commit-batching", "anchor_text": "documentation"}, {"url": "https://i.kym-cdn.com/entries/icons/mobile/000/018/083/image.jpg", "anchor_text": "favorite yoga pose"}, {"url": "https://tbgraph.wordpress.com/2017/04/01/neo4j-location-trees/", "anchor_text": "hierarchical trees in Neo4j"}, {"url": "https://explosion.ai/demos/displacy-ent?text=%22The%20SI%20unit%20of%20mass%20is%20redefined%20using%20the%20Planck%20constant%20as%20the%20129-year-old%20physical%20prototype%20of%20the%20kilogram%20retires.%20The%20new%20system%20uses%20a%20Kibble%20balance%20where%20weight%20is%20balanced%20against%20an%20electromagnetic%20force.%20Conceptualised%20in%201975%20by%20late%20British%20physicist%20Bryan%20Kibble%2C%20the%20latest%20Kibble%20balance%20can%20measure%20Planck%20constant%20with%20uncertainties%20in%20a%20few%20parts%20per%20billion.%22&model=en_core_web_sm&ents=person%2Corg%2Cgpe%2Cloc%2Cproduct%2Cnorp%2Cdate%2Cper%2Cmisc%2Cevent%2Cwork_of_art%2Clanguage%2Ctime%2Cpercent", "anchor_text": "displaCy"}, {"url": "https://www.thedeadbolt.com/wp-content/uploads/2019/08/cropped_cropped_pierce-brosnan-mammia-mia-3-617x350.jpg", "anchor_text": "great yoga pose"}, {"url": "https://nlp.stanford.edu/projects/coref.shtml", "anchor_text": "coreference resolution"}, {"url": "https://en.wikipedia.org/wiki/Sentiment_analysis", "anchor_text": "sentiment analysis"}, {"url": "https://aws.amazon.com/comprehend/", "anchor_text": "Comprehend"}, {"url": "https://github.com/neo4j/graph-data-science", "anchor_text": "Graph Data Science library"}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/node-similarity/", "anchor_text": "the Node similarity algorithm"}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/louvain/", "anchor_text": "Louvain algorithm"}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/similarity/", "anchor_text": "similarity algorithms in GDS"}, {"url": "https://en.wikipedia.org/wiki/Jaccard_index", "anchor_text": "Jaccard similarity score"}, {"url": "https://neo4j.com/docs/graph-data-science/current/common-usage/", "anchor_text": "official documentation"}, {"url": "https://towardsdatascience.com/exploring-the-graph-catalog-feature-of-neo4j-graph-data-science-plugin-on-a-lord-of-the-rings-d2de0d0a023", "anchor_text": "native projection"}, {"url": "https://towardsdatascience.com/how-to-use-cypher-projection-in-neo4j-graph-data-science-library-on-a-lord-of-the-rings-social-b3459138c4f1", "anchor_text": "cypher projection"}, {"url": "https://neo4j.com/docs/graph-data-science/current/management-ops/cypher-projection/", "anchor_text": "official documentation"}, {"url": "https://en.wikipedia.org/wiki/Complete_graph", "anchor_text": "complete graph"}, {"url": "https://tbgraph.wordpress.com/2017/11/17/neo4j-marvel-social-graph-algorithms-community-detection/", "anchor_text": "community structure in the Marvel universe"}, {"url": "https://neo4j.com/docs/graph-data-science/current/algorithms/louvain/", "anchor_text": "Louvain algorithm"}, {"url": "https://developers.google.com/knowledge-graph", "anchor_text": "Google Knowledge Graph"}, {"url": "https://www.wikidata.org/wiki/Wikidata:Main_Page", "anchor_text": "WikiData"}, {"url": "https://tbgraph.wordpress.com/2017/03/07/neo4j-apoc-triggers-and-web-apis/", "anchor_text": "my blog posts"}, {"url": "https://neo4j.com/tag/twin4j/", "anchor_text": "twin4j developer newsletter"}, {"url": "https://twitter.com/markhneedham", "anchor_text": "Mark Needham"}, {"url": "https://markhneedham.com/blog/tag/wikidata/", "anchor_text": "how to query WikiData"}, {"url": "https://www.wikidata.org/wiki/Wikidata:Main_Page", "anchor_text": "Wikidata"}, {"url": "https://query.wikidata.org/", "anchor_text": "Wikidata query service"}, {"url": "https://neo4j.com/", "anchor_text": "Neo4j"}, {"url": "https://neo4j.com/tag/twin4j/", "anchor_text": "Twin4j newsletter"}, {"url": "https://github.com/tomasonjo/blogs/blob/master/apoc_nlp_procedures/APOC%20NLP%20procedures.ipynb", "anchor_text": "GitHub"}, {"url": "https://medium.com/tag/neo4j?source=post_page-----e57f59f46845---------------neo4j-----------------", "anchor_text": "Neo4j"}, {"url": "https://medium.com/tag/nlp?source=post_page-----e57f59f46845---------------nlp-----------------", "anchor_text": "NLP"}, {"url": "https://medium.com/tag/data-science?source=post_page-----e57f59f46845---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/graphs?source=post_page-----e57f59f46845---------------graphs-----------------", "anchor_text": "Graphs"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----e57f59f46845---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe57f59f46845&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=-----e57f59f46845---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe57f59f46845&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=-----e57f59f46845---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe57f59f46845&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e57f59f46845--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe57f59f46845&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e57f59f46845---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e57f59f46845--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e57f59f46845--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e57f59f46845--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e57f59f46845--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e57f59f46845--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e57f59f46845--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e57f59f46845--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e57f59f46845--------------------------------", "anchor_text": ""}, {"url": "https://bratanic-tomaz.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://bratanic-tomaz.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Tomaz Bratanic"}, {"url": "https://bratanic-tomaz.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3.1K Followers"}, {"url": "http://mng.bz/GGVN", "anchor_text": "http://mng.bz/GGVN"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F57f13c0ea39a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=post_page-57f13c0ea39a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Feab586d298c8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-and-graphs-go-hand-in-hand-with-neo4j-and-apoc-e57f59f46845&newsletterV3=57f13c0ea39a&newsletterV3Id=eab586d298c8&user=Tomaz+Bratanic&userId=57f13c0ea39a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}