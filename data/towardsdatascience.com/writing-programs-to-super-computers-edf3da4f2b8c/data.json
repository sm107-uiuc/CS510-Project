{"url": "https://towardsdatascience.com/writing-programs-to-super-computers-edf3da4f2b8c", "time": 1683000820.3466392, "path": "towardsdatascience.com/writing-programs-to-super-computers-edf3da4f2b8c/", "webpage": {"metadata": {"title": "Writing Programs for Super Computers | by Anuradha Wickramarachchi | Towards Data Science", "h1": "Writing Programs for Super Computers", "description": "What changes when you scale up and out. Challenges faces in super computing."}, "outgoing_paragraph_urls": [{"url": "https://nci.org.au/our-systems/hpc-systems", "anchor_text": "NCI", "paragraph_index": 0}, {"url": "https://nci.org.au/our-systems/hpc-systems", "anchor_text": "NCI", "paragraph_index": 0}, {"url": "https://opus.nci.org.au/display/Help/Raijin+User+Guide#RaijinUserGuide-QueueStructure", "anchor_text": "read more if you like", "paragraph_index": 1}, {"url": "https://en.wikipedia.org/wiki/Thrashing_(computer_science)", "anchor_text": "thrashing", "paragraph_index": 8}, {"url": "https://www.openmp.org/", "anchor_text": "OpenMP", "paragraph_index": 11}, {"url": "https://docs.python.org/3.9/library/multiprocessing.shared_memory.html", "anchor_text": "You must use shared memory architecture", "paragraph_index": 11}, {"url": "https://www.open-mpi.org/doc/", "anchor_text": "Open-MPI", "paragraph_index": 11}, {"url": "https://mpitutorial.com/tutorials/mpi-hello-world/", "anchor_text": "MPI-tutorials", "paragraph_index": 12}], "all_paragraphs": ["To give an idea of a super computer think of a power full set of machines, that you can use as one. Weird enough? Its not necessarily a single machine with a lot of memory or CPU power. Indeed they do have great computing power but not just by increasing speed or memory. Lets have a look at NCI (which I currently happen to work with). These are the specs at NCI.", "Since this is a complete computational facility that thousands of user around Australia use, programs are accepted to run in the form of jobs, submitted to a queue under a specific project grant (usually funded by research institutions). Different queues charge varying amounts. But basically you are charged per CPU hour, times the queue cost (determined by queue specs and priority). If you have 1 CPU program running 1 hour; you consume 1 service unit multiplied by the queue cost (read more if you like). Usually grants are in order of thousands or millions of CPU hours.", "At the time of your job submission you can specify the resources you need. Most important things here is that the systems architecture is always x64 for CPUs and CUDA for GPUs. So when you compile for the Linux operating system, you can run them in the super computer. Your job submission will look like this.", "This is a real script I used to assembly a metagenomic sample (with millions of reads. Or think like some program). I have requested 28 cores/cpus, from project ch35 with 512GB memory and 100 hours walltime. So I will consume 28 * 100 * 1.5 = 2800 * 1.5 = 4200 service units. 1.5 is the cost for biodev job queue. Usually memory is not charged since when you ask 28 cpus they allocate a complete node so we essentially have 576GB of RAM per node.", "You can see that we have 89,256 cores in 4500 nodes. These nodes can be considered as separate computers connected with infiniband (very fast networking). These nodes can share data by message passing interfaces (MPI) but they do not have shared memory. Which means if you ask for 56 cores, I will get 2 nodes, 28 cores each, 576GB Max RAM each (1152GB or 1TB RAM total). But you cannot load one program with more than 576GB. This is because these nodes are NUMA nodes which stands for Non Uniform Memory Access. One process in one node cannot access RAM of the other node. So if your program is bigger you are done! Or Are you?", "Let\u2019s look at this scenario with a sample program", "Suppose you want to count all possible n-grams of a huge dataset (millions of genomic reads \u2014 strings of about 100k characters each). Then have a lookup table of each n-grams count. Then for each string you want to annotate them with their n-gram counts in the entire corpus. Most efficient way will be to keep a huge hash table in memory and use it as a lookup table, iterate each 100k character string for their n-grams and annotate). The lookup table will take 25GB (assume). Doing this in sequentially requires a lot of time, so we want to process them in parallel.", "In our sample scenario, we can have up to 28 threads per node (RAM for this particular scenario is not a big issue). But running this with just 28 cores will take days. Now we need to make this use more than 28 cores, more likely 100 or even more cores.", "Reality: If I just ask for 1000 (this will automatically pick 36 nodes)cores and submit my job, it will stall with thrashing. This is because although I ask for 1000 cores my program will run on 1 node, because one process can run only on one node.", "This is when we know our program has to change to suit super computing environments or grid systems.", "We can overcome the above challenge if we can run 1000 parallel processes. This is because separate processes can run on separate nodes as Operating System (Or the Grid system) can schedule them effectively. But now our RAM requirement will escalate at once needing us 25*1000GB as we have to have separate lookup tables for each process. We will simple need 25TB of RAM. But for 36 nodes we only have 36*576GB = 20TB. Now this is where we need both multi processing and multi threading. So we need to change both threading and process management aspects to get an optimum use of our service units. Let\u2019s see how we\u2019d do that.", "As we are trying to improve performance I will explain in terms of C++ and Python programming, which are quite often used in scientific computing. For multi threading we could use either OpenMP (C++) or multiprocessing library of python (You must use shared memory architecture. If not you\u2019ll loose RAM again). For multi processing you can use Open-MPI (Both C++ and Python variants available). Now we can simply deploy processes with around 28 threads per process. Now each process will use only 25GB RAM residing on a single node. Likewise, we can load more 100k character strings to RAM at once to process with 28 threads (As we have a lot of RAM left in each node after loading lookup tables). This program runs a lot faster.", "You\u2019ll need some pre and post processing to chunk initial data set to 36 parts and gather all 36 outputs, which can be simple split and cat commands outside of the job queue. Following is a modified code from MPI-tutorials.", "Your real program will be a lot complex than this. If you are doing your work in python make sure you have read the documents to ensure non redundant memory sharing when threading (Or it will clone all shared variables including the lookup table).", "I intend to share the complete implementation, but not at this point as I intent to introduce many optimizations you could do in a future writing.", "Hope it was a good read, at least for beginners.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fedf3da4f2b8c&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://anuradhawick.medium.com/?source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": ""}, {"url": "https://anuradhawick.medium.com/?source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": "Anuradha Wickramarachchi"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fddf633dcad17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=post_page-ddf633dcad17----edf3da4f2b8c---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fedf3da4f2b8c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fedf3da4f2b8c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://pixabay.com/photos/supercomputer-mainframe-mira-1781372/", "anchor_text": "Image Source"}, {"url": "https://nci.org.au/our-systems/hpc-systems", "anchor_text": "NCI"}, {"url": "https://nci.org.au/our-systems/hpc-systems", "anchor_text": "NCI"}, {"url": "https://opus.nci.org.au/display/Help/Raijin+User+Guide#RaijinUserGuide-QueueStructure", "anchor_text": "read more if you like"}, {"url": "https://en.wikipedia.org/wiki/Thrashing_(computer_science)", "anchor_text": "thrashing"}, {"url": "https://www.openmp.org/", "anchor_text": "OpenMP"}, {"url": "https://docs.python.org/3.9/library/multiprocessing.shared_memory.html", "anchor_text": "You must use shared memory architecture"}, {"url": "https://www.open-mpi.org/doc/", "anchor_text": "Open-MPI"}, {"url": "https://mpitutorial.com/tutorials/mpi-hello-world/", "anchor_text": "MPI-tutorials"}, {"url": "https://medium.com/tag/programming?source=post_page-----edf3da4f2b8c---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/supercomputing?source=post_page-----edf3da4f2b8c---------------supercomputing-----------------", "anchor_text": "Supercomputing"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fedf3da4f2b8c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=-----edf3da4f2b8c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fedf3da4f2b8c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=-----edf3da4f2b8c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fedf3da4f2b8c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fedf3da4f2b8c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----edf3da4f2b8c---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----edf3da4f2b8c--------------------------------", "anchor_text": ""}, {"url": "https://anuradhawick.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://anuradhawick.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Anuradha Wickramarachchi"}, {"url": "https://anuradhawick.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2K Followers"}, {"url": "https://anuradhawick.com/", "anchor_text": "https://anuradhawick.com/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fddf633dcad17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=post_page-ddf633dcad17--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F9f8ac7ab9f5b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-programs-to-super-computers-edf3da4f2b8c&newsletterV3=ddf633dcad17&newsletterV3Id=9f8ac7ab9f5b&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}