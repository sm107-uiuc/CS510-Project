{"url": "https://towardsdatascience.com/create-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888", "time": 1682996441.4300952, "path": "towardsdatascience.com/create-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888/", "webpage": {"metadata": {"title": "Create a multi-label classification AI: make our dataset [Part 1] | by Yann Defretin | Towards Data Science", "h1": "Create a multi-label classification AI: make our dataset [Part 1]", "description": "Let\u2019s create a multi-label classification for movie stills with fastAI and Pandas in order to generate a list of tags that sums up what the image contains."}, "outgoing_paragraph_urls": [{"url": "https://medium.com/@yann.defretin/create-a-multi-label-classification-ai-train-our-ai-part-2-85064466d55a", "anchor_text": "Use FastAI to create an AI capable of tagging movie snapshots", "paragraph_index": 1}, {"url": "https://whatthemovie.com", "anchor_text": "Whatthemovie", "paragraph_index": 4}, {"url": "https://rubyonrails.org", "anchor_text": "Ruby on Rails", "paragraph_index": 13}, {"url": "https://phpmyadmin.net", "anchor_text": "PhpMyAdmin", "paragraph_index": 14}, {"url": "https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html", "anchor_text": "mysqldump", "paragraph_index": 15}, {"url": "https://github.com/bmtgoncalves/mysqldump-to-csv/blob/master/mysqldump_to_csv.py", "anchor_text": "great Python script", "paragraph_index": 16}, {"url": "https://pandas.pydata.org", "anchor_text": "Pandas", "paragraph_index": 17}, {"url": "https://www.anaconda.com", "anchor_text": "Anaconda", "paragraph_index": 19}, {"url": "http://docs.continuum.io/anaconda/install/", "anchor_text": "this page", "paragraph_index": 19}, {"url": "https://jupyter.org", "anchor_text": "Jupyter", "paragraph_index": 20}, {"url": "http://whatthemovie.com", "anchor_text": "whatthemovie.com", "paragraph_index": 42}], "all_paragraphs": ["This project will be splitted into four different articles:", "2. Use FastAI to create an AI capable of tagging movie snapshots ;", "3. Deploy our AI to production as a REST API with Docker ;", "4. Make a script to re-train our AI every month.", "Created in 2008, Whatthemovie is a unique movie quiz game where people upload movie stills and the others have to guess from what movie the image was taken. In more than ten years, the website have accumulated more than 470 000 images from 30 000 movies uploaded by our awesome users.", "We favor quality over quantity. Therefore, not all images submitted are accepted. We could have more than a million images today but that was not our priority. The images uploaded must be interesting for the quiz and the quiz itself should stay quite balanced in terms of difficulty and movie genres.", "The main area looks like this:", "You are given an image taken from a movie scene and you have to guess the movie\u2019s title. The flags mean you don\u2019t have to enter the original title to get points \u2014 you can also write it in German, French, Spanish etc. We support a lot of languages for alternative titles to let users from all around the world the possibility to play and compete with the rest of the users.", "Uploading new movie stills on the website may sound easy: you pick a movie from our database \u2014 or add a new one \u2014 , you upload your image and you\u2019re good to go. In reality, users have first to take a snapshot by themselves from a movie with any player available, crop the potential black bars of the image and go through the uploading stage described above.", "On the last step of the uploading stage, we ask our users to add tags that describe what the image contains, what\u2019s inside \u2014 does the image show a street, a car etc. It looks relatively easy too but with all the work they have to go through already, most of our uploaders don\u2019t bother adding tags which is unfortunate because relevant tags are important to filter shots.", "Filtering black and white snapshots might not sound interesting but think about other tags like \u201cgore\u201d, \u201cnudity\u201d or \u201cblood\u201d. These tags show obviously sensitive content and some users don\u2019t want to see these images \u2014 at least without asking them first. That\u2019s why tagging images is important. If a user forgets to add the \u201cnudity\u201d or \u201cgore\u201d tag on his shot, a user playing from work \u2014 a lot are! \u2014 could potentially see this image and nobody wants that to happen in an open plan.", "In fact, we have added a setting on the website to let users choose if they want this kind of snapshots to be displayed automatically or not. But obviously, if a snapshot has not been tagged as sensitive \u2014 \u201cgore\u201d or \u201cnudity\u201d \u2014 , it will still show up. Which leads us to our project today: Can we suggest tags to users in an automatic way when they upload their snapshots? Can we build an AI capable of detecting relatively common elements in an image to help people tagging their shots? Can we detect nudity or gore material in an image to prevent sensible people to see them?", "In this first part of our series, we will start by creating a dataset from our database and clean it with Pandas. Then, in the second article, we will start training an AI using FastAI and try to optimize it to get the best results we can when predicting elements in images. Next, we will find a way to deploy our AI to production with Docker. Finally, we will try to write a script that re-trains our AI every month automatically with the new datas uploaded.", "Our website is powered by Ruby on Rails which makes database structure quite easy to create, understand and maintain. In all the datas we have at disposal for this project, we are actually only interested in two tables: the \u201cshots\u201d table and the \u201ctags\u201d table. These tables have all the datas we need. The former has the image ID and its filename. The latter has all tags added to a specific \u201crefID\u201d \u2014 in our case, our image ID.", "There are several ways to export these tables in a format we care about. Pandas, the library we are going to use to prepare the datas to train our AI, can read several file types such as CSV files. That\u2019s fortunate since PhpMyAdmin has the hability to export tables straight to CSV files.", "PhpMyAdmin is a nice way to do the conversion, but we prefer to do the export through the command line to have our CSV files directly on the server. Let\u2019s use mysqldump to export our two tables to SQL files first:", "Now that we have the tables exported, we can convert them to CSV files using this great Python script made by James Mishra:", "We are now ready to work with Pandas!", "We now have our datas in the good format. We can start using Pandas to explore the datas, keep only the columns of our tables that we are interested in and merge the two tables to get a pretty nice dataset ready to train our AI.", "The best way to install Pandas and use it is to install Anaconda. It is a great package that ships by default with a lot of librairies used in Deep Learning such as Pandas. You can find how to install it on this page.", "Another advantage to install Anaconda is Jupyter which is included by default as well. Jupyter lets you do some Python, Pandas and Machine/Deep Learning coding directly in the browser which is quite convenient because you can then create and display, for example, charts of your datas to check what it shows, take better decisions of what to keep etc. Starting Jupyter is easy as typingjupyter notebook in the terminal once installed.", "Let\u2019s start coding! Once we have started Jupyter, we have to import the libairies we need \u2014 in this case, Pandas, Numpy and Matplotlib.", "We can now open our CSV files with Pandas and start digging. Let\u2019s open the \u201ctags\u201d table first.", "The first thing we can do here is to remove the columns we don\u2019t need. The \u201ctags\u201d table contains the \u201cvalue\u201d of the tag, the ID of the shot the tag is linked to \u2014 \u201cref_id\u201d \u2014 and the user who added it. The columns \u201ccreated_at\u201d and \u201cupdated_at\u201d are automatically generated by Ruby on Rails when you create new tables through their generators.", "Our goal is in this project is not to find every possible element in an image but to identify the most common elements or, to be more precise, the most used tags on the website. We can find that quite simply with Pandas and the .value_counts() function:", "Showing the top 400 tags used here will be overkill but we can already find some datas to clean in these first results. We can see that in the 5th position, we have the tag \u201cAwesome Upload\u201d or, in the 13th position, we have the \u201cSotD\u201d tag. These tags are useless in our case because there are tags that don\u2019t describe what\u2019s on the image. In fact, they are related to the website\u2019s system.", "A shot with a \u201cAwesome Upload\u201d tag means it was uploaded by a premium user and in that case, the image is automatically accepted, there is no vote, no selection. Therefore, we don\u2019t want to keep this tag and try to suggest it on a new uploaded image \u2014 it is already done automatically.", "The same applies to the \u201cSotD\u201d tag \u2014 which means \u201cSnapshot of the Day\u201d. Every day, the best rated shot gets rewarded, promoted, and the uploader as well. It doesn\u2019t describe anything in the snapshot so we don\u2019t want it.", "Another interesting one is the \u201ccouple\u201d tag. A couple is very hard to recognize. It could be two men, two girls, a man and a girl etc. Also, how and when do we decide to apply this tag? When people are close to each other? Kissing? Hugging? It\u2019s hard to see the difference. More importantly, since our website is a quiz game, it\u2019s important that tags must only describe what the image shows. Tags should not give away any hint about the movie we are trying to guess. If an uploader \u2014 who obviously has watched the movie \u2014 adds the \u201ccouple\u201d tag, it gives away some information about the movie and we don\u2019t want that. If we see two people kissing, it doesn\u2019t mean they are a couple, neither if there are close to each other.", "Before removing tags, we can merge tags that are very similar. For example, we have shots with the \u201cphone\u201d tag or the \u201ctelephone\u201d one. Since it describes the same thing, we can merge them into a single one, \u201ctelephone\u201d:", "We also do the same process for other tags such as \u201cairplane\u201d and \u201cplane\u201d or \u201credhead\u201d and \u201cred hair\u201d and we drop the potential duplicates found in the table afterwards to be sure everything is clean:", "For this project, we decided to keep tags that were at least added more than 500 times and exclude some tags like the ones described above. Pandas provides a convenient function to check if a column\u2019s value is part of a list of different values \u2014 and keep only these ones. Here, we want the opposite. We want to exclude a list of tags from our dataset. We can use the .isin() function that normally gives back only the rows where the value matches one of the elements of a list. But if we add ~ in front of the function, it will do what we are looking for, exclude a list of tags \u2014 like a isNOTin() function.", "After this operation, we have 183 different tags left. We can now keep only the rows in our \u201ctags\u201d table that contain one of them with the .isin() function:", "Now that we have cleaned our \u201ctags\u201d table and kept only the most-used and interesting tags, we have to use Pandas to create a unique table that contains the tags and the image datas. We know that the \u201cref_id\u201d column in the \u201ctags\u201d table refers to the the \u201cid\u201d of an image in the \u201cshots\u201d table. Pandas makes it easy to merge two different tables that have a \u201ckey\u201d in common with the merge function.", "Let\u2019s first load and check the structure of our \u201cshots\u201d table:", "The only columns we care about here are the \u201cid\u201d column \u2014 which refers to the shot ID on the website \u2014 , and the \u201cshot_image_id\u201d column that stores the filename of the movie snapshot. It\u2019s time to merge both tables! As we know already, we have a key in common between these two tables so it\u2019s going to be easy. Let\u2019s use Pandas to do the work:", "After merging the datas, we are going, once again, to remove all the columns we are not interested in for our final dataset. But we\u2019re also going to regroup all the tags into a single cell for each image. For example, you can see above that the image with the id \u201c2\u201d have three different rows meaning it has three different tags associated to it \u2014 \u201cbed\u201d, \u201clegs\u201d, \u201ctext\u201d in the \u201cvalue\u201d column.", "We\u2019re going to regroup all the tags for a given image in a single cell separated by a comma:", "For clarity purpose, we also have renamed the column containing the tags to \u201ctags\u201d, set the column \u201cref_id\u201d as index and renamed it to \u201cid\u201d. Good, now our dataset is ready to train our AI! By usingtags_grouped.shape, we see that we have 243 558 images in our dataset with at least one associated tag to it and 183 different labels.", "The last thing to do is to export our dataset to a CSV file:", "In this first article of our series, we created our own dataset from scratch using Pandas. After cleaning it and keeping only useful datas, it is now time to start thinking about how to use this dataset to create and train an AI capable of distinguishing different elements in movie snapshots and suggest these elements as tags to users. That will be the theme of our second article. Stay tuned!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Developer at whatthemovie.com. Creator of @whattheshot. AI enthusiast."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fec6c81279888&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----ec6c81279888--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ec6c81279888--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://yann-defretin.medium.com/?source=post_page-----ec6c81279888--------------------------------", "anchor_text": ""}, {"url": "https://yann-defretin.medium.com/?source=post_page-----ec6c81279888--------------------------------", "anchor_text": "Yann Defretin"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe401aa28f5b6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&user=Yann+Defretin&userId=e401aa28f5b6&source=post_page-e401aa28f5b6----ec6c81279888---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fec6c81279888&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fec6c81279888&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.imdb.com/title/tt0058203/", "anchor_text": "L\u2019homme de Rio"}, {"url": "https://medium.com/@yann.defretin/create-a-multi-label-classification-ai-train-our-ai-part-2-85064466d55a", "anchor_text": "Use FastAI to create an AI capable of tagging movie snapshots"}, {"url": "https://whatthemovie.com", "anchor_text": "Whatthemovie"}, {"url": "https://www.imdb.com/title/tt0054177/", "anchor_text": "Le petit soldat"}, {"url": "https://rubyonrails.org", "anchor_text": "Ruby on Rails"}, {"url": "https://phpmyadmin.net", "anchor_text": "PhpMyAdmin"}, {"url": "https://dev.mysql.com/doc/refman/8.0/en/mysqldump.html", "anchor_text": "mysqldump"}, {"url": "https://github.com/bmtgoncalves/mysqldump-to-csv/blob/master/mysqldump_to_csv.py", "anchor_text": "great Python script"}, {"url": "https://pandas.pydata.org", "anchor_text": "Pandas"}, {"url": "https://www.anaconda.com", "anchor_text": "Anaconda"}, {"url": "http://docs.continuum.io/anaconda/install/", "anchor_text": "this page"}, {"url": "https://jupyter.org", "anchor_text": "Jupyter"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----ec6c81279888---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/fastai?source=post_page-----ec6c81279888---------------fastai-----------------", "anchor_text": "Fastai"}, {"url": "https://medium.com/tag/pandas?source=post_page-----ec6c81279888---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/image-classification?source=post_page-----ec6c81279888---------------image_classification-----------------", "anchor_text": "Image Classification"}, {"url": "https://medium.com/tag/multi-label?source=post_page-----ec6c81279888---------------multi_label-----------------", "anchor_text": "Multi Label"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fec6c81279888&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&user=Yann+Defretin&userId=e401aa28f5b6&source=-----ec6c81279888---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fec6c81279888&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&user=Yann+Defretin&userId=e401aa28f5b6&source=-----ec6c81279888---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fec6c81279888&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----ec6c81279888--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fec6c81279888&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----ec6c81279888---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----ec6c81279888--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----ec6c81279888--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----ec6c81279888--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----ec6c81279888--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----ec6c81279888--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----ec6c81279888--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----ec6c81279888--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----ec6c81279888--------------------------------", "anchor_text": ""}, {"url": "https://yann-defretin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://yann-defretin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Yann Defretin"}, {"url": "https://yann-defretin.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "9 Followers"}, {"url": "http://whatthemovie.com", "anchor_text": "whatthemovie.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe401aa28f5b6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&user=Yann+Defretin&userId=e401aa28f5b6&source=post_page-e401aa28f5b6--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2Fe401aa28f5b6%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-multi-label-classification-ai-for-movie-stills-part-1-ec6c81279888&user=Yann+Defretin&userId=e401aa28f5b6&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}