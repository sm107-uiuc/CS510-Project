{"url": "https://towardsdatascience.com/full-stack-development-in-1-twitter-thread-5a0cbce2e059", "time": 1683016406.7193, "path": "towardsdatascience.com/full-stack-development-in-1-twitter-thread-5a0cbce2e059/", "webpage": {"metadata": {"title": "Full Stack Development in 1 Twitter Thread | by Sean McClure | Towards Data Science", "h1": "Full Stack Development in 1 Twitter Thread", "description": "People have ideas. Lots of ideas. But how often do they turn those ideas into something real? There is a distinct difference between what\u2019s in our heads and what can be created. Most people don\u2019t\u2026"}, "outgoing_paragraph_urls": [{"url": "https://twitter.com/sean_a_mcclure/status/1264274697975468032", "anchor_text": "Twitter", "paragraph_index": 5}, {"url": "https://azlejs.com", "anchor_text": "Azle", "paragraph_index": 8}, {"url": "https://azlejs.com", "anchor_text": "Azle", "paragraph_index": 9}, {"url": "https://www.barebones.com/products/bbedit/TimetoSwitchFree.html?gclid=Cj0KCQiA-rj9BRCAARIsANB_4ACrnAhFW61USqgftoMWarqrPhY93mgSfnR_CxVenPMoBcg2i-RWUeoaAj2rEALw_wcB", "anchor_text": "TextWrangler", "paragraph_index": 9}, {"url": "https://azlejs.com", "anchor_text": "Azle", "paragraph_index": 12}, {"url": "https://fonts.google.com", "anchor_text": "Google fonts", "paragraph_index": 15}, {"url": "https://codepen.io/cybertime/pen/vYKbxGB", "anchor_text": "CodePen", "paragraph_index": 20}, {"url": "https://codepen.io/cybertime/pen/yLJZbEm", "anchor_text": "CodePen", "paragraph_index": 39}, {"url": "https://en.wikipedia.org/wiki/Representational_state_transfer", "anchor_text": "RESTful service", "paragraph_index": 43}, {"url": "https://en.wikipedia.org/wiki/Representational_state_transfer", "anchor_text": "REST API", "paragraph_index": 44}, {"url": "https://t.co/CWGBGGIWXx?amp=1", "anchor_text": "https://about-corona.net", "paragraph_index": 45}, {"url": "https://plotly.com/javascript/", "anchor_text": "Plotly", "paragraph_index": 65}, {"url": "https://plotly.com/javascript/getting-started/#plotlyjs-cdn", "anchor_text": "Getting Started", "paragraph_index": 67}, {"url": "https://plotly.com/javascript/line-charts/", "anchor_text": "line chart code", "paragraph_index": 68}, {"url": "https://codepen.io/cybertime/pen/oNLVMWG?editors=1000", "anchor_text": "CodePen", "paragraph_index": 76}, {"url": "https://mzl.la/2ysL4pm", "anchor_text": "this", "paragraph_index": 83}, {"url": "https://codepen.io/cybertime/pen/BazEQaQ?editors=1000", "anchor_text": "CodePen", "paragraph_index": 98}, {"url": "https://www.digitalocean.com/", "anchor_text": "Digital Ocean", "paragraph_index": 112}, {"url": "https://aws.amazon.com/", "anchor_text": "Amazon Web Services", "paragraph_index": 112}, {"url": "https://flask.palletsprojects.com/en/1.1.x/", "anchor_text": "Flask", "paragraph_index": 114}, {"url": "https://bit.ly/3c9pfct", "anchor_text": "Quickstart", "paragraph_index": 116}, {"url": "https://facebook.github.io/prophet/", "anchor_text": "Prophet", "paragraph_index": 145}, {"url": "https://github.com/ourownstory/neural_prophet?utm_source=hootsuite&utm_medium=&utm_term=&utm_content=&utm_campaign=", "anchor_text": "neural prophet", "paragraph_index": 146}, {"url": "https://bit.ly/3d9ak36", "anchor_text": "Quickstart", "paragraph_index": 147}, {"url": "https://codepen.io/cybertime/pen/ZEOZgqJ?editors=1000", "anchor_text": "final CodePen", "paragraph_index": 156}, {"url": "https://twitter.com/sean_a_mcclure", "anchor_text": "Twitter", "paragraph_index": 158}], "all_paragraphs": ["People have ideas. Lots of ideas. But how often do they turn those ideas into something real? There is a distinct difference between what\u2019s in our heads and what can be created.", "Most people don\u2019t build software. This includes many people on actual software teams. If you\u2019re not coding now you see the creation of working software as someone else\u2019s job. Perhaps you\u2019ve wanted to start learning (or relearning) yourself but assume it takes too long, is too technically challenging or just not something that interests you.", "Ideas typically live as drawings, post-its, mockups and \u201cclickable apps\u201d, all of which might capture ideas but are hardly validation of something workable. There is a transition point between one\u2019s ideas and what nature allows to happen, and through that transition is where innovation actually happens. There is a beautiful correspondence between form and function that only a true piece of working software can expose.", "There are no excuses left for someone not making software. No matter your interest, if you want to see your ideas come to life then you need to build software. Given today\u2019s level of abstraction in tooling, full pieces of software can be created rapidly.", "Software development isn\u2019t about \u201cprogramming\u201d computers it\u2019s about crafting something real, that interacts with people, and becomes part of the working economy.", "I originally wrote this on Twitter in a single thread, to show how just how accessible it is for anyone to create end-to-end software applications.", "There are many false gatekeepers to opportunity. The assumption that you need formal education, online courses or years of deep experience is patently false. Everyone has the ability to piece together their idea into something that actually works.", "You only need a browser, a notepad, and your computer\u2019s terminal (command prompt on PC). There are a few high-level pieces that go into building all applications:", "People rarely write programs from the ground up anymore. That\u2019s too slow. Today we use libraries. We will use JavaScript and Python libraries. I will use Azle for front-end stuff (DISCLAIMER: I created Azle, but you can use any JS library), and Flask for back-end stuff.", "Pages always have an index.html file. Go to the Azle homepage and click on the STARTER HTML icon in the top left. Copy and paste this into notepad or whatever editor you want (I\u2019ll use TextWrangler), then save the file as index.html (on your Desktop).", "Every web application has an index.html file. It\u2019s the page your browser points to when you load a website or web application. Let\u2019s place the file in a folder called my_app, and drag your index.html file into this folder:", "If you right-click the index.html file and choose your browser you can view the page. Doing that will pop open your browser and show a blank page.", "Let\u2019s style the page. Go grab the style_body code from Azle and paste it into your index.html file (inside the create_azle function):", "Don\u2019t be like Reddit and think you\u2019re cool cuz yer ugly. Go grab some minimalist hex codes and style your page like its 2020. Nothing says I\u2019m modern like Russian pastel:", "Choose your favorite color by clicking on it. Replace the \u201cbackground\u201d color in the style_body function with your new color. I\u2019ll choose Biscay. We also don\u2019t want to use standard browser fonts because the only thing worse than looking like Reddit is looking like Craigslist.", "Google fonts to the rescue. I\u2019ll choose Ubuntu. Nice and modern looking.", "Of course, we need to make our Google font available. Let\u2019s load that prior to calling our style_body function. Search for \u201cfont\u201d in the docs to find the load_font function):", "I also set the min-width property in the style_body function to 1150px so the page doesn\u2019t squish when I resize the browser. Since we\u2019re only prototyping an application we don\u2019t care about responsivity.", "Our code should now look like this:", "Since this all sits in our index.html file we can refresh the browser and see the result:", "Here\u2019s the CodePen if want to play with the code. Try changing the color of the background. Of course, changing the font won\u2019t make a difference yet since we are not showing any text.", "Whenever you see CodePen in this article, click on it to open a tab showing a live interactive version of our current code. Play with the values to suit your preferences.", "Of course, nothing is on our page. Let\u2019s change that. We will add a section to hold our content. Add 1 section using the add_sections function:", "Azle\u2019s default color for sections is a blue color, but of course, we can change that as needed.", "Try changing the number of sections.", "Let\u2019s head back to Russia and see if we can\u2019t find a better color than blue for our section. Use the style_sections function (placed directly below our add_sections function) to style our new section. To style an element we must target it using its class name and instance number. We know the class name of our section is called \u201cmy_sections\u201d, and since we only made 1 section it must be the first instance. Our style_sections function looks like this:", "I will choose Apple Valley as my section background color. I also added a border-radius of 6px to round the corners. I set the height to auto, which allows HTML elements to grow and shrink based on the contents inside the element.", "Since we want to arrange things on the page we will use layouts. These are just grids; boxes placed on the page, which we fill with text, buttons, sliders, inputs, etc. I\u2019ll add a layout with 2 rows and 1 column using the add_layout function:", "I want the top row to hold my title. I\u2019ll change the top row\u2019s height to 60px by targeting the first row of my layout using another style_layout function, directly below our previous one:", "Note how I targeted the class name of the row \u201cmy_layout_rows\u201d and the first instance (row 1). Refresh the browser to see the difference:", "Everything we\u2019ve been adding inside the curly braces of our style functions is standard CSS styling. As you try to figure out how to achieve the styles you want just search online for the right CSS. With time you will learn many styling tricks.", "Let\u2019s go ahead and show off the Ubuntu font we loaded earlier by adding a title to our application. We target the first cell of our layout and add text using the add_text function:", "Let\u2019s increase the font size of our title, and center its alignment:", "Pretty good so far. Now things get more interesting, as our next step is adding interactive elements to our application.", "Let\u2019s add another layout inside our 2nd cell to hold our interactive elements. Copy the same layout code we used before, pasting it at the bottom. Target the 2nd cell of our original layout, use 1 row, 2 columns, and color the background creamy peach (or whatever you like). We add the add_layout and style_layout as functions directly below our previous code, as follows:", "Notice I also used the column_widths property of the style_layout function to give a 20/80 split between column widths.", "The app looks too \u201cliney.\u201d Let\u2019s remove the bordering from our most recent layout by setting its border to 0:", "That\u2019s cleaner. However, I still want some kind of separation between the 2 cells of our inner layout. Let\u2019s color the 2nd cell \u201cSqueaky\u201d from our Russian palette:", "Notice our app no longer requires any bordering, since the coloring alone demarcates our layout cells. Let\u2019s make it minimal and smooth by removing the outer layout\u2019s (the first one we added) border.", "Here\u2019s the CodePen at this point.", "Now we\u2019re ready to add our interactive elements. We didn\u2019t start with any mockups of what we wanted to create, which is fine. But now might be a good time to think about what we want this to be.", "Most of today\u2019s interesting applications are data-driven. What kind of interesting data could we fetch, and what kind of model might we use? While I write this, covid-19 is on everyone\u2019s mind. Let\u2019s fetch covid-19 data and use a model to predict cases.", "****Usual Disclaimer***** Don\u2019t be an idiot and use this model to make real-life decisions regarding a pandemic. This is just for demonstration purposes.", "We want publicly-available data, ideally delivered as a \u201cRESTful service\u201d (\u201cREST API\u201d). REST APIs deliver data and functionality \u201cover the wire\u201d into our browser, making it easier to create interesting applications without having to write a ton of code.", "If someone offers covid-19 data as a REST API it means we don\u2019t have to store/manage the data ourselves; we can just use it", "I found one here: https://about-corona.net It\u2019s free and requires no authentication.", "REST APIs have \u201cendpoints\u201d, which are what we point to with our browser to fetch actual data. After reviewing the documentation I found the endpoint we will use:", "This gives global counts for deaths, confirmed and recovered cases.", "Anytime you want to see what a REST API\u2019s data looks like just open your browser to the endpoint:", "To use the data in our application we don\u2019t access it as above, rather we ingest the data using JavaScript, and parse the results into some useful form. But first, let\u2019s get back to our mockup. Now that we\u2019ve seen the data, we can think about how our app might look and act.", "A dirty mockup is all we need to anchor our approach. Here\u2019s what I came up with, using Google Slides to create the sketch:", "The user chooses a type (deaths, confirmed, recovered), with results visualized on the right in a graph. The user then chooses a \u201chorizon\u201d (future days) and clicks FORECAST to run a model in the back-end, whose results also get visualized when they are returned.", "With data and mockup in hand we can start adding our interactive UI elements. We need a dropdown, a slider, a button, and a line chart. Let\u2019s start with the first 3. I\u2019ll add a new layout inside the first inner layout cell to help position our elements:", "Notice I kept the border set to 1 so I can see the new layout:", "Now let\u2019s add our UI elements inside these new cells. From Azle\u2019s documentation we can grab the code we need.", "Add dropdown, slider and button code to our application:", "Boom, now we have UI elements:", "Let\u2019s tailor these elements for our app. We know the options we want for our dropdown (deaths, confirmed, recovered). Add those now:", "Let\u2019s allow up to 30 days for the prediction. Set the default to 1 week out (7 days), with min_value of 1 day and max_value 30 days:", "Let\u2019s center the elements and remove the border from our recent layout.", "We will use the all_ prefix in front of a new style_layout function to apply center alignment to all 3 cells at once:", "I also set the border on the layout to 0 since we no longer need it.", "Toggle the border between 1 and 0 while developing.", "halign with center ensures the contents of all 3 cells align horizontally.", "Now let\u2019s add our line chart visual.", "Starting to look like a real application now. For the line chart we will use another library called Plotly. Plotly is built on top of D3.js, an industry-standard visualization library written in Javascript.", "While you can learn D3.js itself, Plotly offers an abstraction layer that makes development (much) more rapid. Click the line chart option on Plotly\u2019s website:", "We will copy the line chart code into our application. First, we need to make this library available. The simplest way to make a JS library available to an app is via CDN (content delivery network). We just add the appropriate URL to the header of our index.html file. We find this URL from Plotly\u2019s Getting Started page:", "Now we can use any of Plotly\u2019s visuals in our application. Grab the line chart code from Plotly\u2019s website and place it inside a function called draw_line_chart, like this:", "Place this anywhere in the index.html file, outside the main create_azle function (so anywhere at the bottom, but still inside the <script> tags). Look in the next CodePen to see.", "If we invoke our draw_line_chart function it will draw our line chart inside the element with the my_div id. Of course we don\u2019t have any element like that now, so let\u2019s create the HTML element that will house our plot.", "We will use Azle\u2019s add_html function. I will give the div an id called \u201chold_chart\u201d :", "Let\u2019s go back and change \u2018myDiv\u2019 in the previous draw_line_chart function to \u2018hold_chart\u2019 so it targets correctly.", "We need a way to call our draw_line_chart function. Let\u2019s make it so that clicking on our FORECAST button draws our line chart.", "To add events to UI elements in Azle we use the add_event function. Let\u2019s add a click event to our FORECAST button like this:", "If we now click the FORECAST button we will see the line chart drawn:", "Looks great. Here is this latest CodePen.", "Plotly provides a lot of slick stuff out of the box. We get tooltips, zooming, panning, and a host of customizable options. Doing this all yourself in raw D3 isn\u2019t fun.", "The data shown in the line chart is just mock data provided by Plotly. Obviously we want to hook up real data. Let\u2019s do that now.", "I mentioned earlier that we will ingest the REST data using JavaScript, and parse the results into some useful form. An important fact about building apps that rely on fetched data is the data must be available prior to using it.", "While this sounds obvious it\u2019s easy to miss when one is just beginning to learn software development. As an example, when our users first load our app we want to show the line chart. But that line chart depends on data being available.", "To make sure data are available to any pieces of our app that require it we use so-called \u201casynchronous code.\u201d Asynchronous code WAITS until something has happened (e.g. data has been fetched) before calling a function of our choice.", "In our case, we want to fetch covid-19 data, WAIT until it\u2019s available in our app, THEN draw our line chart. JavaScript makes all this possible via its \u201cfetch\u201d API. With fetch, we simply point to the URL provided by the REST service and tell it what to do once data are received.", "Let\u2019s use fetch to bring our covid-19 data into our application. How do we use it? A simple Google search led me to this, which explains it quite nicely. It tells us to use fetch like this:", "Let\u2019s paste it into our code, using the covid-19 URL we found above (right after our Plotly code):", "Refresh your browser. The app itself doesn\u2019t look any different. But if we open the \u201cbrowser console\u201d we can see the covid-19 data we fetched. Open the browser console by right-clicking anywhere on the screen and clicking \u201cinspect\u201d. Then click console.", "You will see an \u201cObject\u201d sitting in the console. This is the covid-19 data we fetched (notice the fetch API we pasted above says console.log(data)). Click repeatedly into this object to view its structure:", "This looks a lot better than what appeared in the browser when we first pointed to the covid-19 URL. Now we can parse this data object, using its contents to populate our line chart. To do this we\u2019ll need to make a slight change to how our line chart is being drawn.", "Inspecting the line chart code we added earlier we can see it uses \u201ctraces\u201d to convert raw data into lines. We need to get the data from our fetch results into these x and y properties of the trace object:", "Let\u2019s write some JavaScript to parse the results of our fetch. We need to: 1. understand the source structure; 2. understand the destination structure. We can understand the source structure by inspecting the data in the browser console as we did previously.", "The destination structure is the trace object required by Plotly. I wrote the following function to take the raw data retrieved from fetch and convert it into the trace structure needed for Plotly:", "Functions are how we group code in software. They have a name, accept arguments, and return some result. Functions help keep code modular and maintainable.", "What\u2019s important here is to understand this is not the way to parse data. It\u2019s a way. You must experiment with JavaScript and toy around until you find something that works. Search online for how to parse JavaScript objects, loop through them, and return new structures.", "My get_dates_and_cases function accepts the fetched data, a choice (e.g. deaths), loops through its contents, extracts the pieces I need for plotting, and returns the object for Plotly. I will write another function to draw the line chart with our prepared data.", "We can remove the original Plotly code we added and use this function instead. It uses our first function to prepare the trace data, then plots the line chart as usual.", "Be sure to keep the \u201chold_chart\u201d div we added so the plot has somewhere to live.", "Recall that our fetch code only fetches data but does nothing with it. Let\u2019s make it do that our fetch function draws our line chart once the data have arrived. Change our original fetch code to look like this:", "Finally, remove the call to draw_line_chart that currently sits inside our add_event function. We\u2019ll add it back in a second. Also, don\u2019t worry about the az.hold_value.fetched_data = data line yet. We\u2019ll explain that later.", "Your current code should look like this: CodePen.", "Notice in the CodePen I wrapped a setTimeout around the fetch function. This just adds a slight delay to ensure the elements are on the screen when it goes to draw the plot. This won\u2019t be an issue once we move the fetch function to inside our add_event in the next step.", "Our covid data is now showing in the line chart. Importantly, the line chart will only be drawn when the data have been fully fetched from the REST API. To recap, we used asynchronous code in JavaScript to fetch data from an API, THEN created a visual once the data were ready.", "We also wrote 2 functions to prepare the raw data and plot the results. We are getting close:", "\u2026although we haven\u2019t discussed the data storing yet.", "Our next step is to allow the user to select a choice (deaths, confirmed, recovered) to redraw the line chart accordingly. Let\u2019s store the returned data so we can use it as needed, without having to refetch the data each time.", "I will keep the returned data in a JavaScript object. I will just use Azle\u2019s namespace like this:", "Type az.hold_value.fetched_data into the browser console and hit enter. You can see that we can access our covid-19 data anytime by simply working with this object.", "First, we want to redraw the line chart when the user makes a choice from the dropdown. Let\u2019s use Azle\u2019s \u201cchange\u201d event to make this happen.", "To add an event to our element we use Azle\u2019s add_event function as we did before for the button, targeting the element of choice, just as we did with styling:", "If you refresh your browser and make a selection from the dropdown you should see the choice alerted.", "Now we just need to redraw the line chart instead of calling alert. Our draw_line_chart function we wrote earlier is ready to go. It already takes the data and choice as arguments and redraws the plot accordingly. So all we need to do is add draw_line_chart to our add_event function for the dropdown:", "Notice we are using the data stored inside az.hold_value.fetched_data. We are also using a new Azle function called grab_value; this allows us to grab whatever value the user chose on an element (targeted as usual, with class name and class instance).", "Adding events to our other elements works the same way. But those elements relate to calling some back-end model to make predictions using our covid-19 data. So before adding the other events let\u2019s start working on the back-end model.", "For the \u201cback-end\u201d we need a server that supports the heavy lifting required to compute our predictions. We could use a cloud provider such as Digital Ocean or Amazon Web Services, but since we\u2019re just prototyping ideas we\u2019ll use our own local computer.", "Getting a front-end communicating with a back-end requires a web service. A web service will allow us to send requests to the server and receive something in return. This is what we need, since we want to give a back-end model data from our front-end and return a prediction.", "We will use a lightweight web framework called Flask to build our web service in Python. Let\u2019s do that now. At the beginning, we created our index.html file. Let\u2019s add another file to the same folder, calling it predict.py :", "I just copied the index.html file and removed the contents to make an empty predict.py file.", "Now we will add some basic Flask code to our currently blank predict.py file. Flask\u2019s documentation has a Quickstart guide where they show us the minimal code needed to set things up:", "We will need a few more pieces, like extra libraries, to get our web service suitable for our purpose. Here is what our predict.py file will look like:", "Whereas in JavaScript we used \u201cCDNs\u201d to add extra libraries to our application, in Python we use import statements. Above we are importing Flask, as well as the \u201crequest\u201d and \u201cjsonify\u201d libraries, which will enable us to receive and send data from-and-to our front-end.", "We also set a \u201croute\u201d which is an \u201cendpoint\u201d for our service. Recall our discussion on endpoints when we looked at fetching covid-19 data from a REST API. If you\u2019re thinking we are making our own REST API right now then you are correct :)", "Much of today\u2019s back-end machinery in enterprise software is made available as services, consumed as REST APIs. This makes it easier to patch together various functionality and maintain and scale the application.", "Beneath the \u201croute\u201d in our predict.py file we create a function. Python functions look different than Javascript functions, but the idea is the same; a modular piece of code that can accept arguments and return a value. I called our function forecaster.", "Finally, we specify the \u201cport\u201d at the end of the file. A port is a programmatic docking point that grants access from the outside world to our local system. I chose port 5000. You can choose a different number if you want (if it\u2019s already being used your computer will tell you)", "Let\u2019s fire up our web service to see if it works. If it all goes well we\u2019ll add our prediction model and start serving real forecasts for our application to consume and visualize.", "So far we\u2019ve just been using a browser and notepad to create our application. But now we need to speak directly with our operating system, and for that we must use terminal (command prompt on PC).", "I am using a Mac, so everything you see here will be in macOS. But the same general steps apply to PC. Open terminal. Quickest way in Mac is to use Spotlight Search by typing \u201ccommand + spacebar\u201d and typing in \u201cterminal\u201d:", "With terminal open, change into our my_app directory by running the following:", "You should see both the index.html and predict.py files. Hard to believe our entire application is only 2 files.", "Thanks to the level of abstraction available in today\u2019s tools we only require minimal code to create a full blown app.", "Now, start our web service by running the following:", "You are now running a web service, exposing your Python code to any application capable of communicating with it. This is pretty cool, considering so many high-powered libraries are available today in Python. Just think what you could create!", "Our back-end is being served on \u201clocalhost\u201d, port 5000, with an endpoint called \u201cpredict_covid\u201d, accepting parameters called \u201cx\u201d and \u201cy\u201d. To pass all this information \u201cover the wire\u201d we can construct the following URL:", "This is the standard way to communicate with a REST API when using URLs in the browser. The ? mark precedes the first parameter name, and the & precedes the second. Open a new tab in your browser, add the above URL to the top, and hit enter. You should see the following:", "Our web service simply returns the values we passed for \u201cx\u201d and \u201cy\u201d. Not too exciting, but it does prove our web service works.", "Let\u2019s hook it all up, end-to-end, so that our front-end application written in JavaScript (Azle) is passing data to, and receiving data from, our web service (rather than the browser). If we succeed, the only thing left to do will be building a good forecasting model in Python.", "We need to pass the following data to our back-end:", "Note: We could fetch the covid data in the back-end rather than passing it over-the-wire, but then we would be fetching data twice. Since we are only forecasting a few dates and values it makes more sense to use the data already fetched from the front-end.", "We already know how to \u201cgrab\u201d the values from UI elements, using Azle\u2019s grab_value function. We also have our fetched data structured nicely in our az.hold_value.fetched_data object.", "To send this to our web service we could use JavaScript\u2019s fetch API again. Instead, let\u2019s use Azle\u2019s call_api function, inside our button\u2019s event listener:", "Here is a breakdown of what is happening:", "We added an \u201cevent listener\u201d to our button, just like we did to our dropdown earlier. We also added Azle\u2019s call_api inside the event\u2019s function property, specifying the URL to our Flask service, the \u201cx\u201d and \u201cy\u201d parameters, and an alert when data are returned.", "Refresh your browser and click on the FORECAST button:", "Our application is officially interacting with our back-end service, passing data to, and receiving a response from, our Python code. Let\u2019s replace the \u201cx\u201d and \u201cy\u201d parameters with the actual data we need to send, and also add the forecast horizon from the slider value.", "Here I am grabbing the slider value, and the \u201cx\u201d and \u201cy\u201d data from our existing get_dates_and_cases function.", "We now have our events hooked-up:", "Finally, let\u2019s build a forecasting model to make predictions based on the user\u2019s choice of type (deaths, confirmed, recovered) and horizon. After some searching around I found a library called Prophet, which was open-sourced by Facebook.", "Facebook recently released their neural prophet version as well.", "Prophet is a forecasting library for time series, and has a Quickstart guide for Python that should get us up and running.", "Our final predict.py file receives data from the front-end (which we already know how to do), prepares the data as needed by the Prophet library (as specified in their docs), trains a forecast model, makes a prediction, and returns the results.", "All this in about 10 lines of code. Not bad! (There\u2019s that abstraction working for us again).", "In our index.html file I added 2 new functions for prepping data for the 2nd trace (to show the forecast). You\u2019ll see it\u2019s very similar to the ones we wrote for trace 1. I also added the new draw_forecast function to the done property of our call_api function.", "Have a look over the final index.html to see the changes. You should recognize the final changes as familiar code. If anything looks unfamiliar search online to learn why it might have been added.", "Let\u2019s refresh our browser one last time to see the full application in action.", "We achieved everything on our original list:", "Before singing off, I want to add a spinner when the user clicks FORECAST so they know to wait for the result. I also want the Plotly chart to be transparent so we can see that nice blue background we had. Finally, I\u2019m going to change the title of our app now that it\u2019s something real.", "You can find the final code here:", "And here is the final CodePen. Note that since CodePen isn\u2019t running our back-end web service you won\u2019t see the predictions. But everything should be working on your local machine.", "These are the major parts that go into building any application. With these skills you can grow into the world of software development (or just use it as a hobby to build stuff).", "That\u2019s it. Might seem like a long article but considering you just crafted an entire application with all major pieces, not too bad. If you\u2019re stuck, reach out to me on Twitter. We\u2019ll work through the code together. And don\u2019t stop here. Try other libraries. Other use cases. Other anything. Just build.", "Again, the only gatekeeper to opportunity is you.", "Founder Kedion, Ph.D. Computational Chem, builds AI software, studies complexity, host of NonTrivial podcast."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F5a0cbce2e059&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://seanamcclure.medium.com/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": ""}, {"url": "https://seanamcclure.medium.com/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "Sean McClure"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc06551b485e5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&user=Sean+McClure&userId=c06551b485e5&source=post_page-c06551b485e5----5a0cbce2e059---------------------post_header-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5a0cbce2e059&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&user=Sean+McClure&userId=c06551b485e5&source=-----5a0cbce2e059---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5a0cbce2e059&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&source=-----5a0cbce2e059---------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://unsplash.com/@helloimnik?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Hello I\u2019m Nik \ud83c\udf9e"}, {"url": "https://unsplash.com/s/photos/builder?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://twitter.com/sean_a_mcclure/status/1264274697975468032", "anchor_text": "Twitter"}, {"url": "https://azlejs.com", "anchor_text": "Azle"}, {"url": "https://azlejs.com", "anchor_text": "Azle"}, {"url": "https://www.barebones.com/products/bbedit/TimetoSwitchFree.html?gclid=Cj0KCQiA-rj9BRCAARIsANB_4ACrnAhFW61USqgftoMWarqrPhY93mgSfnR_CxVenPMoBcg2i-RWUeoaAj2rEALw_wcB", "anchor_text": "TextWrangler"}, {"url": "https://azlejs.com", "anchor_text": "Azle"}, {"url": "https://azlejs.com", "anchor_text": "Azle"}, {"url": "https://t.co/urjIhvFRiz?amp=1", "anchor_text": "flatuicolors.com/palette/ru"}, {"url": "https://fonts.google.com", "anchor_text": "Google fonts"}, {"url": "https://codepen.io/cybertime/pen/vYKbxGB", "anchor_text": "CodePen"}, {"url": "https://codepen.io/cybertime/pen/NWrojaO", "anchor_text": "CodePen"}, {"url": "https://codepen.io/cybertime/pen/yLJZbEm", "anchor_text": "CodePen"}, {"url": "https://en.wikipedia.org/wiki/Representational_state_transfer", "anchor_text": "RESTful service"}, {"url": "https://en.wikipedia.org/wiki/Representational_state_transfer", "anchor_text": "REST API"}, {"url": "https://t.co/CWGBGGIWXx?amp=1", "anchor_text": "https://about-corona.net"}, {"url": "https://t.co/pvWimRKAi3?amp=1", "anchor_text": "https://corona-api.com/timeline"}, {"url": "https://plotly.com/javascript/", "anchor_text": "Plotly"}, {"url": "https://t.co/ROsNy5974s?amp=1", "anchor_text": "Plotly JavaScript Graphing LibraryOrganizations such as Telsa Motors and Standard & Poors pair Plotly.js development with Chart Studio Enterprise, which\u2026t.co"}, {"url": "https://plotly.com/javascript/getting-started/#plotlyjs-cdn", "anchor_text": "Getting Started"}, {"url": "https://plotly.com/javascript/line-charts/", "anchor_text": "line chart code"}, {"url": "https://codepen.io/cybertime/pen/oNLVMWG?editors=1000", "anchor_text": "CodePen"}, {"url": "https://mzl.la/2ysL4pm", "anchor_text": "this"}, {"url": "https://codepen.io/cybertime/pen/BazEQaQ?editors=1000", "anchor_text": "CodePen"}, {"url": "https://codepen.io/cybertime/pen/rNLbXJz?editors=1000", "anchor_text": "CodePen"}, {"url": "https://www.digitalocean.com/", "anchor_text": "Digital Ocean"}, {"url": "https://aws.amazon.com/", "anchor_text": "Amazon Web Services"}, {"url": "https://flask.palletsprojects.com/en/1.1.x/", "anchor_text": "Flask"}, {"url": "https://bit.ly/3c9pfct", "anchor_text": "Quickstart"}, {"url": "http://localhost:5000/predict_covid/?x=100&y=400", "anchor_text": "http://localhost:5000/predict_covid/?x=100&y=400"}, {"url": "https://facebook.github.io/prophet/", "anchor_text": "Prophet"}, {"url": "https://github.com/ourownstory/neural_prophet?utm_source=hootsuite&utm_medium=&utm_term=&utm_content=&utm_campaign=", "anchor_text": "neural prophet"}, {"url": "https://bit.ly/3d9ak36", "anchor_text": "Quickstart"}, {"url": "https://t.co/8xS6zvu9e3?amp=1", "anchor_text": "sean-mcclure/Getting-Started-Building-SoftwareYou can't perform that action at this time. You signed in with another tab or window. You signed out in another tab or\u2026t.co"}, {"url": "https://codepen.io/cybertime/pen/ZEOZgqJ?editors=1000", "anchor_text": "final CodePen"}, {"url": "https://twitter.com/sean_a_mcclure", "anchor_text": "Twitter"}, {"url": "https://medium.com/tag/javascript?source=post_page-----5a0cbce2e059---------------javascript-----------------", "anchor_text": "JavaScript"}, {"url": "https://medium.com/tag/development?source=post_page-----5a0cbce2e059---------------development-----------------", "anchor_text": "Development"}, {"url": "https://medium.com/tag/hacking?source=post_page-----5a0cbce2e059---------------hacking-----------------", "anchor_text": "Hacking"}, {"url": "https://medium.com/tag/front-end-development?source=post_page-----5a0cbce2e059---------------front_end_development-----------------", "anchor_text": "Front End Development"}, {"url": "https://medium.com/tag/prototyping?source=post_page-----5a0cbce2e059---------------prototyping-----------------", "anchor_text": "Prototyping"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5a0cbce2e059&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&user=Sean+McClure&userId=c06551b485e5&source=-----5a0cbce2e059---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5a0cbce2e059&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&user=Sean+McClure&userId=c06551b485e5&source=-----5a0cbce2e059---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5a0cbce2e059&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://seanamcclure.medium.com/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc06551b485e5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&user=Sean+McClure&userId=c06551b485e5&source=post_page-c06551b485e5----5a0cbce2e059---------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd94a85a0d3a2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&newsletterV3=c06551b485e5&newsletterV3Id=d94a85a0d3a2&user=Sean+McClure&userId=c06551b485e5&source=-----5a0cbce2e059---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://seanamcclure.medium.com/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "Written by Sean McClure"}, {"url": "https://seanamcclure.medium.com/followers?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "2.1K Followers"}, {"url": "https://towardsdatascience.com/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc06551b485e5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&user=Sean+McClure&userId=c06551b485e5&source=post_page-c06551b485e5----5a0cbce2e059---------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd94a85a0d3a2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffull-stack-development-in-1-twitter-thread-5a0cbce2e059&newsletterV3=c06551b485e5&newsletterV3Id=d94a85a0d3a2&user=Sean+McClure&userId=c06551b485e5&source=-----5a0cbce2e059---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://seanamcclure.medium.com/intelligence-complexity-and-the-failed-science-of-iq-4fb17ce3f12?source=author_recirc-----5a0cbce2e059----0---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://seanamcclure.medium.com/?source=author_recirc-----5a0cbce2e059----0---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://seanamcclure.medium.com/?source=author_recirc-----5a0cbce2e059----0---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "Sean McClure"}, {"url": "https://seanamcclure.medium.com/intelligence-complexity-and-the-failed-science-of-iq-4fb17ce3f12?source=author_recirc-----5a0cbce2e059----0---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "Intelligence, Complexity, and the Failed \u201cScience\u201d of IQA Conceptual Tour of Why Intelligence Testing Fails in Both Scientific Validity and Real-World Utility"}, {"url": "https://seanamcclure.medium.com/intelligence-complexity-and-the-failed-science-of-iq-4fb17ce3f12?source=author_recirc-----5a0cbce2e059----0---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "64 min read\u00b7Sep 18, 2019"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2F4fb17ce3f12&operation=register&redirect=https%3A%2F%2Fseanamcclure.medium.com%2Fintelligence-complexity-and-the-failed-science-of-iq-4fb17ce3f12&user=Sean+McClure&userId=c06551b485e5&source=-----4fb17ce3f12----0-----------------clap_footer----5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://seanamcclure.medium.com/intelligence-complexity-and-the-failed-science-of-iq-4fb17ce3f12?source=author_recirc-----5a0cbce2e059----0---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4fb17ce3f12&operation=register&redirect=https%3A%2F%2Fseanamcclure.medium.com%2Fintelligence-complexity-and-the-failed-science-of-iq-4fb17ce3f12&source=-----5a0cbce2e059----0-----------------bookmark_preview----5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----5a0cbce2e059----1---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://barrmoses.medium.com/?source=author_recirc-----5a0cbce2e059----1---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://barrmoses.medium.com/?source=author_recirc-----5a0cbce2e059----1---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "Barr Moses"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----5a0cbce2e059----1---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----5a0cbce2e059----1---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "Zero-ETL, ChatGPT, And The Future of Data EngineeringThe post-modern data stack is coming. Are we ready?"}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----5a0cbce2e059----1---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "9 min read\u00b7Apr 3"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F71849642ad9c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fzero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c&user=Barr+Moses&userId=2818bac48708&source=-----71849642ad9c----1-----------------clap_footer----5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----5a0cbce2e059----1---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "21"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F71849642ad9c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fzero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c&source=-----5a0cbce2e059----1-----------------bookmark_preview----5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/how-i-turned-my-companys-docs-into-a-searchable-database-with-openai-4f2d34bd8736?source=author_recirc-----5a0cbce2e059----2---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://medium.com/@jacob_marks?source=author_recirc-----5a0cbce2e059----2---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://medium.com/@jacob_marks?source=author_recirc-----5a0cbce2e059----2---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "Jacob Marks, Ph.D."}, {"url": "https://towardsdatascience.com/?source=author_recirc-----5a0cbce2e059----2---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/how-i-turned-my-companys-docs-into-a-searchable-database-with-openai-4f2d34bd8736?source=author_recirc-----5a0cbce2e059----2---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "How I Turned My Company\u2019s Docs into a Searchable Database with OpenAIAnd how you can do the same with your docs"}, {"url": "https://towardsdatascience.com/how-i-turned-my-companys-docs-into-a-searchable-database-with-openai-4f2d34bd8736?source=author_recirc-----5a0cbce2e059----2---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "15 min read\u00b7Apr 25"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4f2d34bd8736&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-turned-my-companys-docs-into-a-searchable-database-with-openai-4f2d34bd8736&user=Jacob+Marks%2C+Ph.D.&userId=f7dc0c0eae92&source=-----4f2d34bd8736----2-----------------clap_footer----5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/how-i-turned-my-companys-docs-into-a-searchable-database-with-openai-4f2d34bd8736?source=author_recirc-----5a0cbce2e059----2---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "20"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4f2d34bd8736&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-turned-my-companys-docs-into-a-searchable-database-with-openai-4f2d34bd8736&source=-----5a0cbce2e059----2-----------------bookmark_preview----5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://medium.com/swlh/a-deep-conceptual-guide-to-mutual-information-a5021031fad0?source=author_recirc-----5a0cbce2e059----3---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://seanamcclure.medium.com/?source=author_recirc-----5a0cbce2e059----3---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://seanamcclure.medium.com/?source=author_recirc-----5a0cbce2e059----3---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "Sean McClure"}, {"url": "https://medium.com/swlh?source=author_recirc-----5a0cbce2e059----3---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "The Startup"}, {"url": "https://medium.com/swlh/a-deep-conceptual-guide-to-mutual-information-a5021031fad0?source=author_recirc-----5a0cbce2e059----3---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "A Deep Conceptual Guide to Mutual InformationEmbracing the \u201cCorrelation of the 21st Century.\u201d"}, {"url": "https://medium.com/swlh/a-deep-conceptual-guide-to-mutual-information-a5021031fad0?source=author_recirc-----5a0cbce2e059----3---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": "36 min read\u00b7Nov 7, 2020"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fswlh%2Fa5021031fad0&operation=register&redirect=https%3A%2F%2Fmedium.com%2Fswlh%2Fa-deep-conceptual-guide-to-mutual-information-a5021031fad0&user=Sean+McClure&userId=c06551b485e5&source=-----a5021031fad0----3-----------------clap_footer----5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://medium.com/swlh/a-deep-conceptual-guide-to-mutual-information-a5021031fad0?source=author_recirc-----5a0cbce2e059----3---------------------5b845bb7_cd07_4002_9596_8969487ff5fa-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "3"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa5021031fad0&operation=register&redirect=https%3A%2F%2Fmedium.com%2Fswlh%2Fa-deep-conceptual-guide-to-mutual-information-a5021031fad0&source=-----5a0cbce2e059----3-----------------bookmark_preview----5b845bb7_cd07_4002_9596_8969487ff5fa-------", "anchor_text": ""}, {"url": "https://seanamcclure.medium.com/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "See all from Sean McClure"}, {"url": "https://towardsdatascience.com/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "See all from Towards Data Science"}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://alexcancode.medium.com/?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://alexcancode.medium.com/?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "Alexander Nguyen"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "Why I Keep Failing Candidates During Google Interviews\u2026They don\u2019t meet the bar."}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "\u00b74 min read\u00b7Apr 13"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Fdc8f865b2c19&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwhy-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19&user=Alexander+Nguyen&userId=a148fd75c2e9&source=-----dc8f865b2c19----0-----------------clap_footer----aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "91"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fdc8f865b2c19&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwhy-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19&source=-----5a0cbce2e059----0-----------------bookmark_preview----aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://thepycoach.com/?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://thepycoach.com/?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "The PyCoach"}, {"url": "https://artificialcorner.com/?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "Artificial Corner"}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "You\u2019re Using ChatGPT Wrong! Here\u2019s How to Be Ahead of 99% of ChatGPT UsersMaster ChatGPT by learning prompt engineering."}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "\u00b77 min read\u00b7Mar 17"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fartificial-corner%2F886a50dabc54&operation=register&redirect=https%3A%2F%2Fartificialcorner.com%2Fyoure-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54&user=The+PyCoach&userId=fb44e21903f3&source=-----886a50dabc54----1-----------------clap_footer----aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "276"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F886a50dabc54&operation=register&redirect=https%3A%2F%2Fartificialcorner.com%2Fyoure-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54&source=-----5a0cbce2e059----1-----------------bookmark_preview----aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://medium.com/@hnasr/how-to-become-a-good-backend-engineer-fundamentals-4dcc4a16ce55?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://medium.com/@hnasr?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://medium.com/@hnasr?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "Hussein Nasser"}, {"url": "https://medium.com/@hnasr/how-to-become-a-good-backend-engineer-fundamentals-4dcc4a16ce55?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "How to Become a Good Backend Engineer (Fundamentals)I have been a backend engineer for over 18 years and I witnessed technologies come and go but one thing always remain constant; The first\u2026"}, {"url": "https://medium.com/@hnasr/how-to-become-a-good-backend-engineer-fundamentals-4dcc4a16ce55?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "\u00b711 min read\u00b7Dec 3, 2022"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2F4dcc4a16ce55&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40hnasr%2Fhow-to-become-a-good-backend-engineer-fundamentals-4dcc4a16ce55&user=Hussein+Nasser&userId=e4cbe924ccb&source=-----4dcc4a16ce55----0-----------------clap_footer----aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://medium.com/@hnasr/how-to-become-a-good-backend-engineer-fundamentals-4dcc4a16ce55?source=read_next_recirc-----5a0cbce2e059----0---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "36"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4dcc4a16ce55&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40hnasr%2Fhow-to-become-a-good-backend-engineer-fundamentals-4dcc4a16ce55&source=-----5a0cbce2e059----0-----------------bookmark_preview----aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://javascript.plainenglish.io/nodejs-developer-roadmap-2023-4e2fccc0ff54?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://melihyumak.medium.com/?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://melihyumak.medium.com/?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "Melih Yumak"}, {"url": "https://javascript.plainenglish.io/?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "JavaScript in Plain English"}, {"url": "https://javascript.plainenglish.io/nodejs-developer-roadmap-2023-4e2fccc0ff54?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "Nodejs Developer Roadmap 2023Explore nodejs developer roadmap for 2023. A step-by-step guide to how to become nodejs developer, increase knowledge as nodejs developer"}, {"url": "https://javascript.plainenglish.io/nodejs-developer-roadmap-2023-4e2fccc0ff54?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "\u00b77 min read\u00b7Jan 29"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fjavascript-in-plain-english%2F4e2fccc0ff54&operation=register&redirect=https%3A%2F%2Fjavascript.plainenglish.io%2Fnodejs-developer-roadmap-2023-4e2fccc0ff54&user=Melih+Yumak&userId=f47b8f2d852&source=-----4e2fccc0ff54----1-----------------clap_footer----aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://javascript.plainenglish.io/nodejs-developer-roadmap-2023-4e2fccc0ff54?source=read_next_recirc-----5a0cbce2e059----1---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "12"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4e2fccc0ff54&operation=register&redirect=https%3A%2F%2Fjavascript.plainenglish.io%2Fnodejs-developer-roadmap-2023-4e2fccc0ff54&source=-----5a0cbce2e059----1-----------------bookmark_preview----aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://medium.com/@anthonydmays/how-to-practice-leetcode-questions-the-right-way-4f9735cf06c6?source=read_next_recirc-----5a0cbce2e059----2---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://medium.com/@anthonydmays?source=read_next_recirc-----5a0cbce2e059----2---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://medium.com/@anthonydmays?source=read_next_recirc-----5a0cbce2e059----2---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "Anthony D. Mays"}, {"url": "https://medium.com/@anthonydmays/how-to-practice-leetcode-questions-the-right-way-4f9735cf06c6?source=read_next_recirc-----5a0cbce2e059----2---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "How to Practice LeetCode Problems (The Right Way)tl;dr: You\u2019re doing it wrong. Use \u201cThe Six Steps\u201d any time you practice LeetCode questions, preferably with another person. Keep an\u2026"}, {"url": "https://medium.com/@anthonydmays/how-to-practice-leetcode-questions-the-right-way-4f9735cf06c6?source=read_next_recirc-----5a0cbce2e059----2---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "\u00b713 min read\u00b7May 10, 2022"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fp%2F4f9735cf06c6&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40anthonydmays%2Fhow-to-practice-leetcode-questions-the-right-way-4f9735cf06c6&user=Anthony+D.+Mays&userId=1f5bd47ac288&source=-----4f9735cf06c6----2-----------------clap_footer----aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://medium.com/@anthonydmays/how-to-practice-leetcode-questions-the-right-way-4f9735cf06c6?source=read_next_recirc-----5a0cbce2e059----2---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "9"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4f9735cf06c6&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40anthonydmays%2Fhow-to-practice-leetcode-questions-the-right-way-4f9735cf06c6&source=-----5a0cbce2e059----2-----------------bookmark_preview----aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/use-git-like-a-senior-engineer-ef6d741c898e?source=read_next_recirc-----5a0cbce2e059----3---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://jacobistyping.medium.com/?source=read_next_recirc-----5a0cbce2e059----3---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://jacobistyping.medium.com/?source=read_next_recirc-----5a0cbce2e059----3---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "Jacob Bennett"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----5a0cbce2e059----3---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/use-git-like-a-senior-engineer-ef6d741c898e?source=read_next_recirc-----5a0cbce2e059----3---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "Use Git like a senior engineerGit is a powerful tool that feels great to use when you know how to use it."}, {"url": "https://levelup.gitconnected.com/use-git-like-a-senior-engineer-ef6d741c898e?source=read_next_recirc-----5a0cbce2e059----3---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": "\u00b74 min read\u00b7Nov 15, 2022"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Fef6d741c898e&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fuse-git-like-a-senior-engineer-ef6d741c898e&user=Jacob+Bennett&userId=630ab5ffdf27&source=-----ef6d741c898e----3-----------------clap_footer----aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/use-git-like-a-senior-engineer-ef6d741c898e?source=read_next_recirc-----5a0cbce2e059----3---------------------aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "50"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fef6d741c898e&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fuse-git-like-a-senior-engineer-ef6d741c898e&source=-----5a0cbce2e059----3-----------------bookmark_preview----aaa2de66_a8ca_41ba_b013_10428e6e0f7e-------", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "See more recommendations"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=post_page-----5a0cbce2e059--------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}