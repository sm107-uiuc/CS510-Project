{"url": "https://towardsdatascience.com/apache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0", "time": 1683008303.38361, "path": "towardsdatascience.com/apache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0/", "webpage": {"metadata": {"title": "Spark structured streaming with HTTP REST endpoints serving JSON data | Towards Data Science", "h1": "Spark Streaming with HTTP REST endpoint serving JSON data", "description": "Use local http web server ( REST endpoint ) as a structured streaming source for testing. It speeds up development of spark pipelines locally. Easy to test."}, "outgoing_paragraph_urls": [{"url": "https://jaceklaskowski.gitbooks.io/spark-structured-streaming/spark-sql-streaming-MemoryStream.html", "anchor_text": "Memory Stream", "paragraph_index": 3}, {"url": "https://jaceklaskowski.gitbooks.io/spark-structured-streaming/spark-sql-streaming-RateStreamSource.html", "anchor_text": "rate streaming", "paragraph_index": 3}, {"url": "https://spark.apache.org/docs/latest/structured-streaming-programming-guide.html#fault-tolerance-semantics", "anchor_text": "fault-tolerance semantics", "paragraph_index": 7}, {"url": "http://localhost:999/", "anchor_text": "http://localhost:999", "paragraph_index": 13}, {"url": "https://spark.apache.org/docs/latest/structured-streaming-programming-guide.html#stream-stream-joins", "anchor_text": "Stream-stream joins", "paragraph_index": 14}, {"url": "https://www.linkedin.com/in/cchandurkar/", "anchor_text": "LinkedIn", "paragraph_index": 15}], "all_paragraphs": ["Writing distributed applications could be a time-consuming process. While running simple spark.range( 0, 10 ).reduce( _ + _ ) ( A \u201cHello World\u201d example of Spark ) code on your local machine is easy enough, it eventually gets complicated as you come across more complex real-world use cases, especially in the Structured Streaming world where you want to do streaming aggregations, join with other streams, or with static datasets.", "Main challenge isn\u2019t just setting up Spark or writing code but to test it efficiently on local machine before pushing it to remote environments.", "Processing streaming data from Kinesis, Kafka, or S3 on your local machine, as you write code, might not be feasible for a number of reasons: 1 ) you don\u2019t have enough computing power available. 2) You have to process data from the \u201cearliest\u201d offset on your messaging queue but there\u2019s too much data to process. Even if you rate limit, it could take hours to process that data.", "How do you develop a production-ready spark application on your local machine in such cases? Regular practice is to develop against fake data. Memory Stream and rate streaming can help you replicate the structured streaming behavior with some fake data. Let's take a look at this unit test:", "It simply reads fake data from the JSON file and adds it to a memory stream (Line #18). Memory stream works well when you are writing unit or integration tests but you can\u2019t really add more data to it on an ad-hoc basis and watch your streaming job process it. It makes memory streams somewhat less interactive ( unless you are running it in a REPL environment ).", "It could have been great if spark had some sort of more interactive way to send data to a structured streaming pipeline during the development. It could save a lot of time. You can stream read data from sockets but the amount of data you can send as a single payload through TCP socket is limited ( unless you change your OS settings ). This could get complicated.", "Yup, this is something spark does not have built-in and the implementation, in fact, is pretty straightforward: Integrate a simple HTTP web server with your spark pipeline. The server can put the payload on MemoryStream that your spark application can read from.", "Note that this is for testing and running locally only. Since it uses Memory Stream underneath, it is not fault-tolerant. Refer to the fault-tolerance semantics in structured streaming.", "Now, how do we do that? You can create a simple HTTP server in Scala:", "The code above creates a simple HTTP server that prints the request payload and always sends { \u201csuccess\" : true } response back to the client. We can stream this payload data into spark application by putting it on a streaming source, a memory stream. So, of course, this server must be started with the spark application.", "In order to make it re-usable and to be able to create multiple HTTP streaming sources, we can put that code in a wrapper class:", "This local HTTP server created will be terminated with spark application. You can simply start a server and read streaming data from HTTP endpoint using:", "The value column of the data frame is stringified JSON payload received on HTTP endpoint. Here\u2019s a full example:", "Now, you can use your favorite REST API tool to send data to this HTTP endpoint http://localhost:9999 and watch your application process it.", "Similarly, multiple HTTP streams can be created on different ports within the same spark application. Let\u2019s take an example of clickstreams from Stream-stream joins.", "GGive it a try and let me know what you think of this. Feel free to suggest improvements or point out caveats. Connect with me on LinkedIn. Cheers!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Software engineer who loves working in diverse tech stack. Front-end | Back-end | Big Data | System Design"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd37e90e70fb0&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@cchandurkar?source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@cchandurkar?source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": "Chaitanya Chandurkar"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6d8fce833999&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&user=Chaitanya+Chandurkar&userId=6d8fce833999&source=post_page-6d8fce833999----d37e90e70fb0---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd37e90e70fb0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd37e90e70fb0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@lazycreekimages?utm_source=medium&utm_medium=referral", "anchor_text": "Michael Dziedzic"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://jaceklaskowski.gitbooks.io/spark-structured-streaming/spark-sql-streaming-MemoryStream.html", "anchor_text": "Memory Stream"}, {"url": "https://jaceklaskowski.gitbooks.io/spark-structured-streaming/spark-sql-streaming-RateStreamSource.html", "anchor_text": "rate streaming"}, {"url": "https://spark.apache.org/docs/latest/structured-streaming-programming-guide.html#fault-tolerance-semantics", "anchor_text": "fault-tolerance semantics"}, {"url": "http://localhost:999/", "anchor_text": "http://localhost:999"}, {"url": "https://github.com/cchandurkar/spark-http-streaming", "anchor_text": "https://github.com/cchandurkar/spark-http-streaming"}, {"url": "https://spark.apache.org/docs/latest/structured-streaming-programming-guide.html#stream-stream-joins", "anchor_text": "Stream-stream joins"}, {"url": "https://www.linkedin.com/in/cchandurkar/", "anchor_text": "LinkedIn"}, {"url": "https://medium.com/tag/apache-spark?source=post_page-----d37e90e70fb0---------------apache_spark-----------------", "anchor_text": "Apache Spark"}, {"url": "https://medium.com/tag/structured-streaming?source=post_page-----d37e90e70fb0---------------structured_streaming-----------------", "anchor_text": "Structured Streaming"}, {"url": "https://medium.com/tag/scala?source=post_page-----d37e90e70fb0---------------scala-----------------", "anchor_text": "Scala"}, {"url": "https://medium.com/tag/big-data?source=post_page-----d37e90e70fb0---------------big_data-----------------", "anchor_text": "Big Data"}, {"url": "https://medium.com/tag/development?source=post_page-----d37e90e70fb0---------------development-----------------", "anchor_text": "Development"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd37e90e70fb0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&user=Chaitanya+Chandurkar&userId=6d8fce833999&source=-----d37e90e70fb0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd37e90e70fb0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&user=Chaitanya+Chandurkar&userId=6d8fce833999&source=-----d37e90e70fb0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd37e90e70fb0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd37e90e70fb0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d37e90e70fb0---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d37e90e70fb0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@cchandurkar?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@cchandurkar?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Chaitanya Chandurkar"}, {"url": "https://medium.com/@cchandurkar/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "19 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6d8fce833999&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&user=Chaitanya+Chandurkar&userId=6d8fce833999&source=post_page-6d8fce833999--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F6d8fce833999%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapache-spark-stream-reading-data-from-local-http-server-d37e90e70fb0&user=Chaitanya+Chandurkar&userId=6d8fce833999&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}