{"url": "https://towardsdatascience.com/how-to-implement-linear-regression-with-pytorch-5737339296a6", "time": 1683013778.496597, "path": "towardsdatascience.com/how-to-implement-linear-regression-with-pytorch-5737339296a6/", "webpage": {"metadata": {"title": "How to implement Linear Regression with PyTorch | by Dorian Lazar | Towards Data Science", "h1": "How to implement Linear Regression with PyTorch", "description": "Probably, implementing linear regression with PyTorch is an overkill. This library was made for more complicated stuff like neural networks, complex deep learning architectures, etc. Nevertheless, I\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.nablasquared.com/how-to-implement-linear-regression-with-pytorch/", "anchor_text": "here", "paragraph_index": 38}, {"url": "https://www.nablasquared.com/", "anchor_text": "https://www.nablasquared.com/", "paragraph_index": 40}], "all_paragraphs": ["Probably, implementing linear regression with PyTorch is an overkill. This library was made for more complicated stuff like neural networks, complex deep learning architectures, etc. Nevertheless, I think that using it for implementing a simpler machine learning method, like linear regression, is a good exercise for those who want to start learning PyTorch.", "At its core, PyTorch is just a math library similar to NumPy, but with 2 important improvements:", "You can think of PyTorch as NumPy on steroids.", "While these 2 features may not seem like big improvements for what we want to do here (linear regression), since this is not very computationally-expensive and the gradient is quite simple to compute manually, they make a big difference in deep learning where we need a lot of computing power and the gradient is quite nasty to calculate by hand.", "Before working on the implementation, let\u2019s first briefly recall what linear regression is:", "Linear regression is estimating an unknown variable in a linear fashion by some other known variables. Visually, we fit a line (or a hyperplane in higher dimensions) through our data points.", "If you\u2019re not comfortable with this concept or want to understand better the math behind it, you can read my previous article about linear regression:", "Now, let\u2019s jump to the coding part.", "Firstly, we need to, obviously, import some libraries. We import torch as it is the main thing we use for the implementation, matplotlib for visualizing our results, make_regression function, from sklearn, which we will be using to generate a regression dataset for using as an example, and the python\u2019s built-in math module.", "Then we will create a LinearRegression class with the following methods:", "The first thing we do inside .fit() is to concatenate an extra column of 1\u2019s to our input matrix X. This is to simplify our math and treat the bias as the weight of an extra variable that\u2019s always 1.", "The .fit() method will be able to learn the parameters by using either closed-form formula or stochastic gradient descent. And to choose which to use, we will have a parameter called method that will expect a string of either \u2018solve\u2019 or \u2018sgd\u2019.", "When method is set to \u2018solve\u2019 we will get the weights of our model by the following formula:", "which requires the matrix X to have full column rank; so, we will check for this and otherwise we show an error message.", "The first part of our .fit() method is:", "Note that the other parameters after method are optional and are used only in the case we use SGD.", "The second part of this method handles the case of method = \u2018sgd\u2019, which doesn\u2019t require that X has full column rank.", "The SGD algorithm for our least squares linear regression is sketched below:", "We will start this algorithm by initializing the weights class attribute to a tensor which is a column vector with values drawn from a normal distribution with mean 0 and standard deviation 1/(number of columns). We divide the standard deviation by the number of columns to make sure we don\u2019t get too big values as output in the initial stages of the algorithm. This is to help us converge faster.", "At the beginning of each iteration, we randomly shuffle our rows of data. Then, for each batch, we compute the gradient and subtract it (multiplied by the learning rate) from the current weights vector to obtain the new weights.", "In the SGD algorithm sketched above, we had shown the manually computed gradient; it\u2019s that expression multiplied by alpha (the learning rate). But in the code below we won\u2019t compute that expression explicitly; instead, we compute the loss value:", "then we let PyTorch compute the gradient for us.", "Below is the second half of our .fit() method:", "To compute the gradient of the loss with respect to the weights, we need to call the .requires_grad_(True) method on the self.weights tensor, then we compute the loss according to the formula given above. After the loss is computed, we call .backward() method on the loss tensor which will compute the gradient and store it in the .grad attribute of self.weights. After we do the update, we call .detach() to get a new tensor without any operations recorded on it, so that the next time we compute the gradient we will do so based only on operations in that single iteration.", "We return self from this method to be able to concatenate the calls of the constructor and .fit() like this: lr = LinearRegression().fit(X, y, \u2018solve\u2019).", "The .predict() method is quite straight-forward. We first check if .fit() was called before, then concatenate a column of 1\u2019s to X and verify that the shape of X allows multiplication with the weights vector. If everything is OK, we simply return the result of the multiplication between X and the weights vector as the predictions.", "In .rmse() we first get the outputs of the model using .predict(), then if there were no errors during predict, we compute and return the root mean squared error which can be thought of as \u201cthe average distance from our model\u2019s estimate to the true y value\u201d.", "Below is the full code of the LinearRegression class:", "To show our implementation of linear regression in action, we will generate a regression dataset with the make_regression() function from sklearn.", "Let\u2019s plot this dataset to see how it looks like:", "The y returned by make_regression() is a flat vector. We will reshape it to a column vector to use with our LinearRegression class.", "Firstly, we will use method = \u2018solve\u2019 to fit the regression line:", "The root mean squared error of the above regression model is:", "Then, we also use method = \u2018sgd\u2019 and we will let the other parameters have their default values:", "As you can see, the regression lines in the 2 images above for methods \u2018solve\u2019 and \u2018sgd\u2019 are almost identical.", "The root mean squared error we got when using \u2018sgd\u2019 is:", "Here is the Jupyter Notebook with all the code:", "I hope you found this information useful and thanks for reading!", "This article is also posted on my own website here. Feel free to have a look!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Passionate about Data Science, AI, Programming & Math | Owner of \u2207\u00b2 https://www.nablasquared.com/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F5737339296a6&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----5737339296a6--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5737339296a6--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://dorianlazar.medium.com/?source=post_page-----5737339296a6--------------------------------", "anchor_text": ""}, {"url": "https://dorianlazar.medium.com/?source=post_page-----5737339296a6--------------------------------", "anchor_text": "Dorian Lazar"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F79574042e17b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&user=Dorian+Lazar&userId=79574042e17b&source=post_page-79574042e17b----5737339296a6---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5737339296a6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5737339296a6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/understanding-linear-regression-eaaaed2d983e", "anchor_text": "Understanding Linear RegressionThe math behind Linear Regression explained in detailtowardsdatascience.com"}, {"url": "https://www.nablasquared.com/how-to-implement-linear-regression-with-pytorch/", "anchor_text": "here"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----5737339296a6---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----5737339296a6---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----5737339296a6---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/pytorch?source=post_page-----5737339296a6---------------pytorch-----------------", "anchor_text": "Pytorch"}, {"url": "https://medium.com/tag/python?source=post_page-----5737339296a6---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5737339296a6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&user=Dorian+Lazar&userId=79574042e17b&source=-----5737339296a6---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5737339296a6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&user=Dorian+Lazar&userId=79574042e17b&source=-----5737339296a6---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5737339296a6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5737339296a6--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F5737339296a6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----5737339296a6---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----5737339296a6--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----5737339296a6--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----5737339296a6--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----5737339296a6--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----5737339296a6--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----5737339296a6--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----5737339296a6--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----5737339296a6--------------------------------", "anchor_text": ""}, {"url": "https://dorianlazar.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://dorianlazar.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Dorian Lazar"}, {"url": "https://dorianlazar.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "593 Followers"}, {"url": "https://www.nablasquared.com/", "anchor_text": "https://www.nablasquared.com/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F79574042e17b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&user=Dorian+Lazar&userId=79574042e17b&source=post_page-79574042e17b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F9fdaa579c06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-implement-linear-regression-with-pytorch-5737339296a6&newsletterV3=79574042e17b&newsletterV3Id=9fdaa579c06&user=Dorian+Lazar&userId=79574042e17b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}