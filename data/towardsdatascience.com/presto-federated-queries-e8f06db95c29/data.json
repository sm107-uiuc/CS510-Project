{"url": "https://towardsdatascience.com/presto-federated-queries-e8f06db95c29", "time": 1683013342.3955, "path": "towardsdatascience.com/presto-federated-queries-e8f06db95c29/", "webpage": {"metadata": {"title": "Presto Federated Queries. Getting Started with Presto Federated\u2026 | by Gary A. Stafford | Towards Data Science", "h1": "Presto Federated Queries", "description": "Gain a better understanding of Presto's ability to execute federated queries, which join multiple disparate data sources without having to move the data. Additionally, we will explore Ahana.io, Apache Hive and the Apache Hive Metastore, Apache Parquet file format, and some of the advantages of partitioning data."}, "outgoing_paragraph_urls": [{"url": "https://prestodb.io/", "anchor_text": "The Presto Foundation", "paragraph_index": 0}, {"url": "https://blog.openbridge.com/prestodb-vs-prestosql-the-new-presto-foundation-341405fb7ba3", "anchor_text": "confused with PrestoSQL", "paragraph_index": 0}, {"url": "https://code.facebook.com/projects/552007124892407/presto/", "anchor_text": "Facebook", "paragraph_index": 0}, {"url": "https://blog.twitter.com/engineering/en_us.html", "anchor_text": "Twitter", "paragraph_index": 0}, {"url": "https://eng.uber.com/", "anchor_text": "Uber", "paragraph_index": 0}, {"url": "https://medium.com/@alitech_2017", "anchor_text": "Alibaba", "paragraph_index": 0}, {"url": "https://medium.com/airbnb-engineering/airpal-a-web-based-query-execution-tool-for-data-analysis-33c43265ed1f", "anchor_text": "Airbnb", "paragraph_index": 0}, {"url": "https://medium.com/netflix-techblog/using-presto-in-our-big-data-platform-on-aws-938035909fd4", "anchor_text": "Netflix", "paragraph_index": 0}, {"url": "https://medium.com/@Pinterest_Engineering", "anchor_text": "Pinterest", "paragraph_index": 0}, {"url": "https://www.youtube.com/watch?v=0vdW1ORLWyk&feature=youtu.be&t=20m58s", "anchor_text": "Atlassian", "paragraph_index": 0}, {"url": "https://www.youtube.com/watch?v=LuHxnOQarXU&feature=youtu.be&t=25m13s", "anchor_text": "Nasdaq", "paragraph_index": 0}, {"url": "https://github.com/prestodb/presto/wiki/Presto-Users", "anchor_text": "more", "paragraph_index": 0}, {"url": "https://aws.amazon.com/emr/", "anchor_text": "Amazon EMR", "paragraph_index": 2}, {"url": "https://aws.amazon.com/athena/", "anchor_text": "Amazon Athena", "paragraph_index": 2}, {"url": "https://docs.aws.amazon.com/athena/latest/ug/presto-functions.html", "anchor_text": "Presto 0.172", "paragraph_index": 2}, {"url": "https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-presto-considerations.html", "anchor_text": "does not support", "paragraph_index": 2}, {"url": "https://docs.aws.amazon.com/athena/latest/ug/DocHistory.html", "anchor_text": "features", "paragraph_index": 2}, {"url": "https://aws.amazon.com/marketplace/pp/B08FXMYH46", "anchor_text": "commercial support", "paragraph_index": 2}, {"url": "https://aws.amazon.com/marketplace/seller-profile?id=0ea9f5a4-ef6c-4adf-a191-b63970d83b15", "anchor_text": "Ahana", "paragraph_index": 2}, {"url": "https://aws.amazon.com/marketplace/seller-profile?id=9e5ffcd6-ef2d-4e1e-896c-69108f80b954", "anchor_text": "Starburst", "paragraph_index": 2}, {"url": "https://aws.amazon.com/blogs/big-data/query-any-data-source-with-amazon-athenas-new-federated-query/", "anchor_text": "AWS", "paragraph_index": 3}, {"url": "https://hive.apache.org/", "anchor_text": "Apache Hive", "paragraph_index": 4}, {"url": "https://thrift.apache.org/", "anchor_text": "Thrift", "paragraph_index": 4}, {"url": "https://kafka.apache.org/", "anchor_text": "Kafka", "paragraph_index": 4}, {"url": "https://kudu.apache.org/", "anchor_text": "Kudu", "paragraph_index": 4}, {"url": "https://cassandra.apache.org/", "anchor_text": "Cassandra", "paragraph_index": 4}, {"url": "https://www.elastic.co/home", "anchor_text": "Elasticsearch", "paragraph_index": 4}, {"url": "https://www.mongodb.com/", "anchor_text": "MongoDB", "paragraph_index": 4}, {"url": "https://prestodb.io/docs/current/connector.html", "anchor_text": "data source connectors", "paragraph_index": 4}, {"url": "https://ahana.io/", "anchor_text": "Ahana", "paragraph_index": 5}, {"url": "https://www.globenewswire.com/news-release/2020/06/02/2042090/0/en/Ahana-Raises-2-25-Million-Seed-Funding-Led-by-GV-and-Joins-Linux-Foundation-s-Presto-Foundation.html", "anchor_text": "raising seed funding", "paragraph_index": 5}, {"url": "https://www.gv.com/", "anchor_text": "GV", "paragraph_index": 5}, {"url": "https://ahana.io/about/", "anchor_text": "founders", "paragraph_index": 5}, {"url": "https://aws.amazon.com/marketplace/pp/B08C21CGF6", "anchor_text": "PrestoDB Sandbox", "paragraph_index": 6}, {"url": "https://prestodb.io/docs/current/overview/concepts.html#server-types", "anchor_text": "Coordinator", "paragraph_index": 7}, {"url": "https://prestodb.io/docs/current/overview/concepts.html#server-types", "anchor_text": "Worker", "paragraph_index": 7}, {"url": "https://hive.apache.org/", "anchor_text": "Apache Hive", "paragraph_index": 7}, {"url": "https://www.postgresql.org/", "anchor_text": "PostgreSQL", "paragraph_index": 7}, {"url": "https://cwiki.apache.org/confluence/display/Hive/Home", "anchor_text": "Apache Hive", "paragraph_index": 8}, {"url": "https://cwiki.apache.org/confluence/display/Hive/Design#Design-Metastore", "anchor_text": "Metastore", "paragraph_index": 8}, {"url": "https://www.postgresql.org/", "anchor_text": "PostgreSQL", "paragraph_index": 8}, {"url": "https://aws.amazon.com/marketplace/pp/B08C21CGF6", "anchor_text": "Ahana\u2019s PrestoDB Sandbox", "paragraph_index": 10}, {"url": "https://aws.amazon.com/ec2/pricing/on-demand/", "anchor_text": "current pricing", "paragraph_index": 10}, {"url": "https://console.aws.amazon.com/iam/home?region=us-east-1#/policies/arn:aws:iam::aws:policy/AmazonS3FullAccess$jsonEditor", "anchor_text": "AmazonS3FullAccess", "paragraph_index": 13}, {"url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html", "anchor_text": "key pair", "paragraph_index": 14}, {"url": "https://aws.amazon.com/rds/postgresql/", "anchor_text": "Amazon RDS for PostgreSQL", "paragraph_index": 17}, {"url": "https://aws.amazon.com/s3/", "anchor_text": "Amazon S3", "paragraph_index": 17}, {"url": "https://aws.amazon.com/cloudformation", "anchor_text": "AWS CloudFormation", "paragraph_index": 17}, {"url": "https://github.com/garystafford/presto-aws-federated-queries", "anchor_text": "GitHub", "paragraph_index": 18}, {"url": "https://prestodb.io/docs/current/connector/postgresql.html", "anchor_text": "catalog properties file", "paragraph_index": 27}, {"url": "http://www.tpc.org/tpcds/", "anchor_text": "TPC Benchmark DS", "paragraph_index": 33}, {"url": "https://cwiki.apache.org/confluence/display/Hive/Managed+vs.+External+Tables", "anchor_text": "external table", "paragraph_index": 33}, {"url": "http://google.github.io/snappy/", "anchor_text": "SNAPPY", "paragraph_index": 38}, {"url": "https://parquet.apache.org/", "anchor_text": "Apache Parquet", "paragraph_index": 38}, {"url": "https://github.com/apache/parquet-mr/tree/master/parquet-tools", "anchor_text": "parquet-tools", "paragraph_index": 39}, {"url": "https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-PartitionedTables", "anchor_text": "Partitioned tables", "paragraph_index": 40}, {"url": "https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-PartitionedTables", "anchor_text": "Apache Hive", "paragraph_index": 41}, {"url": "https://docs.intersystems.com/irislatest/csp/docbook/Doc.View.cls?KEY=RSQL_predicates", "anchor_text": "predicate", "paragraph_index": 43}, {"url": "https://prestodb.io/docs/current/installation/jdbc.html", "anchor_text": "JDBC", "paragraph_index": 51}, {"url": "https://prestodb.io/docs/current/installation/cli.html", "anchor_text": "Presto CLI", "paragraph_index": 51}, {"url": "https://prestodb.io/docs/current/installation/tableau.html", "anchor_text": "Tableau", "paragraph_index": 51}, {"url": "https://prestodb.io/docs/current/installation/spark.html", "anchor_text": "Apache Spark/PySpark", "paragraph_index": 51}, {"url": "https://www.jetbrains.com/pycharm/", "anchor_text": "JetBrains PyCharm", "paragraph_index": 52}, {"url": "https://prestodb.io/download.html", "anchor_text": "download", "paragraph_index": 54}, {"url": "http://www.tpc.org/tpcds/presentations/tpcds_workload_analysis.pdf", "anchor_text": "Why You Should Run TPC-DS: A Workload Analysis", "paragraph_index": 59}, {"url": "http://www.tpc.org/", "anchor_text": "tpc.org", "paragraph_index": 59}, {"url": "https://prestodb.io/docs/current/connector/tpcds.html", "anchor_text": "Presto", "paragraph_index": 62}, {"url": "http://www.tpc.org/tpcds/presentations/tpcds_workload_analysis.pdf", "anchor_text": "Why You Should Run TPC-DS: A Workload Analysis", "paragraph_index": 74}, {"url": "https://aws.amazon.com/marketplace/pp/Ahana-PrestoDB-Sandbox-for-learning-free-open-sour/B08C21CGF6", "anchor_text": "PrestoDB Sandbox", "paragraph_index": 75}], "all_paragraphs": ["According to The Presto Foundation, Presto (aka PrestoDB), not to be confused with PrestoSQL, is an open-source, distributed, ANSI SQL compliant query engine. Presto is designed to run interactive ad-hoc analytic queries against data sources of all sizes ranging from gigabytes to petabytes. Presto is used in production at an immense scale by many well-known organizations, including Facebook, Twitter, Uber, Alibaba, Airbnb, Netflix, Pinterest, Atlassian, Nasdaq, and more.", "In the following post, we will gain a better understanding of Presto\u2019s ability to execute federated queries, which join multiple disparate data sources without having to move the data. Additionally, we will explore Apache Hive, the Hive Metastore, Hive partitioned tables, and the Apache Parquet file format.", "There are several options for Presto on AWS. AWS recommends Amazon EMR and Amazon Athena. Presto comes pre-installed on EMR 5.0.0 and later. The Athena query engine is a derivation of Presto 0.172 and does not support all of Presto\u2019s native features. However, Athena has many comparable features and deep integrations with other AWS services. If you need full, fine-grain control, you could deploy and manage Presto, yourself, on Amazon EC2, Amazon ECS, or Amazon EKS. Lastly, you may decide to purchase a Presto distribution with commercial support from an AWS Partner, such as Ahana or Starburst. If your organization needs 24x7x365 production-grade support from experienced Presto engineers, this is an excellent choice.", "In a modern Enterprise, it is rare to find all data living in a monolithic datastore. Given the multitude of available data sources, internal and external to an organization, and the growing number of purpose-built databases, analytics engines must be able to join and aggregate data across many sources efficiently. AWS defines a federated query as a capability that \u2018enables data analysts, engineers, and data scientists to execute SQL queries across data stored in relational, non-relational, object, and custom data sources.\u2019", "Presto allows querying data where it lives, including Apache Hive, Thrift, Kafka, Kudu, and Cassandra, Elasticsearch, and MongoDB. In fact, there are currently 24 different Presto data source connectors available. With Presto, we can write queries that join multiple disparate data sources without moving the data. Below is a simple example of a Presto federated query statement that correlates a customer\u2019s credit rating with their age and gender. The query federates two different data sources, a PostgreSQL database table, postgresql.public.customer, and an Apache Hive Metastore table, hive.default.customer_demographics, whose underlying data resides in Amazon S3.", "The Linux Foundation\u2019s Presto Foundation member, Ahana, was founded as the first company focused on bringing PrestoDB-based ad hoc analytics offerings to market and working to foster growth and evangelize the Presto community. Ahana\u2019s mission is to simplify ad hoc analytics for organizations of all shapes and sizes. Ahana has been successful in raising seed funding, led by GV (formerly Google Ventures). Ahana\u2019s founders have a wealth of previous experience in tech companies, including Alluxio, Kinetica, Couchbase, IBM, Apple, Splunk, and Teradata.", "This post will use Ahana\u2019s PrestoDB Sandbox, an Amazon Linux 2, AMI-based solution available on AWS Marketplace, to execute Presto federated queries.", "Ahana\u2019s PrestoDB Sandbox AMI allows you to quickly get started with Presto to query data wherever your data resides. This AMI configures a single EC2 instance Sandbox to be both the Presto Coordinator and a Presto Worker. It comes with an Apache Hive Metastore backed by PostgreSQL bundled in. In addition, the following catalogs are bundled in to try, test, and prototype with Presto:", "In this demonstration, we will use Apache Hive and an Apache Hive Metastore backed by PostgreSQL. Apache Hive is data warehouse software that facilitates reading, writing, and managing large datasets residing in distributed storage using SQL. The structure can be projected onto data already in storage. A command-line tool and JDBC driver are provided to connect users to Hive. The Metastore provides two essential features of a data warehouse: data abstraction and data discovery. Hive accomplishes both features by providing a metadata repository that is tightly integrated with the Hive query processing system so that data and metadata are in sync.", "To get started creating federated queries with Presto, we first need to create and configure our AWS environment, as shown below.", "To start, subscribe to Ahana\u2019s PrestoDB Sandbox on AWS Marketplace. Make sure you are aware of the costs involved. The AWS current pricing for the default, Linux-based r5.xlarge on-demand EC2 instance hosted in US East (N. Virginia), is USD 0.252 per hour. For the demonstration, since performance is not an issue, you could try a smaller EC2 instance, such as r5.large instance costs USD 0.126 per hour.", "The configuration process will lead you through the creation of an EC2 instance based on Ahana\u2019s PrestoDB Sandbox AMI.", "I chose to create the EC2 instance in my default VPC. Part of the demonstration includes connecting to Presto locally using JDBC. Therefore, it was also necessary to include a public IP address for the EC2 instance. If you chose to do so, I strongly recommend limiting the required ports 22 and 8080 in the instance\u2019s Security Group to just your IP address (a /32 CIDR block).", "Lastly, we need to assign an IAM Role to the EC2 instance, which has access to Amazon S3. I assigned the AWS managed policy, AmazonS3FullAccess, to the EC2\u2019s IAM Role.", "Part of the configuration also asks for a key pair. You can use an existing key or create a new key for the demo. For reference in future commands, I am using a key named ahana-presto and my key path of ~/.ssh/ahana-presto.pem. Be sure to update the commands to match your own key\u2019s name and location.", "Once complete, instructions for using the PrestoDB Sandbox EC2 are provided.", "You can view the running EC2 instance containing Presto from the web-based AWS EC2 Management Console. Make sure to note the public IPv4 address or the public IPv4 DNS address as this value will be required during the demo.", "We will use Amazon RDS for PostgreSQL and Amazon S3 as additional data sources for Presto. Included in the project files on GitHub is an AWS CloudFormation template, cloudformation/presto_ahana_demo.yaml. The template creates a single RDS for PostgreSQL instance in the default VPC and an encrypted Amazon S3 bucket.", "All the source code for this post is on GitHub. Use the following command to git clone a local copy of the project.", "To create the AWS CloudFormation stack from the template, cloudformation/rds_s3.yaml, execute the following aws cloudformation command. Make sure you change the DBAvailabilityZone parameter value (shown in bold) to match the AWS Availability Zone in which your Ahana PrestoDB Sandbox EC2 instance was created. In my case, us-east-1f.", "To ensure the RDS for PostgreSQL database instance can be accessed by Presto running on the Ahana PrestoDB Sandbox EC2, manually add the PrestoDB Sandbox EC2\u2019s Security Group to port 5432 within the database instance\u2019s VPC Security Group\u2019s Inbound rules. I have also added my own IP to port 5432, enabling me to connect to the RDS instance directly from my IDE using JDBC.", "The AWS CloudFormation stack\u2019s Outputs tab includes a set of values, including the JDBC connection string for the new RDS for PostgreSQL instance, JdbcConnString, and the Amazon S3 bucket\u2019s name, Bucket. All these values will be required during the demonstration.", "There are a few steps we need to take to properly prepare the PrestoDB Sandbox EC2 for our demonstration. First, use your PrestoDB Sandbox EC2 SSH key to scp the properties and sql directories to the Presto EC2 instance. First, you will need to set the EC2_ENDPOINT value (shown in bold) to your EC2\u2019s public IPv4 address or public IPv4 DNS value. You can hardcode the value or use the aws ec2 API command is shown below to retrieve the value programmatically.", "Next, we need to set several environment variables. First, replace the DATA_BUCKET and POSTGRES_HOST values below (shown in bold) to match your environment. The PGPASSWORD value should be correct unless you changed it in the CloudFormation template. Then, execute the command to add the variables to your .bash_profile file.", "Optionally, I suggest updating the EC2 instance with available updates and install your favorite tools, likehtop, to monitor the EC2 performance.", "Before further configuration for the demonstration, let\u2019s review a few aspects of the Ahana PrestoDB EC2 instance. Several applications are pre-installed on the Ahana instance, including Java, Presto, Hadoop, PostgreSQL, and Hive. Versions shown are current as of early September 2020.", "The Presto configuration files are in the /etc/presto/ directory. The Hive configuration files are in the ~/hive/conf/ directory. Here are a few commands you can use to gain a better understanding of their configurations.", "To configure Presto, we need to create and copy a new Presto postgresql catalog properties file for the newly created RDS for PostgreSQL instance. Modify the properties/rds_postgresql.properties file, replacing the value, connection-url (shown in bold), with your own JDBC connection string, shown in the CloudFormation Outputs tab.", "Move the rds_postgresql.properties file to its correct location using sudo.", "We also need to modify the existing Hive catalog properties file, which will allow us to write to non-managed Hive tables from Presto.", "The following command will overwrite the existing hive.properties file with the modified version containing the new property.", "To finalize the configuration of the catalog properties files, we need to restart Presto. The easiest way is to reboot the EC2 instance, then SSH back into the instance. Since our environment variables are in the .bash_profile file, they will survive a restart and logging back into the EC2 instance.", "We will use RDS for PostgreSQL and Apache Hive Metastore/Amazon S3 as additional data sources for our federated queries. The Ahana PrestoDB Sandbox instance comes pre-configured with Apache Hive and an Apache Hive Metastore, backed by PostgreSQL (a separate PostgreSQL 9.x instance pre-installed on the EC2).", "The Sandbox\u2019s instance of Presto comes pre-configured with schemas for the TPC Benchmark DS (TPC-DS). We will create identical tables in our Apache Hive Metastore, which correspond to three external tables in the TPC-DS data source\u2019s sf1 schema: tpcds.sf1.customer, tpcds.sf1.customer_address, and tpcds.sf1.customer_demographics. A Hive external table describes the metadata/schema on external files. External table files can be accessed and managed by processes outside of Hive. As an example, here is the SQL statement that creates the external customer table in the Hive Metastore and whose data will be stored in the S3 bucket.", "The threeCREATE EXTERNAL TABLE SQL statements are included in the sql/ directory: sql/hive_customer.sql, sql/hive_customer_address.sql, and sql/hive_customer_demographics.sql. The bucket name (shown in bold above), needs to be manually updated to your own bucket name in all three files before continuing.", "Next, run the following hive commands to create the external tables in the Hive Metastore within the existing default schema/database.", "To confirm the tables were created successfully, we could use a variety of hive commands.", "Alternatively, you can also create the external table interactively from within Hive, using the hive command to access the CLI. Copy and paste the contents of the SQL files to the hive CLI. To exit Hive use quit;.", "With the external tables created, we will now select all the data from each of the three tables in the TPC-DS data source and insert that data into the equivalent Hive tables. The physical data will be written to Amazon S3 as a highly-efficient, columnar storage format, SNAPPY-compressed Apache Parquet files. Execute the following commands. I will explain why the customer_address table statements are a bit different, next.", "Confirm the data has been loaded into the correct S3 bucket locations and is in Parquet-format using the AWS Management Console or AWS CLI. Rest assured, the Parquet-format data is SNAPPY-compressed even though the S3 console incorrectly displays Compression as None. You can easily confirm the compression codec with a utility like parquet-tools.", "The customer_address table is unique in that it has been partitioned by the ca_state column. Partitioned tables are created using the PARTITIONED BY clause.", "According to Apache Hive, a table can have one or more partition columns, and a separate data directory is created for each distinct value combination in the partition columns. Since the data for the Hive tables are stored in Amazon S3, which means that when the data is written to the customer_address table, it is automatically separated into different S3 key prefixes based on the state. The data is physically \u201cpartitioned\u201d.", "Whenever add new partitions in S3, we need to run the MSCK REPAIR TABLE command to add that table\u2019s new partitions to the Hive Metastore.", "In SQL, a predicate is a condition expression that evaluates to a Boolean value, either true or false. Defining the partitions aligned with the attributes that are frequently used in the conditions/filters (predicates) of the queries can significantly increase query efficiency. When we execute a query that uses an equality comparison condition, such as ca_state = 'TN', partitioning means the query will only work with a slice of the data in the corresponding ca_state=TN prefix key. There are 50,000 rows of data in the customer_address table, but only 1,418 rows (2.8% of the total data) in the ca_state=TN partition. With the additional advantage of Parquet format with SNAPPY compression, partitioning can significantly reduce query execution time.", "For the demonstration, we will also replicate the schema and data of the tpcds.sf1.customer_address table to the new PostgreSQL instance\u2019s shipping database.", "Like Hive and Presto, we can create the table programmatically from the command line or interactively; I prefer the programmatic approach. Use the following psql command, we can create the customer_address table in the public schema of the shipping database.", "Now, to insert the data into the new PostgreSQL table, run the following presto-cli command.", "To confirm that the data was imported properly, we can use a variety of commands.", "Alternatively, you could use the PostgreSQL client interactively by copying and pasting the contents of the sql/postgres_customer_address.sql file to the psql command prompt. To interact with PostgreSQL from the psql command prompt, use the following command.", "Use the \\dt command to list the PostgreSQL tables and the \\q command to exit the PostgreSQL client. We now have all the new data sources created and configured for Presto!", "Presto provides a web interface for monitoring and managing queries. The interface provides dashboard-like insights into the Presto Cluster and queries running on the cluster. The Presto UI is available on port 8080 using the public IPv4 address or the public IPv4 DNS.", "There are several ways to interact with Presto via the PrestoDB Sandbox. The post will demonstrate how to execute ad-hoc queries against Presto from an IDE using a JDBC connection and the Presto CLI. Other options include running queries against Presto from Java and Python applications, Tableau, or Apache Spark/PySpark.", "Below, we see a query being run against Presto from JetBrains PyCharm, using a Java Database Connectivity (JDBC) connection. The advantage of using an IDE like JetBrains is having a single visual interface, including all the project files, multiple JDBC configurations, output results, and the ability to run multiple ad hoc queries.", "Below, we see an example of configuring the Presto Data Source using the JDBC connection string, supplied in the CloudFormation stack Outputs tab.", "Make sure to download and use the latest Presto JDBC driver JAR.", "With JetBrains\u2019 IDEs, we can even limit the databases/schemas displayed by the Data Source. This is helpful when we have multiple Presto catalogs configured, but we are only interested in certain data sources.", "We can also run queries using the Presto CLI, three different ways. We can pass a SQL statement to the Presto CLI, pass a file containing a SQL statement to the Presto CLI, or work interactively from the Presto CLI. Below, we see a query being run interactively from the Presto CLI.", "As the query is running, we can observe the live Presto query statistics (not very user friendly in my terminal).", "And finally, the view the query results.", "The example queries used in the demonstration and included in the project were mainly extracted from the scholarly article, Why You Should Run TPC-DS: A Workload Analysis, available as a PDF on the tpc.org website. I have modified the SQL queries to work with Presto.", "In the first example, we will run the three versions of the same basic query statement. Version 1 of the query is not a federated query; it only queries a single data source. Version 2 of the query queries two different data sources. Finally, version 3 of the query queries three different data sources. Each of the three versions of the SQL statement should return the same results \u2014 93 rows of data.", "The first version of the query statement, sql/presto_query2.sql, is not a federated query. Each of the query\u2019s four tables (catalog_returns, date_dim, customer, and customer_address) reference the TPC-DS data source, which came pre-installed with the PrestoDB Sandbox. Note table references on lines 11\u201313 and 41\u201342 are all associated with the tpcds.sf1 schema.", "We will run each query non-interactively using the presto-cli. We will choose the sf1 (scale factor of 1) tpcds schema. According to Presto, every unit in the scale factor (sf1, sf10, sf100) corresponds to a gigabyte of data.", "Below, we see the query results in the presto-cli.", "Below, we see the first query running in Presto\u2019s web interface.", "Below, we see the first query\u2019s results detailed in Presto\u2019s web interface.", "In the second version of the query statement, sql/presto_query2_federated_v1.sql, two of the tables (catalog_returns and date_dim) reference the TPC-DS data source. The other two tables (customer and customer_address) now reference the Apache Hive Metastore for their schema and underlying data in Amazon S3. Note table references on lines 11 and 12, as opposed to lines 13, 41, and 42.", "Again, run the query using the presto-cli.", "Below, we see the second query\u2019s results detailed in Presto\u2019s web interface.", "Even though the data is in two separate and physically different data sources, we can easily query it as though it were all in the same place.", "In the third version of the query statement, sql/presto_query2_federated_v2.sql, two of the tables (catalog_returns and date_dim) reference the TPC-DS data source. One of the tables (hive.default.customer) references the Apache Hive Metastore. The underlying data is in Amazon S3. The fourth table (rds_postgresql.public.customer_address) references the new RDS for PostgreSQL database instance. Note table references on lines 11 and 12, and on lines 13 and 41, as opposed to line 42.", "Again, we have run the query using the presto-cli.", "Below, we see the third query\u2019s results detailed in Presto\u2019s web interface.", "Again, even though the data is in three separate and physically different data sources, we can easily query it as though it were all in the same place.", "The project contains several additional query statements, which I have extracted from Why You Should Run TPC-DS: A Workload Analysis and modified work with Presto and federate across multiple data sources.", "In this post, we gained a better understanding of Presto using Ahana\u2019s PrestoDB Sandbox product from AWS Marketplace. We learned how Presto queries data where it lives, including Apache Hive, Thrift, Kafka, Kudu, and Cassandra, Elasticsearch, MongoDB, etc. We also learned about Apache Hive and the Apache Hive Metastore, Apache Parquet file format, and how and why to partition Hive data in Amazon S3. Most importantly, we learned how to write federated queries that join multiple disparate data sources without moving the data into a single monolithic data store.", "This blog represents my own viewpoints and not of my employer, Amazon Web Services.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Principal Solutions Architect @ AWS | 10x AWS Certified Pro | Polyglot Developer | DataOps | DevOps | Technology consultant, writer, and speaker"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe8f06db95c29&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e8f06db95c29--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e8f06db95c29--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://garystafford.medium.com/?source=post_page-----e8f06db95c29--------------------------------", "anchor_text": ""}, {"url": "https://garystafford.medium.com/?source=post_page-----e8f06db95c29--------------------------------", "anchor_text": "Gary A. Stafford"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1c57fc47fc23&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&user=Gary+A.+Stafford&userId=1c57fc47fc23&source=post_page-1c57fc47fc23----e8f06db95c29---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe8f06db95c29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe8f06db95c29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://prestodb.io/", "anchor_text": "The Presto Foundation"}, {"url": "https://blog.openbridge.com/prestodb-vs-prestosql-the-new-presto-foundation-341405fb7ba3", "anchor_text": "confused with PrestoSQL"}, {"url": "https://code.facebook.com/projects/552007124892407/presto/", "anchor_text": "Facebook"}, {"url": "https://blog.twitter.com/engineering/en_us.html", "anchor_text": "Twitter"}, {"url": "https://eng.uber.com/", "anchor_text": "Uber"}, {"url": "https://medium.com/@alitech_2017", "anchor_text": "Alibaba"}, {"url": "https://medium.com/airbnb-engineering/airpal-a-web-based-query-execution-tool-for-data-analysis-33c43265ed1f", "anchor_text": "Airbnb"}, {"url": "https://medium.com/netflix-techblog/using-presto-in-our-big-data-platform-on-aws-938035909fd4", "anchor_text": "Netflix"}, {"url": "https://medium.com/@Pinterest_Engineering", "anchor_text": "Pinterest"}, {"url": "https://www.youtube.com/watch?v=0vdW1ORLWyk&feature=youtu.be&t=20m58s", "anchor_text": "Atlassian"}, {"url": "https://www.youtube.com/watch?v=LuHxnOQarXU&feature=youtu.be&t=25m13s", "anchor_text": "Nasdaq"}, {"url": "https://github.com/prestodb/presto/wiki/Presto-Users", "anchor_text": "more"}, {"url": "https://aws.amazon.com/emr/", "anchor_text": "Amazon EMR"}, {"url": "https://aws.amazon.com/athena/", "anchor_text": "Amazon Athena"}, {"url": "https://docs.aws.amazon.com/athena/latest/ug/presto-functions.html", "anchor_text": "Presto 0.172"}, {"url": "https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-presto-considerations.html", "anchor_text": "does not support"}, {"url": "https://docs.aws.amazon.com/athena/latest/ug/DocHistory.html", "anchor_text": "features"}, {"url": "https://aws.amazon.com/marketplace/pp/B08FXMYH46", "anchor_text": "commercial support"}, {"url": "https://aws.amazon.com/marketplace/seller-profile?id=0ea9f5a4-ef6c-4adf-a191-b63970d83b15", "anchor_text": "Ahana"}, {"url": "https://aws.amazon.com/marketplace/seller-profile?id=9e5ffcd6-ef2d-4e1e-896c-69108f80b954", "anchor_text": "Starburst"}, {"url": "https://aws.amazon.com/blogs/big-data/query-any-data-source-with-amazon-athenas-new-federated-query/", "anchor_text": "AWS"}, {"url": "https://hive.apache.org/", "anchor_text": "Apache Hive"}, {"url": "https://thrift.apache.org/", "anchor_text": "Thrift"}, {"url": "https://kafka.apache.org/", "anchor_text": "Kafka"}, {"url": "https://kudu.apache.org/", "anchor_text": "Kudu"}, {"url": "https://cassandra.apache.org/", "anchor_text": "Cassandra"}, {"url": "https://www.elastic.co/home", "anchor_text": "Elasticsearch"}, {"url": "https://www.mongodb.com/", "anchor_text": "MongoDB"}, {"url": "https://prestodb.io/docs/current/connector.html", "anchor_text": "data source connectors"}, {"url": "https://ahana.io/", "anchor_text": "Ahana"}, {"url": "https://www.globenewswire.com/news-release/2020/06/02/2042090/0/en/Ahana-Raises-2-25-Million-Seed-Funding-Led-by-GV-and-Joins-Linux-Foundation-s-Presto-Foundation.html", "anchor_text": "raising seed funding"}, {"url": "https://www.gv.com/", "anchor_text": "GV"}, {"url": "https://ahana.io/about/", "anchor_text": "founders"}, {"url": "https://aws.amazon.com/marketplace/pp/B08C21CGF6", "anchor_text": "PrestoDB Sandbox"}, {"url": "https://prestodb.io/docs/current/overview/concepts.html#server-types", "anchor_text": "Coordinator"}, {"url": "https://prestodb.io/docs/current/overview/concepts.html#server-types", "anchor_text": "Worker"}, {"url": "https://hive.apache.org/", "anchor_text": "Apache Hive"}, {"url": "https://www.postgresql.org/", "anchor_text": "PostgreSQL"}, {"url": "http://www.tpc.org/tpcds/", "anchor_text": "TPC Benchmark DS"}, {"url": "http://www.tpc.org/tpch/", "anchor_text": "TPC Benchmark H"}, {"url": "https://cwiki.apache.org/confluence/display/Hive/Home", "anchor_text": "Apache Hive"}, {"url": "https://cwiki.apache.org/confluence/display/Hive/Design#Design-Metastore", "anchor_text": "Metastore"}, {"url": "https://www.postgresql.org/", "anchor_text": "PostgreSQL"}, {"url": "https://aws.amazon.com/marketplace/pp/B08C21CGF6", "anchor_text": "Ahana\u2019s PrestoDB Sandbox"}, {"url": "https://aws.amazon.com/ec2/pricing/on-demand/", "anchor_text": "current pricing"}, {"url": "https://console.aws.amazon.com/iam/home?region=us-east-1#/policies/arn:aws:iam::aws:policy/AmazonS3FullAccess$jsonEditor", "anchor_text": "AmazonS3FullAccess"}, {"url": "https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html", "anchor_text": "key pair"}, {"url": "https://aws.amazon.com/rds/postgresql/", "anchor_text": "Amazon RDS for PostgreSQL"}, {"url": "https://aws.amazon.com/s3/", "anchor_text": "Amazon S3"}, {"url": "https://aws.amazon.com/cloudformation", "anchor_text": "AWS CloudFormation"}, {"url": "https://github.com/garystafford/presto-aws-federated-queries", "anchor_text": "GitHub"}, {"url": "https://github.com/garystafford/presto-aws-federated-queries.git", "anchor_text": "https://github.com/garystafford/presto-aws-federated-queries.git"}, {"url": "https://prestodb.io/docs/current/connector/postgresql.html", "anchor_text": "catalog properties file"}, {"url": "http://www.tpc.org/tpcds/", "anchor_text": "TPC Benchmark DS"}, {"url": "https://cwiki.apache.org/confluence/display/Hive/Managed+vs.+External+Tables", "anchor_text": "external table"}, {"url": "http://google.github.io/snappy/", "anchor_text": "SNAPPY"}, {"url": "https://parquet.apache.org/", "anchor_text": "Apache Parquet"}, {"url": "https://github.com/apache/parquet-mr/tree/master/parquet-tools", "anchor_text": "parquet-tools"}, {"url": "https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-PartitionedTables", "anchor_text": "Partitioned tables"}, {"url": "https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL#LanguageManualDDL-PartitionedTables", "anchor_text": "Apache Hive"}, {"url": "https://docs.intersystems.com/irislatest/csp/docbook/Doc.View.cls?KEY=RSQL_predicates", "anchor_text": "predicate"}, {"url": "https://prestodb.io/docs/current/installation/jdbc.html", "anchor_text": "JDBC"}, {"url": "https://prestodb.io/docs/current/installation/cli.html", "anchor_text": "Presto CLI"}, {"url": "https://prestodb.io/docs/current/installation/tableau.html", "anchor_text": "Tableau"}, {"url": "https://prestodb.io/docs/current/installation/spark.html", "anchor_text": "Apache Spark/PySpark"}, {"url": "https://www.jetbrains.com/pycharm/", "anchor_text": "JetBrains PyCharm"}, {"url": "https://prestodb.io/download.html", "anchor_text": "download"}, {"url": "http://www.tpc.org/tpcds/presentations/tpcds_workload_analysis.pdf", "anchor_text": "Why You Should Run TPC-DS: A Workload Analysis"}, {"url": "http://www.tpc.org/", "anchor_text": "tpc.org"}, {"url": "https://prestodb.io/docs/current/connector/tpcds.html", "anchor_text": "Presto"}, {"url": "http://www.tpc.org/tpcds/presentations/tpcds_workload_analysis.pdf", "anchor_text": "Why You Should Run TPC-DS: A Workload Analysis"}, {"url": "https://aws.amazon.com/marketplace/pp/Ahana-PrestoDB-Sandbox-for-learning-free-open-sour/B08C21CGF6", "anchor_text": "PrestoDB Sandbox"}, {"url": "https://medium.com/tag/presto?source=post_page-----e8f06db95c29---------------presto-----------------", "anchor_text": "Presto"}, {"url": "https://medium.com/tag/prestodb?source=post_page-----e8f06db95c29---------------prestodb-----------------", "anchor_text": "Prestodb"}, {"url": "https://medium.com/tag/data-analytics?source=post_page-----e8f06db95c29---------------data_analytics-----------------", "anchor_text": "Data Analytics"}, {"url": "https://medium.com/tag/data?source=post_page-----e8f06db95c29---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/tag/aws?source=post_page-----e8f06db95c29---------------aws-----------------", "anchor_text": "AWS"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe8f06db95c29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&user=Gary+A.+Stafford&userId=1c57fc47fc23&source=-----e8f06db95c29---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe8f06db95c29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&user=Gary+A.+Stafford&userId=1c57fc47fc23&source=-----e8f06db95c29---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe8f06db95c29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e8f06db95c29--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe8f06db95c29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e8f06db95c29---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e8f06db95c29--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e8f06db95c29--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e8f06db95c29--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e8f06db95c29--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e8f06db95c29--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e8f06db95c29--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e8f06db95c29--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e8f06db95c29--------------------------------", "anchor_text": ""}, {"url": "https://garystafford.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://garystafford.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Gary A. Stafford"}, {"url": "https://garystafford.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3.7K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1c57fc47fc23&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&user=Gary+A.+Stafford&userId=1c57fc47fc23&source=post_page-1c57fc47fc23--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F558bb209b64a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpresto-federated-queries-e8f06db95c29&newsletterV3=1c57fc47fc23&newsletterV3Id=558bb209b64a&user=Gary+A.+Stafford&userId=1c57fc47fc23&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}