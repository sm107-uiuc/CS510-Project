{"url": "https://towardsdatascience.com/using-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d", "time": 1683016128.684157, "path": "towardsdatascience.com/using-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d/", "webpage": {"metadata": {"title": "Using TFRecords to Train a CNN on MNIST | by Pascal Janetzky | Towards Data Science", "h1": "Using TFRecords to Train a CNN on MNIST", "description": "When I started with TFRecords, it took me a while to understand its concept. There were so many new things. To save others from this hassle, I have created a hands-on walkthrough based on the MNIST\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/training-a-neural-network-on-tfrecord-files-8bff3b6e9ff4", "anchor_text": "a more general version", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/a-practical-guide-to-tfrecords-584536bc786c", "anchor_text": "hands-on introduction to it", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/training-a-neural-network-on-tfrecord-files-8bff3b6e9ff4", "anchor_text": "a more general version", "paragraph_index": 39}, {"url": "https://towardsdatascience.com/a-practical-guide-to-tfrecords-584536bc786c", "anchor_text": "hands-on introduction to it", "paragraph_index": 39}, {"url": "https://colab.research.google.com/drive/19Ms8CwvTardmte9fk_jBWdBEZB8j5NP_?usp=sharing", "anchor_text": "here", "paragraph_index": 40}, {"url": "https://colab.research.google.com/drive/1yQRDYzJsHX8w5g042w02y0lm1S3vMscL?usp=sharing", "anchor_text": "this code", "paragraph_index": 41}, {"url": "http://pascaljanetzky.com", "anchor_text": "pascaljanetzky.com", "paragraph_index": 43}], "all_paragraphs": ["When I started with TFRecords, it took me a while to understand its concept. There were so many new things. To save others from this hassle, I have created a hands-on walkthrough based on the MNIST dataset.", "Note: this blog post is now available in a more general version which includes more up-to-date concepts. Further, also note that the TFRecord format is not that hard once you\u2019ve got started, which is why I\u2019ve created a hands-on introduction to it. To learn more, after this tutorial I recommend you to consult these two resources.", "The MNIST dataset consists of digitized handwritten digits in black and white. With 28x28x1 per image, they are pretty small. The memory footprint of the complete dataset is only 32 MB.", "Let us start with the necessary imports; two libraries, os and Tensorflow. Additionally, we set a global variable, AUTOTUNE, which we use later.", "First, we download the MNIST dataset to our local machine. Then, we set two options to True, shuffle_files and as_supervised.", "The first option is used when we create our TFRecord dataset; the second option allows slightly more comfortable iterating.", "We can also check how much example each split holds by calling .cardinality().", "The following four functions improve the readability and are used to create the single examples we write into the TFrecord files.", "Next, we go over all splits (here, only \u201ctrain\u201d and \u201ctest\u201d).", "For each split, we create a TFRecordWriter, which writes the parsed examples to file. Note that we add the currently processed split to the filename \u2014 this allows us to glob the files by a string pattern later. The additional index we use is for counting how many samples we wrote to disk. This little trick is helpful for custom datasets, where the .cardinality() operation won\u2019t return the number of elements.", "Since we set as_supervised earlier, we can now iterate over the (example, label) pairs.", "The primary example generation happens during the creation of the temporary dictionary data. First, we transform each data field we want to use later to a tf.train.Feature. For the height and the width of our images, we use an _int64_feature (since these numbers are integers); for the actual image data, we first serialize the array, then transform it into a bytes_list. This conversion is required for storing non-scalar data.", "With all our features defined, we can now create a single Example and write it to the TFRecord file.", "We proceed until all examples of the current split are processed, then we repeat the process with the following subset.", "After both subsets are processed, we have created our first two TFRecord files (yeah!), one holding the training and one holding the test data. The index we incremented for each record per subset is useful when training the model:", "For datasets shipped with tensorflow_datasets, you query the cardinality, that is, the number of examples, by simply calling .cardinality(). This won\u2019t report the actual size for custom datasets like ours but returns -1, meaning that the number of examples is unknown.", "However, when training on such a dataset, we have to know how many batches our dataset can deliver. Else, we could run in an infinite loop; see further below for clarification.", "Short recap until here: We used the MNIST dataset and wrote all examples to TFRecord files.", "After creation, we want to read them back into memory. This process is similar to the above, but in reverse:", "We create a function that reads the examples from the TFRecord file. Herein we create a dictionary with all the fields we want to use from the example; the dictionary is similar to the one we used to write our data. For each key, we define a placeholder. Note the last field: It is of type tf.string (even though we stored it as a bytes list); all other fields are initialized with the same type as before.", "With our dictionary ready, we can extract our examples from the TFRecord file. Lastly, we obtain the original image data. Note that we set uint8 as the datatype. If our image contained floats, we would set float64 as the datatype. Since the MNIST data is scaled between 0 and 255, we are okay with integers:", "With the following function, we create a dataset around our TFRecord files. Previously, we only have defined a function to get us a single example; now we create a TFRecordDataset to map all examples to this function.", "We do this in the middle statement. Here, we use the AUTOTUNE optimizer we created above. During training, later on, it automatically determines how many examples we can process in parallel. This can reduce GPU idle times.", "Afterward, we shuffle our data, set a batch size, and set repeat with no argument; this means repeating it endlessly. This requires us to remember how many examples our dataset has (as written above).", "[As a hacky alternative, we can here set repeat to the number of epochs we want to train later on, and set the number of epochs in the fit()-function to 1. This makes the dataset parse \u201cepoch\u201d times through our network (because we set repeat() with the number of epochs), but only once (because we set fit() with epochs=1).]", "Last, we let the AUTOTUNE optimizer determine the most appropriate number of examples to prefetch.", "Until now, we have only created a dataset and mapped a data-generating function to it. As a sanity check, let\u2019s look at one sample the dataset gives us.", "It returns two Tensors. The first Tensor is of shape (32, 28, 28, 1) (because we took one batch, and the batch size is 32), the second Tensor is of shape (32,) (since we have 32 labels, one per example in our batch).", "We created two TFRecord files, one for the training data, one for the test data. We did this by iterating over all (image, label) pairs in the original MNIST dataset, transforming them to a tf.train.Feature. All features together form an example. We then created a function that reverses this; it pulls the features from the examples stored in a TFRecord file. Finally, we mapped the function to our dataset and did a sanity check to see if all works correctly.", "Our next step is training a network on our TFRecordDataset.", "We use a simple Convolutional Neural Network; feel free to experiment with different architectures.", "To maintain readability, we write a function that returns our network and check in the model\u2019s summary if our output layer fits the label shape,", "and then fit the network on our train dataset. We set the number of epochs (the number of times the network sees the complete dataset) to 2.", "Now, we need to know how many examples our train dataset holds. Since we set the dataset to repeat infinitely, we need to tell the network how many batches to query until one epoch is done; this is the parameter steps_per_epoch:", "After training is completed, which takes around 30 seconds on Colab with GPUs enabled, we will test the model. Since we also wrote our test data to TFRecord files, we can quickly create another TFRecordDataset from these files, using our get_dataset() function.", "Since we set the second parameter in the function call to \u201ctest\u201d, our dataset won\u2019t repeat; we don\u2019t need to determine the number of steps.", "We then call model.evaluate(), which returns an array of two values.", "The first number is the loss; the second number is the one we are interested in: the accuracy. After only two epochs, it hovers around 95%, a good start.", "We focused on the MNIST dataset as our ongoing example. With it, we created two TFRecord files, one for the training data and one for the testing data. Next, we covered reading the data back into memory to finally train a CNN.", "This blog post is now available in a more general version which includes more up-to-date concepts. Further, also note that the TFRecord format is not that hard once you\u2019ve got started, which is why I\u2019ve created a hands-on introduction to it. To learn more, after this tutorial I recommend you to consult these two resources.", "A Colab notebook covering the whole process is available here.", "This post covered TFRecords in the context of an existing dataset. If you are interested in seeing this file format used for a custom dataset, have a look at this code", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I aim to read, code, and move. pascaljanetzky.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Faec141d65e3d&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----aec141d65e3d--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----aec141d65e3d--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://pascaljanetzky.medium.com/?source=post_page-----aec141d65e3d--------------------------------", "anchor_text": ""}, {"url": "https://pascaljanetzky.medium.com/?source=post_page-----aec141d65e3d--------------------------------", "anchor_text": "Pascal Janetzky"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F672b95fdf976&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&user=Pascal+Janetzky&userId=672b95fdf976&source=post_page-672b95fdf976----aec141d65e3d---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Faec141d65e3d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Faec141d65e3d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/training-a-neural-network-on-tfrecord-files-8bff3b6e9ff4", "anchor_text": "a more general version"}, {"url": "https://towardsdatascience.com/a-practical-guide-to-tfrecords-584536bc786c", "anchor_text": "hands-on introduction to it"}, {"url": "https://commons.wikimedia.org/wiki/File:MnistExamples.png", "anchor_text": "Josef Steppan"}, {"url": "https://towardsdatascience.com/training-a-neural-network-on-tfrecord-files-8bff3b6e9ff4", "anchor_text": "a more general version"}, {"url": "https://towardsdatascience.com/a-practical-guide-to-tfrecords-584536bc786c", "anchor_text": "hands-on introduction to it"}, {"url": "https://colab.research.google.com/drive/19Ms8CwvTardmte9fk_jBWdBEZB8j5NP_?usp=sharing", "anchor_text": "here"}, {"url": "https://colab.research.google.com/drive/1yQRDYzJsHX8w5g042w02y0lm1S3vMscL?usp=sharing", "anchor_text": "this code"}, {"url": "https://colab.research.google.com/drive/1yQRDYzJsHX8w5g042w02y0lm1S3vMscL?usp=sharing", "anchor_text": "Google ColaboratoryCreating a custom TFR datasetcolab.research.google.com"}, {"url": "https://towardsdatascience.com/custom-audio-classification-with-tensorflow-af8c16c38689", "anchor_text": "Custom Audio Classification with TensorFlowAn end-to-end example project with code.towardsdatascience.com"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----aec141d65e3d---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----aec141d65e3d---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/tfrecord?source=post_page-----aec141d65e3d---------------tfrecord-----------------", "anchor_text": "Tfrecord"}, {"url": "https://medium.com/tag/mnist?source=post_page-----aec141d65e3d---------------mnist-----------------", "anchor_text": "Mnist"}, {"url": "https://medium.com/tag/tensorflow?source=post_page-----aec141d65e3d---------------tensorflow-----------------", "anchor_text": "TensorFlow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Faec141d65e3d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&user=Pascal+Janetzky&userId=672b95fdf976&source=-----aec141d65e3d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Faec141d65e3d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&user=Pascal+Janetzky&userId=672b95fdf976&source=-----aec141d65e3d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Faec141d65e3d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----aec141d65e3d--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Faec141d65e3d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----aec141d65e3d---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----aec141d65e3d--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----aec141d65e3d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----aec141d65e3d--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----aec141d65e3d--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----aec141d65e3d--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----aec141d65e3d--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----aec141d65e3d--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----aec141d65e3d--------------------------------", "anchor_text": ""}, {"url": "https://pascaljanetzky.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://pascaljanetzky.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Pascal Janetzky"}, {"url": "https://pascaljanetzky.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "415 Followers"}, {"url": "http://pascaljanetzky.com", "anchor_text": "pascaljanetzky.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F672b95fdf976&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&user=Pascal+Janetzky&userId=672b95fdf976&source=post_page-672b95fdf976--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F5c2eecc2a7ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-tfrecords-to-train-a-cnn-on-mnist-aec141d65e3d&newsletterV3=672b95fdf976&newsletterV3Id=5c2eecc2a7ed&user=Pascal+Janetzky&userId=672b95fdf976&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}