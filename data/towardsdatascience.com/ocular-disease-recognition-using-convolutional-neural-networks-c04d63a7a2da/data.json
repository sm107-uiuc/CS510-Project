{"url": "https://towardsdatascience.com/ocular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da", "time": 1683011946.522042, "path": "towardsdatascience.com/ocular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da/", "webpage": {"metadata": {"title": "Ocular Disease Recognition Using Convolutional Neural Networks | by Grzegorz Meller | Towards Data Science", "h1": "Ocular Disease Recognition Using Convolutional Neural Networks", "description": "This project is part of the Algorithms for Massive Data course organized by the University of Milan, that I recently had the chance to attend. The task is to develop the Deep Learning model able to\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/GrzegorzMeller/AlgorithmsForMassiveData", "anchor_text": "https://github.com/GrzegorzMeller/AlgorithmsForMassiveData", "paragraph_index": 0}, {"url": "http://twitter.com/GrzesiekMeller", "anchor_text": "twitter.com/GrzesiekMeller", "paragraph_index": 26}], "all_paragraphs": ["This project is part of the Algorithms for Massive Data course organized by the University of Milan, that I recently had the chance to attend. The task is to develop the Deep Learning model able to recognize eye diseases, from eye-fundus images using the TensorFlow library. An important requirement is to make the training process scalable, so create a data pipeline able to handle massive amounts of data points. In this article, I summarize my findings on convolutional neural networks and methods of building efficient data pipelines using the Tensorflow dataset object. Entire code with reproducible experiments is available on my Github repository: https://github.com/GrzegorzMeller/AlgorithmsForMassiveData", "Early ocular disease detection is an economic and effective way to prevent blindness caused by diabetes, glaucoma, cataract, age-related macular degeneration (AMD), and many other diseases. According to World Health Organization (WHO) at present, at least 2.2 billion people around the world have vision impairments, of whom at least 1 billion have a vision impairment that could have been prevented[1]. Rapid and automatic detection of diseases is critical and urgent in reducing the ophthalmologist\u2019s workload and prevents vision damage of patients. Computer vision and deep learning can automatically detect ocular diseases after providing high-quality medical eye fundus images. In this article, I show different experiments and approaches towards building an advanced classification model using convolutional neural networks written using the TensorFlow library.", "Ocular Disease Intelligent Recognition (ODIR) is a structured ophthalmic database of 5,000 patients with age, color fundus photographs from left and right eyes, and doctors\u2019 diagnostic keywords from doctors. This dataset is meant to represent the \u2018\u2018real-life\u2019\u2019 set of patient information collected by Shanggong Medical Technology Co., Ltd. from different hospitals/medical centers in China. In these institutions, fundus images are captured by various cameras in the market, such as Canon, Zeiss, and Kowa, resulting in varied image resolutions. Annotations were labeled by trained human readers with quality control management[2]. They classify patients into eight labels including normal (N), diabetes (D), glaucoma (G), cataract (C), AMD (A), hypertension (H), myopia (M), and other diseases/abnormalities (O).", "After preliminary data exploration I found the following main challenges of the ODIR dataset:", "\u00b7 Highly unbalanced data. Most images are classified as normal (1140 examples), while specific diseases like for example hypertension have only 100 occurrences in the dataset.", "\u00b7 The dataset contains multi-label diseases because each eye can have not only one single disease but also a combination of many.", "\u00b7 Images labeled as \u201cother diseases/abnormalities\u201d (O) contain images associated to more than 10 different diseases stretching the variability to a greater extent.", "All these issues take a significant toll on accuracy and other metrics.", "Firstly, all images are resized. In the beginning, I wanted to resize images \u201con the fly\u201d, using TensorFlow dataset object. Images were resized while training the model. I thought it could prevent time-consuming images resizing at once. Unfortunately, it was not a good decision, execution of one epoch could take even 15 minutes, so I created another function to resize images before creating the TensorFlow dataset object. As a result, data are resized only once and saved to a different directory, thus I could experiment with different training approaches using much faster training execution. Initially, all images were resized to 32x32 pixels size, but quickly I realized that compressing to such a low size, even though it speeds up the training process significantly, loses a lot of important image information, thus accuracy was very low. After several experiments I found that size of 250x250 pixels was the best in terms of compromising training speed and accuracy metrics, thus I kept this size on all images for all further experiments.", "Secondly, images are labeled. There is a problem with images annotations in the data.csv file because the labels relate to both eyes (left and right) at once whereas each eye can have a different disease. For example, if the left eye has a cataract and right eye has normal fundus, the label would be a cataract, not indicating a diagnosis of the right eye. Fortunately, the diagnostic keywords relate to a single eye. Dataset was created in a way to provide to the model as input both left and right eye images and return overall (for both eyes) cumulated diagnosis, neglecting the fact that one eye can be healthy. In my opinion, it does not make sense from a perspective of a final user of such a model, and it is better to get predictions separately for each eye, to know for example which eye should be treated. So, I enriched the dataset by creating a mapping between the diagnostic keywords to disease labels. This way, each eye is assigned to a proper label. Fragment of this mapping, in the form of a dictionary, is presented in the Fig. 1. Label information is added by renaming image names, and more specifically, by adding to the image file name one or more letters corresponding to the specific diseases. I applied this solution because this way I do not need to store any additional data frame with all labels. Renaming files is a very fast operation and in the official TensorFlow documentation, TensorFlow datasets are created simply from files, and label information is retrieved from the file name[3]. Moreover, some images that had annotations not related to the specific disease itself, but to the low quality of the image, like \u201clens dust\u201d or \u201coptic disk photographically invisible\u201d are removed from the dataset as they do not play a decisive role in determining patient\u2019s disease.", "Thirdly, the validation set is created by randomly selecting 30% of all available images. I chose 30% because this dataset is relatively small (only 7000 images in total), but I wanted to make my validation representative enough, not to have a bias when evaluating model, related to the fact, that many image variants or classes could not have their representation in the validation set. The ODIR dataset provides testing images, but unfortunately, no labeling information is provided to them in the data.csv file, thus I could not use available testing images to evaluate the model.", "Next, data augmentation on minority classes was applied on the training set to balance the dataset. Random zoom, random rotation, flip left-right, flip top-bottom were applied. In the beginning, I used the TensorFlow dataset object for applying data augmentation \u201con the fly\u201d while training the model[4] in order to keep my solution as scalable as possible. Unfortunately, it lacks many features like random rotation, therefore I performed data augmentation before creating the TensorFlow dataset object using other libraries for image processing like OpenCV. In the beginning, I also considered enhancing all images by applying contrast-limited adaptive histogram equalization (CLAHE) in order to increase the visibility of local details of an image, but since it was adding a lot of extra noise to the images (especially to the background, which originally is black) I decided not to follow that direction. Examples of data augmentation using my function written using PIL and OpenCV libraries is presented in Fig. 2.", "Finally, the TensorFlow dataset object is created. It is developed very similarly to the one presented in official TensorFlow documentation for loading images[5]. Since the library is complicated, and not easy to use for TensorFlow beginners, I would like to share here a summary of my findings on building scalable and fast input pipelines. The tf.data API enables you to build complex input pipelines from simple, reusable pieces. For example, the pipeline for an image model might aggregate data from files in a distributed file system. The tf.data API introduces a tf.data.Dataset abstraction that represents a sequence of elements, in which each element consists of one or more components. For example, in my image pipeline, an element is a single training example, with a pair of tensor components representing the image and its label[6]. With the idea of creating mini-batches, TensorFlow introduces the so-called iterative learning process which is feeding to the model some portion of data (not entire dataset), training, and repeating with another portion, which are called batches. Batch size defines how many examples will be extracted at each training step. After each step, weights are updated. I selected batch size equal to 32, in order to avoid the overfitting problem. With small batch size, weights keep updating regularly and often. The downside of having a small batch size is that training takes much longer than with the bigger size. One important element of tf.data is the ability of the shuffling dataset. In shuffling, the dataset fills a buffer with elements, then randomly samples elements from this buffer, replacing the selected elements with new elements[7]. It prevents situations when images of the same class will be repetitively filled to the batch, which is not beneficial for training the model.", "In deep learning, a convolutional neural network (CNN) is a class of deep neural networks, most commonly applied to analyzing visual imagery[8]. Input layer takes 250x250 RGB images. The first 2D convolution layer shifts over the input image using a window of the size of 5x5 pixels to extract features and save them on a multi-dimensional array, in my example number of filters for the first layer equals 32, so to (250, 250, 32) size cube.", "After each convolution layer, a rectified linear activation function (ReLU) is applied. Activation has the authority to decide if neuron needs to be activated or not measuring the weighted sum. ReLU returns the value provided as input directly, or the value 0.0 if the input is 0.0 or less. Because rectified linear units are nearly linear, they preserve many of the properties that make linear models easy to optimize with gradient-based methods. They also preserve many of the properties that make the linear model generalize well[9].", "To progressively reduce the spatial size of the input representation and minimize the number of parameters and computation in the network max-pooling layer is added. In short, for each region represented by the filter of a specific size, in my example it is (5, 5), it will take the max value of that region and create a new output matrix where each element is the max of the region in the original input.", "To avoid overfitting problems, two dropouts of 45% layers were added. Several batch normalization layers were added to the model. Batch normalization is a technique for improving the speed, performance, and stability of artificial neural networks[10]. It shifts the distribution of neuron output, so it better fits the activation function.", "Finally, the \u201ccube\u201d is flattened. No fully connected layers are implemented to keep the simplicity of the network and keep training fast. The last layer is 8 dense because 8 is the number of labels (diseases) present in the dataset. Since we are facing multi-label classification (data sample can belong to multiple instances) sigmoid activation function is applied to the last layer. The sigmoid function converts each score to the final node between 0 to 1, independent of what other scores are (in contrast to other functions like, for example, softmax), that is why sigmoid works best for the multi-label classification problems. Since we are using the sigmoid activation function, we must go with the binary cross-entropy loss. The selected optimizer is Adam with a low learning rate of 0.0001 because of the overfitting problems that I was facing during the training. The entire architecture of my CNN is presented in Fig.3.", "For simplicity, I wanted to start my research with easy proof-of-concept experiments, on less challenging and smaller datasets, to test if all previous assumptions were correct. Thus, I started training a simple model to detect if an eye has normal fundus or cataract, training only on images labeled as N (normal) or C (cataract). The results were very satisfactory, using a relatively simple network in 12 epochs my model got 93% on validation accuracy. This already shows that using CNN it is possible to automatically detect eye cataracts! In each next experiment, I was adding to the dataset images of another class. The fourth experiment is performed on the entire ODIR dataset, achieving almost 50% validation accuracy. Results from the experiments are presented in Table 1. As we can clearly see the overall model has low results because it is hard to train it to detect diabetes correctly since the eye with diabetes looks almost the same as the eye with normal fundus. Detecting myopia or cataract is a much easier task because these images vary a lot from each other and from the normal fundus. Illustration of different selected diseases is presented in the Fig. 4.", "For all experiments, the same neural network architecture was used. The only difference is the number of epochs each experiment needed to get to the presented results (some needed to be early stopped, others needed more epochs to learn). Also, for experiments that did not include the entire dataset, softmax activation function, and categorical cross-entropy loss were used since they are multi-class, not multi-label classification problems.", "Nowadays, in the world of Big Data, it is crucial to evaluate every IT project, based on its scalability and reproducibility. From the beginning of the implementation of this project, I put a lot of emphasis on the idea, that even though it is a research project, maybe in the future with more data points of eye diseases the model could be re-trained, and certainly will achieve much better results having more images to train on. So, the main goal was to build a universal data pipeline that is able to handle many more datapoints. This goal was mostly achieved by using advanced TensorFlow library, especially with the dataset object, that supports ETL processes (Extract, Transform, Load) on large datasets. Unfortunately, some transformations were needed to be done before creating the TensorFlow dataset object, which are image resizing and augmenting minority classes. Maybe in the future, it will be possible to resize images \u201con the fly\u201d faster, and more augmentation functions would be added like random rotation, which was already mentioned before. But if we consider having more data points in the future, possibly it would not be necessary to perform any augmentations, as sufficiently enough image variations would be provided. From the perspective of other popular datasets used in deep learning projects, ODIR would be considered as a small one. That is the reason why data points had to be augmented and oversampled in order to achieve sensible results.", "In this project, I have proved that it is possible to detect various eye diseases using convolutional neural networks. The most satisfying result is detecting cataracts with 93% accuracy. Examining all the diseases at one time, gave significantly lower results. With the ODIR dataset providing all-important variations of a specific disease to the training model was not always possible, which affects the final metrics. Although, I am sure that having a bigger dataset, would increase the accuracy of predictions and finally automate the process of detecting ocular diseases.", "[9] Deep Learning, Ian Goodfellow, Yoshua Bengio, and Aaron Courville.", "[11] Source and Camera Independent Ophthalmic Disease Recognition from Fundus Image Using Neural Network. Md. Tariqul Islam, Sheikh Asif Imran, Asiful Arefeen, Mahmudul Hasan, Celia Shahnaz. Bangladesh University of Engineering and Technology.", "[12] The relationship between Fully Connected Layers and number of classes for the analysis of retinal images. Ajna Ram and Constantino Carlos Reyes-Aldasoro. University of London", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "UX Researcher. Founder of UX Mining. Building the best online platform for conducting moderated usability tests effectively. Twitter: twitter.com/GrzesiekMeller"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fc04d63a7a2da&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@grzesek98?source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@grzesek98?source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": "Grzegorz Meller"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8c2e0d240efd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&user=Grzegorz+Meller&userId=8c2e0d240efd&source=post_page-8c2e0d240efd----c04d63a7a2da---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc04d63a7a2da&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc04d63a7a2da&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/data-for-change", "anchor_text": "Data for Change"}, {"url": "https://unsplash.com/@kaleajerielle?utm_source=medium&utm_medium=referral", "anchor_text": "Kalea Jerielle"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/GrzegorzMeller/AlgorithmsForMassiveData", "anchor_text": "https://github.com/GrzegorzMeller/AlgorithmsForMassiveData"}, {"url": "https://www.who.int/publications-detail/world-report-on-vision", "anchor_text": "https://www.who.int/publications-detail/world-report-on-vision"}, {"url": "https://www.kaggle.com/andrewmvd/ocular-disease-recognition-odir5k", "anchor_text": "https://www.kaggle.com/andrewmvd/ocular-disease-recognition-odir5k"}, {"url": "https://www.tensorflow.org/tutorials/load_data/images", "anchor_text": "https://www.tensorflow.org/tutorials/load_data/images"}, {"url": "https://www.tensorflow.org/tutorials/images/data_augmentation", "anchor_text": "https://www.tensorflow.org/tutorials/images/data_augmentation"}, {"url": "https://www.tensorflow.org/tutorials/load_data/images", "anchor_text": "https://www.tensorflow.org/tutorials/load_data/images"}, {"url": "https://www.tensorflow.org/guide/data", "anchor_text": "https://www.tensorflow.org/guide/data"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/data/Dataset#shuffle", "anchor_text": "https://www.tensorflow.org/api_docs/python/tf/data/Dataset#shuffle"}, {"url": "https://en.wikipedia.org/wiki/Convolutional_neural_network", "anchor_text": "https://en.wikipedia.org/wiki/Convolutional_neural_network"}, {"url": "https://en.wikipedia.org/wiki/Batch_normalization", "anchor_text": "https://en.wikipedia.org/wiki/Batch_normalization"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----c04d63a7a2da---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/tensorflow?source=post_page-----c04d63a7a2da---------------tensorflow-----------------", "anchor_text": "TensorFlow"}, {"url": "https://medium.com/tag/convolutional-network?source=post_page-----c04d63a7a2da---------------convolutional_network-----------------", "anchor_text": "Convolutional Network"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----c04d63a7a2da---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/tag/data-for-change?source=post_page-----c04d63a7a2da---------------data_for_change-----------------", "anchor_text": "Data For Change"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc04d63a7a2da&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&user=Grzegorz+Meller&userId=8c2e0d240efd&source=-----c04d63a7a2da---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc04d63a7a2da&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&user=Grzegorz+Meller&userId=8c2e0d240efd&source=-----c04d63a7a2da---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc04d63a7a2da&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fc04d63a7a2da&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----c04d63a7a2da---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----c04d63a7a2da--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@grzesek98?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@grzesek98?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Grzegorz Meller"}, {"url": "https://medium.com/@grzesek98/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "18 Followers"}, {"url": "http://twitter.com/GrzesiekMeller", "anchor_text": "twitter.com/GrzesiekMeller"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8c2e0d240efd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&user=Grzegorz+Meller&userId=8c2e0d240efd&source=post_page-8c2e0d240efd--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F75ea73294d50&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Focular-disease-recognition-using-convolutional-neural-networks-c04d63a7a2da&newsletterV3=8c2e0d240efd&newsletterV3Id=75ea73294d50&user=Grzegorz+Meller&userId=8c2e0d240efd&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}