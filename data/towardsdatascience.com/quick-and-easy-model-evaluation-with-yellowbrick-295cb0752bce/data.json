{"url": "https://towardsdatascience.com/quick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce", "time": 1683004227.486144, "path": "towardsdatascience.com/quick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce/", "webpage": {"metadata": {"title": "Quick and easy model evaluation with Yellowbrick | by JR Kreiger | Towards Data Science", "h1": "Quick and easy model evaluation with Yellowbrick", "description": "Now and then I come across a Python package that has the potential to simplify a task that I do regularly. When this happens, I\u2019m always excited to try it out and, if it\u2019s awesome, share my new\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.scikit-yb.org/en/latest/index.html", "anchor_text": "Yellowbrick", "paragraph_index": 1}, {"url": "https://www.scikit-yb.org/en/latest/quickstart.html", "anchor_text": "check out the documentation", "paragraph_index": 1}, {"url": "https://archive.ics.uci.edu/ml/datasets/Wine", "anchor_text": "the UCI wine dataset", "paragraph_index": 5}, {"url": "https://www.scikit-yb.org/en/latest/quickstart.html", "anchor_text": "check out the documentation", "paragraph_index": 19}, {"url": "https://github.com/jrkreiger/random-forest-trees", "anchor_text": "a recent machine learning project", "paragraph_index": 21}, {"url": "https://github.com/jrkreiger/helpful-reviews", "anchor_text": "check out the relevant project on my GitHub", "paragraph_index": 22}, {"url": "https://www.scikit-yb.org/en/latest/index.html", "anchor_text": "Yellowbrick", "paragraph_index": 24}], "all_paragraphs": ["Now and then I come across a Python package that has the potential to simplify a task that I do regularly. When this happens, I\u2019m always excited to try it out and, if it\u2019s awesome, share my new knowledge.", "A couple of months ago, I was browsing Twitter when I saw a tweet about Yellowbrick, a package for model visualization. I tried it, liked it, and now incorporate it into my machine learning workflow. In this post, I\u2019ll show you a few examples of what it can do (and you can always go check out the documentation for yourself).", "Overall, I enjoy using Yellowbrick because it saves me time on some routine tasks. For instance, I have my own code for visualizing feature importances or producing a color-scaled confusion matrix that I copy from project to project, but Yellowbrick lets me quickly and easily produce an attractive plot in fewer lines of code.", "The downside to this easy implementation, of course, is that you don\u2019t have as much control over how the plot looks as you would if you coded it yourself. If the visualization is just for your benefit, fine; but if you need to manipulate the plot in any way, prepare to dig into the documentation. A fair trade, for sure, but just consider the end user of your plot before you begin so you don\u2019t have to do things twice (once in Yellowbrick, once in Matplotlib/Seaborn/etc.).", "Speaking of doing things twice, let\u2019s take a look at the same visualization routine in Yellowbrick v. Matplotlib.", "For this little case study, I\u2019m going to fit a Random Forest classifier to the UCI wine dataset, then use a barplot to visualize the importance of each feature for prediction. The dataset is smallish (178 rows, 13 columns), and the purpose of the classification is to predict which of three cultivars a wine contains based on various features.", "In the code above I grabbed the data using sklearn\u2019s built-in load_wine() class and split it into features (X) and target (y). Note that I took the extra step of converting X to a DataFrame and giving the columns nice capitalized names. This will make my life easier when it comes time to build the plots.", "Let\u2019s take a look at the Yellowbrick routine first. I\u2019ll instantiate a RandomForestClassifier() and a FeatureImportances() visualizer, then fit the visualizer and display the plot.", "And this is what you get:", "In four lines of code (not counting the import statements), I\u2019ve got a respectable looking feature importances plot. I can see at a glance that the proline is really important for identifying the cultivar, while malic acid and alkalinity of ash are not.", "Now let me show you what it would take to build the exact same plot by hand in Matplotlib. I\u2019ll start by fitting the RandomForestClassifier():", "Note that I instantiated the model with the same number of estimators and random state as the one above, so the feature importance values should be exactly the same.", "Here\u2019s the basic code I usually use when plotting feature importances:", "Notice that all the bars are the same color by default and the x-axis represents the actual feature importance values, which I like. Unfortunately, the bars are not sorted from widest to narrowest, which I would prefer. For example, looking at the current plot, I\u2019m having trouble telling if nonflavanoid phenols or magnesium is more important.", "Let\u2019s see what it would take to reproduce the Yellowbrick plot exactly in Matplotlib. First of all, I have to sort the features by importance. This is tricky because model.feature_importances_ just returns an array of values with no labels, ordered just as the features are ordered in the DataFrame. To sort them, I need to associate the values with the feature names, sort, then split them back up to pass to Matplotlib.", "A quick but crucial note: see how I sorted the feature importances in ascending order? That\u2019s because Matplotlib will plot them starting from the bottom of the plot. Take it from me, because I learned the hard way: if you want to display values in descending order (top-bottom), pass them to Matplotlib in ascending order.", "That\u2019s much easier to read! Now if I really wanted to duplicate the Yellowbrick plot in Matplotlib, I would also need to supply the colors and the x-tick labels, as well as remove the horizontal grid lines.", "In case you\u2019re wondering, it took me about an hour of tinkering to recreate the Yellowbrick plot in Matplotlib. This included sorting the bars from biggest to smallest, guessing the colors and struggling to get them in the right order, resetting the x-axis ticks and labels to the 100% scale, and removing the horizontal gridlines.", "Moral of the story: if a Yellowbrick plot will meet your needs, then it\u2019s a much quicker way to get there than via Matplotlib. Of course, you\u2019re never going to beat plain vanilla Matplotlib for granularity of control.", "There is plenty more you can do to visualize your machine learning models with Yellowbrick; be sure to check out the documentation. Here are just a few more quick examples:", "Example 1: A color-coded confusion matrix (using the same wine data and Random Forest model as above).", "And here\u2019s the code I used in a recent machine learning project to build something similar myself. Note that my function takes the true and predicted values, which I would have to calculate beforehand, while Yellowbrick gets its values from the .score() method.", "Example 2: A t-SNE plot to show how two classes of texts overlap. I won\u2019t go into detail about the data and model here, but you can check out the relevant project on my GitHub.", "I don\u2019t even know how hard this would be to do to in Matplotlib because I\u2019ve never tried. The result I got from Yellowbrick was enough to answer my question, and I was able to take that information and move on quickly.", "I hope you make time to experiment with Yellowbrick. I\u2019ve had fun and learned about some new model visualization techniques while using it, and I bet you will, too.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data scientist with a background in archaeology, museums, and libraries. On Twitter @j_re."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F295cb0752bce&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----295cb0752bce--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----295cb0752bce--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@jrkreiger?source=post_page-----295cb0752bce--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jrkreiger?source=post_page-----295cb0752bce--------------------------------", "anchor_text": "JR Kreiger"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F612d3a26f7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&user=JR+Kreiger&userId=612d3a26f7&source=post_page-612d3a26f7----295cb0752bce---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F295cb0752bce&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F295cb0752bce&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.scikit-yb.org/en/latest/index.html", "anchor_text": "Yellowbrick"}, {"url": "https://www.scikit-yb.org/en/latest/quickstart.html", "anchor_text": "check out the documentation"}, {"url": "https://scikit-learn.org/stable/", "anchor_text": "scikit-learn"}, {"url": "https://matplotlib.org/", "anchor_text": "Matplotlib"}, {"url": "https://archive.ics.uci.edu/ml/datasets/Wine", "anchor_text": "the UCI wine dataset"}, {"url": "https://www.scikit-yb.org/en/latest/quickstart.html", "anchor_text": "check out the documentation"}, {"url": "https://github.com/jrkreiger/random-forest-trees", "anchor_text": "a recent machine learning project"}, {"url": "https://github.com/jrkreiger/helpful-reviews", "anchor_text": "check out the relevant project on my GitHub"}, {"url": "https://www.scikit-yb.org/en/latest/index.html", "anchor_text": "Yellowbrick"}, {"url": "http://jrkreiger.net", "anchor_text": "jrkreiger.net"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----295cb0752bce---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/python?source=post_page-----295cb0752bce---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----295cb0752bce---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/tools?source=post_page-----295cb0752bce---------------tools-----------------", "anchor_text": "Tools"}, {"url": "https://medium.com/tag/review?source=post_page-----295cb0752bce---------------review-----------------", "anchor_text": "Review"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F295cb0752bce&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&user=JR+Kreiger&userId=612d3a26f7&source=-----295cb0752bce---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F295cb0752bce&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&user=JR+Kreiger&userId=612d3a26f7&source=-----295cb0752bce---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F295cb0752bce&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----295cb0752bce--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F295cb0752bce&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----295cb0752bce---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----295cb0752bce--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----295cb0752bce--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----295cb0752bce--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----295cb0752bce--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----295cb0752bce--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----295cb0752bce--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----295cb0752bce--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----295cb0752bce--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jrkreiger?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jrkreiger?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "JR Kreiger"}, {"url": "https://medium.com/@jrkreiger/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "146 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F612d3a26f7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&user=JR+Kreiger&userId=612d3a26f7&source=post_page-612d3a26f7--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F1ffcf7fdc01f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquick-and-easy-model-evaluation-with-yellowbrick-295cb0752bce&newsletterV3=612d3a26f7&newsletterV3Id=1ffcf7fdc01f&user=JR+Kreiger&userId=612d3a26f7&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}