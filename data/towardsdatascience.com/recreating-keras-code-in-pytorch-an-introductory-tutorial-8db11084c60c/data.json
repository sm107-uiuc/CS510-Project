{"url": "https://towardsdatascience.com/recreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c", "time": 1683014271.1582332, "path": "towardsdatascience.com/recreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c/", "webpage": {"metadata": {"title": "Recreating Keras code in PyTorch- an introductory tutorial | by Dr. Varshita Sher | Towards Data Science", "h1": "Recreating Keras code in PyTorch- an introductory tutorial", "description": "As an applied data scientist, nothing gives me more pleasure than quickly whipping up a functional neural network with as little as three lines of code! However, as I have begun to delve deeper into\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/beginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00", "anchor_text": "neural network with as little as three lines of code", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00", "anchor_text": "here", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00", "anchor_text": "post", "paragraph_index": 4}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00", "anchor_text": "here", "paragraph_index": 5}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-convolutional-neural-networks-using-tensorflow-s-keras-api-in-python-6e8035e28238", "anchor_text": "here", "paragraph_index": 5}, {"url": "https://github.com/V-Sher/pytorch_ANN_example", "anchor_text": "Github", "paragraph_index": 6}, {"url": "https://pytorch.org/docs/stable/nn.init.html", "anchor_text": "documentation", "paragraph_index": 26}, {"url": "https://pytorch.org/docs/stable/optim.html", "anchor_text": "documentation", "paragraph_index": 35}, {"url": "https://github.com/V-Sher/pytorch_ANN_example", "anchor_text": "Github", "paragraph_index": 41}, {"url": "https://podurama.com", "anchor_text": "https://podurama.com", "paragraph_index": 43}], "all_paragraphs": ["I love Keras, there I said it! However\u2026", "As an applied data scientist, nothing gives me more pleasure than quickly whipping up a functional neural network with as little as three lines of code! However, as I have begun to delve deeper into the dark web of neural nets, I would like to accept the fact that Pytorch does allow you a much larger control over the architecture of your network.", "Given that most of us are pretty comfortable with Keras (if not, see here for a warm intro to Keras), learning to create a similar network in Pytorch (whilst learning Pytorch basics) isn\u2019t challenging at all. Let\u2019s begin!", "Note: We will not be creating a replica of the Keras code as I would like to introduce more features and functionalities of PyTorch in this introductory tutorial!", "Here is the code snippet (from my previous post on neural networks in Keras) for creating the model architecture, compiling the model, and finally training the model. It is a loan assessment model that outputs whether a loan should be accepted or rejected.", "To summarize, we have built a network with three hidden layers, all of which are Dense. The activation functions for the three hidden layers are relu,reluand softmax, respectively. input_shape is a tuple (2,0) meaning we have two predictor features. Adam optimizer along with a learning rate lr = 0.0001 has been used to update network weights iteratively based on training data. The loss we will be monitoring on each iteration is sparse_categorical_crossentropy.The accuracy will be used to judge how good the network is. For training, we will be using 30 epochs along with a batch_size of 10. If the meaning of any of the aforementioned terms is unclear, please see here or here.", "Note: If you want to follow along this tutorial, check out the notebook on Github.", "To maintain some level of consistency with our earlier network built using Keras, I will be using the same dataset, i.e. a loan application dataset. This is how it looks like:", "After applying some preprocessing on the dataset, mainly for scaling all the input features (age and area) on a 0\u20131 scale and label encoding the outcome feature ( application_outcome), this is what we end up with:", "We will be using the torch.utils.data.Dataset class in PyTorch to define a Dataset object for the loan application dataset. We will be calling it CVSDataset.", "We are going to have four methods in our CSVDataset class \u2014 __init__ , __len__ , __getitem__ and get_splits.", "Note: At a very basic level, the Dataset class you extend for your own dataset should have __init__,__len__() and __getitem__ methods.", "We begin by defining the predictors X and output features y in __init__() and ensuring the type is float since neural networks work only with numerical data.", "__len__ return the number of rows in the dataset and __getitem__ returns item at a particular index in the dataset.", "Additionally, we have also defined an (optional) method get_splits that lets us split our dataset into train and test set. We could have very well done this using train_test_split in Sklearn, but this is just a way of showing how it can be done within PyTorch using torch.utils.data.random_split.", "This is where we are defining what all hidden layers we want in our network and how will the layers interact with each other. To do so, we are going to make use of torch.nn.Module class and extend it. We will be calling our class myNeuralNetwork.", "It contains the __init__ method where we define the layers and a forward method that explains how the input is propagated forward through the defined layers.", "Let\u2019s look at the init method first:", "We begin by calling the constructor of the parent class using super().__init__(). Next, we define three hidden layers hid1, hid2 and hid3, along with their weights initialization and activation functions \u2014 act1, act2 , and act3 .", "If you recall from the summary of the Keras model at the beginning of the article, we had three hidden layers all of which were Dense. Pytorch equivalent of Keras Dense layers is Linear.", "The first hidden linear layer hid1 takes n_inputsnumber of inputs and outputs 8 neurons/units.", "Note: n_inputs roughly translates to how many predictor columns we have (in our case 2).", "The second hidden layer takes 8 neurons as input and outputs 16 units.", "The third hidden layer takes 16 neurons as input and produces 2 units as output (which are the probabilities of the loan application being approved or rejected since the softmax activation function is at work in this layer).", "The activations functions with respect to each hidden layer have been stored in act1, act2 and act3.", "Note: Common examples of activations functions in Pytorch include ReLu , Sigmoid , LogSigmoid , etc.", "Additionally, PyTorch lets you initialize the weight tensors for each hidden layer. Common examples include kaiming_uniform, xavier_uniform and orthogonal. You can read about them in more detail on the documentation page.", "Now, let\u2019s look at the forward method :", "The inputs and activations for each layer are defined in this function. To summarize, the input X goes in to hid1 where the first activation function act1 is applied to it. The output is then passed onto hid2 where the second activation function act2 is applied and so on. Since the last layer has a softmax activation function, the returned X will be a tensor containing n elements where n is the number of output classes (two in our case \u2014 approved vs rejected).", "A tensor is nothing but the Pytorch\u2019s very own Numpy arrays. It is a generic n-dimensional array to be used for arbitrary numeric computations.", "Before we train, it is essential to load the data for training using torch.utils.data.DataLoader. Why is that needed, you ask? It essentially creates batches (for both train and test set) to be sent as input to the model. It takes as input the sample of rows, the batch size, and whether or not to shuffle the rows.", "Note: We explicitly set shuffle = False in case of test_dl because we need unshuffled labels at the end to draw confusion matrix.", "We first define the model by creating myNeuralNetwork object and passing 2 as input. 2 here refers to the number of input features.", "We are also going to set epochs = 10 meaning the model is going to train on all of the data 10 times.", "For the training process, we are going to use the Stochastic Gradient Descent (SGD)optimizer.", "The choices of optimizers include Adam , AdaGrad, SparseAdam, SGD, etc and their use-cases can be found in the documentation.", "Finally, we are going to monitor the CrossEntropyLoss while training.", "In order to train the network, we are going to use two for loops. The outer loop in the code below is required for the number of training epochs and the inner loop is used to iterate over the batches of samples intrain_dl . That is, for each batch of samples in train_dl, we are going to clear the gradients, compute the model output, calculate loss and do backpropagation to update the weights.", "To evaluate the model, we are again going to use a for loop to go over all the batches in test_dl. For each sample, we are going to pass it to the model and get the output i.e. y_pred . Since y_pred contains two probability values (one for approved and one for rejected), we are going to pick the index of the highest probability as the final output.", "Finally, we store the actual output and the predicted output in two lists \u2014 actuals and predictions.", "To print the accuracy score, we will be using accuracy_score fromsklearn.metrics", "We have created a basic network using PyTorch. Hopefully, it wasn\u2019t too much information overload. If you want to have access to the entire code, check out the notebook on Github. In the next tutorial, we are going to dig a little deeper into some of the advanced capabilities that Pytorch provides.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Senior Data Scientist | Explain like I am 5 | Oxford & SFU Alumni | https://podurama.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F8db11084c60c&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----8db11084c60c--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8db11084c60c--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://varshitasher.medium.com/?source=post_page-----8db11084c60c--------------------------------", "anchor_text": ""}, {"url": "https://varshitasher.medium.com/?source=post_page-----8db11084c60c--------------------------------", "anchor_text": "Dr. Varshita Sher"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff8ca36def59&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&user=Dr.+Varshita+Sher&userId=f8ca36def59&source=post_page-f8ca36def59----8db11084c60c---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8db11084c60c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8db11084c60c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://imgflip.com/i/4fycse", "anchor_text": "Imgflip"}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00", "anchor_text": "neural network with as little as three lines of code"}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00", "anchor_text": "post"}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-convolutional-neural-networks-using-tensorflow-s-keras-api-in-python-6e8035e28238", "anchor_text": "here"}, {"url": "https://github.com/V-Sher/pytorch_ANN_example", "anchor_text": "Github"}, {"url": "https://pytorch.org/docs/stable/nn.init.html", "anchor_text": "documentation"}, {"url": "https://pytorch.org/docs/stable/optim.html", "anchor_text": "documentation"}, {"url": "https://github.com/V-Sher/pytorch_ANN_example", "anchor_text": "Github"}, {"url": "https://varshitasher.medium.com/membership", "anchor_text": "Read every store from Dr. Varshita Sher(and thousands of other writers on MediumAs a Medium member, a portion of your membership fee goes to the writers you read and you get full access to every story\u2026varshitasher.medium.com"}, {"url": "https://towardsdatascience.com/beginners-guide-to-building-artificial-neural-networks-using-keras-in-python-bdc4989dab00", "anchor_text": "Beginner\u2019s guide to building Artificial Neural Networks using Keras in PythonTips and tricks to create network architecture, train, validate, and save the model and use it to make inferences.towardsdatascience.com"}, {"url": "https://towardsdatascience.com/step-by-step-guide-to-explaining-your-ml-project-during-a-data-science-interview-81dfaaa408bf", "anchor_text": "Step by step guide to explaining your ML project during a data science interview.With a bonus sample script at the end that lets you show off your tech skills discreetly!towardsdatascience.com"}, {"url": "https://towardsdatascience.com/time-series-modeling-using-scikit-pandas-and-numpy-682e3b8db8d1", "anchor_text": "Time Series Modeling using Scikit, Pandas, and NumpyIntuitive use of seasonality to improve model accuracy.towardsdatascience.com"}, {"url": "https://medium.com/tag/pytorch?source=post_page-----8db11084c60c---------------pytorch-----------------", "anchor_text": "Pytorch"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----8db11084c60c---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/tag/python?source=post_page-----8db11084c60c---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8db11084c60c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&user=Dr.+Varshita+Sher&userId=f8ca36def59&source=-----8db11084c60c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8db11084c60c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&user=Dr.+Varshita+Sher&userId=f8ca36def59&source=-----8db11084c60c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8db11084c60c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8db11084c60c--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F8db11084c60c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----8db11084c60c---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----8db11084c60c--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----8db11084c60c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----8db11084c60c--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----8db11084c60c--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----8db11084c60c--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----8db11084c60c--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----8db11084c60c--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----8db11084c60c--------------------------------", "anchor_text": ""}, {"url": "https://varshitasher.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://varshitasher.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Dr. Varshita Sher"}, {"url": "https://varshitasher.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3.2K Followers"}, {"url": "https://podurama.com", "anchor_text": "https://podurama.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff8ca36def59&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&user=Dr.+Varshita+Sher&userId=f8ca36def59&source=post_page-f8ca36def59--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F1aea8fe02d9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecreating-keras-code-in-pytorch-an-introductory-tutorial-8db11084c60c&newsletterV3=f8ca36def59&newsletterV3Id=1aea8fe02d9&user=Dr.+Varshita+Sher&userId=f8ca36def59&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}