{"url": "https://towardsdatascience.com/creating-neural-networks-from-scratch-in-python-6f02b5dd911", "time": 1683006321.669239, "path": "towardsdatascience.com/creating-neural-networks-from-scratch-in-python-6f02b5dd911/", "webpage": {"metadata": {"title": "Neural Networks from Scratch in Python | by Adarsh Menon | Towards Data Science", "h1": "Neural Networks from Scratch in Python", "description": "A practical guide for beginners for understanding and implementing a neural network in python, from scratch."}, "outgoing_paragraph_urls": [{"url": "https://www.youtube.com/watch?v=dgGyGY0p9jM", "anchor_text": "feedforward function", "paragraph_index": 17}, {"url": "https://towardsdatascience.com/linear-regression-using-gradient-descent-97a6c8700931", "anchor_text": "detailed post on it.", "paragraph_index": 22}, {"url": "https://www.youtube.com/watch?v=jVXJnN-kIqU", "anchor_text": "backpropagation algorithm", "paragraph_index": 27}, {"url": "https://www.youtube.com/watch?v=HNwcN3RHcNI", "anchor_text": "implement the network", "paragraph_index": 33}, {"url": "https://colab.research.google.com/drive/1ku3LvrqovKOzeCTkW6bLHYxNKMaG4KFv", "anchor_text": "this Google Colab Notebook.", "paragraph_index": 36}, {"url": "https://www.youtube.com/playlist?list=PLP3ANEJKF1TwHRDS9sPANOzYaAIfJIuam", "anchor_text": "3 part series on YouTube", "paragraph_index": 36}, {"url": "https://www.youtube.com/adarshmenon", "anchor_text": "https://www.youtube.com/adarshmenon", "paragraph_index": 38}], "all_paragraphs": ["Neural Networks have taken over the world and are being used everywhere you can think of. There are a lot of posts out there that describe how neural networks work and how you can implement one from scratch, but I feel like a majority are more math-oriented and complex, with less importance given to implementation. My main focus today will be on implementing a network from scratch and in the process, understand the inner workings.", "The goal of this post is to walk you through on translating the math equations involved in a neural network to python code. If you are interested in the equations and math details, I have created a 3 part series that describes everything in detail:", "Let us quickly recap how neural networks \u201clearn\u201d from training samples and can be used to make predictions.", "A neural network is made up of mainly 3 types of layers \u2014 input layers, hidden layers and output layers.", "Every neuron in a layer takes the inputs, multiples it by some weights, adds a bias, applies an activation function and passes it on to the next layer.", "The learning process can be summarised as follows:", "When we reach a stage where our cost is close to 0, and our network is making accurate predictions, we can say that our network has \u201clearned\u201d. In very simple words \u2014 learning is simply the process of updating the weights and biases until the network produces some desired output.", "In the next few sections, we will implement the steps outlined above using Python.", "First, we create a Layer class to represent each layer in our network. This just makes things neater and makes it easier to encapsulate the data and functions related to a layer.", "We import numpy \u2014 to make our mathematical calculations easier. We have also defined activation functions and loss function (to calculate cost) that we will be using in our network.", "Inside the layer class, we have defined dictionary activationFunctions that holds all our activation functions along with their derivatives. This is just to make things neater and avoid a lot of if statements. We have also defined a learning rate. You can experiment with different values of learning rate if you like.", "In the __init__ function, we take three parameters as input:", "Now we can initialise our weights and biases. One thing to note is that we will be using matrix multiplications to perform all our calculations. Hence all our variables will be matrices.", "Our weights is a matrix whose number of rows is equal to the number of neurons in the layer, and number of columns is equal to the number of inputs to this layer. We use the np.random.randn function to create a matrix of shape (neurons, input) with random values. It is important to initialise the weight matrix with random values for our network to learn properly.", "Our bias is a column vector, and contains a bias value for each neuron in the network. It is initialised to 0 using the np.zeros function.", "Here is a quick shape reference to not get confused with shapes later. Shape is the dimension of the matrices we will use. It is extremely important because most of the errors happen because of a shape mismatch, and this will help you while debugging.", "neurons = number of neurons in the given layerinputs = number of inputs to the layersamples (or m) = number of training samples", "The feedforward function propagates the inputs through each layer of the network until it reaches the output layer and produces some output. As I mentioned above, every neuron takes in inputs, multiplies it by the weights, adds a bias and applies an activation function to generate its output.", "The feedforward equations can be summarised as shown:", "A few things to note here are:", "In code, this we write this feedforward function in our layer class, and it computes the output of the current layer only. Later, we will use a loop to iterate over layer objects and generate each output sequentially.", "We are saving the values of A_prev, Z and A in our class to use them later during backpropagation.", "Gradient descent is what makes our network learn. I will not go into details on gradient descent in this post, as I have already made a detailed post on it.", "Basically gradient descent calculates by how much our weights and biases should be updated so that our cost reaches 0. This is done using partial derivatives.", "Gradient descent is based on the fact that, at the minimum value of a function, its partial derivative will be equal to zero. Here we are interested in minimising the Cost function.", "Cost depends on the weights and bias values in our layers. So for each layer, we find the derivative of cost with respect to weights and biases for that layer. This derivative value is the update that we make to our current values of weights and biases. The equation used to make this update is called the learning equation.", "Here alpha is the learning_rate that we had defined earlier.", "The backpropagation algorithm is basically going back in our network, calculating the value of partial derivative values in each layer and applying the learning equation.", "After we get the output, we will calculate the cost.", "Here m is the number of samples in our training set. L is any loss function that calculates the error between the actual value and predicted value for a single sample. This basically gives us the average error across all the samples.", "Next, let\u2019s see the equations for finding the partial derivatives. We are interested in the partial derivative values of cost with respect to W and b only. But to get those values efficiently we need to calculate the values of partial derivatives of C with respect to A and Z as well.", "Things to note in these equations:", "Notice in the code, we use the exact equations discussed above, but with some modifications:", "Now we can put everything together to implement the network. We will set up a simple 2 layer network to learn the XOR function.", "Finally, let\u2019s take a look at how our loss is decreasing over time.", "This network obviously cannot be used to solve real world problems, but I think gives us a good idea about how neural networks work exactly. Implementing something from scratch is a good exercise for understanding it in depth.", "You can find all the code in this Google Colab Notebook.I also made a 3 part series on YouTube describing in detail how every equation can be derived.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I make websites and teach machines to predict stuff. I also make YouTube videos \u2014 https://www.youtube.com/adarshmenon"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F6f02b5dd911&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----6f02b5dd911--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----6f02b5dd911--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://adarsh-menon.medium.com/?source=post_page-----6f02b5dd911--------------------------------", "anchor_text": ""}, {"url": "https://adarsh-menon.medium.com/?source=post_page-----6f02b5dd911--------------------------------", "anchor_text": "Adarsh Menon"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F823b6583e0d8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&user=Adarsh+Menon&userId=823b6583e0d8&source=post_page-823b6583e0d8----6f02b5dd911---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6f02b5dd911&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6f02b5dd911&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.youtube.com/watch?v=dgGyGY0p9jM", "anchor_text": "feedforward function"}, {"url": "https://towardsdatascience.com/linear-regression-using-gradient-descent-97a6c8700931", "anchor_text": "detailed post on it."}, {"url": "https://www.youtube.com/watch?v=jVXJnN-kIqU", "anchor_text": "backpropagation algorithm"}, {"url": "https://www.youtube.com/watch?v=HNwcN3RHcNI", "anchor_text": "implement the network"}, {"url": "https://colab.research.google.com/drive/1ku3LvrqovKOzeCTkW6bLHYxNKMaG4KFv", "anchor_text": "this Google Colab Notebook."}, {"url": "https://www.youtube.com/playlist?list=PLP3ANEJKF1TwHRDS9sPANOzYaAIfJIuam", "anchor_text": "3 part series on YouTube"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----6f02b5dd911---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----6f02b5dd911---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----6f02b5dd911---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/python-programming?source=post_page-----6f02b5dd911---------------python_programming-----------------", "anchor_text": "Python Programming"}, {"url": "https://medium.com/tag/gradient-descent?source=post_page-----6f02b5dd911---------------gradient_descent-----------------", "anchor_text": "Gradient Descent"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6f02b5dd911&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&user=Adarsh+Menon&userId=823b6583e0d8&source=-----6f02b5dd911---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6f02b5dd911&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&user=Adarsh+Menon&userId=823b6583e0d8&source=-----6f02b5dd911---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6f02b5dd911&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----6f02b5dd911--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F6f02b5dd911&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----6f02b5dd911---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----6f02b5dd911--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----6f02b5dd911--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----6f02b5dd911--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----6f02b5dd911--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----6f02b5dd911--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----6f02b5dd911--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----6f02b5dd911--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----6f02b5dd911--------------------------------", "anchor_text": ""}, {"url": "https://adarsh-menon.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://adarsh-menon.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Adarsh Menon"}, {"url": "https://adarsh-menon.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1K Followers"}, {"url": "https://www.youtube.com/adarshmenon", "anchor_text": "https://www.youtube.com/adarshmenon"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F823b6583e0d8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&user=Adarsh+Menon&userId=823b6583e0d8&source=post_page-823b6583e0d8--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fdea029fcb173&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-neural-networks-from-scratch-in-python-6f02b5dd911&newsletterV3=823b6583e0d8&newsletterV3Id=dea029fcb173&user=Adarsh+Menon&userId=823b6583e0d8&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}