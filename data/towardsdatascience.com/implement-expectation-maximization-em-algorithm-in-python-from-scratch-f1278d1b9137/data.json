{"url": "https://towardsdatascience.com/implement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137", "time": 1683017024.290453, "path": "towardsdatascience.com/implement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137/", "webpage": {"metadata": {"title": "Implement Expectation-Maximization(EM) in Python | Towards Data Science", "h1": "Implement Expectation-Maximization Algorithm(EM) in Python", "description": "Expectation Maximization Algorithm(EM) for unsupervised and semi-supervised Gaussian Mixture Models (GMM) - algorithm explanation and code implementation"}, "outgoing_paragraph_urls": [{"url": "https://jonathan-hui.medium.com/machine-learning-expectation-maximization-algorithm-em-2e954cb76959", "anchor_text": "this article", "paragraph_index": 7}, {"url": "https://github.com/VXU1230/Medium-Tutorials/tree/master/em", "anchor_text": "here", "paragraph_index": 11}], "all_paragraphs": ["When companies launch a new product, they usually want to find out the target customers. If they have data on customers\u2019 purchasing history and shopping preferences, they can utilize it to predict what types of customers are more likely to purchase the new product. There are many models to solve this typical unsupervised learning problem and the Gaussian Mixture Model (GMM) is one of them.", "GMMs are probabilistic models that assume all the data points are generated from a mixture of several Gaussian distributions with unknown parameters. They differ from k-means clustering in that GMMs incorporate information about the center(mean) and variability(variance) of each clusters and provide posterior probabilities.", "In the example mentioned earlier, we have 2 clusters: people who like the product and people who don\u2019t. If we know which cluster each customer belongs to (the labels), we can easily estimate the parameters(mean and variance) of the clusters, or if we know the parameters for both clusters, we can predict the labels. Unfortunately, we don\u2019t know either one. To solve this chicken and egg problem, the Expectation-Maximization Algorithm (EM) comes in handy.", "EM is an iterative algorithm to find the maximum likelihood when there are latent variables. The algorithm iterates between performing an expectation (E) step, which creates a heuristic of the posterior distribution and the log-likelihood using the current estimate for the parameters, and a maximization (M) step, which computes parameters by maximizing the expected log-likelihood from the E step. The parameter-estimates from M step are then used in the next E step. In the following sections, we will delve into the math behind EM, and implement it in Python from scratch.", "W define the known variables as x, and the unknown label as y. We make two assumptions: the prior distribution p(y) is binomial and p(x|y) in each cluster is a Gaussian .", "All parameters are randomly initialized. For simplicity, we use \u03b8 to represent all parameters in the following equations.", "At the expectation (E) step, we calculate the heuristics of the posteriors. We call them heuristics because they are calculated with guessed parameters \u03b8.", "At the maximization (M) step, we find the maximizers of the log-likelihood and use them to update \u03b8. Notice that the summation inside the logarithm in equation (3) makes the computational complexity NP-hard. To move the summation out of the logarithm, we use Jensen\u2019s inequality to find the evidence lower bound (ELBO) which is tight only when Q(y|x) = P(y|x). If you are interested in the math details from equation (3) to equation (5), this article has decent explanation.", "Luckily, there are closed-form solutions for the maximizers in GMM.", "We use these updated parameters in the next iteration of E step, get the new heuristics and run M-step. What the EM algorithm does is repeat these two steps until the average log-likelihood converges.", "Before jumping into the code, let\u2019s compare the above parameter solutions from EM to the direct parameter estimates when the labels are known. Did you find they are very similar? In fact, the only difference is that the EM solutions use the heuristics of posteriors Q while the direct estimates use the true labels.", "There are many packages including scikit-learn that offer high-level APIs to train GMMs with EM. In this section, I will demonstrate how to implement the algorithm from scratch to solve both unsupervised and semi-supervised problems. The complete code can be found here.", "Let\u2019s stick with the new product example. Using the known personal data, we have engineered 2 features x1, x2 represented by a matrix x, and our goal is to forecast whether each customer will like the product (y=1) or not (y=0).", "First we initialize all the unknown parameters.get_random_psd() ensures the random initialization of the covariance matrices is positive semi-definite.", "Then we pass the initialized parameters to e_step()and calculate the heuristics Q(y=1|x) and Q(y=0|x) for every data point as well as the average log-likelihoods which we will maximize in the M step.", "In m_step() , the parameters are updated using the closed-form solutions in equation(7) ~ (11). Note that if there weren\u2019t closed-form solutions, we would need to solve the optimization problem using gradient ascent and find the parameter estimates.", "Now we can repeat running the two steps until the average log-likelihood converges. rum_em() returns the predicted labels, the posteriors and average log-likelihoods from all training steps.", "Running the unsupervised model , we see the average log-likelihoods converged in over 30 steps.", "In some cases, we have a small amount of labeled data. For example, we might know some customers\u2019 preferences from surveys. Considering the potential customer base is huge, the amount of labeled data we have is insufficient for full supervised learning, yet we can learn the initial parameters from the data in a semi-supervised way.", "We use the same unlabeled data as before, but we also have some labeled data this time.", "In learn_params() , we learn the initial parameters from the labeled data by implementing equation (12) ~(16). These learned parameters are used in the first E step.", "Other than the initial parameters, everything else is the same so we can reuse the functions defined earlier. Let\u2019s train the model and plot the average log-likelihoods.", "This time the average log-likelihoods converged in 4 steps, much faster than unsupervised learning.", "To verify our implementation, we compare our forecasts with forecasts from the scikit-learn API. To build the model in scikit-learn, we simply call the GaussianMixture API and fit the model with our unlabeled data. Don\u2019t forget to pass the learned parameters to the model so it has the same initialization as our semi-supervised implementation.GMM_sklearn()returns the forecasts and posteriors from scikit-learn.", "Comparing the results, we see that the learned parameters from both models are very close and 99.4% forecasts matched. In case you are curious, the minor difference is mostly caused by parameter regularization and numeric precision in matrix calculation.", "That\u2019s it! We just demystified the EM algorithm.", "In this article, we explored how to train Gaussian Mixture Models with the Expectation-Maximization Algorithm and implemented it in Python to solve unsupervised and semi-supervised learning problems. EM is a very useful method to find the maximum likelihood when the model depends on latent variables and therefore is frequently used in machine learning.", "I hope you had fun reading this article :)", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff1278d1b9137&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f1278d1b9137--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f1278d1b9137--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://siwei-xu.medium.com/?source=post_page-----f1278d1b9137--------------------------------", "anchor_text": ""}, {"url": "https://siwei-xu.medium.com/?source=post_page-----f1278d1b9137--------------------------------", "anchor_text": "Siwei Causevic"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F301dc9114da0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&user=Siwei+Causevic&userId=301dc9114da0&source=post_page-301dc9114da0----f1278d1b9137---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff1278d1b9137&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff1278d1b9137&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/hands-on-tutorials", "anchor_text": "Hands-on Tutorials"}, {"url": "https://jonathan-hui.medium.com/machine-learning-expectation-maximization-algorithm-em-2e954cb76959", "anchor_text": "this article"}, {"url": "https://github.com/VXU1230/Medium-Tutorials/tree/master/em", "anchor_text": "here"}, {"url": "https://medium.com/tag/editors-pick?source=post_page-----f1278d1b9137---------------editors_pick-----------------", "anchor_text": "Editors Pick"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----f1278d1b9137---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/gaussian-mixture-model?source=post_page-----f1278d1b9137---------------gaussian_mixture_model-----------------", "anchor_text": "Gaussian Mixture Model"}, {"url": "https://medium.com/tag/data-science?source=post_page-----f1278d1b9137---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/hands-on-tutorials?source=post_page-----f1278d1b9137---------------hands_on_tutorials-----------------", "anchor_text": "Hands On Tutorials"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff1278d1b9137&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&user=Siwei+Causevic&userId=301dc9114da0&source=-----f1278d1b9137---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff1278d1b9137&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&user=Siwei+Causevic&userId=301dc9114da0&source=-----f1278d1b9137---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff1278d1b9137&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f1278d1b9137--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff1278d1b9137&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f1278d1b9137---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f1278d1b9137--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f1278d1b9137--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f1278d1b9137--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f1278d1b9137--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f1278d1b9137--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f1278d1b9137--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f1278d1b9137--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f1278d1b9137--------------------------------", "anchor_text": ""}, {"url": "https://siwei-xu.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://siwei-xu.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Siwei Causevic"}, {"url": "https://siwei-xu.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "381 Followers"}, {"url": "https://www.linkedin.com/in/siwei-causevic/", "anchor_text": "https://www.linkedin.com/in/siwei-causevic/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F301dc9114da0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&user=Siwei+Causevic&userId=301dc9114da0&source=post_page-301dc9114da0--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F3374c04371d5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fimplement-expectation-maximization-em-algorithm-in-python-from-scratch-f1278d1b9137&newsletterV3=301dc9114da0&newsletterV3Id=3374c04371d5&user=Siwei+Causevic&userId=301dc9114da0&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}