{"url": "https://towardsdatascience.com/build-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764", "time": 1683003471.931511, "path": "towardsdatascience.com/build-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764/", "webpage": {"metadata": {"title": "Track The Spread of Coronavirus using dash application | Towards Data Science", "h1": "Build A Dashboard To Track The Spread of Coronavirus Using Dash", "description": "This post show you how to build a coronavirus (COVID-19) global cases monitor using dash"}, "outgoing_paragraph_urls": [{"url": "https://dash-coronavirus-2020.herokuapp.com/", "anchor_text": "check it out!", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/create-an-infographic-using-matplotlib-3fbb546c1628", "anchor_text": "graph", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/plt-xxx-or-ax-xxx-that-is-the-question-in-matplotlib-8580acf42f44", "anchor_text": "convoluted layers", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/the-many-ways-to-call-axes-in-matplotlib-2667a7b06e06", "anchor_text": "complex syntax", "paragraph_index": 2}, {"url": "https://plot.ly/graphing-libraries/", "anchor_text": "plotly", "paragraph_index": 3}, {"url": "https://dash.plot.ly/introduction", "anchor_text": "dash", "paragraph_index": 3}, {"url": "https://dash-coronavirus-2020.herokuapp.com/", "anchor_text": "this dashboard", "paragraph_index": 4}, {"url": "https://github.com/Perishleaf/data-visualisation-scripts/tree/master/dash-2019-coronavirus", "anchor_text": "my Github", "paragraph_index": 5}, {"url": "https://docs.google.com/spreadsheets/d/1yZv9w9zRKwrGTaR-YzmAqMefw4wMlaXocejdxZaTs6w/htmlview?usp=sharing&sle=true#", "anchor_text": "Johns Hopkins CSSE", "paragraph_index": 8}, {"url": "https://ncov.dxy.cn/ncovh5/view/pneumonia?scene=2&clicktime=1579582238&enterid=1579582238&from=singlemessage&isappinstalled=0", "anchor_text": "DingXiangYuan", "paragraph_index": 8}, {"url": "https://opencagedata.com/", "anchor_text": "OpenCageGeocode", "paragraph_index": 10}, {"url": "https://devcenter.heroku.com/articles/getting-started-with-python", "anchor_text": "step-by-step tutorial", "paragraph_index": 20}, {"url": "https://dash.plot.ly/deployment", "anchor_text": "tutorial", "paragraph_index": 20}, {"url": "https://www.linkedin.com/in/jun-ye-29aaa769/", "anchor_text": "Linkedin", "paragraph_index": 22}, {"url": "https://junye0798.com/", "anchor_text": "my website", "paragraph_index": 22}, {"url": "http://junye0798.com", "anchor_text": "junye0798.com", "paragraph_index": 24}], "all_paragraphs": ["Update: the dashboard has changed a lot since this post, check it out!", "Last month, I published four posts to share with you my experience in using matplotlib. Benefit from its full control of elements on a given graph, matplotlib is deemed as a fundamental python library for data visualisation and used by many other libraries (e.g. seaborn and pandas) as the plotting module. This is also why I think learning matplotlib is an essential part of being a practitioner in data science, which helps to build up an in-depth understanding of logic behind data visualisation tools.", "Nevertheless, great flexibility comes with convoluted layers and a complex syntax. It can often be daunting with tedious coding to make a publishable plot using matplotlib. In other words, matplotlib should not be our only data visualisation tool, we need always be equipped with alternatives in our toolbox to handle evolving requirements.", "When it comes with requirements for efficiency, interaction, and web-based visualisation, plotly and dash are must-learn tools. The beauty about these tools is that we do not need to master JavaScript, CSS, and HTML for making interactive web visualisation as both tools handle that for us. They connect us with JavaScript (e.g. React.js, Plotly.js, and d3.js) to make graphs responsive and also beautiful. What we need to provide is just simple codes in pure python environment.", "In this post, I will, on an abstract level, dissect the codes of a dashboard, which I built to track the spread of recent outbreak coronavirus (COVID-19/2019-nCoV). From this dashboard, you can have a real-time overview of the numbers of global coronavirus cases, including confirmed, recovered and deaths cases, and their distribution on a world map.", "As usual, you can access all the required data and the jupyter notebook from my Github. Since it is still under active development, the version used in this post may differ from what you downloaded. Nevertheless, the main framework will be the same as in this post. In addition, please feel free to provide your suggestions or help to make this dashboard more useful and accurate.", "A dashboard is a visual display of the most important information needed to achieve one or more objectives; consolidated and arranged on a single screen so the information can be monitored at a glance", "To help you understand the codes (you can find the codes from app.py) quickly, let me first declare the logic behind them. Generally, the framework (i.e. my thinking process) in building this dashboard application via dash followed: Data preparation -> Dashboard layout determination -> Content generation and insertion, despite that you may find the third part happened before the second part in the code. That is the way Python read the codes, not us. Bear this framework in mind and let\u2019s dive into the codes.", "Many sources provide real-time data for tracking the spread of coronavirus (e.g. search \u201ccoronavirus\u201d on GitHub, there are 231 repositories, Figure 1). As for my dashboard, I compiled data from two sources (i.e. Johns Hopkins CSSE and DingXiangYuan), where they maintained timely and accurate case numbers for this public emergency. Since codes of this part are pretty straightforward, I just give brief explanations about the key points here.", "First, at this stage, I manually downloaded and checked data from these two sources and stored them in Excel data sheets on a daily basis. As the emergency is going on, the number of sheets in the Excel file is increasing as well. I used pandas.ExcelFile() function (you need to install xlrd library to use this function) to import sheets as separated dataframes and store them in a dictionary object (i.e. dfs). I, therefore, can access data from any given date by using the key (i.e. keyList) of the dictionary.", "Second, as we are going to make a scatter plot on a global map to show the distribution of coronavirus cases, every location should be assigned with coordinates (i.e. latitude and longitude). Here I used service provided by OpenCageGeocode to call coordinates. As the usage limits (i.e. 2500 API requests per day), it is not feasible to call coordinates for every location in every sheet repeatedly. We just need to call coordinates for data from the latest date (i.e. dfs[keyList[0]]) and plot the latest data on the map.", "Since it is a web-based application, it is inevitable to deal with HTML structures for the layout. Don\u2019t panic, instead of writing HTML ourselves, dash provides us with the dash-html-components library to deal with it. We basically just need to compose the layout using Python structures. Note that the layout design can sometimes be very frustrating, however, we will stick with a very basic layout in this dashboard.", "First, we need to understand html.Div(). You can consider it as a container/section for your content in a hierarchical tree structure. As shown in Figure 2, there are four containers (actually should be five, including the footnote) in the dashboard. Specifically, in the title container, it has a title (i.e. html.H4()) and two paragraphs (i.e. html.P()) components. As for the Number Plates container, it has four sub-containers (i.e. html.Div()), each sub-container is comprised of one paragraph (i.e. html.P()) and one title (i.e. html.H3()). Simple, right? I believe you can now figure out the remaining containers in the code.", "There are three arguments inside html.Div(id, style={}, children=[]), where id is optional if you do not want to use css file (A css file is a cascading style sheet file used to format the contents of a webpage) to style the children content. In a simple word, normally, within your application folder (i.e. dash-2019-coronavirus folder in our case), there will be a assets folder, in which it contains the css file to specify the format of the application. You specify a style (e.g. margin, font, and colour etc.) and id within the css file, if you want to use this style in the application layout, instead of adding style={} within html.Div() repeatedly every time when you want to use the same style, you just need to assign the same id within the html.Div(). So dash knows how to style its children content within this html.Div() container using corresponding style in the css file within the assets folder.", "For example, as you can see from Figure 3, I specified an id=\u201dnumber-plate\u201d in the html.Div() container (line 409, right panel), and correspondingly, in line 736, 740, and 764 of the css file (left panel), I set up different font sizes for content associated with this id when displayed in different screen size (e.g. desktop or tablet). Hence, when the user opens the application from a small screen, dash knows to use 1.5rem for the font in the html.P() element and 3rem for the font in the html.H3() (\u2018rem\u2019 is the unit set up relative to the root em, to not put you to sleep, let\u2019s skip this in this post for now). Except for this one, I styled the components mostly in the python codes as you can find style={} in every container.", "The last thing we need to know is that, in each html.Div() container, with the style set as \u2018display\u2019:\u2018inline-block\u2019, its children elements fill up empty space in that container following the order from left to right and from top to bottom. For example, in the Number Plates container (Figure 2), the widths of the current four number plates are set up as 24.4% the full width of the screen (i.e. style={\u2018width\u2019:\u201824.4%\u2019}, Figure 3, left panel, line 413, 420, 427 and 434), respectively. They thus filled up all empty space in one row from left to right first. Let\u2019s say now you have a fifth number plate with the same width, it will automatically be placed at the beginning of a second row in the same container.", "To be a functional house, once we finish its construction, the next thing is to move furnitures into the house.", "As you can see from Figure 4, we constructed sub-containers for graph components (i.e. three scatter-line plots and map). Each sub-container has a children component named as dcc.Graph(). This function comes from dash_core_components library that can be used to render any plotly-powered data visualisation, passed as the figure argument. In other words, we make a nice graph using plotly and pass it to dcc.Graph() and dash knows how to deal with the graph, that\u2019s it.", "If you are familiar with the syntax logic behind matplotlib, you will find the syntax of plotly graph object (Figure 5) is easy to understand as well. They basically follow the same logic. We first instantiate an empty canvas by calling fig = go.Figure(). Then add trace (similar to the concept of axes in matplotlib). In plotly, we have access to customise almost all elements in the graph via figure.update_layout().", "To run the application locally, just type python app.py within the folder that contains all other required files (i.e. assets/, data.xlsx, etc.). Copy and paste the http site to your preferred browser, you will see the application if everything is going right.", "Instead, if you want to share your application publicly, we need to deploy it on a server. I personally found Heroku is a very user-friendly option and provides step-by-step tutorial and dash also provide tutorial for deployment in Heroku. One thing note that I used conda create to create a virtual environment for my application instead of using virtualenv as indicated in dash tutorial.", "And, here are some links and posts I found useful while learning how to build this Dash app:", "As always, I welcome feedback, constructive criticism, and hearing about your data science projects. I can be reached on Linkedin, and now on my website as well.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Analyst @Canva | PhD | Inspired by data | junye0798.com | Opinions are my own"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F90364f016764&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://me.dm/@jun_ye", "anchor_text": "Mastodon"}, {"url": "https://towardsdatascience.com/?source=post_page-----90364f016764--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----90364f016764--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@jun_ye?source=post_page-----90364f016764--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jun_ye?source=post_page-----90364f016764--------------------------------", "anchor_text": "Jun"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd8f76324bf51&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&user=Jun&userId=d8f76324bf51&source=post_page-d8f76324bf51----90364f016764---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F90364f016764&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F90364f016764&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://dash-coronavirus-2020.herokuapp.com/", "anchor_text": "COVID-19 Global Cases Monitor"}, {"url": "https://dash-coronavirus-2020.herokuapp.com/", "anchor_text": "check it out!"}, {"url": "https://towardsdatascience.com/create-an-infographic-using-matplotlib-3fbb546c1628", "anchor_text": "graph"}, {"url": "https://towardsdatascience.com/plt-xxx-or-ax-xxx-that-is-the-question-in-matplotlib-8580acf42f44", "anchor_text": "convoluted layers"}, {"url": "https://towardsdatascience.com/the-many-ways-to-call-axes-in-matplotlib-2667a7b06e06", "anchor_text": "complex syntax"}, {"url": "https://plot.ly/graphing-libraries/", "anchor_text": "plotly"}, {"url": "https://dash.plot.ly/introduction", "anchor_text": "dash"}, {"url": "https://dash-coronavirus-2020.herokuapp.com/", "anchor_text": "this dashboard"}, {"url": "https://github.com/Perishleaf/data-visualisation-scripts/tree/master/dash-2019-coronavirus", "anchor_text": "my Github"}, {"url": "https://docs.google.com/spreadsheets/d/1yZv9w9zRKwrGTaR-YzmAqMefw4wMlaXocejdxZaTs6w/htmlview?usp=sharing&sle=true#", "anchor_text": "Johns Hopkins CSSE"}, {"url": "https://ncov.dxy.cn/ncovh5/view/pneumonia?scene=2&clicktime=1579582238&enterid=1579582238&from=singlemessage&isappinstalled=0", "anchor_text": "DingXiangYuan"}, {"url": "https://opencagedata.com/", "anchor_text": "OpenCageGeocode"}, {"url": "http://127.0.0.1:8050/", "anchor_text": "http://127.0.0.1:8050/"}, {"url": "https://devcenter.heroku.com/articles/getting-started-with-python", "anchor_text": "step-by-step tutorial"}, {"url": "https://dash.plot.ly/deployment", "anchor_text": "tutorial"}, {"url": "https://plot.ly/python/creating-and-updating-figures/", "anchor_text": "The many ways to draw figure in plotly"}, {"url": "https://learnlayout.com/", "anchor_text": "Learn Layout"}, {"url": "https://learn.shayhowe.com/html-css/", "anchor_text": "Learn to code HTML and CSS"}, {"url": "https://devcenter.heroku.com/articles/getting-started-with-python#deploy-the-app", "anchor_text": "https://devcenter.heroku.com/articles/getting-started-with-python#deploy-the-app"}, {"url": "https://radumas.info/blog/tutorial/2017/08/10/codeday.html", "anchor_text": "https://radumas.info/blog/tutorial/2017/08/10/codeday.html"}, {"url": "https://timothyrenner.github.io/datascience/2017/08/08/finding-bigfoot-with-dash-part-1.html", "anchor_text": "https://timothyrenner.github.io/datascience/2017/08/08/finding-bigfoot-with-dash-part-1.html"}, {"url": "https://medium.com/a-r-g-o/using-plotlys-dash-to-deliver-public-sector-decision-support-dashboards-ac863fa829fb", "anchor_text": "https://medium.com/a-r-g-o/using-plotlys-dash-to-deliver-public-sector-decision-support-dashboards-ac863fa829fb"}, {"url": "https://www.linkedin.com/in/jun-ye-29aaa769/", "anchor_text": "Linkedin"}, {"url": "https://junye0798.com/", "anchor_text": "my website"}, {"url": "https://medium.com/tag/python?source=post_page-----90364f016764---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/dashboard?source=post_page-----90364f016764---------------dashboard-----------------", "anchor_text": "Dashboard"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F90364f016764&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&user=Jun&userId=d8f76324bf51&source=-----90364f016764---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F90364f016764&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&user=Jun&userId=d8f76324bf51&source=-----90364f016764---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F90364f016764&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----90364f016764--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F90364f016764&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----90364f016764---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----90364f016764--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----90364f016764--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----90364f016764--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----90364f016764--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----90364f016764--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----90364f016764--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----90364f016764--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----90364f016764--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jun_ye?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jun_ye?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Jun"}, {"url": "https://medium.com/@jun_ye/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "441 Followers"}, {"url": "http://junye0798.com", "anchor_text": "junye0798.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd8f76324bf51&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&user=Jun&userId=d8f76324bf51&source=post_page-d8f76324bf51--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe51a61d93066&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-dashboard-to-track-the-spread-of-coronavirus-using-dash-90364f016764&newsletterV3=d8f76324bf51&newsletterV3Id=e51a61d93066&user=Jun&userId=d8f76324bf51&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}