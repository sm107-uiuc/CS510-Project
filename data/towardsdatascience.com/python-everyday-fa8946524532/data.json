{"url": "https://towardsdatascience.com/python-everyday-fa8946524532", "time": 1683012922.824836, "path": "towardsdatascience.com/python-everyday-fa8946524532/", "webpage": {"metadata": {"title": "Python Everyday. Tricks, code optimization, interview\u2026 | by Vidhi Chugh | Towards Data Science", "h1": "Python Everyday", "description": "Python is one of the languages that beginners find very easy to start with. It is an interpreted, object-oriented and high-level programming language. In this post, we will cover interview questions\u2026"}, "outgoing_paragraph_urls": [{"url": "https://docs.python.org/3/library/profile.html", "anchor_text": "python docs", "paragraph_index": 4}, {"url": "https://pycallgraph.readthedocs.io/en/master/examples/basic.html#source-code", "anchor_text": "PyCallGraph", "paragraph_index": 9}, {"url": "https://pycallgraph.readthedocs.io/en/master/", "anchor_text": "here", "paragraph_index": 9}, {"url": "https://github.com/vidhi-am/tds_articles/blob/master/python%20everyday/Python.ipynb", "anchor_text": "here", "paragraph_index": 40}, {"url": "https://allaboutscale.com/", "anchor_text": "https://allaboutscale.com/", "paragraph_index": 42}], "all_paragraphs": ["Python is one of the languages that beginners find very easy to start with. It is an interpreted, object-oriented and high-level programming language.", "In this post, we will cover interview questions, python tricks to perform an operation, how to optimize the code and many more.", "So, without further ado, let\u2019s get started:", "I have encountered this question in interviews a lot \u2014 how do you optimize the python code. Well, I generally prefer to build the data processing pipelines early on by relying on standard best practices (which I will discuss later in the post). Then, start identifying the inefficiencies that might exist in following forms:", "What is a profile? As per python docs:", "A profile is a set of statistics that describes how often and for how long various parts of the program executed.", "We will see how the profile is evaluated for a given python function using standard library \u2014 cProfile.", "Lets take an example of Fibonacci series to illustrate how the profile looks like:", "The first line in the output tells how many total calls were monitored, out of which how many were primitive. This indicates the existence of recursion in the code( as only 4 calls were primitive out of 180 calls).", "PyCallGraph is another way to profile the code and is easier to interpret as the output is in the form of a png graph image. We will not discuss much here as it is beyond the scope of this post, more on this can be read here.", "Continuing with the discussion of optimization from above, it requires the analysis of the run time and memory profile of the code. If the code has longer run time and heavy memory usage, it is termed as expensive.", "The application is then analyzed to identify the expensive code which has scope for optimization. The typical way to speed up the code is to cache the culprit (yes !!!, for us it is).", "Caching serves the purpose of storing the results which are computationally expensive. So, they are just computed once, cached and retrieved via wrappers called as Decorators.", "A decorator is a function whose input and output is also a function.", "Strings are immutable. This implies that every time 2 strings are concatenated; a new representation is created as they can\u2019t be modified in place. Also note that the time measurement of string concatenation is a function of the number of concatenation operations and the average length of strings.", "Use \u2018Join\u2019 to concatenate the strings as it is faster than \u2018+\u2019 operator", "A \u2018+\u2019 operator does not work if you want to combine two dictionaries by adding the values for common keys.", "For e.g. A+B throws error in below code, but can be achieved using Counter:", "Similarly, we can find the intersection and union of A and B as well.", "Another very basic application of using \u2018Counter\u2019 is when we pass a string as input to count the occurrence of each alphabet in the string, for e.g. \u2018python everyday\u2019:", "The count of each alphabet to appear in the same order as it is appearing in the dictionary can be achieved by using OrderedDict:", "Counter can also be used to count the occurrence of each element in a dictionary by flattening it:", "Avoid creating temporary variable for swapping the variables. To understand it via an example, let\u2019s see how the swapping happens for the expression \u2014", "Step 1: The right-hand side y, x is evaluated first, which created a 2-element tuple in the memory. The 2 elements are the objects identified as y and x for Python to address it internally.", "Step 2: During evaluation of left-hand side expression, the tuple is assigned to the left-hand side and gets unpacked into x first and then y", "Deque is the double ended queue which supports memory efficient appends and pops from both sides.", "List: Insertion at the end of a list is efficient, however, when a new element is inserted at the front of the list, all subsequent elements indexing shifts by 1", "Here deque comes handy which is faster, being a double-linked list.", "\u2018in\u2019 keyword is the fastest and cleanest way to check the existence of an element.", "Filter outputs a new list containing the elements that satisfy a given condition.", "Map object is used to cast the given function, in our example below, an exponential function, to each item of a specified iterable.", "Reduce returns a single value by applying the function to an iterable. Its labelled as reduce as it reduces the elements in an iterable to a single cumulative value", "To understand generators, lets first understand iterables. For e.g., reading the elements of a list one by one is called as iteration, where the list is an iterable. But the issue with iterable is that it stores all the values in memory which may not be required all the time, hence comes the role of generators.", "Generator is a sub-type of iterator which generates the values on the fly. This results in saving memory and improving performance.", "For e.g. in case of video streaming to keep a tab on burglary, one is not interested in each and every image but only the one where potential burglary can happen. So, it is like on ongoing process where only a certain event related information needs analysis and not entire input needs to be stored in advance.", "It might also be the case that we initially generate a list of numbers but based on the algorithm, only a few elements are used. This led to wastage of CPU cycles in generating those numbers. Not just this, a lot of memory is used to store those numbers in the objects concurrently.", "More pointers on improving the code efficiency which are self explanatory:", "And, there are many more. As they say, learning is never ending. I will keep writing more on Python and its magnanimity.", "Till then, continue your journey of becoming an avid \u2018Pythonista\u2019.", "PS: I have added snippets of python code to illustrate the concepts, instead of creating multiple gists. Would be great to know if creating multiple smaller gists for explaining each concept is the only way to demonstrate or there is a quicker workaround.", "The entire code is placed in jupyter notebook here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Transformist and AI Strategist | International Speaker | AI Ethicist and Data-Centric Scientist | Global Woman Achiever https://allaboutscale.com/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ffa8946524532&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----fa8946524532--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fa8946524532--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://vidhi-chugh.medium.com/?source=post_page-----fa8946524532--------------------------------", "anchor_text": ""}, {"url": "https://vidhi-chugh.medium.com/?source=post_page-----fa8946524532--------------------------------", "anchor_text": "Vidhi Chugh"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff3231bce2410&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&user=Vidhi+Chugh&userId=f3231bce2410&source=post_page-f3231bce2410----fa8946524532---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffa8946524532&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffa8946524532&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@hiteshchoudhary?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Hitesh Choudhary"}, {"url": "https://unsplash.com/s/photos/python-programming?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://colab.research.google.com/github/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/01.07-Timing-and-Profiling.ipynb", "anchor_text": "timeit"}, {"url": "https://docs.python.org/3/library/profile.html", "anchor_text": "python docs"}, {"url": "https://pycallgraph.readthedocs.io/en/master/examples/basic.html#source-code", "anchor_text": "PyCallGraph"}, {"url": "https://pycallgraph.readthedocs.io/en/master/", "anchor_text": "here"}, {"url": "https://github.com/vidhi-am/tds_articles/blob/master/python%20everyday/Python.ipynb", "anchor_text": "here"}, {"url": "https://stackoverflow.com/questions/7165465/optimizing-python-code", "anchor_text": "https://stackoverflow.com/questions/7165465/optimizing-python-code"}, {"url": "https://medium.com/tag/python?source=post_page-----fa8946524532---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/python3?source=post_page-----fa8946524532---------------python3-----------------", "anchor_text": "Python3"}, {"url": "https://medium.com/tag/lists?source=post_page-----fa8946524532---------------lists-----------------", "anchor_text": "Lists"}, {"url": "https://medium.com/tag/dictionary?source=post_page-----fa8946524532---------------dictionary-----------------", "anchor_text": "Dictionary"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----fa8946524532---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffa8946524532&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&user=Vidhi+Chugh&userId=f3231bce2410&source=-----fa8946524532---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffa8946524532&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&user=Vidhi+Chugh&userId=f3231bce2410&source=-----fa8946524532---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffa8946524532&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fa8946524532--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ffa8946524532&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----fa8946524532---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----fa8946524532--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----fa8946524532--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----fa8946524532--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----fa8946524532--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----fa8946524532--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----fa8946524532--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----fa8946524532--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----fa8946524532--------------------------------", "anchor_text": ""}, {"url": "https://vidhi-chugh.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://vidhi-chugh.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Vidhi Chugh"}, {"url": "https://vidhi-chugh.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "273 Followers"}, {"url": "https://allaboutscale.com/", "anchor_text": "https://allaboutscale.com/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff3231bce2410&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&user=Vidhi+Chugh&userId=f3231bce2410&source=post_page-f3231bce2410--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F924994da204f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-everyday-fa8946524532&newsletterV3=f3231bce2410&newsletterV3Id=924994da204f&user=Vidhi+Chugh&userId=f3231bce2410&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}