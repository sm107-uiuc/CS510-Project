{"url": "https://towardsdatascience.com/rollingstone-for-medium-f1f638b9568e", "time": 1683011458.585553, "path": "towardsdatascience.com/rollingstone-for-medium-f1f638b9568e/", "webpage": {"metadata": {"title": "What Makes a Song Great? Part 1. Analyzing Rolling Stone\u2019s 500 Greatest\u2026 | by Bernardino Sassoli | Towards Data Science", "h1": "What Makes a Song Great? Part 1", "description": "Using Python to analyse a list of the greatest 500 songs of all time."}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/tagged/what-makes-a-song-great", "anchor_text": "series of three articles", "paragraph_index": 0}, {"url": "https://www.rollingstone.com/music/music-lists/500-greatest-songs-of-all-time-151127/", "anchor_text": "The greatest 500 songs of all time", "paragraph_index": 3}, {"url": "https://www.rollingstone.com/music/music-lists/500-greatest-songs-of-all-time-151127/", "anchor_text": "our list", "paragraph_index": 7}, {"url": "https://www.crummy.com/software/BeautifulSoup/bs4/doc/", "anchor_text": "BeautifulSoup", "paragraph_index": 10}, {"url": "https://selenium-python.readthedocs.io", "anchor_text": "Selenium", "paragraph_index": 10}, {"url": "https://en.wikipedia.org/wiki/Regular_expression", "anchor_text": "Regular Expression", "paragraph_index": 14}, {"url": "https://regex101.com", "anchor_text": "this", "paragraph_index": 16}, {"url": "https://www.datacamp.com/community/tutorials/pickle-python-tutorial?utm_source=adwords_ppc&utm_campaignid=898687156&utm_adgroupid=48947256715&utm_device=c&utm_keyword=&utm_matchtype=b&utm_network=g&utm_adpostion=&utm_creative=332602034349&utm_targetid=dsa-429603003980&utm_loc_interest_ms=&utm_loc_physical_ms=1008463&gclid=EAIaIQobChMIo5LS7Yza6wIV1-vtCh1k1Aa9EAAYASAAEgIAW_D_BwE", "anchor_text": "this", "paragraph_index": 22}], "all_paragraphs": ["[This is the first in a series of three articles]", "[UPDATE Sept. 1st, 2020: since the first publication of this article, Rolling Stone has changed the source code to its page. As a result I have updated the code to allow the retrieval of dynamically generated contents.]", "The standard advice once you have learned some coding and basic data science skills is to do projects, a lot of them. Unfortunately, many of us have a hard time finding just such projects.", "A few days ago, I was going through Rolling Stone\u2019s list of The greatest 500 songs of all time. I began to ask myself: \u2018Who has the most songs in the list?\u2019, or: \u2018Will be skewed towards some decade far in the past, given that probably the critics were not exactly in their 20s?\u2019. I had long been looking for a project that would allow me to combine some web scraping techniques with some Exploratory Data Analysis (EDA): the day after I started this. I had loads of fun doing it: I hope by sharing it you too will learn something and have fun.", "What I will showcase here goes through many libraries, tools, and skill-sets: it\u2019s an end-to-end project that starts with data retrieval and ends with visualizations, touching upon parsing, cleaning, and analyzing data. Some of the things we will be touching on:", "I would consider this project suitable for advanced beginners to intermediate-level coders. Nothing in it is complex per se: but it does involve many diverse areas. Note that some very basic knowledge of HTML and CSS might be useful for the first part.", "First, let\u2019s import the libraries we need.", "Open your browser and navigate to our list. First of all, note that the list is \u2018batched\u2019 in groups of 50. This tells us we will probably need to iterate over different addresses to get our data once we start scraping \u2014 more on that later.", "Scrolling down we find our songs. There are five categories of data we want to retrieve:", "If you ctrl-click (on a Mac) on an element of the page and select Inspect from the menu that pops up, you will see the corresponding HTML highlighted. In this case, to get the artist and the song's title we'll need to look for an element with tag <h2> belonging to the class c-gallery_vertical-album__title.", "Ordinarily, we'd retrieve the page using urllib and pass the results to BeautifulSoup with the parameter html.parser: BeatifulSoup would then parse the HTML we retrieved and allow us to find the elements we identified with the find_all method.However, it turns out that the page is generated dynamically (if you look at the source code you won't find any of those elements). So first we will use Selenium to simulate a browser opening the page and only then retrieve the contents.", "Now using Beautiful Soup\u2019s find_all method, and passing the appropriate CSS identifier, we can retrieve all the items we targeted.", "Ok, we are onto something. Let\u2019s dig further.", "The list\u2019s items contain not just the data we are looking for, but also the HTML tags. To only get the data we use get_text() as follows:", "Darn. A lot of formatting, whitespace, extra-quotes. I chose to use Regular Expression or Regex via the re module to clean the data.", "RegEx is a powerful micro-programming language that proves invaluable to search for patterns of characters in strings. It has a pretty steep learning curve, so I try to use it as often as possible: as they say: practice, practice, practice! (Click below for an intro to RegEx).", "The function strip_extra_chars will take a line from our data and get rid of all the garbage, including those pesky quotes. See the comments in the function for more details, and try this for a great resource to test and learn RegEx.", "We are almost done. Remember how in the beginning we noticed that our web page only contains 50 songs, and hence we need to iterate over the contents? If we inspect the page again by ctrl-clicking on the navigation menu at the top we find that it points to the URLs we'll need. Here we define a get_links function that will store the URLs in a list.", "Then we can easily iterate over the list and retrieve all the data.", "Now that we have our URLs, the next step is storing our data in lists. For each URL we will launch our get_page_sourcefunction, extract the relevant data, and store it. We do that by storing each page's data into two lists: song_all, which contains the artist and the song's title, and other_all, with data on the writers, producers, and release date. By iterating over them we extract the relevant text, strip it of extra characters and formatting by calling our strip_extra_charsfunction and append the result to three empty lists we initialize earlier: one for the artist, one for the title, and one for the other information (which we will parse right next).", "Resorting to Regex and a little string slicing will clean and split the data contained in other. We do this in a split_others function, which we then call in a loop to yield three lists of writers, producers, and release dates.", "That\u2019s it! We have retrieved our data. We can now use a dictionary and pass our data to pandas in order to store it in a dataframe.", "(OPTIONAL: Because scraping is quite time consuming, I am going to store the data we retrieved in a pickle \u2014 this is a good tutorial. To load it back you need to uncomment the section in triple quotes).", "Since we all are curious animals, let\u2019s have a little taste and see who are the artists with most songs and plot the results with matplotlib.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Intellectual omnivore. Philosopher by training, management consultant by trade."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff1f638b9568e&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f1f638b9568e--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f1f638b9568e--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://sassoli.medium.com/?source=post_page-----f1f638b9568e--------------------------------", "anchor_text": ""}, {"url": "https://sassoli.medium.com/?source=post_page-----f1f638b9568e--------------------------------", "anchor_text": "Bernardino Sassoli"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F64ab339d120f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&user=Bernardino+Sassoli&userId=64ab339d120f&source=post_page-64ab339d120f----f1f638b9568e---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff1f638b9568e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff1f638b9568e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/what-makes-a-song-great", "anchor_text": "What Makes a Song Great"}, {"url": "https://unsplash.com/@nataliedivine?utm_source=medium&utm_medium=referral", "anchor_text": "Natalie Cardona"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://towardsdatascience.com/tagged/what-makes-a-song-great", "anchor_text": "series of three articles"}, {"url": "https://www.rollingstone.com/music/music-lists/500-greatest-songs-of-all-time-151127/", "anchor_text": "The greatest 500 songs of all time"}, {"url": "https://www.rollingstone.com/music/music-lists/500-greatest-songs-of-all-time-151127/", "anchor_text": "our list"}, {"url": "https://www.crummy.com/software/BeautifulSoup/bs4/doc/", "anchor_text": "BeautifulSoup"}, {"url": "https://selenium-python.readthedocs.io", "anchor_text": "Selenium"}, {"url": "https://en.wikipedia.org/wiki/Regular_expression", "anchor_text": "Regular Expression"}, {"url": "https://medium.com/better-programming/introduction-to-regex-8c18abdd4f70", "anchor_text": "Introduction to RegexStep by step introduction to regular expression using Pythonmedium.com"}, {"url": "https://regex101.com", "anchor_text": "this"}, {"url": "https://www.datacamp.com/community/tutorials/pickle-python-tutorial?utm_source=adwords_ppc&utm_campaignid=898687156&utm_adgroupid=48947256715&utm_device=c&utm_keyword=&utm_matchtype=b&utm_network=g&utm_adpostion=&utm_creative=332602034349&utm_targetid=dsa-429603003980&utm_loc_interest_ms=&utm_loc_physical_ms=1008463&gclid=EAIaIQobChMIo5LS7Yza6wIV1-vtCh1k1Aa9EAAYASAAEgIAW_D_BwE", "anchor_text": "this"}, {"url": "https://medium.com/tag/python?source=post_page-----f1f638b9568e---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/web-scraping?source=post_page-----f1f638b9568e---------------web_scraping-----------------", "anchor_text": "Web Scraping"}, {"url": "https://medium.com/tag/data-science?source=post_page-----f1f638b9568e---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/music?source=post_page-----f1f638b9568e---------------music-----------------", "anchor_text": "Music"}, {"url": "https://medium.com/tag/what-makes-a-song-great?source=post_page-----f1f638b9568e---------------what_makes_a_song_great-----------------", "anchor_text": "What Makes A Song Great"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff1f638b9568e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&user=Bernardino+Sassoli&userId=64ab339d120f&source=-----f1f638b9568e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff1f638b9568e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&user=Bernardino+Sassoli&userId=64ab339d120f&source=-----f1f638b9568e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff1f638b9568e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f1f638b9568e--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff1f638b9568e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f1f638b9568e---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f1f638b9568e--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f1f638b9568e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f1f638b9568e--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f1f638b9568e--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f1f638b9568e--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f1f638b9568e--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f1f638b9568e--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f1f638b9568e--------------------------------", "anchor_text": ""}, {"url": "https://sassoli.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://sassoli.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Bernardino Sassoli"}, {"url": "https://sassoli.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "30 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F64ab339d120f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&user=Bernardino+Sassoli&userId=64ab339d120f&source=post_page-64ab339d120f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F9f83c916c40a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frollingstone-for-medium-f1f638b9568e&newsletterV3=64ab339d120f&newsletterV3Id=9f83c916c40a&user=Bernardino+Sassoli&userId=64ab339d120f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}