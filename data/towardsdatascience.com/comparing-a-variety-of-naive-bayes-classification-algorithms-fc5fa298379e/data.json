{"url": "https://towardsdatascience.com/comparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e", "time": 1683003937.1054778, "path": "towardsdatascience.com/comparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e/", "webpage": {"metadata": {"title": "Comparing a variety of Naive Bayes classification algorithms | by Pavlo Horbonos | Towards Data Science", "h1": "Comparing a variety of Naive Bayes classification algorithms", "description": "Naive Bayes algorithm is one of the well-known supervised classification algorithms. It bases on the Bayes theorem, it is very fast and good enough for text classification. I believe that there is no\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Bayes%27_theorem", "anchor_text": "Bayes theorem", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/Naive_Bayes_classifier", "anchor_text": "the theory", "paragraph_index": 0}, {"url": "https://scikit-learn.org/stable/modules/naive_bayes.html", "anchor_text": "sklearn library", "paragraph_index": 9}, {"url": "https://archive.ics.uci.edu/ml/datasets/sms+spam+collection", "anchor_text": "the UCI Machine Learning Repository", "paragraph_index": 9}, {"url": "https://twitter.com/MidvelCorp", "anchor_text": "https://twitter.com/MidvelCorp", "paragraph_index": 33}, {"url": "https://blaize.tech/", "anchor_text": "https://blaize.tech/", "paragraph_index": 33}], "all_paragraphs": ["Naive Bayes algorithm is one of the well-known supervised classification algorithms. It bases on the Bayes theorem, it is very fast and good enough for text classification. I believe that there is no need to describe the theory behind it, nevertheless, we will cover a few concepts and after that focus on the comparing of different implementations.", "Firstly, we take the Bayes formula itself:", "What does it mean? Since it may be confusing, we will switch a look. We will talk about the classes of events in terms of spam messages. So now we have two classes of events: spam message and not-spam message.", "Let\u2019s change A to an event of getting spam (y) and B to a message which consists of a set of words (x1, x2, \u2026). So:", "Now it is more obvious: the probability of a message with words (x1, x2,\u2026) to be spam equals the general probability of getting spam, multiplied with the probability of spam to contain the mentioned words and divided by the probability of any incoming message to contain the given words.", "Naive Bayes theorem says, that the probabilities of all the events in (x1, x2, \u2026) set may be treated as independent, so:", "This is still a bit complex formula, but we can simplify it. Obviously, we need to calculate the probability of a message to be spam and the probability of a message to not be spam. As we need to compare both values and since they are in the same field and have equal divider (P(x1, x2, \u2026)) we can work only with the numerator:", "We can find the general probability of getting spam from a dataset just from the distribution. So, the main problem is to find the conditional probabilities of every word to appear in the spam message (P(xi | y)). That is almost the single difference between the implementations of the Naive Bayes algorithm.", "I have already built the implementation of an algorithm from scratch:", "Though, let\u2019s now investigate the abilities of the sklearn library. For our purpose, we will use the collection of SMS messages, which was put together by Tiago A. Almeida and Jos\u00e9 Mar\u00eda G\u00f3mez Hidalgo. It is free and can be downloaded from the UCI Machine Learning Repository. It contains 5572 records of different messages together with 747 spam messages.", "We split every message to a set of words and encode the labels. After that, we split the dataset to the train and the test parts.", "The next step is the most important: we turn the train part to the vocabulary and count the repetitions of every vocabulary word in every message (in both train and test parts):", "Now the dataset is ready for the model creation.", "This approach is built on the assumption of a normal distribution of probabilities. It means, that spam and not-spam classes of messages have frequencies of the words from vocabulary distributed by the Gaussian law:", "The formula is based on the mean (\u03bc) and Bessel corrected variance (\u03c3) of the frequency of each word in the class of messages.", "The result is 91.03% of model accuracy. It is good enough, but shows, that words have not completely Gaussian distributions.", "Multinomial classification suits best for the discrete values like word counts. So we expect it to show the best accuracy. In this case distribution of probabilities for each event bases on the formula:", "Ny is the total number of features of the event y (total number of words in all spam messages), Nyi \u2014 count of each feature (summary number of repetitions of a word in all spam messages), n \u2014 the number of features (number of words in the vocabulary) and \u03b1 is a smoothing Laplace parameter to discard the influence of words absent in the vocabulary. The same formula applies to the set of not-spam messages.", "Model accuracy is 99.19%, which is (spoiler) the highest among the tested models including the custom one.", "This approach is almost the same as the Multinomial, though now we count the occurrences of a word in the complement to the class. For example, for the spam message we will count the repetitions of each word in all the non-spam messages:", "Nc \u2014 total number of words in the opposite class (for the spam parameter \u2014 number of non-spam words), Nci \u2014 repetitions of a word in the opposite class (for a word from spam message \u2014 the number of repetitions in all non-spam messages). We also use the same smoothing parameters. After the calculation of basic values we start working with the real parameters:", "It is the weight for each word in the message of k words. The final decision is calculated by the formula:", "So, the classification result is the class with the minimum value of the sum of weights for each word in the message.", "We have got 98.12% of correct predictions, which is a significantly high result.", "Bernoulli formula is close to the multinomial one, though the input is the set of boolean values (the word is present in the message or not) instead of the set of frequencies.", "So, the algorithm explicitly penalizes the non-occurrence of a feature (word in the message is absent in the vocabulary) while the multinomial approach uses the smoothing parameter for the absent values. sklearn Bernoulli algorithm binarizes input values, so, no additional actions required.", "We have got 98.30% of correct predictions", "Categorical Naive Bayes is suitable for the categorical values \u2014 if the example has the set of features or not. In our case, it means, that the vocabulary is treated as the set of features, and the occurrence of a word in the message is treated as the matching with the feature. All formulas are the same as for the multinomial approach but with the occurrences instead of repetitions.", "Since the algorithm needs categorical values, we convert the frequencies of words to the presence of words: 1 \u2014 the message contains the word, 0 \u2014 the word is absent in the message.", "Now we apply the model to the updated dataset:", "In the article we have acquainted with several Naive Bayes algorithms, have understood the math behind them and have tested the formulas. The results talk by themselves. You can find Jupyter notebook with all the working models on my Github:", "Also, take a look at the implementation of a custom algorithm from scratch without any library with models:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Art & Code | https://twitter.com/MidvelCorp \ud83d\udcbb| Head of Blockchain Security in https://blaize.tech/ | web3 and blockchain enthusiast and researcher"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ffc5fa298379e&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----fc5fa298379e--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fc5fa298379e--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@midvel.corp?source=post_page-----fc5fa298379e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@midvel.corp?source=post_page-----fc5fa298379e--------------------------------", "anchor_text": "Pavlo Horbonos"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7154b5bfb5f6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&user=Pavlo+Horbonos&userId=7154b5bfb5f6&source=post_page-7154b5bfb5f6----fc5fa298379e---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffc5fa298379e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffc5fa298379e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@fempreneurstyledstock?utm_source=medium&utm_medium=referral", "anchor_text": "Leone Venter"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://en.wikipedia.org/wiki/Bayes%27_theorem", "anchor_text": "Bayes theorem"}, {"url": "https://en.wikipedia.org/wiki/Naive_Bayes_classifier", "anchor_text": "the theory"}, {"url": "https://towardsdatascience.com/how-to-build-and-apply-naive-bayes-classification-for-spam-filtering-2b8d3308501", "anchor_text": "How to build and apply Naive Bayes classification for spam filteringA simple implementation of the effective modeltowardsdatascience.com"}, {"url": "https://scikit-learn.org/stable/modules/naive_bayes.html", "anchor_text": "sklearn library"}, {"url": "https://archive.ics.uci.edu/ml/datasets/sms+spam+collection", "anchor_text": "the UCI Machine Learning Repository"}, {"url": "https://github.com/Midvel/medium_jupyter_notes/blob/master/scikit_bayes/scikit-bayes.ipynb", "anchor_text": "Midvel/medium_jupyter_notesPermalink Dismiss GitHub is home to over 40 million developers working together to host and review code, manage\u2026github.com"}, {"url": "https://towardsdatascience.com/how-to-build-and-apply-naive-bayes-classification-for-spam-filtering-2b8d3308501", "anchor_text": "How to build and apply Naive Bayes classification for spam filteringA simple implementation of the effective modeltowardsdatascience.com"}, {"url": "https://medium.com/tag/data-science?source=post_page-----fc5fa298379e---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----fc5fa298379e---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/classification?source=post_page-----fc5fa298379e---------------classification-----------------", "anchor_text": "Classification"}, {"url": "https://medium.com/tag/python?source=post_page-----fc5fa298379e---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----fc5fa298379e---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffc5fa298379e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&user=Pavlo+Horbonos&userId=7154b5bfb5f6&source=-----fc5fa298379e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffc5fa298379e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&user=Pavlo+Horbonos&userId=7154b5bfb5f6&source=-----fc5fa298379e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffc5fa298379e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fc5fa298379e--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ffc5fa298379e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----fc5fa298379e---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----fc5fa298379e--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----fc5fa298379e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----fc5fa298379e--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----fc5fa298379e--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----fc5fa298379e--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----fc5fa298379e--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----fc5fa298379e--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----fc5fa298379e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@midvel.corp?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@midvel.corp?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Pavlo Horbonos"}, {"url": "https://medium.com/@midvel.corp/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "406 Followers"}, {"url": "https://twitter.com/MidvelCorp", "anchor_text": "https://twitter.com/MidvelCorp"}, {"url": "https://blaize.tech/", "anchor_text": "https://blaize.tech/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7154b5bfb5f6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&user=Pavlo+Horbonos&userId=7154b5bfb5f6&source=post_page-7154b5bfb5f6--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F6a79629f6cc9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcomparing-a-variety-of-naive-bayes-classification-algorithms-fc5fa298379e&newsletterV3=7154b5bfb5f6&newsletterV3Id=6a79629f6cc9&user=Pavlo+Horbonos&userId=7154b5bfb5f6&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}