{"url": "https://towardsdatascience.com/5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee", "time": 1683011160.073788, "path": "towardsdatascience.com/5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee/", "webpage": {"metadata": {"title": "5 best practices for Professional Object-Oriented Programming in Python | by Sohit Miglani | Towards Data Science", "h1": "5 best practices for Professional Object-Oriented Programming in Python", "description": "Building Python classes are always fun. But packaging them properly for efficiency, external use, and documentation is very important. In this article, I\u2019ll cover five best practices to document\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.programiz.com/python-programming/exceptions", "anchor_text": "here.", "paragraph_index": 6}, {"url": "https://pypi.org/project/autopep8/#usage", "anchor_text": "here.", "paragraph_index": 17}, {"url": "https://realpython.com/python-data-classes/", "anchor_text": "here.", "paragraph_index": 22}, {"url": "https://www.linkedin.com/in/sohitmiglani/", "anchor_text": "LinkedIn here", "paragraph_index": 23}, {"url": "http://www.sohitmiglani.com", "anchor_text": "www.sohitmiglani.com", "paragraph_index": 25}], "all_paragraphs": ["Building Python classes are always fun. But packaging them properly for efficiency, external use, and documentation is very important. In this article, I\u2019ll cover five best practices to document, maintain, and test your Python classes. These methods include the best ways to handle exceptions, write documentation and doctests, decorators for class inheritance and data management, abstract classes and automated packages to clean and format your code.", "Building a Python class is cool. But it is also important to make sure that you\u2019re raising the right errors when incorrect inputs are fed into your function. Here\u2019s an example: Imagine that you\u2019re building a function to accept an integer \u2018n\u2019 and you build an array of size n X n with it. Here\u2019s what the code would look like:", "Now, let\u2019s run the function but we\u2019ll input a string \u2018a\u2019 instead of an integer. Here\u2019s what we get:", "The TypeError isn\u2019t the most intuitive message to help debug the issue, especially if your package is going to be used by a wide audience. Let\u2019s change things a little bit in our original code.", "The above code checks if the input integer is an integer or not. If it\u2019s not, it raises a TypeError with a tailored message. It also checks if the integer is non-negative. If it\u2019s not, it raises a ValueError that the user must provide a positive integer.", "Why is this important? Raising intuitive messages of the right type is extremely important for building a package that is easy to debug. If users can\u2019t understand or debug your package\u2019s requirements, they just won\u2019t use it.", "There are all kinds of inbuilt errors that a user can raise such as SystemError, FileNotFoundError, etc. You can read more about them here. By debugging these errors, the user builds use cases for the package. This brings us to the next step \u2014 Documentation.", "Once upon a time, we used to write comments in our code to explain it properly. But comments aren\u2019t the most structured or visually appealing way to document workflows. You should use structured documentation with three apostrophes to write structured documentation for your code. Here\u2019s an example:", "In the code above, we\u2019ve transferred all the information to a paragraph that we wrote at the beginning of the function. All of the information is contained within three apostrophes at the beginning and three at the end. Most Python packages are documented with this technique.", "In most python documentation, developers also include documented use cases for the function. These use cases are also used as \u2018tests\u2019 to make sure that the function provides the right kind of responses. With the documentation technique that we learned above, we can also write doc tests that are used as both use cases and also tests that you can run on your function. In these tests, we specify the expected output. If the actual output doesn\u2019t match the expected output, the doctest fails. Here\u2019s an example of doctests in a function that generates a random id:", "In the documentation above, the doctests are denoted by the sign \u2018>>>\u2019. The python code after that sign is executed by the doctests compiler. The expected output is denoted below that line. If it\u2019s an error, It is denoted in the second doctest as shown above. Let\u2019s take this file and run it with the doctest library.", "You need to add the following code at the end of the .py file that contains the above code:", "Now, let\u2019s run the doctest with the following bash command: (I\u2019ve named my file as random_id.py)", "So our code passed all the doc tests. But these doc tests were very simple. You can write more complicated doc tests as well. As you keep editing and maintaining Python classes, it is important to make sure that there aren\u2019t any bugs or problems that would lead to the failure of a doc test.", "The pep8 guidelines are coding conventions for Python packages. While these conventions aren\u2019t strict and they don\u2019t affect the correctness of the code, they are valuable in publishing code that is easy to read, understand, and maintain. Some of the most prominent guidelines are as follows:", "But you don\u2019t have to manually implement all these guidelines. There is a python package called pycodestyle that takes a python file as an input and highlights every issue with it.", "Let's run pycodestyle in the same random_id.py file. The message highlights that there aren\u2019t enough lines between two functions (recommended blank lines is 2) and Line 6 is too long.", "You can also run a package called autopep8 that takes a python file and automatically reformats it according to pep8 guidelines. Learn more about the usage of autpep8 here.", "In object-oriented programming, one should reduce the amount of coding that they would have to do. This means that a coder should build classes that are abstract and more generally applicable to a wide range of objects. For example \u2014 I\u2019m building a simulation of a table and I need to write code to simulate objects for a Pen, a Notebook, a Pencil, a Rubber, a Sharpener amongst others. But we\u2019re not going to write another class for every single object. We\u2019ll write an abstract class called \u2018Table_Object\u2019 as follows:", "The abstractclass decorator is a special function that denotes the type of the object. Now, let\u2019s define another class that inherits all the data from this class with a specific function for object_type.", "Here, we\u2019ve defined two classes that \u2018inherit\u2019 from the Table_Object class and then become specialized inherited classes connected to the main idea of being a Table Object. Class inheritance allows for a reduction in code repetitiveness and also allows for a hierarchy of classes that makes sense to a coder who is not an expert.", "The \u2018@\u2019 sign that you saw in the Table_Object is called a decorator. A decorator is simply another function that allows you to add a special feature to a different function. There is another decorator in Python classes called the static method. These methods are \u2018static\u2019 and do not inherit the class when called. They\u2019re usually used to keep a part of the class unaffected by changes.", "For specialized data-powered classes, you should use the dataclass decorators. Read more about them here.", "I hope you enjoyed reading this article. Feel free to reach out to me on LinkedIn here if you have any questions. Happy coding!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "PhD Student @ Princeton | Class of 2020 @MinervaSchools | Plant Dad | www.sohitmiglani.com | @sohitmiglani"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F20613e08baee&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----20613e08baee--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----20613e08baee--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@sohitmiglani?source=post_page-----20613e08baee--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sohitmiglani?source=post_page-----20613e08baee--------------------------------", "anchor_text": "Sohit Miglani"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F59d51c87c11a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&user=Sohit+Miglani&userId=59d51c87c11a&source=post_page-59d51c87c11a----20613e08baee---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F20613e08baee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F20613e08baee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/photos/D9Zow2REm8U", "anchor_text": "Unsplash"}, {"url": "https://www.programiz.com/python-programming/exceptions", "anchor_text": "here."}, {"url": "https://pypi.org/project/autopep8/#usage", "anchor_text": "here."}, {"url": "https://realpython.com/python-data-classes/", "anchor_text": "here."}, {"url": "https://www.linkedin.com/in/sohitmiglani/", "anchor_text": "LinkedIn here"}, {"url": "https://medium.com/tag/python?source=post_page-----20613e08baee---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/object-oriented?source=post_page-----20613e08baee---------------object_oriented-----------------", "anchor_text": "Object Oriented"}, {"url": "https://medium.com/tag/python-programming?source=post_page-----20613e08baee---------------python_programming-----------------", "anchor_text": "Python Programming"}, {"url": "https://medium.com/tag/python3?source=post_page-----20613e08baee---------------python3-----------------", "anchor_text": "Python3"}, {"url": "https://medium.com/tag/object-oriented-design?source=post_page-----20613e08baee---------------object_oriented_design-----------------", "anchor_text": "Object Oriented Design"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F20613e08baee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&user=Sohit+Miglani&userId=59d51c87c11a&source=-----20613e08baee---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F20613e08baee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&user=Sohit+Miglani&userId=59d51c87c11a&source=-----20613e08baee---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F20613e08baee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----20613e08baee--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F20613e08baee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----20613e08baee---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----20613e08baee--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----20613e08baee--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----20613e08baee--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----20613e08baee--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----20613e08baee--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----20613e08baee--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----20613e08baee--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----20613e08baee--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sohitmiglani?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sohitmiglani?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sohit Miglani"}, {"url": "https://medium.com/@sohitmiglani/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "217 Followers"}, {"url": "http://www.sohitmiglani.com", "anchor_text": "www.sohitmiglani.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F59d51c87c11a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&user=Sohit+Miglani&userId=59d51c87c11a&source=post_page-59d51c87c11a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fc45e0afbd32f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-best-practices-for-professional-object-oriented-programming-in-python-20613e08baee&newsletterV3=59d51c87c11a&newsletterV3Id=c45e0afbd32f&user=Sohit+Miglani&userId=59d51c87c11a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}