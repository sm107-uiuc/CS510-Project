{"url": "https://towardsdatascience.com/building-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222", "time": 1683007853.481759, "path": "towardsdatascience.com/building-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222/", "webpage": {"metadata": {"title": "Building a Rock Paper Scissors AI using Tensorflow and OpenCV with Python | by Manas Acharya | Towards Data Science", "h1": "Building a Rock Paper Scissors AI using Tensorflow and OpenCV with Python", "description": "A fun Deep Learning based implementation of the age of game of Rock Paper Scissors. Using Tensorflow, Keras and OpenCV using Python."}, "outgoing_paragraph_urls": [{"url": "https://github.com/HOD101s/RockPaperScissor-AI-", "anchor_text": "Github", "paragraph_index": 0}, {"url": "https://github.com/HOD101s/RockPaperScissor-AI-", "anchor_text": "Github repo", "paragraph_index": 4}, {"url": "https://github.com/HOD101s/RockPaperScissor-AI-", "anchor_text": "Github repo", "paragraph_index": 7}, {"url": "https://www.geeksforgeeks.org/python-opencv-cv2-imread-method/", "anchor_text": "cv2.imread()", "paragraph_index": 9}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/applications", "anchor_text": "applications api", "paragraph_index": 10}, {"url": "https://ruder.io/transfer-learning/", "anchor_text": "article", "paragraph_index": 13}, {"url": "https://medium.com/@RaghavPrabhu/understanding-of-convolutional-neural-network-cnn-deep-learning-99760835f148", "anchor_text": "visit", "paragraph_index": 14}, {"url": "https://github.com/HOD101s/RockPaperScissor-AI-", "anchor_text": "GitHub repo", "paragraph_index": 16}, {"url": "https://github.com/HOD101s/RockPaperScissor-AI-/blob/master/play.py", "anchor_text": "here", "paragraph_index": 22}, {"url": "https://github.com/HOD101s/RockPaperScissor-AI-", "anchor_text": "implementation", "paragraph_index": 23}], "all_paragraphs": ["Code for this project can be found at my Github", "The basis of this project was to experiment with Deep Learning and Image Classification with the aim of building a simple yet fun iteration of the infamous Rock Paper Scissors game. I\u2019d like to start off by saying this project is a product of my boredom through the COVID19 Quarantine Period in May, hopefully, by the time you\u2019re reading this, things are back to normal. Through the course of this explanation, my aim is to explain the fundamentals of this project in simple terms aimed towards beginners. So let's begin...", "While building any sort of Deep Learning application there are 3 major steps :", "2. Building a suitable AI Model", "The entire project refers to and goes hand in hand with my Github repo so do keep this ready for reference.", "The basis of any Deep Learning model is DATA. Any Machine Learning Engineer would agree that in ML the data is far more crucial than the algorithm itself. We need to collect images for the symbols Rock, Paper and Scissor. Instead of downloading somebody else\u2019s data and training on it, I made my own dataset and encourage you to build your own too. Later on try changing the data and re-training the model to see the grave impact data has on a Deep Learning model.", "I have used Python\u2019s OpenCV library for all camera related operations. So label here refers to what class the image belongs too ie. RPS and depending on the label the image is saved in the appropriate directory. ct and maxCt refers to the start and final index to save images with. Remaining is standard OpenCV code to get webcam feed and save images to a directory. A key point to note is that all my images are of 300 x 300 dimensions. After running this my directory tree looks like this.", "If you are referring the Github repo getData.py does the job for you !!", "A computer understands numbers and we have images at our disposal. Thus, we will convert all the images into their respective vector representations. Also, our labels are yet to be generated and as established labels can\u2019t be text, so I\u2019ve manually built One-Hot-Encoded representations for each class using the shape_to_label dictionary.", "As we have saved our images in directories based on their classes the directory name serves as the label which is converted to One-Hot representation using the shape_to_label dictionary. Following that we iterate over the files in our system to access images, the cv2.imread() function returns a vector representation of image. We do some manual Data Augmentation by flipping the image and zooming into it. This increases our dataset size without having the need to take new photos. Data Augmentation is a crucial part to generating datasets. Finally the images and labels are stored in separate numpy arrays.", "When it comes to working with image data there are many pre-trained models available that have been trained on datasets with thousands of labels that are available at our disposal thanks to Tensorflow and Keras distributions of these models via their applications api. This makes including these pre-trained models in our applications seem like a breeze!", "In a gist, Transfer learning takes a pre-trained model and does not include its final layers that make the final prediction thereby leaving us with the powerful part of the model that can distinguish features in images for this case and pass this information to our own Dense Neural Network.", "Why not train your own model? Its totally up to you!! However using transfer learning can at many times make your progress a lot faster, in a sense you\u2019re avoiding re-inventing the wheel.", "Here\u2019s an interesting article on Transfer Learning!", "Note : Whenever we work with image data the use of Data Convolutional Neural Layers is almost a given. The transfer Learning model used here has these layers. For more info on CNNs visit.", "I\u2019ve used the DenseNet121 model for feature extraction whose outputs will eventually be entered in my own Dense Neural Network.", "If you\u2019re referring the GitHub repo train.py takes care of Data Preparation and model training!", "By this point, we have gathered our data, built and trained our model. The only part left is deployment using OpenCV.", "The flow for this implementation is simple:", "Above snippet contains the rather important blocks of code, remaining part is just making the game user-friendly, RPS rules and scoring.", "So we begin with loading our trained model. Next comes a stone age for-loop implementation that shows a countdown before beginning the prediction part of the program. After prediction the scores are updated based on the players moves.", "We explicitly draw a target zone using cv2.rectangle(). Only this part of the frame is passed to the model for predictions after it is pre-processed using the prepImg() function.", "The entire play.py code is available here on my repo.", "We\u2019ve successfully implemented and understood the workings of this project. So go ahead and fork my implementation and experiment with it. A major improvement would probably be adding hand detection so we don\u2019t need to explicitly draw a target zone and model would first detect hand position then make a prediction. I\u2019ve tried to keep my language as beginner-friendly as possible if you still have any questions do comment. I encourage you to improve the project and send me your suggestions. Excelsior!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Machine Learning Engineer | AI Enthusiast"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd5fc44fc8222&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@manasbass.99?source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@manasbass.99?source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": "Manas Acharya"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff334c558129c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&user=Manas+Acharya&userId=f334c558129c&source=post_page-f334c558129c----d5fc44fc8222---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd5fc44fc8222&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd5fc44fc8222&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.esquireme.com/content/20945-how-to-win-at-rock-paper-scissors", "anchor_text": "EsquireME"}, {"url": "https://github.com/HOD101s/RockPaperScissor-AI-", "anchor_text": "Github"}, {"url": "https://github.com/HOD101s/RockPaperScissor-AI-", "anchor_text": "HOD101s/RockPaperScissor-AI-This Repo is aimed at beginers who want to try and build their own bots with ease. So lets begin! The basis of any\u2026github.com"}, {"url": "https://github.com/HOD101s/RockPaperScissor-AI-", "anchor_text": "Github repo"}, {"url": "https://pixabay.com/users/SookyungAn-6281801/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=2704015", "anchor_text": "Sookyung An"}, {"url": "https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=2704015", "anchor_text": "Pixabay"}, {"url": "https://github.com/HOD101s/RockPaperScissor-AI-", "anchor_text": "Github repo"}, {"url": "https://www.geeksforgeeks.org/python-opencv-cv2-imread-method/", "anchor_text": "cv2.imread()"}, {"url": "https://towardsdatascience.com/data-augmentation-for-deep-learning-4fe21d1a4eb9", "anchor_text": "here"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/applications", "anchor_text": "applications api"}, {"url": "https://mc.ai/transfer-learning-with-deep-learning-machine-learning-techniques/", "anchor_text": "lorenzo famiglini"}, {"url": "https://ruder.io/transfer-learning/", "anchor_text": "article"}, {"url": "https://medium.com/@RaghavPrabhu/understanding-of-convolutional-neural-network-cnn-deep-learning-99760835f148", "anchor_text": "visit"}, {"url": "https://gifer.com/", "anchor_text": "Gifer"}, {"url": "https://github.com/HOD101s/RockPaperScissor-AI-", "anchor_text": "GitHub repo"}, {"url": "https://medium.com/@manasbass.99", "anchor_text": "Manas Acharya"}, {"url": "https://github.com/HOD101s/RockPaperScissor-AI-/blob/master/play.py", "anchor_text": "here"}, {"url": "https://github.com/HOD101s/RockPaperScissor-AI-", "anchor_text": "implementation"}, {"url": "https://www.linkedin.com/in/manas-acharya/", "anchor_text": "Manas Acharya - Machine Learning Engineer - KubixSquare | LinkedInMachine Learning and Data Science Enthusiast who has worked as a Full Stack Developer with experience in Front End Web\u2026www.linkedin.com"}, {"url": "https://medium.com/@manasbass.99/facemask-detection-using-tensorflow-and-opencv-824b69cad837", "anchor_text": "FaceMask Detection using Tensorflow and OpenCVEffective realtime facemask detection \u2026.medium.com"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----d5fc44fc8222---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----d5fc44fc8222---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/tag/tensorflow?source=post_page-----d5fc44fc8222---------------tensorflow-----------------", "anchor_text": "TensorFlow"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----d5fc44fc8222---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/tag/transfer-learning?source=post_page-----d5fc44fc8222---------------transfer_learning-----------------", "anchor_text": "Transfer Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd5fc44fc8222&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&user=Manas+Acharya&userId=f334c558129c&source=-----d5fc44fc8222---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd5fc44fc8222&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&user=Manas+Acharya&userId=f334c558129c&source=-----d5fc44fc8222---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd5fc44fc8222&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd5fc44fc8222&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d5fc44fc8222---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d5fc44fc8222--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@manasbass.99?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@manasbass.99?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Manas Acharya"}, {"url": "https://medium.com/@manasbass.99/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "28 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff334c558129c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&user=Manas+Acharya&userId=f334c558129c&source=post_page-f334c558129c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2Ff334c558129c%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-rock-paper-scissors-ai-using-tensorflow-and-opencv-d5fc44fc8222&user=Manas+Acharya&userId=f334c558129c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}