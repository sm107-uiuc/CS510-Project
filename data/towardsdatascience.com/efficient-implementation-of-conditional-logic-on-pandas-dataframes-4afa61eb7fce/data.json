{"url": "https://towardsdatascience.com/efficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce", "time": 1683015930.89029, "path": "towardsdatascience.com/efficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce/", "webpage": {"metadata": {"title": "Conditionally Create or Assign Columns on Pandas DataFrames | by Louis Chan | Towards Data Science", "h1": "Efficient Implementation of Conditional Logic on Pandas DataFrames", "description": "How to efficently create and assign values to pandas column conditionally in python?"}, "outgoing_paragraph_urls": [{"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html", "anchor_text": ".apply()", "paragraph_index": 6}], "all_paragraphs": ["Python, arguably the coolest programming language these days (thanks for Machine Learning and Data Science), is not very well known for its efficiency when compared with one of the best programming language \u2014 C. An example of this would be conditional logics. When developing machine learning models, it is quite common that we would need to programmatically update labels based on hard-coded rules derived from statistical analysis or findings of the previous iteration. No shame in admitting it: I have been coding it with Pandas apply until one day I grew so fed up with the nested block that I decided to research (a.k.a Google) into alternative, more maintainable and more efficient ways of doing it (a.k.a basically any other ways of doing it)", "The dataset that we are going to use is the iris dataset, which you would be able to get it for free via either pandas or seaborn.", "Let\u2019s say that after our initial analysis, we want to label the dataset with the following logic:", "Before we dive into the code, let\u2019s also quickly set a new label column to None:", "If you are still using this, this blog post is definitely the right place for you!", "And the time it takes to run\u2026 Okay, let\u2019s move on\u2026", "Pandas .apply(), straightforward, is used to apply a function along an axis of the DataFrame or on values of Series. For example, if we have a function f that sum an iterable of numbers (i.e. can be a list, np.array, tuple, etc.), and pass it to a dataframe like below, we will be summing across a row:", "In the above snippet, axis=1 indicates the direction of applying the function. .apply() would by default has axis=0, i.e. apply the function column by column; while axis=1 would apply the function row by row.", "Now that we have a basic understanding of pandas .apply(), let\u2019s code the logic for assigning the labels and see how long does it run for:", "1.43s for 150,000 rows is a very big improvement from the previous level, but is still definitely very slow. Imagine if you need to handle a dataset of millions of say transaction data or credit approvals, each time we want to apply a set of rules and assign the engineered feature to a column, it would take over 14s. Run it for enough columns, and you can slack and chill for the rest of the afternoon.", "If you are familiar with SQL, assigning values to a new column with .loc[] is literally just an UPDATE statement with a dragon of WHERE conditions. So surely this should scale a lot better than applying a function to each of the rows or columns.", "Now we are spending only one-tenth of the time compared to the previous, which means you have less excuse to leave to desk and start netflix when you are working from home. However, we have only been using pandas built in functions for now. Although pandas gives us a very convenient high level interface to interact with data tables, efficiency may be lost through layers of abstractions.", "Numpy has a lower level interface which allows more efficient interaction with n-dimensional iterables (i.e. vectors, matrix, tensors\u2026). Its methods are more than often C-based and uses optimised algorithms when it comes to more complex computations, making it way faster than our reinvented wheels. According to numpy\u2019s official documentation, np.where() accepts the following syntax:", "In essence, this is a dichotomous logic where a conditional will be evaluated as a boolean and return a value accordingly. The trick under the sleeve here is that the condition can actually be an iterable (i.e. a boolean ndarray type). This means that it is perfectly fine for us to pass in df['feature'] == 1 as the condition, and code the where logic as:", "So you may ask, how can we implement the logic we state above with a bisection function like np.where()? The answer is simple, yet disturbing. Nesting np.where()\u2026 (Spoiler alert: this snippet might be triggering)", "Congrats, you have survived it. I cannot tell you how many times I have spent on counting the closing parentheses, but hey, this gets the job done! We have slashed another 10ms from pandas .loc[]. However, this snippet is simply not maintainable, which means, it is not acceptable.", "Numpy .select(), the function that is intended to implement a multichotomous logic, unlike .where().", "It uses a simular syntax as np.where(), except that the first argument is now a list of conditions, which should have the same length as the choices. One thing to bear in mind when using np.select() is that a choice will be selected as soon as the first condition has been met. This means that if a superset rule comes before a subset rule in the list, the subset choice will never be chosen. To put it in context:", "Because all of the rows that hits df['A'] < 1 will also be captured bydf['A'] <= 1, no rows will end up being labelled as '<1'. To avoid this from happening, please do make sure to have a less specific rule before the more specific ones:", "As you can see from the above, you will need to update both condlist and choicelsit to make sure that the code runs smoothly. But seriously, who has time for that when Netflix is within our hand\u2019s reach? Well, I have got you, pal! By changing it to a dictionary, we will be hitting roughly the same time and memory complexity but with a way more maintainable code snippet:", "About double that of nested np.where(), but not only does this save you from the table flipping parenthesis debugging, but also the absentminded choicelist change. I will be the first to bite the bullet, I have forgotten to update choicelist for way too many time that I have ended up spending more than quadruple the trying to debug my machine learning models. Trust me, np.select() with dict. It is worth it!", "If you are interested in other Python tricks, I have put together a list of these short blogs for you:", "If you want to read more about Python, Data Science, or Machine Learning, you may want to check out these posts:", "If you would like to read more about how to apply machine learning to trading & investing, here are some other posts that may be of interest:", "If possible, go for numba.njit; otherwise, np.select with a dict will help you sail afar, my friends. Remember, every little bit of improvement helps! Let me know if you have learnt something new from this! And please also let me know if there are other neat tricks that I have missed!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Learn from your own mistakes today makes you a better person tomorrow."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F4afa61eb7fce&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://louis-chan.medium.com/?source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": ""}, {"url": "https://louis-chan.medium.com/?source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": "Louis Chan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6d585e26760a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&user=Louis+Chan&userId=6d585e26760a&source=post_page-6d585e26760a----4afa61eb7fce---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4afa61eb7fce&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4afa61eb7fce&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@cdr6934?utm_source=medium&utm_medium=referral", "anchor_text": "Chris Ried"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html", "anchor_text": ".apply()"}, {"url": "https://www.pythonlikeyoumeanit.com/Module3_IntroducingNumpy/VectorizedOperations.html#NumPy%E2%80%99s-Mathematical-Functions", "anchor_text": "here"}, {"url": "http://www.mail-archive.com/numpy-discussion@scipy.org/msg00587.html", "anchor_text": "make code run any faster"}, {"url": "https://numba.pydata.org/numba-doc/dev/user/5minguide.html", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/python-tricks-flattening-lists-75aeb1102337", "anchor_text": "Python Tricks: Flattening Lists"}, {"url": "https://towardsdatascience.com/python-tricks-how-to-check-table-merging-with-pandas-cae6b9b1d540", "anchor_text": "Python Tricks: How to Check Table Merging with Pandas"}, {"url": "https://towardsdatascience.com/python-tricks-simplifying-if-statements-boolean-evaluation-4e10cc7c1e71", "anchor_text": "Python Tricks: Simplifying If Statements & Boolean Evaluation"}, {"url": "https://towardsdatascience.com/python-tricks-check-multiple-variables-against-single-value-18a4d98d79f4", "anchor_text": "Python Tricks: Check Multiple Variables against Single Value"}, {"url": "https://towardsdatascience.com/7-easy-ways-for-improving-your-data-science-workflow-b2da81ea3b2", "anchor_text": "7 Easy Ways for Improving Your Data Science Workflow"}, {"url": "https://towardsdatascience.com/efficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce", "anchor_text": "Efficient Conditional Logic on Pandas DataFrames"}, {"url": "https://towardsdatascience.com/memory-efficiency-of-common-python-data-structures-88f0f720421", "anchor_text": "Memory Efficiency of Common Python Data Structures"}, {"url": "https://towardsdatascience.com/parallelism-with-python-part-1-196f0458ca14", "anchor_text": "Parallelism with Python"}, {"url": "https://towardsdatascience.com/cookiecutter-plugin-for-jupyter-easily-organise-your-data-science-environment-a56f83140f72", "anchor_text": "Essential Jupyter Extension for Data Science Set Up"}, {"url": "https://towardsdatascience.com/mastering-root-searching-algorithms-in-python-7120c335a2a8", "anchor_text": "Efficient Root Searching Algorithms in Python"}, {"url": "https://pub.towardsai.net/genetic-algorithm-for-trading-strategy-optimization-in-python-614eb660990d", "anchor_text": "Genetic Algorithm for Trading Strategy Optimization in Python"}, {"url": "https://medium.com/towards-artificial-intelligence/genetic-algorithm-stop-overfitting-trading-strategies-5df671d5cde1", "anchor_text": "Genetic Algorithm \u2014 Stop Overfitting Trading Strategies"}, {"url": "https://pub.towardsai.net/ann-recommendation-system-for-stock-selection-c9751a3a0520", "anchor_text": "ANN Recommendation System for Stock Selection"}, {"url": "https://www.linkedin.com/in/louis-chan-b55b9287", "anchor_text": "Louis Chan \u2014 Director, Data Science \u2014 FTI Consulting | LinkedInAmbitious, curious and creative individual with a strong belief in inter-connectivity between branches knowledge and a\u2026www.linkedin.com"}, {"url": "https://www.buymeacoffee.com/louischan", "anchor_text": ""}, {"url": "https://medium.com/tag/python?source=post_page-----4afa61eb7fce---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----4afa61eb7fce---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----4afa61eb7fce---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/pandas?source=post_page-----4afa61eb7fce---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/data?source=post_page-----4afa61eb7fce---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4afa61eb7fce&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&user=Louis+Chan&userId=6d585e26760a&source=-----4afa61eb7fce---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4afa61eb7fce&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&user=Louis+Chan&userId=6d585e26760a&source=-----4afa61eb7fce---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4afa61eb7fce&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F4afa61eb7fce&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----4afa61eb7fce---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----4afa61eb7fce--------------------------------", "anchor_text": ""}, {"url": "https://louis-chan.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://louis-chan.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Louis Chan"}, {"url": "https://louis-chan.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "487 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6d585e26760a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&user=Louis+Chan&userId=6d585e26760a&source=post_page-6d585e26760a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fcce7b4f8b91&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fefficient-implementation-of-conditional-logic-on-pandas-dataframes-4afa61eb7fce&newsletterV3=6d585e26760a&newsletterV3Id=cce7b4f8b91&user=Louis+Chan&userId=6d585e26760a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}