{"url": "https://towardsdatascience.com/recommender-systems-in-python-from-scratch-643c8fc4f704", "time": 1683004041.635266, "path": "towardsdatascience.com/recommender-systems-in-python-from-scratch-643c8fc4f704/", "webpage": {"metadata": {"title": "Python: Implementing Matrix Factorization from Scratch! | by Jake | Towards Data Science", "h1": "Python: Implementing Matrix Factorization from Scratch!", "description": "Have you ever wondered how Netflix is able to determine what content you\u2019re likely to enjoy or how Amazon can bring products you\u2019ll likely purchase to your attention? Or if you\u2019re reading this \u2014\u2026"}, "outgoing_paragraph_urls": [{"url": "https://pdfs.semanticscholar.org/7e41/3d5661f185b4f19825da9220535cc04388ae.pdf", "anchor_text": "https://pdfs.semanticscholar.org/7e41/3d5661f185b4f19825da9220535cc04388ae.pdf", "paragraph_index": 1}], "all_paragraphs": ["Have you ever wondered how Netflix is able to determine what content you\u2019re likely to enjoy or how Amazon can bring products you\u2019ll likely purchase to your attention? Or if you\u2019re reading this \u2014 you\u2019re likely very aware that these systems exist but aren\u2019t sure how they function.", "Generally speaking, there are two main approaches to recommender systems: Content based and collaborative. There are, of course, hybrid approaches, and allegedly, a knowledge based system exists, too. See below: https://pdfs.semanticscholar.org/7e41/3d5661f185b4f19825da9220535cc04388ae.pdf", "Without going down any unnecessary rabbit holes, content based means recommending content to you based on its similarities with other content without regarding the preferences of other users. Collaborative is the inverse, it does not concern itself with non-abstract features of an item, but rather uses the wisdom of the crowd to generate recommendations. An example of the former is Pandora\u2019s recommendation system. They (painstakingly) crafted a musical genome of ~400 features. And songs are recommended to users by the degree to which they exhibit these features. (Think genre, song length, artist age, artist race, etc.) Collaborative filtering discovers patterns in user-item preferences and leverages these patterns to generate recommendations. For this article, we\u2019ll focus only on collaborative filtering.", "Within the collaborative filtering ecosystem, there are number of options available. For example, singular value decomposition (SVD) is one of the first such techniques, which (as the name suggests) decomposes the user-item preference matrix into three elements: the user-feature eigenvectors, the feature-item eigenvectors, and a diagonal matrix of eigenvalues. Decomposing a user-item matrix into terms of latent features is extremely useful. Users are understood in terms of the latent features that they prefer while items are understood in terms of the latent features and the degree to which they are present. In other words, distance metrics, such as cosine similarity can be used to compare users directly to items and generate the best match. Sure, you can compare users to users and items to items, but SVD is so much more powerful!", "Another method, which we\u2019ll focus on for the remainder of this article, is gradient descent based matrix factorization. The core idea here is to create parameters and iteratively update them to minimize some cost function. If this sounds like neural networks to you \u2014 you\u2019re on the right track; we\u2019re headed that direction! Note: Deep learning based methods do exist; however, we will not be using neurons or nonlinearities and we certainly will not be chaining multiple layers of neurons together (aka deep learning.)", "Let\u2019s start considering how we will approach this problem, beginning with understanding our parameters, matrix multiplication, and how we might iteratively update these parameters. Let\u2019s consider the below:", "Notice that each cell in both the user-feature matrix and the feature-item matrix is a parameter. (called weights in neural network lingo) We need to update these parameters iteratively through some cost function. But before we can dive into that, we need to know the user-item cells that any given user-feature cell and feature-item cell contribute to. For example, U1F1 and U1F2 contribute to U1I1, U1I2, and U1I3. Matrix multiplication is executed as the dot product of the row from the left matrix with the column of the right matrix. As you\u2019ll see, the row and column indices of the user-item matrix determine the whole row and column selected from the decomposed matrices.", "Let\u2019s consider another example. Notice that user-item cells that I\u2019ve brought your attention to form a single column, not a row. This is because the cells F1I1 and F2I2 contribute to three different cells in the user-item matrix.", "If it\u2019s not obvious yet, we need to update our user-feature and feature-item parameters, but it\u2019s important to note \u2014 each parameter will be updated by the average of three different gradients, each with respect to the given parameter.", "The example below shows just one of the three gradients necessary to update U1F1 ; note that the other two gradients U1I2 and U1I3, each (of course) with respect to U1F1. When we update U1F1 we will average all three of these gradients. The intuition here is that if chased one gradient at a time, we might never converge on the optimal parameter values. By averaging the gradients, we can simultaneously take three steps towards the optimal decision.", "Believe it or not \u2014 we now have all the building blocks we need to code up a matrix factorization solver in python! Let\u2019s see the code. I\u2019ve attached a Google Colab notebook below where you can see and run code to experiment with the results! We\u2019ll dissect the code method by method in the class architecture shortly.", "First, let\u2019s create a class object and initialize its features. I\u2019ve made the design decision of initializing the parameters to default values between 0.1 and 0.9. Additionally, we\u2019ll define the MSE function as detailed earlier.", "Second, let\u2019s find just a single gradient. As detailed earlier this is one user-item cell with respect to one user-feature cell (or one feature-item cell).", "But as we already discussed, it\u2019s not enough to find just one gradient. We must consider the whole row (or whole column) when updating a given parameter.", "Lastly, we need to define a method that trains the model. By default, we\u2019ve set the learning rate to 0.1 and the iterations to 1000. This can be altered in the Google Colab referenced above. You\u2019ll notice that the item feature values are increased in each iteration. Wasn\u2019t the gradient negative? Yes! But in gradient descent, it\u2019s standard to use the notation w -= learning_rate * gradient. In our case, the double negatives simply cancel out.", "Now, let\u2019s verify that our code works! As you can see, with only 2 latent features, there\u2019s only so close we can get to the optimal solution. The error doesn\u2019t reduce beyond ~3.54.", "However, if we add just one more latent feature, we can very closely approach 0 error. In fact, when we multiply the matrices user-features and feature-items, we get the matrix we started with. Isn\u2019t it beautiful!", "I hope you\u2019ve enjoyed today\u2019s article. Please comment below if you\u2019d like to see more content like this!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Amazon Scientist, author/blogger, and continual learner"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F643c8fc4f704&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----643c8fc4f704--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----643c8fc4f704--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@jacob.d.moore1?source=post_page-----643c8fc4f704--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jacob.d.moore1?source=post_page-----643c8fc4f704--------------------------------", "anchor_text": "Jake"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F58a07ece941f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&user=Jake&userId=58a07ece941f&source=post_page-58a07ece941f----643c8fc4f704---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F643c8fc4f704&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F643c8fc4f704&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://pdfs.semanticscholar.org/7e41/3d5661f185b4f19825da9220535cc04388ae.pdf", "anchor_text": "https://pdfs.semanticscholar.org/7e41/3d5661f185b4f19825da9220535cc04388ae.pdf"}, {"url": "https://colab.research.google.com/drive/1X0cFGeY2y8D2OLK4VB8frHkVxCMaBS1s?authuser=1#scrollTo=H5mPYAKPIyfu", "anchor_text": "Google ColaboratoryMatrix Factorization from Scratch colab.research.google.com"}, {"url": "https://medium.com/tag/python?source=post_page-----643c8fc4f704---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----643c8fc4f704---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----643c8fc4f704---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/recommendation-system?source=post_page-----643c8fc4f704---------------recommendation_system-----------------", "anchor_text": "Recommendation System"}, {"url": "https://medium.com/tag/numpy?source=post_page-----643c8fc4f704---------------numpy-----------------", "anchor_text": "Numpy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F643c8fc4f704&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&user=Jake&userId=58a07ece941f&source=-----643c8fc4f704---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F643c8fc4f704&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&user=Jake&userId=58a07ece941f&source=-----643c8fc4f704---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F643c8fc4f704&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----643c8fc4f704--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F643c8fc4f704&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----643c8fc4f704---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----643c8fc4f704--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----643c8fc4f704--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----643c8fc4f704--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----643c8fc4f704--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----643c8fc4f704--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----643c8fc4f704--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----643c8fc4f704--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----643c8fc4f704--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jacob.d.moore1?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@jacob.d.moore1?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Jake"}, {"url": "https://medium.com/@jacob.d.moore1/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.7K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F58a07ece941f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&user=Jake&userId=58a07ece941f&source=post_page-58a07ece941f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F22fa69989e9a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecommender-systems-in-python-from-scratch-643c8fc4f704&newsletterV3=58a07ece941f&newsletterV3Id=22fa69989e9a&user=Jake&userId=58a07ece941f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}