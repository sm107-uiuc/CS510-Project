{"url": "https://towardsdatascience.com/reading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd", "time": 1683003312.0913222, "path": "towardsdatascience.com/reading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd/", "webpage": {"metadata": {"title": "Reading Color Blindness Charts: Deep Learning and Computer Vision | by Mykyta Solonko | Towards Data Science", "h1": "Reading Color Blindness Charts: Deep Learning and Computer Vision", "description": "There are plenty of online tutorials where you can learn to train a neural network to classify handwritten digits using the MNIST dataset, or to tell the difference between cats and dogs. We, humans\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/MNIST_database", "anchor_text": "MNIST", "paragraph_index": 0}, {"url": "https://machinelearningmastery.com/how-to-develop-a-convolutional-neural-network-from-scratch-for-mnist-handwritten-digit-classification/", "anchor_text": "tutorials", "paragraph_index": 5}, {"url": "https://www.datacamp.com/tutorial/convolutional-neural-networks-python", "anchor_text": "this one", "paragraph_index": 9}, {"url": "https://en.wikipedia.org/wiki/K-means_clustering", "anchor_text": "here", "paragraph_index": 20}, {"url": "https://github.com/msolonko/colorblindness_classification", "anchor_text": "my Github", "paragraph_index": 21}, {"url": "https://github.com/msolonko/colorblindness_classification", "anchor_text": "my Github", "paragraph_index": 45}], "all_paragraphs": ["There are plenty of online tutorials where you can learn to train a neural network to classify handwritten digits using the MNIST dataset, or to tell the difference between cats and dogs. We, humans, are always very good at these tasks and can easily match or beat the performance of a trained model.", "This is not always the case. In this project, I want to explore a task that I personally struggle with a lot. I have mild red-green color blindness. So, charts such as these have usually been difficult if not impossible for me to see:", "Is it possible for me to train a model to do this task for me, without me having to squint and inevitably get the question wrong either way?", "At first glance, this task seems simple. We can take some images, split them into training and test sets, and then train a convolutional neural network. Except\u2026 there is no dataset. Online, I was able to find only 54 different images, which is insufficient for a training set, given that there are 9 classes (digits 1\u20139).", "How can this be resolved? We still have the MNIST dataset that contains images of a single hand-written digit. We can use this dataset to train a neural network that excels at classifying individual digits. With some OpenCV transformations, we can get the color-blindness charts to look similar to the MNIST images, which look like this:", "There are many tutorials on this, but I will nonetheless give a high-level overview on how this is done.", "First, we will need Tensorflow installed, which is available through pip. If you do not have it installed, run the following command in the terminal.", "Or if you have a GPU:", "Now we will create a mnist.py file and get our training data, which is built-in to tensorflow due to the MNIST dataset\u2019s popularity:", "Next, we will set up our Convolutional Neural Network. I will not go into detail about how these work internally, but there are many resources online to read more, such as this one. We will be using one Conv2D layer, followed by MaxPooling, and Dropout. Then, our 2D output is flattened and put through a Dense layer with 128 units, followed by our classification layer with 10 classes (number 0\u20139). The output will be a vector of a length 10 to indicate the prediction. For instance, a 2 will be predicted like this:", "since the 1 is in the 2nd index. Here is the model code:", "Now, we compile the model, run it on the training data, evaluate it on the test data, and save the model as an .h5 file in our directory:", "When we run this code, we get a training accuracy of about 99% and test set accuracy of 98%:", "Not bad! Now, you should see a mnist.h5 file in your directory. Now, let\u2019s move to the next step.", "The next goal is to take the existing charts and transform them in such a way that they look as similar as possible to the MNIST data, which the model we saved is great at classifying. For this part, we will need a few more libraries:", "Our goal a transformation like this:", "After some experimentation, here is what processing we will need to do:", "Wow, that is a lot. Let\u2019s get started with contrast. I copied a function from the internet that takes in an image and applies customized brightness and contrast transformations. I put this in a file ContrastBrightness.py and made it a class:", "At a high level, increasing brightness adds values to the RGB channels of an image while increasing contrast multiplies the values by some constant. We will only use the contrast feature.", "Another complex part of our algorithm is clustering. Again, I made a file Clusterer.py and put the necessary code into it that I got online:", "This code will take an image and a number as an input. That number K will determine how many color clusters we will use. You can read more about K-means clustering here. Now, let\u2019s make our last file main.py. We will start with imports:", "Notice that we are importing the two classes that we just created. Now, please download the images in the charts directory from my Github.", "These have all been sorted (with the help of individuals without color blindness) into appropriate folders.", "Now, we will loop through all the images in our path and apply transformations 1\u20134. I commented my code pretty extensively.", "Here is what some of those transformed images look like:", "That is an obvious improvement. The digits are all clear, even to me. Two problems remain:", "So, we will threshold. However, due to the various coloring of the images, each needs a different threshold to work. We will automate the search for the perfect threshold. I noticed that a digit typically takes up 10\u201328% of the total image based on the number of pixels.", "Thus, we will try different threshold values until we get percent white to be in the 10\u201328% range. First, we will define a function that tells us what percent of an input image is white. There are shorter ways to do this, but I want to show explicitly what this is doing. We are counting all pixels that have a value of 255 (with 255 meaning white and 0 meaning black).", "Now, we will start at a threshold of 0 and works up to 255 in increments of 10 until we are in the 0.1\u20130.28 zone (this code goes in the for loop):", "Awesome! The end is in sight. Now we get images like this (if we use the threshold we found):", "Most images look pretty good! However, some are problematic. It turns out that some digits are darker than the background, as you see with the 9 on the top right. Thus, thresholding makes them black, not white! The 0.1\u20130.28 zone is never reached.", "We can check if our threshold was successful by the value of the variable. If the value of the threshold variable is 260, it means that the while loop ended without finding a perfect threshold. For those images, we will have a separate procedure.", "The last step is the most difficult, so I commented it in my code. Here is our whole function for this:", "We will adjust our code to use the new function and also do steps 6\u20137. These are all built-in OpenCV transformations, so nothing surprising here:", "Let\u2019s see what the images look like!", "Awesome! Clearly recognizable. Originally, we would expect the accuracy to be about 10% because the model output is of size 10 and its output would be essentially random since the original images looked nothing like the MNIST dataset that the model was trained on. With these transformed images, the model can certainly do better than random. If we stopped here, our accuracy would be about 63%, about 6X better than random! However, we can do a little bit more.", "We will skeletonize and dilate our images. This will give us a consistent width and look more uniform overall. Let\u2019s do it:", "This code is the last snippet we put inside the big for loop. Here is what the results look like:", "They are a little uneven, but so is handwriting. These inputs should be no problem for the neural network. Now, we just reshape our list, load the model, and evaluate:", "Put this code below your for loop. As a recap, we load our model, reshape the data, and print the accuracy after evaluating.", "After running the code, here is what gets printed for me:", "Let\u2019s take a look! We got an overall accuracy of\u2026. 78%! That is 7\u20138 times better than random and a lot better than a person with medium to severe color blindness can do. This is outstanding!", "If we look at our recall (ratio of correctly predicted positive observations to all observations in the actual class) for our digits, we see that we had great performance for 1\u20135 and 9. We had an okay performance for 8, and our neural network really struggled with 6s and 7s.", "This approach clearly has limitations and the transformations I listed do not work for all possible color blindness images (there is actually one image in the dataset that it does not work with after the thresholding step). Try printing all the processed 9s and you will see that the thresholding step results in a ratio between 0.1 and .28 but that is because the background becomes partly white. I did not try to find a solution for this because this only affected one image.", "I hope this tutorial has been informative on how a similar dataset can be used to make predictions on a different one. Also, I hope that this tutorial helps beginners become more comfortable with OpenCV, Tensorflow, and Python in general.", "To view the complete code and download the images and model, check out my Github.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fa8c824dd71cd&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://msolonko.medium.com/?source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": ""}, {"url": "https://msolonko.medium.com/?source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": "Mykyta Solonko"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ffe4b70c28b97&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&user=Mykyta+Solonko&userId=fe4b70c28b97&source=post_page-fe4b70c28b97----a8c824dd71cd---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa8c824dd71cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa8c824dd71cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://en.wikipedia.org/wiki/MNIST_database", "anchor_text": "MNIST"}, {"url": "https://machinelearningmastery.com/how-to-develop-a-convolutional-neural-network-from-scratch-for-mnist-handwritten-digit-classification/", "anchor_text": "tutorials"}, {"url": "https://www.datacamp.com/tutorial/convolutional-neural-networks-python", "anchor_text": "this one"}, {"url": "https://en.wikipedia.org/wiki/K-means_clustering", "anchor_text": "here"}, {"url": "https://github.com/msolonko/colorblindness_classification", "anchor_text": "my Github"}, {"url": "https://github.com/msolonko/colorblindness_classification", "anchor_text": "my Github"}, {"url": "https://datascience.stackexchange.com/questions/66377/how-to-use-mnist-dataset-to-make-predictions-on-similar-images-colorblindness-c", "anchor_text": "Link"}, {"url": "https://medium.com/tag/opencv?source=post_page-----a8c824dd71cd---------------opencv-----------------", "anchor_text": "Opencv"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----a8c824dd71cd---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----a8c824dd71cd---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/tag/colorblind?source=post_page-----a8c824dd71cd---------------colorblind-----------------", "anchor_text": "Colorblind"}, {"url": "https://medium.com/tag/convolutional-network?source=post_page-----a8c824dd71cd---------------convolutional_network-----------------", "anchor_text": "Convolutional Network"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa8c824dd71cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&user=Mykyta+Solonko&userId=fe4b70c28b97&source=-----a8c824dd71cd---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa8c824dd71cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&user=Mykyta+Solonko&userId=fe4b70c28b97&source=-----a8c824dd71cd---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa8c824dd71cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fa8c824dd71cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----a8c824dd71cd---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----a8c824dd71cd--------------------------------", "anchor_text": ""}, {"url": "https://msolonko.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://msolonko.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Mykyta Solonko"}, {"url": "https://msolonko.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "34 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ffe4b70c28b97&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&user=Mykyta+Solonko&userId=fe4b70c28b97&source=post_page-fe4b70c28b97--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F20471b9edad4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freading-color-blindness-charts-deep-learning-and-computer-vision-a8c824dd71cd&newsletterV3=fe4b70c28b97&newsletterV3Id=20471b9edad4&user=Mykyta+Solonko&userId=fe4b70c28b97&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}