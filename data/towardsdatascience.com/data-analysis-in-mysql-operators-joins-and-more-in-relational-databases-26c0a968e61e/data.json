{"url": "https://towardsdatascience.com/data-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e", "time": 1683011063.13803, "path": "towardsdatascience.com/data-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e/", "webpage": {"metadata": {"title": "Data Analysis in MySQL \u2014 Operators, Joins and More in Relational Databases | by Craig Dickson | Towards Data Science", "h1": "Data Analysis in MySQL \u2014 Operators, Joins and More in Relational Databases", "description": "This is part 3 of a 3-part series taking you through the process of designing, coding, implementing and querying a relational database using MySQL, starting from zero. See part 1 (Designing a\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/@thecraigdickson/designing-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2", "anchor_text": "Designing a Relational Database and Creating an Entity Relationship Diagram", "paragraph_index": 0}, {"url": "https://medium.com/@thecraigdickson/designing-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2", "anchor_text": "here", "paragraph_index": 0}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "Coding and Implementing a Relational Database using MySQL", "paragraph_index": 0}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "here", "paragraph_index": 0}, {"url": "https://github.com/thecraigd/SQL_School_Tutorial", "anchor_text": "GitHub repository", "paragraph_index": 1}, {"url": "https://www.lucidchart.com/pages/", "anchor_text": "Lucidchart", "paragraph_index": 1}, {"url": "https://medium.com/@thecraigdickson/designing-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2", "anchor_text": "1", "paragraph_index": 2}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "2", "paragraph_index": 2}, {"url": "https://github.com/thecraigd/SQL_School_Tutorial", "anchor_text": "GitHub repository", "paragraph_index": 2}, {"url": "https://www.mysql.com/", "anchor_text": "MySQL", "paragraph_index": 4}, {"url": "https://techterms.com/definition/rdbms", "anchor_text": "RDBMS", "paragraph_index": 4}, {"url": "https://dev.mysql.com/downloads/mysql/", "anchor_text": "MySQL Community Server", "paragraph_index": 5}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "part 2", "paragraph_index": 5}, {"url": "https://popsql.com/", "anchor_text": "PopSQL", "paragraph_index": 5}, {"url": "https://www.mysqltutorial.org/mysql-where/", "anchor_text": "WHERE", "paragraph_index": 10}, {"url": "https://towardsdatascience.com/the-many-flavours-of-sql-7b7da5d56c1e", "anchor_text": "flavours", "paragraph_index": 11}, {"url": "https://www.w3schools.com/sql/sql_orderby.asp", "anchor_text": "ORDER BY", "paragraph_index": 14}, {"url": "https://www.w3schools.com/sql/sql_and_or.asp", "anchor_text": "AND and OR", "paragraph_index": 18}, {"url": "https://www.techonthenet.com/mysql/comparison_operators.php", "anchor_text": "comparison", "paragraph_index": 23}, {"url": "https://www.w3schools.com/sql/sql_between.asp", "anchor_text": "BETWEEN", "paragraph_index": 25}, {"url": "https://www.w3schools.com/sql/sql_like.asp", "anchor_text": "LIKE", "paragraph_index": 27}, {"url": "https://www.w3schools.com/sql/sql_wildcards.asp", "anchor_text": "wildcards", "paragraph_index": 27}, {"url": "https://www.regular-expressions.info/", "anchor_text": "regular expressions", "paragraph_index": 28}, {"url": "https://www.w3schools.com/sql/sql_in.asp", "anchor_text": "IN", "paragraph_index": 30}, {"url": "https://www.techonthenet.com/mysql/is_null.php", "anchor_text": "IS NULL,", "paragraph_index": 33}, {"url": "https://www.w3schools.com/sql/sql_alias.asp", "anchor_text": "aliasing", "paragraph_index": 36}, {"url": "https://www.w3resource.com/mysql/aggregate-functions-and-grouping/aggregate-functions-and-grouping-in-mysql.php", "anchor_text": "here,", "paragraph_index": 39}, {"url": "https://www.w3schools.com/sql/func_mysql_avg.asp", "anchor_text": "AVG()", "paragraph_index": 40}, {"url": "https://www.w3schools.com/sql/sql_groupby.asp", "anchor_text": "GROUP BY", "paragraph_index": 41}, {"url": "https://www.w3resource.com/mysql/aggregate-functions-and-grouping/count.php", "anchor_text": "COUNT", "paragraph_index": 43}, {"url": "https://stackoverflow.com/questions/1021947/how-can-i-make-an-average-of-dates-in-mysql", "anchor_text": "complicated question", "paragraph_index": 48}, {"url": "https://dev.mysql.com/doc/refman/8.0/en/join.html", "anchor_text": "JOIN", "paragraph_index": 51}, {"url": "https://pandas.pydata.org/", "anchor_text": "pandas", "paragraph_index": 52}, {"url": "https://www.python.org/", "anchor_text": "Python", "paragraph_index": 52}, {"url": "https://dplyr.tidyverse.org/", "anchor_text": "dplyr", "paragraph_index": 52}, {"url": "https://www.r-project.org/", "anchor_text": "R,", "paragraph_index": 52}, {"url": "https://www.w3schools.com/sql/sql_join_inner.asp", "anchor_text": "INNER JOIN", "paragraph_index": 54}, {"url": "https://www.w3schools.com/sql/sql_join_left.asp", "anchor_text": "LEFT JOIN", "paragraph_index": 54}, {"url": "https://www.w3schools.com/sql/sql_join_right.asp", "anchor_text": "RIGHT JOIN", "paragraph_index": 54}, {"url": "https://en.wikipedia.org/wiki/Niamh", "anchor_text": "Niamh", "paragraph_index": 63}, {"url": "https://www.w3schools.com/sql/sql_join_left.asp", "anchor_text": "LEFT JOIN", "paragraph_index": 82}, {"url": "https://www.w3schools.com/sql/sql_join_right.asp", "anchor_text": "RIGHT JOIN", "paragraph_index": 86}, {"url": "https://www.w3schools.com/sql/sql_join_full.asp", "anchor_text": "FULL OUTER JOIN", "paragraph_index": 90}, {"url": "https://www.w3schools.com/sql/sql_join_full.asp", "anchor_text": "relatively easily", "paragraph_index": 91}, {"url": "https://www.quora.com/Whats-the-most-complex-SQL-query-you-ever-wrote", "anchor_text": "truly awesome results", "paragraph_index": 94}, {"url": "https://www.craigdoesdata.de/contact.html", "anchor_text": "craigdoesdata.de", "paragraph_index": 96}, {"url": "https://github.com/thecraigd", "anchor_text": "GitHub", "paragraph_index": 96}, {"url": "https://www.craigdoesdata.de/", "anchor_text": "website", "paragraph_index": 96}, {"url": "http://www.craigdoesdata.de", "anchor_text": "http://www.craigdoesdata.de", "paragraph_index": 99}], "all_paragraphs": ["This is part 3 of a 3-part series taking you through the process of designing, coding, implementing and querying a relational database using MySQL, starting from zero. See part 1 (Designing a Relational Database and Creating an Entity Relationship Diagram) here, and part 2 (Coding and Implementing a Relational Database using MySQL) here.", "All the code and information for this tutorial can be found on the associated GitHub repository. I used Lucidchart to make the diagrams shown in the article.", "In parts 1 and 2 of this series, we have gone through the steps of designing our database, implementing it in MySQL and populating it with our data. It\u2019s a good idea to read those before going into this article, but the SQL code to get you caught up is all contained in the associated GitHub repository if you feel like skipping ahead to this analysis section.", "We have designed and implemented a fully functioning relational database from scratch. Great stuff! But what now?", "If we\u2019re working in a Data Analyst-type role, we\u2019re going to want to start analysing that data. But first, we need to know how to get to it. This article will describe how to write queries in SQL (specifically MySQL) that will allow us to access the data and relationships that are locked away within our RDBMS.", "We covered installing MySQL Community Server in part 2 of this series, so we should have a working instance of that running on our system. We will also once again be using PopSQL\u2019s free plan to run our queries.", "The primary form of a SQL query statement is something like:", "For example, to select all of the columns from our Teacher table, we used the statement:", "In this case the asterisk character (*) means \u2018all columns\u2019. We\u2019re selecting the teacher table, and there is no condition attached, which means we will be selecting all columns and all records (i.e. all the data) from that table.", "If we just want specific attributes from the table, we can name those instead of using the asterisk.", "In most cases, we won\u2019t want to select all of the records in a table, but will be looking for particular records that meet some condition. In these cases, we will need to use a WHERE clause.", "Note that we will be using our WHERE clauses with SELECT statements in this article, but that the exact same syntax and operators will work with UPDATE, INSERT or DELETE statements as well. The WHERE clause is an essential aspect of all flavours of SQL to master.", "The WHERE clause allows us to set a condition, such as:", "This will select all details from the course table for courses where the language in English.", "Perhaps we want to order the results differently, then we can use ORDER BY to do that.", "By default, MySQL orders in ascending order. If we want the results in descending order, we can add DESC like so:", "We can also use ORDER BY in series, so we could do:", "This would give us our results sorted by that hierarchy of attributes, in the order they were specified.", "We can use AND and OR operators within WHERE clauses as well. If you\u2019re familiar with any other programming languages you\u2019ll have most likely come across these logical operators before. In SQL they work exactly as you would expect them to.", "Using the AND operator excludes all results which don\u2019t fit both conditions, so only courses in English at C1 level are shown \u2014 in the International Language School database, that gives us just one result. If we use OR in the same statement, we get some different results.", "Using the OR operator includes all records which satisfy either condition, so now we have all courses which are in English (as these satisfy the language = \u2018Eng\u2019 condition) plus the one other course which is at C1 level, Advanced Russian.", "We can also use the NOT operator before a condition, to exclude every record which meets that condition and include all other records.", "This is very useful when we want to exclude certain records.", "It is also possible to use other comparison operators in our WHERE clauses. This is the full list of comparison operators we can use in MySQL:", "This opens many possibilities to us. One very simple example would be to identify the names and contact info of all teachers born before 1990:", "The BETWEEN operator allows us to select the records with a value that falls within a range. We can identify all courses which began in January 2020 by using the following code:", "In our example, we are comparing dates, but BETWEEN can also be used to find any value (sales, order quantity, etc) that falls in a particular range. Very useful!", "The LIKE operator allows us to search for values which match a specified pattern. We can use two wildcards to build our patterns:", "If you\u2019re familiar with regular expressions then this will seem familiar to you, as SQL is basically implementing a simplified version of those. This allows us to build patterns and get our RDBMS to find the records which meet those patterns.", "By using the % wildcard at the beginning and end of our pattern we instructed MySQL to identify the character sequence \u2018interm\u2019 anywhere it occurred in the course_name attribute. This is a very useful feature.", "Our next operator is IN \u2014 this is effectively shorthand for many OR conditions, allowing us to give MySQL a list of values we would like to use.", "The output here is identical to the output we would receive from the query:", "The benefit is that we don\u2019t have to write out the column name repeatedly. This is extremely beneficial when we have a lot of values to include in our query.", "The final operator we will discuss in this section is IS NULL, along with its negative cousin IS NOT NULL. This allows us to identify records where a particular attribute (or set of attributes) is NULL. This could be useful to update them with some other value, to exclude them from a data set, or for a wide variety of other reasons.", "In our database, we can use this to identify teachers who \u2018only\u2019 teach in one language:", "Alternatively, we can use IS NOT NULL to find the teachers who teach in two languages:", "Sometimes the data in our database is stored with attribute names which may be confusing for the audience of our reports, or is just formatted in an unattractive way. We can fix this at the query stage by using aliasing.", "Here we use the AS keyword to instruct MySQL to display a particular column with a temporary name. For example:", "This can be useful when we are preparing reports for other stakeholders and want to make things prettier, or when a column has a name which may be confusing in the context of our particular query, among other situations.", "When performing data analysis, it\u2019s also important to be able to aggregate our data. MySQL provides many ways of doing this, and we will not cover them all here. There is a comprehensive list here, for those who would like to dig deeper.", "One of the most common aggregations we will want to perform is finding an average. In MySQL we do this with the AVG() aggregator. If we want to know the average length of a course, we can use the following query:", "When using aggregators, it is very common to use these in combination with the GROUP BY statement. This can help us to move beyond the basics and find really useful information in our database.", "You can see how we can use GROUP BY alongside some of the aggregators to find real insights in our database. Here we may want to look into why client 101 books much longer courses on average than the other clients, and see if we can learn something there to get the other clients to follow suit.", "Another essential aggregator to know is COUNT. This lets us count the instances of a particular value in a table.", "But we can make this even more useful using GROUP BY.", "There is a lot more we can do with aggregating data in MySQL, but this is enough to get us started.", "Things can get even more exciting when we start nesting queries within other queries. This is where SQL really shows its power. We will just go through a simple example here to demonstrate the principles, but with nesting queries within queries the possibilities for writing really complex and powerful queries are almost limitless.", "Let\u2019s take a look at our Teacher table.", "If we want to identify the teachers who are younger than the average of our teachers (exactly what the average of a series of dates is a complicated question, but we will gloss over that for now). We can answer this with a nested query like so:", "What\u2019s happening here is that within our WHERE clause, we have placed another complete SQL query (in parentheses). This is what a nested query is, one complete query being used within another query.", "This is a basic example, but hopefully the power and potential of this kind of query is apparent. This won\u2019t be our last nested query, so we will have more chances to see how this works later.", "The whole benefit of a relational database is the way that the entities / tables are related to one another, allowing us to explore and analyse relationships between the various entities. Until this point, all of our queries have been on single tables. That\u2019s all well and good, but we\u2019re missing out on some of the main advantages of relational databases. Let\u2019s remedy that by looking at the wonderful world of JOINs.", "If you are familiar with other popular data analysis tools like pandas for Python or dplyr for R, then you are probably familiar with joins already. The concepts are exactly the same in MySQL, but the syntax is of course a little different (more capitalisation, for one thing).", "To join any table to another, we need to have a column in both tables which contains the same data. In a relational database, this is the function of foreign keys (or for N-to-M relationships, the table which stores those relations), and these connections are what make relational databases such a powerful and efficient way of storing large amounts of data.", "There are three types of JOINs in SQL \u2014 an INNER JOIN (in MySQL this is the default when only JOIN is used) and the two types of outer joins \u2014 LEFT JOIN and RIGHT JOIN. We\u2019ll start with perhaps the most common, and the easiest to understand, the INNER JOIN, also known in SQL as just plain JOIN.", "An INNER JOIN takes two tables and joins them based on a column they have in common. This allows us to exploit the relationships which exist between tables. Let\u2019s look at an example to begin:", "Here we have selected columns from two different tables. In MySQL when we are dealing with multiple tables, it is necessary to identify the columns and the tables together. It is also good practice to do this in general, as it makes it clear to anyone reading your code exactly which columns are being referred to.", "This is done using the table.column syntax seen above. In our query, we are selecting the course_id, course_name and language columns from the Course table, and the client_name and address columns from the Client table.", "Then, as usual, we use the FROM statement to identify our first table (in this case, Course). So far, so good.", "Things get interesting on the next couple of lines. First, we let MySQL know that we want to do a JOIN by using the JOIN keyword, followed by the second table (Client). We have to instruct MySQL about which table contains the data that is held in common \u2014 it is not possible to join two tables together where no data is shared.", "To do this we use the ON keyword, followed by table1.column = table2.column where the columns identified are the columns which contain the data in common (typically the primary key of one table and the foreign key of another).", "In our example, we also used the WHERE keyword to add a condition. We are just looking for the details of the courses and the addresses of the companies for courses which do not take place on the premises of the International Language School. This is useful information for our teachers to have so they know where they need to travel!", "Perhaps we want to provide one of our teachers \u2014 for our example let\u2019s choose Stefanie Martin \u2014 with the addresses for the classes she has to teach outside of the school. Using a join, this is simple:", "We can up the intensity even more by combining JOINs with nested queries to get even more specific insights from our database. What if we wanted to get the names of all the participants in classes taught by Niamh Murphy?", "Using two joins and one nested query lets us get this information from our database in no time:", "Now things are getting serious! To deconstruct this and see what\u2019s happening in more complex SQL queries in general, it can be very helpful to work backwards (this can also be a helpful trick when constructing your own more complex queries). If we do that here we can see that we have a sub-query identifying the course_id where the teacher_id = 6 \u2014 Niamh\u2019s ID number.", "The result of this, which will be the course_id values for all courses taught by Niamh, is used in the WHERE condition of our query. So the condition could be expressed in plain English as \u201cwhere the course is taught by Niamh Murphy\u201d.", "Because the output that we are looking for is the names of the participants, our end goal is to join the course table to the participants table. However, as the relationship between these tables is an N-to-M relation (a participant can take multiple courses, a course can be taken by multiple participants), we can\u2019t simply use the foreign key relation which is typical of a 1-to-N relationship.", "Instead, we need to join through the extra Takes_Course table we created to store the N-to-M relationship between the Course and Participant tables. Phew!", "We join the Participant table to the Takes_Course table using the key participant_id, then immediately join that to the Course table using course_id. This is how we can extract information from these more complex relationships stored in our database.", "This may seem complex and a little daunting at first, but if we spend some time thinking about it and take another look at our ERD, it makes sense that this is how we can unlock the data stored in this structure. The whole process is entirely logical, and driven purely by the code we put into our query.", "A great way to understand this is to try and write our own queries. Look at the data and think \u201chow could we get that connection to come out of the database\u201d and try different combinations. This is always the best way to get used to a new technology, playing with it and seeing what happens. Plus it\u2019s a fun time!", "Now we have mastered the INNER JOIN, let\u2019s take a look at the different kinds of OUTER JOINs available in MySQL. The differences between join types become clearer when we have some information that is not included in all tables. The ILS database is beautifully put together, but mostly contains complete data. Sadly that will not be the case in real life, and we need to know how to deal with that.", "That means it\u2019s time to add a new table to our database! Exciting times!", "The management of the International Language School are carrying out some market research. They want to know which industries to target for new courses, and have consulted the business press and put together this summary table showing the projected outlook for some different industries.", "Let\u2019s compare this to our Client table.", "When we compare the industry column in each table, we notice that there are some industries which appear in both tables (Retail, Logistics) and other entries which do not.", "Before we go further, let\u2019s add the Industry Prospects table to our database.", "To this point, we have been dealing with INNER JOINs. This type of join follows the Venn diagram below.", "An INNER JOIN will return only values where there is a match in both tables, and will not return any records which only have a value in the column which the join is being performed ON in one table.", "So performing an INNER JOIN on our Client and Industry Prospects tables using the below code will give us the entries where both tables have a matching entry.", "As Retail and Logistics are included in both tables, we get only the entries which match, with no NULL values.", "A LEFT JOIN will give us all of the values in the left table, and the matching values from the right table. Where there is no matching value on the right table, we will get NULL values in our output.", "The code for a LEFT JOIN is identical to our INNER JOIN code, except that we replace JOIN with LEFT JOIN, like so:", "Our output now includes every entry from the Client table (it comes first in our code, so it is the \u2018left\u2019 table, but this is purely because of the way that we have chosen to order the tables). Where there is no corresponding entry in the Industry Prospects table, NULL values are returned.", "The LEFT JOIN is good when we want to bring in data from another table, but don\u2019t want to lose any of the data from our primary table. This can happen in a large number of real-life scenarios, and the LEFT JOIN is a staple of our data analysis toolbox.", "The RIGHT JOIN is the mirror image of the LEFT JOIN, and is used much less frequently. Because the decision of which table is the left table and which is the right is entirely up to the person writing the query, data analysts and query writers tend to put the table that we want to keep all the data from on the left. There are still some situations where we need the RIGHT JOIN however, particularly in more complex queries where we are joining multiple tables.", "For the sake of completeness let\u2019s perform a RIGHT JOIN on our tables.", "Our output now includes all the entries from the Industry Prospects table, and the NULL values are now in the data from the Client table, as expected.", "This is just the mirror image of the LEFT JOIN, and we could have retrieved the same output simply by swapping the order of clientand industry_prospectsin our code.", "There is another type of join which is supported in some other flavours of SQL, the FULL OUTER JOIN. This combines the LEFT JOIN and the RIGHT JOIN and returns all entries from both tables, with NULL values where there is no match.", "This is not supported in MySQL, so we won\u2019t look at it here. It can be simulated in MySQL relatively easily, which is (one presumes) why the developers have not chosen to include it. It\u2019s good for us to know about it in the event that we end up using another flavour of SQL. So now we know!", "Wow! We\u2019ve covered a lot of ground in this article, from learning the very basics of a SQL query to constructing gnarly nested queries featuring multiple joins. Hopefully the power of SQL for creating, reviewing, updating and deleting data in a database is clearer now than it was at the beginning.", "Relational databases and SQL are some of the most widely used technologies for handling large data sets, and although they may not be as fashionable as the latest libraries in R or Python, for working Data Analysts they are an essential component, and extremely useful to understand.", "The queries we have looked at here have gone from fairly basic to still-pretty-basic, but hopefully we can see how combining the different conditions and operators can let us produce truly awesome results. Go forth and use this new power responsibly!", "This is the final article in my three part series on learning to create, update and interrogate your own fully-functional relational database using SQL with free open source software. We covered a lot of ground together, and I hope it has been useful for you.", "I\u2019d love to hear your feedback, if you have any comments or questions then please contact me via my website craigdoesdata.de. If you\u2019d like to keep up with my projects you can follow me here on Medium, keep up with me on GitHub or just visit my website.", "Thanks for taking the time to join me, until next time!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist, based in Berlin, Germany. Python, SQL, R, Tableau. He / him. I\u2019m the one on the left in the photo. http://www.craigdoesdata.de"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F26c0a968e61e&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----26c0a968e61e--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----26c0a968e61e--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@thecraigdickson?source=post_page-----26c0a968e61e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=post_page-----26c0a968e61e--------------------------------", "anchor_text": "Craig Dickson"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7106ad46fcdd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&user=Craig+Dickson&userId=7106ad46fcdd&source=post_page-7106ad46fcdd----26c0a968e61e---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F26c0a968e61e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F26c0a968e61e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/sql-series", "anchor_text": "SQL Tutorial Course from Craig Dickson"}, {"url": "https://medium.com/@thecraigdickson/designing-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2", "anchor_text": "Designing a Relational Database and Creating an Entity Relationship Diagram"}, {"url": "https://medium.com/@thecraigdickson/designing-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2", "anchor_text": "here"}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "Coding and Implementing a Relational Database using MySQL"}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "here"}, {"url": "https://github.com/thecraigd/SQL_School_Tutorial", "anchor_text": "GitHub repository"}, {"url": "https://www.lucidchart.com/pages/", "anchor_text": "Lucidchart"}, {"url": "https://medium.com/@thecraigdickson/designing-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2", "anchor_text": "1"}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "2"}, {"url": "https://github.com/thecraigd/SQL_School_Tutorial", "anchor_text": "GitHub repository"}, {"url": "https://www.mysql.com/", "anchor_text": "MySQL"}, {"url": "https://techterms.com/definition/rdbms", "anchor_text": "RDBMS"}, {"url": "https://dev.mysql.com/downloads/mysql/", "anchor_text": "MySQL Community Server"}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "part 2"}, {"url": "https://popsql.com/", "anchor_text": "PopSQL"}, {"url": "https://www.mysqltutorial.org/mysql-where/", "anchor_text": "WHERE"}, {"url": "https://towardsdatascience.com/the-many-flavours-of-sql-7b7da5d56c1e", "anchor_text": "flavours"}, {"url": "https://www.w3schools.com/sql/sql_orderby.asp", "anchor_text": "ORDER BY"}, {"url": "https://www.w3schools.com/sql/sql_and_or.asp", "anchor_text": "AND and OR"}, {"url": "https://www.techonthenet.com/mysql/comparison_operators.php", "anchor_text": "comparison"}, {"url": "https://www.w3schools.com/sql/sql_between.asp", "anchor_text": "BETWEEN"}, {"url": "https://www.w3schools.com/sql/sql_like.asp", "anchor_text": "LIKE"}, {"url": "https://www.w3schools.com/sql/sql_wildcards.asp", "anchor_text": "wildcards"}, {"url": "https://www.regular-expressions.info/", "anchor_text": "regular expressions"}, {"url": "https://www.w3schools.com/sql/sql_in.asp", "anchor_text": "IN"}, {"url": "https://www.techonthenet.com/mysql/is_null.php", "anchor_text": "IS NULL,"}, {"url": "https://www.w3schools.com/sql/sql_alias.asp", "anchor_text": "aliasing"}, {"url": "https://www.w3resource.com/mysql/aggregate-functions-and-grouping/aggregate-functions-and-grouping-in-mysql.php", "anchor_text": "here,"}, {"url": "https://www.w3schools.com/sql/func_mysql_avg.asp", "anchor_text": "AVG()"}, {"url": "https://www.w3schools.com/sql/sql_groupby.asp", "anchor_text": "GROUP BY"}, {"url": "https://www.w3resource.com/mysql/aggregate-functions-and-grouping/count.php", "anchor_text": "COUNT"}, {"url": "https://stackoverflow.com/questions/1021947/how-can-i-make-an-average-of-dates-in-mysql", "anchor_text": "complicated question"}, {"url": "https://dev.mysql.com/doc/refman/8.0/en/join.html", "anchor_text": "JOIN"}, {"url": "https://pandas.pydata.org/", "anchor_text": "pandas"}, {"url": "https://www.python.org/", "anchor_text": "Python"}, {"url": "https://dplyr.tidyverse.org/", "anchor_text": "dplyr"}, {"url": "https://www.r-project.org/", "anchor_text": "R,"}, {"url": "https://www.w3schools.com/sql/sql_join_inner.asp", "anchor_text": "INNER JOIN"}, {"url": "https://www.w3schools.com/sql/sql_join_left.asp", "anchor_text": "LEFT JOIN"}, {"url": "https://www.w3schools.com/sql/sql_join_right.asp", "anchor_text": "RIGHT JOIN"}, {"url": "https://en.wikipedia.org/wiki/Niamh", "anchor_text": "Niamh"}, {"url": "https://www.w3schools.com/sql/sql_join_left.asp", "anchor_text": "LEFT JOIN"}, {"url": "https://www.w3schools.com/sql/sql_join_right.asp", "anchor_text": "RIGHT JOIN"}, {"url": "https://www.w3schools.com/sql/sql_join_full.asp", "anchor_text": "FULL OUTER JOIN"}, {"url": "https://www.w3schools.com/sql/sql_join_full.asp", "anchor_text": "relatively easily"}, {"url": "https://www.quora.com/Whats-the-most-complex-SQL-query-you-ever-wrote", "anchor_text": "truly awesome results"}, {"url": "https://www.craigdoesdata.de/contact.html", "anchor_text": "craigdoesdata.de"}, {"url": "https://github.com/thecraigd", "anchor_text": "GitHub"}, {"url": "https://www.craigdoesdata.de/", "anchor_text": "website"}, {"url": "https://www.craigdoesdata.de/", "anchor_text": "craigdoesdata.de"}, {"url": "https://medium.com/tag/data-science?source=post_page-----26c0a968e61e---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-analysis?source=post_page-----26c0a968e61e---------------data_analysis-----------------", "anchor_text": "Data Analysis"}, {"url": "https://medium.com/tag/sql?source=post_page-----26c0a968e61e---------------sql-----------------", "anchor_text": "Sql"}, {"url": "https://medium.com/tag/mysql?source=post_page-----26c0a968e61e---------------mysql-----------------", "anchor_text": "MySQL"}, {"url": "https://medium.com/tag/sql-series?source=post_page-----26c0a968e61e---------------sql_series-----------------", "anchor_text": "Sql Series"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F26c0a968e61e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&user=Craig+Dickson&userId=7106ad46fcdd&source=-----26c0a968e61e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F26c0a968e61e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&user=Craig+Dickson&userId=7106ad46fcdd&source=-----26c0a968e61e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F26c0a968e61e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----26c0a968e61e--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F26c0a968e61e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----26c0a968e61e---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----26c0a968e61e--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----26c0a968e61e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----26c0a968e61e--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----26c0a968e61e--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----26c0a968e61e--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----26c0a968e61e--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----26c0a968e61e--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----26c0a968e61e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Craig Dickson"}, {"url": "https://medium.com/@thecraigdickson/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "171 Followers"}, {"url": "http://www.craigdoesdata.de", "anchor_text": "http://www.craigdoesdata.de"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7106ad46fcdd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&user=Craig+Dickson&userId=7106ad46fcdd&source=post_page-7106ad46fcdd--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F5edb8f2d3595&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdata-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e&newsletterV3=7106ad46fcdd&newsletterV3Id=5edb8f2d3595&user=Craig+Dickson&userId=7106ad46fcdd&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}