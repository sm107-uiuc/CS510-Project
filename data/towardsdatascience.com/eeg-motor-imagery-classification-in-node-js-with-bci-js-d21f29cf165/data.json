{"url": "https://towardsdatascience.com/eeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165", "time": 1682994750.9908679, "path": "towardsdatascience.com/eeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165/", "webpage": {"metadata": {"title": "EEG Motor Imagery Classification in Node.js with BCI.js | by Pierce Stegman | Towards Data Science", "h1": "EEG Motor Imagery Classification in Node.js with BCI.js", "description": "Brain-computer interfaces (BCIs) allow for the control of computers and other devices using only your thoughts. A popular way to achieve this is with motor imagery detected with\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/pwstegman/motor-imagery-tutorial", "anchor_text": "GitHub repo", "paragraph_index": 1}, {"url": "http://bnci-horizon-2020.eu/database/data-sets", "anchor_text": "http://bnci-horizon-2020.eu/database/data-sets", "paragraph_index": 2}, {"url": "https://gist.github.com/pwstegman/d10bc2980e336294b7d2389f9b0c75bf", "anchor_text": "this script", "paragraph_index": 3}, {"url": "https://gist.github.com/pwstegman/7291c74ef43202faae6ab844c7ff224b", "anchor_text": "this script", "paragraph_index": 3}, {"url": "https://github.com/pwstegman/motor-imagery-tutorial", "anchor_text": "GitHub repo", "paragraph_index": 4}, {"url": "https://github.com/pwstegman/motor-imagery-tutorial/tree/master/data", "anchor_text": "data/", "paragraph_index": 4}, {"url": "https://www.npmjs.com/package/bcijs", "anchor_text": "BCI.js", "paragraph_index": 5}, {"url": "https://nodejs.org", "anchor_text": "here", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Common_spatial_pattern", "anchor_text": "common spatial pattern", "paragraph_index": 8}, {"url": "https://www.youtube.com/watch?v=zsOULC16USU&list=PLbbCsk7MUIGcO_lZMbyymWU2UezVHNaMq&index=43", "anchor_text": "lecture on CSP", "paragraph_index": 9}, {"url": "https://bci.js.org/docs/module-bcijs.features.html#.logvar", "anchor_text": "bci.features.logvar", "paragraph_index": 12}, {"url": "https://bci.js.org/examples/lda/", "anchor_text": "https://bci.js.org/examples/lda/", "paragraph_index": 13}, {"url": "https://bci.js.org/docs/module-bcijs.html#.ldaLearn", "anchor_text": "ldaLearn", "paragraph_index": 14}, {"url": "https://bci.js.org/docs/module-bcijs.html#.ldaProject", "anchor_text": "ldaProject", "paragraph_index": 15}, {"url": "https://bci.js.org/docs/module-bcijs.html#.confusionMatrix", "anchor_text": "confusionMatrix", "paragraph_index": 17}, {"url": "https://github.com/pwstegman/motor-imagery-tutorial/blob/master/classify-noUnknowns.js", "anchor_text": "here", "paragraph_index": 17}, {"url": "https://www.youtube.com/watch?v=zsOULC16USU&list=PLbbCsk7MUIGcO_lZMbyymWU2UezVHNaMq&index=43", "anchor_text": "lecture on CSP", "paragraph_index": 23}, {"url": "https://github.com/markert/fili.js", "anchor_text": "fili", "paragraph_index": 23}, {"url": "http://markert.github.io/fili.js/", "anchor_text": "interactive demo", "paragraph_index": 27}, {"url": "https://github.com/chen0040/js-regression", "anchor_text": "js-regression", "paragraph_index": 31}, {"url": "https://twitter.com/pwstegman", "anchor_text": "Twitter", "paragraph_index": 33}, {"url": "https://github.com/markert/fili.js", "anchor_text": "fili", "paragraph_index": 34}, {"url": "https://github.com/chen0040/js-regression", "anchor_text": "js-regression", "paragraph_index": 35}, {"url": "https://www.researchgate.net/publication/325529881_WebBCI_An_Electroencephalography_Toolkit_Built_on_Modern_Web_Technologies", "anchor_text": "published a paper", "paragraph_index": 36}], "all_paragraphs": ["Brain-computer interfaces (BCIs) allow for the control of computers and other devices using only your thoughts. A popular way to achieve this is with motor imagery detected with electroencephalography (EEG). This tutorial will serve as an introduction to the detection and classification of motor imagery. I\u2019ve broken it down into five parts:", "You can find the complete code and data used in this tutorial in its GitHub repo.", "First, make a new directory for the project. Then, within the project\u2019s directory, download the data to a folder called \u2018data.\u2019 We will be using the \u2018Four class motor imagery (001\u20132014)\u2019 data set found at http://bnci-horizon-2020.eu/database/data-sets. I\u2019ve made the data sets available as CSV files which you can download below:", "You can also download the data using this script for bash or this script for PowerShell.", "If you want to experiment with data from a different subject or data set, the script to generate these CSVs from the .mat files is available in the GitHub repo for this tutorial. You can also find CSV files containing other imagined movements in the data/ directory.", "We\u2019ll load the data into Node.js using BCI.js. If you don\u2019t have Node.js installed, you can download it here.", "Once you have Node.js and NPM installed, install BCI.js by running this command in your project directory", "Now we can start on classify.js in the root of the project directory. Begin by requiring BCI.js and loading the relevant CSV files. As the CSV load methods are asynchronous, we have to wrap them in an asynchronous function and use the await keyword, so Node.js doesn\u2019t continue until the files are loaded:", "Once the data has been loaded, we will use common spatial pattern (CSP) as a part of the feature extraction method. CSP attempts to project the data so that when imagining feet movement, the first signal will have a high variance, and the last signal will have the lowest variance, while the contrary occurs when imagining right hand movements. With this in mind, we can use the variance of each CSP signal as a feature vector for classification.", "This tutorial is following the method described by Christian Kothe in his lecture on CSP. He has great lectures on CSP and BCIs in general, if you want to learn more.", "Now we can start on the feature extraction method. Every 750 samples in the CSV is from a separate 3 second trial. We can use the windowApply method from BCI.js to select the data from each trial. The third parameter is the size of the window, and the last parameter is how many steps the window should take each iteration:", "For each trial, we split the data into approximately quarter second windows, or epochs, which we can generate a feature vector from using CSP. Taking the log of the variance makes the data more normally distributed, which will help when training the classifier later.", "We pass epochSize/2 as the window step, so there is a 50% overlap between windows. The method bci.features.logvar is used to compute the log of the variance of each CSP signal. The value \u2018columns\u2019 is passed, because in the 2d array \u2018cspSignals,\u2019 each column is a signal and each row is a sample. Finally, we concatenate the features from each trial into one long array of feature vectors.", "Now that we have features, let\u2019s learn a classifier. Linear discriminant analysis (LDA) is a popular classifier for BCIs. It uses the mean and standard deviation of training set data to draw a dividing line (or hyperplane in higher dimensions) between the two classes. You can find a visual demonstration of how LDA works at https://bci.js.org/examples/lda/.", "To learn an LDA classifier, you can use the ldaLearn method:", "Now that we\u2019ve learned a classifier, let\u2019s evaluate it using the testing sets. To do this, we will use the ldaProject method. It returns a negative number when the prediction is the first class and a positive number when the prediction is the other class. If it returns a value near zero, then it is more unsure about the classification.", "Once we use ldaProject to predict the classes of the training set data, we can evaluate its performance using a confusion matrix. A confusion matrix places data into a 2x2 matrix, where each cell represents the following:", "We can calculate this confusion matrix using the confusionMatrix method. Finally, we compute the balanced accuracy (average of the accuracy for feet movements and accuracy for right hand movements) to see how well our classifier performed (complete script can be found here):", "And running this code, we achieve the following results:", "This is a decent result, out of 3058 features, 2585 were classified correctly. However, we can achieve an even higher accuracy by having the classifier return \u2018unknown\u2019 when ldaProject returns values near zero.", "By filtering out values that LDA predicts to be near zero, we can see how the addition of an \u2018unknown\u2019 would affect our results:", "With this modification, we get the following results:", "34.17% of the classifications are returned as unknown. While this is a high percentage, at four classifications per second, throwing out about every 1 in 3 results still yields quite a fast response time. And at the cost, we\u2019ve achieved 92.6% accuracy. We can get this even higher with a few improvements.", "We can further improve results by bandpass filtering the data to remove noise and unwanted frequency bands. In Christian Kothe\u2019s lecture on CSP, he recommends filtering between 7 and 30 Hz. We can add a bandpass filter using fili:", "Then, modify the feature extraction method to include a bandpass filter:", "This modification gives us the following results:", "In addition to the accuracy going up to 94.5%, the percent of results classified as unknown has gone down to 21.4%.", "In the modified code, you can see we set filterOrder to 128. The higher order filter means it will more precisely filter between 7 and 30 Hz. Fili contains an interactive demo of how filter order affects the filter. For example, passing in the following parameters:", "But changing the filter order from 32 to 128, we get:", "In the first example, only around 19 Hz is kept near 100% while the other bands are minimized. However, in the second example with the higher order filter, values between 7 and 30 Hz are kept closer to 100% while the other bands are filtered to around 0.", "Finally, if we allow a higher number of unknowns, we can achieve an even higher accuracy. By changing the threshold in the classify method from 0.5 to 1, we increase the percent unknown to 47.7%, and get the following results:", "We can also treat LDA as a dimensionality reduction method and pass the output to logistic regression, which estimates the probability of a sample being in each class. To do this, we can use js-regression:", "The above code classifies 58.4% as unknown and gives the following results:", "This was my first tutorial. I appreciate any feedback and will answer any questions. You can also find me on Twitter if you\u2019re interested in more BCI related posts.", "fili \u2014 A digital filter library for JavaScript", "js-regression \u2014 JavaScript implementation of linear regression and logistic regression", "Back in 2017, I began work on WebBCI, which has since become BCI.js. I later published a paper on WebBCI and discussed preliminary benchmarks and the effectiveness of processing EEG in JavaScript. If you\u2019re curious or want to use BCI.js in a published work, please check out my paper on the topic:", "P. Stegman, C. Crawford, and J. Gray, \u201cWebBCI: An Electroencephalography Toolkit Built on Modern Web Technologies,\u201d in Augmented Cognition: Intelligent Technologies, 2018, pp. 212\u2013221.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Research Assistant at Human-Technology Interaction Lab, University of Alabama"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd21f29cf165&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d21f29cf165--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d21f29cf165--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@pwstegman?source=post_page-----d21f29cf165--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@pwstegman?source=post_page-----d21f29cf165--------------------------------", "anchor_text": "Pierce Stegman"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F91a2f69648c2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&user=Pierce+Stegman&userId=91a2f69648c2&source=post_page-91a2f69648c2----d21f29cf165---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd21f29cf165&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd21f29cf165&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/pwstegman/motor-imagery-tutorial", "anchor_text": "GitHub repo"}, {"url": "http://bnci-horizon-2020.eu/database/data-sets", "anchor_text": "http://bnci-horizon-2020.eu/database/data-sets"}, {"url": "https://github.com/pwstegman/motor-imagery-tutorial/blob/master/data/righthand-training.csv", "anchor_text": "righthand-training.csv"}, {"url": "https://github.com/pwstegman/motor-imagery-tutorial/blob/master/data/righthand-testing.csv", "anchor_text": "righthand-testing.csv"}, {"url": "https://github.com/pwstegman/motor-imagery-tutorial/blob/master/data/feet-testing.csv", "anchor_text": "feet-testing.csv"}, {"url": "https://github.com/pwstegman/motor-imagery-tutorial/blob/master/data/feet-training.csv", "anchor_text": "feet-training.csv"}, {"url": "https://gist.github.com/pwstegman/d10bc2980e336294b7d2389f9b0c75bf", "anchor_text": "this script"}, {"url": "https://gist.github.com/pwstegman/7291c74ef43202faae6ab844c7ff224b", "anchor_text": "this script"}, {"url": "https://github.com/pwstegman/motor-imagery-tutorial", "anchor_text": "GitHub repo"}, {"url": "https://github.com/pwstegman/motor-imagery-tutorial/tree/master/data", "anchor_text": "data/"}, {"url": "https://www.npmjs.com/package/bcijs", "anchor_text": "BCI.js"}, {"url": "https://nodejs.org", "anchor_text": "here"}, {"url": "https://en.wikipedia.org/wiki/Common_spatial_pattern", "anchor_text": "common spatial pattern"}, {"url": "https://www.youtube.com/watch?v=zsOULC16USU&list=PLbbCsk7MUIGcO_lZMbyymWU2UezVHNaMq&index=43", "anchor_text": "lecture on CSP"}, {"url": "https://bci.js.org/docs/module-bcijs.features.html#.logvar", "anchor_text": "bci.features.logvar"}, {"url": "https://bci.js.org/examples/lda/", "anchor_text": "https://bci.js.org/examples/lda/"}, {"url": "https://bci.js.org/docs/module-bcijs.html#.ldaLearn", "anchor_text": "ldaLearn"}, {"url": "https://bci.js.org/docs/module-bcijs.html#.ldaProject", "anchor_text": "ldaProject"}, {"url": "https://bci.js.org/docs/module-bcijs.html#.confusionMatrix", "anchor_text": "confusionMatrix"}, {"url": "https://github.com/pwstegman/motor-imagery-tutorial/blob/master/classify-noUnknowns.js", "anchor_text": "here"}, {"url": "https://www.youtube.com/watch?v=zsOULC16USU&list=PLbbCsk7MUIGcO_lZMbyymWU2UezVHNaMq&index=43", "anchor_text": "lecture on CSP"}, {"url": "https://github.com/markert/fili.js", "anchor_text": "fili"}, {"url": "http://markert.github.io/fili.js/", "anchor_text": "interactive demo"}, {"url": "https://github.com/chen0040/js-regression", "anchor_text": "js-regression"}, {"url": "https://twitter.com/pwstegman", "anchor_text": "Twitter"}, {"url": "https://github.com/pwstegman/bcijs", "anchor_text": "pwstegman/bcijsEEG signal processing and machine learning in JavaScript \u2014 pwstegman/bcijsgithub.com"}, {"url": "https://www.npmjs.com/package/bcijs", "anchor_text": "bcijsEEG signal processing and machine learningwww.npmjs.com"}, {"url": "https://github.com/markert/fili.js", "anchor_text": "fili"}, {"url": "https://github.com/chen0040/js-regression", "anchor_text": "js-regression"}, {"url": "https://www.researchgate.net/publication/325529881_WebBCI_An_Electroencephalography_Toolkit_Built_on_Modern_Web_Technologies", "anchor_text": "published a paper"}, {"url": "https://medium.com/tag/brain-computer-interface?source=post_page-----d21f29cf165---------------brain_computer_interface-----------------", "anchor_text": "Brain Computer Interface"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----d21f29cf165---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/javascript?source=post_page-----d21f29cf165---------------javascript-----------------", "anchor_text": "JavaScript"}, {"url": "https://medium.com/tag/nodejs?source=post_page-----d21f29cf165---------------nodejs-----------------", "anchor_text": "Nodejs"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----d21f29cf165---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd21f29cf165&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&user=Pierce+Stegman&userId=91a2f69648c2&source=-----d21f29cf165---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd21f29cf165&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&user=Pierce+Stegman&userId=91a2f69648c2&source=-----d21f29cf165---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd21f29cf165&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d21f29cf165--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd21f29cf165&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d21f29cf165---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d21f29cf165--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d21f29cf165--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d21f29cf165--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d21f29cf165--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d21f29cf165--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d21f29cf165--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d21f29cf165--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d21f29cf165--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@pwstegman?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@pwstegman?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Pierce Stegman"}, {"url": "https://medium.com/@pwstegman/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "18 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F91a2f69648c2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&user=Pierce+Stegman&userId=91a2f69648c2&source=post_page-91a2f69648c2--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F91a2f69648c2%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feeg-motor-imagery-classification-in-node-js-with-bci-js-d21f29cf165&user=Pierce+Stegman&userId=91a2f69648c2&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}