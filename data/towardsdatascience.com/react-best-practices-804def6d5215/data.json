{"url": "https://towardsdatascience.com/react-best-practices-804def6d5215", "time": 1683001586.541308, "path": "towardsdatascience.com/react-best-practices-804def6d5215/", "webpage": {"metadata": {"title": "React Best Practices \u269b. The React Best Practices should follow\u2026 | by Sabesan Sathananthan | Towards Data Science", "h1": "React Best Practices \u269b", "description": "During my Internship period in Sysco LABS, I received significant exposure to React Js. For our project, we used React Js, and we followed React best practices. Therefore my team lead and my mentor\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/u/a66a40c6b858?source=post_page-----804def6d5215--------------------------------", "anchor_text": "Nadun Indunil", "paragraph_index": 0}, {"url": "https://github.com/facebook/react", "anchor_text": "React", "paragraph_index": 1}, {"url": "https://hackernoon.com/23-best-react-ui-component-libraries-and-frameworks-250a81b2ac42", "anchor_text": "components, libraries and frameworks", "paragraph_index": 1}, {"url": "https://github.com/facebook/create-react-app", "anchor_text": "create-react-app", "paragraph_index": 3}, {"url": "https://mobile.twitter.com/dan_abramov/status/1027248875072114689", "anchor_text": "tweeted", "paragraph_index": 5}, {"url": "https://reactjs.org/docs/react-api.html#reactmemo", "anchor_text": "memo", "paragraph_index": 11}, {"url": "https://github.com/airbnb/javascript/tree/master/react", "anchor_text": "Airbnb React/JSX Style Guide", "paragraph_index": 13}, {"url": "https://reactjs.org/docs/getting-started.html", "anchor_text": "Facebook Style Guide", "paragraph_index": 13}, {"url": "https://reactjs.org/docs/react-component.html#setstate", "anchor_text": "React Docs", "paragraph_index": 38}, {"url": "https://medium.com/u/87c8f67602eb?source=post_page-----804def6d5215--------------------------------", "anchor_text": "Harith Sankalpa", "paragraph_index": 47}, {"url": "https://medium.com/@harith.sankalpa/how-to-load-css-or-sass-styles-into-single-spa-framework-using-style-loader-7d5937fc1c53", "anchor_text": "problem", "paragraph_index": 47}, {"url": "https://github.com/webpack-contrib/mini-css-extract-plugin", "anchor_text": "Mini CSS Extract Text plugin", "paragraph_index": 48}, {"url": "https://github.com/emotion-js/emotion", "anchor_text": "EmotionJS", "paragraph_index": 49}, {"url": "https://glamorous.rocks/", "anchor_text": "Glamorous", "paragraph_index": 49}, {"url": "https://github.com/styled-components/styled-components", "anchor_text": "Styled Components", "paragraph_index": 49}, {"url": "https://medium.com/u/9be478c2735f?source=post_page-----804def6d5215--------------------------------", "anchor_text": "Kavindu Vindika", "paragraph_index": 50}, {"url": "https://medium.com/@kavinduvsomadasa/unit-test-in-react-with-jest-enzyme-bde3840ade8", "anchor_text": "Jest and Enzyme Testing", "paragraph_index": 50}, {"url": "https://eslint.org/", "anchor_text": "ESlint", "paragraph_index": 54}, {"url": "https://eslint.org/docs/user-guide/configuring", "anchor_text": "configuration file", "paragraph_index": 54}, {"url": "https://prettier.io/", "anchor_text": "Prettier", "paragraph_index": 56}, {"url": "https://www.sonarlint.org/", "anchor_text": "Sonarlint", "paragraph_index": 56}, {"url": "https://www.npmjs.com/package/husky", "anchor_text": "Husky", "paragraph_index": 56}, {"url": "https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en", "anchor_text": "Chrome", "paragraph_index": 58}, {"url": "https://addons.mozilla.org/en-US/firefox/addon/react-devtools/", "anchor_text": "Firefox", "paragraph_index": 58}, {"url": "https://twitter.com/TheSabesan", "anchor_text": "Twitter", "paragraph_index": 60}, {"url": "https://twitter.com/TheSabesan", "anchor_text": "Twitter", "paragraph_index": 61}, {"url": "http://sabesansathananthan.now.sh", "anchor_text": "sabesansathananthan.now.sh", "paragraph_index": 63}], "all_paragraphs": ["During my Internship period in Sysco LABS, I received significant exposure to React Js. For our project, we used React Js, and we followed React best practices. Therefore my team lead and my mentor Nadun Indunil suggested that I write about React best practices. This is my 25th article in Medium.", "React is a JavaScript library for developing user interfaces. React library was created by Facebook. React allows for integration with many exciting components, libraries and frameworks. Admittedly, developers can make their own components.", "Before the best practices, I would suggest Test-driven Development when you develop a react application. Test-driven Development means write a test first and then develop your code according to the tests. It is easier to identify the bugs. If you follow another Software development process when you find a bug, write a test first.", "File organization is not only the best practice for react applications, but also it is the best for other applications as well. The file structure of create-react-app is one possible way of organizing your react files. While there is not necessarily one file structure that is better than another, it important to keep your files organized. In React, your file structure will grow rapidly, considering every component has at least one file associated with it. Keep an assets folder that contains top-level CSS, images, and font files. Maintain a helpers folder to put other files for any kind of file for functionalities. Keep all the files related to a component into one folder. Usually, the component folder contains more than a single component file, such as test file CSS and one or more component files. If there are any minor components used by a particular component only, better to keep those all small components in the component folder. When you keep your large components in their own folder and the small components that are used by the components are in a subfolder is easier to understand the file hierarchy. developers mainly named the main component file inside a file index.js. This can become cumbersome to navigate once you have several files, all named as index.js. The solution for this is to add a package.json file to each of your components folders, set the main entry point for this corresponding folder. For instance, for button component main entry point is Button.js. Adding package.json to each folder is not a good practice but It helps to easily handle your files. So we can add the following package.json file inside the button component folder.", "When you use Redux in your React project you can use Rails-style or Domain-style or \u201cDucks\u201d pattern folder structure according to your project. In Rails-style pattern, separate folders are used for \u201cactions\u201d, \u201cconstants\u201d, \u201creducers\u201d, \u201ccontainers\u201d, and \u201ccomponents\u201d. In Domain-style pattern, separate folders are used per feature or domain, possibly with sub-folders per file type. \u201cDucks\u201d pattern is similar to domain style, but it explicitly ties together actions and reducers, often by defining them in the same file. However, folder structure could be something developers wish but there should be an easy way to handle components. React says, it doesn\u2019t have opinions on how you put files into folders. New teams to react use Duck style. When they get matured they start to use rails. Rails has its advantage of understanding the project easily.", "Dan Abramov tweeted a solution that \ud83d\udc49", "moves files around until it feels right.", "That\u2019s exactly what you should do. You should move files around until they feel right.", "As we all know, React will work with large components. But if we break them into small sizes, we can reuse them. Small components are easier to read, test, maintain, and reuse. Most beginners in React create Class components even when they aren\u2019t using component state or life cycle methods. Functional components are more efficient for simple components.", "The above Class component could be written as below.", "When you are using functional component you have no control over the re-rendering process. When something changes or even component changes itself, React will re-render functional components. In former react versions has a solution to use React.PureComponent. PureComponent allows shallow props and state comparison. When props or content of the component or component itself changed component will re-render. Otherwise, PureComponent skip re-render and reuse the last rendered result instead.", "After React v16.6.0 React introduces a new feature that was memo. Memo shallowly compare props. When props or content of the component or component itself changed component will re-render. Based on the comparison react will either reuse last rendered result or re-render. Memo allows you to create an unadulterated functional component. Memo obliterate the use of stateful components and PureComponent.", "Each functional component should have one function that means one functional component is equal to one function. When you are creating a functional component with one function you can improve the reusability of that component.", "Not only in React but also in all application development the common rule is keeping the code is succinct and tiny as much as possible. React best practices instruct to keep the error-free code and incisive code. Don\u2019t Repeat Yourself (DRY) is a principle of software development focused at minimizing repetition of software patterns, replacing it with abstractions or using data normalization to avoid redundancy. In code fomatting you can use your own style guide or use a popular fully-fledged style guide(Airbnb React/JSX Style Guide, Facebook Style Guide, etc). If you start to follow anyone of the style follow that don\u2019t confuse with others.", "When creating an array of JSX elements react requires you to add a key prop to your element. This is commonly done using a map function which in turn results in people using an index to set to the key property. This is bad! React uses the key property to track each element in the array and due to the collapsing nature of an array. This can easily result in the wrong information being rendered in the wrong place. This is especially apparent when looping through class components with the state.", "When Creating React component it is important to keep in mind that you are still building an HTML document. People tend to get divitis in React which ultimately leads to incorrect HTML.", "In the above example, the div would end up being a direct child of ul which is incorrect HTML vs the below example where the li end up being the direct child of ul, forming correct HTML.", "We can use another approach that uses <React.Fragment> tags. <React.Fragment> was introduced in React v16.2, we can use them instead of the extraneous <div> tag.", "Add a comment in the application where necessary. Removing the ability to comment from an application meant I HAVE to write literate code, no exceptions. It gives untidy free code sections. In general, comments are a wart that stipulates poor design, especially long-winded comments where its clear the developer didn\u2019t have a clue what the heck they are doing and tried to make up for it by writing a comment.", "Since functional components don\u2019t require this binding you\u2019ll want to use them whenever possible. But if you are using ES6 class, you\u2019ll want to bind this manually since React doesn't auto bind the function within that component. Here are some examples for doing so.", "adding the following snippet to the render known as bind in render", "This way is clear, succinct and works but it can cause a slight performance issue because a new function is going to be called every time this component re-renders which could be frequent.", "Example 2: Arrow function in render.", "Adding the following snippet to the render known as arrow function in render.", "This way is clear, succinct like example 1, but like example 1 it will also create a new function every time this component renders.", "Adding the following snippet to the constructor known as bind in constructor.", "This way is going to solve the potential performance issue of Examples 1 and 2. Don\u2019t forget to call super in the constructor.", "Example 4: Arrow function in Class property", "Adding the following snippet to the class known as arrow function in class property.", "This way is very clean, readable and it\u2019s going to avoid performance issues of Examples 1 and 2 and avoid the repetition in Example 3. Be aware however that this method does rely on experimental features and it\u2019s not an official part of the ECMA Script specification. You are able to experiment language features by installing and configuring the babel package and apps created by a create react app has many features enabled.", "We can divide the heading into two subheadings such as.", "When you use props in the initial state the problem is that the constructor is called when the component is created. So the constructor is only called once. If you change something to the props next time, the component state will not update and it remains the same as the previous value. You can fix the problem using react lifecycle method componentDidUpdate. The componentDidUpdate method updates the component when props changed. componentDidUpdate won\u2019t be invoked on the initial render. But, using props in the initial state is not the best practice.", "Initializing states as class fields is the best practice. Initializing component state with the constructor is not that much bad practice but it increases the redundancy in your code and makes some performance issues. When you initialize the state inside the class constructor it unwantedly calls super and remembering about props, it makes performance issue.", "Another issue is when you are going to initialize state inside the constructor think about the number of lines that you need, want you need constructor(),super()?", "Name a function or a component after typing the scripts because they should be easily identifiable. For example, you choose the name of a component like FacebookButton instantly because of the component code. But in the future, you may use that component as TwitterButton,YoutubeButton. So, the best practice is to name that component as Button. Normally when you finish the function, you should be able to choose the common name for the component and function. Naming in the end increases the reusability.", "In React, when we can categorize the components by state. There are stateful and stateless. Stateful component store component\u2019s state information and provide necessary context. In the other way around stateless components have no memory and can\u2019t give context to the part of the user interface. Stateless components are scalable, reusable and like pure JavaScript functions. Separates the stateful fetching logic from rendering stateless logic. One better way is to use a stateful component to fetch data and another stateless component to display that fetched data.", "After React v16.08 there is a new feature called \u2018React Hooks\u2019. React Hooks write stateful functional components. React Hooks obliterate the use of class components.", "If data is not being directly rendered in the render method it should not be in the component state. Data that is not being directly rendered can cause unnecessary re-renders.", "According to the React Docs React doesn\u2019t guarantee that stage changes are applied immediately. Therefore reading this.state right after calling setState is a potential pitfall because this.state may not actually be what you think it is.", "Instead of updating the state within an object like the above snippet, we can use the following function.", "The above function will receive the previous state as its first argument, and props at the time the update is applied as its second argument. State update is an async operation, so to update the state object, we need to use updater function with setState.", "When you are working in React remember that you are using JSX (JavaScript Extension) instead of HTML. The component created by you should be named in the upper camel case, a.k.a Pascal Case. The upper camel case means words are written without spaces, and the first letter of each word is capitalized. For example, If there is a component named as selectbutton then you should name it as SelectButton instead of selectbutton. Using the upper camel case helps to JSX to differentiate the default JSX element tags from created elements. However, you can use lower case letters to name a component but it is not a best practice.", "The \u2018prop-types\u2019 is a library for type checking props and it can help prevent bugs by ensuring you are using the right data types for your props. React.PropTypes has moved into a different package since React v15.5. React.PropTypes package gives us the ability to type check a component\u2019s props and give it default values. So you are going to use an external library by npm install.", "Import the library, add PropTypes to the component, set the data type accordingly and if the prop is required, add isRequired like below.", "Default values can be assigned to the props using defaultProps. When a component does not receive its props, it refers to the defaultProps that has been assigned. It is not necessary to assign defaultProps, if you have marked your props as required. In the code snippet below you can see all the default values that have been assigned to the props for ModalButton. For this example, I used React Bootstrap framework.", "Always define explicit defaultProps for all optional props", "It is important to note that do type-checking using PropsTypes after assigned the defaultProps. Therefore it type-checks the default values assigned to the props as well.", "During my internship works we faced a problem in styling, and especially theming. The CSS was loaded in the development environment but it didn\u2019t load in the production environment. My Teammate Harith Sankalpa wrote about that problem. But now I found so many best approaches according to different applications.", "When you have a big CSS (SCSS)file you can use the global prefix followed by the Block-Element-Modifier convention to avoid name collision. When your application becomes bigger this method is not scalable. So you have to evaluate your CSS(SCSS) file. There is another approach to extract CSS via webpack\u2019s Mini CSS Extract Text plugin (it requires webpack 4 to work) but it creates heavy dependency on the webpack. If you use this method, testing your component is difficult. Best practice is to have an easily testable application therefore, following this approach is not the best practice.", "EmotionJS, Glamorous and Styled Components are some of the new arrived CSS in JS libraries. You can use these depending on your use cases. When you need to spit out a compiled CSS for production you could use the EmotionJS library. When you have a complicated theming issue you can use Glamorous and Styled Component libraries.", "Not only in React but also in other programming languages you should do testing. Testing is important, because it ensures that the code behaves as expected and testable easily and quickly. In best practice, create a __Test__ folder inside the component folder. Create test files with the name of the component with a .test.js suffix. You can use Jest as a test runner and Enzyme as a testing utility for React. My Teammate Kavindu Vindika wrote about Jest and Enzyme Testing, if you want you can check it out.", "Crash testing a component is a simple fast way to ensure all your components are functioning without crashing. Component crash testing is easy to throw into every component you make.", "You should be doing obviously more extensive testing than the crash testing. If you write more test cases it will give more test coverage for your code. But, very least you should be doing some kind of crash testing. In crash testing what we do is create an element and then it uses ReactDom and mounts whatever component you imported into that the div was just created and then it unmounts div.", "A true React developer do proper testing for the entire react application.", "ESlint keeps your code nice and tidy by yelling at you with squigglies. You can link this to your IDE. The best practice is to keep your own ESLint configuration file.", "A good Developer fix all ESlint errors and warnings rather than disabling that error.", "Prettier is a code formatting tool. Prettier has a set of rules for code formatting and indention. You can use Sonarlint to check spells, function length and suggestions for better approaches. Using Husky is not only a good practice for React but also a good practice for Git. You can define the husky in package.json file. Husky prevents your application from bad commit and bad push.", "Code snippets help you to code best and trend syntax. They keep your code relatively error-free. You can use a lot of snippet libraries such as ES7 React, JavaScript (ES6) code snippets, etc.", "React Developer Tools is available as an extension for Chrome and Firefox. If you use Safari or another standalone shell use the following command to install it.", "If you are looking for a web application built in React, you can see in the Components tab, the component hierarchy. If you click on a component you can view the props and state of that component. As you can see React Developer Tools extension is very valuable tool to test and debug and really understand what\u2019s happening with that app.", "This article describes the best practices in React. These practices improve your application performance, your application code, and your coding skills. As my 25th article, I would like to update this article dynamically. That means I will update this article with the new trends. If I update this article I will inform via Twitter. Keep in touch. Woohoo!!! \ud83d\ude4c", "Follow me on Twitter and Medium if you\u2019re interested in more in-depth and informative write-ups like these in the future!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Software Engineer \ud83d\udc68\u200d\ud83d\udcbb @SyscoLABSSL | Postgard\ud83e\uddd1\u200d\ud83c\udf93 in CSE at UOM | Technical Writer \u270d\ufe0f | sabesansathananthan.now.sh | Still makes silly mistakes daily."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F804def6d5215&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----804def6d5215--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----804def6d5215--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://sabesan96.medium.com/?source=post_page-----804def6d5215--------------------------------", "anchor_text": ""}, {"url": "https://sabesan96.medium.com/?source=post_page-----804def6d5215--------------------------------", "anchor_text": "Sabesan Sathananthan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb255948cc1f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&user=Sabesan+Sathananthan&userId=b255948cc1f5&source=post_page-b255948cc1f5----804def6d5215---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F804def6d5215&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F804def6d5215&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@mimithian?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Mimi Thian"}, {"url": "https://unsplash.com/s/photos/coding-practice?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://medium.com/u/a66a40c6b858?source=post_page-----804def6d5215--------------------------------", "anchor_text": "Nadun Indunil"}, {"url": "https://github.com/facebook/react", "anchor_text": "React"}, {"url": "https://hackernoon.com/23-best-react-ui-component-libraries-and-frameworks-250a81b2ac42", "anchor_text": "components, libraries and frameworks"}, {"url": "https://github.com/facebook/create-react-app", "anchor_text": "create-react-app"}, {"url": "https://mobile.twitter.com/dan_abramov/status/1027248875072114689", "anchor_text": "tweeted"}, {"url": "https://reactjs.org/docs/react-api.html#reactmemo", "anchor_text": "memo"}, {"url": "https://www.kirupa.com/react/images/c_app_144.png", "anchor_text": "https://www.kirupa.com/react/images/c_app_144.png"}, {"url": "https://github.com/airbnb/javascript/tree/master/react", "anchor_text": "Airbnb React/JSX Style Guide"}, {"url": "https://reactjs.org/docs/getting-started.html", "anchor_text": "Facebook Style Guide"}, {"url": "https://quotefancy.com/quote/46568/Lemony-Snicket-Don-t-repeat-yourself-It-s-not-only-repetitive-it-s-redundant-and-people", "anchor_text": "https://quotefancy.com/quote/46568/Lemony-Snicket-Don-t-repeat-yourself-It-s-not-only-repetitive-it-s-redundant-and-people"}, {"url": "https://www.toptal.com/sql/guide-to-data-synchronization-in-microsoft-sql-server", "anchor_text": "https://www.toptal.com/sql/guide-to-data-synchronization-in-microsoft-sql-server"}, {"url": "https://codeburst.io/javascript-arrow-functions-for-beginners-926947fc0cdc", "anchor_text": "https://codeburst.io/javascript-arrow-functions-for-beginners-926947fc0cdc"}, {"url": "https://indepth.dev/in-depth-explanation-of-state-and-props-update-in-react/", "anchor_text": "https://indepth.dev/in-depth-explanation-of-state-and-props-update-in-react/"}, {"url": "https://www.barrymichaeldoyle.com/sub-rendering/", "anchor_text": "https://www.barrymichaeldoyle.com/sub-rendering/"}, {"url": "https://reactjs.org/docs/react-component.html#setstate", "anchor_text": "React Docs"}, {"url": "https://unsplash.com/@sapegin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Artem Sapegin"}, {"url": "https://unsplash.com/s/photos/reactjs?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://medium.com/u/87c8f67602eb?source=post_page-----804def6d5215--------------------------------", "anchor_text": "Harith Sankalpa"}, {"url": "https://medium.com/@harith.sankalpa/how-to-load-css-or-sass-styles-into-single-spa-framework-using-style-loader-7d5937fc1c53", "anchor_text": "problem"}, {"url": "https://github.com/webpack-contrib/mini-css-extract-plugin", "anchor_text": "Mini CSS Extract Text plugin"}, {"url": "https://github.com/emotion-js/emotion", "anchor_text": "EmotionJS"}, {"url": "https://glamorous.rocks/", "anchor_text": "Glamorous"}, {"url": "https://github.com/styled-components/styled-components", "anchor_text": "Styled Components"}, {"url": "https://wordpress.org/plugins/custom-css-js/", "anchor_text": "https://wordpress.org/plugins/custom-css-js/"}, {"url": "https://medium.com/u/9be478c2735f?source=post_page-----804def6d5215--------------------------------", "anchor_text": "Kavindu Vindika"}, {"url": "https://medium.com/@kavinduvsomadasa/unit-test-in-react-with-jest-enzyme-bde3840ade8", "anchor_text": "Jest and Enzyme Testing"}, {"url": "https://eslint.org/", "anchor_text": "ESlint"}, {"url": "https://eslint.org/docs/user-guide/configuring", "anchor_text": "configuration file"}, {"url": "https://prettier.io/", "anchor_text": "Prettier"}, {"url": "https://www.sonarlint.org/", "anchor_text": "Sonarlint"}, {"url": "https://www.npmjs.com/package/husky", "anchor_text": "Husky"}, {"url": "https://medium.com/dubizzletechblog/setting-up-prettier-and-eslint-for-js-and-react-apps-bbc779d29062", "anchor_text": "https://medium.com/dubizzletechblog/setting-up-prettier-and-eslint-for-js-and-react-apps-bbc779d29062"}, {"url": "https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en", "anchor_text": "Chrome"}, {"url": "https://addons.mozilla.org/en-US/firefox/addon/react-devtools/", "anchor_text": "Firefox"}, {"url": "https://twitter.com/TheSabesan", "anchor_text": "Twitter"}, {"url": "https://twitter.com/TheSabesan", "anchor_text": "Twitter"}, {"url": "https://medium.com/tag/react?source=post_page-----804def6d5215---------------react-----------------", "anchor_text": "React"}, {"url": "https://medium.com/tag/reactjs?source=post_page-----804def6d5215---------------reactjs-----------------", "anchor_text": "Reactjs"}, {"url": "https://medium.com/tag/javascript?source=post_page-----804def6d5215---------------javascript-----------------", "anchor_text": "JavaScript"}, {"url": "https://medium.com/tag/best-practices?source=post_page-----804def6d5215---------------best_practices-----------------", "anchor_text": "Best Practices"}, {"url": "https://medium.com/tag/programming?source=post_page-----804def6d5215---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F804def6d5215&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&user=Sabesan+Sathananthan&userId=b255948cc1f5&source=-----804def6d5215---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F804def6d5215&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&user=Sabesan+Sathananthan&userId=b255948cc1f5&source=-----804def6d5215---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F804def6d5215&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----804def6d5215--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F804def6d5215&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----804def6d5215---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----804def6d5215--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----804def6d5215--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----804def6d5215--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----804def6d5215--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----804def6d5215--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----804def6d5215--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----804def6d5215--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----804def6d5215--------------------------------", "anchor_text": ""}, {"url": "https://sabesan96.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://sabesan96.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sabesan Sathananthan"}, {"url": "https://sabesan96.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "528 Followers"}, {"url": "http://sabesansathananthan.now.sh", "anchor_text": "sabesansathananthan.now.sh"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb255948cc1f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&user=Sabesan+Sathananthan&userId=b255948cc1f5&source=post_page-b255948cc1f5--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F890b15ea99cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freact-best-practices-804def6d5215&newsletterV3=b255948cc1f5&newsletterV3Id=890b15ea99cd&user=Sabesan+Sathananthan&userId=b255948cc1f5&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}