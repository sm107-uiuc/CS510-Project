{"url": "https://towardsdatascience.com/music-genre-classification-with-tensorflow-3de38f0d4dbb", "time": 1683012279.181472, "path": "towardsdatascience.com/music-genre-classification-with-tensorflow-3de38f0d4dbb/", "webpage": {"metadata": {"title": "Music Genre Classification With TensorFlow | by C\u00e9lestin Hermez | Towards Data Science", "h1": "Music Genre Classification With TensorFlow", "description": "The rise of music streaming services has made music ubiquitous. We listen to music during our commute, while we exercise, work or simply to relax. The ongoing disturbance in our daily lives has not\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.wired.com/2017/05/secret-hit-making-power-spotify-playlist/", "anchor_text": "One key feature of these services is the playlists", "paragraph_index": 1}, {"url": "https://artists.spotify.com/blog/how-spotify-discovers-the-genres-of-tomorrow", "anchor_text": "automated music genre classification", "paragraph_index": 1}, {"url": "http://wilsoncheung.me/", "anchor_text": "Wilson Cheung", "paragraph_index": 1}, {"url": "https://github.com/joygu1370", "anchor_text": "Joy Gu", "paragraph_index": 1}, {"url": "https://github.com/celestinhermez/music-genre-classification", "anchor_text": "here", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/supervised-vs-unsupervised-learning-14f68e32ea8d", "anchor_text": "Devin\u2019s article on the topic", "paragraph_index": 3}, {"url": "https://github.com/mdeff/fma%7DFreeMusicArchive", "anchor_text": "FreeMusicArchive", "paragraph_index": 3}, {"url": "https://arxiv.org/abs/1612.01840", "anchor_text": "a paper", "paragraph_index": 3}, {"url": "https://deff.ch/", "anchor_text": "Micha\u00ebl Defferrard", "paragraph_index": 6}, {"url": "https://kirellbenzi.com/", "anchor_text": "Kirell Benzi", "paragraph_index": 6}, {"url": "https://people.epfl.ch/pierre.vandergheynst", "anchor_text": "Pierre Vandergheynst", "paragraph_index": 6}, {"url": "https://www.ntu.edu.sg/home/xbresson", "anchor_text": "Xavier Bresson", "paragraph_index": 6}, {"url": "https://towardsdatascience.com/a-comprehensive-hands-on-guide-to-transfer-learning-with-real-world-applications-in-deep-learning-212bf3b2f27a", "anchor_text": "transfer learning", "paragraph_index": 11}, {"url": "https://arxiv.org/abs/1801.04381%7DMobileNetV2", "anchor_text": "MobileNetV2", "paragraph_index": 11}, {"url": "https://towardsdatascience.com/what-are-overfitting-and-underfitting-in-machine-learning-a96b30864690", "anchor_text": "overfitting", "paragraph_index": 14}, {"url": "https://github.com/celestinhermez/music-genre-classification", "anchor_text": "repository on GitHub", "paragraph_index": 16}, {"url": "https://cloud.google.com/storage/docs/creating-buckets", "anchor_text": "Google Cloud Storage bucket", "paragraph_index": 16}, {"url": "https://colab.research.google.com/notebooks/intro.ipynb#recent=true", "anchor_text": "Google Colab", "paragraph_index": 16}, {"url": "https://codelabs.developers.google.com/codelabs/keras-flowers-data/#4", "anchor_text": "codelab", "paragraph_index": 17}, {"url": "https://colab.sandbox.google.com/notebooks/io.ipynb#scrollTo=S7c8WYyQdh5i", "anchor_text": "here", "paragraph_index": 19}, {"url": "https://github.com/mdeff/fma", "anchor_text": "FreeMusicArchive", "paragraph_index": 21}, {"url": "https://www.tensorflow.org/api_docs/python/tf/data/Dataset", "anchor_text": "TensorFlow Dataset", "paragraph_index": 22}, {"url": "https://www.tensorflow.org/guide/data", "anchor_text": "pipeline which return a BatchedDataset", "paragraph_index": 22}, {"url": "https://www.tensorflow.org/api_docs/python/tf/py_function", "anchor_text": "tf.py_function", "paragraph_index": 22}, {"url": "https://github.com/celestinhermez/music-genre-classification", "anchor_text": "repository", "paragraph_index": 22}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "TFRecord format", "paragraph_index": 23}, {"url": "https://towardsdatascience.com/how-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1", "anchor_text": "due to fast I/O thanks to parallelization", "paragraph_index": 23}, {"url": "https://www.tensorflow.org/api_docs/python/tf/train/Feature", "anchor_text": "Features", "paragraph_index": 23}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "tf.Example", "paragraph_index": 23}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "TensorFlow official documentation", "paragraph_index": 23}, {"url": "https://towardsdatascience.com/how-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1", "anchor_text": "tutorial on audio pipelines", "paragraph_index": 23}, {"url": "https://towardsdatascience.com/understanding-1d-and-3d-convolution-neural-network-keras-9d8f76e29610", "anchor_text": "1D convolutional layers", "paragraph_index": 26}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/layers/MaxPool1D", "anchor_text": "pooling layers", "paragraph_index": 26}, {"url": "https://www.tensorflow.org/tensorboard/scalars_and_keras", "anchor_text": "iterate during model development", "paragraph_index": 27}], "all_paragraphs": ["The rise of music streaming services has made music ubiquitous. We listen to music during our commute, while we exercise, work or simply to relax. The ongoing disturbance in our daily lives has not dampened the role of music to elicit emotion and process our thoughts, as exemplified in the emergence of \u201cZoom concerts\u201d.", "One key feature of these services is the playlists, often grouped by genre. This data could come from manual labeling by the people publishing the songs. But this does not scale well and might be gamed by artists who want to capitalize on the popularity of a specific genre. A better option is to rely on automated music genre classification. With my two collaborators Wilson Cheung and Joy Gu, we sought to compare different methods of classifying music samples into genres. In particular, we evaluated the performance of standard machine learning vs. deep learning approaches. What we found is that feature engineering is crucial, and that domain knowledge can really boost performance.", "After describing the data source used, I give a brief overview of the methods we used and their results. In the last part of this article, I will spend more time explaining the way the TensorFlow framework in Google Colab can perform these tasks efficiently with GPU or TPU runtimes thanks to the TFRecord format. All the code is available here, and we are happy to share our more detailed report with anyone interested.", "Predicting the genre of an audio sample is a supervised learning problem (for a good primer on supervised vs. unsupervised learning, I recommend Devin\u2019s article on the topic). In other words, we needed data that contains labeled examples. The FreeMusicArchive is a repository of audio segments with relevant labels and metadata, which was originally collected for a paper at the International Society for Music Information Retrieval Conference (ISMIR) in 2017.", "We focused our analysis on the small subset of the data provided. It contains 8,000 audio segments, each 30 seconds in length and classified as one of eight distinct genres:", "Each genre comes with 1,000 representative audio segments. With the sample rate of 44,100 Hz, this means there are more than 1 million data points for each audio sample, or more than 10\u2079 data points total. Using all of this data in a classifier is a challenge, which we will discuss more in upcoming sections.", "For instructions on how to download the data, please refer to the README included in the repository. We were very grateful to Micha\u00ebl Defferrard, Kirell Benzi, Pierre Vandergheynst, Xavier Bresson for putting this data together and making it freely available, but can only imagine the insights that become available at the scale of the data owned by Spotify or Pandora Radio. With this data, we can describe various models to perform the task at hand.", "I will keep the theoretical details to a minimum, but will link to relevant resources whenever possible. In addition, our report contains a lot more information than what I can include here, in particular around feature engineering, so do let me know in the comments if you would like me to share it with you.", "We used Logistic regression, k-nearest neighbors (kNN), Gaussian Naive Bayes and Support Vector machines (SVM):", "For deep learning, we leverage the TensorFlow framework (see more details in the second part of this article). We built different models based on the type of inputs.", "With raw audio, each example is an audio sample of 30s, or approximately 1.3 million data points. These floating point values (positive or negative) represent the wave displacement at a certain point in time. In order to manage computational resources, less than 1% of the data can be used. With these features and the associated label (one-hot encoded), we can build a convolutional neural network. The general architecture is as follows:", "On the other hand, spectrograms act as a visual representation of an audio sample. This inspired considering the training data as images, and leveraging a pre-trained model through transfer learning. For each example, we can form the Mel Spectrogram which is a matrix. If we calculate the dimensions correctly, this matrix can be represented as a 224x224x3 image. These are the right dimensions to leverage MobileNetV2, which has a history of strong performance on image classification tasks. The idea of transfer learning is to use the base layers of the pre-trained model in order to extract features, and replace the last layer by a custom classifier (Dense layers in our case). This works because the base layers can usually generalize well to all images, even ones they were not trained on.", "We use a 20% testing set to assess the performance of our models. We can summarize the results in the table below:", "The convolutional neural network applying transfer learning to the spectrogram is the top performer, although SVM and Gaussian Naive Bayes are similar in performance (which is interesting in itself given the simplifying assumptions of the latter). We describe the best hyperparameters and model architectures in our report, but I will not include them here.", "Our analysis of training and validation curves highlighted the issue of overfitting, as shown in the graph below (a similar graph exists for most of our models). The characteristic pattern present helps us identify this issue. We devised some solutions for this, which could be implemented in future iterations of this project:", "TensorFlow is a very powerful tool to build neural networks at scale, especially when used in combination with Google Colab\u2019s free GPU/TPU runtimes. The main insight from this project was to identify bottlenecks: my original implementation was extremely slow, even using GPU\u2019s. I discovered that the issue was the I/O process (from Drive, which is very slow) rather than the training process. Using the TFrecord format speeds things up with parallelization, which makes model training and development much faster.", "Before I get started, one important note: while all the songs in the dataset are in the MP3 format, I converted them to wav files as TensorFlow has better built-in support for them. Please refer to the repository on GitHub to see all the code relevant to this project. The code also assumes that you have a Google Cloud Storage bucket where all the wav files are available, a Google Drive with the metadata uploaded and that you are working on Google Colab. Nonetheless, adapting all the code to another system (either cloud-based or local) should be relatively straightforward.", "This codelab from Google, as well as the TensorFlow official documentation, was really helpful for this project and some of the code is merely adapted from these sources.", "A significant number of libraries are required for this project. The requirements.txt file in the repository handles the installation for you, but you can also find the detailed list below.", "The first step is to mount the Drive (where the metadata has been uploaded), and authenticate with the GCS bucket where the audio files are stored. Technically, the metadata could be uploaded to GCS as well, which would remove the need for mounting the Drive, but this is how my own project was structured. You can find more details on how to import files into Colab here.", "We also store some variables for future use, around data size e.g.", "The next set of functions read in necessary metadata information. I did not write this code, but merely adapted it from the FreeMusicArchive. This part will most likely change in your own projects, depending on the dataset you are working with.", "We then need functions to create a TensorFlow Dataset. The idea is to loop over the list of filenames, applying a series of operations in a pipeline which return a BatchedDataset, containing a feature tensor and a label tensor. We use TensorFlow built-in functions and Python functions (with the tf.py_function, very useful to use Python functions in a data pipeline). Here I only include functions to create the dataset from raw audio data, but the process is extremely similar to create it with the spectrogram as features (see the repository for more details). You will need to make slight edits to this pipeline in your own projects, changing the shape of the data for instance, but the overall structure will remain the same.", "Now that we have the dataset, we store it on GCS using the TFRecord format. This is the recommended format to use with GPU\u2019s and TPU\u2019s, due to fast I/O thanks to parallelization. The main idea is that of a dictionary of tf.Features, stored in a tf.Example. We write the Dataset into these Examples, stored on GCS. This part of the code should require minimal edits for other projects, with the potential exception of changing feature types. If the data has been uploaded to Records format once, this part can be skipped. Most of the code in this section has been adapted from the TensorFlow official documentation as well as this tutorial on audio pipelines.", "Once these records have been stored, we need other functions to read them. Each Example is processed in turn, extracting the relevant information from the TFRecord and reconstructing a tf.Dataset. This can seem like a circular process (create a tf.Dataset \u2192 upload to GCS as TFRecord \u2192 read TFRecord into a tf.Dataset), but this actually provides massive speed efficiencies by streamlining the I/O process. Using GPU\u2019s or TPU\u2019s does not help if I/O is the bottleneck, and this approach allows us to fully leverage their speed gains during training by optimizing data loading. If another dataset is used, the main changes will be around data dimensions.", "It is important that the data be properly split into training-validation-test sets (64%-16%-20%), with the former two used to tune model architecture and the latter to assess model performance. The split happens at the filename level, and the pipeline to read TFRecord Examples is applied on the appropriate set of names.", "Finally, we can use Keras API\u2019s to build and test models. There is a wealth of information online on how to build models with Keras, so I will not delve into the details, but what is significant here is the use of 1D convolutional layers combined with pooling layers to extract features from raw audio.", "The last relevant bit of information is about using TensorBoard to plot training and validation curves. These highlight the issue of overfitting, and open the areas for future work indicated in the conclusion. It could also be used to iterate during model development.", "In conclusion, it was enlightening to benchmark different machine learning approaches to the same machine learning task. This project highlighted the importance of domain knowledge and feature engineering, as well as the power of standard, relatively easy machine learning techniques such as Naive Bayes. Overfitting is an issue due to the large size of features compared to the number of examples, but I am confident future efforts could help mitigate that issue.", "I was happily surprised by the strong performance of transfer learning on spectrograms, and contend we could do even better by using more features informed by music theory. However, deep learning techniques on raw audio do show promise if more data were available to extract patterns. We can envision an application where classification can happen on audio samples directly, without feature engineering. I look forward to seeing everything you will do by building on the work presented in this article!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I work in tech. I write about data science and machine learning. I dream about creating my own TV show."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F3de38f0d4dbb&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@celestinhermez?source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@celestinhermez?source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": "C\u00e9lestin Hermez"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5f58f594a061&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&user=C%C3%A9lestin+Hermez&userId=5f58f594a061&source=post_page-5f58f594a061----3de38f0d4dbb---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3de38f0d4dbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3de38f0d4dbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.wired.com/2017/05/secret-hit-making-power-spotify-playlist/", "anchor_text": "One key feature of these services is the playlists"}, {"url": "https://artists.spotify.com/blog/how-spotify-discovers-the-genres-of-tomorrow", "anchor_text": "automated music genre classification"}, {"url": "http://wilsoncheung.me/", "anchor_text": "Wilson Cheung"}, {"url": "https://github.com/joygu1370", "anchor_text": "Joy Gu"}, {"url": "https://github.com/celestinhermez/music-genre-classification", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/supervised-vs-unsupervised-learning-14f68e32ea8d", "anchor_text": "Devin\u2019s article on the topic"}, {"url": "https://github.com/mdeff/fma%7DFreeMusicArchive", "anchor_text": "FreeMusicArchive"}, {"url": "https://arxiv.org/abs/1612.01840", "anchor_text": "a paper"}, {"url": "https://deff.ch/", "anchor_text": "Micha\u00ebl Defferrard"}, {"url": "https://kirellbenzi.com/", "anchor_text": "Kirell Benzi"}, {"url": "https://people.epfl.ch/pierre.vandergheynst", "anchor_text": "Pierre Vandergheynst"}, {"url": "https://www.ntu.edu.sg/home/xbresson", "anchor_text": "Xavier Bresson"}, {"url": "https://towardsdatascience.com/support-vector-machine-introduction-to-machine-learning-algorithms-934a444fca47", "anchor_text": "SVM"}, {"url": "https://towardsdatascience.com/machine-learning-basics-with-the-k-nearest-neighbors-algorithm-6a6e71d01761", "anchor_text": "kNN"}, {"url": "https://towardsdatascience.com/naive-bayes-classifier-81d512f50a7c", "anchor_text": "Naive Baye"}, {"url": "https://towardsdatascience.com/logistic-regression-detailed-overview-46c4da4303bc", "anchor_text": "Logistic regression"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Conv1D", "anchor_text": "1-Dimensional convolutional layers"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/layers/MaxPool1D", "anchor_text": "MaxPooling layers"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Dense", "anchor_text": "Dense layers"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/layers/Dropout", "anchor_text": "Dropout layers"}, {"url": "https://towardsdatascience.com/a-comprehensive-hands-on-guide-to-transfer-learning-with-real-world-applications-in-deep-learning-212bf3b2f27a", "anchor_text": "transfer learning"}, {"url": "https://arxiv.org/abs/1801.04381%7DMobileNetV2", "anchor_text": "MobileNetV2"}, {"url": "https://towardsdatascience.com/what-are-overfitting-and-underfitting-in-machine-learning-a96b30864690", "anchor_text": "overfitting"}, {"url": "https://github.com/celestinhermez/music-genre-classification", "anchor_text": "repository on GitHub"}, {"url": "https://cloud.google.com/storage/docs/creating-buckets", "anchor_text": "Google Cloud Storage bucket"}, {"url": "https://colab.research.google.com/notebooks/intro.ipynb#recent=true", "anchor_text": "Google Colab"}, {"url": "https://codelabs.developers.google.com/codelabs/keras-flowers-data/#4", "anchor_text": "codelab"}, {"url": "https://colab.sandbox.google.com/notebooks/io.ipynb#scrollTo=S7c8WYyQdh5i", "anchor_text": "here"}, {"url": "https://colab.sandbox.google.com/notebooks/io.ipynb#scrollTo=S7c8WYyQdh5i", "anchor_text": "https://colab.sandbox.google.com/notebooks/io.ipynb#scrollTo=S7c8WYyQdh5i"}, {"url": "https://github.com/mdeff/fma", "anchor_text": "FreeMusicArchive"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/data/Dataset", "anchor_text": "TensorFlow Dataset"}, {"url": "https://www.tensorflow.org/guide/data", "anchor_text": "pipeline which return a BatchedDataset"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/py_function", "anchor_text": "tf.py_function"}, {"url": "https://github.com/celestinhermez/music-genre-classification", "anchor_text": "repository"}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "TFRecord format"}, {"url": "https://towardsdatascience.com/how-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1", "anchor_text": "due to fast I/O thanks to parallelization"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/train/Feature", "anchor_text": "Features"}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "tf.Example"}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "TensorFlow official documentation"}, {"url": "https://towardsdatascience.com/how-to-build-efficient-audio-data-pipelines-with-tensorflow-2-0-b3133474c3c1", "anchor_text": "tutorial on audio pipelines"}, {"url": "https://towardsdatascience.com/understanding-1d-and-3d-convolution-neural-network-keras-9d8f76e29610", "anchor_text": "1D convolutional layers"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/layers/MaxPool1D", "anchor_text": "pooling layers"}, {"url": "https://www.tensorflow.org/tensorboard/scalars_and_keras", "anchor_text": "iterate during model development"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----3de38f0d4dbb---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----3de38f0d4dbb---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/music?source=post_page-----3de38f0d4dbb---------------music-----------------", "anchor_text": "Music"}, {"url": "https://medium.com/tag/tensorflow?source=post_page-----3de38f0d4dbb---------------tensorflow-----------------", "anchor_text": "TensorFlow"}, {"url": "https://medium.com/tag/audio?source=post_page-----3de38f0d4dbb---------------audio-----------------", "anchor_text": "Audio"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3de38f0d4dbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&user=C%C3%A9lestin+Hermez&userId=5f58f594a061&source=-----3de38f0d4dbb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3de38f0d4dbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&user=C%C3%A9lestin+Hermez&userId=5f58f594a061&source=-----3de38f0d4dbb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3de38f0d4dbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F3de38f0d4dbb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----3de38f0d4dbb---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----3de38f0d4dbb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@celestinhermez?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@celestinhermez?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "C\u00e9lestin Hermez"}, {"url": "https://medium.com/@celestinhermez/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "62 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5f58f594a061&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&user=C%C3%A9lestin+Hermez&userId=5f58f594a061&source=post_page-5f58f594a061--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fb350d32e921f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmusic-genre-classification-with-tensorflow-3de38f0d4dbb&newsletterV3=5f58f594a061&newsletterV3Id=b350d32e921f&user=C%C3%A9lestin+Hermez&userId=5f58f594a061&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}