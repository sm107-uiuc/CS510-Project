{"url": "https://towardsdatascience.com/meet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b", "time": 1683014936.870945, "path": "towardsdatascience.com/meet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b/", "webpage": {"metadata": {"title": "Master the when and how of Pandas crosstab() | Towards Data Science", "h1": "Meet the hardest functions of Pandas, Part II", "description": "Master how to use the `crosstab` function of Pandas. Also, learn when to use it over other functions like `pivot_table()` and `groupby()`."}, "outgoing_paragraph_urls": [{"url": "https://github.com/BexTuychiev/medium_stories/tree/master/hardest_of_pandas2", "anchor_text": "this", "paragraph_index": 7}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.crosstab.html", "anchor_text": "crosstab()", "paragraph_index": 10}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html", "anchor_text": "groupby()", "paragraph_index": 10}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.pivot_table.html", "anchor_text": "pivot_table()", "paragraph_index": 10}, {"url": "https://towardsdatascience.com/meet-the-hardest-functions-of-pandas-part-i-7d1f74597e92", "anchor_text": "first part", "paragraph_index": 20}, {"url": "https://towardsdatascience.com/meet-the-hardest-functions-of-pandas-part-i-7d1f74597e92", "anchor_text": "first part", "paragraph_index": 22}, {"url": "https://stackoverflow.com/questions/36267745/how-is-a-pandas-crosstab-different-from-a-pandas-pivot-table", "anchor_text": "thread", "paragraph_index": 26}, {"url": "https://www.linkedin.com/in/bextuychiev/", "anchor_text": "https://www.linkedin.com/in/bextuychiev/", "paragraph_index": 44}], "all_paragraphs": ["I remember myself enjoying a course named \u201cIntermediate Data Visualization with Seaborn\u201d on DataCamp. It was teaching pretty awesome plots and methods for DV. When it came to heatmaps, the instructor, out of nowhere introduced a completely new pandas function crosstab(). Then, quickly said: \"crosstab() is a useful function that calculates cross-tabulation tables...\"", "I was lost right there. Obviously, my first instinct was to check out the documentation for the function. I was just starting to feel that I could handle any documentation after Matplotlib\u2019s, and\u2026 I was wrong. Even the examples were given on numpy arrays while I was supposed to create heatmaps using the damn function\ud83e\udd26\u200d\u2642\ufe0f.", "After I had my practice on it, I knew that this was something that others would struggle too. So, here I am writing a whole article on it.", "In the last part of this article, I talked about why some courses don\u2019t teach you advanced functions like crosstab(). It is simply hard to create the context such functions will be useful in, while keeping the level of examples to beginner. Besides, most courses use small or toy datasets. The benefit of such functions is more pronounced in more complex data science environments and often used by more experienced pandas users.", "In this post, I teach you how to use crosstab() and the cases where you choose it over other similar functions. Enjoy!", "Get the best and latest ML and AI papers chosen and summarized by a powerful AI \u2014 Alpha Signal:", "\u2218 Introduction \u2218 Setup \u2218 Pandas crosstab(), the basics \u2218 Pandas crosstab() comparison with pivot_table() and groupby() \u2218 Pandas crosstab(), customizing even further \u2218 Pandas crosstab(), multiple groupings", "You can download the notebook of this article on this GitHub repo.", "For the sample data, I will be using the diamonds dataset that is built-in to Seaborn. It is sufficiently large enough and has variables that are good to summarize with crosstab():", "I hyperlinked each function\u2019s documentation at their first appearance from here on.", "Like many functions that compute grouped summary statistics, crosstab() works with categorical data. It can be used to group two or more variables and perform calculations for a given value for each group. Of course, such operations are possible using groupby() or pivot_table() but as we are going to see later, crosstab() introduces a number of benefits to your daily workflow.", "crosstab() function takes two or more lists, pandas series or dataframe columns and returns a frequency of each combination by default. I always like to start with an example so that you can better understand the definition and then I will move on to explain the syntax.", "crosstab() always returns a dataframe and below is an example. The dataframe is a cross-tabulation of two variables from diamonds: cut and color. Cross tabulation just means taking one variable, displaying its groups as indexes, and taking the other, displaying its groups as columns.", "The syntax is fairly simple. index is used to group a variable and display them as indexes (rows) and the same for columns. If no aggregating function is given, each cell will calculate the number of observations in each combination. For example, the top-left cell tells us that there are 2834 ideally-cut diamonds with color code D.", "Next, for each combination, we want to see their mean price. crosstab() provides values parameter to introduce a third numerical variable to aggregate on:", "Now, each cell contains the mean price for each combination of cut and color. To tell that we want to compute the mean price, we pass the price column to values. Note that you always have to use values and aggfunc together. Otherwise, you will get an error. I also used round() to round up the answers.", "Even though it is a little advanced, you will exploit the benefits of crosstab() tables fully, when you pass them into seaborn's heatmaps. Let's see the above table in a heatmap:", "seaborn can automatically turn the crosstab() tables into heatmaps. I set annotations to True and displayed the heatmap with a color bar. seaborn also adds styling to column and index names (fmt = 'g' displays the numbers as integers instead of scientific notation).", "Heatmaps are much easier to interpret. You don\u2019t want your end users\u2019 eyes bleed by looking at a table full of numbers. So, I will be putting each crosstab() result into a heatmap whenever I need to. To avoid repetition, I created a helpful function:", "Before we move on to more fun stuff, I think I need to clarify the differences between the three functions that compute grouped summary stats.", "I covered the differences of pivot_table() and groupby() in the first part of the article. For crosstab(), the difference between the three is the syntax and the shape of results. Let's compute the last crosstab() table using all three:", "I think you already know your favorite. groubpy() returns a series while the other two return identical dataframes as a result. However, it is possible to turn the groupby series into the same dataframe like this:", "If you don\u2019t understand the syntaxes of pivot_table() and unstack(), I highly suggest you read the first part of the article.", "When it comes to speed, crosstab() is faster than pivot_table() but both are much slower than groupby():", "As you see, even when chained with unstack(), groupby() is 3 times faster than the other two. This tells that if you just want to group and compute summary stats, you should use the same ol' groupby(). The speed difference was even larger when I chained other methods like simple round().", "The rest of the comparison will mainly be about pivot_table() and crosstab(). As you saw, the shape of the results of the two functions is the same. The first difference between the two is that crosstab() can work with any data type.", "It can accept any array-like objects such as lists, numpy arrays, data frame columns (which are pandas series). In contrast, pivot_table() only works on dataframes. In a helpful StackOverflow thread, I found out that if you use crosstab() on a dataframe it calls pivot_table() under the hood.", "Next are the parameters. There are parameters that exist only in one and vice versa. The first one which is the most popular is crosstab()'s normalize. normalize accepts these options (from the documentation):", "If passed all, for each cell, pandas calculates the percentage of the overall amount:", "If passed, index or columns, the same operation is done column-wise or row-wise:", "In crosstab() you can also change the index and column names directly within the function using rownames and colnames. You don't have to do it manually afterward. These two arguments are very useful when we group by multiple variables at a time, as you will see later.", "The parameter fill_value only exists in pivot_table(). Sometimes, when you group by many variables, it is inevitable that there will NaNs. In pivot_table(), you can change them to custom value using fill_value:", "But, you can achieve the same thing by chaining fillna() on the dataframe, if you use crosstab():", "Two other useful parameters for crosstab() are margins and margins_name (both exist in pivot_table() too). When set to True, margins computes subtotals for each row and column. Let's see an example:", "pandas automatically adds a final row and a final column with a default name All. margins_name controls that behavior:", "The bottom right cell will always contain the overall number of observations or 1 if, for example, normalize is set to True:", "Note that heatmaps are useless if you set margins to True.", "For index and columns arguments, you can pass multiple variables. The result will be a dataframe with MultiLevel indexes. Let's plug in all the categorical variables this time:", "For the index, I passed the color and cut. If I passed them to columns, the result would be a dataframe with 40 columns. If you pay attention, the MultiLevel indexes are named as cut and clarity as expected. For such situations where there are MultiLevel index or column names, crosstab() has handy parameters to change their name:", "You pass a list of corresponding names to change the index names to rownames. The process is the same for colnames which controls the column names.", "One thing that surprised me was that if you pass multiple functions to aggfunc, pandas throws an error. Again, the dudes on StackOverflow think that it is a bug and it has not been resolved for more than 6 years already. If you have any ideas, please leave them out in the comments so we can all learn\ud83d\ude4c.", "As a final note, in both pivot_table() and crosstab(), there is a dropna parameter that drops columns or rows with all NaNs if set to True.", "Read more articles related to the topic:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "BEXGBoost | DataCamp Instructor |\ud83e\udd47Top 10 AI/ML Writer on Medium | Kaggle Master | https://www.linkedin.com/in/bextuychiev/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff8029a2b0c9b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://ibexorigin.medium.com/?source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": ""}, {"url": "https://ibexorigin.medium.com/?source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": "Bex T."}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F39db050c2ac2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&user=Bex+T.&userId=39db050c2ac2&source=post_page-39db050c2ac2----f8029a2b0c9b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff8029a2b0c9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff8029a2b0c9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://ibexorigin.medium.com/membership", "anchor_text": "Join Medium with my referral link - BEXGBoostGet exclusive access to all my \u26a1premium\u26a1 content and all over Medium without limits. Support my work by buying me a\u2026ibexorigin.medium.com"}, {"url": "https://alphasignal.ai/?referrer=Bex", "anchor_text": "Alpha Signal | The Best of Machine Learning. Summarized by AI.Stay in the loop without spending countless hours browsing for the next breakthrough; our algorithm identifies the\u2026alphasignal.ai"}, {"url": "https://github.com/BexTuychiev/medium_stories/tree/master/hardest_of_pandas2", "anchor_text": "this"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.crosstab.html", "anchor_text": "crosstab()"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html", "anchor_text": "groupby()"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.pivot_table.html", "anchor_text": "pivot_table()"}, {"url": "https://towardsdatascience.com/meet-the-hardest-functions-of-pandas-part-i-7d1f74597e92", "anchor_text": "first part"}, {"url": "https://towardsdatascience.com/meet-the-hardest-functions-of-pandas-part-i-7d1f74597e92", "anchor_text": "first part"}, {"url": "https://stackoverflow.com/questions/36267745/how-is-a-pandas-crosstab-different-from-a-pandas-pivot-table", "anchor_text": "thread"}, {"url": "https://towardsdatascience.com/meet-the-hardest-functions-of-pandas-part-i-7d1f74597e92", "anchor_text": "Meet the hardest functions of Pandas, Part IMaster the when and how of pivot_table(), stack(), unstack()towardsdatascience.com"}, {"url": "https://towardsdatascience.com/meet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b", "anchor_text": "Meet the hardest functions of Pandas, Part IIMaster the when and how of crosstab()towardsdatascience.com"}, {"url": "https://towardsdatascience.com/shape-tables-like-jelly-with-pandas-melt-and-pivot-f2e13e666d6", "anchor_text": "Meet the hardest functions of Pandas, Part IIIShape tables like JELLY with Pandas pivot() and melt()towardsdatascience.com"}, {"url": "https://towardsdatascience.com/masteriadsf-246b4c16daaf", "anchor_text": "Mastering Joins: Pandas merge, concat, append methodsFrom semi/anti joins to validating data mergestowardsdatascience.com"}, {"url": "https://towardsdatascience.com/how-i-customarily-bin-data-with-pandas-9303c9e4d946", "anchor_text": "How I customarily bin data with PandasYou might have been using only the defaultstowardsdatascience.com"}, {"url": "https://towardsdatascience.com/from-kagglers-best-project-setup-for-ds-and-ml-ffb253485f98", "anchor_text": "From Kagglers: Best Project Setup for DS and MLA collection of best practices from top Kagglers for project successtowardsdatascience.com"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----f8029a2b0c9b---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----f8029a2b0c9b---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----f8029a2b0c9b---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----f8029a2b0c9b---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----f8029a2b0c9b---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff8029a2b0c9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&user=Bex+T.&userId=39db050c2ac2&source=-----f8029a2b0c9b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff8029a2b0c9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&user=Bex+T.&userId=39db050c2ac2&source=-----f8029a2b0c9b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff8029a2b0c9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff8029a2b0c9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f8029a2b0c9b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f8029a2b0c9b--------------------------------", "anchor_text": ""}, {"url": "https://ibexorigin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://ibexorigin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Bex T."}, {"url": "https://ibexorigin.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "16.4K Followers"}, {"url": "https://www.linkedin.com/in/bextuychiev/", "anchor_text": "https://www.linkedin.com/in/bextuychiev/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F39db050c2ac2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&user=Bex+T.&userId=39db050c2ac2&source=post_page-39db050c2ac2--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F22cea38b90f3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmeet-the-hardest-functions-of-pandas-part-ii-f8029a2b0c9b&newsletterV3=39db050c2ac2&newsletterV3Id=22cea38b90f3&user=Bex+T.&userId=39db050c2ac2&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}