{"url": "https://towardsdatascience.com/how-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708", "time": 1683004208.7649522, "path": "towardsdatascience.com/how-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708/", "webpage": {"metadata": {"title": "How to use Docker to deploy a Dashboard app on AWS | by Melvin Varughese | Towards Data Science", "h1": "How to use Docker to deploy a Dashboard app on AWS", "description": "Dashboards are a fantastic way of exploring both data and model behaviour. They are also an indispensable tool in communicating with both technical and non-technical stakeholders. I\u2019m assuming that\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.ted.com/talks/hans_rosling_shows_the_best_stats_you_ve_ever_seen", "anchor_text": "Hans Rosling", "paragraph_index": 1}, {"url": "https://github.com/Melvin-Var/ConjointElectricVehicles", "anchor_text": "this Github repo", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/the-right-electric-vehicle-for-me-a-use-case-for-conjoint-analysis-d9840ca31353", "anchor_text": "here", "paragraph_index": 2}, {"url": "https://docs.docker.com/install/", "anchor_text": "here", "paragraph_index": 8}, {"url": "https://aws.amazon.com/free", "anchor_text": "link", "paragraph_index": 9}, {"url": "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html", "anchor_text": "here", "paragraph_index": 10}, {"url": "http://0.0.0.0:8050", "anchor_text": "http://0.0.0.0:8050", "paragraph_index": 15}, {"url": "http://127.0.0.1:8001", "anchor_text": "http://127.0.0.1:<port", "paragraph_index": 15}, {"url": "http://0.0.0.0:8050", "anchor_text": "http://0.0.0.0:8050", "paragraph_index": 33}, {"url": "https://aws.amazon.com/console/", "anchor_text": "AWS Management Console", "paragraph_index": 35}, {"url": "http://13.239.27.169:8050.", "anchor_text": "http://13.239.27.169:8050", "paragraph_index": 61}, {"url": "https://youtu.be/JucZrr-W6CY", "anchor_text": "link", "paragraph_index": 61}, {"url": "https://medium.com/atlassiandata/nope-deep-learning-is-not-enough-13b150dab936", "anchor_text": "Nope, Deep Learning is not enough", "paragraph_index": 63}, {"url": "https://www.linkedin.com/in/melvinvarughese", "anchor_text": "https://www.linkedin.com/in/melvinvarughese", "paragraph_index": 65}], "all_paragraphs": ["Dashboards are a fantastic way of exploring both data and model behaviour. They are also an indispensable tool in communicating with both technical and non-technical stakeholders. I\u2019m assuming that you don\u2019t need any convincing of this \u2014 you have already spent many hours lovingly polishing your R Shiny or Python Dash web app! You are proud of what you have created\u2026 but the dashboard only works on your laptop. How can you allow others to access your dashboard?", "\u201cMost of us need to listen to the music to understand how beautiful it is. But often that\u2019s not how we present statistics: we just show the notes, we don\u2019t play the music.\u201d \u2014 Hans Rosling", "This guide assumes that you have a dashboard app that is ready for deployment. If that is not the case, you can follow through by cloning this Github repo. No knowledge of Docker or AWS is assumed. The dashboard app in this repo analyses user preferences on Electric Vehicles using Conjoint Analysis. You can learn more about this app here. However, you don\u2019t need to understand what this dashboard is doing to follow this guide. A preview of the dashboard is shown below:", "The app\u2019s file structure is given below:", "In the above web app, dashboard.py contains the application code. When a user interacts with the dashboard, a conjoint analysis is triggered by functions within dashboard.py which subsequently call the relevant conjoint functions in analyze.py to run computations on the Data and Precomputed Data folders. README.md is the only file that depends on the Figures folder.", "Docker enables you to deploy an application with all the parts it needs (i.e. libraries, dependencies) and ship it out as a single image. We can run these images on any host with Docker installed on it (i.e. on any Docker engine), irrespective of architecture or operating system. These running instances are called containers. If the image runs successfully on your laptop, you are guaranteed it will run on any Docker engine. Since many cloud platforms support the running of Docker images, we can readily deploy a Dashboard application in the cloud.", "Now that we understand a bit more about the web app and docker, we can go ahead and deploy it on AWS.", "To follow through, you\u2019ll need to have Docker installed on your system as well as an AWS account.", "The instructions for installing Docker on your system are available here. If you wish to run Docker on Windows or OSx, you will need to install Docker Desktop. As Docker was originally built for Linux, Docker Desktop will run a Linux Virtual Machine which subsequently launches the Linux-based image.", "You can register for free access to AWS services for a year at this link.", "The Command Line Interface (CLI) allows you to make calls to AWS services from your Command-Line. You can follow the instructions here to install the AWS CLI.", "The instructions below assume that you have installed version 1 of the CLI.", "There are two differences between your local system and the docker container that can potentially cause problems in deployment:", "In the case of Python Dash, the default is to have the app run on localhost. However, in this case, you can only access the server from your local machine. The app is typically deployed locally using the following boilerplate:", "The above code won\u2019t allow you to access the dashboard app from the Docker engine as the app will only be accessible to the container. We need to explicitly specify the host in dashboard.py to access the dashboard app from outside the container.", "Modify dashboard.py as shown above and save. Once a docker image is built and run, we can access the dashboard from a web browser at http://0.0.0.0:8050. In the case of R Shiny, the dashboard should be accessible from http://127.0.0.1:<port> as long as we expose the appropriate port in Step 2. We can specify the port to use inside the R Shiny application code:", "The docker container\u2019s file system mirrors that of a Linux system. It contains folders such as bin, etc, mnt, srv and sys in its root directory. If building a Python Dash app, it is common practice to store the app\u2019s source code in the app folder in the root directory. In the case of Shiny, we can create a subfolder shiny-server inside the srv folder to store the source code.", "Consequently, any relative paths that we specify in our source code will almost certainly not work when the app is containerized as the container will have the current path as its root directory (as the default). The simplest solution is to change the container\u2019s current directory to point to the location of the source code. We will see how to do this in Step 2.", "An alternative (sub-optimal) solution would be to change the source code so that we instead give absolute paths. For example, in dashboard.py, we can modify lines 16 and 17 to read:", "The problem following this approach is that the dashboard app becomes harder to maintain. Let\u2019s rather leave the file paths unchanged in dashboard.py. Instead, we shall explicitly change the working directory in Step 2.", "We create a folder DashboardImage which we will populate with the raw contents of the Docker image. Ultimately, this Docker image can be used by any Docker engine to run the dashboard app. Let us create the following file structure inside DashboardImage:", "Let us look more closely at the contents of this directory:", "The requirements.txt file should contain all the libraries that your dashboard needs. It may look something like this:", "The dashboard needs the first six libraries to render correctly. The remaining libraries are required by analyze.py to perform the conjoint analysis.", "The Dockerfile contains the instructions for setting up the dashboard app. The Dockerfile builds the image in layers. Each line has the format: <INSTRUCTION> <ARGUMENT>. Let us create the following Dockerfile:", "The first line pulls a base image from Dockerhub (a public repository of containers). The base image contains Miniconda, which sits on top of a base Ubuntu distribution. If you wish to deploy a Shiny app, you can instead pull the rocker/shiny image.", "The second and third lines copy the requirements.txt file and the app folder from the application folder on the host PC to the tmp folder and app folder located in the root directory of the Docker container. These folders are automatically created if they do not exist. The fourth line sets the working directory to the app folder. This line is the preferred solution for accommodating the container\u2019s file structure as it only entails a change to the Dockerfile.", "The fifth line installs each of the packages specified in requirements.txt. In the case of a Shiny app, you would instead need to explicitly specify each of the packages that you wish to install. For example:", "We\u2019d also want to expose the right port for the R Shiny application. We\u2019d thus include the following line in the Dockerfile:", "ENTRYPOINT specifies the command that will be executed when the image is run as a container. If we don\u2019t specify an argument when running the docker image, Docker uses the default argument shown in the CMD line for execution, which makes Python run the dashboard app. Note that we don\u2019t need to specify the absolute path to the app i.e. /app/dashboard.py as we have already changed the working directory to /app. In R, we instead use CMD to execute the Shiny server.", "Once the contents are created, we can build a docker image. In order to create the image conjoint_dashboard, go into the DashboardImage folder and run the following:", "Docker goes line-by-line through the Dockerfile, building the software layers on top of each other.", "To confirm some basic details about the image run docker images.", "You can also check that the image is correctly built by running it: docker run conjoint_dashboard. Recall that back in Step 1, we modified dashboard.py to make the host accessible at http://0.0.0.0:8050. From the docker machine (i.e. your computer), open a web browser at the above address and check if the dashboard is working as expected.", "We need to make sure our image is available in AWS. To do so, we need to perform the following steps:", "Log in to the AWS Management Console. Your initial login will be on your root account. Once logged in, search for \u201cECR\u201d. The Elastic Container Registry (ECR) is a fully-managed Docker container registry. A registry is a collection of repositories. Click on Get Started to create a new repository. We\u2019ll name the repository dashboard and click Create repository.", "We will create an access key for our root account. It is good practice to avoid using the root account as it provides unrestricted access to your AWS resource. However, to simplify the process, we will deploy the app using the root account.", "To create access keys, click on your account name and click My Security Credentials.", "In the new screen, open up the Access keys (access key ID and secret access key) dropdown and click on Create New Access Key. Once the key is created you will receive the following message.", "Download the credentials and store it in a safe place.", "Using your newly created access key, you will need to configure your aws_access_key_id and aws_secret_access_key with the following commands in the terminal:", "We also need to set the region and the output format. Your region can be found from the AWS management console.", "We can then run the following commands in the terminal:", "We can now attempt to login to ECR:", "You should hopefully receive a Login Succeeded message.", "We start by tagging the conjoint_dashboard with the URI for the newly-created dashboard repository. You can find the URI inside the AWS management console by clicking on the dashboard repository:", "We tag the image conjoint_dashboard with the above URI by running the following command in the terminal:", "We can now push the image to the repository.", "The time it takes to upload the conjoint_dashboard image to the Registry will depend on your internet connection. Once the image is pushed, you can find the image when you click on dashboard in ECR.", "You will need the Image URI to deploy the dashboard app. The image tag latest is shown at the end of the URI (after the colon) and refers to the version of the dashboard.", "The Elastic Container Service (ECS) runs and manages Docker containers. It is highly scalable, allowing more containers to be deployed automatically to meet demand. Return to the home page of the AWS management console and search for \u201cECS\u201d.", "Once in ECS, let\u2019s click on the Get Started button. You will be taken to Step 1: Container and Task. The container definition describes the requirements of your container as well as how the system should run your container. By clicking on the Configure button, we can configure the container to accommodate the dashboard app.", "We only need to populate the first two fields. We name the container conjoint_dashboard and we populate the second field with the Image URI given at the end of Step 4. Click on Update.", "Scroll down to the Task Definition and click Edit. Here, we can specify the hardware requirements for the container. We populate these fields as below and Save.", "When we click on Next, we are taken to the Service Definition page. These fields are pre-populated, so click on Next to go to the Cluster definition. All we need to do here is name the cluster \u201cconjoint\u201d and click Next. You can then review the configuration and click Create.", "The process will take a good few minutes. Once completed, click View Service.", "By default, the service will only allow traffic on port 80. This is a problem as the Docker container is only accessible on port 8050. We thus need to change the Security groups rules. Click on the Security groups identifier.", "Once the page loads, click on Inbound Rules tab and the Edit rules button.", "Re-populate the fields as follows before clicking on Save rules.", "We can check if the service is running by clicking on Clusters in the ECS sidebar and clicking on conjoint. Once the page loads, click on the Tasks tab and subsequently click on the task identifier.", "The task configurations will be shown.", "We can see that the task is running and is accessible at the address http://13.239.27.169:8050. Of course, your IP will be different. Substitute your IP in place of the above IP and you should be able to access your dashboard. For a quick walkthrough of the app, you can watch this link.", "There you have it! By carefully following the steps, you will have successfully deployed a dashboard app on AWS. By properly configuring the ECS settings in Step 5, it is also possible to make the service scalable, automatically deploying new tasks as demand increases.", "Thanks for reading! If you found this material useful, you may also find an article I recently authored interesting: Nope, Deep Learning is not enough", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Helping to drive growth @ Atlassian. Visting Academic at University of Western Australia & University of Cape Town. https://www.linkedin.com/in/melvinvarughese"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F8df5fb322708&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----8df5fb322708--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8df5fb322708--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@melvin.varughese?source=post_page-----8df5fb322708--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@melvin.varughese?source=post_page-----8df5fb322708--------------------------------", "anchor_text": "Melvin Varughese"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F307c4c75b900&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&user=Melvin+Varughese&userId=307c4c75b900&source=post_page-307c4c75b900----8df5fb322708---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8df5fb322708&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8df5fb322708&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@kmuza?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Carlos Muza"}, {"url": "https://unsplash.com/s/photos/analytics-dashboard?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://www.ted.com/talks/hans_rosling_shows_the_best_stats_you_ve_ever_seen", "anchor_text": "Hans Rosling"}, {"url": "https://github.com/Melvin-Var/ConjointElectricVehicles", "anchor_text": "this Github repo"}, {"url": "https://towardsdatascience.com/the-right-electric-vehicle-for-me-a-use-case-for-conjoint-analysis-d9840ca31353", "anchor_text": "here"}, {"url": "https://docs.docker.com/install/", "anchor_text": "here"}, {"url": "https://aws.amazon.com/free", "anchor_text": "link"}, {"url": "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html", "anchor_text": "here"}, {"url": "http://0.0.0.0:8050", "anchor_text": "http://0.0.0.0:8050"}, {"url": "http://127.0.0.1:8001", "anchor_text": "http://127.0.0.1:<port"}, {"url": "http://0.0.0.0:8050", "anchor_text": "http://0.0.0.0:8050"}, {"url": "https://aws.amazon.com/console/", "anchor_text": "AWS Management Console"}, {"url": "http://13.239.27.169:8050.", "anchor_text": "http://13.239.27.169:8050"}, {"url": "https://youtu.be/JucZrr-W6CY", "anchor_text": "link"}, {"url": "https://medium.com/atlassiandata/nope-deep-learning-is-not-enough-13b150dab936", "anchor_text": "Nope, Deep Learning is not enough"}, {"url": "https://medium.com/atlassiandata/nope-deep-learning-is-not-enough-13b150dab936", "anchor_text": ""}, {"url": "https://medium.com/tag/deployment?source=post_page-----8df5fb322708---------------deployment-----------------", "anchor_text": "Deployment"}, {"url": "https://medium.com/tag/dashboard?source=post_page-----8df5fb322708---------------dashboard-----------------", "anchor_text": "Dashboard"}, {"url": "https://medium.com/tag/aws?source=post_page-----8df5fb322708---------------aws-----------------", "anchor_text": "AWS"}, {"url": "https://medium.com/tag/docker?source=post_page-----8df5fb322708---------------docker-----------------", "anchor_text": "Docker"}, {"url": "https://medium.com/tag/dash?source=post_page-----8df5fb322708---------------dash-----------------", "anchor_text": "Dash"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8df5fb322708&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&user=Melvin+Varughese&userId=307c4c75b900&source=-----8df5fb322708---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8df5fb322708&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&user=Melvin+Varughese&userId=307c4c75b900&source=-----8df5fb322708---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8df5fb322708&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8df5fb322708--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F8df5fb322708&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----8df5fb322708---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----8df5fb322708--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----8df5fb322708--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----8df5fb322708--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----8df5fb322708--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----8df5fb322708--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----8df5fb322708--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----8df5fb322708--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----8df5fb322708--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@melvin.varughese?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@melvin.varughese?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Melvin Varughese"}, {"url": "https://medium.com/@melvin.varughese/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "60 Followers"}, {"url": "https://www.linkedin.com/in/melvinvarughese", "anchor_text": "https://www.linkedin.com/in/melvinvarughese"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F307c4c75b900&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&user=Melvin+Varughese&userId=307c4c75b900&source=post_page-307c4c75b900--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fdca19a21ca71&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-use-docker-to-deploy-a-dashboard-app-on-aws-8df5fb322708&newsletterV3=307c4c75b900&newsletterV3Id=dca19a21ca71&user=Melvin+Varughese&userId=307c4c75b900&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}