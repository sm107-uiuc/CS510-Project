{"url": "https://towardsdatascience.com/apply-function-to-pandas-dataframe-rows-76df74165ee4", "time": 1683014839.283814, "path": "towardsdatascience.com/apply-function-to-pandas-dataframe-rows-76df74165ee4/", "webpage": {"metadata": {"title": "Pandas Apply: 12 Ways to Apply a Function to Each Row in a DataFrame | Towards Data Science", "h1": "12 Ways to Apply a Function to Each Row in Pandas DataFrame", "description": "How to efficiently iterate over rows in a Pandas DataFrame and apply a function to each row. 5 simple yet faster alternatives to Pandas apply and iterrow methods."}, "outgoing_paragraph_urls": [{"url": "https://pandas.pydata.org/", "anchor_text": "Pandas", "paragraph_index": 0}, {"url": "https://pandas.pydata.org/docs/reference/frame.html", "anchor_text": "DataFrame", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/Data_wrangling", "anchor_text": "data wrangling", "paragraph_index": 0}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html", "anchor_text": "apply", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/Time_management#The_Eisenhower_Method", "anchor_text": "the Eisenhower method", "paragraph_index": 4}, {"url": "https://colab.research.google.com/github/scgupta/ml4devs-notebooks/blob/master/ml/pandas/pandas_apply_fn_on_dataframe.ipynb", "anchor_text": "Google Colab", "paragraph_index": 8}, {"url": "https://www.kaggle.com/scgupta/efficient-alternatives-to-pandas-dataframe-apply", "anchor_text": "Kaggle", "paragraph_index": 8}, {"url": "https://faker.readthedocs.io/en/stable/", "anchor_text": "Faker", "paragraph_index": 9}, {"url": "https://github.com/pyutils/line_profiler", "anchor_text": "line_profiler", "paragraph_index": 21}, {"url": "https://en.wikipedia.org/wiki/Row-_and_column-major_order", "anchor_text": "column-major", "paragraph_index": 23}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.iterrows.html", "anchor_text": "iterrows", "paragraph_index": 24}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.itertuples.html", "anchor_text": "itertuples", "paragraph_index": 26}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html", "anchor_text": "apply", "paragraph_index": 28}, {"url": "https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions", "anchor_text": "list comprehension", "paragraph_index": 30}, {"url": "https://docs.python.org/3/library/functions.html#map", "anchor_text": "map", "paragraph_index": 33}, {"url": "https://www.labri.fr/perso/nrougier/from-python-to-numpy/", "anchor_text": "migrating from Python to Numpy through vectorization", "paragraph_index": 38}, {"url": "https://numba.pydata.org/", "anchor_text": "Numba", "paragraph_index": 41}, {"url": "https://dask.org/", "anchor_text": "Dask", "paragraph_index": 45}, {"url": "https://github.com/jmcarpenter2/swifter", "anchor_text": "Swifter", "paragraph_index": 47}, {"url": "https://pypi.org/project/perfplot/", "anchor_text": "Perfplot", "paragraph_index": 49}, {"url": "https://www.ML4Devs.com", "anchor_text": "https://www.ML4Devs.com", "paragraph_index": 55}], "all_paragraphs": ["Applying a function to all rows in a Pandas DataFrame is one of the most common operations during data wrangling. Pandas DataFrame apply function is the most obvious choice for doing it. It takes a function as an argument and applies it along an axis of the DataFrame. However, it is not always the best choice.", "In this article, you will measure the performance of 12 alternatives. With a companion Code Lab, you can try it all in your browser. No need to install anything on your machine.", "Recently, I was analyzing user behavior data for an e-commerce app. Depending on the number of times a user did text and voice searches, I assigned each user to one of four cohorts:", "It was a huge data set with 100k to a million users depending upon the chosen time slice. Computing it with Pandas apply function was excruciatingly slow, so I evaluated alternatives. This article is the distilled lessons from that.", "I can\u2019t share that dataset. So I am picking another similar problem to show the solutions: the Eisenhower method.", "Based on a task\u2019s importance and urgency, the Eisenhower Method assigns it into one of 4 bins. Each bin has an associated action:", "We will use the boolean matrix shown in the adjacent figure. Importance and urgency booleans make the binary integer value for each action: DO(3), SCHEDULE(2), DELEGATE(1), DELETE(0).", "We will profile the performance of mapping tasks to one of the actions. We will measure which of the 12 alternatives take the least amount of time. And we will plot the performance for up to a million tasks.", "It is a good time to open the companion notebook at Google Colab or Kaggle. If you want to see the code in action, you can execute the cells in the Code Lab as you read along. Go ahead and execute all the cells in the Setup section.", "Faker is a handy library to generate data. In the Code Lab, it is used for generating a DataFrame with a million tasks. Each task is a row in the DataFrame. It consists of task_name (str), due_date (datetime.date), and priority (str). Priority can be one of the three values: LOW, MEDIUM, HIGH.", "We will minimize the storage size to eliminate its effect on any of the alternatives. The DataFrame with ~2 million rows is taking 48MB:", "Instead of str, priority can be stored as Pandas categorical type:", "Let\u2019s check out the DataFrame size now:", "Given importance and urgency, eisenhower_action computes an integer value between 0 and 3.", "For this exercise, we will assume that a task with HIGH priority is important. If the due date is in the next two days, then the task is urgent.", "The Eisenhower Action for a task (i.e. a row in the DataFrame) is computed by using the due_date and priority columns:", "The integer 2 means that the needed action is to SCHEDULE.", "In the rest of the article, we will evaluate 12 alternatives for applying eisenhower_action function to DataFrame rows. First, we will measure the time for a sample of 100k rows. Then, we will measure and plot the time for up to a million rows.", "The simplest method to process each row in the good old Python loop. This is obviously the worst way, and nobody in the right mind will ever do it.", "As expected, it takes a horrendous amount of time: 56.6 seconds.", "It establishes the worst-case performance upper bound. Since its cost is linear, i.e. O(n), it provides a good baseline to compare other alternatives.", "Let\u2019s find out what is taking so long using the line_profiler, but for a smaller sample of 100 rows:", "Its output is shown in the following figure:", "Extracting a row from DataFrame (line #6) takes 90% of the time. That is understandable because Pandas DataFrame storage is column-major: consecutive elements in a column are stored sequentially in memory. So pulling together elements of a row is expensive.", "Instead of processing each row in a Python loop, let\u2019s try Pandas iterrows function.", "It takes 9.04 seconds, approx. one-fourth of the time taken by the loop:", "Pandas has another method, itertuples, that processes rows as tuples.", "Its performance threw a surprise, it took only 211 milliseconds.", "Pandas DataFrame apply function is quite versatile and is a popular choice. To make it process the rows, you have to pass axis=1 argument.", "This also threw a surprise for me. It took 1.85 seconds. 10x worse than itertuples!", "A column in DataFrame is a Series that can be used as a list in a list comprehension expression:", "If multiple columns are needed, then zip can be used to make a list of tuples.", "This also threw a surprise. It took only 78.4 milliseconds, even better than itertuples!", "Python\u2019s map function that takes in function and iterables of parameters, and yields results.", "This performed slightly better than list comprehension.", "The real power of Pandas shows up in vectorization. But it requires unpacking the function as a vector expression.", "It gives the best performance: only 20 milliseconds.", "Vectorizing, depending upon the complexity of the function, can take significant effort. Sometimes, it may not even be feasible.", "NumPy offers alternatives for migrating from Python to Numpy through vectorization. For example, it has a vectorize() function that vectorzie any scalar function to accept and return NumPy arrays.", "Not surprisingly, its performance is second to only Pandas vectorization: 35.7 milliseconds.", "So far, only Pandas and NumPy packages were used. But there are more alternatives if you are open to having additional package dependencies.", "Numba is commonly used to speed up applying mathematical functions. It has various decorators for JIT compilation and vectorization.", "Its vectorize decorator is similar to NumPy vectorize function but offers better performance: 18.9 milliseconds (similar to Pandas vectorization). But it also gives cache warning.", "The pandarallel package utilizes multiple CPUs and split the work into multiple threads.", "In 2-CPU machine, it took 2.27 seconds. The splitting and bookkeeping overheads don\u2019t seem to pay off for 100k records and 2-CPU.", "Dask is a parallel computing library that supports scaling up NumPy, Pandas, Scikit-learn, and many other Python libraries. It offers efficient infra for processing a massive amount of data on multi-node clusters.", "In 2-CPU machine, it took 2.13 seconds. Like pandarallel, payoffs are meaningful only when processing a large amount of data on many machines.", "Swifter automatically decides which is faster: to use Dask parallel processing or a simple Pandas apply. It is very simple to use: just all one word to how one uses Pandas apply function: df.swifter.apply.", "Its performance for this use case is expectedly quite close to Pandas vectorization.", "Plotting is helpful in understanding the relative performance of alternatives over input size. Perfplot is a handy tool for that. It requires a setup to generate input of a given size and a list of implementations to compare.", "It generates a plot like the one shown below.", "Here are some observations from the plot:", "Performing an operation independently to all Pandas rows is a common need. Here are my recommendations:", "Understanding the cost of various alternatives is critical for making an informed choice. Use timeit, line_profiler, and perfplot to measure the performance of these alternatives. Balance performance with ease of use for deciding the best alternative for your use case.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Cofounder @SlangLabs. Ex Amazon, Microsoft Research. I learn, do, and write about Machine Learning in production. https://www.ML4Devs.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F76df74165ee4&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----76df74165ee4--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----76df74165ee4--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://scgupta.medium.com/?source=post_page-----76df74165ee4--------------------------------", "anchor_text": ""}, {"url": "https://scgupta.medium.com/?source=post_page-----76df74165ee4--------------------------------", "anchor_text": "Satish Chandra Gupta"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd2e6816bf92a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&user=Satish+Chandra+Gupta&userId=d2e6816bf92a&source=post_page-d2e6816bf92a----76df74165ee4---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F76df74165ee4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F76df74165ee4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.pexels.com/@victorfreitas", "anchor_text": "Victor Freitas"}, {"url": "https://www.pexels.com/photo/person-holding-cup-of-coffees-on-table-832823/", "anchor_text": "Pexels"}, {"url": "https://pandas.pydata.org/", "anchor_text": "Pandas"}, {"url": "https://pandas.pydata.org/docs/reference/frame.html", "anchor_text": "DataFrame"}, {"url": "https://en.wikipedia.org/wiki/Data_wrangling", "anchor_text": "data wrangling"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html", "anchor_text": "apply"}, {"url": "https://en.wikipedia.org/wiki/Time_management#The_Eisenhower_Method", "anchor_text": "the Eisenhower method"}, {"url": "https://colab.research.google.com/github/scgupta/ml4devs-notebooks/blob/master/ml/pandas/pandas_apply_fn_on_dataframe.ipynb", "anchor_text": "Google Colab"}, {"url": "https://www.kaggle.com/scgupta/efficient-alternatives-to-pandas-dataframe-apply", "anchor_text": "Kaggle"}, {"url": "https://faker.readthedocs.io/en/stable/", "anchor_text": "Faker"}, {"url": "https://github.com/pyutils/line_profiler", "anchor_text": "line_profiler"}, {"url": "https://en.wikipedia.org/wiki/Row-_and_column-major_order", "anchor_text": "column-major"}, {"url": "https://creativecommons.org/licenses/by-nc-nd/4.0/", "anchor_text": "Creative Commons BY-NC-ND 4.0 International"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.iterrows.html", "anchor_text": "iterrows"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.itertuples.html", "anchor_text": "itertuples"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html", "anchor_text": "apply"}, {"url": "https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions", "anchor_text": "list comprehension"}, {"url": "https://docs.python.org/3/library/functions.html#map", "anchor_text": "map"}, {"url": "https://www.labri.fr/perso/nrougier/from-python-to-numpy/", "anchor_text": "migrating from Python to Numpy through vectorization"}, {"url": "https://numba.pydata.org/", "anchor_text": "Numba"}, {"url": "http://twitter.com/numba", "anchor_text": "@numba"}, {"url": "https://dask.org/", "anchor_text": "Dask"}, {"url": "https://github.com/jmcarpenter2/swifter", "anchor_text": "Swifter"}, {"url": "https://pypi.org/project/perfplot/", "anchor_text": "Perfplot"}, {"url": "https://creativecommons.org/licenses/by-nc-nd/4.0/", "anchor_text": "Creative Commons BY-NC-ND 4.0 International"}, {"url": "https://ml4devs.substack.com/subscribe", "anchor_text": ""}, {"url": "https://twitter.com/intent/follow?user_id=29633907", "anchor_text": ""}, {"url": "http://www.linkedin.com/comm/mynetwork/discovery-see-all?usecase=PEOPLE_FOLLOWS&followMember=scgupta", "anchor_text": ""}, {"url": "https://twitter.com/intent/follow?user_id=29633907", "anchor_text": ""}, {"url": "https://www.linkedin.com/in/scgupta/", "anchor_text": ""}, {"url": "https://creativecommons.org/licenses/by-nc-nd/4.0/", "anchor_text": "Creative Commons BY-NC-ND 4.0 International"}, {"url": "https://www.ml4devs.com/articles/pandas-dataframe-apply-function-iterate-over-rows/", "anchor_text": "ML4Devs.com"}, {"url": "https://medium.com/tag/big-data?source=post_page-----76df74165ee4---------------big_data-----------------", "anchor_text": "Big Data"}, {"url": "https://medium.com/tag/data-engineering?source=post_page-----76df74165ee4---------------data_engineering-----------------", "anchor_text": "Data Engineering"}, {"url": "https://medium.com/tag/data-science?source=post_page-----76df74165ee4---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----76df74165ee4---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----76df74165ee4---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F76df74165ee4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&user=Satish+Chandra+Gupta&userId=d2e6816bf92a&source=-----76df74165ee4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F76df74165ee4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&user=Satish+Chandra+Gupta&userId=d2e6816bf92a&source=-----76df74165ee4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F76df74165ee4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----76df74165ee4--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F76df74165ee4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----76df74165ee4---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----76df74165ee4--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----76df74165ee4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----76df74165ee4--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----76df74165ee4--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----76df74165ee4--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----76df74165ee4--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----76df74165ee4--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----76df74165ee4--------------------------------", "anchor_text": ""}, {"url": "https://scgupta.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://scgupta.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Satish Chandra Gupta"}, {"url": "https://scgupta.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2.3K Followers"}, {"url": "https://www.ML4Devs.com", "anchor_text": "https://www.ML4Devs.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd2e6816bf92a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&user=Satish+Chandra+Gupta&userId=d2e6816bf92a&source=post_page-d2e6816bf92a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe35e99930c83&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fapply-function-to-pandas-dataframe-rows-76df74165ee4&newsletterV3=d2e6816bf92a&newsletterV3Id=e35e99930c83&user=Satish+Chandra+Gupta&userId=d2e6816bf92a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}