{"url": "https://towardsdatascience.com/visualize-error-log-with-pandas-and-plotly-d7796a629eaa", "time": 1683012588.5716531, "path": "towardsdatascience.com/visualize-error-log-with-pandas-and-plotly-d7796a629eaa/", "webpage": {"metadata": {"title": "Visualizing error log with pandas and Plotly | by Vaclav Dekanovsky | Towards Data Science", "h1": "Visualizing error log with pandas and Plotly", "description": "Recently I received a dataset from a performance measurement containing data about processing time and errors. After a brief look, I guess what could be an issue; I needed to visualize that for\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Error%20Log%20with%20pandas%20and%20Plotly/Error%20Log%20Analysis.ipynb", "anchor_text": "GitHub notebook", "paragraph_index": 1}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Error%20Log%20with%20pandas%20and%20Plotly/log.zip", "anchor_text": "Github repo", "paragraph_index": 7}, {"url": "https://plotly.com/", "anchor_text": "Plotly library", "paragraph_index": 12}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Error%20Log%20with%20pandas%20and%20Plotly/Error%20Log%20Analysis.ipynb", "anchor_text": "full code", "paragraph_index": 36}], "all_paragraphs": ["Recently I received a dataset from a performance measurement containing data about processing time and errors. After a brief look, I guess what could be an issue; I needed to visualize that for everyone to see. The visualization is simple, but it can teach you several concepts about pandas, Plotly, and difficulties you can face. Mainly:", "As usual, you can see the code behind the frames, calculation, and plots in the GitHub notebook. It takes you through:", "1. EDA of the error log", "3. Benefits and issues with timedelta", "5. Plotly chart with shared axes", "I have simplified the error to contain only 3 columns:", "In my case, the application was trying to render a report into .pdf but a similar technique can be used for processing any kind of error log containing result and duration.", "As an initial step, I have to unzip the log (also contained in the Github repo). You can of course unzip manually, but if you ever want to make an automated pipeline, you should learn how to do it in code.", "No matter how simple the data may look, always invest a little bit of time into the EDA to make sure, there are no surprises like missing values, unexpected ranges, or duplicates.", "A quick overview showed that no value is missing. State contains two values, while timestamps are quite unique, even though some happen in the same second.", "The existing values of the State are \u201cOk\u201d and \u201cEndedWithError\u201d. Knowing that we can polish the data frame by changing the timestamp columns into the DateTime format and optionally converting the State into a categorical column or bool column.", "We\u2019re primarily not interested in neither StartTime nor EndTime, but the duration of the logged event. Since both columns are pandas datatimes, we can simply subtract them to receive a timedelta column.", "It looks like we have all the columns we need to generate some interesting plots. Let\u2019s explore the number of errors compared to the number of events. We will use Plotly.Express, higher-level API of the popular Plotly library which creates interactive (using JavaScript) chart. Plotly.Express is very strong with the DataFrame as input. Using Plotly express, to generate a simple chart is a one-liner.", "Plotly charts offer many great features. They can be zoomed, you can pan the charts by dragging the mouse and each element\u2019s data are summarized in tooltips which appear after you hover the element. Unfortunately, it\u2019s not all gold that glitter, there are some irksome details.", "Plotly automatically counts your categorical values, but tooltip shows count=1 and the automatic color of such a bar chart is not contrasting with the background. px.pie piechart doesn\u2019t automatically count the occurrence at all.", "We know that our error log contains quite many errors. The overall number of them is horrific but do the errors occur continuously and are they reflected in the processing time? To show that we can exploit pandas\u2019 resample feature and count the event every minute. Unfortunately, the timedelta column cannot be averaged easily.", "But try to apply mean on the re-sampled data frame:", "You can resample and .sum(), .count() but for some reason, you cannot average the re-sampled timedelta values.", "Programming brings unexpected issues, but also simple solutions to them.", "In order to re-sample any data frame, it\u2019s the easiest to set one of the DateTime columns as an index. We will do it for StartTime.", "We would like to see the count of errors and successes and processing time (duration) of the successful and erroneous processes each minute.", "Doing multiple aggregations at once results into multilevel column names, which we turn back into a single level using reset_index and renaming the columns based on each level.", "Combining the two-level column names into one:", "In the end we calculate the average duration by dividing the sum column by count column", "Resulting DataFrame stats can be plotted using a single line Plotly expression.", "Similarly, the duration can be drawn as a line chart.", "Notice the 120B, 100B, etc. values on the y-axis. Another weakness of timedelta values is that many libraries, including Plotly express struggle to use them properly.", "Because I knew this issue, I have created the duration_seconds_mean column in advance and simply displayed the duration in seconds as float.", "Two charts about the same issue are like detached lovers. It might work, but together it\u2019s more ideal. Every visualization library can create subplots, and Plotly is no exception. Unfortunately, it doesn\u2019t work with Plotly.Express and you have to use the lower level go API.", "Even though each Plotly chart has a data-dictionary on the background:", "These dictionaries cannot be input into Plotly\u2019s subplots", "Another annoying feature is that you cannot make subplots with Plotly.Express (yet) and you have to go back to lower level API which doesn\u2019t work that nice with the dataframes.", "To make a subplot, you have to use Plotly.graph_objects.go and specify each input separately \u2014 e.g. x=df[\"StartTime\"], y=df[\"duration]. Plotly express can split the data by a categorical column, but for go API you have to separate them manually.", "Add all the traces (chart items), while you can specify details like Series\u2019s color or name:", "Finally, you customize the layout of the chart and display it:", "Again we face one unpleasant difficulty:", "Even though the x-axes have the same range, the x-axis of the line chart is not aligned with the same axis in a bar chart. (see full code to get the proof)", "Luckily you can fix it promptly using shared_xaxes=True. It brings another benefit, that when you zoom into one chart, the other gets zoomed too.", "Don\u2019t you see that? Maybe we can plot the charts together using two y-axes.", "Charts with primary and secondary axes are also subplots, combines through parameter specs=[[{\u201csecondary_y\u201d: True}]]. Each trace is assigned to the related axis by secondary_y=True or secondary_y=False", "Let\u2019s try to plot both the bar chart with the count and line chart showing duration using two axes.", "My initial decision to put the processing time on the primary axis was wrong, because Plotly always display secondary axis (bar chart) on the top, so the line is kind of lost in the background.", "Ok, Plotly, let\u2019s switch the axes. Line as secondary and bars on the primary axis.", "If you have hoped to have a nice chart by now, you may be disappointed. Both axis share (accidentally) very similar range (~[0, 130]), but Plotly decided to plot each grid line just slightly misaligned to the corresponding gridline on the other axis.", "This situation has a solution too. Just force both axes to use the same range.", "I have shown the chart to the developers and they were immediately clear about the issue. As the events pile up, it takes longer to process them, and more and more of them end in error. The system is quite clever, it decided to kill part of the processes once in a while and we have periods with no error. Once it even tried to restart the entire process, but since the scenario repeated, in the end, everything was rejected.", "To be sure about the pattern, it\u2019s easy to re-sample the data not using 1min but 5s (seconds).", "Here, one axis has a range of 0\u201330 events while the other remains ~0\u2013150s per event. Plotly won\u2019t align the grid lines and we have to experiment with setup of each axis to get the same grid line for both axes.", "You can zoom in to the chart and explore any part thanks to Plotly\u2019s interactivity. Using a single parameter fig.update_layout(hovermode=\u201dx unified\u201d) created a nice tooltip containing all 4 displayed values.", "In this article, we have explored how to turn a simple error log into a chart to help us find an explainable pattern. We have used and struggled with Pandas timedelta and Plotly. Don\u2019t misunderstand me, Plotly is a great library, but sometimes the simple things are complicated.", "Most of the time, however, you benefit from Plotly making complicated things simple.", "If you want to learn something about stock market companies\u2019 financials read:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data scientist who loves to explore everything and write about the topics from multiple points of view."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd7796a629eaa&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d7796a629eaa--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d7796a629eaa--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://vdekanovsky.medium.com/?source=post_page-----d7796a629eaa--------------------------------", "anchor_text": ""}, {"url": "https://vdekanovsky.medium.com/?source=post_page-----d7796a629eaa--------------------------------", "anchor_text": "Vaclav Dekanovsky"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed473176733b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&user=Vaclav+Dekanovsky&userId=ed473176733b&source=post_page-ed473176733b----d7796a629eaa---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd7796a629eaa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd7796a629eaa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Error%20Log%20with%20pandas%20and%20Plotly/Error%20Log%20Analysis.ipynb", "anchor_text": "GitHub notebook"}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Error%20Log%20with%20pandas%20and%20Plotly/log.zip", "anchor_text": "Github repo"}, {"url": "https://plotly.com/", "anchor_text": "Plotly library"}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Error%20Log%20with%20pandas%20and%20Plotly/Error%20Log%20Analysis.ipynb", "anchor_text": "full code"}, {"url": "https://towardsdatascience.com/stock-fundamental-analysis-eda-of-secs-quarterly-data-summary-455e62ff4817", "anchor_text": "Stock Fundamental Analysis: EDA of SEC\u2019s quarterly data summaryExploratory data analysis of 2020 SEC filings in Pandastowardsdatascience.com"}, {"url": "https://medium.com/@vaaasha/can-ai-teach-us-happiness-2629b600a4e0", "anchor_text": "Can AI teach us happiness?How to use the brain\u2019s pattern recognition superpower to our benefit.medium.com"}, {"url": "https://medium.com/tag/plotly?source=post_page-----d7796a629eaa---------------plotly-----------------", "anchor_text": "Plotly"}, {"url": "https://medium.com/tag/python?source=post_page-----d7796a629eaa---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/visualization?source=post_page-----d7796a629eaa---------------visualization-----------------", "anchor_text": "Visualization"}, {"url": "https://medium.com/tag/resampling?source=post_page-----d7796a629eaa---------------resampling-----------------", "anchor_text": "Resampling"}, {"url": "https://medium.com/tag/subplot?source=post_page-----d7796a629eaa---------------subplot-----------------", "anchor_text": "Subplot"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd7796a629eaa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&user=Vaclav+Dekanovsky&userId=ed473176733b&source=-----d7796a629eaa---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd7796a629eaa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&user=Vaclav+Dekanovsky&userId=ed473176733b&source=-----d7796a629eaa---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd7796a629eaa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d7796a629eaa--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd7796a629eaa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d7796a629eaa---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d7796a629eaa--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d7796a629eaa--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d7796a629eaa--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d7796a629eaa--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d7796a629eaa--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d7796a629eaa--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d7796a629eaa--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d7796a629eaa--------------------------------", "anchor_text": ""}, {"url": "https://vdekanovsky.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://vdekanovsky.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Vaclav Dekanovsky"}, {"url": "https://vdekanovsky.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "623 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed473176733b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&user=Vaclav+Dekanovsky&userId=ed473176733b&source=post_page-ed473176733b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F41f38caa0bb5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualize-error-log-with-pandas-and-plotly-d7796a629eaa&newsletterV3=ed473176733b&newsletterV3Id=41f38caa0bb5&user=Vaclav+Dekanovsky&userId=ed473176733b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}