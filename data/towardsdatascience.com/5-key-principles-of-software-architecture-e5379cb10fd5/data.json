{"url": "https://towardsdatascience.com/5-key-principles-of-software-architecture-e5379cb10fd5", "time": 1682997290.9134378, "path": "towardsdatascience.com/5-key-principles-of-software-architecture-e5379cb10fd5/", "webpage": {"metadata": {"title": "5 Key Principles of Software Architecture | by Semi Koen | Towards Data Science", "h1": "5 Key Principles of Software Architecture", "description": "Solution architects are the designated experts responsible for a system\u2019s architecture as well as the technical standards (inc. technologies, platforms, infrastructure) of a particular product. They\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Design_by_contract", "anchor_text": "Bertrand Meyer\u2019s Design by Contract", "paragraph_index": 7}, {"url": "https://en.wikipedia.org/wiki/Lean_software_development#Decide_as_late_as_possible", "anchor_text": "Lean Software Development", "paragraph_index": 21}, {"url": "https://medium.com/@semika", "anchor_text": "\u2018Follow\u2019 me", "paragraph_index": 26}], "all_paragraphs": ["Solution architects are the designated experts responsible for a system\u2019s architecture as well as the technical standards (inc. technologies, platforms, infrastructure) of a particular product. They set the vision and their analysis is key to the product\u2019s successful definition, design, delivery and life-time support. They therefore need to understand not only what the business need, but also what is logical, scalable, cost effective and in-line with the overall technology goals of the organisation.", "One of the vital skills of an architect is to be able to view the architecture from many different standpoints: each one of them individually might not be fully relevant, but combining them together gives a helicopter view of the product. These standpoints comprise of principles, standards, patterns and anti-patterns, rules of thumb and empirical practices which are essential for decision making towards a particular direction and also evaluating the project\u2019s success.", "In this article we will cover those architectural principles that attribute to you \u2018sinking or swimming\u2019 in your role as an architect!", "\u201cIf you think good architecture is expensive, try bad architecture!\u201d \u2014 Brian Foote & Joseph Yoder", "Let\u2019s start with my favourite subject: The SOLID principles do not only apply on software development but also when architecting a system.We will now see how\u2026", "Each system capability (e.g. service/module/api) should have only one responsibility and as such one reason to change. Keeping the responsibilities as narrow as possible means that the users know of the intended purpose, which leads to less errors.", "This principle postulates that it is preferable to extend a system behaviour, without modifying it. Although it is often not a good idea to try to anticipate changes in requirements ahead of time (as it can lead to over-complex designs), being able to adapt new functionality with minimum changes to existing components is key to the application\u2019s longevity.", "In Software Development, this means that derived classes must be substitutable for their base classes, but this principle\u2019s resemblance with Bertrand Meyer\u2019s Design by Contract is how it can be applied to Distributed Architecture: two services communicate effectively and repeatedly when there is a common \u2018contract\u2019 between them, which defines the inputs/outputs, their structure and their constraints. Therefore: given two distributed components with the same contract, one should be replaceable with other component with the same contract without altering the correctness of the system.", "Interfaces/contracts must be as fine grained as possible and client specific, so calling clients do not depend on functionality they don\u2019t use. This goes hand in hand with the Single Responsibility principle: by breaking down interfaces, we favour Composition by separating by roles/responsibilities, and Decoupling by not coupling derivative modules with unneeded responsibilities.", "High level modules should not depend on low level ones; they should both depend on abstractions. Likewise, abstractions should not depend on details, but details should depend on abstractions. As such this principle introduces an interface abstraction between higher-level and lower-level software components or layers to remove the dependencies between them.", "I am grouping these together due to their naming convention:", "The principle of least astonishment (or Least Surprise) suggests that a solution or approach would not surprise a reasonably knowledgeable person in the subject area when encountered for the first time (the audience may vary e.g. end-user, programmer, tester etc). In more practical terms, the principle aims to leverage the pre-existing knowledge of users to minimise their learning curve when using a module, so anything with high unpredictability factor is a good candidate for re-design.", "It applies to every single aspect of the architecture: from naming services, to the visualisation of user interfaces, to the design of the domain model.", "This principle (also called Zipf\u2019s Law) stems from a basic human behaviour: Everyone tends to follow the path that is as close to effortless as possible. So for example if our design follows a particular pattern, the next developer will follow the same pattern again and again unless there is a significantly easier way to perform the task, in which case they will change! Or, taking this further, once they find acceptable results for a task, there is no immediate need to improve the current solution.", "Least effort is a variant of least work", "As such it is imperative to aim for a strong start by putting the right architecture in place: it sets high expectations and ensures everyone understands that the quality is not compromised in the project\u2019s lifecycle and it will be adhered to in case of future changes.", "For me, the greatness of this principle lies in the fact that its benefits extrapolate: once we put a right design in place, we can create an architectural framework which will be the basis of the next systems we build. In other words, we are able to establish a successful and future-proof template for the organisation\u2019s software systems.", "These two principles have a common theme: the cost of making the most of an opportunity and the cost of delaying making decisions.", "Every time we make a choice, there is a certain value we place on that choice. Value has two parts: benefits and costs. The opportunity cost of a choice is what we give up to get it. To make a good economic decision, we want to choose the option with the greatest benefit to us but the lowest cost.For example, if we have two choices, either an in-house built system or an off-the-shelf vendor product and we choose the latter, then our opportunity cost is the shiny new system our development team could have developed but didn\u2019t.", "This is what architecture is all about: weighing choices against each other and trying to make an informed decision on which one will add the most value for the project. For instance, a very common dichotomy is whether to create a tactical solution with quick time to market or a more strategic one which will be more expensive now with the view to leverage it in future projects and hence minimise the cost later down the line.", "Here are some points to consider:", "This principle (aka Cost of Delay) originates from Lean Software Development and emphasises holding on taking important actions and crucial decisions for as long as possible. This is done so as to not eliminate important alternatives until the last possible moment i.e. wait to narrow the options down until you are better informed.", "A strategy of not making a premature decision but instead delaying commitment and keeping important and irreversible decisions open until the cost of not making a decision becomes greater than the cost of making a decision.", "One way to mitigate the risk of deciding too late is to build Proof of Concepts (POCs) to prototype the alternative options and demonstrate to the stakeholders what they are asking for.", "Architectural principles help us evaluate the decisions we make throughout the project and also ensure we are in line with the overall goals, not only for the project but also the organisation\u2019s technology. This is an amalgamation of the five principles we elaborated on:", "I hope this article is a source of inspiration and guidance in your architectural journey. Here are some good resources if you would like to find out more on a few of the subjects we covered:", "I regularly write about Technology & Data on Medium \u2014 if you would like to read my future posts then please \u2018Follow\u2019 me!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Passionate about creating elegant software. Fuelled by iced coffees & witty words. Currently in Japan. Opinions are my own; often flawed"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe5379cb10fd5&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://semika.medium.com/?source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": ""}, {"url": "https://semika.medium.com/?source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": "Semi Koen"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Faabf98f9b9a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&user=Semi+Koen&userId=aabf98f9b9a&source=post_page-aabf98f9b9a----e5379cb10fd5---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe5379cb10fd5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe5379cb10fd5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.yourspear.com/wp-content/uploads/2019/03/BUSINESS-DEV-1080x675.jpg", "anchor_text": "yourspear.com"}, {"url": "https://en.wikipedia.org/wiki/Design_by_contract", "anchor_text": "Bertrand Meyer\u2019s Design by Contract"}, {"url": "https://towardsdatascience.com/being-a-data-scientist-does-not-make-you-a-software-engineer-c64081526372", "anchor_text": "Being a Data Scientist does not make you a Software Engineer!"}, {"url": "https://www.toppr.com/guides/fundamentals-of-economics-and-management/theory-of-cost-cma/what-is-opportunity-cost/", "anchor_text": "What is opportunity cost"}, {"url": "https://en.wikipedia.org/wiki/Lean_software_development#Decide_as_late_as_possible", "anchor_text": "Lean Software Development"}, {"url": "http://www.catb.org/~esr/writings/taoup/html/ch01s06.html#id2878339", "anchor_text": "The Art of Unix Programming: Rule of Least Surprise"}, {"url": "https://www.mckinsey.com/business-functions/digital-mckinsey/our-insights/it-architecture-cutting-costs-and-complexity", "anchor_text": "IT Architecture: Cutting Costs and Complexity"}, {"url": "http://www.ontheagilepath.net/2017/03/cost-of-delay-a-key-metric.html", "anchor_text": "Cost of Delay: A key economic metric"}, {"url": "https://www.amazon.co.uk/Software-Architects-Handbook-implementing-architecture/dp/1788624068", "anchor_text": "Software Architect\u2019s Handbook"}, {"url": "https://medium.com/@semika", "anchor_text": "\u2018Follow\u2019 me"}, {"url": "https://medium.com/tag/programming?source=post_page-----e5379cb10fd5---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-development?source=post_page-----e5379cb10fd5---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/software-architecture?source=post_page-----e5379cb10fd5---------------software_architecture-----------------", "anchor_text": "Software Architecture"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----e5379cb10fd5---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/tag/women-in-tech?source=post_page-----e5379cb10fd5---------------women_in_tech-----------------", "anchor_text": "Women In Tech"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe5379cb10fd5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&user=Semi+Koen&userId=aabf98f9b9a&source=-----e5379cb10fd5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe5379cb10fd5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&user=Semi+Koen&userId=aabf98f9b9a&source=-----e5379cb10fd5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe5379cb10fd5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe5379cb10fd5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e5379cb10fd5---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e5379cb10fd5--------------------------------", "anchor_text": ""}, {"url": "https://semika.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://semika.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Semi Koen"}, {"url": "https://semika.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "7.7K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Faabf98f9b9a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&user=Semi+Koen&userId=aabf98f9b9a&source=post_page-aabf98f9b9a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F31f7468ed9ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-key-principles-of-software-architecture-e5379cb10fd5&newsletterV3=aabf98f9b9a&newsletterV3Id=31f7468ed9ff&user=Semi+Koen&userId=aabf98f9b9a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}