{"url": "https://towardsdatascience.com/creating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c", "time": 1682995489.549123, "path": "towardsdatascience.com/creating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c/", "webpage": {"metadata": {"title": "Creating AI for GameBoy Part 4: Q-Learning and Variations | by Aaron Frederick | Towards Data Science", "h1": "Creating AI for GameBoy Part 4: Q-Learning and Variations", "description": "Hello and welcome to part 4 of Building an AI for Gameboy! This is where the real magic happens \u2014 we\u2019ve built our tools and now it is time to set them in motion. A quick recap of our journey so far\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/creating-ai-for-gameboy-part-1-coding-a-controller-5eb782f54ede", "anchor_text": "built a controller", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/creating-ai-for-gameboy-part-2-collecting-data-from-the-screen-ccd7381a1a33", "anchor_text": "extract information from the game", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/creating-ai-for-gameboy-part-3-automating-awful-gameplay-b60fe7504e4e", "anchor_text": "automated the process", "paragraph_index": 0}, {"url": "https://github.com/simoninithomas/Deep_reinforcement_learning_Course", "anchor_text": "LINK 1", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/cartpole-introduction-to-reinforcement-learning-ed0eb5b58288", "anchor_text": "LINK 2", "paragraph_index": 0}, {"url": "https://github.com/aaronfrederick/Fire-Emblem-AI", "anchor_text": "GitHub", "paragraph_index": 7}], "all_paragraphs": ["Hello and welcome to part 4 of Building an AI for Gameboy! This is where the real magic happens \u2014 we\u2019ve built our tools and now it is time to set them in motion. A quick recap of our journey so far: first, we built a controller so that we could run the game using Python scripts; second, we used a combination of open source and homemade image processing tools to extract information from the game; and third, we automated the process so that the game could play itself with random inputs. Now, we will implement a variation of Q-learning to beat the first level of this game. If you want to take a deeper dive into reinforcement learning, I highly recommend these two posts (LINK 1, LINK 2), they do a great job of breaking down the algorithms and implementation.", "To solve the problem of Fire Emblem, we will use a Q-table. The rows of this table represent the possible states of the game and the columns represent the actions. In this particular situation, the table has 150 states (the level is like a board with 150 squares \u2014 10 rows and 15 columns) and 180 possible actions at any given turn. This number of actions comes from our character, Lyn, being able to walk a maximum Manhattan distance of five units (which results in 60 different movement options) and having three options when she arrives (attack, item, and wait). The values that fill each state, action pair is the estimated reward associated with taking that action given the state. This reward is often represented as a function Q(s,a), which is why this process is called Q-learning. You may be familiar with the phrase \u201cDeep Q-Learning\u201d (DQN) and wondering why we aren\u2019t implementing that instead \u2014 the game plays too slowly to generate a satisfactory amount of data for deep learning and we can\u2019t speed it up in this current emulator setup. Below is an example of a Q-table getting filled in on an arbitrary problem.", "To fill this 150x180 table, we must play the game many times. We start by taking random actions given our state and keeping track of the rewards as we progress. The rewards, in this context, are the number of enemies we defeated in the last turn. If we are at an arbitrary state s, and take an arbitrary action a, our reward Q(s,a) is either 0 if all enemies survived that turn or 1 per enemy slain. As we play the game randomly, we are currently exploring the action/state space and keeping track of the rewards so that when we want to exploit this knowledge later, we can have a sense of what works well. We must initially explore in order to find routes that work well just as we must ultimately use the information we have gained to improve our gameplay. In practice, this is represented by a variable called exploration_rate (or epsilon) that decays as we progress. Each time we attempt the level, we decrease our exploration rate (through an exponential decay) and compare it to a random number to see if we will be exploring or exploiting on the attempt. At the end of the learning process, we will essentially be playing the game without any randomly-generated decisions, relying only on our knowledge we have accrued through playing the game stored in our Q-table.", "Walking through the implementation, we have 3 major parts:", "The first block of code here sets up the data structures we need, namely the Q-table and dictionaries mapping states and actions to indices in said table.", "The second block of code initializes the hyperparameters we will use for this experiment. Learning rate and gamma are multipliers that affect the scoring of our reward when we update the Q table.", "The third block of code shows the actual Q-learning as it takes place. We start each run by resetting the game and setting our state to the starting location and then begin taking turns. For each turn, we decide whether to explore or exploit using a random number generator and evaluating if that number is higher than our current exploration rate. If so, we are exploiting what knowledge we currently have in the Q-table. Once we have made that decision, we either randomly (explore) generate an action or choose the highest-rewarded action (exploit) from the Q-table. We then take a turn with that action using the take_turn* function I wrote which returns information: the name of who moved, where they moved, what action they took, and the reward. The boolean arguments indicate whether we are exploring or exploiting the Q-table. Because there are some spaces that are off limits i.e. impassable terrain, enemy units, I included a check to see if the move is invalid. We then set our new state using our prior state and where we moved and update our Q-table with results. At the end of each training run, we decay our exploration rate so that we can use our information more fittingly.", "*Note regarding the take_turn function: in OpenAI\u2019s gym, they have a very similar method \u2014 env.step(action) that returns similar information after proceeding one step in a game. I wanted to mimic their logic to make my implementation as applicable to other problems as possible. If you want to look into my take_turn function, you can find it here on my GitHub.", "This method, as currently described, is the typical manner for non-deep Q-learning. For this problem, it doesn\u2019t work. Not only does the program play the game too slowly to generate data for DQN, it plays too slowly to even fill in a Q-table with optimal values. Fret not, dear reader, for I have not wasted your time thus far; there are different variations of Q-learning that we will discuss moving forward that will solve this problem.", "Up until this point, the rewards have been given simply for killing enemies. This does not motivate our hero to move toward the final, static boss. The probability that she would randomly move to a square next to the boss to attack him and then stay there a second turn to finish him off is minuscule. That isn\u2019t to say that with enough training runs with a sped up emulation that this couldn\u2019t be done, but frankly, I have better things to do with my time and computer. To solve this problem, I included an addition to the reward based off Euclidean distance to a square next to the boss. Instead of adding 1 per enemy killed, we now add 1/enemy + %progress from start to finish square.", "Altering the reward helped hugely, but we still struggled to finish the level balancing the exploration required to kill our first enemy and heal ourselves with the exploitation of our known target square. We don\u2019t find the optimal route to the boss and spend a lot more time on our first randomly-selected path because that is what we know \u201cworks\u201d. This seems to me to be a problem that doesn\u2019t need to be a problem \u2014 we already know what the distance-based reward terms will be before we start playing. With this in mind, I looped through every possible state in the Q-table and rewarded each movement with how close it would put us to the boss at the end of the level. This way, we start the process with access to the fastest route to the end of the level and only need to \u201clearn\u201d how to deal with the enemy in the way. This also allows us to increase the exploration rate decay, as with more prior knowledge and less \u201clearning\u201d to do, we need to perform fewer random movements.", "Using Q-learning and sensible reward functions, I was able to beat the first level of Fire Emblem in an optimal amount of turns. The second level introduces us to allies, complicating our problem even further: how can we alter our method to use allies? I\u2019ll be answering this multi-agent reinforcement learning question in the next edition of Creating AI for GameBoy!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Bay Area Data Scientist, Area Man"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F2a0d35dd0b1c&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@frederickaarond?source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@frederickaarond?source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": "Aaron Frederick"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F682a6eb1da58&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&user=Aaron+Frederick&userId=682a6eb1da58&source=post_page-682a6eb1da58----2a0d35dd0b1c---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2a0d35dd0b1c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2a0d35dd0b1c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/creating-ai-for-gameboy-part-1-coding-a-controller-5eb782f54ede", "anchor_text": "built a controller"}, {"url": "https://towardsdatascience.com/creating-ai-for-gameboy-part-2-collecting-data-from-the-screen-ccd7381a1a33", "anchor_text": "extract information from the game"}, {"url": "https://towardsdatascience.com/creating-ai-for-gameboy-part-3-automating-awful-gameplay-b60fe7504e4e", "anchor_text": "automated the process"}, {"url": "https://github.com/simoninithomas/Deep_reinforcement_learning_Course", "anchor_text": "LINK 1"}, {"url": "https://towardsdatascience.com/cartpole-introduction-to-reinforcement-learning-ed0eb5b58288", "anchor_text": "LINK 2"}, {"url": "https://towardsdatascience.com/practical-reinforcement-learning-02-getting-started-with-q-learning-582f63e4acd9", "anchor_text": "Source"}, {"url": "https://github.com/aaronfrederick/Fire-Emblem-AI", "anchor_text": "GitHub"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----2a0d35dd0b1c---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/reinforcement-learning?source=post_page-----2a0d35dd0b1c---------------reinforcement_learning-----------------", "anchor_text": "Reinforcement Learning"}, {"url": "https://medium.com/tag/gaming?source=post_page-----2a0d35dd0b1c---------------gaming-----------------", "anchor_text": "Gaming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----2a0d35dd0b1c---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-journalism?source=post_page-----2a0d35dd0b1c---------------data_journalism-----------------", "anchor_text": "Data Journalism"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2a0d35dd0b1c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&user=Aaron+Frederick&userId=682a6eb1da58&source=-----2a0d35dd0b1c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2a0d35dd0b1c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&user=Aaron+Frederick&userId=682a6eb1da58&source=-----2a0d35dd0b1c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2a0d35dd0b1c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F2a0d35dd0b1c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----2a0d35dd0b1c---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----2a0d35dd0b1c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@frederickaarond?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@frederickaarond?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Aaron Frederick"}, {"url": "https://medium.com/@frederickaarond/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "323 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F682a6eb1da58&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&user=Aaron+Frederick&userId=682a6eb1da58&source=post_page-682a6eb1da58--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F374f519eefc2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-ai-for-gameboy-part-4-q-learning-and-variations-2a0d35dd0b1c&newsletterV3=682a6eb1da58&newsletterV3Id=374f519eefc2&user=Aaron+Frederick&userId=682a6eb1da58&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}