{"url": "https://towardsdatascience.com/pydantic-688e897cfd3a", "time": 1683015850.89023, "path": "towardsdatascience.com/pydantic-688e897cfd3a/", "webpage": {"metadata": {"title": "pydantic. The library you must know if you juggle\u2026 | by Martin Thoma | Towards Data Science", "h1": "pydantic", "description": "Having complex nested data structures is hard. The traditional approach to store this kind of data in Python is nested dictionaries. Although Python dictionaries are amazing, there are two issues\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.youtube.com/watch?v=npw4s1QTmPg", "anchor_text": "Python dictionaries are amazing", "paragraph_index": 0}, {"url": "https://pypi.org/project/pydantic/", "anchor_text": "pydantic", "paragraph_index": 2}, {"url": "https://gist.github.com/MartinThoma/517d20998501afc4fff72be032782d41", "anchor_text": "people.json", "paragraph_index": 3}, {"url": "https://gist.github.com/MartinThoma/fe33638b8a6228dc656e37dcf7a9fb92", "anchor_text": "example.py", "paragraph_index": 4}, {"url": "https://pydantic-docs.helpmanual.io/usage/models/#basic-model-usage", "anchor_text": "pydantic.BaseModel", "paragraph_index": 6}, {"url": "https://pydantic-docs.helpmanual.io/usage/models/#parsing-data-into-a-specified-type", "anchor_text": "parse_file_as", "paragraph_index": 7}, {"url": "https://pydantic-docs.helpmanual.io/usage/types/#datetime-types", "anchor_text": "datetime", "paragraph_index": 8}, {"url": "https://pydantic-docs.helpmanual.io/usage/types/#constrained-types", "anchor_text": "Constrained types", "paragraph_index": 9}, {"url": "https://docs.python-guide.org/writing/gotchas/#mutable-default-arguments", "anchor_text": "Learn why mutable defaults are evil", "paragraph_index": 12}, {"url": "https://www.python.org/dev/peps/pep-0020/", "anchor_text": "Readability counts", "paragraph_index": 16}, {"url": "https://pydantic-docs.helpmanual.io/usage/model_config/", "anchor_text": "allow_population_by_field_name", "paragraph_index": 16}, {"url": "https://levelup.gitconnected.com/unit-testing-in-python-property-based-testing-892a741fc119", "anchor_text": "property-based testing with hypothesis", "paragraph_index": 22}, {"url": "https://medium.com/analytics-vidhya/type-annotations-in-python-3-8-3b401384403d", "anchor_text": "type annotations in Python", "paragraph_index": 25}, {"url": "https://martinthoma.medium.com/membership", "anchor_text": "https://martinthoma.medium.com/membership", "paragraph_index": 27}], "all_paragraphs": ["Having complex nested data structures is hard. The traditional approach to store this kind of data in Python is nested dictionaries. Although Python dictionaries are amazing, there are two issues which typically arise: (1) How do I, as a developer, know which kind of data is to be expected in the passed dictionary and (2) how do I prevent typos?", "If you use classes, your editor or mypy prevents typos in attribute names. For dictionaries, any valid string can be a key.", "A solution to both problems is using a library: pydantic. It is a validation and parsing library which maps your data to a Python class.", "For this article, I assume that your data is a network of people in people.json. They have an ID, a name, a list of friends given by their ID, a birthdate, and the amount of money on their bank account.", "We want to calculate how much more everybody has than their median friend with this example.py:", "The problems we want to approach are:", "We create a new type for the ID of a person, simply because PersonId is so much more meaningful than just int . Then we subclass pydantic.BaseModel", "Next, we use parse_file_as to read the JSON file:", "Please note that datetime and Decimal are automatically parsed \u2014 you still should always look up how it is done. Doing data validation early is good so that errors also happen early and in a known place. This means pydantic nudges you into a good design. I love it \ud83d\ude0d", "Constrained types are integers/floats in a certain value range or a string that matches a RegEx \ud83d\ude03", "If your JSON might miss some attributes which you want to have, you need to work with default values. A typical default is None which means that you need to change the type to Optional[what it was before] . This is typically pretty ugly as you need to check for None later in the code.", "Especially for Lists, you might want to consider using an empty list instead. You do it like this:", "For immutable data types like strings, integers, floats, tuples, you can simply assign the value. For mutable ones, you need to use Field with the default_factory that generates a new list every time. Learn why mutable defaults are evil, if you don\u2019t know it already.", "It\u2019s sometimes impossible to know at development time which attributes a JSON object has. Still, you need to pass those around. This is super unfortunate and should be challenged, but it can happen.", "Pydantic calls those extras. If you ignore them, the read pydantic model will not know them. Ignored extra arguments are dropped. Allowing them means to accept that this unfortunate design is necessary. Allowed extras will be part of the parsed object. Finally, to forbid extra arguments means an pydantic.ValidationError exception will be thrown if an extra argument occurs.", "This is configured by adding a subclass calledConfig to the pydantic model:", "Names are important. Readability counts. In Python, variables should follow a snake_case naming scheme, while in JavaScript variables should follow a camelCase naming scheme. To fulfill both, pydantic offers allow_population_by_field_name as a config parameter.", "Sometimes, simple types are not enough. You want to check more complex stuff.", "The docs already give a pretty good example for such a scenario:", "You can check pretty much anything as long as you just need the class itself. Please don\u2019t run queries against a database to do consistency checks; e.g. if you want a username to be unique or something similar. Although you can likely make this run, it will be unexpected to trigger a database query by creating a \u201cdata container\u201d.", "In our case, we might want to prevent that people can be a friend of themselves:", "Instead of throwing an exception, we can also simply fix it:", "Property-based tests auto-generate inputs for the function under test and make sure a certain property is fulfilled. In the simplest case, this property is that the function under test does not crash. If you want to learn more about this type of testing, read my article about property-based testing with hypothesis.", "By the way, this test actually pointed out a potential issue:", "One part that usually worries me is general support. Here are some indicators that pydantic has a healthy community:", "pydantic is an awesome data parsing and validation library. It can support you very well to get better type annotations in Python. Use it!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I\u2019m a Software Engineer with over 10 years of Python experience (Backend/ML/AI). Support me via https://martinthoma.medium.com/membership"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F688e897cfd3a&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----688e897cfd3a--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----688e897cfd3a--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://martinthoma.medium.com/?source=post_page-----688e897cfd3a--------------------------------", "anchor_text": ""}, {"url": "https://martinthoma.medium.com/?source=post_page-----688e897cfd3a--------------------------------", "anchor_text": "Martin Thoma"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F287aa3cfe747&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&user=Martin+Thoma&userId=287aa3cfe747&source=post_page-287aa3cfe747----688e897cfd3a---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F688e897cfd3a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F688e897cfd3a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.youtube.com/watch?v=npw4s1QTmPg", "anchor_text": "Python dictionaries are amazing"}, {"url": "https://pypi.org/project/pydantic/", "anchor_text": "pydantic"}, {"url": "https://gist.github.com/MartinThoma/517d20998501afc4fff72be032782d41", "anchor_text": "people.json"}, {"url": "https://gist.github.com/MartinThoma/fe33638b8a6228dc656e37dcf7a9fb92", "anchor_text": "example.py"}, {"url": "https://en.wikipedia.org/wiki/Imputation_(statistics)", "anchor_text": "imputation"}, {"url": "https://pypi.org/project/bunch/", "anchor_text": "bunch"}, {"url": "https://pypi.org/project/munch/", "anchor_text": "munch"}, {"url": "https://pydantic-docs.helpmanual.io/usage/models/#basic-model-usage", "anchor_text": "pydantic.BaseModel"}, {"url": "https://pydantic-docs.helpmanual.io/usage/models/#parsing-data-into-a-specified-type", "anchor_text": "parse_file_as"}, {"url": "https://pydantic-docs.helpmanual.io/usage/types/#datetime-types", "anchor_text": "datetime"}, {"url": "https://pydantic-docs.helpmanual.io/usage/types/#constrained-types", "anchor_text": "Constrained types"}, {"url": "https://docs.python-guide.org/writing/gotchas/#mutable-default-arguments", "anchor_text": "Learn why mutable defaults are evil"}, {"url": "https://www.python.org/dev/peps/pep-0020/", "anchor_text": "Readability counts"}, {"url": "https://pydantic-docs.helpmanual.io/usage/model_config/", "anchor_text": "allow_population_by_field_name"}, {"url": "https://unsplash.com/@scienceinhd?utm_source=medium&utm_medium=referral", "anchor_text": "Science in HD"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://levelup.gitconnected.com/unit-testing-in-python-property-based-testing-892a741fc119", "anchor_text": "property-based testing with hypothesis"}, {"url": "https://pydantic-docs.helpmanual.io/usage/schema/", "anchor_text": "source"}, {"url": "https://pydantic-docs.helpmanual.io/mypy_plugin/", "anchor_text": "mypy plugin"}, {"url": "https://unsplash.com/@thisisengineering?utm_source=medium&utm_medium=referral", "anchor_text": "ThisisEngineering RAEng"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/samuelcolvin/pydantic", "anchor_text": "GitHub"}, {"url": "https://fastapi.tiangolo.com/#example-upgrade", "anchor_text": "FastAPI"}, {"url": "https://github.com/microsoft/onefuzz", "anchor_text": "Microsoft Onefuzz"}, {"url": "https://github.com/awslabs/aws-lambda-powertools-python", "anchor_text": "AWS Lambda Powertools"}, {"url": "https://pypi.org/project/pydantic/", "anchor_text": "PyPI project"}, {"url": "https://medium.com/analytics-vidhya/type-annotations-in-python-3-8-3b401384403d", "anchor_text": "type annotations in Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----688e897cfd3a---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----688e897cfd3a---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/python?source=post_page-----688e897cfd3a---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/testing?source=post_page-----688e897cfd3a---------------testing-----------------", "anchor_text": "Testing"}, {"url": "https://medium.com/tag/web-development?source=post_page-----688e897cfd3a---------------web_development-----------------", "anchor_text": "Web Development"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F688e897cfd3a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&user=Martin+Thoma&userId=287aa3cfe747&source=-----688e897cfd3a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F688e897cfd3a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&user=Martin+Thoma&userId=287aa3cfe747&source=-----688e897cfd3a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F688e897cfd3a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----688e897cfd3a--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F688e897cfd3a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----688e897cfd3a---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----688e897cfd3a--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----688e897cfd3a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----688e897cfd3a--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----688e897cfd3a--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----688e897cfd3a--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----688e897cfd3a--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----688e897cfd3a--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----688e897cfd3a--------------------------------", "anchor_text": ""}, {"url": "https://martinthoma.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://martinthoma.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Martin Thoma"}, {"url": "https://martinthoma.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "6.2K Followers"}, {"url": "https://martinthoma.medium.com/membership", "anchor_text": "https://martinthoma.medium.com/membership"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F287aa3cfe747&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&user=Martin+Thoma&userId=287aa3cfe747&source=post_page-287aa3cfe747--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F7f2b4a3f3c8f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpydantic-688e897cfd3a&newsletterV3=287aa3cfe747&newsletterV3Id=7f2b4a3f3c8f&user=Martin+Thoma&userId=287aa3cfe747&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}