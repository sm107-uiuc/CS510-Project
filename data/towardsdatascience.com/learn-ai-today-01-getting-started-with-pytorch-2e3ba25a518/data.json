{"url": "https://towardsdatascience.com/learn-ai-today-01-getting-started-with-pytorch-2e3ba25a518", "time": 1683011193.3243341, "path": "towardsdatascience.com/learn-ai-today-01-getting-started-with-pytorch-2e3ba25a518/", "webpage": {"metadata": {"title": "Learn AI Today 01: Getting started with Pytorch | by Miguel Pinto | Towards Data Science", "h1": "Learn AI Today 01: Getting started with Pytorch", "description": "This is the first story in the Learn AI Today series I\u2019m creating! These stories, or at least the first few, are based on a series of Jupyter notebooks I\u2019ve created while studying/learning PyTorch\u2026"}, "outgoing_paragraph_urls": [{"url": "http://learn-ai-today.com/", "anchor_text": "Learn AI Today", "paragraph_index": 0}, {"url": "https://mathworld.wolfram.com/NormalEquation.html", "anchor_text": "Normal Equation", "paragraph_index": 7}, {"url": "https://github.com/fastai/fastai", "anchor_text": "fastai", "paragraph_index": 9}, {"url": "https://www.kaggle.com/mnpinto/learn-ai-today-01-getting-started-with-pytorch/", "anchor_text": "this notebook", "paragraph_index": 49}], "all_paragraphs": ["This is the first story in the Learn AI Today series I\u2019m creating! These stories, or at least the first few, are based on a series of Jupyter notebooks I\u2019ve created while studying/learning PyTorch and Deep Learning. I hope you find them as useful as I did!", "Linear regression is a problem that you are probably familiar with. In it\u2019s most basic form is no more than fitting a line to a set of points.", "Consider the mathematical expression of a line:", "w and bare the two parameters or weights of this linear model. In machine learning, it is common to use w referring to weights and b referring to the bias parameter.", "In machine learning when we are training a model we are basically finding the optimal parameters w and b for a given set of input/target (x,y) pairs. After the model is trained we can compute the model estimates. The expression will now look", "where I change the name o y to ye (y estimate) because the solution will not be exact.", "The Mean Square Error (MSE) is simply mean((ye-y)\u00b2) \u2014 the mean of the squared deviations between targets and estimates. For a regression problem, you can indeed minimize the MSE in order to find the best w and b .", "The idea of linear regression can be generalized using algebra matrix notation to allow for multiple inputs and targets. If you want to learn more about the mathematical exact solution for the regression problem you can search about Normal Equation.", "PyTorch nn.Linear class is all that you need to define a linear model with any number of inputs and outputs. For our basic example of fitting a line to a set of points consider the following model:", "Note: I\u2019m using Module from fastai library as it makes the code cleaner. If you want to use pure PyTorch you should use nn.Module instead and you need to add super().__init__() in the __init__ method. fastai Module does that for you.", "If you are familiar with Python classes, the code is self-explanatory. If not, consider doing some study before diving into PyTorch. There are many online tutorials and lessons covering the topic.", "Back to the code. In the __init__ method, you define the layers of the model. In this case, it is just one linear layer. Then, the forward method is the one that is called when you call the model. Similar to __call__ method in normal Python classes.", "Now you can define an instance of your LinearRegression model as model = LinearRegression(1, 1) indicating the number of inputs and outputs.", "Maybe you are now asking why I don\u2019t simply do model = nn.Linear(1, 1) and you are absolutely right. The reason I\u2019m having all the trouble of defining LinearRegression class is just to work as a template for future improvements as you will find later.", "The training process is based on a sequence of 4 steps that repeat iteratively:", "I didn\u2019t define exactly the criterion and optimizer yet but I will in a minute. This is just to give you a general overview and understanding of the steps for a training iteration or as usually called \u2014 a training epoch.", "Let\u2019s define our fit function that will do all the required steps.", "Notice that there\u2019s an extra step I didn\u2019t mention before \u2014 optimizer.zero_grad() . This is because by default, in PyTorch, when you call loss.backwards() the optimizer adds up the values of the gradients. If you don\u2019t set them to zero at each epoch then they will be always added up and that\u2019s not desirable. Unless you are doing gradient accumulation \u2014 but that\u2019s a more advanced topic. Besides that, as you can see in the code above, I\u2019m saving the value of the loss at each epoch. We should expect it to drop steadily \u2014 meaning that the model is getting better at predicting the targets.", "As I mentioned above, for linear regression the criterion usually used is the MSE. As for the optimizer, nowadays I always use Adam as my first choice. It\u2019s fast and it should work well for most problems. I won\u2019t go into details about how Adam works for now but the idea is always to find the best solution in the least amount of time.", "Let\u2019s now move on to creating an instance of our LinearRegression model, defining our criterion and our optimizer:", "model.parameters() is the way to give the optimizer the list of trainable parameters and lr is the learning rate.", "Now let\u2019s create some data and train the model!", "The data is simply a set of points following the model y = 2x + 1 + noise. To make it a little more interesting I make the noise larger for larger values of x. The unsqueeze(-1) in lines 4 and 5 is just to add an extra dimension to the tensor at the end (from [10000] to [10000,1] ). The data is the same but the tensor needs to have this shape meaning that we have 10000 samples and 1 feature per sample.", "Plotting the data, the result is the image below, where you can see the true model and the input data + noise.", "And now to train the model we just run our fit function!", "After training, we can plot the evolution of the loss during the 100 epochs. As you can see in the image below, initially the loss was of about 2.0 and then it drops steeply down to nearly zero. This is to be expected since when we start the model parameters are randomly initialized and as the training progress they converge to the solution.", "Note: Try playing with the learning rate value to see how it affects the training!", "To check the parameters of the trained model, you can run list(model.parameters()) after training the model. You will see that they are very close to 2.0 and 1.0 for this example since the true model is y = 2x + 1 .", "You can now compute the model estimates \u2014 ye = model(x_train). (Notice that before computing the estimates you should always run model.eval() to set the model to evaluation mode. It won\u2019t make a difference for this simple model but later it will, when we start using Batch Normalization and Dropout.)", "Plotting the prediction you can see that it matches almost perfectly the true data, despite the fact that the model could only see the noisy data.", "Now that we made it work for the simple case, moving to a more complex linear model is remarkably simple. The first step is of course to generate such input data. For this example, I considered the model y = 3x\u00b2 + 2x + 1 + noise as follows:", "Notice that this time the input shape is [1000, 2] since we have 2 features corresponding to x and x\u00b2 . That\u2019s how you fit a polynomial using linear regression!", "The only difference now, compared to the previous example, is that the model needs to have two inputs \u2014 model = LinearRegression(2,1) . That\u2019s it! You can now follow the exact same steps to train the model.", "Let\u2019s, however, make things a little more fun with some dynamical visualizations!", "To animate the evolution of training we need to update the fit function in order to store also the values of the model estimates at each step.", "You may have noticed a \u2018new word\u2019 \u2014 detach() (line 17 of the code). This is to tell PyTorch to detach the variable from the gradient computation graph (it will no longer compute the gradients for that detached variable). If you try to convert the tensor to NumPy before detaching, it will give you an error.", "Moving on, you can repeat the same process to train the model as before. The only difference is that the fit2 function will also return the model estimates for each epoch of training.", "To create a video/gif of the training take a look at the following code:", "The %%capture tells Jupyter to suppress the output of the cell as we will be displaying the video in the next cell. Then, from lines 3 to 10, I set up the plot as usual. The difference is in the line for the model predictions. I initiate it as empty to then iteratively update the graphic using matplotlib.animation to generate the animation. Finally, the video can be rendered using HTML from IPython.display . Look at the result below!", "It\u2019s interesting that the blue line initially curves very fast to the correct shape and then converges more slowly for the final solution!", "Note: Try playing with the learning rate, different optimizer and anything you can think off and see the effect on the optimization. It\u2019s a good way to get some intuition for how the optimization works!", "The examples above are interesting for learning and experimenting. However, in practice often your data is not generated from a polynomial or at least you don\u2019t know what the terms of the polynomial are. A nice thing about neural networks is that you don\u2019t need to worry about it!", "Let\u2019s start by defining the model that I named as GeneralFit :", "There are some new aspects to consider in this model. There are 3 linear layers and as you can see in the forward method, after the first two linear layers a ReLU activation function \u2014 F.relu() \u2014 is used. ReLU stands for Rectified Linear Unit and it\u2019s simply setting all negatives to zero. This apparently trivial operation is, however, enough to make the model non-linear.", "Notice that a Linear layer is just matrix multiplication. If you have 100 linear layers one after the other, linear algebra tells you that there\u2019s a single linear layer that performs the same operation. That single linear layer is simply the multiplication of the 100 matrices. However, when you introduce the non-linear activation function this changes completely. Now you can keep adding more linear layers interlaced with non-linear activations such as ReLU (most common in recent models).", "A Deep Neural Network is no more than a Neural Network with several \u2018hidden\u2019 layers. Looking back to the code above, you can, for example, try to add more \u2018hidden\u2019 layers and train the model. And indeed, you can call that Deep Learning. (Note that hidden layer is just the traditional name for any layers in between the input and output layer.)", "Using the above model and a new set of generated data I obtained the following training animation:", "For this example, I trained for 200 epochs with a learning rate of 0.01. Let\u2019s try to set the learning rate to 1.", "Clearly this is not good! When the learning rate is too high the model may not converge properly to a good solution or may even diverge. If you set the learning rate to 10 or 100 it won\u2019t go anywhere.", "I can show you a thousand examples but you will learn more if you can make one or two experiments by yourself! The complete code for these experiments that I showed you are available on this notebook.", "If you create interesting notebooks with nice animations as a result of your experiments, go ahead and share it on GitHub, Kaggle or write a Medium story about it!", "This ends the first story in the Learn AI Today series!", "Feel free to give me some feedback in the comments. What did you find most useful or what could be explained better? Let me know!", "You can read more about my journey on the following stories!", "Thanks for reading! Have a great day!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "PhD student (Remote sensing, Meteorology), ML/DL enthusiast, fastai student, competition master at Kaggle, pianist/composer"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F2e3ba25a518&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----2e3ba25a518--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2e3ba25a518--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@mnpinto?source=post_page-----2e3ba25a518--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@mnpinto?source=post_page-----2e3ba25a518--------------------------------", "anchor_text": "Miguel Pinto"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbfc658aeefbc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&user=Miguel+Pinto&userId=bfc658aeefbc&source=post_page-bfc658aeefbc----2e3ba25a518---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2e3ba25a518&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2e3ba25a518&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://towardsdatascience.com/tagged/learn-ai-today", "anchor_text": "Learn AI Today"}, {"url": "https://unsplash.com/@tateisimikito?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Jukan Tateisi"}, {"url": "https://unsplash.com/s/photos/stairs?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "http://learn-ai-today.com/", "anchor_text": "Learn AI Today"}, {"url": "https://mathworld.wolfram.com/NormalEquation.html", "anchor_text": "Normal Equation"}, {"url": "https://github.com/fastai/fastai", "anchor_text": "fastai"}, {"url": "https://www.kaggle.com/mnpinto/learn-ai-today-01-getting-started-with-pytorch/", "anchor_text": "this notebook"}, {"url": "https://docs.google.com/forms/d/e/1FAIpQLSc0IBzdCn7osIjvGno1GjBakI-DfXHE8gDLZ--jNzWsXtRW0g/viewform", "anchor_text": "joining my mailing list in this link"}, {"url": "http://learn-ai-today.com/", "anchor_text": "learn-ai-today.com"}, {"url": "https://www.kaggle.com/mnpinto/learn-ai-today-01-getting-started-with-pytorch/", "anchor_text": "this is the link for the Kaggle notebook with the code for this story"}, {"url": "https://towardsdatascience.com/learn-ai-today-02-introduction-to-classification-problems-using-pytorch-b710918cba63", "anchor_text": "Learn AI Today: 02 \u2014 Introduction to Classification Problems using PyTorchClassifying flowers with Neural Networks, visualizing decision boundaries and understanding overfitting.towardsdatascience.com"}, {"url": "https://towardsdatascience.com/my-3-year-journey-from-zero-python-to-deep-learning-competition-master-6605c188eec7", "anchor_text": "My 3-year journey: From zero Python to Deep Learning competition masterThe path I followed since starting to learn Python back in 2017 up to became a Kaggle competition master with a solo\u2026towardsdatascience.com"}, {"url": "https://towardsdatascience.com/my-2-year-journey-on-kaggle-how-i-became-a-competition-master-ef0f0955c35d", "anchor_text": "My 2-Year Journey on Kaggle: How I Became a Competition MasterDescribing my journey and the strategy that I followed to become a Competition Master with a solo gold medaltowardsdatascience.com"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----2e3ba25a518---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/data-science?source=post_page-----2e3ba25a518---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----2e3ba25a518---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/learn-ai-today?source=post_page-----2e3ba25a518---------------learn_ai_today-----------------", "anchor_text": "Learn Ai Today"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----2e3ba25a518---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2e3ba25a518&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&user=Miguel+Pinto&userId=bfc658aeefbc&source=-----2e3ba25a518---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2e3ba25a518&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&user=Miguel+Pinto&userId=bfc658aeefbc&source=-----2e3ba25a518---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2e3ba25a518&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2e3ba25a518--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F2e3ba25a518&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----2e3ba25a518---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----2e3ba25a518--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----2e3ba25a518--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----2e3ba25a518--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----2e3ba25a518--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----2e3ba25a518--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----2e3ba25a518--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----2e3ba25a518--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----2e3ba25a518--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@mnpinto?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@mnpinto?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Miguel Pinto"}, {"url": "https://medium.com/@mnpinto/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "648 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbfc658aeefbc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&user=Miguel+Pinto&userId=bfc658aeefbc&source=post_page-bfc658aeefbc--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F3388b854b03d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-ai-today-01-getting-started-with-pytorch-2e3ba25a518&newsletterV3=bfc658aeefbc&newsletterV3Id=3388b854b03d&user=Miguel+Pinto&userId=bfc658aeefbc&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}