{"url": "https://towardsdatascience.com/github-primer-for-dummies-e8d307e52b6d", "time": 1682993747.229017, "path": "towardsdatascience.com/github-primer-for-dummies-e8d307e52b6d/", "webpage": {"metadata": {"title": "GitHub Primer for Dummies. A simple guide to using GitHub to host\u2026 | by Sam Liebman | Towards Data Science", "h1": "GitHub Primer for Dummies", "description": "GitHub is an essential tool for programmers around the globe, allowing users to host and share code, manage projects, and build software alongside a growing base of almost 30 million developers\u2026"}, "outgoing_paragraph_urls": [{"url": "https://project_repo_link.git", "anchor_text": "https://project_repo_link.git", "paragraph_index": 2}], "all_paragraphs": ["GitHub is an essential tool for programmers around the globe, allowing users to host and share code, manage projects, and build software alongside a growing base of almost 30 million developers. GitHub makes collaborating on code much easier by tracking revisions and modifications, allowing for anyone to contribute to a repository. As someone who only recently started programming, there have been countless times where GitHub has been a literal lifesaver, helping me learn new skills, techniques, and libraries. Yet, sometimes a simple task on GitHub such as creating a new repository or pushing new changes is more daunting than training a multi-layer neural network. So, I decided to create a guide to help users (read: myself) fully harness the power of GitHub.", "A GitHub repository, often referred to as a \u201crepo,\u201d is a virtual location on GitHub where a user can store code, datasets, and related files for a project. Clicking on the new repository button on the homepage will bring you to a page where you can create a repo and add a name and brief description of the project. There is an option to make your repository public or private, but the private feature is only available to paying users/companies. You can also initialize the repository with a README, which provides an overview and description of the project. Adding a README to your repository is highly recommended, as it is often the first thing someone sees when looking at your repository and allows you to craft a story about your project and display what you deem is most important to viewers. A strong README should provide a clear description of the project and its goals, display the results and outcome of the project, and demonstrate how someone else can replicate the process.", "Unfortunately, clicking create repository is just the first step in this process (spoiler: it doesn\u2019t actually create your repo). The next step involves using your terminal to initialize your Git and push your first commit. Git is not the same thing as GitHub, although they are related. Git is a revision control system that helps manage source code history and edits, while GitHub is a website that hosts Git repositories. In layman\u2019s terms, Git takes a picture of your project at the time of each commit and stores a reference to that exact state. To initialize the Git for your project, use terminal to enter the directory on your computer where it is stored and enter git init into the command line. Type git add FILENAME to upload your first file. The next step is making your first commit, or revision. Enter git commit -m \"your comment here\" into the command line. The comment should provide, in short detail, what changes were made so that you can more easily track your revisions. The commit adds changes to the local repository, but does not push the edits to the remote server. The next step is to type git remote add origin https://project_repo_link.git into the command line to create the remote server on GitHub that will host your work. Finally, enter git push -u origin master to push the revisions to the remote server and save your work.", "The process for adding changes to your GitHub repo is similar to the initialization process. You can choose to add all the files in your project directory in one fell swoop, or add each file individually as edits are made. For a multitude of reasons, discovered through trial and error, I highly recommend pushing each file individually. First, it will keep your repository clean and organized, which is useful when providing links to your GitHub profile/repo on LinkedIn, resumes, or job applications. Second, this will allow you to track changes to each file separately, rather than pushing up a vague commit description. Third, it will prevent you from accidentally pushing files that were not meant to be added to your repo. This can be files containing personal information, such as API keys, that can be harmful if posted to a public domain. It will also prevent you from uploading datasets that exceed 100mb, which is the size limit for free accounts. Once a file is added to the repository, it is extremely difficult to remove, even if it has not yet been pushed or committed. Speaking from experience, I have had to delete a repository on numerous occasions after accidentally uploading a file that I didn\u2019t want, so I stress the importance of carefully selecting which files to upload.", "To add a new file, enter your project directory via terminal and type git add FILENAME into the command line. To make a commit, there are two options: you can follow the same process as creating a repo and type git commit -m \"commit description\u201d, or use Vim, a unix based text editor to process the changes. Vim is a counterintuitive text editor that only responds to the keyboard (no mouse), but provides multiple keyboard shortcuts that can be reconfigured, and the option to create new, personalized shortcuts. To enter the Vim text editor, type git commit into the command line and press enter. This brings you to the Vim editor; to proceed to writing your commit, type i to enter --INSERT-- mode, and then type in your commit message. Once finished, press esc to exit --INSERT-- mode, and then save and exit Vim by entering :wq to write and quit the text editor. From there, all you need to do is enter git push into the command line to push your changes to GitHub.", "To ignore certain files when pushing to a repo, you can create a .gitignore file that specifies intentionally untracked files to ignore. To create the file, click on the new file button on your repository homepage and name the file .gitignore, or use one of the sample templates provided. There are multiple ways to specify a file or folder to ignore. The first way is to simple write the name of the file in the .gitignore file. For example, if you have a file called AWS-API-KEY-DO-NOT-STEAL.py, you can write the name of that file, with the extension, in the .gitignore file.", "To ignore all filenames with a certain extension, say .txt files, type *.txt into the .gitignore file. Lastly, you can ignore an entire folder by typing folder_name/ in the file. Once you have added all of the files you want to be ignored to the .gitignore file, save it and put it in the root folder of your project. Now, if you try to add and push those files to the repository, they will be ignored and not included in the repository. However, if the files were already added to the repo before being added to the .gitignore file, they will still be visible in the Git repo.", "If you have used GitHub before, or are familiar with the lingo, you have probably seen the terms Fork, Branch and Merge been tossed around. A fork is essentially a clone or the repository. Forking someone else\u2019s repository will create a new copy under your profile that is completely independent of the original repository. This is useful in the case where the original repository is deleted \u2014 your fork will remain, along with the repository and all of its contents. To fork a repository, simply visit the repo page and click the Fork button on the top right of the page. To overwrite a current fork with an updated repository, a user can use the git stash command in the forked directory before forking the revised repo.", "A branch provides another way of diverging from the main code line of a repository. Branching a repository adds another level to the repo that remains part of the original repository. Branches are useful for long-term projects or projects with multiple collaborators that have multiple stages of the workflow that are at different stages. For example, if you are building an app, you might have the skateboard and one key feature ready but are still working on two additional features that are not ready to launch. You can create an additional branch, leaving only the finished product in the Master branch, while the two work-in-progress features can remain undeployed in a separate branch. A branch is also useful when working with a team \u2014 each member can be working on a different branch, so when they push changes, it does not overwrite files that another team member is working on. This provides an easy way to keep each individual\u2019s work separate until it is ready to be merged and deployed.", "Branches can be locally created from your terminal as long as you have a cloned version of the repository saved locally. To see all of the branches in your repo, type git branch into the command line from within your project directory. If no branches have been created, the output should be *master, with the asterisk indicating the branch is currently active. To create a new branch, type git branch <new_branch_name>, and then enter git checkout <new_branch_name> to switch to the new branch so you can work from it. The git checkout command lets the user navigate between different branches of a repository. Committing changes to a branch follows the same process as committing to the Master, just be sure to stay aware of which branch you are working in.", "To combine multiple branches into one unified history, you can use the git merge <branch_name>command. One type of merge is called a 3-way merge, which involves two diverging branches being merged into one. The 3-way merge gets its name from the number of commits required to generate the merge \u2014 the two branch tips and their common ancestor node. Invoking the merge command will combine the current branch with the specified branch by finding a common base commit, and then creating a new merge commit that combines the two commit histories into one. If there is a piece of data that was changed in each branch, git merge will fail and require user intervention.", "Another type of merge is the fast-forward merge, which is used in an instance where there is a linear path between the target branch and the current branch. In this scenario, the merge shifts the current branch tip forward until it reaches the target branch tip, effectively combining both histories into one. In general, developers prefer to use fast-forward merges for bug fixes or small feature additions, saving the 3-way merge for integration of longer running features.", "Those are pretty much the basics for being able to successfully use GitHub; however, I would like to share a few more tips I found to be helpful.:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist and Machine Learning Engineer"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe8d307e52b6d&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@slieb74?source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@slieb74?source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": "Sam Liebman"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1d6afd42433f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&user=Sam+Liebman&userId=1d6afd42433f&source=post_page-1d6afd42433f----e8d307e52b6d---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe8d307e52b6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe8d307e52b6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://devhumor.com/media/git-push", "anchor_text": "http://devhumor.com/media/git-push"}, {"url": "https://project_repo_link.git", "anchor_text": "https://project_repo_link.git"}, {"url": "https://git-scm.com/book/en/v2/Getting-Started-Git-Basics", "anchor_text": "https://git-scm.com/book/en/v2/Getting-Started-Git-Basics"}, {"url": "https://git.io/", "anchor_text": "https://git.io/"}, {"url": "https://pages.github.com/", "anchor_text": "https://pages.github.com/"}, {"url": "https://medium.com/@haydar_ai/learning-how-to-git-ignoring-files-and-folders-using-gitignore-177556afdbe3", "anchor_text": "Learning How to Git: Ignoring Files and Folders using GitIgnoreSometimes, our project not only consists the code that we created. There are some files that are generated by our IDE\u2026medium.com"}, {"url": "https://git-scm.com/book/en/v2/Getting-Started-Git-Basics", "anchor_text": "Git - Git BasicsEverything in Git is check-summed before it is stored and is then referred to by that checksum. This means it's\u2026git-scm.com"}, {"url": "https://git-scm.com/docs/gitignore", "anchor_text": "Git - gitignore DocumentationThe underlying Git plumbing tools, such as git ls-files and git read-tree, read gitignore patterns specified by\u2026git-scm.com"}, {"url": "https://www.atlassian.com/git/tutorials/using-branches", "anchor_text": "Git Branch | Atlassian Git TutorialGit branching intro. Create, list, rename, delete branches with git branch. git checkout: select which line of\u2026www.atlassian.com"}, {"url": "https://confluence.atlassian.com/bitbucket/branch-or-fork-your-repository-221450630.html", "anchor_text": "Branch or fork your repository - Atlassian DocumentationAs DVCS hosting evolved, the term fork evolved. The Bitbucket software adds management to forks; forking a repository\u2026confluence.atlassian.com"}, {"url": "https://guides.github.com/introduction/flow/", "anchor_text": "Understanding the GitHub flowWhen you're working on a project, you're going to have a bunch of different features or ideas in progress at any given\u2026guides.github.com"}, {"url": "https://github.com/git-tips/tips", "anchor_text": "git-tips/tipsMost commonly used git tips and tricks. Contribute to git-tips/tips development by creating an account on GitHub.github.com"}, {"url": "http://ohshitgit.com/", "anchor_text": "Oh, shit, git!Git is hard: screwing up is easy, and figuring out how to fix your mistakes is fucking impossible. Git documentation\u2026ohshitgit.com"}, {"url": "https://medium.com/tag/git?source=post_page-----e8d307e52b6d---------------git-----------------", "anchor_text": "Git"}, {"url": "https://medium.com/tag/github?source=post_page-----e8d307e52b6d---------------github-----------------", "anchor_text": "Github"}, {"url": "https://medium.com/tag/data-science?source=post_page-----e8d307e52b6d---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----e8d307e52b6d---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/coding?source=post_page-----e8d307e52b6d---------------coding-----------------", "anchor_text": "Coding"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe8d307e52b6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&user=Sam+Liebman&userId=1d6afd42433f&source=-----e8d307e52b6d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe8d307e52b6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&user=Sam+Liebman&userId=1d6afd42433f&source=-----e8d307e52b6d---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe8d307e52b6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe8d307e52b6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e8d307e52b6d---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e8d307e52b6d--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@slieb74?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@slieb74?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sam Liebman"}, {"url": "https://medium.com/@slieb74/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "185 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1d6afd42433f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&user=Sam+Liebman&userId=1d6afd42433f&source=post_page-1d6afd42433f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F1d6afd42433f%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgithub-primer-for-dummies-e8d307e52b6d&user=Sam+Liebman&userId=1d6afd42433f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}