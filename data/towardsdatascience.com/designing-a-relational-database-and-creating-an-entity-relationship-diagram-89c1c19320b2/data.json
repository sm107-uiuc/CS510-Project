{"url": "https://towardsdatascience.com/designing-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2", "time": 1683011055.118321, "path": "towardsdatascience.com/designing-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2/", "webpage": {"metadata": {"title": "Designing a Relational Database and Creating an Entity Relationship Diagram | by Craig Dickson | Towards Data Science", "h1": "Designing a Relational Database and Creating an Entity Relationship Diagram", "description": "This is part 1 of a 3-part series taking you through the process of designing, coding, implementing and querying a relational database, starting from zero. See part 2 (Coding and Implementing a\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "here", "paragraph_index": 0}, {"url": "https://medium.com/@thecraigdickson/querying-a-relational-database-joins-unions-and-more-26c0a968e61e", "anchor_text": "here", "paragraph_index": 0}, {"url": "https://github.com/thecraigd/SQL_School_Tutorial", "anchor_text": "GitHub repository", "paragraph_index": 1}, {"url": "https://www.lucidchart.com/pages/", "anchor_text": "Lucidchart", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/the-many-flavours-of-sql-7b7da5d56c1e", "anchor_text": "flavours", "paragraph_index": 2}, {"url": "https://en.wikipedia.org/wiki/SQL", "anchor_text": "Structured Query Language", "paragraph_index": 2}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "writing the SQL code", "paragraph_index": 4}, {"url": "https://medium.com/@thecraigdickson/data-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e", "anchor_text": "have some fun writing queries", "paragraph_index": 4}, {"url": "https://www.oracle.com/database/what-is-a-relational-database/", "anchor_text": "Oracle", "paragraph_index": 5}, {"url": "https://www.oracle.com/database/what-is-database.html", "anchor_text": "database", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Create,_read,_update_and_delete", "anchor_text": "create, read, update and delete", "paragraph_index": 6}, {"url": "https://techterms.com/definition/rdbms", "anchor_text": "RDBMS", "paragraph_index": 6}, {"url": "https://www.oracle.com/database/", "anchor_text": "Oracle", "paragraph_index": 6}, {"url": "https://www.microsoft.com/en-gb/sql-server", "anchor_text": "Microsoft SQl Server", "paragraph_index": 6}, {"url": "https://www.mysql.com/", "anchor_text": "MySQL", "paragraph_index": 6}, {"url": "https://www.oracle.com/database/what-is-a-relational-database/", "anchor_text": "PostgreSQL", "paragraph_index": 6}, {"url": "https://www.w3schools.com/sql/sql_syntax.asp", "anchor_text": "syntax", "paragraph_index": 6}, {"url": "https://www.w3schools.com/sql/sql_ref_keywords.asp", "anchor_text": "keywords", "paragraph_index": 6}, {"url": "https://dev.mysql.com/downloads/mysql/", "anchor_text": "MySQL Community Server", "paragraph_index": 7}, {"url": "https://en.wikipedia.org/wiki/Primary_key", "anchor_text": "Primary Key", "paragraph_index": 10}, {"url": "https://www.javatpoint.com/sql-composite-key", "anchor_text": "composite key", "paragraph_index": 11}, {"url": "https://en.wikipedia.org/wiki/Null_(SQL)", "anchor_text": "NULL", "paragraph_index": 11}, {"url": "https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model", "anchor_text": "entity", "paragraph_index": 13}, {"url": "https://medium.com/@thecraigdickson/data-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e", "anchor_text": "later in this series", "paragraph_index": 15}, {"url": "https://www.highsnobiety.com/p/supreme-air-jordan-5-official-release/", "anchor_text": "cross-brand collaborations", "paragraph_index": 17}, {"url": "https://en.wikipedia.org/wiki/Cardinality_(data_modeling)", "anchor_text": "cardinality", "paragraph_index": 18}, {"url": "https://mkyong.com/mysql/how-to-define-one-to-one-relationship-in-mysql/", "anchor_text": "1-to-1", "paragraph_index": 18}, {"url": "http://www.phpknowhow.com/mysql/many-to-many-relationships/", "anchor_text": "N-to-M", "paragraph_index": 18}, {"url": "https://stackoverflow.com/", "anchor_text": "Stack Overflow", "paragraph_index": 26}, {"url": "https://www.dicksonenglish.com", "anchor_text": "worked as a teacher", "paragraph_index": 27}, {"url": "https://www.nytimes.com/2014/03/30/books/review/write-what-you-know-helpful-advice-or-idle-cliche.html", "anchor_text": "write what you know", "paragraph_index": 27}, {"url": "https://www.lucidchart.com/pages/er-diagrams", "anchor_text": "Entity Relationship Diagram", "paragraph_index": 40}, {"url": "https://www.databasejournal.com/features/mssql/article.php/3922066/SQL-Server-Natural-Key-Verses-Surrogate-Key.htm", "anchor_text": "natural key", "paragraph_index": 50}, {"url": "https://www.techopedia.com/definition/18707/data-redundancy", "anchor_text": "reduntantly", "paragraph_index": 51}, {"url": "https://www.gatevidyalay.com/tag/total-participation-in-dbms-with-example/", "anchor_text": "participation level", "paragraph_index": 60}, {"url": "https://www.ques10.com/p/9460/explain-total-participation-and-partial-particip-1/", "anchor_text": "Here", "paragraph_index": 60}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "part 2", "paragraph_index": 67}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "next part", "paragraph_index": 69}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "Coding and Implementing a Relational Database using MySQL,", "paragraph_index": 69}, {"url": "https://dev.mysql.com/downloads/mysql/", "anchor_text": "MySQL Community Server", "paragraph_index": 69}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "there", "paragraph_index": 69}, {"url": "https://www.craigdoesdata.de/contact.html", "anchor_text": "my website", "paragraph_index": 70}, {"url": "http://www.craigdoesdata.de", "anchor_text": "http://www.craigdoesdata.de", "paragraph_index": 72}], "all_paragraphs": ["This is part 1 of a 3-part series taking you through the process of designing, coding, implementing and querying a relational database, starting from zero. See part 2 (Coding and Implementing a Relational Database using MySQL) here, and part 3 (Data Analysis in MySQL \u2014 Operators, Joins and More in Relational Databases) here.", "All the code and information for this tutorial can be found on the associated GitHub repository. I used Lucidchart to make the diagrams shown in the article.", "When I first started using databases at work and writing SQL queries, I was always slightly terrified that I would accidentally delete all of the production data that my company relies on. As a result, I was very tentative about which queries I made and what I did. Over time, I learned more about how to use and interact with databases using some different flavours of Structured Query Language (SQL to its friends).", "In this series of articles, I\u2019m going to share what I\u2019ve learned and go through the process of creating a Relational Database using MySQL (and MySQL Server) from the very beginning, and hopefully clarify things enough on the way that you can get started building your own and feel confident that you won\u2019t accidentally delete all the data!", "We\u2019re first going to look at what exactly a Relational Database is and how it works, and then walk through the process of building one, from thinking about what we want the database to do (or receiving requirements from colleagues or clients explaining what they would like it to do), to planning the tables and their relations, to writing the SQL code to create and populate the database itself. Then at the end we will have some fun writing queries!", "According to Oracle, a relational database is \u201ca type of database that stores and provides access to data points that are related to one another\u201d. OK, sounds good!", "We can create, read, update and delete (the basic functions of any database) the information in our relational database using a Relational Database Management System (RDBMS). Example of RDBMSs include Oracle, Microsoft SQl Server, MySQL, and PostgreSQL, among many others. Each of these have their pros and cons (and like everything coding-adjacent, their online hyper-partisans), and SQL is not implemented in exactly the same way in each of them. The concepts are the same, but the syntax and keywords may be slightly different, so it is not usually possible to use SQL code written for PostgreSQL in Microsoft SQL Server, for example, without making some modifications.", "We will be using MySQL Community Server because it\u2019s free, powerful and open-source, but the others are all good choices too.", "Within a relational database, records are stored in tables (think Excel spreadsheets, if that\u2019s something you\u2019re familiar with) where each column is an attribute (e.g product name, purchase cost, retail price) and each row represents a record (a particular item or instance which has those attributes).", "In this very simple example for a store, \u2018product_id\u2019, \u2018brand\u2019, \u2018product_name\u2019, \u2018unit_cost\u2019 and \u2018unit_sales_price\u2019 are all attributes, and each row is a record for a particular product (\u2018Cool Brand\u2122 Luft Extreme Sneakers\u2019, \u2018Rival Brand\u2122 Aero Maxima Sneakers\u2019, etc) .", "Each product here has a \u2018product_id\u2019 field, coloured red in the image above. This is what\u2019s called the \u2018Primary Key\u2019. Every record in every table in your database has to have an attribute (or combination of attributes) which identifies it uniquely \u2014 this is known as the primary key.", "In our case, an arbitrary \u2018product_id\u2019 has been assigned to each record. It would also be possible to use a \u2018composite key\u2019 made up of, for example, the \u2018product_name\u2019 and \u2018product_type\u2019 attributes together, presuming that these identify a product uniquely (i.e. that Cool Brand\u2122 etc never release another product with the same name). Which to use depends on the nature of your data \u2014 what is important is that every table has a primary key, it must be unique and it cannot be NULL.", "What makes a relational database relational is, you might not be surprised to learn, the relations between the data stored in the tables. For example, connected to our product table above, we may have a further table with all the details of all the brands that are sold in our store.", "Now we have two tables, each for a particular entity \u2014 the products sold in our store, and the brands who produce them. In our brand table, the brand name is the primary key \u2014 the unique identifier for each record.", "We can express the relationship between these entities (in this case, that the brand is the producer of the product) by including the primary key from the brand database as a \u2018foreign key\u2019 in the products database. This means that each product can be associated with the appropriate brand in our database.", "This is very useful as it means these tables are connected in a meaningful way and we can easily find the name of the contact person responsible for the \u2018Luft Extreme Sneakers\u2019, for example. We will look at how exactly this is done using SQL code later in this series.", "In our example, we can make the brand attribute on our products table work as the foreign key which stores the relationship between these two tables.", "In this case it is possible (in fact it is very likely) that each brand will have multiple products associated with it. It is also likely that each product is associated with one and only one brand (we\u2019ll ignore the existence of cross-brand collaborations here). This means we have a 1-to-N relationship between these entities \u2014 a brand may have N products associated with it (N just meaning any number), a product may have 1 brand associated with it.", "This attribute of the relationship, how many other entities an entity can have a relationship with, is known as the cardinality of the relationship. Other relationships include 1-to-1 and N-to-M (many to many). We will discuss these later.", "As each product can have one and only one brand, it makes perfect sense to store the unique identifier of that brand (in our example, the brand name) as an attribute of that product. This means when we want to find information stored on the brand table relating to a particular product, we can easily use the value of the brand column (Cool Brand\u2122, Rival Brand\u2122, etc) to \u2018look up\u2019 the relevant information on the brand table.", "It is in this way that the brand column on the product table can be said to work as the \u2018key\u2019 which unlocks the information in the other (\u2018foreign\u2019) table.", "If we tried to store the key for the product on the brand table, we\u2019d have to have a record for each product \u2014 making the separation of the data pointless and creating unnecessary redundancy in our database. This is the reason that we store the foreign key on the table which is on the N side of a 1-to-N relationship.", "Our database can become very complex as we start having multiple tables with different relationships to one another, but the fundamentals to focus on here are:", "This is how we define the relations between the data in a 1-to-N relationship in a relational database.", "As always, it will help us to walk through a real-life example here. Let\u2019s design a database based on our own requirements!", "The first thing to think about when creating a database is what we want it for. This may seem obvious, but is worth stating explicitly. Different requirements will lead to different information structures, relationships, designs and implementations.", "It\u2019s also important to note that the same requirements can be successfully met through different designs and implementations, and it\u2019s not always true that there is one best implementation to solve a particular problem. There are definitely solutions which are better and worse than others, but I\u2019ll leave those arguments to threads on Stack Overflow!", "So what is our use case? We are going to create a relatively simple database for a language school based in Berlin, Germany. I have worked as a teacher of English as a Foreign Language in Berlin for some time, so this is an example which is near to my heart. And you know what they say, write what you know.", "It\u2019s a good idea to write down your requirements, or if you\u2019re working for a client or creating a database for use by another department in your company, get the requirements in written form from the end users of the database.", "What information do they want to store? What types of entities do we need to create tables for (customers, orders, products, courses, website-clicks, data downloads, etc)? As with anything to do with taking advantage of data, to make our work most effective we need to think about what the use cases are and what our users are looking for.", "Here are the requirements for our example database:", "The International Language School is a language training school.", "It offers language classes for corporate clients, which can be conducted at the School or at the offices of the client as they prefer. The School employs teachers, each of whom may teach multiple courses.", "The school has clients, each of whom may offer multiple courses via the school. Clients offer courses to their employees, who have the option to participate.", "Each course is offered by one client. Each course has one teacher at any given time.", "Participants in the courses are employees of the client companies, i.e. they work for the client companies. Each participant can be employed by one company at a time. Participants may be enrolled in more than one course.", "Bear in mind that a real requirements document will likely be longer and more complex than this, but this one will give us the information we need to build our example database.", "The first thing to do is to read the requirements document carefully, making note of the things which might become entities in our database, and the possible relationships between them.", "It is important at this stage to ask questions to clarify the requirements. It\u2019s natural for people who work with something every day to think of some things as \u2018common sense\u2019 or obvious, when they may not be obvious to someone coming from outside that area of work. Also, people might sometimes not be used to thinking about these aspects of their work with the rigour necessary to create a database.", "This is where our soft skills come in, and the ability to facilitate clear communication between technical and less-technical employees is most valuable. We really don\u2019t want to spend a lot of time designing, coding and implementing a huge database only to find that we had assumed each participant could only take one course, when in fact they can take multiple course, for example. Planning is important!", "A very useful intermediate step between getting the requirements and implementing our database in SQL is creating an Entity Relationship Diagram (ERD). This is, as you might anticipate, a diagram which maps the relationships between the entities that we will build into our database. The process of putting this diagram together can help us straighten out the relationships and identify important insights or redundant attributes as we go.", "Some people might skip this step and go straight to coding, but creating an ERD to make sure we have everything planned out before we build the database itself is best practice, and strongly recommended.", "Let\u2019s go through the requirements and see if we can identify our entities. These will most often be people, things, events or locations.", "Just looking at the first paragraph of our requirements document we can see clients, office locations, teachers, and courses as possible entities for our database. The rest of the document gives us various pieces of information about the relationships between these entities, and also mentions participants (employees of the clients, but from the point of view of the school, these are participants in the language courses).", "So we have as candidate entities:", "These are all important and we will have to handle each of these in our database. For the sake of this article I will make the simplifying assumption that each client has one office, and the courses take place there (if they don\u2019t take place at the school itself). In real life one client may have multiple offices, or they may have a large facility with multiple locations where different courses take place. We could easily handle this using an RDBMS, but for the sake of reducing complexity, we will assume each client has one location for their classes.", "So that means the entities that we will create tables for are: clients, teachers, courses and participants. Good stuff!", "Our next step is to think about which attributes we want to store for each of our entities. This may be spelled out in detail in our requirements document, or it may require more discretion on the part of the database developer.", "Let\u2019s start with the teacher entity. We will want to store the name of the teacher, perhaps their date of birth, their contact information, tax or legal information, and \u2014 as this is a language school \u2014 the languages they teach. This might give us something like this to start with.", "In a real-life situation we would probably store significantly more detail (for example the teacher\u2019s address, their starting date with the school, perhaps their payment rate for teaching, etc), but for our purposes this will be enough to work with.", "Notice that we have created an arbitrary \u2018teacher_id\u2019 to use as our primary key here. We could have tried for a natural key using the combination of first_name and last_name, but what if our school employs two teachers with the same name in the future? Unlikely perhaps, but definitely not impossible. These are the kinds of things we need to consider during the planning stage.", "We repeat the process for each entity, thinking about what information is relevant. During this process we will often discover that what we thought of as an attribute might be better represented as its own table, or we might notice that the same information is being stored reduntantly on two tables. These are the kinds of insights that are gained from creating an ERD as part of the database construction process, saving us time later in the process by surfacing possible problems early.", "Let\u2019s do this for our remaining entities, beginning with the client entity.", "Here we are storing the client_name, address and industry attributes, alongside a unique client_id.", "Here we are once again using course_id as an arbitrary primary key, alongside some very important attributes such as the course\u2019s name, its language and level, its start date and duration, the teacher of the course, the client, and if it takes place at the school or at the client\u2019s offices.", "Now notice that we have a field for teacher and a field for client here. And we also have entities for teacher and client. This is where our relational database gets relational!", "What we want to do is connect the entities (and the corresponding tables in our database) with each other, and we can do this using these attributes as our foreign keys. To understand this more clearly, let\u2019s take a look at the teacher course relationship in more detail.", "In our requirements document, it was stated that each course may have only one teacher at a time, which makes sense in this situation. It was also clarified that a teacher may teach multiple courses (this also makes sense, it would be hard for a teacher to pay the bills teaching just one lesson per week). So what we have here is a 1-to-N relationship!", "We can model this in our ERD like so:", "We connect these in our ERD through a relationship. This is often, but not always, modeled using a verb. In our case we can say that a teacher teaches a course, or \u2014 going the other way \u2014 a course is taught by a teacher. It makes sense to think of this relation as based on the verb \u2018teaches\u2019. Notice that the \u2018teacher\u2019 field in our diagram is now coloured green, to remind us that this attribute is a foreign key, which references the teacher_id attribute in the teacher entity.", "The single and double lines here refer to the participation level of the entity in the relationship. The double lines indicate total participation, which means every entity in the table must participate in the relationship \u2014 in our case this means every course must have a teacher. The single lines indicate partial participation, so in our case there may exist some teachers who are not yet or not currently teaching any courses. Here is a slightly longer explanation of this distinction if you would like to read some more.", "We can do the same thing to model the relationship between client and course. Each client may offer multiple courses through the school, but each course may be associated with a maximum of 1 client, so again we have a 1-to-N relationship.", "The entities on both sides of this relationship have double lines, indicating total participation on both sides of this relationship. This makes sense as the International Language School only offers classes on behalf of client companies, to those client\u2019s employees. It makes sense then that every course must be associated with one client, and every client must be associated with at least one course.", "The final entity we want to model is our participants table, storing the participant\u2019s name, phone number, a participant_id as a primary key, and the name of the client which employs the participant:", "You can see that client is coloured green, and hopefully by this point you know why. If you said \u201cbecause the client field is being used as a foreign key to store the relationship between clients and participants\u201d then you win the prize! (The prize is the warm feeling you get from learning).", "Once again, this is a 1-to-N relationship \u2014 clients may employ multiple participants, participants may only work for one client \u2014 and as each participant can work for one client only, the foreign key is stored on the participant table.", "If we put all of this together, plus just a little more work (which we\u2019ll go through in a moment), we can create our final, complete, Entity Relationship Diagram:", "Notice that the relationship between the Participant entity and the Course entity, here modeled as \u2018takes\u2019 (i.e. a participant takes a course, a course is taken by a participant), is a many-to-many, or N-to-M, relationship. An N-to-M relationship cannot be handled simply by use of foreign keys, but instead requires us to build a separate table in our database schema. We will go through this in detail in part 2.", "In this article we have introduced the basic ideas of what a relational database is and how it works, discussed some of the different RDBMS packages available, and gone through the whole process of creating an Entity Relationship Diagram to describe the database we want to build based on the requirements document. That\u2019s a lot!", "In the next part of this series, Coding and Implementing a Relational Database using MySQL, we will take things further and actually fully implement this database using MySQL Community Server. See you there!", "Thanks very much for taking the time to come with me on this journey. I always welcome your feedback \u2014 please get in touch with me via my website and let me know how I could have done this more effectively! I am always open to constructive criticism, or any of your comments.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist, based in Berlin, Germany. Python, SQL, R, Tableau. He / him. I\u2019m the one on the left in the photo. http://www.craigdoesdata.de"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F89c1c19320b2&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----89c1c19320b2--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----89c1c19320b2--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@thecraigdickson?source=post_page-----89c1c19320b2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=post_page-----89c1c19320b2--------------------------------", "anchor_text": "Craig Dickson"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7106ad46fcdd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&user=Craig+Dickson&userId=7106ad46fcdd&source=post_page-7106ad46fcdd----89c1c19320b2---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F89c1c19320b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F89c1c19320b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://medium.com/tag/sql-series", "anchor_text": "SQL Tutorial Course from Craig Dickson"}, {"url": "https://pixabay.com/users/mcmurryjulie-2375405/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1895779", "anchor_text": "mcmurryjulie"}, {"url": "https://pixabay.com/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=1895779", "anchor_text": "Pixabay"}, {"url": "https://pixabay.com/service/license/", "anchor_text": "License"}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "here"}, {"url": "https://medium.com/@thecraigdickson/querying-a-relational-database-joins-unions-and-more-26c0a968e61e", "anchor_text": "here"}, {"url": "https://github.com/thecraigd/SQL_School_Tutorial", "anchor_text": "GitHub repository"}, {"url": "https://www.lucidchart.com/pages/", "anchor_text": "Lucidchart"}, {"url": "https://towardsdatascience.com/the-many-flavours-of-sql-7b7da5d56c1e", "anchor_text": "flavours"}, {"url": "https://en.wikipedia.org/wiki/SQL", "anchor_text": "Structured Query Language"}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "writing the SQL code"}, {"url": "https://medium.com/@thecraigdickson/data-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e", "anchor_text": "have some fun writing queries"}, {"url": "https://www.oracle.com/database/what-is-a-relational-database/", "anchor_text": "Oracle"}, {"url": "https://www.oracle.com/database/what-is-database.html", "anchor_text": "database"}, {"url": "https://en.wikipedia.org/wiki/Create,_read,_update_and_delete", "anchor_text": "create, read, update and delete"}, {"url": "https://techterms.com/definition/rdbms", "anchor_text": "RDBMS"}, {"url": "https://www.oracle.com/database/", "anchor_text": "Oracle"}, {"url": "https://www.microsoft.com/en-gb/sql-server", "anchor_text": "Microsoft SQl Server"}, {"url": "https://www.mysql.com/", "anchor_text": "MySQL"}, {"url": "https://www.oracle.com/database/what-is-a-relational-database/", "anchor_text": "PostgreSQL"}, {"url": "https://www.w3schools.com/sql/sql_syntax.asp", "anchor_text": "syntax"}, {"url": "https://www.w3schools.com/sql/sql_ref_keywords.asp", "anchor_text": "keywords"}, {"url": "https://dev.mysql.com/downloads/mysql/", "anchor_text": "MySQL Community Server"}, {"url": "https://en.wikipedia.org/wiki/Primary_key", "anchor_text": "Primary Key"}, {"url": "https://www.javatpoint.com/sql-composite-key", "anchor_text": "composite key"}, {"url": "https://en.wikipedia.org/wiki/Null_(SQL)", "anchor_text": "NULL"}, {"url": "https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model", "anchor_text": "entity"}, {"url": "https://medium.com/@thecraigdickson/data-analysis-in-mysql-operators-joins-and-more-in-relational-databases-26c0a968e61e", "anchor_text": "later in this series"}, {"url": "https://www.highsnobiety.com/p/supreme-air-jordan-5-official-release/", "anchor_text": "cross-brand collaborations"}, {"url": "https://en.wikipedia.org/wiki/Cardinality_(data_modeling)", "anchor_text": "cardinality"}, {"url": "https://mkyong.com/mysql/how-to-define-one-to-one-relationship-in-mysql/", "anchor_text": "1-to-1"}, {"url": "http://www.phpknowhow.com/mysql/many-to-many-relationships/", "anchor_text": "N-to-M"}, {"url": "https://stackoverflow.com/", "anchor_text": "Stack Overflow"}, {"url": "https://www.dicksonenglish.com", "anchor_text": "worked as a teacher"}, {"url": "https://www.nytimes.com/2014/03/30/books/review/write-what-you-know-helpful-advice-or-idle-cliche.html", "anchor_text": "write what you know"}, {"url": "https://www.lucidchart.com/pages/er-diagrams", "anchor_text": "Entity Relationship Diagram"}, {"url": "https://www.databasejournal.com/features/mssql/article.php/3922066/SQL-Server-Natural-Key-Verses-Surrogate-Key.htm", "anchor_text": "natural key"}, {"url": "https://www.techopedia.com/definition/18707/data-redundancy", "anchor_text": "reduntantly"}, {"url": "https://www.gatevidyalay.com/tag/total-participation-in-dbms-with-example/", "anchor_text": "participation level"}, {"url": "https://www.ques10.com/p/9460/explain-total-participation-and-partial-particip-1/", "anchor_text": "Here"}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "part 2"}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "next part"}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "Coding and Implementing a Relational Database using MySQL,"}, {"url": "https://dev.mysql.com/downloads/mysql/", "anchor_text": "MySQL Community Server"}, {"url": "https://medium.com/@thecraigdickson/coding-and-implementing-a-relational-database-using-mysql-d9bc69be90f5", "anchor_text": "there"}, {"url": "https://www.craigdoesdata.de/contact.html", "anchor_text": "my website"}, {"url": "https://www.craigdoesdata.de/", "anchor_text": "craigdoesdata.de"}, {"url": "https://medium.com/tag/sql?source=post_page-----89c1c19320b2---------------sql-----------------", "anchor_text": "Sql"}, {"url": "https://medium.com/tag/database-design?source=post_page-----89c1c19320b2---------------database_design-----------------", "anchor_text": "Database Design"}, {"url": "https://medium.com/tag/database?source=post_page-----89c1c19320b2---------------database-----------------", "anchor_text": "Database"}, {"url": "https://medium.com/tag/data-science?source=post_page-----89c1c19320b2---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/sql-series?source=post_page-----89c1c19320b2---------------sql_series-----------------", "anchor_text": "Sql Series"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F89c1c19320b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&user=Craig+Dickson&userId=7106ad46fcdd&source=-----89c1c19320b2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F89c1c19320b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&user=Craig+Dickson&userId=7106ad46fcdd&source=-----89c1c19320b2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F89c1c19320b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----89c1c19320b2--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F89c1c19320b2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----89c1c19320b2---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----89c1c19320b2--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----89c1c19320b2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----89c1c19320b2--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----89c1c19320b2--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----89c1c19320b2--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----89c1c19320b2--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----89c1c19320b2--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----89c1c19320b2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thecraigdickson?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Craig Dickson"}, {"url": "https://medium.com/@thecraigdickson/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "171 Followers"}, {"url": "http://www.craigdoesdata.de", "anchor_text": "http://www.craigdoesdata.de"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7106ad46fcdd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&user=Craig+Dickson&userId=7106ad46fcdd&source=post_page-7106ad46fcdd--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F5edb8f2d3595&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-a-relational-database-and-creating-an-entity-relationship-diagram-89c1c19320b2&newsletterV3=7106ad46fcdd&newsletterV3Id=5edb8f2d3595&user=Craig+Dickson&userId=7106ad46fcdd&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}