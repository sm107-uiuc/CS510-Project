{"url": "https://towardsdatascience.com/machine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f", "time": 1683016039.416787, "path": "towardsdatascience.com/machine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f/", "webpage": {"metadata": {"title": "Finding Important Features using Genetic Algorithms | by Peijin Chen | Towards Data Science", "h1": "Finding Important Features using Genetic Algorithms", "description": "This data set has 12 features and you can download it from the UCI Machine Learning Repository. It is a binary classification, supervised learning problem, with \u201cDEATH_EVENT\u201d as the target variable\u2026"}, "outgoing_paragraph_urls": [{"url": "https://archive.ics.uci.edu/ml/datasets/Heart+failure+clinical+records", "anchor_text": "UCI Machine Learning Repository", "paragraph_index": 1}, {"url": "http://Introduction to Genetic Algorithms \u2014 Including Example Code ...towardsdatascience.com \u203a introduction-to-genetic-algor...", "anchor_text": "here", "paragraph_index": 7}, {"url": "https://colab.research.google.com/drive/17NqqAoSm24N9a6nXLN2vzPxXkP8AlygM?usp=sharing", "anchor_text": "Google Colab notebook", "paragraph_index": 21}, {"url": "https://scikit-learn.org/dev/modules/generated/sklearn.feature_selection.SequentialFeatureSelector.html", "anchor_text": "experimental build of sklearn", "paragraph_index": 26}, {"url": "http://rasbt.github.io/mlxtend/", "anchor_text": "mlxtend", "paragraph_index": 26}, {"url": "https://colab.research.google.com/drive/17NqqAoSm24N9a6nXLN2vzPxXkP8AlygM#scrollTo=gH6CKF5A5HU8&line=3&uniqifier=1", "anchor_text": "Colab notebook that has my code", "paragraph_index": 26}], "all_paragraphs": ["The original paper is as follows:", "This data set has 12 features and you can download it from the UCI Machine Learning Repository. It is a binary classification, supervised learning problem, with \u201cDEATH_EVENT\u201d as the target variable, 1 meaning died and 0 meaning survived.", "Here\u2019s the question: what is the most efficient way to find the best learner (algorithm) and best feature subset? Sometimes, surprisingly small subsets of the features perform better than the complete feature set. What is the best way of finding that set?", "First, let\u2019s put the question of the best learner aside. One thing we know is that some learners are faster to train than others. If you want to test out the genetic learning algorithm for feature selection, you\u2019ll find that using Logistic Regression is the fastest way to go, whereas something tree-based like the Random Forest or LightGBM takes a lot longer, and might not even work properly, depending on the library you are using.", "Mostly, sklearn-genetic for the Genetic Algorithm (GA) methods, and if you want to use some autoML type methods, install pycaret. Other than that, we just need numpy and pandas.", "Basically, in our case, we consider the inclusion or exclusion of a feature as a binary string, that is, a string of 1\u2019s and 0\u2019s, where 1 implies the feature is included and 0 means it is not included. Now that means that since we have 12 features there are obviously 2\u00b9\u00b2 possibilities or subsets of the entire feature set to consider. The point of the GA is NOT to test all of them, but rather to consider a few subsets \u2014 a few \u201cindividuals\u201d, let\u2019s call them \u2014 and then assess their \u201cfitness\u201d value, which of course implies a mathematical function. So let\u2019s say that instead of using 2\u00b9\u00b2 \u201cindividuals\u201d, we use maybe something like 20 or 50 individuals, find those that have some greater \u201cfitness\u201d value, and let them, uh, \u201creproduce\u201d, and come up with offspring that have some of the features of their parents, while also allowing for random mutation \u2014 Biology 101! Of course, how much mixing and mutating is something you control, it\u2019s random but the probabilities are hyperparameters of the algorithm that you can tune. You can also decide how many generations you want \u2014 obviously, the more generations you have the greater chance you have of finding a global optimum, a population whose genes are the \u201cfittest\u201d. You also have some kind of early stopping criteria to think about, just so that the process doesn\u2019t either get stuck in local minima or else go on longer than it needs to. Here\u2019s a diagram explaining the general process:", "The crossover rate determines how genes are passed down to offspring \u2014 that is, at what points, and with what probability, the offspring take on genes from their parents. In other words, it determines how much of a \u201cmix\u201d or how much genetic similarity there is between parents and offspring. Obviously, you don\u2019t want the offspring to be copies of their parents \u2014 and you probably want some mutant offspring as well, just to throw some more genetic diversity in the mix, with the hope that somewhere down the line, the perfect mutant of indomitable fitness comes along, and with it, your insuperable machine learning model. So you have mutation rate as a hyperparameter as well.", "You can read a better explanation of genetic algorithms here. Let\u2019s go and see a simple way of using it for this supervised learning problem.", "Here\u2019s the code for the genetic algorithm that will select a subset of features for us:", "Things to notice in the code:", "Long story short \u2014 play around with the parameters. With This is the table showing what I ended up with :", "The \u201cwinner\u201d of this algorithm: a feature subset of cardinality 5 that has {age, creatinine_phosphokinase, diabetes, ejection_fraction, serum_creatinine} as the features. We can expect a MCC score of about 0.40. Now let\u2019s test this more thoroughly using pycaret, an autoML type package that makes everything easy.", "The compare_models functions shows us this:", "So you can see that the Random Forest classifier is the best, as the authors of the paper claim. This is using a 5-fold, 20 repeat scheme. Let\u2019s see what happens when we create a Random Forest model, but with 5 splits and 50 repeats, i.e., 250 trained models:", "You can see that the standard deviation, at 0.1305, is fairly high. It suggests that while RF is better than most, it might not always perform better on a given train/val set.", "You can see in the learner comparison table that XGBoost and LightGBM seem to have 0s across the board. I\u2019m not sure why that is, but I just ran the experiment using regular sklearn and the same cross-val scheme. XGBoost scored 0.359 and LGBM 0.378 in this experiment, placing them in the middle of the pack.", "Without any feature selection, pycaret shows us this", "We can see that the overall MCC scores are lower than when you have genetic feature selection. This is also in accordance with what was claimed in the paper.", "When you do this, but with the pycaret \u201cfeature_selection\u201d parameter set to True (it performs its own feature selection), we find this", "This is somewhat surprising, given that not only is LDA is the best model but the RF and other GBMs don\u2019t do as well as they normally do.", "Select from model is one of sklearn\u2019s built in feature selection methods. We use it as a means of comparison with GAs. The features that it selects are:{\u2018age\u2019, \u2018creatinine_phosphokinase\u2019, \u2018ejection_fraction\u2019, \u2018platelets\u2019, \u2018serum_creatinine\u2019, \u2018serum_sodium\u2019}. We then take this feature set and run it through pycaret again, and here\u2019s what we found:", "So this feature subset isn\u2019t bad either, but is slightly outperformed by the smaller subset from the Genetic Algorithm. One thing is clear: having feature selection tends to improve the score. For more details, see my open Google Colab notebook.", "So you can see that although the feature subsets were ordered by performance in the GA algorithm scoring process, that doesn\u2019t mean they score in that order when cross_val is changed to 100 repeats. The top score is from the 6th candidate, which has {\u201cage\u201d, \u201ccreatinine_phosphokinase\u201d,\u201dejection_fraction\u201d,\u201dserum_creatinine\u201d,\u201dsmoking\u201d, time\u201d} as its chosen features and scores a 0.868.", "That said, all of them save the last one are above 0.86. In fact, the next to last one has a score of 0.863, and only has the features {\u201cejection_fraction\u201d, \u201cserum_creatinine\u201d, \u201csex\u201d, and \u201ctime\u201d}. Which means it is reasonable to just go with this feature subset, if you\u2019re trying to or need a more parsimonious model. Any of these models does as well if not better than the baseline model with all the features, so there is no overwhelming reason to keep all the features in the model.", "This is the SelectFromModel in sklearn:", "This method is a bit more expensive, and involves an algorithm that tests out various combinations of features, though unlike GA it doesn\u2019t involve any crossover or mutation process, it\u2019s basically, find a good feature, and add one more and see if that helps, if so great, keep it and add another, stop when adding more doesn\u2019t seem to help. The \u201cfloating\u201d version of this algorithm allows you to take out features they don\u2019t help, which allows you to test more combinations by replacing features that might have seemed good but then were found out not to \u201cplay well\u201d with the addition of newer features.It\u2019s a little bit like making substitutions or trades in team sports \u2014 sometimes you have to remove a good player because there might be better combinations without that player.", "You can get SFSS from an experimental build of sklearn, but I just got it from mlxtend, which is easier for me. Rather than drag this on, here\u2019s a link to the cell in my Colab notebook that has my code.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd069e205305f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d069e205305f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d069e205305f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://peijin.medium.com/?source=post_page-----d069e205305f--------------------------------", "anchor_text": ""}, {"url": "https://peijin.medium.com/?source=post_page-----d069e205305f--------------------------------", "anchor_text": "Peijin Chen"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff496c5af986&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&user=Peijin+Chen&userId=f496c5af986&source=post_page-f496c5af986----d069e205305f---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd069e205305f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd069e205305f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://towardsdatascience.com/tagged/mini-projects", "anchor_text": "Machine Learning Mini-Project"}, {"url": "https://unsplash.com/@nci?utm_source=medium&utm_medium=referral", "anchor_text": "National Cancer Institute"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://doi.org/10.1186/s12911-020-1023-5", "anchor_text": "https://doi.org/10.1186/s12911-020-1023-5"}, {"url": "https://archive.ics.uci.edu/ml/datasets/Heart+failure+clinical+records", "anchor_text": "UCI Machine Learning Repository"}, {"url": "https://commons.wikimedia.org/wiki/File:Evolutionary_Algorithm.svg", "anchor_text": "Wikimedia"}, {"url": "http://Introduction to Genetic Algorithms \u2014 Including Example Code ...towardsdatascience.com \u203a introduction-to-genetic-algor...", "anchor_text": "here"}, {"url": "https://colab.research.google.com/drive/17NqqAoSm24N9a6nXLN2vzPxXkP8AlygM?usp=sharing", "anchor_text": "Google Colab notebook"}, {"url": "https://scikit-learn.org/dev/modules/generated/sklearn.feature_selection.SequentialFeatureSelector.html", "anchor_text": "experimental build of sklearn"}, {"url": "http://rasbt.github.io/mlxtend/", "anchor_text": "mlxtend"}, {"url": "https://colab.research.google.com/drive/17NqqAoSm24N9a6nXLN2vzPxXkP8AlygM#scrollTo=gH6CKF5A5HU8&line=3&uniqifier=1", "anchor_text": "Colab notebook that has my code"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----d069e205305f---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d069e205305f---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/genetic-algorithm?source=post_page-----d069e205305f---------------genetic_algorithm-----------------", "anchor_text": "Genetic Algorithm"}, {"url": "https://medium.com/tag/feature-selection?source=post_page-----d069e205305f---------------feature_selection-----------------", "anchor_text": "Feature Selection"}, {"url": "https://medium.com/tag/mini-projects?source=post_page-----d069e205305f---------------mini_projects-----------------", "anchor_text": "Mini Projects"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd069e205305f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&user=Peijin+Chen&userId=f496c5af986&source=-----d069e205305f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd069e205305f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&user=Peijin+Chen&userId=f496c5af986&source=-----d069e205305f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd069e205305f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d069e205305f--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd069e205305f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d069e205305f---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d069e205305f--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d069e205305f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d069e205305f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d069e205305f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d069e205305f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d069e205305f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d069e205305f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d069e205305f--------------------------------", "anchor_text": ""}, {"url": "https://peijin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://peijin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Peijin Chen"}, {"url": "https://peijin.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "436 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff496c5af986&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&user=Peijin+Chen&userId=f496c5af986&source=post_page-f496c5af986--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ffd688e6bba17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmachine-learning-mini-project-4-finding-important-features-using-genetic-algorithms-for-heart-d069e205305f&newsletterV3=f496c5af986&newsletterV3Id=fd688e6bba17&user=Peijin+Chen&userId=f496c5af986&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}