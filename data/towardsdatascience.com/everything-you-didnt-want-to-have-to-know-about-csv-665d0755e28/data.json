{"url": "https://towardsdatascience.com/everything-you-didnt-want-to-have-to-know-about-csv-665d0755e28", "time": 1683002648.973033, "path": "towardsdatascience.com/everything-you-didnt-want-to-have-to-know-about-csv-665d0755e28/", "webpage": {"metadata": {"title": "Everything You Didn\u2019t Want to Have to Know About CSV | by Alex Wennerberg | Towards Data Science", "h1": "Everything You Didn\u2019t Want to Have to Know About CSV", "description": "CSV is one of the more common file formats for storing data, however, it\u2019s also fraught with a number of issues that can make working with it painful. Unlike an alternative format such as JSON, CSV\u2026"}, "outgoing_paragraph_urls": [{"url": "http://www.json.org/", "anchor_text": "JSON", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/Comma-separated_values", "anchor_text": "Wikipedia Entry", "paragraph_index": 2}, {"url": "https://en.wikipedia.org/wiki/Comma-separated_values#Specification", "anchor_text": "not standardized", "paragraph_index": 6}, {"url": "https://tools.ietf.org/html/rfc4180", "anchor_text": "RFC 4180", "paragraph_index": 6}, {"url": "https://answers.microsoft.com/en-us/msoffice/forum/all/why-excel-does-not-support-rfc-4180-standard-for/d0e379b1-ec3e-40d0-ad4f-33b20693c030", "anchor_text": "Microsoft Excel", "paragraph_index": 6}, {"url": "https://www.loc.gov/preservation/digital/formats/fdd/fdd000323.shtml#notes", "anchor_text": "Library of Congress", "paragraph_index": 8}, {"url": "https://www.sqlservercentral.com/editorials/comedy-limited-with-sql-server", "anchor_text": "SQL Server\u2019s \u201cCSV\u201d format", "paragraph_index": 16}, {"url": "https://www.duckdb.org/", "anchor_text": "DuckDB", "paragraph_index": 22}, {"url": "https://www.duckdb.org/docs/current/sql/copy.html", "anchor_text": "read CSVs", "paragraph_index": 22}, {"url": "https://jupyter.org/", "anchor_text": "Jupyter", "paragraph_index": 23}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html", "anchor_text": "different formats", "paragraph_index": 23}, {"url": "https://cloud.google.com/bigquery/", "anchor_text": "BigQuery", "paragraph_index": 24}, {"url": "https://aws.amazon.com/redshift/", "anchor_text": "Redshift", "paragraph_index": 24}, {"url": "https://en.wikipedia.org/wiki/Column-oriented_DBMS", "anchor_text": "columnar database", "paragraph_index": 25}, {"url": "https://docs.python.org/3/library/csv.html", "anchor_text": "Python", "paragraph_index": 27}, {"url": "https://www.gnu.org/software/gawk/manual/gawk.html", "anchor_text": "awk", "paragraph_index": 27}, {"url": "https://www.gnu.org/software/sed/manual/sed.html", "anchor_text": "sed", "paragraph_index": 27}, {"url": "https://github.com/jeroenjanssens/data-science-at-the-command-line", "anchor_text": "Data Science at the Command Line", "paragraph_index": 34}, {"url": "https://www.alexwennerberg.com/", "anchor_text": "https://www.alexwennerberg.com/", "paragraph_index": 37}], "all_paragraphs": ["CSV is one of the more common file formats for storing data, however, it\u2019s also fraught with a number of issues that can make working with it painful. Unlike an alternative format such as JSON, CSV is not formalized or standardized. This means that something may be called a CSV, but not necessarily that it will be read properly by the CSV parser you happen to be using.", "I hope that this post gives you a better understanding of the challenges of working with CSV files and some ways to transform and analyze CSV-formatted data. I\u2019ll assume you have some degree of technical experience, but not necessarily that you write code.", "The first sentence of the Wikipedia Entry provides a simple (but already problematic) definition of CSV:", "A comma-separated values (CSV) file is a delimited text file that uses a comma to separate values. A CSV file stores tabular data (numbers and text) in plain text. Each line of the file is a data record. Each record consists of one or more fields, separated by commas.", "By that definition, a CSV file would look something like this (the first line in this case represents column headers):", "This seems relatively straightforward, but very quickly, problems begin to arise. For example, what if there is a comma in a value? You could encapsulate the value in double quotes, but what if the quote characters are also inside that value? What if the character used to delineate records (ie, a newline) is present within the data? What if your file uses a character other than a comma to delineate values? And so on. The answers to these questions are often ad hoc and system dependent, so depending on where the CSV data you\u2019re working with came from, you need to apply a different set of rules in order to properly interpret that data. If you\u2019re lucky, your source system provides thorough documentation. If you aren\u2019t, then you\u2019ll have to guess and/or reverse engineer whatever ruleset your CSV file follows.", "CSV has been in use since the 1970s, but it is not standardized. The closest thing that exists to a standard for CSV is RFC 4180, released in 2005. While this may be a useful reference, there is no guarantee a file that a system you\u2019re working with calls a \u201cCSV\u201d file follows this RFC. For example, Microsoft Excel explicitly does not. The RFC itself states this:", "It does not specify an Internet standard of any kind.", "The Library of Congress provides a more \u201creal-world\u201d definition of CSV and describes many common deviations:", "In locales where the comma character is used in place of a decimal point in numbers, the separator between fields/columns is often a semicolon.", "The line break character may be CR or LF, not necessarily CRLF.", "Some Unix-based applications may use a different escape mechanism for indicating that one of the separator characters occurs within a text value. The individual character is preceded by a backslash character rather than enclosing the entire string in double quotes. Single quotes may be treated as equivalent to double-quotes for escaping (also known as \u201ctext-qualification\u201d). Several other caveats are worth noting:", "The last record in a file may or may not end with a line break character.", "Non-printable characters may be included in text fields by using one of several c-style character escape sequences: ### or \\o### Octal; \\x## Hex; \\d### Decimal; and \\u#### Unicode.", "The treatment of whitespace adjacent to field and record separators varies among applications. If whitespace at the beginning and end of a textual field value is significant, the text string should be text-qualified, i.e. enclosed in quotes.", "In some uses, there is an assumption of strong data typing, with unquoted fields considered to be numeric, and quoted fields considered to be text data.", "I\u2019ve seen most or all of these deviations in practice. In some cases, tools will export \u201cCSV\u201d by just splicing a comma between records, which breaks very easily (For example SQL Server\u2019s \u201cCSV\u201d format).", "The LOC page has a lot of additional details if you\u2019re interested in further reading, but I would not recommend assuming any CSV data is RFC 4180 compliant or that any parser you\u2019re interacting with implements RFC 4180. You may want to look into the documentation for the specific CSV writer or parser that you\u2019re working with, if it exists, to understand how that individual system handles CSV. Some systems will handle CSV relatively well, while others may fail in inscrutable ways.", "If you\u2019re working with CSV-formatted data, you may want to transform your CSV data and load it into a different system which has different expectations for how a CSV is formatted. You also may want to load data from a CSV and perform transformations and analytics on it. Here are a number of tools that I find useful when working with CSV files. Most of these tools assume you have some experience with the command line and installing software from a binary or package repository.", "This command line tool is my go-to for most CSV-related tasks \u2014 it\u2019s reliable and extremely fast, and if you\u2019re working with large (>1GB) files, there isn\u2019t much competition. It can do a number of simple operations, including slicing data, sorting data, performing basic analytics, reformatting CSV data, fixing mismatched rows, etc. Check out the documentation for more information. If you\u2019re doing more complex analytics or transformations on your data, xsv may not be appropriate and you may want to look into some of the other tools below.", "Another command line tool, I used CSVkit before I discovered XSV. It serves a similar role, but is not nearly as fast. There are quite a few additional features that CSVkit has, for example converting between CSV and other formats. This is a good library to use if you need to do something XSV can\u2019t do or if you\u2019re working with smaller files and performance isn\u2019t as important.", "Most relational databases have the ability to import or export from CSVs. This is a great strategy for doing complex analytics on large datasets with relatively good performance. It\u2019s also easy if you\u2019re already familiar with SQL. I recommend SQLite for doing analytics like this, as it doesn\u2019t require a server and can write directly to disk or even run in memory, but you could also use another relational database that you\u2019re more familiar with.", "A relatively new tool is DuckDB, an embedded columnar database that can also read CSVs. I haven\u2019t used this, but it could be a great option if you\u2019re looking for a higher-performance embedded database for analytics workflows!", "If you\u2019re familiar with Pandas, the Python data manipulation and analysis library, it can be a useful way of working with CSV data but can suffer issues with performance on large (several GB) datasets, depending on your computer\u2019s specs. Data scientists often use Pandas in conjunction with Jupyter for data analysis, and both tools have an extensive community surrounding them. Pandas is great for doing more sophisticated transformation and analysis on your data after loading it from CSVs. You can also export data from Pandas into a number of different formats.", "BigQuery, Redshift, or other hosted columnar database", "If you are working with very large amounts of data (10s or 100s of GBs), your computer may not be able to handle running analytics locally via SQLite or Pandas. You\u2019ll probably want to move your CSV file(s) into columnar database, and these hosted tools allow you to not have to worry about setting up a database server.", "Writing code in the programming language of your choice", "If you are comfortable writing code, your programming language probably has a CSV parsing library. For example, I often use the Python CSV library, part of the standard Python library. This is a useful strategy if you are working with a large amount of data and are very sensitive to performance, or if you want to perform a task that the above tools can\u2019t handle. There may be circumstances where using Unix tools such as awk or sed may make sense for working with CSVs, but I typically will use a command line tool specifically written to deal with CSVs. Writing your own code may be especially helpful for fixing malformed CSV so that it can be read by a different parser.", "I\u2019m sure this is obvious at this point, but in almost all cases, you don\u2019t want to try and write your own CSV parser by simply splitting a file on commas or joining a list of values with a comma. If you\u2019re writing code, almost certainly there exists a CSV parsing library that handles as many of the issues that we\u2019ve discussed as possible. However, in certain circumstances, you may want to look into the details of the CSV parser for your language to understand more thoroughly what exactly it means by \u201cCSV\u201d.", "If your CSV file came from a machine export, look into the documentation for that system to see how it exports CSVs. For example, Excel, MySQL, PostgreSQL, etc all make different decisions in terms of how they format their CSV files. Another proprietary or legacy system you\u2019re working with may make different decisions. See if whatever system you\u2019re working with documents its CSV format. In some cases, it may not.", "Be aware of data types. CSV is not typed, and different systems may have different ways of distinguishing between an integer (1) and a string, (e.g. a ZIP code, 01234). Make sure that your system doesn\u2019t turn string IDs (that could start with zero) into integers. Be aware of the differences between how different systems treat NULL values, and the differences between NULL and an empty string, which may or may not be the same value in a CSV file.", "If you have the decision to use any other open format aside from CSV, you may want to consider using that format over CSV.", "Sometimes issues may be resolved by using a tool like XSV to make all fields quoted in your CSV, or change the delimiter so a system can parser it properly.", "If you continue to struggle to load your CSV into some system and that system can load another format, such as JSON, maybe try converting your CSV to JSON before loading it. JSON is formally specified and may cause fewer issues.", "Check out Data Science at the Command Line for a broader overview of working with data via the command line beyond just CSV files.", "CSV may be frustrating, but be aware that you\u2019re not alone and others have probably encountered similar issues. Make liberal use of Google and StackOverflow if you encounter issues. There are good reasons for CSV to exist \u2014 it\u2019s simple, lightweight, and human-readable, but its apparent simplicity hides a number of common issues. Be prepared to handle these issues when they occur.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Cloud Data Engineer at Cloudbakers. Online at https://www.alexwennerberg.com/ and @alexwennerberg"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F665d0755e28&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----665d0755e28--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----665d0755e28--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@awennerberg?source=post_page-----665d0755e28--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@awennerberg?source=post_page-----665d0755e28--------------------------------", "anchor_text": "Alex Wennerberg"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2c42f72f05e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&user=Alex+Wennerberg&userId=2c42f72f05e0&source=post_page-2c42f72f05e0----665d0755e28---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F665d0755e28&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F665d0755e28&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://www.json.org/", "anchor_text": "JSON"}, {"url": "https://en.wikipedia.org/wiki/Comma-separated_values", "anchor_text": "Wikipedia Entry"}, {"url": "https://en.wikipedia.org/wiki/Comma-separated_values#Specification", "anchor_text": "not standardized"}, {"url": "https://tools.ietf.org/html/rfc4180", "anchor_text": "RFC 4180"}, {"url": "https://answers.microsoft.com/en-us/msoffice/forum/all/why-excel-does-not-support-rfc-4180-standard-for/d0e379b1-ec3e-40d0-ad4f-33b20693c030", "anchor_text": "Microsoft Excel"}, {"url": "https://www.loc.gov/preservation/digital/formats/fdd/fdd000323.shtml#notes", "anchor_text": "Library of Congress"}, {"url": "https://www.sqlservercentral.com/editorials/comedy-limited-with-sql-server", "anchor_text": "SQL Server\u2019s \u201cCSV\u201d format"}, {"url": "https://github.com/BurntSushi/xsv", "anchor_text": "xsv"}, {"url": "https://csvkit.readthedocs.io/en/latest/", "anchor_text": "csvkit"}, {"url": "https://www.sqlite.org/index.html", "anchor_text": "sqlite"}, {"url": "https://www.duckdb.org/", "anchor_text": "DuckDB"}, {"url": "https://www.duckdb.org/docs/current/sql/copy.html", "anchor_text": "read CSVs"}, {"url": "https://pandas.pydata.org/", "anchor_text": "pandas"}, {"url": "https://jupyter.org/", "anchor_text": "Jupyter"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.html", "anchor_text": "different formats"}, {"url": "https://cloud.google.com/bigquery/", "anchor_text": "BigQuery"}, {"url": "https://aws.amazon.com/redshift/", "anchor_text": "Redshift"}, {"url": "https://en.wikipedia.org/wiki/Column-oriented_DBMS", "anchor_text": "columnar database"}, {"url": "https://docs.python.org/3/library/csv.html", "anchor_text": "Python"}, {"url": "https://www.gnu.org/software/gawk/manual/gawk.html", "anchor_text": "awk"}, {"url": "https://www.gnu.org/software/sed/manual/sed.html", "anchor_text": "sed"}, {"url": "https://github.com/jeroenjanssens/data-science-at-the-command-line", "anchor_text": "Data Science at the Command Line"}, {"url": "https://tools.ietf.org/html/rfc4180", "anchor_text": "RFC 4180 \u2014 Common Format and MIME Type for Comma-Separated Values (CSV) Files"}, {"url": "https://www.loc.gov/preservation/digital/formats/fdd/fdd000323.shtml", "anchor_text": "CSV, Comma Separated Values (Library of Congress)"}, {"url": "https://chriswarrick.com/blog/2017/04/07/csv-is-not-a-standard/", "anchor_text": "CSV is not a standard"}, {"url": "https://github.com/csvreader/docs/blob/master/why-the-csv-stdlib-is-broken.md", "anchor_text": "Why the (Ruby) CSV standard library is broken"}, {"url": "https://www.python.org/dev/peps/pep-0305/", "anchor_text": "PEP 305 \u2014 a description of CSV in Python"}, {"url": "https://www.cloudbakers.com/blog/everything-you-didnt-want-to-have-to-know-about-csv", "anchor_text": "https://www.cloudbakers.com"}, {"url": "https://medium.com/tag/data-science?source=post_page-----665d0755e28---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/csv?source=post_page-----665d0755e28---------------csv-----------------", "anchor_text": "Csv"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F665d0755e28&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&user=Alex+Wennerberg&userId=2c42f72f05e0&source=-----665d0755e28---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F665d0755e28&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&user=Alex+Wennerberg&userId=2c42f72f05e0&source=-----665d0755e28---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F665d0755e28&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----665d0755e28--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F665d0755e28&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----665d0755e28---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----665d0755e28--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----665d0755e28--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----665d0755e28--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----665d0755e28--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----665d0755e28--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----665d0755e28--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----665d0755e28--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----665d0755e28--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@awennerberg?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@awennerberg?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Alex Wennerberg"}, {"url": "https://medium.com/@awennerberg/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "7 Followers"}, {"url": "https://www.alexwennerberg.com/", "anchor_text": "https://www.alexwennerberg.com/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2c42f72f05e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&user=Alex+Wennerberg&userId=2c42f72f05e0&source=post_page-2c42f72f05e0--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F2c42f72f05e0%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feverything-you-didnt-want-to-have-to-know-about-csv-665d0755e28&user=Alex+Wennerberg&userId=2c42f72f05e0&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}