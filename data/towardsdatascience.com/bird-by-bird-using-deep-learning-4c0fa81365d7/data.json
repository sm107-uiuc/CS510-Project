{"url": "https://towardsdatascience.com/bird-by-bird-using-deep-learning-4c0fa81365d7", "time": 1683018438.041271, "path": "towardsdatascience.com/bird-by-bird-using-deep-learning-4c0fa81365d7/", "webpage": {"metadata": {"title": "Bird by Bird using Deep Learning. Advancing CNN model for fine-grained\u2026 | by Sofya Lipnitskaya | Towards Data Science", "h1": "Bird by Bird using Deep Learning", "description": "This article demonstrates how deep learning models used for image-related tasks can be advanced in order to address the fine-grained classification problem. For this objective, we will walk through\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.mitpressjournals.org/doi/abs/10.1162/neco.1989.1.4.541", "anchor_text": "[1]", "paragraph_index": 2}, {"url": "http://yann.lecun.com/exdb/publis/pdf/lecun-01a.pdf", "anchor_text": "[2]", "paragraph_index": 2}, {"url": "https://papers.nips.cc/paper/2012/file/c399862d3b9d6b76c8436e924a68c45b-Paper.pdf", "anchor_text": "[3]", "paragraph_index": 3}, {"url": "https://arxiv.org/abs/1512.03385", "anchor_text": "[4]", "paragraph_index": 3}, {"url": "https://authors.library.caltech.edu/27452/1/CUB_200_2011.pdf", "anchor_text": "[5]", "paragraph_index": 6}, {"url": "http://www.vision.caltech.edu/visipedia/CUB-200-2011.html", "anchor_text": "link", "paragraph_index": 8}, {"url": "http://www.vision.caltech.edu/visipedia/papers/CUB_200_2011.pdf,", "anchor_text": "suggest", "paragraph_index": 21}, {"url": "https://arxiv.org/abs/1512.03385,", "anchor_text": "proposed", "paragraph_index": 24}, {"url": "https://en.wikipedia.org/wiki/Vanishing_gradient_problem", "anchor_text": "vanishing gradient problem", "paragraph_index": 24}, {"url": "https://medium.com/@slipnitskaya", "anchor_text": "https://medium.com/@slipnitskaya", "paragraph_index": 50}, {"url": "http://linkedin.com/in/SofyaLipnitskaya", "anchor_text": "http://linkedin.com/in/SofyaLipnitskaya", "paragraph_index": 52}], "all_paragraphs": ["This article demonstrates how deep learning models used for image-related tasks can be advanced in order to address the fine-grained classification problem. For this objective, we will walk through the following two parts. First, you will get familiar with some basic concepts of computer vision and convolutional neural networks, while the second part demonstrates how to apply this knowledge to a real-world problem of bird species classification using PyTorch. Specifically, you will learn how to build your own CNN model \u2013 ResNet-50, \u2013 to further improve its performance using transfer learning, auxiliary task and attention-enhanced architecture, and even a little more.", "Computers perform extremely well when it comes to crunching numbers. Solving tons of equations to get a human to the Moon? No problem. Determine whether a cat or a dog appears in an image? Oops\u2026 The task that is inherently easy for any human being seemed to be impossible for first computers. During the years, algorithms evolved as well as the hardware did (remember the Moor\u2019s law? R.I.P.). The field of computer vision appeared as a trial to solve the task of classifying images using computers. After the long period of development, many sophisticated methods were created. However, all of them suffered from the lack of generalizability: a model built to classify cats vs. dogs couldn\u2019t distinguish, for example, birds.", "In 1989, Yann LeCun and his colleagues had proposed [1], and further developed [2] the concept of convolutional neural network (CNN). The model itself was inspired by a human visual cortex, where a visual neuron is responsible for a small piece of a picture that is visible to an eye \u2013 the neuron\u2019s receptive field. Structurally, it was expressed in the way that a single convolutional neuron (filter) scanned an input image step-by-step, being applied to different parts of the image many times, which refers to a concept of weight sharing (Figure 1).", "Of course, since LeCun\u2019s LeNet-5, the state-of-the-art of CNN models has been developed greatly. The first successful large-scale architecture came out with AlexNet [3] that won the ILSVRC 2012 challenge achieving the top-5 error rate of 15.3%. Later advancements gave many powerful models that were mainly improved throughout the usage of larger and more complex architectures. The thing is, as the network goes deeper (depth is increasing), its performance gets saturated and starts degrading. To address this problem, the residual neural network (ResNet) was developed [4] to effectively direct the input over some layers (also known as skip- or residual connections).", "The core idea of the ResNet architecture is to pass a part of a signal to the end of a convolutional block unprocessed (by just copying values) in order to enlarge gradient flow through the deep layers (Figure 2). Thus, the skip connection guarantees that performance of the model does not decrease but it could increase slightly.", "The next part explains how the discussed theory can be actually applied for solving the real-world problem.", "Bird species recognition is a difficult task challenging the visual abilities for both human experts and computers. One of the interesting datasets related to the fine-grained classification problem is Caltech-UCSD Birds-200-2011 (CUB-200-2011) [5] consisting of 11788 images of birds belonging to 200 species. To address this problem, the goals of the current tutorial will be: (a) to build a CNN model to classify bird images w.r.t. their species and (b) to determine how the prediction accuracy of a baseline model can be boosted using CNNs of different architectures. For that, we will use PyTorch, one of the most popular open-source frameworks for deep learning.", "By the end of this tutorial, you will be able to:", "First, you need to download an archive containing the dataset and store it into the data directory. It can be done manually from the following link, or using the Python code provided in the following GitHub repository:", "Now, let\u2019s import packages that we will use in this tutorial:", "In this tutorial, we plan to pre-train a baseline model using the ImageNet dataset. As pre-trained models usually expect input images to be normalized in the same way, heights and widths should be at least of size 224 x 224 pixels. There might many ways for the image transformation be used to fullfill above specifications, but what might be the optimal one?", "Exploratory data analysis is an essential starting point of any data science project, which lays the foundation for the further analysis. Since we are interested to define the optimal data transformation strategy, we are going to explore bird images to see what useful we can grasp on. Let\u2019s have a look at some bird examples of the sparrow family (Figure 3). Seems like there can be a high similarity among birds related to different species which is really hard to spot. Is that a White-throated or a Lincoln Sparrow? Well, even experts can be confused\u2026", "Just out of interest, we\u2019ll sum up all classes of the Sparrow family to understand how many of them are there in our dataset:", "The code above gives us the value of 21, implying that there are dozen different species can be represented only by a single family. And now we see why CUB-200-2011 is perfectly designed for fine-grained classification. What do we have is the many similar birds potentially related to different classes, and we, actually, plan to deal with that problem here.", "But before getting in a real deep learning, we want to determine an appropriate strategy for data pre-processing. For that, we will analyse the marginal distributions of width sand heights by visualizing box plots for the corresponding observations:", "Indeed, the size of images varies considerably. We also see that heights and widths of the majority images are equal to 375 and 500 pixels, respectively. So, what might be the appropriate transformation strategy for this kind of data?", "CUB-200-2011 dataset contains thousands of images, so it might affect the computational time. To overcome that we first create class DatasetBirds to make data loading and pre-processing easy:", "All pre-trained models expect input images to be normalized in the same way, such as the height and width are at least 224 pixels. As you might noticed from our previous analysis, the size of the data varies considerably, and many images have landscape layout rather than portrait one, and width is commonly close to the maximum value along both dimensions.", "In order to improve the ability of the model to learn bird representation, we\u2019ll use data augmentation. We want to transform images in a such way, so we maintain the aspect ratio. One solution is to scale images uniformly, so that both dimensions are equal to the larger side using the maximum padding strategy. For that, we\u2019ll create a pad function to pad images to 500 pixels:", "Assuming birds to appear at any image part, we make the model able to capture them everywhere by randomly-cropping and flipping images along both axes during the model training. While the images of the test split will be center-cropped before feeding into ResNet-50, as we expect the majority birds to be located at this image part referring to the previous data exploration.", "For that, we are going to crop images by 375 x 375 pixels along both dimensions, as that is the average size of the majority images. We\u2019ll also normalize images by mean [0.485, 0.456, 0.406] and standard deviation [0.229, 0.224, 0.225] to make distribution of pixel values closer to the Gaussian one.", "Then, we\u2019ll organize images of the CUB-200-2011 dataset into three subsets to insure the proper model training and evaluation. As authors of the dataset suggest the way to assemble the training and test subsets, we split our data accordingly. Additionally, the validation split will be defined to further fine-tune the parameters of the model during the model evaluation process. For that, the training subset will be split using stratified sampling technique that ensures that each subset have equally balanced classes of different species.", "We\u2019ll set up parameters for data loading and model training. To leverage computations and be able to proceed large dataset in parallel, we will collate input samples in several mini-batches and also denote how many sub-processes to use to generate them in order to leverage the training process.", "After we\u2019ll create a DataLoader object to yield samples of an each data split:", "We are going to use ResNet-50 model for classification of bird species. ResNet (or Residual Network) is a variant of convolutional neural networks that was proposed as a solution to the vanishing gradient problem of large networks.", "PyTorch provides the ResNet-50 model on torchvision.models, so we will instantiate the respective class and set the argument num_classes to 200 given the dataset of that number of bird species:", "More specifically, the chosen architecture is 50 layers deep and composed of 5 stages, 4 of which with residual blocks and 1 comprise a convolution, batch normalization and ReLU operations.", "Next point is to set the learning rate of our model as well as a schedule to adjust it during the training for the sake of the better performance. Training of the ResNet-50 model will be done using the Adam optimizer with an initial learning rate of 1e-3 and an exponentially decreasing learning rate schedule such as it drops by a factor of gamma at each epoch.", "Finally, we are ready to train and validate our model to recognize and learn the difference between bird species. The cross-entropy loss and accuracy metric will be accumulated per epoch in order to inspect the model performance dynamics. Following all of the training experiments, we test the model using the subset of previously unseen data to assess the overall goodness in bird classification using the accuracy metric.", "Figure 5 depicts the model performance metrics for ResNet-50:", "As we see, the baseline model performs really poor as it overfits. The one of main reasons is the lack of diverse training samples. Just a quick note: CUB-200-2011 dataset has ~30 images per specie. Seems like we are stuck\u2026isn\u2019t it? Actually, there are some ways we can address to overcome these issues.", "Well, we ran into a number of challenges in our previous analysis, so we may start thinking about how we can address these follow-up questions:", "Let\u2019s figure out how we can advance our baseline model in more detail.", "As it was said before, deep neural networks require a lot of training samples. Practitioners have noticed that, in order to train a deep neural network from scratch, the amount of data should grow exponentially with the number of trainable parameters. Luckily, generalization ability of a model that was trained on a larger dataset can be transferred to another, usually, simpler task.", "In order to improve the performance of thebaseline model for bird classification, we will use weight initialization obtained from the general-purpose model pre-trained on the ImageNet dataset, and further fine-tune its parameters using the CUB-200-2011 one. The training process remains the same, while the model will rather focus on the fine-tuning of hyper-parameters.", "PyTorch provides pre-trained models in torch.utils.model_zoo. Construction of a pre-trained ResNet-50 can be done by passing pretrained=True into constructor. This simple trick provides us with the model that already has well initialized filters, so there is no need to learn them from scratch.", "We will also set a lower learning rate of 1e-4 in the optimizer, as we are going to train a network that was yet pre-trained on a large-scale image-classification task. And here are results:", "As we see, the use of the pre-trained model allows to solve the overfitting problem giving 80.77% test accuracy. Let\u2019s continue experimenting on that!", "Now we can extend this approach even more. Why do we have to increase the complexity of a single task if we can add another one? No reason at all. It was noticed that introduction of an additional \u2013 auxiliary \u2013 task improves the network\u2019s performance forcing it to learn more general representation of the training data.", "As Caltech-UCSD Birds-200\u20132011 dataset includes bounding boxes in addition to class labels, we will use this auxiliary target to make the network to train in a multi-task fashion. Now, we will predict 4 coordinates of bird\u2019s bounding box in addition to its specie by setting num_classes to 204:", "Now we need to slightly modify our training and validation blocks, as we want to make predictions and calculate the loss for two targets corresponding to a correct bird specie and its bounding box coordinates. Here\u2019s an example execution:", "Results are even better \u2013 integration of the auxiliary task provides the stable increase of accuracy points giving 81.2% on the test split \u2013 as shown in Figure 7.", "In the last few paragraphs we were focused on the data-driven advancement of our model. However, at some point the complexity of the task can exceed the model\u2019s capacity resulting in a lower performance. In order to adjust the model\u2019s power to the difficulty of the problem, we can equip the network with additional attention blocks that will help it to focus on important parts of the input and ignore irrelevant ones.", "Attention module allows to highlight relevant regions of feature maps and returns values varying in range [0.0, 2.0], where the lower value implies the lower priority of a given pixel for the following layers. So we\u2019ll create and instantiate the class ResNet50Attention corresponding to the attention-enhanced ResNet-50 model:", "After that, we are ready to train and evaluate the performance of the attention-enhanced model pre-trained on the ImageNet dataset and advanced with the multi-task learning for bird classification using the same code we utilized before. Final accuracy score has been increased to 82.4%!", "Figure 8 shows summary results generated during the analysis:", "Results clearly indicate that the final variant of the ResNet-50 model advanced with transfer and multi-task learning, as well as with the attention module, greatly contributes to the more accurate bird predictions.", "Here, we used different approaches to improve the performance of a baseline ResNet-50 for the classification of bird species from CUB-200\u20132011 dataset. What could we learn from that? Here are some take-home messages from our analysis:", "In summary, there is a space for improvements of the model performance. Additional advancements can be achieved by further optimization of model hyper-parameters, the use of a stronger data augmentation, regularization, meta-learning techniques.", "The focus of the next tutorial will be on the interpretability of deep learning models. Interested to keep it on?", "Subscribe and stay updated on more deep learning materials at \u2013 https://medium.com/@slipnitskaya.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "PhD Researcher in Machine Learning and Computational Biology. Author of Deep Learning tutorials and articles. More at: http://linkedin.com/in/SofyaLipnitskaya"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F4c0fa81365d7&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://slipnitskaya.medium.com/?source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": ""}, {"url": "https://slipnitskaya.medium.com/?source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": "Sofya Lipnitskaya"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F96353360997a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&user=Sofya+Lipnitskaya&userId=96353360997a&source=post_page-96353360997a----4c0fa81365d7---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4c0fa81365d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4c0fa81365d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.mitpressjournals.org/doi/abs/10.1162/neco.1989.1.4.541", "anchor_text": "[1]"}, {"url": "http://yann.lecun.com/exdb/publis/pdf/lecun-01a.pdf", "anchor_text": "[2]"}, {"url": "https://papers.nips.cc/paper/2012/file/c399862d3b9d6b76c8436e924a68c45b-Paper.pdf", "anchor_text": "[3]"}, {"url": "https://arxiv.org/abs/1512.03385", "anchor_text": "[4]"}, {"url": "https://authors.library.caltech.edu/27452/1/CUB_200_2011.pdf", "anchor_text": "[5]"}, {"url": "http://www.vision.caltech.edu/visipedia/CUB-200-2011.html", "anchor_text": "link"}, {"url": "https://github.com/slipnitskaya/caltech-birds-advanced-classification", "anchor_text": "slipnitskaya/caltech-birds-advanced-classificationThis repository contains materials accompanying a serie of articles \"Bird by Bird using Deep Learning\" published by\u2026github.com"}, {"url": "https://en.wikipedia.org/wiki/Jack_Sparrow#/media/File:Jack_Sparrow_In_Pirates_of_the_Caribbean-_At_World's_End.JPG", "anchor_text": "Public domain"}, {"url": "http://www.vision.caltech.edu/visipedia/papers/CUB_200_2011.pdf,", "anchor_text": "suggest"}, {"url": "https://arxiv.org/abs/1512.03385,", "anchor_text": "proposed"}, {"url": "https://en.wikipedia.org/wiki/Vanishing_gradient_problem", "anchor_text": "vanishing gradient problem"}, {"url": "https://medium.com/@slipnitskaya", "anchor_text": "https://medium.com/@slipnitskaya"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----4c0fa81365d7---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/tutorial?source=post_page-----4c0fa81365d7---------------tutorial-----------------", "anchor_text": "Tutorial"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----4c0fa81365d7---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/tag/pytorch?source=post_page-----4c0fa81365d7---------------pytorch-----------------", "anchor_text": "Pytorch"}, {"url": "https://medium.com/tag/editors-pick?source=post_page-----4c0fa81365d7---------------editors_pick-----------------", "anchor_text": "Editors Pick"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4c0fa81365d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&user=Sofya+Lipnitskaya&userId=96353360997a&source=-----4c0fa81365d7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4c0fa81365d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&user=Sofya+Lipnitskaya&userId=96353360997a&source=-----4c0fa81365d7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4c0fa81365d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F4c0fa81365d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----4c0fa81365d7---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----4c0fa81365d7--------------------------------", "anchor_text": ""}, {"url": "https://slipnitskaya.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://slipnitskaya.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sofya Lipnitskaya"}, {"url": "https://slipnitskaya.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "58 Followers"}, {"url": "http://linkedin.com/in/SofyaLipnitskaya", "anchor_text": "http://linkedin.com/in/SofyaLipnitskaya"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F96353360997a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&user=Sofya+Lipnitskaya&userId=96353360997a&source=post_page-96353360997a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F96353360997a%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbird-by-bird-using-deep-learning-4c0fa81365d7&user=Sofya+Lipnitskaya&userId=96353360997a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}