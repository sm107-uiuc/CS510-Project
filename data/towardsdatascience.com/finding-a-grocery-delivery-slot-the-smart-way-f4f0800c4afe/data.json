{"url": "https://towardsdatascience.com/finding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe", "time": 1683006562.168294, "path": "towardsdatascience.com/finding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe/", "webpage": {"metadata": {"title": "Finding a grocery delivery slot, the smart way | Towards Data Science", "h1": "Finding a grocery delivery slot, the smart way", "description": "Using Python, Heroku and Twilio to scrape data from a grocery website's API and get a text notification when slots become available."}, "outgoing_paragraph_urls": [{"url": "https://groceries.asda.com/", "anchor_text": "Asda", "paragraph_index": 4}, {"url": "https://groceries.asda.com/checkout/book-slot?tab=deliver&origin=/", "anchor_text": "delivery slot page", "paragraph_index": 4}, {"url": "https://groceries.asda.com/api/v3/slot/view", "anchor_text": "https://groceries.asda.com/api/v3/slot/view", "paragraph_index": 9}, {"url": "https://requests.readthedocs.io/en/master/", "anchor_text": "Requests library", "paragraph_index": 10}, {"url": "https://en.wikipedia.org/wiki/List_of_HTTP_status_codes", "anchor_text": "here", "paragraph_index": 17}, {"url": "https://www.twilio.com/try-twilio", "anchor_text": "sign up", "paragraph_index": 23}, {"url": "https://www.twilio.com/docs", "anchor_text": "https://www.twilio.com/docs", "paragraph_index": 25}, {"url": "https://www.heroku.com/", "anchor_text": "Heroku", "paragraph_index": 28}, {"url": "https://signup.heroku.com/login", "anchor_text": "here", "paragraph_index": 29}, {"url": "https://github.com/emilegill743/grocery-delivery-project", "anchor_text": "here", "paragraph_index": 31}, {"url": "https://elements.heroku.com/addons/scheduler", "anchor_text": "here", "paragraph_index": 34}, {"url": "http://emilegill.com", "anchor_text": "emilegill.com", "paragraph_index": 43}], "all_paragraphs": ["If you haven\u2019t already heard, we are living in unprecedented times\u2026", "And with unprecedented times come novel challenges. One of these being the question of how we can maintain grocery supply chains, with millions now under lockdown measures due to the spread of Covid-19. For those that are vulnerable, in isolation, or unable to physically get to a supermarket, often the only available option is to book a supermarket delivery slot online. However, with an enormous demand for these services, it has become notoriously difficult to find an available slot- leaving many people incessantly logging in to check for slots.", "That got me thinking about- as with an ever-increasing proportion of the problems I face in life- how I could use Python to automate this process for me?", "The first step towards our aim of some form of \u2018automated delivery slot checker\u2019 is to figure out how we can programmatically extract the data that we want from the grocery website.", "After selecting Asda as our grocery website of choice, creating an account, and inputting a delivery postcode, we land on the delivery slot page, shown below.", "Here we can see a neatly laid out table of dates, times and availability of each slot. Unsurprisingly, all slots are currently showing as \u2018Sold Out\u2019. But we now have visibility on the target data we want to acquire with our tool.", "The next step is probably the most important of all. If you\u2019ve ever done any web scraping before, or worked with web development, you\u2019ll be well versed with the DevTools functionality inbuilt into most major browsers. For those that are not, these are a set of tools which allow users to inspect behind the scenes of a webpage and examine the HTML, CSS, Javascript, as well as- crucially for our project- metadata related to network requests being made to and from a server and our webpage. We can access the DevTools tab by right-clicking on our webpage and selecting \u2018Inspect Element\u2019 or typing Ctrl+Shift+I (I\u2019m using Firefox, but a similar procedure will work for Chrome, Internet Explorer etc.).", "With our DevTools window now visible we can start to see what\u2019s going on behind the scenes in our webpage to enable us to see an up-to-date table of slot availability. Navigating to the \u2018Network\u2019 tab of the DevTools window, we now have access to all the network requests being made by our website to get the latest data we can see displayed. Refreshing our webpage will yield a list of requests, one of which must contain the key to figuring out where our slot availability data is coming from.", "This list may initially seem a little confusing as we will have a sea of different requests, gathering everything from the CSS describing the formatting of the webpage to the Javascript determining the functionality of the website. What we are interested in, though, is the data being gathered to be presented on the webpage. Therefore, filtering the requests for only those of type \u2018XHR\u2019 (XMLHttpRequest), allows us to focus only on those requesting data from the server, ignoring those focussed around the styling of the webpage. This still leaves a fair few requests to be inspected; fortunately gambling that our required request will contain the word \u2018slot\u2019 narrows our search to only four remaining requests.", "Clicking on a request and selecting the \u2018Response\u2019 tab reveals the JSON response yielded by the request and hence the data delivered to the webpage. From this, we can very quickly see that the request containing the data we are looking for is a POST request to the URL, https://groceries.asda.com/api/v3/slot/view. Taking a look at the \u2018Params\u2019 tab we can see the JSON data sent by our browser in the POST request and right-clicking and selecting \u2018Copy All\u2019 to copy this JSON data to our clipboard now means that we have everything that we need to explain to Python how to collect our data.", "The Requests library in Python makes it incredibly easy to make HTTP requests programmatically. From our above inspection of the website, we now know: the URL we need to send a request to, the type of request we need to use (POST) and the JSON data we need to send (currently stored in our clipboard).", "In practical terms, this leaves us with the code below:", "All we have done here is pasted out our JSON data from the clipboard and added a simple request, posting this data to our URL using the json argument of the requests.post() method. Our request response object is now stored in the variable r for later use.", "We have also replaced a few of the parameters in our data with variables. The start_date and end_date variables pass a dynamic date range to the API, as we are always going to be interested in looking two weeks ahead from the current date. The strftime method of datetime objects allows us to specify the exact string format that we want our datetime objects to be in, which we can match to the format we inspected in the initial JSON data we copied.", "The parameters stored as os.environ variables are sensitive information that we don\u2019t want to be publicly displayed on GitHub. Later on, we will see how we can securely store these to be deployed in our scripts.", "We now have a fully functioning Python script that we can use to send a request to Asda\u2019s API and store the response object that we receive as a result. Let\u2019s now take a look at this response object and explore how we can parse it to extract the data we\u2019re looking for.", "Our response object r contains all the data/metadata received back from our POST request to Asda\u2019s API. The first thing we should check is whether our request to the server was successful, or whether anything went wrong along the way. To do this we can inspect the status_code attribute of the response object.", "If this doesn\u2019t return 200 then something has gone wrong with the request. In which case, we need to double-check that the URL and data are formatted correctly. The full list of possible HTTP status codes can be found here; but, in general, we will receive a 200 code signifying \u2018OK\u2019 and a 400 or 404 code for \u2018Bad Request\u2019, \u2018Not Found\u2019 respectively.", "Assuming we have received a 200 status code, we are now ready to inspect the data we have received in the response. Since it is quite a common prospect to be receiving data in the form of JSON, requests comes with a built-in JSON decoder.", "Printing the value of r.json to the terminal will quickly reveal that we have received a lot of data back from the server related to slot availability, prices, capacity etc. Since we are primarily interested in slot availability for the purposes of our project, we can loop through this JSON response and fill a dictionary with slots and availabilities.", "We first loop through each slot day in the two-week period which we have asked for, and then within each day to inspect each individual slot, filling our dictionary:", "Now that we have all the data that we need, and a way to programmatically extract it whenever we want, let\u2019s take a look at how we might set up a way to notify our end-user when a delivery slot is found to be available.", "Twilio is a cloud communications platform, offering APIs which enable developers to send and receive text messages and phone calls in their apps and projects. This opens up a whole world of potential for automated SMS notifications, two-factor authentication, building chatbots etc. In our case, we will create a simple text notification system, such that we receive a text detailing any available delivery slots each time our script runs.", "Although Twilio is a paid service, they offer a very generous free trial balance of around \u00a313. This is more than enough to get us started with this project- given that it costs roughly \u00a30.08 to send a text. To get started with Twilio, all we need to do is sign up on their website (no payment details required) and choose a phone number. Once this is complete, Twilio will provide us with an account SID and authentication token for our project.", "Once we are all set up with a Twilio account, we can start using the Python API offered by Twilio. The Twilio module for Python can be installed simply through pip.", "The Twilio API for Python is incredibly simple to get started with and there is plenty of documentation available at https://www.twilio.com/docs. To send a text with our newly acquired phone number all we need is the following:", "Incorporating this into our script to get available delivery slots, we can now check our data for any available slots and, if any exist, send a text to a phone number of our choice with a notification of our choice. This is outlined in the final segment of our script:", "We now have a complete script, enabling us to check for available delivery slots at Asda and, if any are available, receive a notification by text to let us know. The only remaining step in our project is to find a way to have our script run of its own accord on a schedule.", "Heroku is a cloud computing platform, enabling developers to easily deploy apps and projects to the cloud. It\u2019s especially useful when it comes to getting web apps up and running with minimal set-up: making it ideal for personal projects. Here we will use Heroku as a simple way of getting our script to run at scheduled intervals in the cloud.", "You can sign up to get started with Heroku here.", "The first step we need to take is to create a new app to house our project:", "To get our script up and running on the cloud, we need to create a new GitHub repository containing our script. You can find mine here for reference. We also need to create a file named requirements.txt. This will contain all the package dependencies we need to tell Heroku to install before it can successfully run our script.", "We can then connect our app to the GitHub repository we just created for our project. Enabling \u2018automatic deploys\u2019 means that when we push to our master branch, our project will automatically deploy with the latest updates: useful if we want to continue development of our project whilst it is in production.", "As we mentioned earlier, there are several variables in our script that we want to keep hidden. We can do this using the \u2018Config vars\u2019 setting of our Heroku app, a convenient way to store sensitive information in our project which can easily be accessed as environment variables:", "The only step left is to get our script running automatically on a schedule. To do this we will need to install an add on to our app. Heroku scheduler, which can be installed here, allows us to run tasks every 10 minutes, hour, or day.", "Once we have installed Heroku scheduler we can create a new job, which will allow us to choose our schedule frequency and a command that we would like to run. Since slots tend to go quite quickly, a frequency of 10 minutes is probably best for our scheduled job. The run command that we want is simply to run our python script:", "We can now sit back, relax and wait for our text notification to come!", "We have seen, in this project, how powerful Python can be in automating tasks for us. But as we know, \u2018with great power comes great responsibility\u2019.", "Given that the API we have reverse engineered for this project is probably not intended for public usage, we should use it respectfully and keep this in mind. We now theoretically have the power to send many more requests to a server than would be humanly possible using a web interface. Although one would expect a large company to have protective measures in place to block a misbehaving IP address, we shouldn\u2019t push our luck. Sticking to what could, in principle, be performed manually ensures we respect this fair usage.", "Moreover, just because we now effectively have an early warning system for slot availability, doesn\u2019t mean that we should book slots if we don\u2019t need them. The motivation for this project was born out of an acknowledgement of the scarcity of delivery slots and the difficulty that many are facing in finding one. Therefore, we should be only too aware of the hurdle that this puts up for the most vulnerable in society: for which this is not a convenience, but a necessity.", "That said, the skills we have developed in this project open up a world of possibilities for further projects:", "All the source code for this project can be found here:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Engineer @ Skyscanner | emilegill.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff4f0800c4afe&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@emilegill743?source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@emilegill743?source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": "Emile Gill"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F52b1a8846410&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&user=Emile+Gill&userId=52b1a8846410&source=post_page-52b1a8846410----f4f0800c4afe---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff4f0800c4afe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff4f0800c4afe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@nicotitto?utm_source=medium&utm_medium=referral", "anchor_text": "nrd"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://groceries.asda.com/", "anchor_text": "Asda"}, {"url": "https://groceries.asda.com/checkout/book-slot?tab=deliver&origin=/", "anchor_text": "delivery slot page"}, {"url": "https://groceries.asda.com/checkout/book-slot?tab=deliver&origin=/", "anchor_text": "Asda delivery slot page"}, {"url": "https://groceries.asda.com/api/v3/slot/view", "anchor_text": "https://groceries.asda.com/api/v3/slot/view"}, {"url": "https://requests.readthedocs.io/en/master/", "anchor_text": "Requests library"}, {"url": "https://en.wikipedia.org/wiki/List_of_HTTP_status_codes", "anchor_text": "here"}, {"url": "https://unsplash.com/@alexbeware?utm_source=medium&utm_medium=referral", "anchor_text": "Alex Ware"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.twilio.com/try-twilio", "anchor_text": "sign up"}, {"url": "https://www.twilio.com/docs", "anchor_text": "https://www.twilio.com/docs"}, {"url": "https://unsplash.com/@eberhardgross?utm_source=medium&utm_medium=referral", "anchor_text": "eberhard grossgasteiger"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.heroku.com/", "anchor_text": "Heroku"}, {"url": "https://signup.heroku.com/login", "anchor_text": "here"}, {"url": "https://github.com/emilegill743/grocery-delivery-project", "anchor_text": "here"}, {"url": "https://elements.heroku.com/addons/scheduler", "anchor_text": "here"}, {"url": "https://knowyourmeme.com/photos/1466254-spider-mans-presentation", "anchor_text": "knowyourmeme"}, {"url": "https://github.com/emilegill743/grocery-delivery-project", "anchor_text": "emilegill743/grocery-delivery-projectProject to scrape data from a grocery website's API and get a text notification when slots become available. \u2026github.com"}, {"url": "https://medium.com/tag/twilio?source=post_page-----f4f0800c4afe---------------twilio-----------------", "anchor_text": "Twilio"}, {"url": "https://medium.com/tag/heroku?source=post_page-----f4f0800c4afe---------------heroku-----------------", "anchor_text": "Heroku"}, {"url": "https://medium.com/tag/web-scraping?source=post_page-----f4f0800c4afe---------------web_scraping-----------------", "anchor_text": "Web Scraping"}, {"url": "https://medium.com/tag/python?source=post_page-----f4f0800c4afe---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----f4f0800c4afe---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff4f0800c4afe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&user=Emile+Gill&userId=52b1a8846410&source=-----f4f0800c4afe---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff4f0800c4afe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&user=Emile+Gill&userId=52b1a8846410&source=-----f4f0800c4afe---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff4f0800c4afe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff4f0800c4afe&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f4f0800c4afe---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f4f0800c4afe--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@emilegill743?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@emilegill743?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Emile Gill"}, {"url": "https://medium.com/@emilegill743/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "84 Followers"}, {"url": "http://emilegill.com", "anchor_text": "emilegill.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F52b1a8846410&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&user=Emile+Gill&userId=52b1a8846410&source=post_page-52b1a8846410--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd55e0ccbd656&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffinding-a-grocery-delivery-slot-the-smart-way-f4f0800c4afe&newsletterV3=52b1a8846410&newsletterV3Id=d55e0ccbd656&user=Emile+Gill&userId=52b1a8846410&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}