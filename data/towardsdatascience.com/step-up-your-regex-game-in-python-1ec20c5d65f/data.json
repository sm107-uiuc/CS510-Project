{"url": "https://towardsdatascience.com/step-up-your-regex-game-in-python-1ec20c5d65f", "time": 1683009963.783596, "path": "towardsdatascience.com/step-up-your-regex-game-in-python-1ec20c5d65f/", "webpage": {"metadata": {"title": "Step-up Your RegEx Game in Python | by James Briggs | Towards Data Science", "h1": "Step-up Your RegEx Game in Python", "description": "Regular Expressions are essential for any form of text manipulation - but often misused. This article explains the advanced methods available in RegEx."}, "outgoing_paragraph_urls": [{"url": "https://twitter.com/jamescalam", "anchor_text": "Twitter", "paragraph_index": 40}, {"url": "https://www.youtube.com/c/jamesbriggs", "anchor_text": "https://www.youtube.com/c/jamesbriggs", "paragraph_index": 43}], "all_paragraphs": ["Regular Expressions (RegEx) are simply one of the best tools out there. I may be biased, as much of my work is centered in and around Natural Language Process (NLP) \u2014 but with or without NLP I have found myself turning to regex time and time again.", "I\u2019m by no means an expert and there is a lot I don\u2019t know \u2014 but I\u2019ve used regexes regularly for a few years now, so I know them well enough to get by.", "With this article, I\u2019d like to share a few of the regex methods that I believe are a little more advanced but incredibly useful. We\u2019ll include actual code too so that we can properly grasp what is happening. We\u2019ll cover:", "These are some of the most incredibly useful regex methods I have ever used.", "Near the top of this page is my name and in the HTML \u2014 my username. It looks like this:", "Say what we\u2019re interested in doing right now is pulling the username from the HTML of the page, we\u2019ve taken all <a> elements and will identify and extract the username using RegEx.", "We could do something messy, like this:", "But using look-behind and look-ahead assertions, we get much more dynamic, flexible logic like so:", "That right there will extract any username from the <a> element on this (or any article) page. But it looks pretty complicated \u2014 so let\u2019s simplify the problem a little.", "The look-behind assertion tells our regex to assert that any potential match is preceded by the pattern given to the assertion. Let\u2019s compare a regex with and without this assertion:", "Here, we are telling our assertion to assert that 1: precedes hello world.", "Of course, we could match just the first hello world with \"1: hello world\" too, but this will include \"1: \" in our match \u2014 whatever is included within our assertion is not included in the matched output.", "I\u2019m sure that after understanding the look-behind assertion, the behavior of a look-ahead assertion is predictable. Let\u2019s make sure our hello world is followed by a ,:", "Both of the assertions we just covered are positive assertions \u2014 we are asserting that our matched pattern is preceded/succeeded by our assertion pattern.", "Quite often though, we will need to assert that our pattern is not next to another. For this, we use the negative forms of the look-behind and look-ahead assertions \u2014 (?<! ) and (?! ) respectively.", "For this, we will use the Enron email dataset. We have two columns, file and message \u2014 everything we want is in message. If we take a look at the first instance of the message column we find:", "From this data, we would like to extract Message-ID and Date.", "We could write something like this:", "Now, this looks pretty awful and is going to take a long time to run \u2014 it\u2019s also not dynamic at all, what if for some reason a field is missing in the data or Date and From switch position? \u2014 The code would break.", "This is where we use regex, relying heavily on look-ahead and look-behind assertions. Let\u2019s compare code with and without regex:", "On both the Message-ID and Date regexes, we begin with (?<= ) and end with (?= ) \u2014 the positive look-behind and look-ahead assertions respectively. For the example above, we output the following for msg_id and time:", "Again, an incredibly useful feature of RegEx. Modifiers allow us to modify the behavior of our regexes.", "For example, take the single line modifier s \u2014 this will change the behavior of .* from not including new-lines to including them:", "Simply adding this flag changes the regex behavior. There is a whole host of different modifiers, we can even merge them to create more specific and unique behavior. The most common of these modifiers include:", "In Python, we can implement these modifiers in two ways.", "(1) Modifier flags are implemented outside the expression, as additional arguments to the function, they are applied to the whole regex. Adding both the single line and insensitive modifiers would look like this:", "Note that we use the bitwise OR (|) to string multiple modifiers together.", "(2) Inline modifiers use the (? ) syntax within the expression \u2014 where modifier tokens follow the ?. Implementing both the single line and insensitive modifiers simply requires (?si), like so:", "Depending on the language, RegEx can actually support the modification behavior within a subsection of the pattern \u2014 using the inline modifier (? ) to initiate the behavior and (?- ) to turn the modifier off:", "However, this negative inline modifier is not supported in Python and an inline modifier (placed anywhere) will affect the whole pattern \u2014 not just part of it.", "I\u2019ve never come across a problem where this would be useful \u2014 so I don\u2019t think we\u2019re missing out on much here.", "Conditional statements in RegEx are really cool \u2014 albeit maybe a little specific.", "Just like an if else statement in Python, we can integrate the same logic in our regexes. It works by saying;", "Else \u2014 we match pattern B. bye)", "The first part is our capturing group, (hello) \u2014 assigned to (1) because it is the first capturing group in our regex. By adding ? we make this match optional (otherwise, it will only match when true).", "We then ask a question, ?(1) \u2014 meaning did capture group (1) match?", "If it did match \u2014 our regex then attempts to match the first argument in our logic statement, world.", "Alternatively, if capture group (1) did not match \u2014 our regex will attempt to match the second argument in our statement, bye.", "If we then test this in Python we will see the same results:", "That\u2019s it for this article, using these three features in RegEx can make a huge difference to your code when working with text. They\u2019re all features that I simply could not live without.", "I hope you\u2019ve learned something from this article, and will find these features as useful as I do. If you have any suggestions or questions, feel free to reach out via Twitter or in the comments below.", "Interested in learning more RegEx? I wrote this article on parsing Python code using RegEx to build an auto-documentation tool, feel free to give it a go!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Freelance ML engineer learning and writing about everything. I post a lot on YT https://www.youtube.com/c/jamesbriggs"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1ec20c5d65f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://jamescalam.medium.com/?source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": ""}, {"url": "https://jamescalam.medium.com/?source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": "James Briggs"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb9d77a4ca1d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&user=James+Briggs&userId=b9d77a4ca1d1&source=post_page-b9d77a4ca1d1----1ec20c5d65f---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1ec20c5d65f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1ec20c5d65f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@benwhitephotography?utm_source=medium&utm_medium=referral", "anchor_text": "Ben White"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://regex101.com/", "anchor_text": "Regex101"}, {"url": "https://regex101.com/", "anchor_text": "Regex101"}, {"url": "https://regex101.com/", "anchor_text": "Regex101"}, {"url": "https://regex101.com/", "anchor_text": "Regex101"}, {"url": "https://regex101.com/", "anchor_text": "Regex101"}, {"url": "https://regex101.com/", "anchor_text": "Regex101"}, {"url": "https://twitter.com/jamescalam", "anchor_text": "Twitter"}, {"url": "https://towardsdatascience.com/auto-docs-for-python-b545ce372e2d", "anchor_text": "Auto-Docs for PythonDocumenting code is boring, so why waste your time?towardsdatascience.com"}, {"url": "https://medium.com/tag/programming?source=post_page-----1ec20c5d65f---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----1ec20c5d65f---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/technology?source=post_page-----1ec20c5d65f---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/tag/python?source=post_page-----1ec20c5d65f---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----1ec20c5d65f---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1ec20c5d65f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&user=James+Briggs&userId=b9d77a4ca1d1&source=-----1ec20c5d65f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1ec20c5d65f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&user=James+Briggs&userId=b9d77a4ca1d1&source=-----1ec20c5d65f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1ec20c5d65f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F1ec20c5d65f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----1ec20c5d65f---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----1ec20c5d65f--------------------------------", "anchor_text": ""}, {"url": "https://jamescalam.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://jamescalam.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "James Briggs"}, {"url": "https://jamescalam.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "9.6K Followers"}, {"url": "https://www.youtube.com/c/jamesbriggs", "anchor_text": "https://www.youtube.com/c/jamesbriggs"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb9d77a4ca1d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&user=James+Briggs&userId=b9d77a4ca1d1&source=post_page-b9d77a4ca1d1--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F75e31c56d187&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstep-up-your-regex-game-in-python-1ec20c5d65f&newsletterV3=b9d77a4ca1d1&newsletterV3Id=75e31c56d187&user=James+Briggs&userId=b9d77a4ca1d1&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}