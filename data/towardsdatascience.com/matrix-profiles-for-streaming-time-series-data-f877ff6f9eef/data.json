{"url": "https://towardsdatascience.com/matrix-profiles-for-streaming-time-series-data-f877ff6f9eef", "time": 1683009441.3137212, "path": "towardsdatascience.com/matrix-profiles-for-streaming-time-series-data-f877ff6f9eef/", "webpage": {"metadata": {"title": "Part 6: Matrix Profiles for Streaming Time Series Data | by Sean Law | Towards Data Science", "h1": "Part 6: Matrix Profiles for Streaming Time Series Data", "description": "STUMPY is a powerful and scalable Python library for modern time series analysis and, at its core, efficiently computes something called a matrix profile. The goal of this multi-part series is to\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/TDAmeritrade/stumpy", "anchor_text": "STUMPY is a powerful and scalable Python library for modern time series analysis", "paragraph_index": 0}, {"url": "https://stumpy.readthedocs.io/en/latest/", "anchor_text": "STUMPY", "paragraph_index": 0}, {"url": "https://stumpy.readthedocs.io/en/latest/tutorials.html", "anchor_text": "STUMPY documentation", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/the-matrix-profile-e4a679269692", "anchor_text": "The Matrix Profile", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/stumpy-basics-21844a2d2d92", "anchor_text": "STUMPY Basics", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/part-3-time-series-chains-da281450abbf", "anchor_text": "Time Series Chains", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/part-4-semantic-segmentation-b42c3792833d", "anchor_text": "Semantic Segmentation", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/part-5-fast-approximate-matrix-profiles-with-scrump-c6d9c984c560", "anchor_text": "Fast Approximate Matrix Profiles with STUMPY", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/matrix-profiles-for-streaming-time-series-data-f877ff6f9eef", "anchor_text": "Matrix Profiles for Streaming Time Series Data", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/part-7-fast-pattern-searching-with-stumpy-2baf610a8de1", "anchor_text": "Fast Pattern Searching with STUMPY", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/part-8-ab-joins-with-stumpy-af985e12e391", "anchor_text": "AB-Joins with STUMPY", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/time-series-consensus-motifs-8345152bd6ac", "anchor_text": "Time Series Consensus Motifs", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/part-10-discovering-multidimensional-time-series-motifs-45da53b594bb", "anchor_text": "Discovering Multidimensional Time Series Motifs", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/part-11-user-guided-motif-search-d3d317caf9ea", "anchor_text": "User-Guided Motif Search", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/part-12-matrix-profiles-for-machine-learning-2dfd98d7ff3f", "anchor_text": "Matrix Profiles for Machine Learning", "paragraph_index": 2}, {"url": "https://www.cs.ucr.edu/~eamonn/PID4481997_extend_Matrix%20Profile_I.pdf", "anchor_text": "Matrix Profile I", "paragraph_index": 3}, {"url": "https://www.cs.ucr.edu/~eamonn/ten_quadrillion.pdf", "anchor_text": "this paper", "paragraph_index": 3}, {"url": "https://en.wikipedia.org/wiki/Internet_of_things", "anchor_text": "IoT", "paragraph_index": 5}, {"url": "https://www.cs.ucr.edu/~eamonn/PID4481997_extend_Matrix%20Profile_I.pdf", "anchor_text": "Matrix Profile I", "paragraph_index": 28}, {"url": "https://www.cs.ucr.edu/~eamonn/PID4481997_extend_Matrix%20Profile_I.pdf", "anchor_text": "Matrix Profile I", "paragraph_index": 33}, {"url": "https://www.cs.ucr.edu/~eamonn/MP_journal.pdf", "anchor_text": "Time Series Joins, Motifs, Discords and Shapelets: A Unifying View that Exploits the Matrix Profile", "paragraph_index": 33}, {"url": "https://stumpy.readthedocs.io/en/latest/", "anchor_text": "STUMPY Matrix Profile Documentation", "paragraph_index": 33}, {"url": "https://github.com/TDAmeritrade/stumpy", "anchor_text": "STUMPY Matrix Profile Github Code Repository", "paragraph_index": 33}], "all_paragraphs": ["STUMPY is a powerful and scalable Python library for modern time series analysis and, at its core, efficiently computes something called a matrix profile. The goal of this multi-part series is to explain what the matrix profile is and how you can start leveraging STUMPY for all of your modern time series data mining tasks!", "Note: These tutorials were originally featured in the STUMPY documentation.", "Part 1: The Matrix ProfilePart 2: STUMPY BasicsPart 3: Time Series ChainsPart 4: Semantic SegmentationPart 5: Fast Approximate Matrix Profiles with STUMPYPart 6: Matrix Profiles for Streaming Time Series DataPart 7: Fast Pattern Searching with STUMPYPart 8: AB-Joins with STUMPYPart 9: Time Series Consensus MotifsPart 10: Discovering Multidimensional Time Series MotifsPart 11: User-Guided Motif SearchPart 12: Matrix Profiles for Machine Learning", "Now that you have a basic understanding of how to compute a matrix profile, in this short tutorial, we will demonstrate how to incrementally update your matrix profile when you have streaming (on-line) data using the stumpy.stumpi() (\u201cSTUMP Incremental\u201d) function. You can learn more about the details of this approach by reading Section G of the Matrix Profile I paper and Section 4.6 and Table 5 this paper.", "Let\u2019s import the packages that we\u2019ll need to create and analyze a randomly generated time series data set.", "Imagine that we have an IoT sensor that has been collecting data once an hour for the last 14 days. That would mean that we\u2019ve amassed 14 * 24 = 336 data points up until this point and our data set might look like this:", "And, perhaps, we know from experience that an interesting motif or anomaly might be detectable within a 12 hour (sliding) time window:", "To compute the matrix profile using a batch process is straightforward using stumpy.stump():", "But as the length of T grows with each passing hour, it will take increasingly more time to compute the matrix profile since stumpy.stump() will actually re-compute all of the pairwise distances between all subsequences within the time series. This is super time consuming! Instead, for streaming data, we want to find a way to take the new incoming (single) data point and compare the subsequence that it resides in with the rest of the time series (i.e., compute the distance profile) and update the existing matrix profile. Luckily, this can be easily accomplished with stumpy.stumpi() or \u201cSTUMP Incremental\u201d.", "As we wait for the next data point, t, to arrive, we can take our existing data initialize our streaming object:", "And when a new data point, t, arrives:", "We can append t to our stream and easily update the matrix profile, P, and matrix profile indices, I behind the scenes:", "In the background, t has been appended to the existing time series and it automatically compares the new subsequence with all of the existing ones and updates the historical values. It also determines which one of the existing subsequences is the nearest neighbor to the new subsequence and appends this information to the matrix profile. And this can continue on, say, for another 1,000 iterations (or indefinitely) as additional data is streamed in:", "It is important to reiterate that incremental stumpy.stumpi() is different from batch stumpy.stump() in that it does not waste any time re-computing any of the past pairwise distances. stumpy.stumpi() only spends time computing new distances and then updates the appropriate arrays where necessary and, thus, it is really fast!", "Now, this claim of \u201cfast updating\u201d with streaming (on-line) data may feel strange or seem magical so, first, let\u2019s validate that the output from incremental stumpy.stumpi() is the same as performing batch stumpy.stump(). Let\u2019s start with the full time series with 64 data points and compute the full matrix profile:", "Next, for stumpy.stumpi(), we\u2019ll only start with the first 10 elements from the full length time series and then incrementally stream in the additional data points one at a time:", "Now that we\u2019re done, let\u2019s check and validate that:", "There are no errors and they all match! So, this means that stump.stumpi() indeed produces the correct matrix profile results that we\u2019d expect.", "We\u2019ve basically claimed that incrementally updating our matrix profile with stumpy.stumpi() is much faster (in total computational time) than performing a full pairwise distance calculation with stumpy.stump as each new data point arrives. Let\u2019s actually compare the timings by taking a full time series that is 1,000 data points in length and we initialize both approaches with the first 20% of the time series (i.e., the first 200 points) and append a single new data point at each iteration before re-computing the matrix profile:", "Setting aside the fact that having more CPUs will speed up both approaches, we clearly see that incremental stumpy.stumpi() is several orders of magnitude faster than batch stumpy.stump() for processing streaming data. In fact for the current hardware, on average, it is taking roughly half of a second for stumpy.stump() to analyze each new matrix profile. So, if you have a new data point arriving every once every half of a second, then you wouldn\u2019t be able to keep up. In contrast, stumpy.stumpi() should be able to comfortably handle and process ~300+ new data points per second using fairly modest hardware. Additionally, batch stumpy.stump(), which has a computational complexity of O(n^2), will get even slower as more and more data points get appended to the existing time series while stumpy.stumpi(), which is essentially O(1), will continue to be highly performant.", "Now that we understand how to compute and update our matrix profile with streaming data, let\u2019s explore this with a real example data set where there is a known pattern and see if stumpy.stumpi() can correctly identify when the global motif (pattern) is encountered.", "First let\u2019s import some additional Python packages and then retrieve our standard \u201cSteamgen Dataset\u201d:", "This data was generated using fuzzy models applied to mimic a steam generator at the Abbott Power Plant in Champaign, IL. The data feature that we are interested in is the output steam flow telemetry that has units of kg/s and the data is \u201csampled\u201d every three seconds with a total of 9,600 data points.", "The motif (pattern) that we are looking for is highlighted below and yet it is still very hard to be certain that the orange and green subsequences are a match, that is, until we zoom in on them and overlay the subsequences on top each other.", "Now, we can clearly see that the motif is very similar!", "Now, let\u2019s take a look at what happens to the matrix profile when we initialize our stumpy.stumpi() with the first 2,000 data points:", "and then incrementally append a new data point and update our results:", "When we plot the growing time series (upper panel), T_stream, along with the matrix profile (lower panel), P, we can watch how the matrix profile evolves as new data is appended:", "Here, the vertical dotted lines mark the position of where the global motif pair is expected to be and the gray box emphasizes the corresponding motif subsequences. As you play through this animation you may notice that the matrix profile is constantly changing since past subsequences may find a new nearest neighbor. However, note that any change in the matrix profile can only move downward (toward zero). Throughout most of this animation, the subsequence highlighted on the left (grey box) has a relatively high matrix profile value. However, as the time series extends past the grey box on the right, the aforementioned matrix profile value drops significantly and stabilizes quickly as soon as its nearest neighbor has fully arrived in the stream. This is really cool! In fact, the authors of the original Matrix Profile I paper point out that, on this dataset, it would be possible to continue monitoring the matrix profile with stumpy.stumpi() for several decades before running out of time or memory!", "Above, we\u2019ve gone with the typical definition of a matrix profile. That is, for any given subsequence, T[i : i + m], find the distance to its nearest neighbor, T[j : j + m], regardless of whether j is to the left of i (i.e., j < i) or to the right of i (i.e., j > i). This means that as new data comes in, even the matrix profiles for the past historical data points also get updated if a \u201cnew\u201d nearest neighbor has revealed itself. Essentially, this is \u201chindsight\u201d. So, there may be a case where, the first time you see a unique subsequence, you may identify it as an anomaly due to its relatively high matrix profile value. However, as more and more new data arrive, this originally anomalous subsequence may no longer be unique anymore. Consider observing only the first period of a sine wave, all of these subsequence would be unique. But as the next period of the sine wave starts to stream in, we realize that the data points in the first period are no longer anomalous so we update their matrix profile values accordingly.", "Now, this may or may not be beneficial depending on how you choose to define an \u201canomaly\u201d. In fact, you may choose not to update the matrix profiles from the past and you may want to restrict the search for a nearest neighbor, j, to always be to the left of i (i.e., j < i). Luckily, in stumpy.stumpi() this is already done for you and you can access the left matrix profile and the left matrix profile indices via the .left_P and the .left_I attributes, respectively, of your streaming object:", "Of course, it is important to point out that a -1 value in the left matrix profile indices does not correspond to the last subsequence in the time series. Instead, it means that the subsequence in that position has no valid nearest neighbor to its left. Consequently, the corresponding left matrix profile value will be set to np.inf.", "And that\u2019s it! You\u2019ve just learned how to incrementally update your matrix profile for streaming (on-line) data.", "Matrix Profile ITime Series Joins, Motifs, Discords and Shapelets: A Unifying View that Exploits the Matrix Profile (see Section 4.6 and Table 5)STUMPY Matrix Profile DocumentationSTUMPY Matrix Profile Github Code Repository", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Principal Data Scientist at a Fortune 500 FinTech company. PyData Ann Arbor organizer. Creator of STUMPY for modern time series analysis. Twitter: @seanmylaw"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff877ff6f9eef&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://seanmylaw.medium.com/?source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": ""}, {"url": "https://seanmylaw.medium.com/?source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": "Sean Law"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9aa0e35e270e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&user=Sean+Law&userId=9aa0e35e270e&source=post_page-9aa0e35e270e----f877ff6f9eef---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff877ff6f9eef&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff877ff6f9eef&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@jfobranco?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Joao Branco"}, {"url": "https://github.com/TDAmeritrade/stumpy", "anchor_text": "STUMPY is a powerful and scalable Python library for modern time series analysis"}, {"url": "https://stumpy.readthedocs.io/en/latest/", "anchor_text": "STUMPY"}, {"url": "https://stumpy.readthedocs.io/en/latest/tutorials.html", "anchor_text": "STUMPY documentation"}, {"url": "https://towardsdatascience.com/the-matrix-profile-e4a679269692", "anchor_text": "The Matrix Profile"}, {"url": "https://towardsdatascience.com/stumpy-basics-21844a2d2d92", "anchor_text": "STUMPY Basics"}, {"url": "https://towardsdatascience.com/part-3-time-series-chains-da281450abbf", "anchor_text": "Time Series Chains"}, {"url": "https://towardsdatascience.com/part-4-semantic-segmentation-b42c3792833d", "anchor_text": "Semantic Segmentation"}, {"url": "https://towardsdatascience.com/part-5-fast-approximate-matrix-profiles-with-scrump-c6d9c984c560", "anchor_text": "Fast Approximate Matrix Profiles with STUMPY"}, {"url": "https://towardsdatascience.com/matrix-profiles-for-streaming-time-series-data-f877ff6f9eef", "anchor_text": "Matrix Profiles for Streaming Time Series Data"}, {"url": "https://towardsdatascience.com/part-7-fast-pattern-searching-with-stumpy-2baf610a8de1", "anchor_text": "Fast Pattern Searching with STUMPY"}, {"url": "https://towardsdatascience.com/part-8-ab-joins-with-stumpy-af985e12e391", "anchor_text": "AB-Joins with STUMPY"}, {"url": "https://towardsdatascience.com/time-series-consensus-motifs-8345152bd6ac", "anchor_text": "Time Series Consensus Motifs"}, {"url": "https://towardsdatascience.com/part-10-discovering-multidimensional-time-series-motifs-45da53b594bb", "anchor_text": "Discovering Multidimensional Time Series Motifs"}, {"url": "https://towardsdatascience.com/part-11-user-guided-motif-search-d3d317caf9ea", "anchor_text": "User-Guided Motif Search"}, {"url": "https://towardsdatascience.com/part-12-matrix-profiles-for-machine-learning-2dfd98d7ff3f", "anchor_text": "Matrix Profiles for Machine Learning"}, {"url": "https://www.cs.ucr.edu/~eamonn/PID4481997_extend_Matrix%20Profile_I.pdf", "anchor_text": "Matrix Profile I"}, {"url": "https://www.cs.ucr.edu/~eamonn/ten_quadrillion.pdf", "anchor_text": "this paper"}, {"url": "https://en.wikipedia.org/wiki/Internet_of_things", "anchor_text": "IoT"}, {"url": "https://www.cs.ucr.edu/~eamonn/PID4481997_extend_Matrix%20Profile_I.pdf", "anchor_text": "Matrix Profile I"}, {"url": "https://www.cs.ucr.edu/~eamonn/PID4481997_extend_Matrix%20Profile_I.pdf", "anchor_text": "Matrix Profile I"}, {"url": "https://www.cs.ucr.edu/~eamonn/MP_journal.pdf", "anchor_text": "Time Series Joins, Motifs, Discords and Shapelets: A Unifying View that Exploits the Matrix Profile"}, {"url": "https://stumpy.readthedocs.io/en/latest/", "anchor_text": "STUMPY Matrix Profile Documentation"}, {"url": "https://github.com/TDAmeritrade/stumpy", "anchor_text": "STUMPY Matrix Profile Github Code Repository"}, {"url": "https://towardsdatascience.com/part-5-fast-approximate-matrix-profiles-with-scrump-c6d9c984c560", "anchor_text": "Part 5: Fast Approximate Matrix Profiles with STUMPY"}, {"url": "https://towardsdatascience.com/part-7-fast-pattern-searching-with-stumpy-2baf610a8de1", "anchor_text": "Part 7: Fast Pattern Searching with STUMPY"}, {"url": "https://medium.com/tag/python?source=post_page-----f877ff6f9eef---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/stumpy?source=post_page-----f877ff6f9eef---------------stumpy-----------------", "anchor_text": "Stumpy"}, {"url": "https://medium.com/tag/matrix-profile?source=post_page-----f877ff6f9eef---------------matrix_profile-----------------", "anchor_text": "Matrix Profile"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----f877ff6f9eef---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/tag/time-series-analysis?source=post_page-----f877ff6f9eef---------------time_series_analysis-----------------", "anchor_text": "Time Series Analysis"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff877ff6f9eef&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&user=Sean+Law&userId=9aa0e35e270e&source=-----f877ff6f9eef---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff877ff6f9eef&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&user=Sean+Law&userId=9aa0e35e270e&source=-----f877ff6f9eef---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff877ff6f9eef&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff877ff6f9eef&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f877ff6f9eef---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f877ff6f9eef--------------------------------", "anchor_text": ""}, {"url": "https://seanmylaw.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://seanmylaw.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sean Law"}, {"url": "https://seanmylaw.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "266 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9aa0e35e270e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&user=Sean+Law&userId=9aa0e35e270e&source=post_page-9aa0e35e270e--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fb8e4f4c073ee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmatrix-profiles-for-streaming-time-series-data-f877ff6f9eef&newsletterV3=9aa0e35e270e&newsletterV3Id=b8e4f4c073ee&user=Sean+Law&userId=9aa0e35e270e&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}