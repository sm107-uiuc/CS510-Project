{"url": "https://towardsdatascience.com/visualizing-twitter-statistics-with-python-and-pandas-956125b369e5", "time": 1683018219.5335522, "path": "towardsdatascience.com/visualizing-twitter-statistics-with-python-and-pandas-956125b369e5/", "webpage": {"metadata": {"title": "Visualizing Twitter Statistics with Python and Pandas | by Alan Jones | Medium", "h1": "Visualizing Twitter Statistics with Python and Pandas", "description": "If you use Twitter cards or adverts, you can get a very good idea of how people are engaging with your tweets from the official Twitter statistics. But what about your friends, your colleagues\u2026 your\u2026"}, "outgoing_paragraph_urls": [{"url": "https://developer.twitter.com", "anchor_text": "Twitter Developer", "paragraph_index": 2}, {"url": "https://www.blogger.com/#", "anchor_text": "Thonny", "paragraph_index": 4}, {"url": "https://raw.githubusercontent.com/alanjones2/twitterstats/master/twitterstats-anon.py", "anchor_text": "here", "paragraph_index": 19}], "all_paragraphs": ["If you use Twitter cards or adverts, you can get a very good idea of how people are engaging with your tweets from the official Twitter statistics. But what about your friends, your colleagues\u2026 your competitors? Just a little bit of Python code can help.", "Imagine that you are a global news giant and are wondering just how well you are regarded by your audience compared with, say, CNN, or the BBC. One thing you might do is compare the level of engagement of their tweets and compare them to your own. You can\u2019t see the same engagement statistics as for your own account (they are, of course, private) but there are some simple stats that you are able to see. It just takes a little programming and a Twitter Developer account.  I\u2019m going to show you how it is really quite straightforward to monitor the number of retweets and likes that other users have and compare them to your own or others by using the Twitter developer\u2019s API. We\u2019ll also produce some simple statistics and graphs using Pandas.  Don\u2019t worry if you aren\u2019t much of a coder, you can cut and paste the code below, or download a complete program (I\u2019ll link to it at the end of this article).", "This is simply a matter of heading over to the Twitter Developer web site and applying. You have to give a bunch of details about yourself and what you intend to do and, in return, they will give you a set of codes that will let you access their API.  I won\u2019t go into the details, here, because it\u2019s a straightforward procedure and, anyway, sometimes these things change, so it\u2019s better just to follow the instructions from Twitter.", "I tend to use Jupyter Notebooks for this sort of thing because it allows me to quickly prototype applications and it\u2019s easy to use. If you aren\u2019t familiar with Jupyter you might want to take a look at this article:", "However, the code that I\u2019m going to show you should work equally well in a Jupyter Notebook or as a standalone program in a Python editor (Thonny is a good choice if you are a beginner).  The easiest way to access the API is to use a Python library. There are a number of them around and for a simple app like this, any should be OK. I\u2019m going to use the Twitter tools that I installed a while ago. If you don\u2019t have it you can simply install it with pip or conda, e.g.:  pip3 install twitter   Here is the code that you will need to start using the Twitter API:", "We start by importing the library and then setting the four constants that you need to access the API. Clearly, I\u2019ve hidden my own credentials here, so you need to get the codes from your Twitter account and assign them to the appropriate variables. I\u2019m not going into the mechanisms of how to access the API (if you are interested, you can read all about it on the Twitter developer\u2019s web site), just use this as boilerplate code and we\u2019ll get on with the real business of this article.  We just need to know that we have created an object, twitter_api, which is where we will find the methods that we want to use. Just one more thing before getting down to business, we will be using Pandas and Matplotlib, so we need to import them, too.", "There are three different tiers of the Twitter API that each have different functionality and restrictions. We are going to be using the most basic \u2014 and free \u2014 one which allows you to do simple searches but restricts the responses to tweets from the last 7 days. It also returns no more than 100 tweets from a single API call. Here is a simple search:", "The parameters determine what is being searched for (q) and the number of results \u2014 tweets \u2014 to be returned (count). In this case we will get 10 recent tweets that contained the word \u2018CNN\u2019. But for the purposes of monitoring our rivals in breaking world news, we don\u2019t want tweets that mention CNN, we want the tweets from CNN. Luckily, the query, q, can contain a number of different modifiers and what we are particularly interested in here is from. Where the previous search returned tweets from anyone, using from restricts those tweets to a particular account. Take a look at this search:", "Again we are expecting 10 results but rather than specifying a word to look for, we are telling Twitter to return 10 tweets from the user CNN. We can specify any valid Twitter name \u2014 you can try it with your own twitter name or anyone else\u2019s. So let\u2019s try this out. In the code above, we first retrieve 10 tweets from the CNN account. The result that we get back is a dictionary with two elements, statuses and metadata. The metadata gives us information about the search and the statuses part contains an array of the actual tweets that have been returned. We are going to ignore the metadata and concentrate on the tweets that have been returned in statuses. And to help us with getting statistics and plots, we\u2019ll assign these to a Pandas dataframe, like this:", "To see the sort of data that is returned, we can print the column names of the dataframe:", "And we\u2019ll get a result like this:  Index([\u2018created_at\u2019, \u2018id\u2019, \u2018id_str\u2019, \u2018text\u2019, \u2018truncated\u2019, \u2018entities\u2019, \u2018metadata\u2019, \u2018source\u2019, \u2018in_reply_to_status_id\u2019, \u2018in_reply_to_status_id_str\u2019, \u2018in_reply_to_user_id\u2019, \u2018in_reply_to_user_id_str\u2019, \u2018in_reply_to_screen_name\u2019, \u2018user\u2019, \u2018geo\u2019, \u2018coordinates\u2019, \u2018place\u2019, \u2018contributors\u2019, \u2018retweeted_status\u2019, \u2018is_quote_status\u2019, \u2018retweet_count\u2019, \u2018favorite_count\u2019, \u2018favorited\u2019, \u2018retweeted\u2019, \u2018lang\u2019, \u2018possibly_sensitive\u2019], dtype=\u2019object\u2019) You can see that there are a whole lot of items of data that come with each tweet. We won\u2019t worry too much about most of them but a few interesting ones are,  \u2018created_at\u2019: the date and time of the tweet \u2018id\u2019: the id of the user \u2018text\u2019: the actual text of the tweet (possibly truncated) \u2018retweet_count\u2019 : the number of times this tweet has been retweeted \u2018favorite_count\u2019: the number of likes that the tweet has received We can use these fields to retrieve data about each tweet. For example, the following code prints out the number of times a tweet has been liked.", "And gives a result like this: 52194149342718301672471128281 That a list of the number of likes for each of the 10 tweets that we got from our search (note that Python numbers things starting at 0, so the range is 0 to 9, not 1 to 10). We can be a bit more adventurous that a simple list. Here\u2019s how to create a pie chart of the number of retweets of each of the 10 tweets from the same search.", "Here\u2019s something a bit more serious that will help us judge the popularity of CNN\u2019s tweets.", "This code records three bits of data, the length of the dataframe (i.e. the number of tweets), the sum of the favourite_count column (i.e. the total number of likes for all of the tweets) and the sum of the retweet_count column (i.e. the total number of likes for all of the tweets).", "Next we print out that data.", "And then we draw a bar chart of the likes and retweets for each individual tweet. Here\u2019s the result:", "So that\u2019s a summary of the data for the 10 CNN tweets that we searched for. Now if we do the same for our own global news Twitter account, we can see who is the most popular! And here is one way of going about doing this. The code below takes a list of Twitter names, calculates some stats and prints out the bar charts for each name. It\u2019s essentially the same code as above but with each search inside a loop and a few cosmetic changes to label the charts a bit better.", "That\u2019s about it. Simple stuff but fun and useful. And it\u2019s not miles away from you own personalised dashboard. You could use this as the basis of a web app and always have your rivals Twitter data to hand. In fact, here is a link to a very simple web-based dashboard that is based on this code.", "It only does one Twitter user at a time but you can select which one you are interested in using the form at the bottom of the page.", "You can download some code from this article here."], "all_outgoing_urls": [{"url": "https://towardsdatascience.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://me.dm/@alanjones", "anchor_text": "Mastodon"}, {"url": "https://towardsdatascience.com/@alan-jones?source=post_page-----956125b369e5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/@alan-jones?source=post_page-----956125b369e5--------------------------------", "anchor_text": "Alan Jones"}, {"url": "https://developer.twitter.com", "anchor_text": "Twitter Developer"}, {"url": "https://towardsdatascience.com/setting-up-jupyter-notebooks-for-data-visualisation-e287e2688af6", "anchor_text": "Setting Up Jupyter Notebooks for Data VisualisationJupyter Notebooks are a great and fairly simple way to explore data and create visualizations in an interactive\u2026towardsdatascience.com"}, {"url": "https://www.blogger.com/#", "anchor_text": "Thonny"}, {"url": "http://alanjones.pythonanywhere.com/a4at", "anchor_text": "http://alanjones.pythonanywhere.com/a4at"}, {"url": "https://raw.githubusercontent.com/alanjones2/twitterstats/master/twitterstats-anon.py", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/tag/data-analysis?source=post_page-----956125b369e5---------------data_analysis-----------------", "anchor_text": "Data Analysis"}, {"url": "https://towardsdatascience.com/tag/data-visualization?source=post_page-----956125b369e5---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://towardsdatascience.com/tag/twitter?source=post_page-----956125b369e5---------------twitter-----------------", "anchor_text": "Twitter"}, {"url": "https://towardsdatascience.com/tag/python?source=post_page-----956125b369e5---------------python-----------------", "anchor_text": "Python"}, {"url": "https://towardsdatascience.com/tag/hands-on-tutorials?source=post_page-----956125b369e5---------------hands_on_tutorials-----------------", "anchor_text": "Hands On Tutorials"}, {"url": "https://towardsdatascience.com/@alan-jones?source=post_page-----956125b369e5--------------------------------", "anchor_text": "More from Alan Jones"}, {"url": "https://towardsdatascience.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ffc3a6cdb7554&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40alan-jones%2Fvisualizing-twitter-statistics-with-python-and-pandas-956125b369e5&newsletterV3=7d3f5fb94faa&newsletterV3Id=fc3a6cdb7554&user=Alan+Jones&userId=7d3f5fb94faa&source=-----956125b369e5---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----956125b369e5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----956125b369e5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----956125b369e5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----956125b369e5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----956125b369e5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----956125b369e5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----956125b369e5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/plans?source=upgrade_membership---two_column_layout_sidebar----------------------------------", "anchor_text": "Get unlimited access"}, {"url": "https://towardsdatascience.com/@alan-jones?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/@alan-jones?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Alan Jones"}, {"url": "https://towardsdatascience.com/@alan-jones/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2K Followers"}, {"url": "https://towardsdatascience.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ffc3a6cdb7554&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40alan-jones%2Fvisualizing-twitter-statistics-with-python-and-pandas-956125b369e5&newsletterV3=7d3f5fb94faa&newsletterV3Id=fc3a6cdb7554&user=Alan+Jones&userId=7d3f5fb94faa&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://towardsdatascience.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}