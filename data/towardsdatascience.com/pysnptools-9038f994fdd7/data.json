{"url": "https://towardsdatascience.com/pysnptools-9038f994fdd7", "time": 1683015717.6813152, "path": "towardsdatascience.com/pysnptools-9038f994fdd7/", "webpage": {"metadata": {"title": "PySnpTools. Reading and Manipulating Genomic Data\u2026 | by Carl M. Kadie | Towards Data Science", "h1": "PySnpTools", "description": "PySnpTools is a Python library of reading and manipulating genomic data in Python. It allows users to efficiently select and reorder individuals (rows) and SNP locations (columns). It then reads only\u2026"}, "outgoing_paragraph_urls": [{"url": "https://fastlmm.github.io/", "anchor_text": "FaST-LMM", "paragraph_index": 0}, {"url": "https://github.com/fastlmm/PySnpTools", "anchor_text": "https://github.com/fastlmm/PySnpTools", "paragraph_index": 10}, {"url": "http://xarray.pydata.org/", "anchor_text": "xarray", "paragraph_index": 33}, {"url": "https://github.com/fastlmm/PySnpTools", "anchor_text": "https://github.com/fastlmm/PySnpTools", "paragraph_index": 35}], "all_paragraphs": ["PySnpTools is a Python library of reading and manipulating genomic data in Python. It allows users to efficiently select and reorder individuals (rows) and SNP locations (columns). It then reads only the data selected. Originally developed to support FaST-LMM \u2014 a genome-wide-association-study (GWAS) tool \u2014 PySnpTools now supports large-memory and cluster-scale work.", "As we developed the FaST-LMM package (1; 2; 3; 4; 5; 6), we tired of re-writing our code to support more and more file formats ( e.g., PLINK\u2019s Bed, Dat, Pheno, etc.) (7; 8). Moreover, we noticed ourselves repeatedly performing similar manipulations, for example,", "Inspired by NumPy and Pandas, we created PySnpTools, an open-source library that makes these operations easy.", "We presented the first public version of PySnpTools at the PyData 2015 conference in Seattle.", "At the conference, Travis Oliphant (primary creator of NumPy) recommended PySnpTools\u2019 approach to reading and manipulating genomic data (9).", "Not long after the conference, Hilary Finucane (leader of the Finucane Lab at the Broad Institute of MIT and Harvard) wrote us:", "\u201cI\u2019ve been loving PySnpTools and recommending it to other statistical geneticists who work in Python (10)!\u201d", "Since the conference, as FaST-LMM has grown to support datasets of up to 1 million samples (6), we expanded PySnpTools to also simplify:", "Most recently, we\u2019ve used multithreading to make BED reading faster and added support for the BGEN format.", "This article tells how to install PySnpTools and describes the genomic data that PySnpTools focuses on. It then gives examples of core usage. It closes by listing other PySnpTools features and providing a brief comparison to other dataset approaches.", "You can find Jupyter notebooks, full API documentation with examples, and source code at https://github.com/fastlmm/PySnpTools.", "The genomic data of interest to us typically consists of 500,000 to 1.5 million columns \u2014 one column for each SNP or variant (that is a genome location where humans are known to differ). The data includes one row per individual. One thousand to 1,000,000 rows are typical. Values within the initial data might be 0,1,2 or missing (representing the number of minor alleles measured for an individual at a genome location). After standardization, values are 64-bit or 32-bit floats, with missing values represented by NaN (\u201cnot-a-number\u201d).", "Figure 1 shows PySnpTools\u2019 in-memory representation of genomic data. Two strings, called the iid, identify each individual. One string, called the sid, identifies each SNP. A float, called val, tells an individual\u2019s allele count at a SNP. Finally, a triple of floats, called pos, tells the position of each SNP (chromosome number, genetic distance, and base-pair position). For a given location in val, PySnpTools makes it easy to find the corresponding iid, sid, and pos. Moreover, for any iids or sids of interest, PySnpTools makes it easy and efficient to find the corresponding location in val.", "For phenotypic and covariate data ( e.g., age, sex, height, weight, presence of a disease), PySnpTools uses the same representation. For such data, sid tells the name of the feature ( e.g., \u201cheight\u201d) while pos is ignored. The val array, as a float, can also represent binary data via 0.0 and 1.0. We handle categorical data via hot-one encoding.", "PySnpTools calls a Python object that reads genomic data from a file a SnpReader. Here is how to create a SnpReader for the popular Bed file format: We tell it what file to read and how to read it. (This SnpReader, as yet, reads nothing from its file.)", "We can ask a SnpReader for the number of individuals and the number of SNPs. We can also, for example, ask it for the iid of the first individual. We can additionally ask it for the sid of the last SNP. (The Bed SnpReader reads only the small files needed to answer these questions.)", "Next, we can read all the genomic data into memory, creating a new SnpReader called a SnpData. Because a SnpData is a SnpReader, we can again ask for the number of individuals and SNPs.", "A SnpData is a SnpReader that contains an extraval property that other SnpReaders do not. The val property is an (in-memory) NumPy array of the genomic data.", "We can, for example, show the genomic data for the first 7 individuals and first 7 SNPs. We can also find the mean of all the genomic data.", "Alternatively, we can do everything in one line.", "SnpData, the special in-memory SnpReader, is created by any SnpReader\u2019s read() method. We can also create a SnpData from scratch.", "Here we create snpdata1 for three individuals and two SNPs. We use NaN to mark a missing value and then ask for the mean value (ignoring the missing value).", "Suppose we only care about the genomic data for the first 7 individuals and first 7 SNPs. PySnpTools makes it easy to read just the desired data from disk. We use NumPy-like indexing before the read method.", "All NumPy-like fancy indexing is supported: slicing, Booleans, lists of integers, negative integers (11). Additionally, PySnpTools allows fancy indexing on both rows and columns at once.", "Appending indexing to any SnpReader, creates a new SnpReader. Here is an extreme example. It says, \u201ccreate a reader", "As before, only the final, desired data is read from the disk.", "We\u2019ve seen how to manipulate SnpReaders with position-based indexing. What if we instead wish to manipulate SnpReaders by iid (the individuals\u2019 identifier) or sid (the SNPs\u2019 identifier)? This is a more Pandas-like scenario. In that case, we can use the iid_to_index() or sid_to_index() methods.", "This example shows how to read three SNPs of interest, each identified by sid rather than position.", "PySnpTools includes SnpReaders for these common file formats: Bed, Pheno, Dat, Ped, Dense. It also defines these new binary formats: SnpNpz, SnpHdf5, and SnpMemMap. The last is of interest because it uses NumPy\u2019s memory-mapped arrays to offer in-memory-like access to data larger than will fit in memory. PySnpTools also defines a format called DistributedBed that offers random access to data stored compactly across dozens (or hundreds or thousands) of Bed files.", "In addition, PySnpTools includes SnpGen, which could be called a \u201cpseudo-reader\u201d. To any program using SnpGen, it looks like a file reader, but instead of reading data from the disk, it generates random genomic data on the fly. This generation, based on a user-provided seed, is deterministic.", "Beyond reading SNPS, PySnpTools includes a extensive readers and pseudo-readers for kernel data. (Kernel data represents the pair-wise similarity between individuals.)", "If PySnpTools doesn\u2019t support a data format of interest, you have two options. If your data is relatively small, you can just read it with other Python tools and then create an in-memory SnpData (or SnpMemMap) object. If more performance is required, you can write a new SnpReader module for the format. In either case, any programs written to expect a SnpReader will automatically work with the new data format.", "Recently, as we worked to scale FaST-LMM to 1 million samples, we added more functionality to PySnpTools. PySnpTools now includes tools for:", "At PyData 2015, Joshua Bloom compared dataset tools for Data Science (12). Table 1 updates his table with PySnpTools. Fundamentally, much like xarray, PySnpTools decorates 2\u2011D NumPy arrays with immutable, indexed row and column identifiers. This gives us convenience and high efficiency but is more special purpose than other approaches. PySnpTools also delays all copying (and reading) until the read() method is explicitly called, which gives us efficiency and predictability.", "PySnpTools is a Python library for reading and manipulating genomic data. Inspired by NumPy and Pandas, PySnpTools can be thought of as a way to add Pandas-like indexing to genomic data. To install PySnpTools:", "You can find Jupyter notebooks, full API documentation with examples, and source code at https://github.com/fastlmm/PySnpTools.", "Thanks to everyone on the FaST-LMM team, whose use and feedback informed the PySnpTools design. A special thanks to Christoph Lippert, who wrote our original BED reader, and David Heckerman, who encouraged PySnpTools\u2019 development.", "2. An Exhaustive Epistatic SNP Association Analysis on Expanded Wellcome Trust Data. Lippert, C., et al. 2013, Scientific Reports 3, 1099.", "3. Greater power and computational efficiency for kernel-based association testing of sets of genetic variants. Lippert, C, et al. 2014, Bioinformatics 30,22.", "4. Further Improvements to Linear Mixed Models for Genome-Wide Association Studies. Widmer, C., et al. 2015, Scientific Reports, 4 6874.", "5. Linear mixed model for heritability estimation. Heckerman, D. et al. 2016, Proceedings of the National Academy of Sciences 113 (27) .", "8. PLINK: a toolset for whole-genome association and population-based. Purcell, S. et al. 2007, American Journal of Human Genetics, 81.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Ph.D. in CS and Machine Learning. Retired Microsoft & Microsoft Research. Volunteer, open-source projects related to ML, Genomics, Rust, and Python."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F9038f994fdd7&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----9038f994fdd7--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----9038f994fdd7--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@carlmkadie?source=post_page-----9038f994fdd7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@carlmkadie?source=post_page-----9038f994fdd7--------------------------------", "anchor_text": "Carl M. Kadie"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa5e87027005f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&user=Carl+M.+Kadie&userId=a5e87027005f&source=post_page-a5e87027005f----9038f994fdd7---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9038f994fdd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9038f994fdd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@nci?utm_source=medium&utm_medium=referral", "anchor_text": "National Cancer Institute"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://fastlmm.github.io/", "anchor_text": "FaST-LMM"}, {"url": "https://nbviewer.org/github/fastlmm/PySnpTools/blob/master/doc/ipynb/paper.ipynb", "anchor_text": "this notebook"}, {"url": "https://github.com/fastlmm/PySnpTools", "anchor_text": "https://github.com/fastlmm/PySnpTools"}, {"url": "http://xarray.pydata.org/", "anchor_text": "xarray"}, {"url": "https://github.com/fastlmm/PySnpTools", "anchor_text": "https://github.com/fastlmm/PySnpTools"}, {"url": "http://zzz.bwh.harvard.edu/plink/.", "anchor_text": "http://zzz.bwh.harvard.edu/plink/."}, {"url": "https://docs.scipy.org/doc/numpy/reference/arrays.indexing.html.", "anchor_text": "https://docs.scipy.org/doc/numpy/reference/arrays.indexing.html."}, {"url": "https://medium.com/tag/data-science?source=post_page-----9038f994fdd7---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/genomics?source=post_page-----9038f994fdd7---------------genomics-----------------", "anchor_text": "Genomics"}, {"url": "https://medium.com/tag/python?source=post_page-----9038f994fdd7---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/dna?source=post_page-----9038f994fdd7---------------dna-----------------", "anchor_text": "Dna"}, {"url": "https://medium.com/tag/numpy?source=post_page-----9038f994fdd7---------------numpy-----------------", "anchor_text": "Numpy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9038f994fdd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&user=Carl+M.+Kadie&userId=a5e87027005f&source=-----9038f994fdd7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9038f994fdd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&user=Carl+M.+Kadie&userId=a5e87027005f&source=-----9038f994fdd7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9038f994fdd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----9038f994fdd7--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F9038f994fdd7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----9038f994fdd7---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----9038f994fdd7--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----9038f994fdd7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----9038f994fdd7--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----9038f994fdd7--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----9038f994fdd7--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----9038f994fdd7--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----9038f994fdd7--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----9038f994fdd7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@carlmkadie?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@carlmkadie?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Carl M. Kadie"}, {"url": "https://medium.com/@carlmkadie/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "277 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa5e87027005f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&user=Carl+M.+Kadie&userId=a5e87027005f&source=post_page-a5e87027005f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd9d0c3a2db0e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpysnptools-9038f994fdd7&newsletterV3=a5e87027005f&newsletterV3Id=d9d0c3a2db0e&user=Carl+M.+Kadie&userId=a5e87027005f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}