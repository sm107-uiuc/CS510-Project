{"url": "https://towardsdatascience.com/cat-dog-or-elon-musk-145658489730", "time": 1683000737.8891299, "path": "towardsdatascience.com/cat-dog-or-elon-musk-145658489730/", "webpage": {"metadata": {"title": "Cat, Dog, or Elon Musk?. Learn how to build your image\u2026 | by Fabian Bosler | Towards Data Science", "h1": "Cat, Dog, or Elon Musk?", "description": "Learn how to build your image recognizing convolutional neural network with Python and Keras in less than 15minutes! The ultimate machine learning beginners guide."}, "outgoing_paragraph_urls": [{"url": "https://www.tensorflow.org/", "anchor_text": "TensorFlow", "paragraph_index": 5}, {"url": "https://keras.io/", "anchor_text": "Keras", "paragraph_index": 5}, {"url": "https://ai.googleblog.com/2017/06/mobilenets-open-source-models-for.html", "anchor_text": "MobileNet", "paragraph_index": 9}, {"url": "https://arxiv.org/abs/1704.04861", "anchor_text": "here", "paragraph_index": 9}, {"url": "https://ai.googleblog.com/2018/04/mobilenetv2-next-generation-of-on.html", "anchor_text": "MobileNetV2", "paragraph_index": 9}, {"url": "http://www.image-net.org/", "anchor_text": "magenet", "paragraph_index": 10}, {"url": "http://wordnet.princeton.edu/", "anchor_text": "WordNet", "paragraph_index": 10}, {"url": "http://image-net.org/challenges/LSVRC/", "anchor_text": "ILSVRC", "paragraph_index": 10}, {"url": "http://image-net.org/challenges/LSVRC/", "anchor_text": "ILSVRC", "paragraph_index": 16}, {"url": "https://keras.io/applications/#mobilenet", "anchor_text": "documentation", "paragraph_index": 25}, {"url": "https://keras.io/optimizers/#adam", "anchor_text": "Adam", "paragraph_index": 31}, {"url": "https://keras.io/losses/", "anchor_text": "categorial_crossentropy", "paragraph_index": 31}, {"url": "https://twitter.com/boslerfabian", "anchor_text": "Twitter", "paragraph_index": 42}, {"url": "https://www.linkedin.com/in/fbosler/", "anchor_text": "LinkedIn", "paragraph_index": 43}, {"url": "https://medium.com/@fabianbosler/membership", "anchor_text": "https://medium.com/@fabianbosler/membership", "paragraph_index": 47}], "all_paragraphs": ["Getting started with machine learning is daunting. The underlying concepts are advanced, and the associated terminology is domain-specific and technical. In addition to that, machine learning happens to be one of the most rapidly developing areas of research and practical implementations out there, making it even harder to stay up to date.", "This article gives you an easy (and code-along) intro to setting up, training, and running a convolutional neural network to classify images. By the end of the article, you will have built a convolutional neural network that can differentiate between cats, dogs, and Elon Musk. It is super easy to adopt, such that you can add a tree or car to the mix if you like.I urge you to go through the steps yourself, as doing so will yield by far the best results in terms of memorization and satisfaction.", "As technology advances, it reverses the characteristics of every situation again and again. The age of automation is going to be the age of \u2018do it yourself.\u2019 \u2014 Marshall McLuhan", "Word of caution: For shortness\u2019 sake, I will skip and sometimes oversimply topics. The goal is to get you going and not to replace a formal computer science class on machine learning.", "A Python environment (I suggest Jupyter Notebook). If you haven\u2019t set this up, don\u2019t worry. It is effortless and takes less than 10 minutes.", "We will be using TensorFlow and Keras. TensorFlow, created by the Google Brain team, is an open-source library for numerical computation and large-scale machine learning. Keras is a high-level neural network API that sits on top of TensorFlow. Keras has recently been integrated into TensorFlow and can be accessed through tensorflow.keras. So let's install TensorFlow.", "I suggest running the notebook in a dedicated Python (virtual) environment to prevent potential conflicts with other projects that you might have. Virtual environments will be more relevant as you progress in your career. You are going to have projects that you occasionally come back to. For those projects, you might have used a particular version of a specific library that you want to keep using instead of refactoring your entire old code to work with a newer version.", "To train a machine learning network, you need data. Since we are building an image classifier, we will need images. You need to download at least a couple of hundreds of images per class that you want to predict. Fortunately enough, I have been planning ahead and prepared a guide for you to download pictures quickly.", "For the provided Jupyter Notebook to work flawlessly, your folder structure should look like this, and every folder should contain roughly 200\u2013300 images. The names and sizes of the pictures don\u2019t matter.", "We are going to use MobileNet as a base model. MobileNet is a lightweight convolutional neural network developed by Google and has been trained on Imagenet. You can find the original paper here. Google has recently released a new version of MobileNet, MobileNetV2.", "Imagenet is a ~15 million extensive labeled image database organized according to the WordNet hierarchy (currently only the nouns). Hundreds and thousands of images depict each node of the hierarchy. Imagenet is often used to train image recognition models. The quality of the models is typically evaluated by how well they perform on ILSVRC (ImageNet Large Scale Visual Recognition Challenge). The ILSVRC is very good because it guarantees a common baseline and gives some measure of comparability between models.", "To best explain transfer learning, let\u2019s take a quick look at the typical architecture of a convolutional network.", "The lower layer (levels of the network closer to the input) in a typical convolution neural network can be thought of as filters scanning the entire image, piece by piece. The results of those scans are then combined to create nodes with single values each.", "In the classification part of the network, we use the last long list of single values nodes generated by the feature extraction part to map them to our desired output. I.e., if our output is some monetary value, then we will probably only have only one final node, indicating that value (regression). If we were to try to classify multiple objects, we would need as many last nodes as we have classes.", "It helps to think about the neural network as one large function. It has an input (an image) and an output (a prediction).During the training of the network, the optimizer continuously optimizes this function. Optimizing the network means to change the weights of the connections between the nodes of the net. The optimization is based on a loss function. This loss function is, in essence, a function that assigns a loss value to the result of the function for every input by comparing the prediction against the actual result. A higher loss value is bad, and the optimizer understands that the most recent changes were not a good idea and will try something else.", "Transfer learning can only be applied to previously trained models. Typically those models would have been trained on large GPUs running for days to find the optimal weights to generate as good predictions as possible.", "While the above image depicts the architecture of the VGG16 model and not the MobileNet network, it is similar enough to illustrate the point. The input image has three channels (red, green, and blue). The image then goes through a whole lot of transformations, filtering, pooling, convoluting, and whatnot to finally end up in a layer with 1000 result values (the categories of ILSVRC).", "When using transfer learning, we essentially say:", "\u201cscrew your results, but thanks for the work\u201d", "In other words, we will cut off the very last part of the network (in the above example, the 1x1000 layer) and replace it with a layer that fits our needs better (for the cat, dog, or Elon problem a 1x3 layer). In essence, we retain all the work that has been done on finding the optimal weights for the feature extraction part of the network, while at the same time swapping out the last part of the network for our custom classification layers. And while not perfect, this approach yields insanely good results, with a fraction of the training time required. The imperfection stems from the fact that your model might have learned, among other things, to identify furlike surfaces. Identifying furlike surfaces might not help when you want to differentiate different kinds of trees. However, being able to locate primitive shapes and patterns \u2014 which is learned in the lower part of the network \u2014 is very helpful for differentiating trees.", "Two helper functions that we will need later.", "Let\u2019s first load the default model to understand what exactly is happening later when we apply transfer learning.", "Running the previous snippet will yield a long list of all the layers in the model from the lowest layer (InputLayer)to the highest layer (here called act_softmax).", "We can see that the last layer has an output shape of (None, 1000), which means that it will produce 1000 values. Let\u2019s quickly verify by running:", "This command will create a Numpy array with 1000 values.", "The main difference in how we load the model is that we now use the parameter include_top=False. When using this parameter, we also have to specify the input_shape and pooling, as can be read in the documentation. By specifying include_top=False we instantiate the model without the highest layer (i.e., the prediction of the 1000 classes).", "We can now clearly see that the topmost layer of the model is a global_average_pooling and not the softmax layer we had previously seen. Also, the total number of params has gone down significantly. To confirm the new resulting values, we can run model.predict(dog).shape to see that we will now get 1024 instead of 1000 values. Inspecting those also shows that they are quite different from the previous predictions. The difference is because no classification has yet taken place, and those 1024 valued indicate the presence of some abstract features.", "To predict cats and dogs and Elon Musk, we have to replace the prediction layers from the original model. To do so, we add three new layers:", "Running model.summary() again will show the new layers at the very top of the model.", "This is starting to get exciting! We are almost there.", "If we were to start from scratch, we would now train the entire net and the millions of parameters that come with it. But luckily enough, we don\u2019t have to do that. All the lower layers have been previously trained! So let\u2019s make sure that only to train the new layers. For a production model, you would typically also train the lower layers after an initial burn-in period, where you only train your new layers.", "Let\u2019s configure our model for training by running model.compile with an optimizer and a loss function. There are loads of different optimizers and loss functions out there, but Adam and categorial_crossentropy are good defaults. Read up on them if you are curious, but don\u2019t get lost in the jungle.", "Almost there, we have to specify the training and validation data, and we are good to go!", "We build a data generator datagen first and specify a couple of parameters to define the augmentations that we want to apply to our images during the training process. We also specify a save_to_dir folder for training and validation and guarantee their existence beforehand. Doing so will allow us to inspect the augmented pictures created during the training process. If you don\u2019t want that, remove the line.", "Alright, time to train the model! We use fit_generator because we have previously created two generators, one for the training data and one for the validation data. We also use a callback to indicate the progress of our training visually.", "Running this means, we have to wait a little bit. On my MacBook Pro, it\u2019s about 10 minutes. Your mileage might vary depending on your hardware. If you want to go through the motions, you could also set epochs=1, which is much faster.", "During training you should see something like this:", "After training has finished, we can inspect the progress by running:", "Cool, we have successfully trained the model! Let\u2019s see how well it performs on predicting images. Let\u2019s load a random cat, dog, and Elon Musk image.", "To inspect the images run (in an individual cell each):", "For the actual prediction, we then get:", "Nice try there with the disguise Elon, but our model sees right through that!", "Follow me on Twitter where you can meet my lovely bot spamming you with the latest and greatest and certainly random content. I\u2019ll probably write an article about that sometime soon.", "On a more serious note, please connect on LinkedIn if you want to have a chat!", "Check out the other articles I wrote on Medium and leave a clap or two if you liked the article.", "Keep learning, exploring, building and just doing it yourself!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "EX-Consultant turned tech geek! Business intelligence, marketing, advanced analytics, and machine learning. \ud83d\udc49 https://medium.com/@fabianbosler/membership \ud83d\udc48"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F145658489730&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----145658489730--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----145658489730--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@fabianbosler?source=post_page-----145658489730--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@fabianbosler?source=post_page-----145658489730--------------------------------", "anchor_text": "Fabian Bosler"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1a2df7c24f4f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&user=Fabian+Bosler&userId=1a2df7c24f4f&source=post_page-1a2df7c24f4f----145658489730---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F145658489730&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F145658489730&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@dylan_nolte?utm_source=medium&utm_medium=referral", "anchor_text": "dylan nolte"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://towardsdatascience.com/get-started-with-python-e50dc8c96589", "anchor_text": "So you want to be a Data Scientist?What the *&%$ is stopping you? Here is how to get started!towardsdatascience.com"}, {"url": "https://www.tensorflow.org/", "anchor_text": "TensorFlow"}, {"url": "https://keras.io/", "anchor_text": "Keras"}, {"url": "https://towardsdatascience.com/image-scraping-with-python-a96feda8af2d", "anchor_text": "Image Scraping with PythonA code-along guide to learn how to download images from Google with Python!towardsdatascience.com"}, {"url": "https://unsplash.com/@dulgier?utm_source=medium&utm_medium=referral", "anchor_text": "Anastasia Dulgier"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://ai.googleblog.com/2017/06/mobilenets-open-source-models-for.html", "anchor_text": "MobileNet"}, {"url": "https://arxiv.org/abs/1704.04861", "anchor_text": "here"}, {"url": "https://ai.googleblog.com/2018/04/mobilenetv2-next-generation-of-on.html", "anchor_text": "MobileNetV2"}, {"url": "http://www.image-net.org/", "anchor_text": "magenet"}, {"url": "http://wordnet.princeton.edu/", "anchor_text": "WordNet"}, {"url": "http://image-net.org/challenges/LSVRC/", "anchor_text": "ILSVRC"}, {"url": "https://unsplash.com/@jonathanborba?utm_source=medium&utm_medium=referral", "anchor_text": "Jonathan Borba"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "http://image-net.org/challenges/LSVRC/", "anchor_text": "ILSVRC"}, {"url": "https://unsplash.com/@aahubs?utm_source=medium&utm_medium=referral", "anchor_text": "Aaron Huber"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://keras.io/applications/#mobilenet", "anchor_text": "documentation"}, {"url": "https://unsplash.com/@joshriemer?utm_source=medium&utm_medium=referral", "anchor_text": "Josh Riemer"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://keras.io/optimizers/#adam", "anchor_text": "Adam"}, {"url": "https://keras.io/losses/", "anchor_text": "categorial_crossentropy"}, {"url": "https://unsplash.com/@jentheodore?utm_source=medium&utm_medium=referral", "anchor_text": "Jen Theodore"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://twitter.com/boslerfabian", "anchor_text": "Twitter"}, {"url": "https://www.linkedin.com/in/fbosler/", "anchor_text": "LinkedIn"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----145658489730---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/python?source=post_page-----145658489730---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----145658489730---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----145658489730---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/programming?source=post_page-----145658489730---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F145658489730&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&user=Fabian+Bosler&userId=1a2df7c24f4f&source=-----145658489730---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F145658489730&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&user=Fabian+Bosler&userId=1a2df7c24f4f&source=-----145658489730---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F145658489730&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----145658489730--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F145658489730&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----145658489730---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----145658489730--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----145658489730--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----145658489730--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----145658489730--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----145658489730--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----145658489730--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----145658489730--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----145658489730--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@fabianbosler?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@fabianbosler?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Fabian Bosler"}, {"url": "https://medium.com/@fabianbosler/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2.3K Followers"}, {"url": "https://medium.com/@fabianbosler/membership", "anchor_text": "https://medium.com/@fabianbosler/membership"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1a2df7c24f4f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&user=Fabian+Bosler&userId=1a2df7c24f4f&source=post_page-1a2df7c24f4f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F85b3b5e26759&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcat-dog-or-elon-musk-145658489730&newsletterV3=1a2df7c24f4f&newsletterV3Id=85b3b5e26759&user=Fabian+Bosler&userId=1a2df7c24f4f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}