{"url": "https://towardsdatascience.com/one-class-neural-network-in-keras-249ff56201c0", "time": 1683015896.435126, "path": "towardsdatascience.com/one-class-neural-network-in-keras-249ff56201c0/", "webpage": {"metadata": {"title": "One-Class Neural Network in Keras | by Marco Cerliani | Towards Data Science", "h1": "One-Class Neural Network in Keras", "description": "Unsupervised learning, applied in one-class classification, aims to discover rules to separate normal and abnormal data in the absence of labels. One-Class SVM (OC-SVM) is a common unsupervised\u2026"}, "outgoing_paragraph_urls": [{"url": "https://arxiv.org/pdf/1901.08688.pdf", "anchor_text": "here", "paragraph_index": 2}], "all_paragraphs": ["Unsupervised learning, applied in one-class classification, aims to discover rules to separate normal and abnormal data in the absence of labels. One-Class SVM (OC-SVM) is a common unsupervised approach to detect outliers. It considers all the data points as positively labeled instances and builds around them a smooth boundary to detect \u2018strange\u2019 samples.", "Recently, various approaches based on feature extraction models appear to be a valid instrument to use with OC-SVM. Following the amazing success of deep neural networks as feature extractors, different methods that exploit feature extraction, using deep-learning, and OC-SVM were introduced as multi-step one-class procedures.", "In this post, we present a One-Class Convolutional Neural Network architecture (as introduced here) that merges the power of deep networks to extract meaningful data representations along with the one-class objective, all in one-step.", "The structure of the proposed architecture is composed of two parts: a feature extractor and a multi-layer perceptron. A fundamental aspect of this approach is that any pre-trained deep-learning model can be used as the base network for feature extraction. The most common choices regard the adoption of standard network modules for feature extraction, for example, VGG, ResNet, or Inception can be good alternatives for this specific task. There are no fixed rules regarding the points where to cut the network in order to produce a meaningful feature representation. The multilayer perceptron part is located at the end, it receives the embedded representations and tries to classify them into 0 or 1. Here, 1 means that the input sample belongs to the real target class while 0 means that the input sample belongs to the noisy class. As before, the choice of a structure for this part is not fixed. It can be manipulated and tuned in order to achieve better performances.", "Between the feature extractor module and the final multilayer perceptron network happens the magic. Exactly there we can find the core idea of the whole procedure, which permits us to join the feature extraction with the classification, all in one step and having at disposal only one set of label. The embedded data samples are \u2018corrupted\u2019 adding some zero-centered gaussian noise. These modified samples are then concatenated batch-wise with their original couples. The result of this approach is that we have a duplicated batch of images formed by original samples (class 1) and corrupted ones (class 0). Our aim is that our classification layers can understand this difference and discriminate real images from all the rest.", "We try to replicate the above workflow using the versatility of Tensorflow and Keras. First of all, we need a one-class classification problem. All classification tasks can be seen as a one-class problem. We can simply select a label of our interest and train a model to recognize it versus the rest, and this is exactly what we do.", "The cat-vs-dog task can sound good. This is because we can exploit the power of transfer learning using some standard and pre-trained deep-learning models.", "We start choosing a label of our interest, let\u2019s say \u2018cats\u2019. We take all and only the images of cats in our train data. The dogs are retrieved during test time. At cats, we assign the label 1. The label 0 is automatically created during training and consists of some random gaussian images. The original batch input of only cats is so duplicated and is now formed by labeled data and random signals. The real images are feed inside the feature extractor network. In our case, it consists of a pre-trained VGG. The VGG creates a meaningful embedded representation of our real images that are concatenated back with the random images. At this point, they pass inside a multilayer perceptron neural network in which weights are trainable. At the end, we have at disposal a full architecture that can recognize cats and that is trained only on cats! The inference of the model can be computed as always. We deactivate the part of the network responsible to produce random embedding representation and maintain only the feature extractor and the multilayer perceptron. We test the procedure passing to the network cats\u2019 and dogs\u2019 images. If successful, dogs must be classified as noise (equivalent to the label 0).", "To get reliable results, the fitting procedure must be applied to all the classes at our disposal. In our example, we fit a model only with \u2018cats\u2019 and then we fit a model only with \u2018dogs\u2019. The total performance is obtained as an average of all the single tasks\u2019 performances. We obtain a final accuracy of around 85% which is very good for a one-class learning procedure!", "In this post, we introduced an architecture for training end-to-end on a one-class classification task. This approach is applicable in every field leveraging pre-trained transfer learning representations. It can be also a good resource to apply in every scenario where retrieving labeled data can be cost-intensive.", "One-Class Convolutional Neural Network. Poojan Oza, Student Member, IEEE, and Vishal M. Patel, Senior Member, IEEE", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F249ff56201c0&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----249ff56201c0--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----249ff56201c0--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@cerlymarco?source=post_page-----249ff56201c0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@cerlymarco?source=post_page-----249ff56201c0--------------------------------", "anchor_text": "Marco Cerliani"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc843902314c7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&user=Marco+Cerliani&userId=c843902314c7&source=post_page-c843902314c7----249ff56201c0---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F249ff56201c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F249ff56201c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@frostroomhead?utm_source=medium&utm_medium=referral", "anchor_text": "Rodion Kutsaev"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://arxiv.org/pdf/1901.08688.pdf", "anchor_text": "here"}, {"url": "https://arxiv.org/pdf/1901.08688.pdf", "anchor_text": "HERE"}, {"url": "http://kaggle.com/tongpython/cat-and-dog", "anchor_text": "data"}, {"url": "https://github.com/cerlymarco/MEDIUM_NoteBook", "anchor_text": "CHECK MY GITHUB REPO"}, {"url": "https://www.linkedin.com/in/marco-cerliani-b0bba714b/", "anchor_text": "Linkedin"}, {"url": "https://medium.com/tag/data-science?source=post_page-----249ff56201c0---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----249ff56201c0---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----249ff56201c0---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/tag/one-class-learning?source=post_page-----249ff56201c0---------------one_class_learning-----------------", "anchor_text": "One Class Learning"}, {"url": "https://medium.com/tag/editors-pick?source=post_page-----249ff56201c0---------------editors_pick-----------------", "anchor_text": "Editors Pick"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F249ff56201c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&user=Marco+Cerliani&userId=c843902314c7&source=-----249ff56201c0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F249ff56201c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&user=Marco+Cerliani&userId=c843902314c7&source=-----249ff56201c0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F249ff56201c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----249ff56201c0--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F249ff56201c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----249ff56201c0---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----249ff56201c0--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----249ff56201c0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----249ff56201c0--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----249ff56201c0--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----249ff56201c0--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----249ff56201c0--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----249ff56201c0--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----249ff56201c0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@cerlymarco?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@cerlymarco?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Marco Cerliani"}, {"url": "https://medium.com/@cerlymarco/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "6K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc843902314c7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&user=Marco+Cerliani&userId=c843902314c7&source=post_page-c843902314c7--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe2412974851a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fone-class-neural-network-in-keras-249ff56201c0&newsletterV3=c843902314c7&newsletterV3Id=e2412974851a&user=Marco+Cerliani&userId=c843902314c7&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}