{"url": "https://towardsdatascience.com/get-started-with-graph-theory-2b4460eeafc", "time": 1683006439.626517, "path": "towardsdatascience.com/get-started-with-graph-theory-2b4460eeafc/", "webpage": {"metadata": {"title": "Get started with Graph Theory. A Brief Introduction | by Kelvin Jose | Towards Data Science", "h1": "Get started with Graph Theory", "description": "Graph Theory, in essence, is the study of properties and applications of graphs or networks. As I mentioned above, this is a huge topic and the goal of this series is to gain an understanding of how\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/@kelvinjose/graph-theory-go-hero-1b5917da4fc1", "anchor_text": "Graph Theory: Go Hero", "paragraph_index": 0}], "all_paragraphs": ["This is the first post of my brand new series Graph Theory: Go Hero. Check out the index page for the navigation to the next posts of this series. It\u2019s always well maintained and up-to date.", "Graph Theory, in essence, is the study of properties and applications of graphs or networks. As I mentioned above, this is a huge topic and the goal of this series is to gain an understanding of how to apply graph theory to solve real world problems. If we look out the premise we live, we could see a number of problems popping out which in turn could be modeled as graphs. For example, choosing a dress combination out of all given categories could be thought of as a perfect scenario.", "If we choose each item from each category like one from caps and another one from T-shirts and so on, we would end up in n possible options. The constraint we have here is, each category has only a limited number of resources. Still, we would have a decent amount of combinations. In this case, we could use graphs to showcase different categories of clothing in each node and relationships among them via edges. I hope the idea behind nodes and edges is known to everyone. If no, nodes could be thought as each item each category, for example, the red cap is a node and the green trouser is also a node, as well. The relationship among different nodes could be depicted using edges i.e. from red cap to blue t-shirt.", "Another canonical example of a graph is a social network of friends. Visualizing data onto graphs allows us to generate and answer different interesting questions about the data.", "In the case of a social network, we could ask questions like how many friends does John have or how many mutual friends are there between Cathy and Milan.", "There are different types of graph representations available and we have to make sure that we understand the kind of graph we are working with when programmatically solving a problem which includes graphs.", "As the name shows, there won\u2019t be any specified directions between nodes. So an edge from node A to B would be identical to the edge from B to A.", "In the above graph, each node could represent different cities and the edges show the bidirectional roads.", "Unlike undirected graphs, directed graphs have orientation or direction among different nodes. That means if you have an edge from node A to B, you can move only from A to B.", "Like the previous example, if we consider nodes as cities, we have a direction from city 1 to 2. That means, you can drive from city 1 to 2 but not back to city 1, because there is no direction back to city 1 from 2. But if we closely examine the graph, we can see cities with bi-direction. For example cities 3 and 4 have directions to both sides.", "Many graphs can have edges contain a weight associated to represent a real world implication such as cost, distance, quantity etc \u2026", "Weighted graphs could be either directed or undirected graph. The one we have in this example is an undirected weighted graph. The cost or distance from node green to orange and vice versa is 3. We could represent this relationship as a triplet like (u, v, w) which shows from where the edge is coming in, where it goes and cost or distance between the two nodes. Like our previous example, if you want to travel between two cities say city green and orange, we would have to pay off a cost of 3$ or in other terms, we would have to drive 3 miles. These metrics are self-defined and could be changed according to the situations. For a more elaborated example, consider you have to travel to city pink from green. If you look at the city graph, we can\u2019t find any direct roads or edges between the two cities. So what we can do is to travel via another city. The most promising routes would be starting from green to pink via orange and blue. If the weights are costs between cities, we would have to spend 11$ to travel via blue to reach pink but if we take the other route via orange, we would only have to pay 10$ for the trip.", "Apart from the above divisions, we have another set of graphs called special graphs.", "The most important type of special graphs is a tree. It\u2019s an undirected graph with no cycles. Equivalently, it has N nodes and N \u2014 1 edges.", "All the graphs given above are trees even the left most one because it has no cycles in it.", "A rooted tree is a tree with a designated root node where all other nodes are either coming towards the root or going away from the root.", "The node which is in red color is the root node. The left most tree is called an In-tree because all other nodes are coming towards the root node. The two other trees are Out-trees, because all other nodes are going away from the root.", "DAGs are directed graphs with no cycles. These graphs play an important role in representing structures with dependencies such as schedulers and compilers.", "We can use this graph to show the topological order between something meaningful. For example, if we use DAGs in a process manager, we could say like sub-processes x and y should be completed before proceeding with z.", "A Bi-Partite Graph is a one whose vertices could be divided into two disjoint sets say U and V, where each edge in the graph connects the vertices between U and V. Other similar definition to a Bi-Partite Graph is that the graph would be two colourable.", "If we look at the graph, we could see like each graph is divisible into two disjoint sets (U, V) and each edge connects the nodes between U and V.", "We call a graph Complete iff, each pair of vertices has a unique edge connecting between them. A complete graph with n vertices is denoted as Kn.", "Complete graphs are considered to be the worst case graphs because of the number of edges to be traversed.", "Here we discuss how we store a graph in the memory for further processes.", "The efficient way is to use a matrix of size NxN where N is the number of nodes. We call this matrix an adjacency matrix.", "The above given is of a directed weighted graph and it\u2019s corresponding adjacency matrix M. The matrix is of size 5x5 as there are 5 nodes in total. The cost from node A to B is 4 and it\u2019s given in M[A][B]. Similarly, the cost from one node to itself is zero, so all the diagonal elements would always be zeros. This is a space efficient method to store the graph information for the dense structures and the edge look up would always take a constant time. But, as the number of nodes increase, the space required to keep track of the edge information would also increase exponentially. If most of the edges don\u2019t have a proper information, we would endup making a sparse matrix.", "Another important structure we use to store the node and edge information is an adjacency list. This is a map from nodes to lists of edges.", "The given example is of an undirected weighted graph. If we look at the rightmost diagram, we could see couple of lists starting from each vertices. Node 1 has two outgoing edges namely 2 and 5, we represent this information along with it\u2019s cost. Each element in the list has the target node and the corresponding cost or weight.", "Adjacency List is an efficient mechanism to store the graph information if it is sparse i.e. it would take less memory as compared to the adjacency matrix in the same scenario. But still, this is a slight more complex representation rather than the adjacency matrix.", "AN edge list is a way to represent a graph simply as an unordered list of edges. Assume the notation for any triplet (u, v, w) means: \u201c the cost from u to v is w\u201d.", "The edge list is given in the right hand side corresponding to the directed weighted graph on the left hand side. Each pair in the list shows edge information between two nodes and associated weight.", "In the coming post, we would discuss about different problems that can be solved by Graph Theory.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F2b4460eeafc&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----2b4460eeafc--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2b4460eeafc--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://kelvinjose.medium.com/?source=post_page-----2b4460eeafc--------------------------------", "anchor_text": ""}, {"url": "https://kelvinjose.medium.com/?source=post_page-----2b4460eeafc--------------------------------", "anchor_text": "Kelvin Jose"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F47f3a41adda4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&user=Kelvin+Jose&userId=47f3a41adda4&source=post_page-47f3a41adda4----2b4460eeafc---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2b4460eeafc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2b4460eeafc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://towardsdatascience.com/tagged/graph-theory-simplified", "anchor_text": "Graph Theory Simplified"}, {"url": "https://medium.com/@kelvinjose/graph-theory-go-hero-1b5917da4fc1", "anchor_text": "Graph Theory: Go Hero"}, {"url": "https://images.app.goo.gl/Hvgbm5xkk4o9qFNA9", "anchor_text": "TouchGraph"}, {"url": "https://www.researchgate.net/profile/Hakan_Terelius", "anchor_text": "Hakan Teralius"}, {"url": "https://upload.wikimedia.org/wikipedia/commons/5/51/Directed_graph.svg", "anchor_text": "WIkiMedia"}, {"url": "https://www.freecodecamp.org/news/author/estefaniacn/", "anchor_text": "Estefania Cassingena Navone"}, {"url": "https://cdn-media-1.freecodecamp.org/images/H1ASU4s0MP52QUyuqo4LIjlvZcR4kn7lkq2V", "anchor_text": "freecodecamp.org"}, {"url": "https://mathworld.wolfram.com/BipartiteGraph.html", "anchor_text": "Wolfram Mathworld"}, {"url": "https://mathworld.wolfram.com/CompleteGraph.html", "anchor_text": "Wolfrom Mathworld"}, {"url": "https://www.softwaretestinghelp.com/graph-implementation-cpp/", "anchor_text": "softwaretestinghelp.com"}, {"url": "https://www.researchgate.net/profile/Surender_Baswana", "anchor_text": "Surender Baswana"}, {"url": "https://medium.com/tag/graph-theory?source=post_page-----2b4460eeafc---------------graph_theory-----------------", "anchor_text": "Graph Theory"}, {"url": "https://medium.com/tag/mathematics?source=post_page-----2b4460eeafc---------------mathematics-----------------", "anchor_text": "Mathematics"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----2b4460eeafc---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----2b4460eeafc---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/graph-theory-simplified?source=post_page-----2b4460eeafc---------------graph_theory_simplified-----------------", "anchor_text": "Graph Theory Simplified"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2b4460eeafc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&user=Kelvin+Jose&userId=47f3a41adda4&source=-----2b4460eeafc---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2b4460eeafc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&user=Kelvin+Jose&userId=47f3a41adda4&source=-----2b4460eeafc---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2b4460eeafc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2b4460eeafc--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F2b4460eeafc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----2b4460eeafc---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----2b4460eeafc--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----2b4460eeafc--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----2b4460eeafc--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----2b4460eeafc--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----2b4460eeafc--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----2b4460eeafc--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----2b4460eeafc--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----2b4460eeafc--------------------------------", "anchor_text": ""}, {"url": "https://kelvinjose.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://kelvinjose.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Kelvin Jose"}, {"url": "https://kelvinjose.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "224 Followers"}, {"url": "http://about.me/kelvinjose", "anchor_text": "about.me/kelvinjose"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F47f3a41adda4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&user=Kelvin+Jose&userId=47f3a41adda4&source=post_page-47f3a41adda4--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F101baa07137c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fget-started-with-graph-theory-2b4460eeafc&newsletterV3=47f3a41adda4&newsletterV3Id=101baa07137c&user=Kelvin+Jose&userId=47f3a41adda4&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}