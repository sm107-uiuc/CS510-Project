{"url": "https://towardsdatascience.com/web-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0", "time": 1682994070.516823, "path": "towardsdatascience.com/web-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0/", "webpage": {"metadata": {"title": "Web Scraping: A Brief Overview of Scrapy and Selenium, Part I | by Anastasia Reusova | Towards Data Science", "h1": "Web Scraping: A Brief Overview of Scrapy and Selenium, Part I", "description": "In this post, I am sharing my first experience with web scraping and the tools I have used (Scrapy and Selenium). I hope this piece will be helpful to someone seeking for general guidance as I am\u2026"}, "outgoing_paragraph_urls": [{"url": "https://scrapy.org/", "anchor_text": "Scrapy", "paragraph_index": 0}, {"url": "https://docs.seleniumhq.org/", "anchor_text": "Selenium", "paragraph_index": 0}, {"url": "https://www.udemy.com/share/100h3yA0QaeF5TRHQ=/", "anchor_text": "this [really helpful] Scrapy course", "paragraph_index": 1}, {"url": "https://www.youtube.com/channel/UCCezIgC97PvUuR4_gbFUs5g", "anchor_text": "YouTube channel", "paragraph_index": 1}, {"url": "https://doc.scrapy.org/en/latest/topics/settings.html", "anchor_text": "DOWNLOAD_DELAY", "paragraph_index": 11}, {"url": "http://www.tutorialspoint.com/python/time_sleep.htm", "anchor_text": "sleep()", "paragraph_index": 11}, {"url": "https://www.crummy.com/software/BeautifulSoup/bs4/doc/", "anchor_text": "BeautifulSoup", "paragraph_index": 15}, {"url": "https://docs.python.org/2/library/urllib2.html", "anchor_text": "urllib", "paragraph_index": 15}, {"url": "https://pypi.org/project/lxml/", "anchor_text": "lxml", "paragraph_index": 15}, {"url": "http://docs.python-requests.org/en/master/", "anchor_text": "Requests", "paragraph_index": 15}, {"url": "https://developers.google.com/web/tools/puppeteer/", "anchor_text": "puppeteer", "paragraph_index": 15}, {"url": "https://www.udemy.com/share/100h3yA0QaeF5TRHQ=/", "anchor_text": "this Udemy course", "paragraph_index": 16}, {"url": "https://towardsdatascience.com/web-scraping-a-less-brief-overview-of-scrapy-and-selenium-part-ii-3ad290ce7ba1", "anchor_text": "Part II,", "paragraph_index": 17}], "all_paragraphs": ["In this post, I am sharing my first experience with web scraping and the tools I have used (Scrapy and Selenium). I hope this piece will be helpful to someone seeking for general guidance as I am covering the learnings I find valuable and things I wish I knew when the idea of scraping crossed my mind the first time. Specifically, I wanted to highlight the peculiarities of using the two tools together and when to use what, as many of the explanations that I found online focused on either one or the other. I will not get into the code details, which I will do in a separate post, but will rather go through the conceptual understanding that I developed over time, with examples from Airbnb, which I find to be a good role model for the subject. As a side note, I am going to use the terms web scraping, scraping and web crawling as synonyms.", "First of all, it\u2019s not rocket science. Arguably, the best approach to kick off this kind of a project is learning by doing, and for certain websites, you can build a working scraper in a couple of days with a basic knowledge of Python and a decent tutorial at hand. I started learning from this [really helpful] Scrapy course, which costs about $10 when on sale. For the most part, the course covers the use of Scrapy for web crawling, but also touches upon the use of Selenium. These two can be used separately and merged together in one scraper. Merging them might require some additional research if you are a Python / JavaScript beginner, but it\u2019s totally worth it. Personally, I find Corey\u2019s YouTube channel to be of a great help when it comes to brushing up Python basics as he has a great way of breaking down the concepts.", "Different websites \u2014 different tools. While Scrapy is a Python framework that is specifically designed for web crawling, its most suitable for properly rendered XML and HTML pages, and may not work for JavaScript driven pages, which use frameworks like React and Angular. In practice, it means that you will pass a valid element selector to Scrapy, but will get an empty output. An example for this are different kinds of timers and interactive elements. Another peculiarity of Scrapy is that it goes through pages by accessing their URLs, however, you will find that some buttons won\u2019t have any URLs linked to them when you inspect the element or get the source code (through xpath or css). For example, this guided tour has an href (URL), attached to it, so you can get redirected to the tour info.", "On the other hand, this Airbnb \u201cBecome a host\u201d button has no href (=URL) when you inspect the source code.", "A different example for the last scenario is infinite load pages, and \u201cload more\u201d or \u201cnext\u201d buttons in some instances. Like this \u201cshow all\u201d button:", "In these cases, if you want to use Python, you will turn to other tools, like Selenium, which I found to be a fairly beginner-friendly but less optimised scraping tool. Specifically, Selenium makes it easy to interact with the website, or simply click through pages, while getting to the element of my interest.", "At the same time, Selenium is clumsy at handling certain exceptions that Scrapy handles gracefully. One of such examples is the NoSuchElementException, for which Scrapy returns an empty list, while Selenium fails to return all the elements for a particular page. For example, consider this review count for homes on Airbnb, if a property has a review, the counter is displayed, you can see it in the class=\"_1lykgvlh\", inside the span.", "The property below, however, has no reviews and the counter is not there as an element of the source code, and there\u2019s nothing to \u201cinspect\u201d in the same class=\"_1lykgvlh\":", "So if you are looping through all these classes to get all the elements from it, such as \u201cnew\u201d tag, reviews count and \u201cfree cancellation\u201d tag, Selenium will return all these elements for the first property and drop off of these for the second one (even if only finding 1 element triggers the NoSuchElementException). For this reason, handling this and all other exceptions in Selenium is important, so your scraper is robust and functional.", "One of peculiarities of Selenium is that it has to open a browser for each request to get the url. This means that Selenium is a memory intensive tool, and you may run into memory utilisation issues. For this reason, I chose to use Selenium only when necessary and not overuse it. In Airbnb example, if I have a choice, I will scrape all the properties\u2019 details from the catalog page rather than going into each property profile to scrape details from there and returning to the catalog.", "Scrapers are not universal Needless to say, different websites will require building different scrapers unless they have identical source code. That said, a scraper written for a specific website might need to be altered once the website changes, so you may need to adjust the script. As an example, developers might change a class name or an id of an element, which will leave you either with exceptions or empty results. For this reason, it is worth monitoring the scraping process in a browser, terminal or simply looking at the output file.", "Be nice. And avoid getting blocked In general, be nice and approach the server gently. If the website has an API, use it, if not, and you really need them, be gentle to not crash their server and avoid getting your IP blocked, so get the hang of DOWNLOAD_DELAY, sleep(), setting the limit for concurrent requests or other ways to pause your scraper. A good idea is to avoid launching the scraper from your main work station at least in the beginning when you are getting familiar with how it behaves. Because if the IP is blocked or gets labeled as suspicious, it might be painful not only for you, but also for your colleagues, family and anyone using the same network. This means, be especially mindful of strategically important websites such as google.com (which doesn\u2019t block you, but invites you for CAPCHAs sessions).", "I like to familiarise myself with the site\u2019s robots policy and read the robots.txt to get a general understanding of what they prefer to allow and disallow for robots to do, and search their website for an indication of whether or not they allow robots on their website.", "A mere look at the list of restrictions will give you the impression of how strict they are with crawler. Websites can treat robots differently and scrapers are often blocked automatically. You can recognise this behaviour if you have 500's request statuses in your logs with Request denied or HTTP status is not handled or not allowed, etc.", "In case there is no API and you keep getting 500\u2019s after setting delays, you can set a USER_AGENT for your scraper, which will change the header of it from pythonX.X or any other default name, which is easily identified and filtered by the server, to the name of the agent you\u2019ve specified, so the server will see your bot as a browser. One of the easiest way to do it in Scrapy is through settings. Keep in mind though that you want to keep the user agent in line with your machine OS and browser name. For example, this USER_AGENT = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36' will work for Mac, but will not work for Ubuntu.", "There are plenty of tools out there Scrapy and Selenium are not the only options for web crawling. There are many Python libraries (e.g., BeautifulSoup, urllib, lxml, Requests) and other tools like puppeteer by Google (Node.js), which can deliver similar results. The difference is in the frameworks they can handle and at what cost. Therefore, your objective is to get familiar with their capabilities and use them in the most efficient way.", "These are the main things I learnt when I did my first couple of scraping projects. As with most of things, the hardest one was to start and not get lost. Therefore, I do recommend taking an online course, like this Udemy course, which I found really helpful, and build up understanding gradually if you are a beginner.", "This was Part I of this post, I am following up with the Part II, where I will share a Python code with you and include explanations of what it does, so you can replicate it.", "Comment below if you have questions and connect with me on LinkedIn if you want to network.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F10367164c6c0&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----10367164c6c0--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----10367164c6c0--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://anastasia-reusova.medium.com/?source=post_page-----10367164c6c0--------------------------------", "anchor_text": ""}, {"url": "https://anastasia-reusova.medium.com/?source=post_page-----10367164c6c0--------------------------------", "anchor_text": "Anastasia Reusova"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6a4ac211e98b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&user=Anastasia+Reusova&userId=6a4ac211e98b&source=post_page-6a4ac211e98b----10367164c6c0---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F10367164c6c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F10367164c6c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://scrapy.org/", "anchor_text": "Scrapy"}, {"url": "https://docs.seleniumhq.org/", "anchor_text": "Selenium"}, {"url": "https://www.udemy.com/share/100h3yA0QaeF5TRHQ=/", "anchor_text": "this [really helpful] Scrapy course"}, {"url": "https://www.youtube.com/channel/UCCezIgC97PvUuR4_gbFUs5g", "anchor_text": "YouTube channel"}, {"url": "https://doc.scrapy.org/en/latest/topics/settings.html", "anchor_text": "DOWNLOAD_DELAY"}, {"url": "http://www.tutorialspoint.com/python/time_sleep.htm", "anchor_text": "sleep()"}, {"url": "https://www.crummy.com/software/BeautifulSoup/bs4/doc/", "anchor_text": "BeautifulSoup"}, {"url": "https://docs.python.org/2/library/urllib2.html", "anchor_text": "urllib"}, {"url": "https://pypi.org/project/lxml/", "anchor_text": "lxml"}, {"url": "http://docs.python-requests.org/en/master/", "anchor_text": "Requests"}, {"url": "https://developers.google.com/web/tools/puppeteer/", "anchor_text": "puppeteer"}, {"url": "https://www.udemy.com/share/100h3yA0QaeF5TRHQ=/", "anchor_text": "this Udemy course"}, {"url": "https://towardsdatascience.com/web-scraping-a-less-brief-overview-of-scrapy-and-selenium-part-ii-3ad290ce7ba1", "anchor_text": "Part II,"}, {"url": "https://www.linkedin.com/in/areusova/", "anchor_text": "https://www.linkedin.com/in/areusova/"}, {"url": "https://github.com/khunreus", "anchor_text": "https://github.com/khunreus"}, {"url": "https://medium.com/tag/python?source=post_page-----10367164c6c0---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/scraping?source=post_page-----10367164c6c0---------------scraping-----------------", "anchor_text": "Scraping"}, {"url": "https://medium.com/tag/web-crawler?source=post_page-----10367164c6c0---------------web_crawler-----------------", "anchor_text": "Web Crawler"}, {"url": "https://medium.com/tag/scrapy?source=post_page-----10367164c6c0---------------scrapy-----------------", "anchor_text": "Scrapy"}, {"url": "https://medium.com/tag/selenium?source=post_page-----10367164c6c0---------------selenium-----------------", "anchor_text": "Selenium"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F10367164c6c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&user=Anastasia+Reusova&userId=6a4ac211e98b&source=-----10367164c6c0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F10367164c6c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&user=Anastasia+Reusova&userId=6a4ac211e98b&source=-----10367164c6c0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F10367164c6c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----10367164c6c0--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F10367164c6c0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----10367164c6c0---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----10367164c6c0--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----10367164c6c0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----10367164c6c0--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----10367164c6c0--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----10367164c6c0--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----10367164c6c0--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----10367164c6c0--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----10367164c6c0--------------------------------", "anchor_text": ""}, {"url": "https://anastasia-reusova.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://anastasia-reusova.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Anastasia Reusova"}, {"url": "https://anastasia-reusova.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "437 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6a4ac211e98b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&user=Anastasia+Reusova&userId=6a4ac211e98b&source=post_page-6a4ac211e98b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F6ee77c12a73d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fweb-scraping-a-simple-way-to-start-scrapy-and-selenium-part-i-10367164c6c0&newsletterV3=6a4ac211e98b&newsletterV3Id=6ee77c12a73d&user=Anastasia+Reusova&userId=6a4ac211e98b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}