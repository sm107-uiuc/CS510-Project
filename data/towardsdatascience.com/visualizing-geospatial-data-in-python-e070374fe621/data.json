{"url": "https://towardsdatascience.com/visualizing-geospatial-data-in-python-e070374fe621", "time": 1683008460.793361, "path": "towardsdatascience.com/visualizing-geospatial-data-in-python-e070374fe621/", "webpage": {"metadata": {"title": "Visualizing Geospatial Data in Python | by Paco Nathan | Towards Data Science", "h1": "Visualizing Geospatial Data in Python", "description": "Throughout the global pandemic, many people have spent lots of time viewing maps that visualize data. Important data. People who work in data science are probably seeing increased needs to work with\u2026"}, "outgoing_paragraph_urls": [{"url": "https://scitools.org.uk/cartopy/docs/latest/", "anchor_text": "cartopy", "paragraph_index": 2}, {"url": "https://pypi.python.org/pypi/Cython/", "anchor_text": "Cython", "paragraph_index": 2}, {"url": "http://www.numpy.org/", "anchor_text": "NumPy", "paragraph_index": 2}, {"url": "https://trac.osgeo.org/geos/", "anchor_text": "GEOS", "paragraph_index": 2}, {"url": "https://github.com/Toblerity/Shapely", "anchor_text": "Shapely", "paragraph_index": 2}, {"url": "https://pypi.python.org/pypi/pyshp", "anchor_text": "pyshp", "paragraph_index": 2}, {"url": "https://proj4.org/", "anchor_text": "PROJ", "paragraph_index": 2}, {"url": "https://pypi.python.org/pypi/six", "anchor_text": "Six", "paragraph_index": 2}, {"url": "https://pysal.org/mapclassify/index.html", "anchor_text": "mapclassify", "paragraph_index": 2}, {"url": "https://github.com/DerwenAI/ibm_dsc_articles/blob/master/2020_05/tutorial.ipynb", "anchor_text": "github.com/DerwenAI/ibm_dsc_articles/blob/master/2020_05/tutorial.ipynb", "paragraph_index": 3}, {"url": "https://docs.conda.io/", "anchor_text": "conda", "paragraph_index": 4}, {"url": "https://github.com/ResidentMario/geoplot-data", "anchor_text": "sample datasets", "paragraph_index": 8}, {"url": "https://geojson.org/", "anchor_text": "geojson", "paragraph_index": 8}, {"url": "https://www2.census.gov/geo/tiger/GENZ2018/description.pdf", "anchor_text": "US Census Bureau", "paragraph_index": 9}, {"url": "https://jupyter.org/", "anchor_text": "Jupyter notebook", "paragraph_index": 13}, {"url": "https://pandas.pydata.org/", "anchor_text": "pandas", "paragraph_index": 16}, {"url": "https://en.wikipedia.org/wiki/Albers_projection", "anchor_text": "Albers equal-area conic projection", "paragraph_index": 24}, {"url": "https://geopandas.org/reference.html?highlight=crs#geopandas.GeoDataFrame.crs", "anchor_text": "coordinate reference system", "paragraph_index": 25}, {"url": "https://jakevdp.github.io/PythonDataScienceHandbook/05.13-kernel-density-estimation.html", "anchor_text": "KDE", "paragraph_index": 29}, {"url": "https://covid19.healthdata.org/united-states-of-america", "anchor_text": "IHME", "paragraph_index": 41}, {"url": "https://matplotlib.org/api/animation_api.html", "anchor_text": "matplotlib.animation", "paragraph_index": 53}, {"url": "https://github.com/DerwenAI/ibm_dsc_articles/blob/master/2020_05/tutorial.ipynb", "anchor_text": "github.com/DerwenAI/ibm_dsc_articles/blob/master/2020_05/tutorial.ipynb", "paragraph_index": 54}, {"url": "https://covidtracking.com/data", "anchor_text": "https://covidtracking.com/data", "paragraph_index": 55}, {"url": "https://ibm.biz/paco-geospatial", "anchor_text": "https://ibm.biz/paco-geospatial", "paragraph_index": 56}, {"url": "http://derwen.ai/paco", "anchor_text": "derwen.ai/paco", "paragraph_index": 58}, {"url": "https://mastodon.green/@pacoid", "anchor_text": "https://mastodon.green/@pacoid", "paragraph_index": 58}], "all_paragraphs": ["Throughout the global pandemic, many people have spent lots of time viewing maps that visualize data. Important data. People who work in data science are probably seeing increased needs to work with geospatial data, especially for visualizations. There are increased needs to understand metrics about geographic regions, to analyze supply chain, make plans that take into account local conditions and rules, etc.", "This article shows how to use two popular geospatial libraries in Python:", "The second library is especially helpful since it builds on top of several other popular geospatial libraries, to simplify the coding that\u2019s typically required. Those include: cartopy, which in turn leverages Cython, NumPy, GEOS, Shapely, pyshp, PROJ, Six, and perhaps a few others such as mapclassify, depending on which features you need to use.", "Note: all of this code is available in a Jupyter notebook at github.com/DerwenAI/ibm_dsc_articles/blob/master/2020_05/tutorial.ipynb", "Installation should be quick. Just use the following three command lines with conda:", "Note: if you run into problems with these installations, there are alternative approaches available. Some additional notes discuss how to build these dependencies on Linux", "Part of the learning curve for working with geospatial data is that there\u2019s lots of special terminology used. Here\u2019s a handy cheat-sheet for terms that you\u2019re likely to encounter:", "Okay, with those terms defined here for reference \u2026 let\u2019s go!", "We need to get some data to use for these examples. While geoplot includes plenty of sample datasets in the geojson format, it helps to know how to load your own data.", "First, let\u2019s get a shapefile from the US Census Bureau TIGER database to visualize state boundaries, which we\u2019ll place into a `maps` subdirectory:", "Of course, there are so many open data sources for shapefiles like this. Here are a few:", "Next let\u2019s get some data to plot, in this case the 2018 population estimates for the US, which we\u2019ll place into a `data` subdirectory:", "To import the required packages in Python:", "If you\u2019re working in a Jupyter notebook be sure to run the following \u201cmagic\u201d command to render plots properly:", "Then load a shapefile and view parts of it:", "Notice the `geometry` column, which specifies the polygon shapes.", "Now we\u2019ll load the US Census data as a pandas dataframe and view a portion of it:", "Next we merge the shapefile with population data, joining on the state names:", "Great, now that data is ready to plot a shape. We\u2019ll specify California by name:", "Alternatively, we can create a GeoDataFrame (a dataframe with geospatial data) by loading one of the sample datasets from geoplot, in this case the polygons for state boundaries:", "Then plot a map of the US states:", "Let\u2019s load another sample dataset, in this case for US cities:", "Then plot the locations of each city in the continental US as points:", "Composing these two, we\u2019ll use overplotting to show the cities and states in the continental US. Note how the `ax` variable for the state polygons provides an axis onto which we plot the cities:", "That looks a bit stretched, so let\u2019s adjust the projection to use an Albers equal-area conic projection:", "Okay, that\u2019s better! Again, since the Earth is a 3D globe, a projection is a method for how an area gets flattened into 2D map, using some coordinate reference system (CRS). The geoplot library makes this easy for us to use any number of projections \u2014 Albers equal-area projection is a choice in line with documentation from the libraries. You could also play with some you may remember from grade school like the `mercator gcrs.Mercator()` or modern variations of it like the `gcrs.WebMercator()` projection. Play around with them and let us know which ones you prefer and why!", "Now let\u2019s compare several different ways to visualize geospatial data. First, we\u2019ll change the hue of a city\u2019s plotted point based on that city\u2019s elevation, and also add a legend for people to decode the meaning of the different hues. The parameter lists start to get long-ish, so we\u2019ll specify parameters on different lines:", "We can also use the scale of each plotted point to represent another dimension. In this case, the scale of the city points is based on their elevation:", "With a choropleth we use different hues to shade polygons, to represent a dimension of data:", "A data smoothing technique known as kernel density estimation (KDE) creates contours to represent a dimension of data. In this case, we\u2019ll zoom in to view the traffic collisions in the NYC boroughs:", "Let\u2019s zoom out to try KDE on major population centers throughout the US:", "This next section shows how to work with data associated with areas (polygons). We\u2019ll load a dataset about obesity rates by US state:", "Convert that into a GeoDataFrame using a join. Note how this adds the required `geometry` column:", "Now we can use this data to plot a cartogram, which grows or shrinks polygons to represent a dimension of data \u2014 in this case, the obesity rates per state:", "One good approach to simplifying data visualization is binning the data into quantiles. These are equal-sized groups, in this case 10 quantiles for elevation:", "Here we\u2019ve divided the elevations into 10 quantiles with approximately 375 values each. Now let\u2019s assign a different hue to each quantile, plus a legend to explain them:", "Note how the colormap was changed to the \u201cinferno_r\u201d setting.", "Next, let\u2019s add a filter for typical warnings that can be ignored:", "The next example uses a voronoi diagram, to calculate polygon areas based on a dimension of the data. Each polygon is centered on a generating point, such that every location in the polygon is closer to its generating point than to any other. This is helpful when you want to examine a column of data, to see if it may have any geospatial correlations.", "In the following example, we\u2019ll plot the locations primary schools in Melbourne, Australia, and use a voronoi diagram to show where they are concentrated:", "Let\u2019s construct a voronoi diagram for the elevations of US cities. This is a data smoothing technique since the elevations are for points, but we\u2019ll \u201csmooth\u201d those values across areas:", "Next, let\u2019s download some of the COVID-19 data from the University of Washington\u2019s IHME center. Change the name of the UNZIP\u2019ed directory (download date) as needed:", "We\u2019ll filter rows, limiting this visualization to Earth Day (April 22) 2020:", "Now merge on state name with the continental US dataset from earlier:", "Add a calculated column for \u201cdeaths per million\u201d:", "Then to visualize this data, let\u2019s plot a choropleth of \u201cdeaths per million\u201d per state, and overplot with population per city:", "Note how the choropleth is overplotted with a point plot by reusing the same `ax` variable. The point plot specifies a `zorder` parameter (which \u201clayer\u201d) and an `alpha` parameter (how \u201ctranslucent\u201d) to make the overplotting more readable. The `figsize` parameter in the first plot modifies the overall size of the plot.", "This visualization shows where population centers in the US are more at risk: NYC area, Louisiana, Illinois, Michigan, Georgia, etc., which is where the news headlines in the US about COVID-19 on Earth Day 2020 date were focused.", "Next, let\u2019s prepare to animate this visualization. We\u2019ll define a function to visualize the data for a given day:", "Then define a range of dates:", "Iterate through those dates, creating a visualization for each date, which gets saved to a file:", "Use `imageio` to stitch these individual plots together into an animated GIF, at a rate of 2 frames/second:", "Here\u2019s a video of the resulting animation:", "Note: there is also the matplotlib.animation API, which we could have used instead of imageio. The former has some bugs in recent releases, while the latter has more general-purpose uses.", "Again, all of this code is available in a Jupyter notebook at github.com/DerwenAI/ibm_dsc_articles/blob/master/2020_05/tutorial.ipynb", "If you\u2019d like to experiment with extending this visualization example, there are lots of related datasets are available at https://covidtracking.com/data", "Originally published on the IBM Data Science Community blog at https://ibm.biz/paco-geospatial", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "evil mad sci, derwen.ai/paco ; lives on an apple orchard in the coastal redwoods https://mastodon.green/@pacoid"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe070374fe621&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e070374fe621--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e070374fe621--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://pacoid.medium.com/?source=post_page-----e070374fe621--------------------------------", "anchor_text": ""}, {"url": "https://pacoid.medium.com/?source=post_page-----e070374fe621--------------------------------", "anchor_text": "Paco Nathan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed409c5b95e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&user=Paco+Nathan&userId=ed409c5b95e3&source=post_page-ed409c5b95e3----e070374fe621---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe070374fe621&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe070374fe621&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://geopandas.org/", "anchor_text": "geopandas"}, {"url": "https://residentmario.github.io/geoplot/index.html", "anchor_text": "geoplot"}, {"url": "https://scitools.org.uk/cartopy/docs/latest/", "anchor_text": "cartopy"}, {"url": "https://pypi.python.org/pypi/Cython/", "anchor_text": "Cython"}, {"url": "http://www.numpy.org/", "anchor_text": "NumPy"}, {"url": "https://trac.osgeo.org/geos/", "anchor_text": "GEOS"}, {"url": "https://github.com/Toblerity/Shapely", "anchor_text": "Shapely"}, {"url": "https://pypi.python.org/pypi/pyshp", "anchor_text": "pyshp"}, {"url": "https://proj4.org/", "anchor_text": "PROJ"}, {"url": "https://pypi.python.org/pypi/six", "anchor_text": "Six"}, {"url": "https://pysal.org/mapclassify/index.html", "anchor_text": "mapclassify"}, {"url": "https://github.com/DerwenAI/ibm_dsc_articles/blob/master/2020_05/tutorial.ipynb", "anchor_text": "github.com/DerwenAI/ibm_dsc_articles/blob/master/2020_05/tutorial.ipynb"}, {"url": "https://docs.conda.io/", "anchor_text": "conda"}, {"url": "https://github.com/DerwenAI/ibm_dsc_articles/blob/master/2020_05/INSTALL.md", "anchor_text": "github.com/DerwenAI/ibm_dsc_articles/blob/master/2020_05/INSTALL.md"}, {"url": "https://en.wikipedia.org/wiki/Shapefile", "anchor_text": "shapefile"}, {"url": "https://datacarpentry.org/organization-geospatial/02-intro-vector-data/", "anchor_text": "geometry"}, {"url": "https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry", "anchor_text": "well-known text"}, {"url": "https://www.gislounge.com/basemaps-defined/", "anchor_text": "basemap"}, {"url": "https://datacarpentry.org/organization-geospatial/03-crs/", "anchor_text": "projection"}, {"url": "https://geopandas.org/reference.html?highlight=crs#geopandas.GeoDataFrame.crs", "anchor_text": "coordinate reference system"}, {"url": "https://matplotlib.org/3.1.0/tutorials/colors/colormaps.html", "anchor_text": "colormap"}, {"url": "https://residentmario.github.io/geoplot/plot_references/plot_reference.html#choropleth", "anchor_text": "choropleth"}, {"url": "https://en.wikipedia.org/wiki/Kernel_density_estimation", "anchor_text": "kernel density estimation"}, {"url": "https://en.wikipedia.org/wiki/Cartogram", "anchor_text": "cartogram"}, {"url": "https://pysal.org/mapclassify/generated/mapclassify.classifiers.Quantiles.html?highlight=quantiles#mapclassify.classifiers.Quantiles", "anchor_text": "quantiles"}, {"url": "https://mathworld.wolfram.com/VoronoiDiagram.html", "anchor_text": "voronoi diagram"}, {"url": "https://github.com/ResidentMario/geoplot-data", "anchor_text": "sample datasets"}, {"url": "https://geojson.org/", "anchor_text": "geojson"}, {"url": "https://www2.census.gov/geo/tiger/GENZ2018/description.pdf", "anchor_text": "US Census Bureau"}, {"url": "http://www.naturalearthdata.com/downloads/", "anchor_text": "Natural Earth"}, {"url": "https://livingatlas.arcgis.com/en/", "anchor_text": "ESRI: ArcGIS Living Atlas"}, {"url": "https://www.weather.gov/gis/NWS_Shapefile", "anchor_text": "NOAA Weather Data"}, {"url": "https://jupyter.org/", "anchor_text": "Jupyter notebook"}, {"url": "https://pandas.pydata.org/", "anchor_text": "pandas"}, {"url": "https://en.wikipedia.org/wiki/Albers_projection", "anchor_text": "Albers equal-area conic projection"}, {"url": "https://geopandas.org/reference.html?highlight=crs#geopandas.GeoDataFrame.crs", "anchor_text": "coordinate reference system"}, {"url": "https://jakevdp.github.io/PythonDataScienceHandbook/05.13-kernel-density-estimation.html", "anchor_text": "KDE"}, {"url": "https://covid19.healthdata.org/united-states-of-america", "anchor_text": "IHME"}, {"url": "https://matplotlib.org/api/animation_api.html", "anchor_text": "matplotlib.animation"}, {"url": "https://github.com/DerwenAI/ibm_dsc_articles/blob/master/2020_05/tutorial.ipynb", "anchor_text": "github.com/DerwenAI/ibm_dsc_articles/blob/master/2020_05/tutorial.ipynb"}, {"url": "https://covidtracking.com/data", "anchor_text": "https://covidtracking.com/data"}, {"url": "https://twitter.com/will_s_roberts", "anchor_text": "William Roberts"}, {"url": "https://ibm.biz/paco-geospatial", "anchor_text": "https://ibm.biz/paco-geospatial"}, {"url": "https://medium.com/tag/python?source=post_page-----e070374fe621---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/geospatial?source=post_page-----e070374fe621---------------geospatial-----------------", "anchor_text": "Geospatial"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----e070374fe621---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/open-source?source=post_page-----e070374fe621---------------open_source-----------------", "anchor_text": "Open Source"}, {"url": "https://medium.com/tag/data-science?source=post_page-----e070374fe621---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe070374fe621&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&user=Paco+Nathan&userId=ed409c5b95e3&source=-----e070374fe621---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe070374fe621&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&user=Paco+Nathan&userId=ed409c5b95e3&source=-----e070374fe621---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe070374fe621&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e070374fe621--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe070374fe621&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e070374fe621---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e070374fe621--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e070374fe621--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e070374fe621--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e070374fe621--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e070374fe621--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e070374fe621--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e070374fe621--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e070374fe621--------------------------------", "anchor_text": ""}, {"url": "https://pacoid.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://pacoid.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Paco Nathan"}, {"url": "https://pacoid.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3.2K Followers"}, {"url": "http://derwen.ai/paco", "anchor_text": "derwen.ai/paco"}, {"url": "https://mastodon.green/@pacoid", "anchor_text": "https://mastodon.green/@pacoid"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed409c5b95e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&user=Paco+Nathan&userId=ed409c5b95e3&source=post_page-ed409c5b95e3--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F111eabe10c19&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualizing-geospatial-data-in-python-e070374fe621&newsletterV3=ed409c5b95e3&newsletterV3Id=111eabe10c19&user=Paco+Nathan&userId=ed409c5b95e3&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}