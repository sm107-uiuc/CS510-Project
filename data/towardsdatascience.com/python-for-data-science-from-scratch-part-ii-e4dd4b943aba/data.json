{"url": "https://towardsdatascience.com/python-for-data-science-from-scratch-part-ii-e4dd4b943aba", "time": 1682994748.263584, "path": "towardsdatascience.com/python-for-data-science-from-scratch-part-ii-e4dd4b943aba/", "webpage": {"metadata": {"title": "Python for Data Science: From Scratch(Part II) | by Richa Yadav | Towards Data Science", "h1": "Python for Data Science: From Scratch(Part II)", "description": "This article focuses on tuples,lists and dictionaries in python. How to build them and use them. Additionally, This article explains how to use numpy and pandas packages in our projects."}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/python-for-data-science-from-scratch-part-i-390f01d91748", "anchor_text": "here", "paragraph_index": 0}, {"url": "https://pandas.pydata.org/", "anchor_text": "Pandas", "paragraph_index": 17}, {"url": "https://pandas.pydata.org/pandas-docs/version/0.23.4/generated/pandas.DataFrame.html", "anchor_text": "here", "paragraph_index": 28}, {"url": "https://www.kaggle.com/mohansacharya/graduate-admissions#Admission_Predict.csv", "anchor_text": "dataset from kaggle", "paragraph_index": 29}, {"url": "https://www.kaggle.com/mehdidag/black-friday", "anchor_text": "here", "paragraph_index": 38}], "all_paragraphs": ["This article is the second piece in the Python For Data Science Series. In case you haven\u2019t gone through the introduction of Python(part 1), go ahead and skim through that article here. After knowing about the basics, its time to indulge in more challenging topics of Python. In this article, we shall be looking into Python\u2019s usage for data representation and manipulation methods. The following topics will be covered:", "SPOILER ALERT: You can expect a bonus at the end of the article!\ud83e\udd2b", "Python provides simple yet proficient data structures that help the data people to represent, manipulate and store different form of data as per their need. Let\u2019s get comfortable with these subtle structures one by one.", "A tuple is an immutable and fixed-length sequence of Python objects.", "Tuple Manipulation: A tuple is immutable that is once you define a tuple\u2019s contents, you cannot modify it.", "Unpacking Tuples: While unpacking. the values are assigned to the relevant rightmost variable.", "A list is a variable-length and mutable data structure.", "Similar to tuples, adding two lists together with a + concatenates them. Or else, if you already have a list defined, you can append multiple elements using the extend method. While using extend operator be sure to put the values inside square brackets.", "Slicing: Slicing is selecting sections of your defined list as per your choice.", "Note: Practice slicing really hard. the more you practice the better you understand the indices. While negative indexing always remember to start the last element with \u2018-1\u2019 and continue up to the first element.", "A dict or Dictionary in Python is an unordered, mutable and indexed data structure. It is considered the most important and detailed data structure in Python.", "Here I announce that we have studied the basic data structures that we use in Python for analysis that don\u2019t require a package to be imported from. Next we focus on some important packages that are known to be quite helpful in analysis.", "Python is an open-source project has a contribution from thousands of developers who have uploaded numerous packages that help us perform activities by simply importing that package and using it. The following is a study of a few of those packages.", "Numpy, short for Numerical Python, is one of the most important packages for numerical computation in Python. Most of the packages that provide scientific functionality use NumPy\u2019s array objects as the lingua franca for data exchange.", "In some ways, NumPy\u2019s array objects are much like Python\u2019s built-in list type, but NumPy is a winner when we deal with colossal data. Knowing about NumPy in depth will be eventually valuable no matter what field of data science you\u2019re interested in!", "Let\u2019s start with some basic array attributes that are used to obtain information about the array. First, we will create three arrays, one-dimensional, two-dimensional and three-dimensional random array.", "Accessing Array elements: If you are familiar with Python\u2019s list indexing, indexing in Numpy will feel quite easy to understand. In a 1-D array, you can access the i-th value, starting from 0, by specifying i-th index into the indexing operator i.e []. For a multi-dimensional array, you are expected to specify the detailed location of an element using a comma-separated tuple of indices. Indexing and slicing are best understood when performed. I urge you to practice and think over every example given in the below gist.", "Pandas is an open source library for Python that was particularly created for data manipulation and analysis of huge chunks of data. Pandas offers robust data structures and functions for manipulating data easily.", "But wait, that\u2019s what lists, dict and Numpy\u2019s ndarrays could do too, So why Pandas? Well, there are many justified reasons. One of them is in most cases the data person will get data in csv file formats. Pandas is quite famous with easily recognizing columns headers automatically from these csv files. In short, Pandas is awesome! \ud83d\udc3c\ud83e\udd17 The two primary data structures in Pandas are Series(one Dimensional) and Dataframe(two dimensional).", "First, we can use the Pandas library by calling the import method as", "A Series is a one-dimensional array of indexed data that can hold data of any type. The axis labels are collectively referred to as index. The basic method to generate a series is :", "Where data can be a Python dict, ndarray or even a scalar value(say 7), index can be a list of axis labels. Thus, we will study a few cases depending on what data is-", "If you are using a ndarray as data for series, the length of the index should be of the same length. If no index is defined, a default index will be created having values [0,\u2026, len(data)-1].", "As we have learned earlier, a dict is key: value representation of data. We can use a dict to define a Series object. Here if we don\u2019t pass index values, the \u2018key\u2019 mentioned in the definition of the dict is used as the index. The key attribute appears in the index in the same order as defined in the dict. On the other hand, if the index is defined in Series definition, only the data that corresponds to the keys used in the dict are pulled out. The remaining index labels will be recorded as Nan, not a number, which is the standard data marker for missing data.", "If data is a scalar value or a constant, then we definitely need to specify an index. The same constant value will be replicated up to the length of the index corresponding each index point.", "The following notebook showcases a list of certain functions that dig information about the series object.", "A dataframe is a two-dimensional indexed data structure with columns of different data types. It can be thought of as a Dict of Series all sharing the same index. A dataframe is the handiest and hence widely used data structure. You can think of a dataframe as a spreadsheet or a SQL table. Like Series, we can construct a dataframe in multiple ways as follows:", "Where index and columns of your choice can be specified optionally. Otherwise, the default index is given as [0\u2026.(len-1)] as a mutual index to all columns. In the diagram given, we assigned index as 0 to 4, while columns are Book Title, Author, Finished Reading?. And everything filled within the table is data.", "You can create a dataframe from possibly every other data structure(proceed here to study dataframe construction). To keep our study relevant to data science, I shall assure you that you will use dataframes as a container for large .csv files, .data files or any other file format that stores data. Therefore, we start with the most basic file format that you might work on, i.e. comma separated values and how to load such files.", "I downloaded a dataset from kaggle and read it using the above syntax. After reading the dataset looks like the figure beside. Let\u2019s start with some basic handy commands that help analyze a dataframe.", "The primary objective in this section is how to slice, dice and generally get and set subsets of pandas objects. Just like Numpy arrays, we can select and index data, the only difference is that in Series and Dataframe we can use a list or even a slice labels.", "We use .iloc to focus on the integer based positions or locations of data, starting from 0 up to length-1 of either axis. But it may also be used with a boolean array. iloc will raise an IndexError if it finds the mentioned index or slice of the index is out of bounds. It is important to use the colon operator in row selection if we are only planning to use column selection.", "On the other hand, loc is used for label based extraction of data. We have to specify the actual labels or index names and column names as parameters.", "We can select a slice of such columns or even a boolean array. loc will raise a KeyError when the items are not found. We can specify the row index as 0 to length -1 if its an integer. Please note that here the integer is not a position but instead it a \u201clabel\u201d. For columns, we are expected to use the respective column names, say \u2018Column 1\u2019,\u2019Column 2\u2019, etc.", "W can drop a particular data entry from the dataframe using the drop method. This drop method deletes the specified data point from the object and without mending the original data object, it just returns a new object which has the deletions reflected.", "While using drop method in a dataframe, we can drop values from the row by simply mentioning them in quotes. Otherwise, if we want to wipe out a particular column, we have to specify an additional parameter, axis =1 or axis =\u2019 columns\u2019. (axis=0 implies rows)", "Whenever we use drop, data is reflected in a new object while protecting the original data. If you want to mend the original data, use the parameter inplace=True. Be careful while using inplace as it will drop data from the original object permanently.", "GroupBy function in pandas resembles the group by in SQL. It groups the entire dataframe keeping one particular column in consideration. After we have grouped the dataframe in this manner, we can perform various actions like minimum, maximum or finding mean on this collective data. Any groupby operation involves one of the following operations on the original data object:", "Create a spreadsheet-style pivot table as a DataFrame. Data is often stored in CSV files or databases in so-called \u201cstacked\u201d or \u201crecord\u201d format. Similarly, we can use the pivot function to quickly summarize our data. For understanding the application of pivot tables, I decided to work on an actual dataset. So go ahead and download the Black Friday dataset from Kaggle here. This dataset records more than 50,000 records of consumer purchases on a Black Friday Sale. Say you want an answer to what is the total purchase done by men and women of each age-group? Or what is the mean purchase done by men and women of different city categories?", "Simple, sketch a pivot table with the code below,", "The syntax of pivot_table has four important parameters, one is values which is the column or list of columns to be aggregated. The index and columns can be a single column or a list of columns. The aggfunc is a function or list of functions that are applied to aggregate data. We can use mean, min, max, sum, median and many more functions on our aggregate.", "Many times the data that we have to work on contains missing values, i.e. either the data was never recorded or it simply didn\u2019t exist. By \u201cmissing\u201d we mean NA(\u2018not available\u2019). While NaN is the default missing value marker, we need to be able to easily detect this value in all kinds of different types: float, int, boolean, general object. In many cases, however, there are chances of getting \u2018None\u2019 which also should be considered as missing or not available.", "Often there will be a need to combine or concatenate two Series or two Dataframes. In this Section, you would learn to do the same. I personally use this method when I have to combine training and testing samples into one single dataframe. So go ahead and practice the below commands in your own notebook.", "A long article, wasn\u2019t it? But I hope that it was informative and easy to understand as well. One can read thousands of article and move ahead. However, the real understanding of things comes when we get hands-on practice. I insist that you practice the above-mentioned examples in the gists thoroughly in your system.", "Open to corrections or discussions(and compliments too!\ud83d\ude04). Until next time, learners!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "The lifelong learner, a wild traveler, and a happy and tiny soul! :)"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe4dd4b943aba&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@richa_yadav?source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@richa_yadav?source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": "Richa Yadav"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd95da4b4960c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&user=Richa+Yadav&userId=d95da4b4960c&source=post_page-d95da4b4960c----e4dd4b943aba---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe4dd4b943aba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe4dd4b943aba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.nationalgeographic.com/travel/destinations/north-america/mexico/2017-travel-photographer-of-the-year-colima-volcano/", "anchor_text": "PERSEVERANCE"}, {"url": "https://towardsdatascience.com/python-for-data-science-from-scratch-part-i-390f01d91748", "anchor_text": "here"}, {"url": "https://pandas.pydata.org/", "anchor_text": "Pandas"}, {"url": "https://unsplash.com/@djmle29n?utm_source=medium&utm_medium=referral", "anchor_text": "Debbie Molle"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://pandas.pydata.org/pandas-docs/version/0.23.4/generated/pandas.DataFrame.html", "anchor_text": "here"}, {"url": "https://www.kaggle.com/mohansacharya/graduate-admissions#Admission_Predict.csv", "anchor_text": "dataset from kaggle"}, {"url": "https://www.kaggle.com/mehdidag/black-friday", "anchor_text": "here"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.interpolate.html#pandas.DataFrame.interpolate", "anchor_text": "this"}, {"url": "https://github.com/anna-list/Python-for-Data-Science-part-2.git", "anchor_text": "here"}, {"url": "https://medium.com/tag/data-science?source=post_page-----e4dd4b943aba---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----e4dd4b943aba---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data?source=post_page-----e4dd4b943aba---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/tag/python-programming?source=post_page-----e4dd4b943aba---------------python_programming-----------------", "anchor_text": "Python Programming"}, {"url": "https://medium.com/tag/data-munging?source=post_page-----e4dd4b943aba---------------data_munging-----------------", "anchor_text": "Data Munging"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe4dd4b943aba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&user=Richa+Yadav&userId=d95da4b4960c&source=-----e4dd4b943aba---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe4dd4b943aba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&user=Richa+Yadav&userId=d95da4b4960c&source=-----e4dd4b943aba---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe4dd4b943aba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe4dd4b943aba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e4dd4b943aba---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e4dd4b943aba--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@richa_yadav?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@richa_yadav?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Richa Yadav"}, {"url": "https://medium.com/@richa_yadav/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "282 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd95da4b4960c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&user=Richa+Yadav&userId=d95da4b4960c&source=post_page-d95da4b4960c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F855b7d284282&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-for-data-science-from-scratch-part-ii-e4dd4b943aba&newsletterV3=d95da4b4960c&newsletterV3Id=855b7d284282&user=Richa+Yadav&userId=d95da4b4960c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}