{"url": "https://towardsdatascience.com/the-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb", "time": 1683005950.640535, "path": "towardsdatascience.com/the-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb/", "webpage": {"metadata": {"title": "All The Python Code Behind The \u201cMagic Formula Article Analyzer\u201d | by Martin Andersson Aaberge | Towards Data Science", "h1": "All The Python Code Behind The \u201cMagic Formula Article Analyzer\u201d", "description": "You probably have some favorite writers. What if there was a way to analyze their successful articles and learn from them? Well, there is one way you can do just this..."}, "outgoing_paragraph_urls": [], "all_paragraphs": ["You probably have some favorite writers. What if there was a way to analyze their successful articles and learn from them? Well, there is one way you can do just this and that is what I am doing with my python analyzer tool.", "In this article, I will go through, and share, all of the code behind the tool so you can analyze your own favorite writers.", "If you haven\u2019t read it already, head over to the original article where I break it down and do the actual analysis.", "The tool only needs a CSV file with certain data and will instantly output the statistics:", "I will go through my code in this article, step by step, so you can get a better understanding of what I have been thinking and maybe you can optimize, refactor and rewrite it into something better.", "Why hasn\u2019t he talked about pandas yet?", "I am using statistics, datetime, and tabulate for this tool. pandas and matplotlib paired up with jupyter would probably be a perfect mix. To be honest, I didn\u2019t know it well enough when I started. If I were to do it again, I would probably use a setup like that.", "Let\u2019s have a look at how the tool is set up!", "Depending on the size of the program, you could have several classes. Articles, Writers, and Publications are all valid.", "main.py is using the Article class together with a CSV file to dissect the data. main.py is also outputting all the data.", "The setup I ended up with:", "You can follow along with this testdata.csv file if you like:", "Let\u2019s start with the Article Class.", "This class contains data on the article itself. We are sending the headline, what publication it belongs to, data, read time, claps, and responses.", "A set of methods return data when you ask for it.", "Here is the complete code for the article class.", "The constructor of this class holds valuable data that we will get from the CSV file. Nothing fancy here\u2026", "I like to include the __str__ method so I can print the object itself if I need to know what data it holds. With this method, we can create an object and print it to see what data the constructor holds (or whatever you decide the __str__ should print)", "This is quite a simple method function and it could have been written in one line:", "Hyphens are often used in headlines and we don\u2019t want those in our word count. We have to remove it.", "An alternative (which I actually prefer) could be using list comprehension:", "It\u2019s a bit harder to read for a beginner so I wanted to include both alternatives.", "This method function is checking if the word \u2018you\u2019 is in any of the words in the headline.", "Articles with \u2018you\u2019 usually speak to the user with some tips and tricks and it is interesting to see how many of the top articles use \u2018you\u2019 in some way.", "We can cycle through each word behind the scenes because a headline is a string and we are checking if the letter combination \u2018you\u2019 is anywhere in the headline.", "This code will also catch words like \u2018yourself\u2019, but it has a major flaw. It will also catch words like \u2018youth\u2019, \u2018youtube\u2019 or other words with \u2018you\u2019 \ufe0fanywhere in them \ud83e\udd37\ud83c\udffc\u200d\u2642\ufe0f", "The next methods will deal with this differently. It is a safer setup we should also be using for the you-method.", "This method function shares the logic of the previous one, but it has a predefined list of the words we would like to check.", "It will check for \u2018I\u2019, \u2018I\u2019ve\u2019 and \u2018I\u2019m\u2019. It will not catch words just starting with \u2018I\u2019 like the example above because we are pre-defining a list of words we want to use.", "This method function is identical to the one above.", "This method function is almost identical to the previous two, but it has an extra step (checking letters of the word and not just the word) to make sure it catches words like \u20186+\u2019", "An alternative to making a list we loop through is to run it all through one if-statement. I can\u2019t decide which is prettier, but they are both valid alternatives.", "This is shorter, but maybe harder to read if the statement is too long.", "Notice that I check money against self._headline.lower() so I don\u2019t have to worry about Capital letters like \u2018Money\u2019.", "I also check for the dollar sign, $, and the word \u2018dollar\u2019 (and thereby also dollars)", "The code has a few ratio method that checks the ratio of claps and responses per minute.", "The get methods are used to return anything we might need later, like all the constructor variables.", "It is time to write the main tool that solves all the analysis questions we may have.", "The structure of the main file is set up like this:", "Before we go through the code, here it is:", "There isn\u2019t really a whole lot going on here. We pass a filename to the procedure and it reads it using the csv.reader.", "We use next(datareader) to skip the headlines before looping through the lines and append them to the article_list. This will be our data for the rest of the program.", "All the counters are set up very similarly. We define a counter, loop through the article objects, and using the article methods we increment the counter.", "This is one of the counters that are set up a bit differently. We use list comprehension to populate a list with headline word count before we use the statistics.median method to find the median.", "I wanted to create a dictionary for the read_time data. This way we can access how many times an X minutes article was written.", "the dict will look like this:", "This means that 2 minute articles were found 1 time, 3 minute articles were found 2 times and so on and so forth.", "We do a quick check to see if the read_time key is in the dict already. If it is not, we create it. If it does exist, we increment it.", "With a function like this, we can ask for an overview of the read_time data any time we want.", "Using the read_time_summary() dict we can easily get the average read_time value.", "To find the median read_time we use the statistics.median function again. The function requires a list so we will use the read_time_summary function to create this list and return the median.", "publication_summary has the same logic as read_time_summary", "It is time for output. Output is what we are essentially after. This is the representation of our data.", "I have written the different outputs as procedures so we can turn them on and off as we wish.", "There are two types of output structures.", "The formula for the list output is this:", "The table outputs prints data with the tabulate method", "Here are the output procedures and their terminal printed representation", "This is the first time we use the tabulate method. When we loop through the publication_dict we can use the key and the value to create the list we send to the tabulate method.", "We also want to sort it before presenting it.", "tabulate lets us define the headers and table style. There are a lot of nice table styles. I went with fancy_grid for this tool.", "I suggest you check out all the alternatives here:", "This procedure handles dates. We want to see how many articles the author writes per month. We create a dict with the month as a key and the number of articles that were written that month as value. This way we can also find average values. Super nifty \ud83d\udc4d\ud83c\udffc", "To make the program easier to use, I decided to just set 4 weeks per month. If you set up a dict with days/month {\u2018Jan\u2019:31 , \u2018Feb\u2019:28\u2026} you could get a perfect calculation.", "This procedure is not something I used a lot, but it is a nice way to be able to gather information per article and print it out so you can inspect them closer.", "As with the previous procedure, traction data is used to inspect articles.", "It assigns a score to the article based on claps/min and responses/min.", "There are probably several ways to write this procedure. If you know a better way, please let me know in the comments. I believe this can be optimized.", "This procedure outputs a table with the top 10 articles based on either clap ratio (how many claps you got per read_time minute) or response ratio (how many responses you got per read_time minute).", "First, we populate a list with the articles where we append a tuple containing the headline (as an identifier) and the ratio value.", "Sorting the board is done with a nifty little line we used before:", "With a sorted board, we only need the top 10 articles:", "Then tabulate is used to output the table.", "The final procedure! The actual magic formula. This is using much of the top 10 logic and looks very similar.", "All the valuable analytic data for a good article is in this table. It is up to us to make good use of the data or just read it for fun.", "This procedure executes all the output we want. The way this is set up makes troubleshooting quite easy. Just comment out the sections you are done with and focus on the ones you are working on.", "This project outputs some valuable information based on article data that is available to everyone. All the data here is located in the article cards you see scrolling down the page of an author.", "If you are a data scientist, your eyes probably bleed now from seeing all the manual work we could have done using pandas, but it is a nice experimental project focusing on writing some good procedures and functions along with handling real data.", "If I were to do something similar again, I would definitely use pandas and matplotlib together with something like jupyter.", "I hope you enjoyed the ride :) Grab the code and try it yourself with your favorite author and let me know how it goes.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "CG supervisor with 18 years of experience in the Animation- and VFX industry. Focus: UX, Writing, Programming, Productivity. Contact: martinandersson@me.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe821d889fdb&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e821d889fdb--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e821d889fdb--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://martinaaberge.medium.com/?source=post_page-----e821d889fdb--------------------------------", "anchor_text": ""}, {"url": "https://martinaaberge.medium.com/?source=post_page-----e821d889fdb--------------------------------", "anchor_text": "Martin Andersson Aaberge"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F864fda338dba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&user=Martin+Andersson+Aaberge&userId=864fda338dba&source=post_page-864fda338dba----e821d889fdb---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe821d889fdb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe821d889fdb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@kellysikkema?utm_source=medium&utm_medium=referral", "anchor_text": "Kelly Sikkema"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://medium.com/better-marketing/7-ways-you-can-find-the-magic-formula-of-great-successful-writers-d32001d6ac4e", "anchor_text": "7 Data Points to Compile the Magic Formula of Successful Medium WritersAnalyzing why 3 top writers do so well, with datamedium.com"}, {"url": "https://pixabay.com/users/janjf93-3084263/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=3614766", "anchor_text": "janjf93"}, {"url": "https://pixabay.com/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=3614766", "anchor_text": "Pixabay"}, {"url": "https://www.pexels.com/@ag-z-1866835?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "AG Z"}, {"url": "https://www.pexels.com/photo/grayscale-photo-of-person-standing-while-holding-a-newspaper-3483786/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Pexels"}, {"url": "https://pypi.org/project/tabulate/", "anchor_text": "tabulate table style format alternatives"}, {"url": "https://www.pexels.com/@olly?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Andrea Piacquadio"}, {"url": "https://www.pexels.com/photo/woman-in-red-long-sleeve-writing-on-chalk-board-3769714/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Pexels"}, {"url": "https://medium.com/tag/programming?source=post_page-----e821d889fdb---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----e821d889fdb---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----e821d889fdb---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/python3?source=post_page-----e821d889fdb---------------python3-----------------", "anchor_text": "Python3"}, {"url": "https://medium.com/tag/analysis?source=post_page-----e821d889fdb---------------analysis-----------------", "anchor_text": "Analysis"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe821d889fdb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&user=Martin+Andersson+Aaberge&userId=864fda338dba&source=-----e821d889fdb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe821d889fdb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&user=Martin+Andersson+Aaberge&userId=864fda338dba&source=-----e821d889fdb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe821d889fdb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e821d889fdb--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe821d889fdb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e821d889fdb---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e821d889fdb--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e821d889fdb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e821d889fdb--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e821d889fdb--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e821d889fdb--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e821d889fdb--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e821d889fdb--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e821d889fdb--------------------------------", "anchor_text": ""}, {"url": "https://martinaaberge.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://martinaaberge.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Martin Andersson Aaberge"}, {"url": "https://martinaaberge.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.3K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F864fda338dba&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&user=Martin+Andersson+Aaberge&userId=864fda338dba&source=post_page-864fda338dba--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F79c52f78638a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-magic-formula-article-analyzer-all-the-python-code-behind-it-e821d889fdb&newsletterV3=864fda338dba&newsletterV3Id=79c52f78638a&user=Martin+Andersson+Aaberge&userId=864fda338dba&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}