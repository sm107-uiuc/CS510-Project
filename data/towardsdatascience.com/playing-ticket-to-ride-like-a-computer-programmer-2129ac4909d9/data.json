{"url": "https://towardsdatascience.com/playing-ticket-to-ride-like-a-computer-programmer-2129ac4909d9", "time": 1683010673.1385531, "path": "towardsdatascience.com/playing-ticket-to-ride-like-a-computer-programmer-2129ac4909d9/", "webpage": {"metadata": {"title": "Playing Ticket-to-Ride like a computer programmer | by Rakesh Chintha | Towards Data Science", "h1": "Playing Ticket-to-Ride like a computer programmer", "description": "Applying graph theory and network analysis concepts and thus build profitable scoring strategies and blocking strategies to play a board game like Ticket-to-Ride more effectively."}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Ticket_to_Ride_(board_game)", "anchor_text": "Ticket to Ride Wiki", "paragraph_index": 1}, {"url": "https://networkx.github.io/", "anchor_text": "networkx", "paragraph_index": 2}, {"url": "https://github.com/genielab/network_analysis_ticket_to_ride", "anchor_text": "Github repository", "paragraph_index": 37}], "all_paragraphs": ["Ticket-to-ride is one of the very few strategic board games and it requires that players need a lot of planning and strategy building in the process. With the simple application of network analysis and graph theory concepts, it is possible that one can play this game even more efficiently. In this article, I will share some of my results from the computational analysis on the Ticket-to-ride board game. Also, I will discuss how to build the best strategies for this game.", "Before we proceed, let me clarify that this article is not to introduce the game or its rules to you, it is expected that the audience of this article is familiar with the game. Anyways, for those of you who are unfamiliar about the game and its rules, visit this page Ticket to Ride Wiki", "We will be using the popular python package networkx to build the graph structures. To fit in the current context, cities are represented as nodes and segments between cities can be represented as edges. Then we construct the network using the below code.", "Once the network is constructed, we can quickly see the basic info using the code below.", "It can be noted from above that the network has 47 cities (nodes) and 90 tracks (edges).", "In network theory, the degree of a node is the number of edges that it is connected to, which translates to the number of tracks that a city is connected to. Based on a degree distribution chart shown below (Fig-1), it can be observed that the degree of all cities ranges between 1\u20137. About 15 cities have a degree of 4 and 14 cities have a degree of 3. There is only one city with a maximum degree of 7 and two cities with a degree of 6.", "Also, the network theory term edges translate to the track segment, edge weight translates to the track length in the current context. From the edges distribution chart below (Fig-2) that nearly 33 edges have a track weight of 2, 26 edges with a weight of 4, 25 edges with a weight of 3. There are 2 edges with a weight of 6. There is only one edge with a weight of 8 which happens to be the track segment running between Petrograd-Stockholm. Just by claiming this route, you can buckle up 21 points.", "As expected, the level of difficulty of this game increases as the number of players increase. This is evident from the below ratios.", "For e.g, in a 3-player game, only 10% of the cities have a degree less than 3 which means blocking other players is difficult so that would be an easy game for each player involved. However, blocking probabilities are more in 4-player and 5-player games. In a 5-player game, a huge number of cities nearly 72% have a degree less than 5 which means there is more room for blocking strategies by other players hence the game becomes more difficult.", "Fig-4 (below) shows the destination card points distribution. It can be observed that there are very few long routes about 3 destination cards with 21 points each and 3 cards with 20 points each. A vast number of cards are short routes with a big chunk about 13 cards with 8 points each.", "Let us now define some common properties of the network:", "Some of these network parameters are calculated as below. It can be noted from below that the network has a radius of 5, a diameter of 9.", "Based on these network properties, we can make the following observations:", "Certainly, some cities are more important than others. This can be measured with a variety of centrality measures, clustering coefficient, connectivity, and efficiency.", "All the above properties can be deduced from the network as below:", "The above code creates a data frame cities_df as below (only 5 rows shown below)", "Below are a few observations we can make from the results:", "Apart from centrality measures and clustering, we can also measure each city\u2019s importance by certain attacking strategies. The importance of anything is better known only when it is gone. So, we can iteratively remove one city at a time from the network and measure the change in certain properties such as connectivity, efficiency, etc. Removing a city in this context means that your opponents have claimed all routes around that city and you are blocked out with respect to that city. This process can be done using the code below:", "The above code will generate a data frame node_importance_df as shown below (only 5 rows shown):", "Below are a few observations we can make from the node importance results:", "In the context of the game, it is relatively hard that anyone gets blocked out for a city but its fairly easy to get blocked out on a route segment hence knowing the importance of certain edge segments is more useful in this game. The importance of each route segment can be gauged by edge betweenness centrality, and change in factors such as average connectivity, average clustering coefficient, efficiency.", "Using the following code, we can calculate betweenness centrality of every edge:", "Below are a few observations we can make from Fig-11 and Fig-12:", "Let us now assess each edge\u2019s importance based on some attacking strategies similar to what we have done in the previous section for nodes importance. This can be done using the code below:", "The above code will produce a data frame result which looks like below (only 5 rows are shown):", "Below are a few observations we can make from the edge importance results:", "What if you know the art of picking the right cards? Of course, that is quite possible but only if you know the underlying numbers. Using the code below we can calculate the shortest path characteristics of all the destination cards.", "The above code will generate a data frame as below (only 10 rows shown):", "Below are a few observations we can make from the shortest path results:", "On any route, the shortest path completion requires the least number of locomotives but does not necessarily fetch you maximum points. During the course of the game, its quite common for the players to make slight detours especially for gaining few extra points.", "Let us analyze the route Palermo-Moskva in more detail. From the destination card analysis, we can see that the shortest path for the route Palermo-Moskva fetches you a total of 54 points at the cost of 20 locomotives. However, if you have more time, you are more likely to plan a detour for gaining extra points. So how do you do that? Well, here you need to carefully consider various features associated with every alternate path so as to make good gains. For e.g, if there is not much time left in the game, you might want to select a path that has less path length because completing every segment of the path length costs you a turn. Also, you should be able to cover the cost of your selected path so path cost becomes an important factor in selecting an optimal path sometimes. Sometimes, path profitability makes more sense especially when you want more return on your investment.", "Deducing all the alternate routes between given source and destination requires finding all simple paths throughout the network which could sometimes lead to an indefinite time especially for large networks. Hence we will only find all those alternate paths which are just 2 segments more than the shortest path which simplifies our process. Below is the code fragment which essentially does that.", "Using the above method, we generate all the alternate paths for the route Palermo-Moskva You can carefully analyze the below paths and select the most optimal path depending on your criteria. Similarly, alternate paths can be deduced for any given route.", "In the previous section, we have seen alternate scoring strategies. However, you need to be aware of what it takes for others to block you to complete your desired route. Using Mininum edge cut for any route, we can find out the list of most critical edges if all are blocked would mean that you cannot complete that route.", "For example for the same route discussed above Palermo-Moskva, it takes 3 edges for anyone to knock you down. In other words, it essentially means that you need to make smart choices to build on these edges relatively sooner and leaving less chance for others to block you.", "From the minimum edge cut analysis, we can make the following observations:", "While each one of you has a different take on the game, it is always good to know the details discussed here such as when to go for shortest path and when to take a detour from the shortest path in favor of some extra points, etc, how to block someone or how to avoid being blocked, what segments to watch out and what segments you can stress less about, etc. etc. Hopefully, you enjoyed reading this article.", "All the code used in this analysis can be downloaded from this Github repository.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist \u2014 Risk Management, American Express"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F2129ac4909d9&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----2129ac4909d9--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2129ac4909d9--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@rakesh.chintha?source=post_page-----2129ac4909d9--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@rakesh.chintha?source=post_page-----2129ac4909d9--------------------------------", "anchor_text": "Rakesh Chintha"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4881375b45cb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&user=Rakesh+Chintha&userId=4881375b45cb&source=post_page-4881375b45cb----2129ac4909d9---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2129ac4909d9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2129ac4909d9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@mirapolis?utm_source=medium&utm_medium=referral", "anchor_text": "Dave Photoz"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://en.wikipedia.org/wiki/Ticket_to_Ride_(board_game)", "anchor_text": "Ticket to Ride Wiki"}, {"url": "https://networkx.github.io/", "anchor_text": "networkx"}, {"url": "https://github.com/genielab/network_analysis_ticket_to_ride", "anchor_text": "Github repository"}, {"url": "https://medium.com/tag/network-analysis?source=post_page-----2129ac4909d9---------------network_analysis-----------------", "anchor_text": "Network Analysis"}, {"url": "https://medium.com/tag/data-science?source=post_page-----2129ac4909d9---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----2129ac4909d9---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/board-games?source=post_page-----2129ac4909d9---------------board_games-----------------", "anchor_text": "Board Games"}, {"url": "https://medium.com/tag/ticket-to-ride?source=post_page-----2129ac4909d9---------------ticket_to_ride-----------------", "anchor_text": "Ticket To Ride"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2129ac4909d9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&user=Rakesh+Chintha&userId=4881375b45cb&source=-----2129ac4909d9---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2129ac4909d9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&user=Rakesh+Chintha&userId=4881375b45cb&source=-----2129ac4909d9---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2129ac4909d9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2129ac4909d9--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F2129ac4909d9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----2129ac4909d9---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----2129ac4909d9--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----2129ac4909d9--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----2129ac4909d9--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----2129ac4909d9--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----2129ac4909d9--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----2129ac4909d9--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----2129ac4909d9--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----2129ac4909d9--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@rakesh.chintha?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@rakesh.chintha?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Rakesh Chintha"}, {"url": "https://medium.com/@rakesh.chintha/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "14 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4881375b45cb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&user=Rakesh+Chintha&userId=4881375b45cb&source=post_page-4881375b45cb--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fbc963bee5e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fplaying-ticket-to-ride-like-a-computer-programmer-2129ac4909d9&newsletterV3=4881375b45cb&newsletterV3Id=bc963bee5e0&user=Rakesh+Chintha&userId=4881375b45cb&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}