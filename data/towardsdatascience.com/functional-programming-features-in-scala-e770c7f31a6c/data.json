{"url": "https://towardsdatascience.com/functional-programming-features-in-scala-e770c7f31a6c", "time": 1682996950.177658, "path": "towardsdatascience.com/functional-programming-features-in-scala-e770c7f31a6c/", "webpage": {"metadata": {"title": "Functional Programming Features In Scala | by Kevin Lawrence | Towards Data Science", "h1": "Functional Programming Features In Scala", "description": "In this post, I\u2019ll highlight some of the features of the language that enable intuitive creation of functional code for distributed systems and data operations. As per the official documentation\u2026"}, "outgoing_paragraph_urls": [{"url": "https://docs.scala-lang.org/tour/higher-order-functions.html", "anchor_text": "official documentation", "paragraph_index": 2}, {"url": "http://allaboutscala.com/tutorials/chapter-8-beginner-tutorial-using-scala-collection-functions/scala-reduce-example/", "anchor_text": "great link", "paragraph_index": 11}, {"url": "https://github.com/kevvo83/scala-spark-ln/blob/2c4b7b9cc6d3d19118bd71360f1c36584444ebff/coursera-hmiller-week2/src/main/scala/stackoverflow/StackOverflow.scala#L57", "anchor_text": "here", "paragraph_index": 16}], "all_paragraphs": ["I\u2019ve been exploring functional programming with Scala and its eco system for the past few months.", "In this post, I\u2019ll highlight some of the features of the language that enable intuitive creation of functional code for distributed systems and data operations.", "As per the official documentation, Functions are first class objects in Scala, which means that they can -", "An example of a function taking another function as an argument is the map() function in Scala's standard collections library.", "When working with standard Scala collections, it\u2019s also very intuitive to chain operators, especially with the infix notation. In the small code example below, I\u2019m defining a list of numbers from 1 to 20, filtering on even numbers and then summing them up.", "The _ is the wildcard operator - in the case of maps and filters, it refers to the value in the collection.", "The recommended way to do operations on all the items in a collection is to use the operators map, flatMap, or reduce.", "In case those operators don\u2019t meet a use case\u2019s requirements, it\u2019s very useful to write a tail-recursive function to operate on all the items in a collection.", "The code example below shows a tail-recursive function definition to compute the factorial of a number.", "In Scala, a tail-recursive function, as above, can be optimised by the compiler (using the @tailrec annotation above) to occupy just 1 stack frame - so there's no chance of a stackoverflow error even for many levels of recursion. This is possible out-of-the-box, without any need for frameworks or plugins.", "As mentioned above, the recommended way is to use collections operators (such as reduce, etc.). As a demo of the simplicity of the collection's APIs, the above factorial function can also be implemented by the 1-liner below -", "To conceptually understand reduce, check out this great link!", "(Also do check out the explanations of foldLeft, foldRight, map, flatMap to understand some commonly used data operations!)", "Case classes can be instantiated very easily with no boiler plate code, such as the example below.", "Just 1 case class .. line above does the following useful things -", "While the ease of use is great, case classes are the recommended way to store immutable data instances in Scala. For example, in a big data application, each line of a large datafile can be modelled by a case class and stored.", "An example of the use of a case class to store data is here.", "In the linked example, the function rawPostings models each line of the datafile as an instance of case class Posting. Eventually, it returns a dataset of type RDD[Posting].", "In Scala, objects such as case classes, regular classes, and collections can be decomposed through pattern matching.", "You can use pattern matching to -", "The code example below shows how to use pattern matching to decompose a Seq.", "The cons operator (::) creates a list made of the head ( x) and the rest of the list (called the tail, y).", "In OOP, a static variable is sometimes used in a class to store state or property across multiple instantiated objects.", "However, there is no static keyword in Scala. Instead, what we use are Companion Objects aka Singleton Objects. A Companion Object is defined using the object keyword and has the exact same name as the class that its accompanying.", "The companion objects can define immutable values, which can then be referenced by methods in the class.", "There are 2 common patterns to use companion objects in Scala -", "Most application code checks for Null/None types. Null types are handled a little differently in Scala \u2014 the construct used is called an Option. This is best demonstrated with an example.", "In a language like Python, if None: checks would be quite common throughout the codebase. In Java, there would be try-catch blocks that would handle thrown exceptions. Option s allow for focusing on the logic flow with minimal diversions for type or exception checks.", "A standard way of using Options in Scala is for your custom functions to return Option[String] (or Int, Long, etc.). Let's look at the Map structure's get() function signature -", "One (intuitive) way to use this is to chain it with the getOrElse() function as shown below -", "A very useful way of using Options is together with a collection operator like flatMap that directly handles the types for you transparently.", "And that\u2019s it for this post from me! I\u2019m looking into concurrent systems with Akka and the Actor model currently. In a future post, I\u2019ll share my learnings on that topic (and its relationship to Scala\u2019s approach to functional programming).", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe770c7f31a6c&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@kevvo83?source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@kevvo83?source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": "Kevin Lawrence"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F272a4517159e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&user=Kevin+Lawrence&userId=272a4517159e&source=post_page-272a4517159e----e770c7f31a6c---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe770c7f31a6c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe770c7f31a6c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@aprvm?utm_source=medium&utm_medium=referral", "anchor_text": "apoorv mittal"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://docs.scala-lang.org/tour/higher-order-functions.html", "anchor_text": "official documentation"}, {"url": "http://allaboutscala.com/tutorials/chapter-8-beginner-tutorial-using-scala-collection-functions/scala-reduce-example/", "anchor_text": "great link"}, {"url": "https://unsplash.com/@gecko81de?utm_source=medium&utm_medium=referral", "anchor_text": "Patrick Baum"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/kevvo83/scala-spark-ln/blob/2c4b7b9cc6d3d19118bd71360f1c36584444ebff/coursera-hmiller-week2/src/main/scala/stackoverflow/StackOverflow.scala#L57", "anchor_text": "here"}, {"url": "https://gist.github.com/kevvo83/05d2f6cca40d9a5336722c3d52a14873", "anchor_text": "http://github.com"}, {"url": "https://medium.com/tag/scala?source=post_page-----e770c7f31a6c---------------scala-----------------", "anchor_text": "Scala"}, {"url": "https://medium.com/tag/functional-programming?source=post_page-----e770c7f31a6c---------------functional_programming-----------------", "anchor_text": "Functional Programming"}, {"url": "https://medium.com/tag/data?source=post_page-----e770c7f31a6c---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/tag/data-engineering?source=post_page-----e770c7f31a6c---------------data_engineering-----------------", "anchor_text": "Data Engineering"}, {"url": "https://medium.com/tag/data-science?source=post_page-----e770c7f31a6c---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe770c7f31a6c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&user=Kevin+Lawrence&userId=272a4517159e&source=-----e770c7f31a6c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe770c7f31a6c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&user=Kevin+Lawrence&userId=272a4517159e&source=-----e770c7f31a6c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe770c7f31a6c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe770c7f31a6c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e770c7f31a6c---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e770c7f31a6c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@kevvo83?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@kevvo83?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Kevin Lawrence"}, {"url": "https://medium.com/@kevvo83/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "44 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F272a4517159e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&user=Kevin+Lawrence&userId=272a4517159e&source=post_page-272a4517159e--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F272a4517159e%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffunctional-programming-features-in-scala-e770c7f31a6c&user=Kevin+Lawrence&userId=272a4517159e&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}