{"url": "https://towardsdatascience.com/performance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7", "time": 1683017906.8022232, "path": "towardsdatascience.com/performance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7/", "webpage": {"metadata": {"title": "Performance Testing \u2014 Python And SkLearn With Julia and Lathe | by Emma Boudreau | Towards Data Science", "h1": "Performance Testing \u2014 Python And SkLearn With Julia and Lathe", "description": "In the past ten years or so, machine-learning has come a long and incredible way from its humble beginnings. These days, we are blessed to have competing ecosystems that have their advantages and\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["In the past ten years or so, machine-learning has come a long and incredible way from its humble beginnings. These days, we are blessed to have competing ecosystems that have their advantages and cool parts compared to some of the other software available. A package that correlates well with this machine-learning rise is the industry-standard for pre-built and easy to use models, SkLearn.", "SkLearn originated out of a Google Summer Of Code competition, similar to the origin story of many other open-source jewels. The package has been developed to be incredibly easy and quite diverse. SkLearn is mostly written in C, but is primarily used through a high-level Python interface.", "In comparison, the Julia ecosystem has a few competing packages, but typically most of the packages are segmented instead of inclusive. That being said, one really cool package that I have been working on for over a year is Lathe.jl. Today I figured we would see how my skills have stacked up, discuss what optimizations might be made further to help improve the Lathe model, and see if the results indicate something cool happening with Lathe.", "For our data today, I decided to utilize some categorical and continuous data I had residing in some comma separated value (.CSV) files. Let\u2019s go ahead and grab our dependencies and read our data in.", "In Julia, we are going to use DataFrames to work with data frames, Lathe to split our data, grab out model from, and CSV to read our data in.", "Now we will use a sink argument to read our data in as a type that is exported from a package. In this example, we will be grabbing the DataFrame type from DataFrames.jl and using it to dispatch the type with CSV.read().", "If you\u2019d like to read more about sink arguments, I have an article you can check out here:", "Alternatively, if you would like to learn more about how to use the DataFrames package, you can check out another cool article I did here:", "Next, let\u2019s go ahead and drop any missing values from this data frame:", "Now we are going to go ahead and use the TrainTestSplit() function from Lathe.preprocess which will return two data frames split at around 75 percent.", "Now I will make our feature and target as symbols so we can call the keys of our DataFrame:", "In Python, we are going to be using Pandas to read and manipulate our data. Similiarly to Lathe, SkLearn offers both a method for train test splitting data as well as the model we are using for today\u2019s example. When importing Pandas, I usually import Numpy on top of it because the two work fluidly together:", "Now we will use the pd.read_csv() method to read in a .CSV file as a data frame.", "Just as with Julia\u2019s DataFrames, I have a more in-depth look at working with DataFrames in Pandas using some cool tricks, which you can see here:", "Just as we did in Julia, we are now going to drop any missing values, split, and select a target and a feature.", "Both Lathe and Sklearn are going to take 1-dimensional arrays in this example. The code is the same for Julia and Python to put our data into 1-dimensional arrays.", "With Python, our data is going to be stuck in the Pandas series type, so we will also need to change that. The reason this needs to be changed is because SkLearn is going to expect an array shaped like this:", "But our pd.Series type only supports this shape, and has no functions to change such a thing:", "Basically, we need to pivot-table a single array into shape (-1, 1). In order to do this, we are first going to turn each series into a NumPy array. In my experience, this has been a significant advantage of pulling data into arrays and matrices prior to training.", "Since accuracy is most certainly not an objective of these models, they should be relatively quick to throw together. The model we are comparing is a RandomForestClassifier, which is a categorical model that typically does well with bagging/boosting algorithms and high-class counts. We can grab the model from SkLearn.ensemble in Python.", "We can test the speed of the model using the %timeit IPython magic command. Of course, we will use the fit() and predict() functions that are part of the classifier\u2019s class:", "As for using this classifier in Julia, we do not need an initialization. That being said, all of the calculation for initialization is going to be timed for Julia and not Python. In Julia, we can grab the model from Lathe.models. We will be timing it with the IJulia @time macro.", "Finally, for hyper-parameters we have max_depth and n_estimators. These two key-word arguments are the Lathe equivalent of max_depth and n_trees. Using these equal arguments we can compare the results between both models in speed and categorical train accuracy.", "To preface the speed test, I would like to provide some observations in terms of comparisons between the two packages and languages as a whole that will explain what the results will likely indicate. Firstly, the Random Forest Classifier is an unofficial and unstable model in Lathe and Julia, and probably shouldn\u2019t be used in any serious work (yet.)", "The biggest downside to the Lathe edition of this great classification model is that Lathe lacks a prominent boosting back-end and so there are no boosting or bagging algorithms in play with the package. That being said, this will certainly be implemented prior to a new breaking release (0.2). That being said, while Lathe will likely be faster using its methodology. If you would like to learn more about the methodology and ideas behind Lathe for Julia, you can check out this classic article I wrote a while ago:", "With around 90,000 observations in my data frame, I thought it was probably a good idea to go with low tree counts. For my first general test, I decided to go with 200 trees with a max depth of 5. We don\u2019t need to run fit() on our Lathe model, we fit it with the constructor instead, so the syntax is the same for both languages with that exception. First we will need to initialize the model with the appropriate parameters:", "While Lathe has the speed advantage of not implementing boosting or bagging, SkLearn has the advantage of being worked on more and having initialization. Now let\u2019s use the IPython in-line magic macro %timeit and the IJulia @time macro and observe the results:", "We had an average of 10 seconds per loop over 7 runs with 1 loop each. This basically means that altogether the calculation took about 70 seconds. Lathe came in a bit faster with about 54 seconds total in compile time. Of course this is as I anticipated, but I am very curious to see how the accuracy will compare between these two models off these basic predictions. For fun. let\u2019s do another run with some slightly modified parameters:", "The product of four and seven is twenty-eight, meaning that Python calculated 75 trees with a max depth of 4 in in 28 seconds compared to 17. That\u2019s about a 40% drop in calculation speed, which I think is awesome!", "As I briefly touched on before, in terms of accuracy I certainly do not expect this model to perform as well as the SkLearn implementation. To be clear, there are many to-dos in the code and there are still a lot of things that need to be polished and improved. Regardless, we can evaluate our new model using the catacc function from Lathe.lstats:", "As for Python, we\u2019re going to use accuracy_score() from sklearn.metrics:", "Just as before, we will fit and predict with our models, this time with 100 trees, a max depth of 4, and an anticipated return to yhat.", "Now let\u2019s evaluate the models, starting with the SkLearn model:", "100-percent accuracy is pretty great! Let\u2019s see how the Lathe model performs:", "I think it is really interesting and fun to compare these different models between performance and accuracy! It seems like the Lathe model is really keeping up, falling slightly behind the SkLearn implementation without boosting in accuracy, and running up to 40-percent faster. Something I thought was really cool about this code is how the methodology of Lathe made the code sometimes be an exact replica, or slightly simplified version of the SkLearn implementation. It is exciting where SkLearn-like models could take the Julia programming language, and further \u2014 great pre-processing and ability to be deployed makes predictive modeling possible all from one easy place.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff5516fa497d7&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f5516fa497d7--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f5516fa497d7--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://emmettgb.medium.com/?source=post_page-----f5516fa497d7--------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=post_page-----f5516fa497d7--------------------------------", "anchor_text": "Emma Boudreau"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c----f5516fa497d7---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff5516fa497d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff5516fa497d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/emmettgb/Emmetts-DS-NoteBooks/blob/master/Python3/RFLG%20Speed%20PY.ipynb", "anchor_text": "Python Notebook"}, {"url": "https://github.com/emmettgb/Emmetts-DS-NoteBooks/blob/master/Julia/RFLG%20SPEED%20JL.ipynb", "anchor_text": "Julia Notebook"}, {"url": "https://towardsdatascience.com/what-is-a-sink-argument-caf77dab6ac5", "anchor_text": "MediumEdit descriptiontowardsdatascience.com"}, {"url": "https://towardsdatascience.com/how-to-manipulate-data-with-dataframes-jl-179d236f8601", "anchor_text": "MediumEdit descriptiontowardsdatascience.com"}, {"url": "http://twitter.com/time", "anchor_text": "@time"}, {"url": "https://towardsdatascience.com/how-im-using-functional-oop-for-machine-learning-533c1d764628", "anchor_text": "How I\u2019m Using FUNCTIONAL OOP For Machine-LearningHow and why i\u2019m applying the object-oriented paradigm to Julia machine-learning.towardsdatascience.com"}, {"url": "http://twitter.com/time", "anchor_text": "@time"}, {"url": "http://twitter.com/time", "anchor_text": "@time"}, {"url": "https://medium.com/tag/programming?source=post_page-----f5516fa497d7---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----f5516fa497d7---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/julia?source=post_page-----f5516fa497d7---------------julia-----------------", "anchor_text": "Julia"}, {"url": "https://medium.com/tag/data-science?source=post_page-----f5516fa497d7---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----f5516fa497d7---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff5516fa497d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&user=Emma+Boudreau&userId=ea170050148c&source=-----f5516fa497d7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff5516fa497d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&user=Emma+Boudreau&userId=ea170050148c&source=-----f5516fa497d7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff5516fa497d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f5516fa497d7--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff5516fa497d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f5516fa497d7---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f5516fa497d7--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f5516fa497d7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f5516fa497d7--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f5516fa497d7--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f5516fa497d7--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f5516fa497d7--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f5516fa497d7--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f5516fa497d7--------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Emma Boudreau"}, {"url": "https://emmettgb.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "4.6K Followers"}, {"url": "https://twitter.com/emmettboudgie", "anchor_text": "https://twitter.com/emmettboudgie"}, {"url": "https://github.com/emmettgb", "anchor_text": "https://github.com/emmettgb"}, {"url": "https://ems.computer/", "anchor_text": "https://ems.computer/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff16bf42bb45f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-testing-python-and-sklearn-with-julia-and-lathe-f5516fa497d7&newsletterV3=ea170050148c&newsletterV3Id=f16bf42bb45f&user=Emma+Boudreau&userId=ea170050148c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}