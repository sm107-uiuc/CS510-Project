{"url": "https://towardsdatascience.com/what-is-good-code-an-actionable-introduction-1cad30551ad4", "time": 1683011952.9973881, "path": "towardsdatascience.com/what-is-good-code-an-actionable-introduction-1cad30551ad4/", "webpage": {"metadata": {"title": "What is good code? An actionable introduction. | Towards Data Science", "h1": "What Is Good code?", "description": "A Deep Dive of Clean Code Principles; Highlighting the value of readability in a multi authored, large & complex project whose end customer is a human."}, "outgoing_paragraph_urls": [{"url": "https://pratickroy.github.io/", "anchor_text": "https://pratickroy.github.io/", "paragraph_index": 63}], "all_paragraphs": ["In the following section, I will introduce the topic at hand, giving you a sense of what this post will cover, and how each argument therein will be approached. Hopefully, this will help you decide whether it will be worth investing your time, in reading the rest of the post. However, if you would rather get to the crux of the post fast, skip the following section. The Good Stuff awaits you there!", "Do you want to know the #5 simple tips that you must follow to become a great coder? Or, the secret sauce to upskilling your coding abilities, and landing that dream job in a tech giant?", "For, today I refuse to let you in on these powerful industry secrets. And, the reason I am doing this, is three-fold.", "And if there are, I am out of the club as well. Sigh!", "If you want to learn to write good code, so as to improve your resume, or be able to complete your next deliverable, then this is not the skill to learn. Writing good code is a team skill; it helps your peers, and if they practice it, it helps you. Simply put, writing good code, is the polite thing to do.", "The only time when it can help you directly, is if you happen to come back to a piece of code that you had written a long long time ago!", "Depending on the purpose of the code, the yardstick by which we measure its goodness will change. And, while I will touch upon a few different use cases, as part of this post, they will be primarily explored to add some context and some contrast, to the main use-case that I want to focus on for today.", "A large and sufficiently complex code-base, that is meant to be progressively worked on by many authors, across multiyear roadmaps, whose production environments are hosted in and have dependencies on elastic web services, and whose end customer is a human.", "Why we choose to restrict ourselves to these parameters will become self-evident as we explore further. But for now, let\u2019s introduce a simple and famous thought, on which we will base the rest of this post.", "\u201cCode is read far more often than it is written\u201d", "A very simple and to some extent a very obvious observation, but one that carries with it a significant insight. \u2014 Optimise code for human read operations.", "When we first learn to code, we write our Hello World programs, and slowly crawl on to simple data structures and algorithms. We are then introduced to the Big-O(s), and learn to think in terms of time and space complexity. And we carry this mental model of how to approach code throughout our academic years and then try to use the same to develop software products in our workspaces.", "Now this is a sound way to approach code, if our aim is to write code that the compiler/interpreter understands. For, in this approach, we become comfortable with the concept of global state, usage of setters everywhere, and writing any obscure complex logic (from a human perspective), as long as it generates byte codes that the Interpreter can crunch through faster.", "Now, we should not ignore the good that this approach brings to the table. Our programs work, take as little a space as possible, and runs as fast as possible. And, if code once written, was meant to be set in stone, this approach would have been the panacea to all of our woes, and we would live happily ever after. But the real world use case, for which we are trying to write good code, is far more fluid, and is far more messy.", "And in the messy real world, where Murphy\u2019s law reigns supreme, this approach brings with it a glaring tradeoff.", "We all know of those codebases, that we had worked on at some point of time, and would make a hundred excuses to avoid working on again. The reasons for this are many, but some of the most common ones, and the ones which have given me night terrors at one point or another, are.", "The code works (well, 7/10 times it works), but if you change a private method in an inner module meant for doing one thing, it breaks some existing feature in a completely different module, that does something completely different.", "Throughout the codebase, methods change their input parameters, and have more side-effects than snake oil. This makes it impossible to understand what is happening, without having to read the entire flow, down to its lowest details. Looking at you, System.out.println()[1][2] .", "Recently I was solving a competitive coding problem. I ended up with two solutions, a (somewhat) human readability optimised one, and a compiler optimised one.", "Here is the generic problem statement.", "Now let\u2019s implement the compiler optimised one.", "The code is small, and very efficient O(n). Great. But how does it work? Not that simple, right? You\u2019ll have to do a dry run or fire up the debugger before you start to have an understanding of how this code works.", "This code powers your customers\u2019 logistics systems, and there is a bug. Every minute you don\u2019t fix it thousands of your customers won\u2019t know if they have enough gas left to complete the journey. Would you want to be the one in charge of fixing the bug asap, in a code like this?", "When this code was written, the price of gas was cheap. So our customers did not care about the price, as long as they could complete their journey. Recently there has been a trade war between the country of operation and its oil and gas trading partner. Suddenly price is an important variable. Where should we put this logic?", "Now you may say that, \u201cHey, let the person who wrote this in the first place, take care of this requirement\u201d. \u2014 Well that person, might have switched teams, changed companies, or went on to become a Pokemon trainer. Who knows.", "The Codebase is the shared inheritance of the entire team/community. The Codebase should be immemorial. The developers should be fungible. If my absence means that the features I have developed become orphaned, then my code is a liability to that inheritance.", "So while this code is an asset (small, light and fast) for the present use case, the slightest of tremors, can turn it into a liability (difficult to understand, fix and expand).", "And in our messy real world, remember Murphys Law,", "\u201cAnything that can go wrong, will go wrong\u201d[3]", "Now let us turn to a more human readability optimised solution.", "Ok, so let\u2019s see what happens here.", "We don\u2019t even need to know what CircularRouteDetails does or how we evaluate whether the route can be completed, to understand at a high level what we are doing.", "Now if I as a reader want to know how some low level details work, i can dive into the methods and figure it out. So though the codebase is bigger, I as a reader can simply pick and choose what i want to know. In the first, I would be fumbling through a ten page dictionary that prints words in random order, and in the second, I will be methodically proceeding through a thousand page one, that follows a strict alphabetical ordering.", "The ability to do is a very powerful one, and one that is sadly under-appreciated.", "In this solution, the concepts and responsibilities are separated out into encapsulated portions of the code. Furthermore, the naming of the methods, classes and fields have been chosen with care to aid in the easy identification of said responsibilities. (The above code can be further improved, I agree, but you get the point). So now when a bug creeps in, I don\u2019t need to fumble about the entire codebase, I can go the portion where it is most likely that the issue is emanating from and fix it.", "If you want to checkout at the entire codebase, See here", "But wait, I hear you ask,", "\u201cHmm, I get your point. But the second solution is slower, and so on a day-to-day basis you will deliver slower results to your customers. Also, it will incur more hardware costs.\u201d", "All valid points, and I am glad you asked them!To answer this, I will redirect you to our use case definition. So let me reiterate.", "A large and sufficiently complex code-base, that is meant to be progressively worked on by many authors, across multiyear roadmaps, whose production environments are hosted in and have dependencies on elastic web services, and whose end customer is a human.", "So now with this use case as the context, let us answer this question in detail.", "\u201cBut the second solution is slower, so on a day to day basis you will deliver slower results to your customers\u201d", "For the sake of measurable efficiency differences, let us assume that the first solution takes O(n) and the second solution takes O(n\u00b2). The number of gas stations is 1000 and the operation pertaining to each step takes 1\u00b5s. Hence the first solution will take 1ms and the second will take 1s. Definitely, an enormous difference in electronic terms, but hardly noticeable from a human perception point of view. A human being will hardly be able to tell whether a page loads in 1ms or 1s. And what was a core requirement of our use case? \u2014 \u201cand whose end customer is a human.\u201d", "But this explanation is a tad disingenuous. It works because of the values I chose. What if there were 10\u2076 gas stations? Then the first solution will take 1s and the second will take 10\u2076s. 10\u2076s will definitely get noticed by a human user. Here, the first solution is defiantly the better one. Or is it?", "When designing a real world application that is expected to handle 10\u2076 entities at a go, you will not want to make that a synchronous operation in the first place. 10\u2076 entities, each with possibly its own database lookups and inter-service calls, are 10\u2076 potential points of failures. We need to ensure that throttling & retry mechanisms, state management and idempotency safeguards, are put in place. If your code is supposed to handle a million entries in a single-threaded synchronous call, maybe take another pass at that design.", "The point I am trying to make here is that scalability is for the most part a high-level architectural concern. It can be solved in multiple ways, many of which will have no bearing on the code you write. If you are having to worry about meeting your scale requirements at code method level, and for which you are having to compromise on readability, then first we should consider re-examining the architecture once.", "However, say you are building a high frequency trading platform, where every nanosecond counts. Here it makes sense to opt for the first solution. But if the end customer is a human, a few seconds here or there is usually not a problem for them. However, if by sacrificing readability it takes your team several months to deliver a new feature that does not break every other thing in your codebase, or it takes you several hours more to identify and patch a severe bug, that prevents your customer from using your application, that actually affects your customer. So key take away.", "Always Code as per your customer.", "Also it will incur more hardware costs.", "True. But today hardware is cheap.[4]", "Now I am not advocating wastefulness. Even if it's cheap, it still costs money, and it still costs the environment.", "But if you were to sacrifice readability to save on hardware costs, you\u2019ll end up, costing your team more. Because with low readability, more man hours needs to spent on bugs and on each new feature. And skilled man hours is far more expensive, both in financial and environmental terms. (I am not qualifying this statement here, because I think it a simple google search will suffice, but If you disagree, drop me a note, and we can discuss further )", "Code should be as optimised as possible, as long as it does not compromise comprehension.", "Hmm ok I hear you ask,", "\u201cMakes sense, but readability is a subjective entity. How do we measure it? To be able to enforce this in practise, I need to have some objective way of measuring it, Right? Otherwise its not that helpful\u201d", "Well, as you mentioned, it is a subjective quality, so while we cannot get an exact measurement, we can follow the famous WTFs per minute rule [5] to get a relative measurement, which if you think about it, is all we need.", "So a simple way to go about it is,", "Get your peers to read your code. The fewer number of times they get surprised while reading your code, the better the readability.", "Also one cool thing to notice. The parameters of the use case we mentioned are sufficiently vague, and if you think about it, many of the products we build and use in our day to day lives will fall within that description, including Medium. \u2014 I\u2019ll not explain further, but dwell on this for a minute. It will be worth it. :)", "Phew! That was a long post. However, there are a lot of nuances and questions that I have left out. So if you disagree with anything I said, or want to discuss further on any of the above, or engage further on any of the nuances I may have omitted from mentioning here, drop a note. I\u2019ll be more than happy to engage. Debating and discussing code is one of those few pleasures of life that can and should be enjoyed in the excess.", "Before you go, here is one last takeaway. If you often review code for codebases that meet the above use-case, and don\u2019t want to, have to, explain to the author at length what you expect to see in their code. Simply, send them a screenshot of this powerful and succinct (and heavily paraphrased) quote by Frank Underwood.", "There are 2 kinds of writers, those that write more and those that write less. I am the latter. I obsess over creating value and shun noise. If you want to read such content, consider subscribing.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Love to Code. Love to Write. Love to Write about Code. SDE-III at Amazon. One Word to Live By \u2014 Eudaimonia. Visit Me At : https://pratickroy.github.io/."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1cad30551ad4&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----1cad30551ad4--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1cad30551ad4--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://pratickroy.medium.com/?source=post_page-----1cad30551ad4--------------------------------", "anchor_text": ""}, {"url": "https://pratickroy.medium.com/?source=post_page-----1cad30551ad4--------------------------------", "anchor_text": "Pratick Roy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd0e73ebdbb0c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&user=Pratick+Roy&userId=d0e73ebdbb0c&source=post_page-d0e73ebdbb0c----1cad30551ad4---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1cad30551ad4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1cad30551ad4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/pratickRoy/Competitive", "anchor_text": "pratickRoy/CompetitiveA Repo for Solving Competitive Programming Questions, in both a clean & optimized way. GitHub is home to over 50\u2026github.com"}, {"url": "https://en.wikipedia.org/wiki/Side_effect_(computer_science)", "anchor_text": "Side effect (computer science)"}, {"url": "https://stackoverflow.com/questions/34552710/does-system-out-println-have-a-side-effect-in-java", "anchor_text": "Does System.out.println() have a side effect in Java?"}, {"url": "https://www.angelo.edu/faculty/kboudrea/cheap/cheap3_murphy.htm", "anchor_text": "Murphy\u2019s Law | Really Cheap Thoughts"}, {"url": "https://blog.codinghorror.com/hardware-is-cheap-programmers-are-expensive/", "anchor_text": "Hardware is Cheap, Programmers are Expensive"}, {"url": "http://reviewthecode.blogspot.com/2016/01/wtf-per-minute-actual-measurement-for.html#:~:text=WTF%20Per%20Minute%20-%20An%20Actual%20Measurement%20for%20Code%20Quality,-Cars%20have%20MPH&text=Developers%20have%20WTFPM%20(WTF%20per,more%20WTFPM%20they%20can%20attain.", "anchor_text": "WTF Per Minute \u2014 An Actual Measurement for Code Quality"}, {"url": "https://www.amazon.in/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882", "anchor_text": "Amazon Link For his book Clean Code."}, {"url": "https://pratickroy.medium.com/subscribe", "anchor_text": "Click Here To Subscribe :)Want to get notified when I write new stuff? Get an email whenever I publish!There are 2 kinds of writers, those that write more and those that write less. I am the latter. I obsess over creating value and shun noise. If you want to read such content, consider subscribing."}, {"url": "https://medium.com/tag/programming?source=post_page-----1cad30551ad4---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-development?source=post_page-----1cad30551ad4---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/coding?source=post_page-----1cad30551ad4---------------coding-----------------", "anchor_text": "Coding"}, {"url": "https://medium.com/tag/best-practices?source=post_page-----1cad30551ad4---------------best_practices-----------------", "anchor_text": "Best Practices"}, {"url": "https://medium.com/tag/clean-code?source=post_page-----1cad30551ad4---------------clean_code-----------------", "anchor_text": "Clean Code"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1cad30551ad4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&user=Pratick+Roy&userId=d0e73ebdbb0c&source=-----1cad30551ad4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1cad30551ad4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&user=Pratick+Roy&userId=d0e73ebdbb0c&source=-----1cad30551ad4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1cad30551ad4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1cad30551ad4--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F1cad30551ad4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----1cad30551ad4---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----1cad30551ad4--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----1cad30551ad4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----1cad30551ad4--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----1cad30551ad4--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1cad30551ad4--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1cad30551ad4--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----1cad30551ad4--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----1cad30551ad4--------------------------------", "anchor_text": ""}, {"url": "https://pratickroy.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://pratickroy.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Pratick Roy"}, {"url": "https://pratickroy.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "128 Followers"}, {"url": "https://pratickroy.github.io/", "anchor_text": "https://pratickroy.github.io/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd0e73ebdbb0c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&user=Pratick+Roy&userId=d0e73ebdbb0c&source=post_page-d0e73ebdbb0c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F845c21313586&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-good-code-an-actionable-introduction-1cad30551ad4&newsletterV3=d0e73ebdbb0c&newsletterV3Id=845c21313586&user=Pratick+Roy&userId=d0e73ebdbb0c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}