{"url": "https://towardsdatascience.com/my-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f", "time": 1683006647.489821, "path": "towardsdatascience.com/my-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f/", "webpage": {"metadata": {"title": "Random Forest Classifier in Python | by Joe Tran | Towards Data Science", "h1": "Random Forest Classifier in Python", "description": "In this article, I am using the dataset taken from my real technical test with a tech company for a data science position. You can get the data here (click Download ZIP). The exit_status here is the\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/joetrankang/data-is-life.git", "anchor_text": "here", "paragraph_index": 0}, {"url": "http://scikit-learn.org/stable/auto_examples/model_selection/plot_confusion_matrix.html", "anchor_text": "Source of the code", "paragraph_index": 24}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.RandomizedSearchCV.html", "anchor_text": "here", "paragraph_index": 38}, {"url": "https://bit.ly/3FElqxG", "anchor_text": "https://bit.ly/3FElqxG", "paragraph_index": 49}], "all_paragraphs": ["In this article, I am using the dataset taken from my real technical test with a tech company for a data science position. You can get the data here (click Download ZIP).", "Disclaimer: all the information described in the data are not real.", "The exit_status here is the response variable. Note that we are only given train.csv and test.csv. Thetest.csvdoes not have exit_status, i.e. it is only for prediction. Hence the approach is that we need to split the train.csv into the training and validating set to train the model. Then use the model to predict theexit_status in the test.csv.", "This is a typical Data Science technical test where you are given around 30 minutes to produce a detailed jupyter notebook and result.", "Oops, we saw NaN, let\u2019s check how many NaN we have", "Since there are 2600 rows in total, the number of rows with NAs here is relatively small. However, I do not remove NAs here because what if the test.csv dataset also has NAs, then removing the NAs in the train data will not enable us to predict the customers' behaviour where there are NAs. However, if the test.csv does not have any NAs, then we can go ahead and remove the NAs in the train dataset. But let\u2019s first check out the test.csv", "As expected, there are NAs in test.csv. Hence, we will treat NAs as a category and assume it contributes to the response variable exit_status.", "This step is useful later because the response variable must be an numeric array to input into RF classifier. Like I mentioned earlier, RF model is unable to read strings or any non-numeric datatypes.", "The id column does not add any meaning to our work because it will not affect whether the customer chose to stay or exit, so we should just remove it.", "Now, it is time to make NA a category. In Python, NaN is considered NAs. When encoded, those NaN will be ignored. Hence, it is useful to replace NaN with na, which is now a category called \u2018na\u2019. This will be taken into account when encoding later on.", "Now, let\u2019s create a list of categorical variables", "This is my favorite step because by recreating this new constructor, I do not need to do any transformation for any X dataframe when passing into the model. This constructor will automatically handle the categorical variables and leave numeric variables untouched. How convenient!!!", "The remainder = 'passthrough' allows the constructor to ignore those variables that are not included in features_to_encode.", "Now our inputs are ready. Let\u2019s train the RF classifier.", "Let\u2019s first create our first model. Of course one can start with rf_classifier = RandomForestClassifier(). However, most of the time this base model will not perform really well (from my experience at least, yours might differ). So I always start with the following set of parameters as my first model.", "I would recommend to always start with the model where oob_score = True because it is better to use out-of-bag samples to estimate the generalization accuracy. An oob error estimate is almost identical to that obtained by k-fold cross-validation. Unlike many other nonlinear estimators, random forests can be fit in one sequence, with cross-validation being performed along the way.", "Now, let\u2019s combine our classifier and the constructor that we created earlier, by using Pipeline", "pipe is a new black box created with 2 components: 1. A constructor to handle inputs with categorical variables and transform into a correct type, and 2. A classifier that receives those newly transformed inputs from the constructor.", "In this example, 1 is Positive and 0 is Negative", "I will not go through the meaning of each term above because this article is not meant to be a detailed document of Random Forest algorithms. I assume we all know what these terms mean. Of course, if you are unsure, feel free to ask me in the comment section.", "predict_proba(dataframe)[:,1] gives the predicted probability distribution of class label 1 from the dataframe. This is important to calculate ROC_AUC score. You may ask why class label 1 and not 0. Here is what I got from sklearn document:", "For y_score, \u2018The binary case \u2026 the scores must be the scores of the class with the greater label\u2019. That is why we need to get label 1 instead of label 0.", "Now, we need to plot the ROC curve", "The result looks good. There is very little difference between Test and Train result, indicating that our model does not overfit the data.", "One can just simply type confusion_matrix(y_test, y_pred) to get the confusion matrix. However, let\u2019s take a more advanced approach. Here, I create a function to plot confusion matrix, which prints and plots the confusion matrix. (Adapted from Source of the code)", "First, let\u2019s inspect how many feature importance values are there in the model", "There are 38 features in total. However, there are only 15 columns in X_train. This is because the model pipe automatically encodes the categorical variables in X_train. For example, the gender column in X_train is transformed into 2 columns Female and Male.", "Therefore, to match the features to their feature importance values derived from rf_classifier, we need to get all those corresponding columns in the encoded X_train.", "We only have an array of feature importances, but there are both categorical and numerical features, how do we know which value belongs to which feature?", "Remember the col_trans, the constructor we created earlier? The col_trans.fit_transform(X_train) will give the encoded X_train.", "For X_train, there are 3 numeric variables, with values being 30, 70.75 and 14 respectively. For the encoded X_train, these 3 numeric values are placed after all the categorical variables. This means that for the rf_classifier.feature_importances_ all the encoded categorical variables are shown first, followed by the numeric variables", "Ok, now that we know, let\u2019s create a proper encoded X_train.", "The function encode_and_bind encodes the categorical variables and then combine them with the original dataframe.", "Cool, now we have 38 columns, which is exactly the same as the 38 features shown in the rf_classifier.feature_importances_ earlier.", "Since the model performs very well, with high accuracy, precision and recall, there is actually little need to tune the model. However, if our first model did not perform well, the steps below can be taken to tune the model.", "Let\u2019s look at the parameters used currently", "Now, I create a grid of parameters for the model to randomly pick and train, hence the name Random Search.", "Now, I first create a base model, then use random grid to select the best model, based on the ROC_AUC score, hence scoring = 'roc_auc'.", "We will do 100 iterations with 3-fold cross validation. More information about the arguments can be found here.", "Alternatively, we can use pipe again, so that we don\u2019t need to encode the data", "Note that the 2 methods might give slightly diffferent answers. This is due to the randomness in selecting the parameters.", "The same codes used in Section 3 can be applied here again for ROC and Confusion matrix.", "This set of parameters make the model perform just slightly better than our original model. The difference is not huge. This is understandable because our original model already performed well with higher scores (accuracy, precision, recall). So tuning some hyperparameters might not add any significant improvement to the model.", "Now that we have the best model, let\u2019s use it for predictions and compile our final answer to submit.", "We see all No. Let\u2019s check to make sure there are Yes in the column too.", "I hope this can be a helpful reference guide for you guys as well. You can use this guide to prepare for probably some technical tests or use it as a cheatsheet to brush up on how to implement Random Forest Classifier in Python. I will definitely keep on updating this as I find more useful functions or tricks that I think can help everyone tackle many data science problems fast, without much need to look up on platforms like StackOverflow, especially when sitting for a technical test, where time is limited.", "If there are any other tricks or functions that you think are important, please let me know in the comment section below. Also, I welcome any constructive feedback from everyone.", "Thank you for your read. Have a great day and happy programming!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist | Ex-Google | Product Analytics | MLOps | Subscribe to receive my stories \ud83d\udcc8: https://bit.ly/3FElqxG"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ffedb84f8cf4f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@joetrankang?source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@joetrankang?source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": "Joe Tran"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F60093eff6455&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&user=Joe+Tran&userId=60093eff6455&source=post_page-60093eff6455----fedb84f8cf4f---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffedb84f8cf4f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffedb84f8cf4f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@guigui1410?utm_source=medium&utm_medium=referral", "anchor_text": "Guillaume Henrotte"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/joetrankang/data-is-life.git", "anchor_text": "here"}, {"url": "http://scikit-learn.org/stable/auto_examples/model_selection/plot_confusion_matrix.html", "anchor_text": "Source of the code"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.RandomizedSearchCV.html", "anchor_text": "here"}, {"url": "https://medium.com/tag/data-science?source=post_page-----fedb84f8cf4f---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----fedb84f8cf4f---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/interview?source=post_page-----fedb84f8cf4f---------------interview-----------------", "anchor_text": "Interview"}, {"url": "https://medium.com/tag/programming?source=post_page-----fedb84f8cf4f---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----fedb84f8cf4f---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffedb84f8cf4f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&user=Joe+Tran&userId=60093eff6455&source=-----fedb84f8cf4f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffedb84f8cf4f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&user=Joe+Tran&userId=60093eff6455&source=-----fedb84f8cf4f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffedb84f8cf4f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ffedb84f8cf4f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----fedb84f8cf4f---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----fedb84f8cf4f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@joetrankang?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@joetrankang?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Joe Tran"}, {"url": "https://medium.com/@joetrankang/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "711 Followers"}, {"url": "https://bit.ly/3FElqxG", "anchor_text": "https://bit.ly/3FElqxG"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F60093eff6455&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&user=Joe+Tran&userId=60093eff6455&source=post_page-60093eff6455--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F989ea71b7e15&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmy-random-forest-classifier-cheat-sheet-in-python-fedb84f8cf4f&newsletterV3=60093eff6455&newsletterV3Id=989ea71b7e15&user=Joe+Tran&userId=60093eff6455&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}