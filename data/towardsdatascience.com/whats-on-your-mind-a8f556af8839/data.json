{"url": "https://towardsdatascience.com/whats-on-your-mind-a8f556af8839", "time": 1683011351.969089, "path": "towardsdatascience.com/whats-on-your-mind-a8f556af8839/", "webpage": {"metadata": {"title": "What\u2019s On Your Mind?. Part 2: Machine Learning for Motor\u2026 | by Devin Shah | Towards Data Science", "h1": "What\u2019s On Your Mind?", "description": "When we were children, the world was new to us. We couldn\u2019t understand it but we could see it, touch it, smell it, and much more with our sensory organs. Everything except interpretation. But as we\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/connecting-your-thoughts-9ebb24b4c68d", "anchor_text": "Part 1 of 4: The Beginning of the Journey Into Brain Computer Interfaces", "paragraph_index": 0}, {"url": "https://www.ibm.com/watson", "anchor_text": "Watson", "paragraph_index": 2}, {"url": "http://cs.ua.edu/people/crawford/", "anchor_text": "Dr. Chris Crawford", "paragraph_index": 3}, {"url": "https://htilua.org/", "anchor_text": "HTIL", "paragraph_index": 3}, {"url": "https://towardsdatascience.com/connecting-your-thoughts-9ebb24b4c68d", "anchor_text": "here", "paragraph_index": 6}, {"url": "https://www.researchgate.net/publication/325529881_WebBCI_An_Electroencephalography_Toolkit_Built_on_Modern_Web_Technologies", "anchor_text": "Researchers at the Human Technology Interaction Lab", "paragraph_index": 7}, {"url": "https://bci.js.org/", "anchor_text": "BCI.js", "paragraph_index": 7}, {"url": "https://www.dataschool.io/simple-guide-to-confusion-matrix-terminology/", "anchor_text": "here", "paragraph_index": 9}, {"url": "https://textbooks.math.gatech.edu/ila/matrix-multiplication.html", "anchor_text": "here", "paragraph_index": 10}, {"url": "https://iopscience.iop.org/article/10.1088/1741-2552/aab2f2/meta", "anchor_text": "10 Year Review of Classification Systems", "paragraph_index": 12}, {"url": "https://www.sciencedirect.com/topics/neuroscience/premotor-cortex#:~:text=The%20premotor%20cortex%2C%20which%20is,neurons%20in%20the%20spinal%20cord.", "anchor_text": "Here", "paragraph_index": 14}, {"url": "https://towardsdatascience.com/connecting-your-thoughts-9ebb24b4c68d", "anchor_text": "Part 1", "paragraph_index": 17}, {"url": "https://towardsdatascience.com/connecting-your-thoughts-9ebb24b4c68d", "anchor_text": "Part 1", "paragraph_index": 26}, {"url": "https://mathworld.wolfram.com/FourierTransform.html", "anchor_text": "Fourier transforms", "paragraph_index": 33}], "all_paragraphs": ["Part 1 of 4: The Beginning of the Journey Into Brain Computer Interfaces", "Part 2 of 4: Machine Learning for Motor Imagery", "When we were children, the world was new to us. We couldn\u2019t understand it but we could see it, touch it, smell it, and much more with our sensory organs. Everything except interpretation. But as we grew older our teachers, parents, etc. taught us how society and the physical world functions, allowing us to eventually form new perspectives to understand the world around us. As the age of big data and ever-improving computational machines arrived, researchers started to think of machines the same way; blank slates that when fed collections of data (acting as the teacher), it can start to form new insights about the system described by the dataset. Particularly the most famous example of this is IBM\u2019s Watson, an artificial intelligence capable of extracting important pieces of data and providing analysis and insights to predict workplace and industry outcomes. Watson was trained using large financial and enterprise datasets to allow it to provide the insights that humans can\u2019t detect due to the large volumes of data. With these advances in machine intelligence, researchers have started to use learning systems in different fields, particularly the field of neuroscience and neural computation. Machine learning algorithms such as linear discriminant analysis (LDA) and support vector machines (SVM) can be used to detect patterns in brain waves that can lead to motor and emotional state classification.", "This series is an attempt to allow a person with no expertise in the brain-computer interface (BCI) area to understand what they are and how we can use machine learning to analyze brainwaves in unique ways. The project explored in this series is in collaboration with Dr. Chris Crawford of the Human Technology Interaction Lab (HTIL) at the University of Alabama. This also goes to demonstrate that amateur scientists can use basic electroencephalogram (EEG) devices to extract and analyze brainwaves, and in turn can deploy large-scale open source platforms so the general public can experiment with their own brain data.", "Here we will cover the basics behind machine learning and its application to brainwave classification with:", "In order to implement the section of the project described in this article, you will need the following:", "Part 1 of this series explored the Muse EEG, the Bluetooth system, and the project architecture; you can read it here.", "An EEG-based BCI project starts with the collection of nervous system data with systems of electrodes or compact hardware solutions such as the Muse EEG. That data is then transported to computing environments such as MATLAB where it is processed with filtering algorithms such as Fourier transforms (will be discussed later in the series) and classification algorithms such as LDA. Researchers at the Human Technology Interaction Lab at the University of Alabama realized that MATLAB analyses of brainwaves weren\u2019t modular and couldn\u2019t be distributed in applications that employed this type of mathematical modeling. They attempted to transport these algorithms to a more modular programming language such as C, but it was difficult for novice programmers to implement and had a steep learning curve. BCI.js was developed to solve these problems; it is a JavaScript library that is portable and relatively easy to use, open-source, and can be integrated with existing applications easily.", "BCI.js contains many modules that can aid in brain-computer interface application development, but the most important ones are the learn and classify functions for machine learning algorithms, the confusion matrix function, and the transpose function. The learn and classify functions represent the two main phases of a machine learning system: learning and classification. The learning step is meant to act as the teacher in our earlier analogy, feeding data to the system with the purpose of teaching the program about the environment before being able to draw its own conclusions from new data. The classification step is where the program is able identify certain patterns based on new datasets with information learned with training data. To illustrate this, we will use linear discriminant analysis (LDA) as an example. LDA is an algorithm that draws a boundary between two data classes which allows for the classification of new data. We will cover the mathematics behind LDA later in the article, but as this is an example of learn and classify functions, the definition is sufficient. Below is an example of the LDA functions used to learn from existing data and classify new data. Class 1 and 2 represent two classes of data points ranging from 0 to 2 and 7 to 10 respectively. ldaParams is a variable that stores the learned optimization function from the ldaLearn function, and predictions stores the classification vector of the class that the unknownPoints belong to. We will cover optimization functions and how LDA actually learns in the next section, but just know that BCI.js provides simple implementations for machine learning algorithms that require no in-depth knowledge on the mathematics or statistics of them.", "The confusion matrix function is the next most important function that BCI.js has to offer. A confusion matrix is a performance metric on a classification system that utilizes the identification of classification outcomes as false positives/negatives and true positives/negatives. The terminology of a confusion matrix can be difficult, but here is a resource to familiarize yourself with such terms.", "This confusion matrix will allow us to analyze our machine learning model\u2019s performance and tweak the system to minimize the amount of false positives and false negatives in the system. The next most important, and probably the simplest, function is the transpose function, which does one basic thing: flips a matrix across the diagonal (stretching from top left to bottom right) while maintaining the original order of the elements. In most matrices, the top left, middle, bottom right elements remain in their original position when transposed so that the original element ordering remains the same. The transpose function is useful as it allows a matrix to meet the requirements for matrix multiplication (see here for an in depth look into matrix dimensions when multiplying).", "The four functions, learn and classify, confusion matrix, and transpose, are extremely efficient in running machine learning models on brain data. It also allows for real time processing, with some machine learning algorithms implemented by BCI.js taking just under 4 ms to complete. Considering that some machine learning models can take hours to train, BCI.js allows for extremely fast and efficient experimentation. Now that we\u2019ve established these four functions, we\u2019ll cover the experimentation flow and the LDA and common spatial algorithms (CSP) so that we can start implementing them on brain data for motor state classification.", "If you are interested in reviewing other common classification strategies used with EEG data, check out this paper: 10 Year Review of Classification Systems.", "Before we jump into the technical details about the two machine learning algorithms, let\u2019s step back for a moment. Once the system is developed in its entirety, how should an experiment be executed? We can use the basic outline of a machine learning model as the basis of our protocol; we know it needs a training phase and a testing phase. As mentioned earlier, the training phase \u201cteaches\u201d the model to understand the labeled data so that in the testing phase, it can search for and identify similar patterns in new data. A protocol can be established off of this concept; we need a series of training and testing phases to gain insight into a particular cognitive task. In this project and the series, the main cognitive task focused on is motor imagery as I was interested in exploring the feasibility of detecting imagined movements with Muse.", "This hardware was not designed to be ideal for motor imagery, but it is more than sufficient for simple motor tasks. Here is an review on the premotor cortex and the hardware for detection of imagined movements.", "In this section, I will use the example of right hand vs. left hand movement detection to describe an ideal experimentation flow that you can then extrapolate to classify different cognitive activities.", "In right hand vs. left hand movement detection, our goal is to identify whether the subject is moving his/her right or left hand (or even a mix of both). We can achieve this by establishing two training sets and one testing set: one training set for right hand data, another one for left hand data, and one testing set for unknown data points in the testing phase. Temporally, we space it out into three blocks, where the subject records themselves moving their right hand for a certain period of time, then their left hand, then hand movements that they want the model to classify. For example, Subject A moves their right hand during the recording period, then their left hand, and for the testing set, they decide to move their right hand only. The model has enough time to train itself with the two training sets before it classifies the movements described in the testing set. Below is an architecture diagram of the experimentation flow.", "In Part 1, I mentioned that in order to save computation time we limit the amount of data points (buffer) stored in the training and testing sets to around 2000. You can always increase or decrease this amount, but it is important to note that training and testing collection periods must be long enough to fill the limit set by your buffer. If not, then the unequal sizes of arrays make it impossible for the model to train properly. To give some perspective, at a sample rate of 256 (256 values collected per second), it would take around 10 seconds to fill a buffer of 2000 data points. My advice to you when you are developing your own applications is to select those two variables to: minimize computation time, maximize collection efficiency, and to limit the training and testing time. Minimizing computation time and maximizing collection efficiency are machine learning model standards, but why do we want to limit the training and testing time? Even though more training data will make your model accurate, with brain computer interface experimentation, subjecting your participant to more than one minute of activity is tedious and redundant; most meaningful data would come earlier in the experiment.", "Experimentation flow is extremely important in BCI applications and it must be established even before a machine learning model is created and tested. Knowing the flow of your experiment can actually give you clarity as to what performance task your model is trying to optimize, making it easier to develop the model. Now the fun begins, as we segue into the two types of basic machine learning models we will cover: LDA and CSP.", "Linear discriminant analysis (LDA) is a method used in statistics and pattern recognition to characterize two or more classes of data by finding a linear combination of specific features. While that definition seems complicated, the intuition behind the algorithm is actually fairly simple. Let\u2019s use the example of weather; we will use two metrics to determine the type of day with respect to its weather: temperature and precipitation percentage (likelihood that it will rain). For our two classes, hot and cold days, a higher temperature and a lower precipitation percentage is indicative of a hot day, the opposite for cold days. When plotted on a graph with the x-axis modeling temperature and the y-axis modeling precipitation, the points in the lower right corner are hot and the ones in the upper left hand corner are cool. Below is a plot of 16 different days (a mix of hot and cool), with eight in each class. LDA will find the center of each class and define a slope and intercept form function that separates the two classes. Therefore, the model has learned what days are hot or cool from the training data. If you to provide weather information for the 17th day to the model (as part of the testing set), the model can classify it appropriately.", "In this section, we will cover the mathematics behind LDA and how it can be applied to motor imagery tasks. Feel free to skip the mathematics section if you are not comfortable with statistics; it will not limit your understanding of the application section of LDA.", "The formal definition of classification is a process that arranges data according to shared characteristics and qualities. How can we mathematically arrange these data points into their respective classes? In classification, we consider Y classes, categories i, and an input vector X, assuming that there are only two categories/classes. We can classify X as belonging to the class that maximizes:", "Classification in LDA relies on Bayes Theorem, which states that:", "We relate the probability of X being classified in each class to each subsequent value being classified as X within such class, essentially identifying data clusters within each subclass. Since we want Bayes Theorem to provide a probability density function that has favorable mathematical properties, the formula for the normal distribution is used:", "The standard model provided by the normal distribution predicts variable behavior, and if this prediction does not hold, the model\u2019s performance deteriorates. When substituting the normal distribution into Bayes Theorem, maximizing the resulting value will lead to a correct classification prediction. When simplified, the discriminant function is:", "where the mean of inputs in class i (two in our case) and the inverse of the covariance between our two variables (standard deviation) are used. X is classified in the class that yields the highest discriminant function value. When evaluating the discriminant function for both classes, you can use the resulting equation for classification of inputs. If there are more than two classes, evaluate the functions above across i classes; however, for motor imagery purposes, two classes is enough. In order to draw a decision boundary shown in the weather example, you can take the average of the two slopes from the discriminant function outputs for both classes, which would accurately draw a boundary between the two data clusters. Now, let\u2019s move on to our example of motor imagery with right hand vs. left hand movement.", "As we established in Part 1, the data collected in the training phase is stored in a React Context so that it can be accessed at any time from any component. By creating a separate component for LDA, we can compartmentalize our code while still being able to pass values to and from that component. BCI.js\u2019 LDA learn and classify can be used to learn the parameters from the training data and classify new points. In the learn function, the slope and intercept of the decision boundary are calculated, so there\u2019s no need to implement the above calculations yourself. Before we can input data into the LDA learn function, we must compute the LDA parameters from CSP algorithms, which is shown below.", "While we haven\u2019t discussed CSP yet, we employ a CSP signal project algorithm to separate and amplify the two signals. The computeFeatures function is used to compute the parameters and amplify the signals of the training sets, which we can then use in the learn function to calculate the parameters of LDA. Below is a code snippet of the flow of data from pre-processing to LDA parameters.", "We first transpose the datasets to comply with matrix multiplication rules as explained earlier. Then, we learn the parameters for CSP so that we can isolate and amplify the two different signal types, one for right hand movement and the other for the left hand. We then generate feature vectors from the CSP parameters and each of the training sets which will aid in training the classifier. Next, the LDA parameters are learned and two variables, theta and b, are generated. Theta describes the change in x and y, and b describes the intercept of the linear function. The slope m is calculated by taking the negative change in y and dividing it by the change in x, and b is normalized using the distribution of the x-axis. We can use theta and b to describe an equation y = mx+b which defines our decision boundary. Below are two examples of LDA plotted and with a decision boundary.", "This visualization represents two datasets comparing right and left hand movement. In this experiment, the subject physically moves either their left or right hand to collect two sets of training data. At the top of the image, a graph is shown in which the subject mixed both right and left hand movements in both training sets, which confused the model. In the bottom of the image, the subject thought of left hand movement in one training set and right hand movement in the other, and the model accurately separated the right hand dataset (red) and the left hand dataset (blue) based on signal amplitude and used the discriminant function to draw a decision boundary between the two datasets. With a properly trained model, testing data can be accurately classified based on the plotted line and users can visually see the classification of their brain waves.", "That\u2019s all for LDA! We covered the mathematics behind the algorithm and how it can be applied to draw decision boundaries in motor imagery experiments. Next, we will cover common spatial pattern (CSP) algorithms and how they can be used to isolate signals to aid in classification.", "Another type of algorithm used for the classification of motor states in multi-channel EEG devices is the common spatial pattern, or CSP. The method uses linear transformations to project the multi-channel EEG signals into a subspace to generate spatial pattern vectors. In this section, since our weather example in the previous paragraph doesn\u2019t apply, we will use our recurring example of right hand vs. left hand movement classification. While we won\u2019t cover the mathematics of a common spatial pattern as it is beyond the scope of this series, examples of CSP with respect to motor imagery will be explored.", "CSP algorithms essentially isolate and project signals. To use an example, if you have two audio signals playing at the same time, a CSP algorithm can isolate and project the signals onto the same subspace, allowing you to analyze both individually. We\u2019ve seen a similar example of this with motor imagery and LDA, where the CSP algorithm projected the two signals (right hand vs. left hand) on two separate axes. An example of this is shown below, where the red points represent right hand movement and the blue points represent left hand movement. The red points are projected across the x-axis and the blue points are projected along the y-axis, which is key for the LDA to generate parameters from each signal. The green points are from the testing set, and are projected across both axes, meaning that there was both right and left hand movements.", "CSP algorithms don\u2019t act as a form of learning itself, but rather processes the data to make the learning process easier. BCI.js combines CSP and LDA to create a powerful system for processing and classification. However, there are other forms of processing such as Fourier transforms that can provide even better accuracy and performance. Fourier transforms can be combined with support-vector machine (SVM) algorithms to provide a higher classification accuracy in certain situations. We will discuss that system in Part 3. However, to build a simple classification system, CSP is a great processing method to better help classification algorithms extract features from EEG data.", "In this article, we have covered BCI.js, experimentation flow, and the CSP-LDA classification model combination. You can now implement this solution to start extracting meaningful data from brain waves. Below are some helpful tips:", "In Part 3 of the series, we will build on our discussion of machine learning by diving into some more complex algorithms, such as Fourier transforms and SVM algorithms. We will also cover a way to improve model accuracy and data quality through a method known as a data bandpass filter.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Science and Tech Enthusiast, Research Intern @ Stanford School of Medicine"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fa8f556af8839&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----a8f556af8839--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a8f556af8839--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@devinshah?source=post_page-----a8f556af8839--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@devinshah?source=post_page-----a8f556af8839--------------------------------", "anchor_text": "Devin Shah"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F54f3cb198f24&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&user=Devin+Shah&userId=54f3cb198f24&source=post_page-54f3cb198f24----a8f556af8839---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa8f556af8839&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa8f556af8839&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/connecting-your-thoughts-9ebb24b4c68d", "anchor_text": "Part 1 of 4: The Beginning of the Journey Into Brain Computer Interfaces"}, {"url": "https://www.ibm.com/watson", "anchor_text": "Watson"}, {"url": "http://cs.ua.edu/people/crawford/", "anchor_text": "Dr. Chris Crawford"}, {"url": "https://htilua.org/", "anchor_text": "HTIL"}, {"url": "https://bci.js.org/", "anchor_text": "BCI.js"}, {"url": "https://reactjs.org/docs/getting-started.html", "anchor_text": "React documentation"}, {"url": "https://choosemuse.com/muse-2/", "anchor_text": "Muse EEG Version 2"}, {"url": "https://towardsdatascience.com/connecting-your-thoughts-9ebb24b4c68d", "anchor_text": "here"}, {"url": "https://www.researchgate.net/publication/325529881_WebBCI_An_Electroencephalography_Toolkit_Built_on_Modern_Web_Technologies", "anchor_text": "Researchers at the Human Technology Interaction Lab"}, {"url": "https://bci.js.org/", "anchor_text": "BCI.js"}, {"url": "https://www.dataschool.io/simple-guide-to-confusion-matrix-terminology/", "anchor_text": "here"}, {"url": "https://textbooks.math.gatech.edu/ila/matrix-multiplication.html", "anchor_text": "here"}, {"url": "https://codeforwin.org/2015/08/c-program-to-find-transpose-of-matrix.html", "anchor_text": "Codeforwin"}, {"url": "https://iopscience.iop.org/article/10.1088/1741-2552/aab2f2/meta", "anchor_text": "10 Year Review of Classification Systems"}, {"url": "https://www.sciencedirect.com/topics/neuroscience/premotor-cortex#:~:text=The%20premotor%20cortex%2C%20which%20is,neurons%20in%20the%20spinal%20cord.", "anchor_text": "Here"}, {"url": "https://towardsdatascience.com/connecting-your-thoughts-9ebb24b4c68d", "anchor_text": "Part 1"}, {"url": "https://towardsdatascience.com/connecting-your-thoughts-9ebb24b4c68d", "anchor_text": "Part 1"}, {"url": "https://mathworld.wolfram.com/FourierTransform.html", "anchor_text": "Fourier transforms"}, {"url": "https://towardsdatascience.com/connecting-your-thoughts-9ebb24b4c68d", "anchor_text": "Part 1"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----a8f556af8839---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/brain-computer-interface?source=post_page-----a8f556af8839---------------brain_computer_interface-----------------", "anchor_text": "Brain Computer Interface"}, {"url": "https://medium.com/tag/cortex?source=post_page-----a8f556af8839---------------cortex-----------------", "anchor_text": "Cortex"}, {"url": "https://medium.com/tag/brain?source=post_page-----a8f556af8839---------------brain-----------------", "anchor_text": "Brain"}, {"url": "https://medium.com/tag/statistics?source=post_page-----a8f556af8839---------------statistics-----------------", "anchor_text": "Statistics"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa8f556af8839&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&user=Devin+Shah&userId=54f3cb198f24&source=-----a8f556af8839---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa8f556af8839&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&user=Devin+Shah&userId=54f3cb198f24&source=-----a8f556af8839---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa8f556af8839&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a8f556af8839--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fa8f556af8839&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----a8f556af8839---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----a8f556af8839--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----a8f556af8839--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----a8f556af8839--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----a8f556af8839--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----a8f556af8839--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----a8f556af8839--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----a8f556af8839--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----a8f556af8839--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@devinshah?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@devinshah?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Devin Shah"}, {"url": "https://medium.com/@devinshah/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "20 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F54f3cb198f24&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&user=Devin+Shah&userId=54f3cb198f24&source=post_page-54f3cb198f24--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F54f3cb198f24%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhats-on-your-mind-a8f556af8839&user=Devin+Shah&userId=54f3cb198f24&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}