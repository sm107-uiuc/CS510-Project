{"url": "https://towardsdatascience.com/the-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4", "time": 1683010758.8935921, "path": "towardsdatascience.com/the-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4/", "webpage": {"metadata": {"title": "The Curious Case of MySQL, PostgreSQL, and Hive | by Ruben Winastwan | Towards Data Science", "h1": "The Curious Case of MySQL, PostgreSQL, and Hive", "description": "In an era of Big Data where the amount, size, and velocity of data are rapidly growing, knowing SQL is still an essential thing for Data Analyst and Data Scientist to know. SQL helps us to manage\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/sql-join-8212e3eb9fde", "anchor_text": "this article", "paragraph_index": 32}, {"url": "https://towardsdatascience.com/combining-tables-using-sql-f6ddfd5f8b6f", "anchor_text": "this article", "paragraph_index": 32}], "all_paragraphs": ["In an era of Big Data where the amount, size, and velocity of data are rapidly growing, knowing SQL is still an essential thing for Data Analyst and Data Scientist to know. SQL helps us to manage data in a traditional relational database (RDBMS), distributed cluster, or even in a cloud environment.", "If we are dealing with data in a traditional RDBMS, more often than not we are going to use DB engines like MySQL or PostgreSQL. However, as the amount and size of data are rapidly growing, we can\u2019t store all of the data solely with RDBMS. This is where we need the distributed cluster to store and process a massive amount of data and Hadoop facilitated it for us.", "If you\u2019re working with Hadoop ecosystem, chances are you\u2019re using Apache Hive for managing and querying structured data residing in Hadoop Distributed File System or HDFS.", "MySQL, PostgreSQL, and Hive all have similar SQL syntax that sometimes we assume that they will behave similarly according to a given SQL query. However, this is not the case. Let\u2019s dive into some scenario where at least one of PostgreSQL, MySQL, and Apache Hive behave differently given the same SQL syntax.", "Division is a tricky arithmetic operation for SQL engines to interpret, unlike the other operations such as addition, subtraction, and multiplication. If you add, subtract, or multiply two integers, you will always get an integer and this is not the case with division. You can divide two integers and get either a decimal or a rounding integer as the result, depending on which SQL engines that you use.", "In Hive and MySQL, if you perform a division between two integers with / operator, you will always get a decimal result.", "Meanwhile in PostgreSQL, if you perform a division between two integers with / operator, you will always get an integer result.", "Hence, if you use PostgreSQL, it is important to have in mind what kind of output you expect. If you want an integer result, you can write your SQL query as above. However, if you want a precise decimal result like the one in Hive and MySQL, you need to explicitly transform one of the operands to a decimal number.", "If you use MySQL or Hive and you want to get an integer result after performing a division of two integers, you need to use DIV operator instead.", "Comparing two strings could also yield to a different result on different SQL engines. Apache Hive and PostgreSQL are case-sensitive when it comes to string comparisons, meaning that uppercase and lowercase letters do matter. Let\u2019s take a look at the below example.", "Although both strings have the same letter, the query will return FALSE as both Hive and PostgreSQL are case sensitive.", "Meanwhile, if you use MySQL, the same query will return 1 or TRUE because MySQL is case insensitive when it comes to string comparisons. This means that MySQL interprets two strings as the same as long as they have the same letter, regardless whether they are written in uppercase or lowercase.", "It depends of which SQL engines that you use, you need to be mindful about the case sensitivity when you\u2019re referencing a table in the database. If you use PostgreSQL and Hive, then you don\u2019t need to worry about case sensitivity when referencing a table because they always convert the letter in lowercase.", "To make this point clearer, let\u2019s take a look at the example below.", "There is a table called \u2018customers\u2019 in the database. However, we referenced it as \u2018CusTomers\u2019 in the query. Hive and PostgreSQL will always convert the letter in lowercase, hence they understand that we want to reference table \u2018customers\u2019 instead of \u2018CusTomers\u2019", "However, this is not the case with MySQL. In MySQL, you need to reference the table as it is written in the database. If you referenced the table as \u2018CusTomers\u2019 when it supposed to be \u2018customers\u2019, MySQL will then throw an error.", "Now if we referenced the table exactly as it is written in the database, MySQL will return the information as we exactly want.", "Creating an alias is a very useful way to create more efficient and concise SQL queries. Also, it provides a shortcut to a long query which improves the readability of the queries, especially if we are going to use the alias name in a GROUP BY clause. Let\u2019s take a look at an example to understand how alias works.", "Consider we have a table called \u2018inventory\u2019 with the following columns and contents.", "Now let\u2019s say we want to group and aggregate the table above purely based on the quantity status, i.e whether qty is above or below 5. To do this, we will write an SQL query something like this:", "The SQL query above works, but it\u2019s not concise enough and the readability obviously can be improved. This is where alias come in handy. We can convert the CASE in SELECT statement into an alias, and refer this alias in the GROUP BY clause as follows:", "The above SQL query is shorter and much more concise, especially if we have a CASE statement that is very long.", "If you use MySQL and PostgreSQL, you can write an SQL query with an alias in SELECT statement and refer the alias name in the GROUP BY clause. Below is the result of the query by referring the alias name in GROUP BY clause.", "Meanwhile, if you use Hive, you can\u2019t refer the alias name in the GROUP BY clause as it will throw an error. This is because Hive will process the GROUP BY clause first before processing the SELECT statement.", "Hence, if you\u2019re using Hive, the only way to make this work is by removing the alias and rewrite the CASE statement in the GROUP BY clause, just like the original query without an alias.", "With SQL, we can convert the data type of a column in a table with CAST command. If we want to convert a string column into an integer we can do the following.", "However, if you try to convert the data type of a string column whose values don\u2019t represent numbers to a numeric column, the query will return an unexpected result, depending on which SQL engines that you use. To explain this phenomenon, let\u2019s use the same example as before with the \u2018inventory\u2019 table.", "In Hive, the query will result in missing values or NULL values if you try to convert \u2018game\u2019 column into integer. As a recall, the data type of \u2018game\u2019 column is STRING and all of the values are non-numeric (Monopoly, Clue, Candy Land). When you convert this column into a numeric column, for example integer or float, then the NULL values will be returned by the query as there is no way to turn these strings into numeric representation.", "Now let\u2019s take a look if we use MySQL. In MySQL, if you do the data type conversion on the same column with the same SQL syntax, you will get values in the column, but all of them are zero. This is different than missing values (NULL) like the one we get with Hive.", "Meanwhile, if you try the same data type conversion on the same column with the same syntax in PostgreSQL, you will get an error.", "Different SQL engines have different ways to handle the problem with data type conversion like this one. Hence, it is important to know in advance what SQL engine you use and what you\u2019ll expect to get when you try to convert the data type of a string column to a numeric column and one or more string values don\u2019t represent numbers.", "The JOIN syntax is one of the most important syntax in SQL, particularly if you\u2019re working with relational database. There are different types of JOIN in SQL: Inner JOIN, Left JOIN, Right JOIN, Outer JOIN, and Cross JOIN.", "Since the point of this article is not to explain how different JOIN syntax works, then I\u2019m not going to talk about this in detail. However, if you want to know detailed information about how different JOIN syntax differ with each other, I recommend this article and this article.", "To complement the JOIN syntax, usually, we should also provide the join condition using ON clause or USING clause. To make this point clearer, let\u2019s say we have two different tables, one called \u2018toys\u2019 and one called \u2018makers\u2019. Below is the illustration of the columns and contents of these two tables.", "Now the objective is to combine the \u2018toys\u2019 table and the \u2018makers\u2019 table based on maker ID in the \u2018toys\u2019 table. To do this, we can use the following SQL query.", "The above query yields to the following result.", "Notice that we didn\u2019t specify in detail which JOIN syntax that we want to use in the query. However, since we provided the join condition, which is the ON clause, then the SQL engine interpreted the JOIN syntax as Left JOIN.", "Now what would happen if for some reasons we forget to provide the join condition?", "If you\u2019re using PostgreSQL, you\u2019ll get lucky because it will throw an error straight away and telling you that your syntax is invalid.", "Meanwhile, if you\u2019re using MySQL or Hive and you forget to add the join condition, the query will still run. However, it will interpret your JOIN syntax as a Cross JOIN. The result of the query is as follows.", "To better understand of what a Cross JOIN actually does, let\u2019s use a diagram below as an illustration.", "With Cross JOIN, every possible combination of rows from the left table and the right table will be included in the final result. The two tables that have been used as an example contains only 3 rows, now imagine if your database consists of many rows and you forgot to add the join condition. The results would be a new table with a huge amount of rows and you can be misled by the result.", "To avoid this thing, then it is always best to explicitly tell the SQL engine which kind of JOIN syntax it should perform in our query. In addition, it is always a necessity to provide join condition after JOIN syntax.", "And that\u2019s it. Those are the cases where the same SQL syntax behaves differently with MySQL, PostgreSQL, and Apache Hive, at least from what I know so far. If you know other cases where they behave differently, I would be happy if you would share it with me.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Science || Machine Learning || Computer Vision || NLP"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F9e7cae9e52f4&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@marcellusruben?source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@marcellusruben?source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": "Ruben Winastwan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5dae9da73c9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&user=Ruben+Winastwan&userId=5dae9da73c9b&source=post_page-5dae9da73c9b----9e7cae9e52f4---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9e7cae9e52f4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9e7cae9e52f4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@florianolv?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Florian Olivo"}, {"url": "https://unsplash.com/s/photos/programming?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://towardsdatascience.com/sql-join-8212e3eb9fde", "anchor_text": "this article"}, {"url": "https://towardsdatascience.com/combining-tables-using-sql-f6ddfd5f8b6f", "anchor_text": "this article"}, {"url": "https://medium.com/tag/sql?source=post_page-----9e7cae9e52f4---------------sql-----------------", "anchor_text": "Sql"}, {"url": "https://medium.com/tag/database?source=post_page-----9e7cae9e52f4---------------database-----------------", "anchor_text": "Database"}, {"url": "https://medium.com/tag/data-science?source=post_page-----9e7cae9e52f4---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-analysis?source=post_page-----9e7cae9e52f4---------------data_analysis-----------------", "anchor_text": "Data Analysis"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9e7cae9e52f4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&user=Ruben+Winastwan&userId=5dae9da73c9b&source=-----9e7cae9e52f4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9e7cae9e52f4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&user=Ruben+Winastwan&userId=5dae9da73c9b&source=-----9e7cae9e52f4---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9e7cae9e52f4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F9e7cae9e52f4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----9e7cae9e52f4---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----9e7cae9e52f4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@marcellusruben?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@marcellusruben?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ruben Winastwan"}, {"url": "https://medium.com/@marcellusruben/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "925 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5dae9da73c9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&user=Ruben+Winastwan&userId=5dae9da73c9b&source=post_page-5dae9da73c9b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F46c6747bd93b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-curious-case-of-mysql-postgresql-and-hive-9e7cae9e52f4&newsletterV3=5dae9da73c9b&newsletterV3Id=46c6747bd93b&user=Ruben+Winastwan&userId=5dae9da73c9b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}