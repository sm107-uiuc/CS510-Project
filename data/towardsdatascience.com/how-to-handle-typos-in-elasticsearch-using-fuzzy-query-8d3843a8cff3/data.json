{"url": "https://towardsdatascience.com/how-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3", "time": 1683014951.3482041, "path": "towardsdatascience.com/how-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3/", "webpage": {"metadata": {"title": "How to Handle Typos in Elasticsearch Using Fuzzy Query | by Brilian Firdaus | Towards Data Science", "h1": "How to Handle Typos in Elasticsearch Using Fuzzy Query", "description": "Typo is something that often happens and can reduce user\u2019s experience, fortunately, Elasticsearch can handle it easily with Fuzzy Query. If you want to create a simple one instead, you can read my\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/better-programming/create-a-simple-autocomplete-with-elasticsearch-852c47109deb", "anchor_text": "Create a Simple Autocomplete With Elasticsearch", "paragraph_index": 2}, {"url": "https://en.wikipedia.org/wiki/Levenshtein_distance", "anchor_text": "Levenshtein Distance Algorithm", "paragraph_index": 5}, {"url": "https://medium.com/better-programming/elasticsearch-text-vs-keyword-2ccb99ec72ae", "anchor_text": "Elasticsearch: Text vs. Keyword", "paragraph_index": 33}, {"url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-term-rewrite.html", "anchor_text": "Elasticsearch documentation", "paragraph_index": 72}], "all_paragraphs": ["Typo is something that often happens and can reduce user\u2019s experience, fortunately, Elasticsearch can handle it easily with Fuzzy Query.", "Handling typos is a must if you\u2019re building an advanced autocomplete system with the Elasticsearch.", "If you want to create a simple one instead, you can read my other articles \u201cCreate a Simple Autocomplete With Elasticsearch\u201d.", "Fuzzy logic is a mathematics logic in which the truth of variables might be any number between 0 and 1. It is different with a Boolean logic that only has the truth values either 0 or 1.", "In the Elasticsearch, fuzzy query means the terms in the queries don\u2019t have to be the exact match with the terms in the Inverted Index.", "To calculate the distance between query, Elasticsearch uses Levenshtein Distance Algorithm.", "Calculating a distance with Levenshtein Distance Algorithm is easy.", "You just need to compare the first and second word character by character.", "If the character is different, then you can add the distance between the words by one.", "Let\u2019s see an example, how to calculate the distance between the common typo word \"Gppgle\" with the correct word \"Google\" .", "After we calculate the distance between \"Gppgle\" and \"Google\" with Levenshtein Distance Algorithm, we can see that the distance is 2.", "Handling typo in Elasticsearch with Fuzzy Query is also simple.", "Let\u2019s start with making an example of the typo word \"Gppgle\".", "When we\u2019re using normal Match Query, the Elasticsearch will analyze the query \"gppgle\" first before searching it into the Elasticsearch.", "The only term in the inverted index is \u201cgoogle\u201d and it doesn\u2019t match the term \"gppgle\". Therefore, the Elasticsearch won't return any result.", "Now, let\u2019s try Elasticsearch\u2019s fuzzy in Match Query.", "As you can see, with fuzzy, the Elasticsearch returned a response.", "We\u2019ve learnt in the before that \"gppgle\" and \"google\" have the distance of 2.", "In the query, we inserted \"fuzziness\":\"AUTO\" instead of a number. Why is it working?", "Elasticsearch will determine what fuzziness distance is appropriate if we use \"AUTO\" value in the \"fuzziness\" field.", "For 6 characters, the Elasticsearch by default will allow 2 edit distance.", "\"AUTO\" fuzziness is preferable, but you can tune it with an exact number if you want to.", "Now, let\u2019s try with an exact number to prove that \"gppgle\" and \"google\" have a distance of 2.", "When we use \"fuzziness\":\"1\", no result is returned by the Elasticsearch.", "With \"fuzziness\":\"2\", though, the Elasticsearch returned the document \"google\".", "This proves our previous distance calculation of \"gppgle\" and \"google\" with Levenshtein Distance Algorithm, in which the result is 2.", "In the previous example, we use a fuzzy query as a parameter inside Match Query.", "But there is another way to use the fuzzy feature, Fuzzy Query.", "Seems to be the same! So, what\u2019s the difference between them?", "Fuzzy Query works like just Term Query, the query to Elasticsearch is not analyzed and used raw to search the Inverted Index.", "For example, let\u2019s index one more document \"Hong Kong\" .", "Let\u2019s look on what terms the analyzer produces with Elasticsearch\u2019s Analyze API.", "As you can see, the standard_analyzer produce two terms, \"hong\" and \"kong\".", "If you read my other article \u201cElasticsearch: Text vs. Keyword\u201d, you\u2019d know that if we use a term query to search \"Hong Kong\" then we won't get any result.", "This is because there is no term that has less than 2 edit distance with \"Hong Kong\" in the Elasticsearch.", "Now, Let\u2019s try Fuzzy Query with \"Hpng\" .", "Term \"Hpng\" in the query and the term \"hong\" in the Elasticsearch have a distance of two.", "Remember that the term queried and the term in the inverted index is case-sensitive, the distance \u201c2\u201d comes from the difference between \"Hp\" and \"ho\".", "Match Query with fuzziness parameter is more preferable than Fuzzy Query. The analyzer in the query will analyze your query before searching it into the Inverted Index.", "Let\u2019s try the same query as we did in the Fuzzy Query\u2019s section.", "As expected, both queries returned a result!", "The first query, \"Hpng Kong\" is analyzed into \"hpng\" and \"kong\". Both terms \"hpng\" and \"kong\" exist in the Inverted Index.", "\"hpng\" and \"hong\" matched with a distance of 1. While \"kong\" and \"kong\" match perfectly.", "One thing to note if you plan to use Match Query is that every of the terms in the query will allow fuzziness.", "We can try querying with \"hggg kggg\" which has an edit distance of 4 with \"Hong Kong\" using \"fuzziness\":2.", "As you can see, the Elasticsearch returned a result.", "This is because of the query \"hggg kggg\" is analyzed to terms \"hggg\" and \"kggg\" by the analyzer.", "Both \"hggg\" and \"kggg\" respectively have the edit distance of 2 to \"hong\" and \"kong\" in the Elasticsearch.", "You can tune the Fuzzy Query to match your use case.", "In this section, I will write about the parameters that we can change in the query.", "Fuzziness is the heart of Fuzzy Query.", "The value that we pass to this parameter is the maximum distance allowed.", "There are two types of value that we can pass, an integer for exact maximum distance and \"AUTO\".", "The \"AUTO\" value allows the fuzziness in the query to be dynamic.", "We can tune 2 parameters in the \"AUTO\" value and write it as \"AUTO:[low],[high]\". The query will set fuzziness as 0 if the term length is below the low value. If the term length is between the low and high value, the query will set the fuzziness to 1. Last, If the term length is more than the high value, the query will set the fuzziness to 2.", "The Elasticsearch will use 3 and 6 as the default if the low and high value is not determined.", "Let\u2019s use an example with a document \u201cFuzzy Query in Elasticsearch allows you to handle typos\u201d.", "We can try some queries to prove the mechanism of AUTO we described earlier.", "After querying it, these queries produced a result:", "transpositions will allow your query to calculate the transpositions of two adjacent characters (ab -> ba) as 1 distance.", "For example, if we set the transpositions to true, we will get a result if we query with \"leasticsearcc\".", "But if we set it as false, there will be no result from the Elasticsearch.", "The Elasticsearch defaults the transpositions setting to true.", "We can\u2019t set this setting to the Match Query. The Match Query will always calculate transpositions as 1 distance.", "max_expansions will determine the maximum result you get from your query.", "If you set the max_expansions to 1 and there is 2 document in the Elasticsearch that are appropriate to your query, the Elasticsearch will only return 1.", "Note that max_expansions applies to shard level. So if you have many shards in the Elasticsearch, even if you set the max_expansion to 1, the query might return more results.", "The default value for max_expansions is 50.", "prefix_length is the number of prefix characters that is not considered in fuzzy query.", "For example, if we set the prefix_length to 1, we won't get any result if we query \"llasticsearch\".", "The prefix_length setting defaults to 0.", "You can change rewrite parameter if you want to change the scoring of the results.", "You can find more information about the rewrite parameter in the Elasticsearch documentation.", "Handling a typo in Elasticsearch is very easy and can improve the user\u2019s experience.", "The simplest way to handle a typo is to just add \"fuzziness\":\"AUTO\" in your Match Query.", "If you want to tune the Query, there are some parameters that you can change with the \"fuzziness\" being the most important.", "Thank you for reading until the end!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F8d3843a8cff3&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://brilianfird.medium.com/?source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": ""}, {"url": "https://brilianfird.medium.com/?source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": "Brilian Firdaus"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc5d888ffc5e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&user=Brilian+Firdaus&userId=c5d888ffc5e0&source=post_page-c5d888ffc5e0----8d3843a8cff3---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8d3843a8cff3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8d3843a8cff3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/hands-on-tutorials", "anchor_text": "Hands-on Tutorials"}, {"url": "https://unsplash.com/@dearseymour?utm_source=medium&utm_medium=referral", "anchor_text": "Ksenia Makagonova"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://medium.com/better-programming/create-a-simple-autocomplete-with-elasticsearch-852c47109deb", "anchor_text": "Create a Simple Autocomplete With Elasticsearch"}, {"url": "https://en.wikipedia.org/wiki/Levenshtein_distance", "anchor_text": "Levenshtein Distance Algorithm"}, {"url": "https://medium.com/better-programming/elasticsearch-text-vs-keyword-2ccb99ec72ae", "anchor_text": "Elasticsearch: Text vs. Keyword"}, {"url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-term-rewrite.html", "anchor_text": "Elasticsearch documentation"}, {"url": "https://medium.com/tag/elasticsearch?source=post_page-----8d3843a8cff3---------------elasticsearch-----------------", "anchor_text": "Elasticsearch"}, {"url": "https://medium.com/tag/programming?source=post_page-----8d3843a8cff3---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-development?source=post_page-----8d3843a8cff3---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/autocomplete?source=post_page-----8d3843a8cff3---------------autocomplete-----------------", "anchor_text": "Autocomplete"}, {"url": "https://medium.com/tag/hands-on-tutorials?source=post_page-----8d3843a8cff3---------------hands_on_tutorials-----------------", "anchor_text": "Hands On Tutorials"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8d3843a8cff3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&user=Brilian+Firdaus&userId=c5d888ffc5e0&source=-----8d3843a8cff3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8d3843a8cff3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&user=Brilian+Firdaus&userId=c5d888ffc5e0&source=-----8d3843a8cff3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8d3843a8cff3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F8d3843a8cff3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----8d3843a8cff3---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----8d3843a8cff3--------------------------------", "anchor_text": ""}, {"url": "https://brilianfird.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://brilianfird.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Brilian Firdaus"}, {"url": "https://brilianfird.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "121 Followers"}, {"url": "https://codecurated.com", "anchor_text": "https://codecurated.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc5d888ffc5e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&user=Brilian+Firdaus&userId=c5d888ffc5e0&source=post_page-c5d888ffc5e0--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F4232d6c3e8e2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-handle-typos-in-elasticsearch-using-fuzzy-query-8d3843a8cff3&newsletterV3=c5d888ffc5e0&newsletterV3Id=4232d6c3e8e2&user=Brilian+Firdaus&userId=c5d888ffc5e0&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}