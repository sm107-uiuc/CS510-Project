{"url": "https://towardsdatascience.com/how-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134", "time": 1683013126.397272, "path": "towardsdatascience.com/how-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134/", "webpage": {"metadata": {"title": "Implement Your First Ever Lane Detection In Any Car Racing Game | Towards Data Science", "h1": "How To Implement Your First-Ever Lane Detection In Any Car Racing Game", "description": "Lane detection tutorial, Python mini project, OpenCV, Computer Vision, AI, ML"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Canny_edge_detector", "anchor_text": "Canny algorithm", "paragraph_index": 13}, {"url": "https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_canny/py_canny.html", "anchor_text": "Canny edge detection", "paragraph_index": 14}, {"url": "https://docs.opencv.org/3.4/d9/db0/tutorial_hough_lines.html", "anchor_text": "Hough Transform", "paragraph_index": 29}, {"url": "https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_filtering/py_filtering.html", "anchor_text": "Gaussian Blur", "paragraph_index": 29}, {"url": "https://codynicholson.github.io/Finding_Lane_Lines_Project/", "anchor_text": "here", "paragraph_index": 33}, {"url": "https://github.com/enKRypted15/Asphalt-8-Lane-Detection.git", "anchor_text": "link", "paragraph_index": 37}, {"url": "https://www.linkedin.com/in/krupesh-raikar/", "anchor_text": "https://www.linkedin.com/in/krupesh-raikar/", "paragraph_index": 40}], "all_paragraphs": ["Lane detection and control has become a common feature in many vehicles today. Additionally it is a basic starting point for anyone going in the direction of Autonomous Driving. But for most people who are not working on autonomous driving or computer vision, starting with it might appear much more of a daunting task than it actually is.", "There is a lot of technical research involved in doing actual lane detection. In this case, we see a practical perspective so that anyone interested can try it out without much hassle. The detailed links to the theory are still there in the relevant sections for the curious ones: those of you who do not get satiated with just practical applications and like to get their teeth to sink deeper into the subject matter.", "Here is everything you need to start:", "Now that we have all we need, let\u2019s cut to the chase!", "Step 1: Find a way to access the game screen", "This one is easy enough. I did a quick google search to check out python codes that can be used to access the screen. Here is a really great tutorial, from which I used the basic code and adapted it for this case:", "If we run the code directly, you would see a similar result as seen below in a random game level. You will notice that the colors are a bit different, and the screen rate results in some lag (which is OK for our purpose).", "Let\u2019s correct the color part with some help from the OpenCV documentation. There is a argument in cv2 that makes the screen recording look like the actual color (or at least as far as my vision allows) which is COLOR_BGR2RGB, that is what I used for the correction here. Also, the time function is used to get the screen rate, which comes to around 10 fps, not bad at all! The modified code looks as follows:", "For the above code to correctly capture screen, I have minimized the game window to the top left corner of my primary monitor, with the dimensions as 800 x 700. You could adjust it appropriately in your code (by changing bbox in the ImageGrab above), especially if you are using multiple monitors.", "Once you run this, you get the screen capture as follows:", "This method of screen capture is extremely handy, particularly when we need to generate images for machine learning use cases.", "Now that we can capture the game window, we can move on to the next step.", "Step 2: Image processing for edge detection", "Since lane detection is basically an edge identification from image, you would have to process the image to actually get the main outlines. One of the most popular method used in computational vision processing is the Canny algorithm for edge detection. It basically extracts and retains the useful structural information from images, all the while drastically reducing its size.", "Open CV has a neat little implementation of the Canny edge detection. This reduces the complexity of the image much further and we get the edges of the image in the screen with pretty much a three line code.", "Let\u2019s create a small function for processing the image using the Canny implementation in cv2. You can experiment with various values of thresholds by looking into the documentation, the code looks like this:", "We have to run the processed image again in the image capture loop, so it makes more sense to define this loop as a function to take into consideration the processing as the input. I will get a bit ahead of myself here and modify it to general function taking the inputs as list, which will make more sense further down in the analysis.", "Makes it much better to use the function now. You will see why I structured the function this way in the next section. Till then, let us check out the result with the edge processing.", "This is what you will see:", "We pretty much get the edges of the objects from the game screen. This is how it looks like when I tried it in a test track in the game:", "As you notice, there is still too much unwanted information in the image. The trees, rocks, electricity lines, basically everything above the horizon of the road. Not to mention the overlay controls display from the game itself. If we want to focus on the lanes, we have to find a way to somehow filter out or mask the rest of the image lines.", "Step 3: Masking additional information from the image", "For this, let\u2019s define a masking function. What we need is to define a polygon shape that masks all the information from the image, except the region that lets us focus on the lanes. This is a very basic method used, in this case I defined the vertices of the exact region I need with a bit of trial and error, as seen in the image below:", "The required region function uses a masked frame and a polygon with vertices. The intersection of the masked and the polygon gives us only the required section of the image. The function and the vertices (defined above) are as you see here:", "Now, we can run the screen capture function with these inputs as well.", "And, the result is as follows:", "As you notice now, I have opaqued out all the unnecessary information except for the lanes. For a rudimentary level code, I\u2019d say that this is pretty neat!", "But we are not quite there yet.", "Step 4: Finding lines with Hough Lines", "Finding the actual geometric lines, we need to do some kind of transformation on the edge processed image. In this case, I used the Hough Transform implementation in Open CV. For this to work properly, the image has to be blurred a bit before giving as the input for Hough transform. I used the Gaussian Blur from Open CV for this case.", "Additionally, there is a need to draw the detected lines on the image frames. So I defined one more function overlay the detected lines on the frames.", "The modified overlay line and the edge processing codes are:", "As you can see, that is not bad at all, and with just a few lines of code! We are almost there.", "There are a variety of lines detected in the previous step. We have to find a way to merge them in some way so that we can get the actual lanes. This is a bit more complex and I checked out several resources online to see if there is a simpler way that it could be done. I found a great draw lanes function in the Github project here which I used here directly (code not added below as it is too long, but you can refer my project notebook in Github, linked at the end). All that was needed to be done then was to modify the edge processing function as follows:", "And accordingly a few tweaks in the capture function:", "As you see, there are still more tweaks and fine tuning that can be done. But it is an awesome application as an introductory learning project!", "The fun part is, the entire thing works live! You can play the game and detect lanes simultaneously as you keep the code running. This gives us a host of possibilities, like saving images for ML, game controls etc. which I will explore in future posts.", "That\u2019s it, folks! I hope you managed to implement lane detection in these 5 simple steps. The Jupyter notebook can be found in this link.", "Feel free use and adapt the code and let me know if you have any interesting tweaks, results or ideas. Happy learning!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Seeker of the Convergence between Creativity and Logic | Storyteller | Data Analytics @ Audi AG I Linkedin: https://www.linkedin.com/in/krupesh-raikar/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fbae4d0982134&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----bae4d0982134--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bae4d0982134--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://krupesh-raikar.medium.com/?source=post_page-----bae4d0982134--------------------------------", "anchor_text": ""}, {"url": "https://krupesh-raikar.medium.com/?source=post_page-----bae4d0982134--------------------------------", "anchor_text": "Krupesh Raikar"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F56234ae495ea&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&user=Krupesh+Raikar&userId=56234ae495ea&source=post_page-56234ae495ea----bae4d0982134---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbae4d0982134&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbae4d0982134&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.microsoft.com/en-us/p/asphalt-8-airborne/9wzdncrfj12h?activetab=pivot:overviewtab", "anchor_text": "https://www.microsoft.com/en-us/p/asphalt-8-airborne/9wzdncrfj12h?activetab=pivot:overviewtab"}, {"url": "https://www.anaconda.com/products/individual", "anchor_text": "https://www.anaconda.com/products/individual"}, {"url": "https://www.learnopencv.com/install-opencv3-on-windows/", "anchor_text": "https://www.learnopencv.com/install-opencv3-on-windows/"}, {"url": "https://holypython.com/how-to-use-imagegrab-of-cv2/", "anchor_text": "How to Capture Your Screen with Python - HolyPython.comThis Python tutorial explains the basic fundamentals of digital images. You will learn how pixels are represented as\u2026holypython.com"}, {"url": "https://en.wikipedia.org/wiki/Canny_edge_detector", "anchor_text": "Canny algorithm"}, {"url": "https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_canny/py_canny.html", "anchor_text": "Canny edge detection"}, {"url": "https://docs.opencv.org/3.4/d9/db0/tutorial_hough_lines.html", "anchor_text": "Hough Transform"}, {"url": "https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_imgproc/py_filtering/py_filtering.html", "anchor_text": "Gaussian Blur"}, {"url": "https://codynicholson.github.io/Finding_Lane_Lines_Project/", "anchor_text": "here"}, {"url": "https://github.com/enKRypted15/Asphalt-8-Lane-Detection.git", "anchor_text": "link"}, {"url": "https://medium.com/tag/python?source=post_page-----bae4d0982134---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----bae4d0982134---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----bae4d0982134---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----bae4d0982134---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/tag/learning?source=post_page-----bae4d0982134---------------learning-----------------", "anchor_text": "Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbae4d0982134&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&user=Krupesh+Raikar&userId=56234ae495ea&source=-----bae4d0982134---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbae4d0982134&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&user=Krupesh+Raikar&userId=56234ae495ea&source=-----bae4d0982134---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbae4d0982134&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bae4d0982134--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fbae4d0982134&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----bae4d0982134---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----bae4d0982134--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----bae4d0982134--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----bae4d0982134--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----bae4d0982134--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----bae4d0982134--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----bae4d0982134--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----bae4d0982134--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----bae4d0982134--------------------------------", "anchor_text": ""}, {"url": "https://krupesh-raikar.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://krupesh-raikar.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Krupesh Raikar"}, {"url": "https://krupesh-raikar.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "428 Followers"}, {"url": "https://www.linkedin.com/in/krupesh-raikar/", "anchor_text": "https://www.linkedin.com/in/krupesh-raikar/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F56234ae495ea&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&user=Krupesh+Raikar&userId=56234ae495ea&source=post_page-56234ae495ea--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fa582f2e976f4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-learned-lane-detection-using-asphalt-8-airborne-bae4d0982134&newsletterV3=56234ae495ea&newsletterV3Id=a582f2e976f4&user=Krupesh+Raikar&userId=56234ae495ea&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}