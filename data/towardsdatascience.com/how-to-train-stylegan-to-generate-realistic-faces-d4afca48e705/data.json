{"url": "https://towardsdatascience.com/how-to-train-stylegan-to-generate-realistic-faces-d4afca48e705", "time": 1683001427.252892, "path": "towardsdatascience.com/how-to-train-stylegan-to-generate-realistic-faces-d4afca48e705/", "webpage": {"metadata": {"title": "How to Train StyleGAN to Generate Realistic Faces | by Kayo Yin | Towards Data Science", "h1": "How to Train StyleGAN to Generate Realistic Faces", "description": "Generative Adversarial Networks (GAN) is an architecture introduced by Ian Goodfellow and his colleagues in 2014 for generative modeling, which is using a model to generate new samples that imitate\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/explained-a-style-based-generator-architecture-for-gans-generating-and-tuning-realistic-6cb2be0f431", "anchor_text": "article", "paragraph_index": 3}, {"url": "https://arxiv.org/abs/1812.04948", "anchor_text": "A Style-Based Architecture for GANs", "paragraph_index": 4}, {"url": "https://arxiv.org/abs/1710.10196", "anchor_text": "ProGAN", "paragraph_index": 5}, {"url": "https://github.com/rosinality/style-based-gan-pytorch", "anchor_text": "implementation of StyleGAN", "paragraph_index": 12}, {"url": "https://github.com/kayoyin/FakeCelebs", "anchor_text": "Github", "paragraph_index": 23}, {"url": "https://github.com/rosinality", "anchor_text": "rosinality", "paragraph_index": 23}, {"url": "http://kayoyin.github.io/blog", "anchor_text": "kayoyin.github.io/blog", "paragraph_index": 25}], "all_paragraphs": ["Generative Adversarial Networks (GAN) is an architecture introduced by Ian Goodfellow and his colleagues in 2014 for generative modeling, which is using a model to generate new samples that imitate an existing dataset. It is composed of two networks: the generator that generates new samples, and the discriminator that detects fake samples. The generator tries to fool the discriminator while the discriminator tries to detect samples synthesized by the generator.", "Once trained, the generator can be used to create new samples on demand. GANs have quickly become popular due to their various interesting applications such as style transfer, image-to-image translation or video generation. This architecture is particularly well-suited to generating faces, for example.", "Today, GANs come in a variety of forms: DCGAN, CycleGAN, SAGAN\u2026 Out of so many GANs to choose from, I used StyleGAN to generate artificial celebrity faces. In this report, I will explain what makes StyleGAN architecture a good choice, how to train the model, and some results from training.", "If you are interested in a more complete explanation of StyleGAN, you may check out this great article and skip to the next section. This section will explain what are the features in the StyleGAN architecture that makes it so effective for face generation.", "In 2018, NVIDIA proposed a new network in their paper A Style-Based Architecture for GANs. Previous GAN models have already shown to be able to generate human faces, but one challenge is being able to control some features of the generated images, such as hair color or pose. StyleGAN attempts to tackle this challenge by incorporating and building on progressive training to modify each detail level separately. In doing so, it can control visual features expressed in each detail level, from coarse features such as pose and face shape, to finer details such as eye color and nose shape, without affecting other levels.", "Progressive training was first introduced in the ProGAN architecture with the objective to generate high-definition images. In progressive training, the model is first trained on low-resolution images, such as 8x8, then the input image resolution is progressively doubled by adding new higher-resolution layers to the model during training. In doing so, the models can rapidly learn coarse details in the early stages of training, and finer details later on, instead of having to learn all scales of detail simultaneously.", "However, the ProGAN model\u2019s ability to control specific features of the images is still limited. Because the features were not trained separately, it is difficult to try to tweak one specific feature without affecting several others. StyleGAN extends upon progressive training with the addition of a mapping network that encodes the input into a feature vector whose elements control different visual features, and style modules that translate the previous vector into its visual representation. By using separate feature vectors for each level, the model is able to combine multiple features: for example, from two generated images, the model can use coarse level features from the first, fine detail features from the second, to generate a third that combines the two.", "With progressive training and separate feature mappings, StyleGAN presents a huge advantage for this task. The model requires less training time than other powerful GAN networks to produce high quality realistic-looking images. Moreover, in face generation where there are many different features that each have several instances, this architecture is particularly suited because the model is able to learn facial features separately, without being influenced by correlation between feature levels, to generate images with good variety. Obtaining realistic and varied images are the two main objectives of this challenge, where I have limited resources to train my model, which is why StyleGAN became my architecture of choice.", "I used the CelebA dataset to train my model. CelebA contains 202,599 face images of 10,177 different celebrities. The original dataset is annotated with binary features such as eyeglasses or big nose, but we will only use the images themselves for face generation.", "The images in the dataset are of dimension 178x218. Since we want to generate square images, we crop the images. To do so, we assume the face lies near the center of the image and take the center crop.", "We resize the images to accommodate progressive training, as described previously, from 8x8 until 128x128, the chosen final output size. Note that this technique is capable of training models with 1024x1024 images, but this would require over a month of GPU training, and a resolution of at least 64x64 already gives good visual results. Each image is resized to have a copy in dimensions 8x8, 16x16, 32x32, 64x64 and 128x128, so that the trained generator will generate images in dimension 128x128.", "Other possible data processing methods, which I have not used, are detecting and cropping the images to the faces more closely, and to remove examples where the face is not facing front.", "To train my own model, I found a great implementation of StyleGAN on Github in my favorite machine learning framework, with understandable code.", "Training is done in the same fashion as traditional GAN networks, with the added task of progressive training. I used an Adam optimizer with learning rate 0.001 for both the discriminator and the generator. I use a batch size of 16, because of memory constraints, and a code size of 512, that is the random noise vector inputted in the generator is of size 1x512. For the loss function, I use Wasserstein loss. For progressive training, each dimension size trains on 600 000 image instances before increasing the size, until reaching dimension size 128x128 where I keep training the model until convergence.", "We can use three techniques for regularization. First, when loading the input images during training, a horizontal flip is performed with probability 0.5. This way, I do not need to increase dataset size which would slow down training, but the model encounters more different inputs during training.", "The second regularization technique is specific to StyleGAN. To refrain the model from learning correlation between feature levels, the model performs style mixing. It takes two inputs, generates the feature mapping vectors for each, then starts training using the first feature vector, and switches to the second one at a random level. This ensures the network will not rely on correlation between levels.", "Another regularization StyleGAN uses is adding random noise during training to each channel during training. This allows the model to increase the variety of its outputs and add stochastic variation in the generated images (i.e freckles, hair)", "We only use the trained generator for image generation. After training the model, we first compute the mean feature vector. This is done simply by using the generator to synthesize several images, in our case we used 10, then to compute the average of the feature vectors as mentioned before across the obtained images for each level. Then, during generation, the feature vector used is v_mean + \u03c8(v \u2014 v_mean), where v is the output of the feature mapping network, v_mean is the previously computed mean feature vector, and \u03c8 is a constant that controls the strength of the mean feature vector. The larger c is, the more the final generated image will stray from the \u201caverage\u201d face. We can even use different values of \u03c8 for each level to control how far from average each feature is.", "After training, it is also possible to use style mixing. I did not use style mixing for the final outputs, but below is an example I obtained after training. The images inside the grid take fine features from the images at the top and coarse features from the images on the left.", "Here are some outputs obtained during the training of my final version of StyleGAN, where you can also see progressive training in action.", "I stopped training at around 400000 iterations, as the model did not seem to improve further. Out of the 50 faces generated each iteration that I inspect, there are usually always one or two that still looks pretty unrealistic, but the remaining results are very satisfactory. The best examples are even indistinguishable from real faces to my eye.", "The generated images that look the less realistic are usually ones where the face is not facing the front, or faces that are wearing sunglasses. An improvement for the future would be to remove such samples before training so that the model will generate only front-facing faces.", "Thanks for reading and I hope you enjoyed the article! Feel free to let me know any cool experiments you do with StyleGAN :)", "You can find the full code I used, from downloading the CelebA dataset to training and generating examples using StyleGAN on my Github, but full credits for the implementation of StyleGAN in PyTorch goes to rosinality.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "PhD student at UC Berkeley researching AI. Now writing at kayoyin.github.io/blog"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd4afca48e705&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d4afca48e705--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d4afca48e705--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@kayo.yin?source=post_page-----d4afca48e705--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@kayo.yin?source=post_page-----d4afca48e705--------------------------------", "anchor_text": "Kayo Yin"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fee0d7547aae1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&user=Kayo+Yin&userId=ee0d7547aae1&source=post_page-ee0d7547aae1----d4afca48e705---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd4afca48e705&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd4afca48e705&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://developers.google.com/machine-learning/gan/gan_structure", "anchor_text": "https://developers.google.com/machine-learning/gan/gan_structure"}, {"url": "https://towardsdatascience.com/explained-a-style-based-generator-architecture-for-gans-generating-and-tuning-realistic-6cb2be0f431", "anchor_text": "article"}, {"url": "https://arxiv.org/abs/1812.04948", "anchor_text": "A Style-Based Architecture for GANs"}, {"url": "https://arxiv.org/pdf/1812.04948.pdf", "anchor_text": "https://arxiv.org/pdf/1812.04948.pdf"}, {"url": "https://arxiv.org/abs/1710.10196", "anchor_text": "ProGAN"}, {"url": "https://towardsdatascience.com/progan-how-nvidia-generated-images-of-unprecedented-quality-51c98ec2cbd2", "anchor_text": "https://towardsdatascience.com/progan-how-nvidia-generated-images-of-unprecedented-quality-51c98ec2cbd2"}, {"url": "https://arxiv.org/pdf/1812.04948.pdf", "anchor_text": "https://arxiv.org/pdf/1812.04948.pdf"}, {"url": "http://mmlab.ie.cuhk.edu.hk/projects/CelebA.html", "anchor_text": "http://mmlab.ie.cuhk.edu.hk/projects/CelebA.html"}, {"url": "https://github.com/rosinality/style-based-gan-pytorch", "anchor_text": "implementation of StyleGAN"}, {"url": "https://arxiv.org/pdf/1812.04948.pdf", "anchor_text": "https://arxiv.org/pdf/1812.04948.pdf"}, {"url": "https://arxiv.org/pdf/1812.04948.pdf", "anchor_text": "https://arxiv.org/pdf/1812.04948.pdf"}, {"url": "https://github.com/kayoyin/FakeCelebs", "anchor_text": "Github"}, {"url": "https://github.com/rosinality", "anchor_text": "rosinality"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----d4afca48e705---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----d4afca48e705---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----d4afca48e705---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----d4afca48e705---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----d4afca48e705---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd4afca48e705&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&user=Kayo+Yin&userId=ee0d7547aae1&source=-----d4afca48e705---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd4afca48e705&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&user=Kayo+Yin&userId=ee0d7547aae1&source=-----d4afca48e705---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd4afca48e705&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d4afca48e705--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd4afca48e705&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d4afca48e705---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d4afca48e705--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d4afca48e705--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d4afca48e705--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d4afca48e705--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d4afca48e705--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d4afca48e705--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d4afca48e705--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d4afca48e705--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@kayo.yin?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@kayo.yin?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Kayo Yin"}, {"url": "https://medium.com/@kayo.yin/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "538 Followers"}, {"url": "http://kayoyin.github.io/blog", "anchor_text": "kayoyin.github.io/blog"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fee0d7547aae1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&user=Kayo+Yin&userId=ee0d7547aae1&source=post_page-ee0d7547aae1--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F97e53eb796c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-train-stylegan-to-generate-realistic-faces-d4afca48e705&newsletterV3=ee0d7547aae1&newsletterV3Id=97e53eb796c&user=Kayo+Yin&userId=ee0d7547aae1&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}