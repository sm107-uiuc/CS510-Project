{"url": "https://towardsdatascience.com/neural-structured-learning-adversarial-regularization-378523dace08", "time": 1683013517.981799, "path": "towardsdatascience.com/neural-structured-learning-adversarial-regularization-378523dace08/", "webpage": {"metadata": {"title": "Neural Structured Learning & Adversarial Regularization | by Chris Price | Towards Data Science", "h1": "Neural Structured Learning & Adversarial Regularization", "description": "As many of us are no doubt aware, the invariable progress made in the field of Computer Vision has lead to some incredible achievements across multiple disciplines from healthcare and self-driving\u2026"}, "outgoing_paragraph_urls": [{"url": "https://inews.co.uk/news/deepmind-google-ai-predict-eye-conditions-threatening-sight-429071", "anchor_text": "healthcare", "paragraph_index": 0}, {"url": "https://cloud.google.com/tpu/docs/tpus", "anchor_text": "Tensor Processing Units (TPU)", "paragraph_index": 1}, {"url": "https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43022.pdf", "anchor_text": "GoogLeNet", "paragraph_index": 1}, {"url": "https://en.wikipedia.org/wiki/AlexNet", "anchor_text": "AlexNet", "paragraph_index": 1}, {"url": "http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/42503.pdf", "anchor_text": "\u2018Intriguing properties of neural networks, 2014\u2019", "paragraph_index": 2}, {"url": "https://ai.googleblog.com/2018/09/introducing-unrestricted-adversarial.html", "anchor_text": "competitions", "paragraph_index": 2}, {"url": "https://github.com/tensorflow/neural-structured-learning", "anchor_text": "Neural Structured Learning", "paragraph_index": 6}, {"url": "https://www.tensorflow.org/neural_structured_learning/api_docs/python/nsl/keras/AdversarialRegularization", "anchor_text": "Adversarial Regularization", "paragraph_index": 6}, {"url": "https://ai.google/research/pubs/pub46568.pdf", "anchor_text": "Neural Graph Learning", "paragraph_index": 7}, {"url": "https://en.wikipedia.org/wiki/Graph_database", "anchor_text": "graphs", "paragraph_index": 7}, {"url": "https://www.tensorflow.org/datasets/catalog/beans", "anchor_text": "Beans", "paragraph_index": 14}, {"url": "https://github.com/cmp1/computer_vision_neural_structured_learning/tree/master", "anchor_text": "here", "paragraph_index": 15}, {"url": "https://www.tensorflow.org/neural_structured_learning/tutorials/adversarial_keras_cnn_mnist#conclusion", "anchor_text": "TensorFlow NSL page", "paragraph_index": 15}, {"url": "https://www.tensorflow.org/datasets", "anchor_text": "TensorFlow Datasets", "paragraph_index": 17}, {"url": "https://www.tensorflow.org/api_docs/python/tf/data/Dataset", "anchor_text": "tf.data.Dataset", "paragraph_index": 20}, {"url": "https://www.tensorflow.org/api_docs/python/tf/Tensor", "anchor_text": "tf.Tensor", "paragraph_index": 20}, {"url": "https://www.tensorflow.org/datasets/catalog/beans", "anchor_text": "feature attributes", "paragraph_index": 21}, {"url": "https://www.tensorflow.org/neural_structured_learning/api_docs/python/nsl/configs/make_adv_reg_config", "anchor_text": "nsl.configs.make_adv_reg_config", "paragraph_index": 27}, {"url": "https://github.com/tensorflow/neural-structured-learning/blob/v1.3.1/neural_structured_learning/keras/adversarial_regularization.py#L695-L747", "anchor_text": "here", "paragraph_index": 35}], "all_paragraphs": ["As many of us are no doubt aware, the invariable progress made in the field of Computer Vision has lead to some incredible achievements across multiple disciplines from healthcare and self-driving cars, to climate study and gaming, to name but a few.", "From state-of-the-art Liquid Nitrogen cooled hardware in the form of Tensor Processing Units (TPU) to increasingly sophisticated, multi-million parameter Deep-Convolutional Networks such as GoogLeNet, AlexNet the capability of such technology continues to break previously unassailable barriers.", "Despite these incredible achievements, it has been proven that even the most skilful models are not infallible. Multiple research efforts have demonstrated how sensitive these models are to even imperceivably small changes in the input data structure. Initially in the findings of the joint research paper by Google and New York University: \u2018Intriguing properties of neural networks, 2014\u2019 the subject of model vulnerability to adversarial examples is now recognised as a subject of such importance that competitions now exist to tackle it.", "The existence of these errors raises a variety of questions about out-of-sample generalization, and how the use of such examples might be used to abuse deployed systems.", "In some applications, these errors might not arise intentionally, moreover, they can arise as a result of human error or simply as a result of input instability. In the mining industry, computer vision has innumerable, highly useful applications, from streaming processing plant conveyor belt imagery in order to predict ore purity for example, to detecting commodity stockpile levels and illegal shipping/mining using satellite imagery.", "Quite often we find that such image data is corrupted during collection, as a result of camera misalignment, vibrations or simply very unique out-of-sample examples that can lead to misclassification.", "In order to overcome examples such as these and generally improve our models against corrupt or perturbed data, we can employ a form of Neural Structured Learning called Adversarial Regularization.", "Neural Structured Learning (NSL) is a relatively new, open-source framework developed by the good folks at TensorFlow for training deep neural networks with structured signals (as opposed to the conventional single sample). NSL implements Neural Graph Learning, in which a neural network is trained using graphs (see image below) which carry information about both a target (node) and neighbouring information in other nodes connected via node edges.", "In doing so, this allows the trained model to simultaneously exploit both labelled and unlabelled data through:", "Consistent with point two, we can observe in the above expression both the minimisation of the empirical loss i.e. the supervised loss, and the neighbour loss. In the above example, this is computed as the dot product of the computed weight vector within a target hidden layer, and the distance measure (i.e. L1, L2 distance) between the input, X, and the same input with some degree of noise added to it:", "Adversarial examples are typically created by computing the gradient of the output with respect to the input, x_i, and then maximizing the loss. For example, where you have a model that classifies Chihuahuas and muffins, and you wish to create adversarial examples, you would input a 128 x 128 pixel Chihuahua image into your network, compute the gradient of the loss w.r.t. the input (a 128 x 128 tensor), then add the negative gradient (perturbation) to your image until the network classifies the image as a muffin. By training on these generated images again with the correct label, the network becomes more robust to noise/perturbation.", "What can we do if do not have such explicit structures as inputs?", "What is particularly useful about TensorFlows Neural Structured Learning library is the provision of methods that enable users to dynamically construct induced adversarial examples as implicit structures from raw input data, through adversarial perturbation. This generalisation of NSL is known as Adversarial Regularisation, where adversarial examples are constructed to intentionally confuse the model during training, resulting in models that are robust against small input perturbations.", "In the following example, we are going to compare the performance of a baseline image classification model (specifically, a Convolutional Neural Network), against a variant that utilises adversarial regularisation. Unfortunately, we cannot demonstrate the use of AR on any of the aforementioned mining data, as this is proprietary.", "We will instead perform this analysis for two models trained on a renowned image classification dataset \u2014 Beans. We will compare the results of the baseline model, versus one trained on adversarial examples in order to fully comprehend the effect that adversarial regularisation has on the ability and performance of each model.", "The Colab notebook containing the code used in this article can be found here. An excellent tutorial, where the inspiration for this article and where some of the code originated from, can be found on the TensorFlow NSL page.", "Before we get started, we must first install TensorFlow\u2019s Neural Structured Learning package:", "TensorFlow hosts a number of renowned datasets within its TensorFlow Datasets collection.", "We can load the Beans dataset that we want to train our model on using the tfds.load() method, which performs two operations:", "Prior to performing any image scaling or image augmentation/perturbation, we can inspect a sample of the images within the dataset to gain an understanding of the various structures and compositions that a Convolutional layer might pick up as a feature(s), and to understand the differences between the various classes within the dataset:", "By default, the tf.data.Dataset object contains a dict of tf.Tensors. We can iterate over the batch of images (the tf.data.Dataset key values) by calling .as_numpy_iterator() on our raw_images within our list comprehension. This method returns a generator which converts the batch elements of the dataset from a tf.Tensorto np.array format. We can then plot the resulting batch of images:", "We perform a simple scaling operation on our image data to map the inputs to a float tensor between 0 and 1 (the Beans dataset is a collection of 500 x 500 x 3 images). Helpfully, TDFS datasets store feature attributes as Dictionaries:", "As a result, we can access the individual images and their labels and perform these preprocessing ops in-place with the .map() attribute of our train and test tf.Dataset instances:", "The function examples_to_dict will be explained shortly.", "We then build a simple, baseline convolution neural network model, and fit it to our image data:", "We can see that our baseline model has performed well on the test dataset, achieving 89% accuracy.", "We will now examine how this model performs against a test set that includes adversarially perturbed examples, and pitch it against a model trained on a dataset that includes said examples. We proceed by first creating another convolutional NN model, only this time we will incorporate adversarial training into its training objective.", "Next, using TensorFlow\u2019s NSL framework, we define a config object with NSL\u2019s helper function, nsl.configs.make_adv_reg_config :", "We can note that this function requires us to set a number of Hyperparameters. Some of these do not require explicit values, others require our input:", "We can then wrap our newly created model using the nsl.keras.AdversarialRegularization function, which will add the adversarial regularization we configured earlier with our adv_reg_configobject to the training objective (the loss function to be minimised) of our base model.", "An important point to note at this stage is that our model expects its input to be a dictionary mapping of feature names to feature values. One can see that when we instantiate our adversarial model, we must pass in label_keys as a parameter. The enables our model to distinguish between input data and target data. Here, we can use our examples_to_dict function and map it to our training and test datasets:", "we then compile, fit and evaluate our adversarially regularised model as normal:", "Similarly, our adversarially regularised model generalises well to our test dataset, achieving similar accuracy (0.91%) to that of our baseline_model.", "In much the same way that one would evaluate a trained model\u2019s ability on a test set, we shall perform the same operation on our two models. In this instance, however, we will compare our two models; the baseline CNN, and the variant that has been trained on adversarially-perturbed input data against a test dataset containing adversarially perturbed examples.", "In order to generate the aforementioned examples, we must first create a reference model, whose configuration (losses, metrics and calibrated/learned weights) will be used to generate perturbed examples. To do so, we once again wrap our performance baseline model with the nsl.keras.AdversarialRegularization function and compile it. Note that we do not fit this model to our dataset \u2014 we want to retain the same learned weights as our base model):", "If at this point you are like me and like to understand the logic behind these things, you can find the source code containing the adversarial regularization class here.", "We then store our two models; the baseline and the adversarially regularized variant in a dictionary, and subsequently loop over each batch of our test dataset (evaluation in batches is a requirement of the AdversarialRegularization model).", "With the .perturb_on_batch() method of our newly wrapped reference_model, we can generate adversarially perturbed batches consistent with our adv_reg_config object, and evaluate the performance of our two models on them:", "The effectiveness of adversarial learning on improving model robustness is immediately apparent by the dramatic reduction in our baseline model\u2019s performance on adversarially perturbed data, vs that of the adv_reg_model.", "Performance on our baseline model has dropped 69% vs our adversarially regularised model, which realised only a 14% drop in performance.", "With Kera\u2019s Layers API, we can examine the effect of adversarially perturbed data on our baseline model by visualising the convolutional layers to understand what features are extracted both prior and after perturbation:", "We can observe in the image above, that our baseline model appears to have identified the relevant distinguishing features that define each class: angular leaf rust, healthy and bean spot, made visible by the distinct colour gradients.", "Now we can examine what features the baseline model identifies in the perturbed data:", "As we can observe in the above representations, the network\u2019s has struggled to represent the raw pixels in each image, and are considerably more abstract as a result of the perturbation. In the image to the far right, it would appear that network managed to successfully retain the features representative of the \u2018angular leaf rust\u2019 class, but the basic structure of the leaf is mostly lost. Of course, this is just a single convolutional layer within our untuned network but still serves as a credible demonstration of how a previously skilful model can be unseated as a result of adversarial input data.", "In this article we examined how we can significantly increase a convolutional neural network model\u2019s robustness and generalisation performance on adversarially perturbed data, using adversarial regularisation. Additionally, we explored:", "Please do comment if you find errors or have any constructive criticism/builds.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist at Anglo American | Ex-Google | Commodities Trading | Quantitative Research | Deep/Probabilistic Learning | Contributor to TensorFlow Probability"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F378523dace08&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----378523dace08--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----378523dace08--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://chrisprice-82740.medium.com/?source=post_page-----378523dace08--------------------------------", "anchor_text": ""}, {"url": "https://chrisprice-82740.medium.com/?source=post_page-----378523dace08--------------------------------", "anchor_text": "Chris Price"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5e70db60a641&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&user=Chris+Price&userId=5e70db60a641&source=post_page-5e70db60a641----378523dace08---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F378523dace08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F378523dace08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://inews.co.uk/news/deepmind-google-ai-predict-eye-conditions-threatening-sight-429071", "anchor_text": "healthcare"}, {"url": "https://cloud.google.com/tpu/docs/tpus", "anchor_text": "Tensor Processing Units (TPU)"}, {"url": "https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/43022.pdf", "anchor_text": "GoogLeNet"}, {"url": "https://en.wikipedia.org/wiki/AlexNet", "anchor_text": "AlexNet"}, {"url": "http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/42503.pdf", "anchor_text": "\u2018Intriguing properties of neural networks, 2014\u2019"}, {"url": "https://ai.googleblog.com/2018/09/introducing-unrestricted-adversarial.html", "anchor_text": "competitions"}, {"url": "https://github.com/tensorflow/neural-structured-learning", "anchor_text": "Neural Structured Learning"}, {"url": "https://www.tensorflow.org/neural_structured_learning/api_docs/python/nsl/keras/AdversarialRegularization", "anchor_text": "Adversarial Regularization"}, {"url": "https://ai.google/research/pubs/pub46568.pdf", "anchor_text": "Neural Graph Learning"}, {"url": "https://en.wikipedia.org/wiki/Graph_database", "anchor_text": "graphs"}, {"url": "https://blog.tensorflow.org/2019/09/introducing-neural-structured-learning.html", "anchor_text": "Image from TensorFlow Blog: Introducing Neural Structured Learning in TensorFlow, 2019"}, {"url": "https://blog.tensorflow.org/2019/09/introducing-neural-structured-learning.html", "anchor_text": "Image from TensorFlow Blog: Neural Structured Learning, Adversarial Examples, 2019"}, {"url": "https://arxiv.org/abs/1807.06732", "anchor_text": "demonstrably more robust"}, {"url": "https://www.tensorflow.org/datasets/catalog/beans", "anchor_text": "Beans"}, {"url": "https://github.com/cmp1/computer_vision_neural_structured_learning/tree/master", "anchor_text": "here"}, {"url": "https://www.tensorflow.org/neural_structured_learning/tutorials/adversarial_keras_cnn_mnist#conclusion", "anchor_text": "TensorFlow NSL page"}, {"url": "https://www.tensorflow.org/datasets", "anchor_text": "TensorFlow Datasets"}, {"url": "https://www.tensorflow.org/tutorials/load_data/tfrecord", "anchor_text": "tfrecord"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/data/Dataset", "anchor_text": "tf.data.Dataset"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/data/Dataset", "anchor_text": "tf.data.Dataset"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/Tensor", "anchor_text": "tf.Tensor"}, {"url": "https://www.tensorflow.org/datasets/catalog/beans", "anchor_text": "feature attributes"}, {"url": "https://www.tensorflow.org/neural_structured_learning/api_docs/python/nsl/configs/make_adv_reg_config", "anchor_text": "nsl.configs.make_adv_reg_config"}, {"url": "https://github.com/tensorflow/neural-structured-learning/blob/v1.3.1/neural_structured_learning/keras/adversarial_regularization.py#L695-L747", "anchor_text": "here"}, {"url": "http://static.googleusercontent.com/media/research.google.com/en//pubs/archive/42503.pdf", "anchor_text": "Google Inc, NYU, 2014, Intriguing properties of neural networks"}, {"url": "https://blog.tensorflow.org/2019/09/introducing-neural-structured-learning.html", "anchor_text": "TensorFlow Blog, 2019, Neural Structured Learning"}, {"url": "https://arxiv.org/abs/1807.06732", "anchor_text": "Gilmer et al, 2018, Motivating the Rules of the Game for Adversarial Example Research."}, {"url": "https://medium.com/tag/tensorflow?source=post_page-----378523dace08---------------tensorflow-----------------", "anchor_text": "TensorFlow"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----378523dace08---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----378523dace08---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----378523dace08---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/tag/convolutional-network?source=post_page-----378523dace08---------------convolutional_network-----------------", "anchor_text": "Convolutional Network"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F378523dace08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&user=Chris+Price&userId=5e70db60a641&source=-----378523dace08---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F378523dace08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&user=Chris+Price&userId=5e70db60a641&source=-----378523dace08---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F378523dace08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----378523dace08--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F378523dace08&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----378523dace08---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----378523dace08--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----378523dace08--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----378523dace08--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----378523dace08--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----378523dace08--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----378523dace08--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----378523dace08--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----378523dace08--------------------------------", "anchor_text": ""}, {"url": "https://chrisprice-82740.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://chrisprice-82740.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Chris Price"}, {"url": "https://chrisprice-82740.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "101 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5e70db60a641&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&user=Chris+Price&userId=5e70db60a641&source=post_page-5e70db60a641--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F3f1f4f3d6c9d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneural-structured-learning-adversarial-regularization-378523dace08&newsletterV3=5e70db60a641&newsletterV3Id=3f1f4f3d6c9d&user=Chris+Price&userId=5e70db60a641&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}