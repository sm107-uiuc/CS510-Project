{"url": "https://towardsdatascience.com/creating-image-classification-model-with-bayesian-perspective-a90a5956b14e", "time": 1683017035.4035132, "path": "towardsdatascience.com/creating-image-classification-model-with-bayesian-perspective-a90a5956b14e/", "webpage": {"metadata": {"title": "Creating Image Classification Model with Bayesian Perspective | by Ruben Winastwan | Towards Data Science", "h1": "Creating Image Classification Model with Bayesian Perspective", "description": "With the emergence and advancements of various deep learning frameworks like TensorFlow and PyTorch, solving an image classification task has never been this easy. With only several lines of code, we\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.kaggle.com/alxmamaev/flowers-recognition", "anchor_text": "the flowers dataset that you can freely download on Kaggle", "paragraph_index": 4}, {"url": "https://github.com/marcellusruben/bayesian_cnn", "anchor_text": "here", "paragraph_index": 60}], "all_paragraphs": ["With the emergence and advancements of various deep learning frameworks like TensorFlow and PyTorch, solving an image classification task has never been this easy. With only several lines of code, we are able to create a powerful Convolutional Neural Networks (CNN) model to classify images.", "In this article, let\u2019s take a look at a slightly different perspective of creating a CNN model. Instead of creating a standard CNN model, let\u2019s build a CNN model from a Bayesian perspective. Hopefully, in the end we are able to see how Bayesian CNN differs from the standard CNN in terms of their architecture and inferences when predicting images.", "Below are the steps that we are going to do in this post:", "Let\u2019s get started by looking at the overview of the dataset that we\u2019re going to work on.", "For the data, we\u2019re going to use the flowers dataset that you can freely download on Kaggle. This data contains a collection of five different types of flowers: daisy, dandelion, tulip, rose, and sunflower. The main goal is to classify which flower belongs to which type.", "In total, there are 4242 images of flowers, where there are about 800 images of flowers in each type.", "Now if you\u2019ve just downloaded the data, you\u2019ll get the zip file. If you want to follow along, the next step would be to unzip the file and place the unzipped file into your preferred directory. Next, let\u2019s start coding and load the data.", "As you\u2019ve probably noticed, the flowers folder doesn\u2019t contain separate files for training data and test data. Hence, we need to make one ourselves. So far, our folder has the following format:", "And we want to split the folder into a training folder and test folder such that we have the following format:", "To split the folder into a training and test folder, we can use a library called split-folders . If you haven\u2019t installed it yet, you can type the following pip command in your prompt.", "Splitting the folder with this library is very straightforward. All you need to do is specifying the path and the name of the folder that you want to split. Next, you need to also specify the path and the folder name of the output folder. Below is the code implementation to split the folder using split-folders library.", "Now if you run the code above, you\u2019ll get a new folder called flowers_splitted. Inside this folder, you will see a separate folder for training and for validation.", "Let\u2019s define our training data and test data from these new folders.", "Next, we can use image generator from TensorFlow to generate training and test data as well as to automate the labeling process of our images. Let\u2019s create a function to do this purpose.", "Now we can call the function above to generate our training and test set by passing the variables train_dir and test_dir that we have defined earlier.", "With this step, now we have loaded the data and we can proceed to build an image classification model, both with standard CNN and with Bayesian CNN.", "Before we delve into building a model with a Bayesian perspective, let\u2019s first build an image classification model with the standard CNN model. Then, we can compare how Bayesian CNN differs from the standard CNN.", "To build the model, we\u2019re going to use standard CNN with TensorFlow. The model consists of four convolutional layers before we flatten it and use a dense layer at the very end.", "And below is the code implementation to create a CNN model similar with the illustration above.", "As you can see, the model in total has 198,061 parameters, with 6152 parameters at the beginning and 2565 at the end. We\u2019re going to compare these parameters with the Bayesian model later.", "Next, we need to compile the model. In this article, we will use Adam optimizer for the model. As the problem is a classification problem, we need to use categorical cross-entropy as the loss function. Finally, accuracy metrics will be used.", "After compiling the model, now we can start to train the model. The model will be trained in total for 100 epochs, since 100 epochs will be enough for the loss function to converge. After training the model, we can alternatively save the trained model.", "Finally, we can now make a prediction based on images in our test set with the trained model. Let\u2019s create a function to preprocess the image that we want to predict and then assign the model to make a prediction based on that image.", "With the standard CNN model, now we can predict which type of flower our image belongs to.", "Let\u2019s take a dandelion image from the test set as an example. As you can see below, the model correctly predicts that our image is a dandelion. If we want to check the probability of our image belongs to a dandelion class, we can do that as well.", "As you can see above, the model predicts with 0.999 probability that our image belongs to a dandelion class. This means that our model is very certain that our image is a dandelion. Great!", "Now let\u2019s look at another image from the test set. Let\u2019s see if the model can predict the image of a rose correctly.", "And our model once again predicts our image correctly. It predicts with 0.999 probability that our image is a rose.", "This is the basic image classification model using the standard CNN architecture. The model looks great in the sense that it correctly predicts two of our images from the test set with a high probability.", "However, what we don\u2019t know is how certain is our model in assigning that 0.999 probability value on each of our images. Is the model really confident to assign that 0.999 probability value to our images? We also don\u2019t know if the model knows what it doesn\u2019t know.", "We can\u2019t answer all the points above with standard CNN. That\u2019s why we need to build a CNN model from a Bayesian perspective. Next, let\u2019s build a CNN model based on a Bayesian perspective.", "In order to build a Bayesian CNN, we need to first import the necessary libraries. In this article, we\u2019re going to use TensorFlow Probability library to create the first and the last layers of our neural networks model.", "If you haven\u2019t installed TensorFlow Probability library yet, you can do so by typing the following pip command in your prompt.", "Note that you need to upgrade your TensorFlow library to at least version 2.3.0 in order for you to be able to install TensorFlow Probability.", "Next, let\u2019s import the necessary libraries to build our neural networks.", "Now let\u2019s get started to build our CNN model with a Bayesian perspective. The architecture will be the same as the standard CNN model that we\u2019ve built before. So it has four convolutional layers before we flatten it and use a dense layer at the very end.", "You might be wondering, if the CNN architecture will be the same, then what is the difference between the standard CNN model and Bayesian CNN model? Well, the differences are the first convolutional layer and the last dense layer of the model.", "For the first convolution layer, instead of using a normal CNN Conv2D layer, we are going to use Convolutional2DReparameterization layer. The point of this layer is to take aleatoric uncertainty into account, which is the uncertainty that arises from the quality of the data. So, instead of creating an output of the same deterministic value as a standard CNN does, it will create an output that is drawn from a distribution.", "Because this layer creates an output from a distribution, then we need to define several things here as the argument:", "To define this KL divergence, we can use the available function from TensorFlow. We also need to make sure that we scale our KL divergence such that it is only applied once per epoch. A rule of thumb to scale this KL divergence is by dividing it by the total number of your training images.", "Now let\u2019s see how this Convolutional2DReparameterization layer looks like when we initialize it.", "As you can see, some of the arguments that we passed on this layer are the same as the standard convolution layer: we need to define the size of the kernel, filter, activation function, and input size. Next, we also add additional arguments for our prior, posterior, and KL divergence as we defined above.", "The stack of layers after this layer is the same as the previous standard CNN. What is different is the last dense layer. Instead of using a normal dense layer, we\u2019re going to use the DenseReparameterization layer.", "If the Convolutional2DReparameterization layer in the beginning is to take aleatoric uncertainty into account, this DenseReparameterization layer is applied to take epistemic uncertainty into account. Epistemic uncertainty is the uncertainty that arises from the model itself.", "To apply this layer, we need to pass the same arguments as in Convolutional2DReparameterization layer: the kernel prior and posterior, the bias prior and posterior, as well as the divergence function for KL divergence. As an output, we\u2019re going to pass this dense layer to a final one hot categorical layer consists of 5 units, as we have 5 classes in our flowers classification.", "Below is the entire implementation to build our Bayesian CNN model.", "Now if you look at the model summary that we have generated from our Bayesian CNN above, we can see that at the first convolutional layer and the last dense layer, the number of parameters is twice as many as the parameters in the standard CNN model.", "This is because we have changed the weight of parameters from a single deterministic value into a value that is drawn from a distribution. Since we used a normal distribution, then it has two parameters instead of just one: the mean and the standard deviation.", "Next, we can compile the model. Same as before, we\u2019re going to use Adam optimizer, and the metrics would be the model\u2019s accuracy. However, we\u2019re going to use a negative log-likelihood as our loss function for our Bayesian CNN model to maximize the likelihood estimate of the mean and the standard deviation of the weights.", "Now we are ready to train our model. For this Bayesian CNN, we\u2019re going to train the model for 300 epochs, since the model is more complicated than our standard CNN model.", "To predict an image from the test set, we need to define a function to take care all of the necessary steps.", "Since we have built a probabilistic model, then we\u2019re not going to get the same probability value when predicting an image. Because of that, we\u2019re going to assign the model to predict our image several times instead of just once. In this post, the model will be assigned to predict a single image 300 times instead of just one time.", "Next, based on that 300 predictions, we can create a 95% prediction interval for probabilities. Below is the function to implement that.", "Now we can start to predict an image from the test set and see how the model predicts the image. For the predictions, let\u2019s use the same two images that we have used in the standard CNN above: the dandelion one and the rose one.", "As you can see above, our model correctly predicts that our image is a dandelion with a very high probability value, which is ~1.0. Not only it predicts our image as dandelion with ~1.0 probability, it also assigns the ~1.0 probability value with an absolute certainty, which is great.", "Now let\u2019s take a look at our second image, which is the rose.", "With our previous standard CNN, our model predicts correctly that our image is a rose, with 0.999 probability value. That looks great. However, when you look at the result from our Bayesian CNN model above, the aleatoric and epistemic uncertainty actually exist when predicting our rose image:", "As mentioned earlier, we\u2019re assigning the model to predict our rose image 300 times instead of just once. Of those 300 predictions, in one run the model may predict our image as a rose with 0.1 probability and dandelion with 0.8 probability. In another run, it may predict our image as a rose with 1.0 probability and dandelion with 0 probability. The variability of probability value is huge in our CNN model.", "With this epistemic uncertainty, our CNN model basically knows what it doesn\u2019t know. It demands us to supply more variations in training data in order for it to classify our rose image with better certainty, like the one with dandelion image. Overall, epistemic uncertainty can be reduced by supplying more training data to the model.", "And that\u2019s it! Now you know how the standard CNN model differs from Bayesian CNN model. With Bayesian CNN, we are able to retain a hidden info from our model that we wouldn\u2019t know if we use standard CNN model.", "If you want to see the complete code of this post, you can access them here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Science || Machine Learning || Computer Vision || NLP"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fa90a5956b14e&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----a90a5956b14e--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a90a5956b14e--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@marcellusruben?source=post_page-----a90a5956b14e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@marcellusruben?source=post_page-----a90a5956b14e--------------------------------", "anchor_text": "Ruben Winastwan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5dae9da73c9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&user=Ruben+Winastwan&userId=5dae9da73c9b&source=post_page-5dae9da73c9b----a90a5956b14e---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa90a5956b14e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa90a5956b14e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@anniespratt?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Annie Spratt"}, {"url": "https://unsplash.com/s/photos/flowers?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://www.kaggle.com/alxmamaev/flowers-recognition", "anchor_text": "the flowers dataset that you can freely download on Kaggle"}, {"url": "https://medium.com/@cotra.marko/making-sense-of-the-kullback-leibler-kl-divergence-b0d57ee10e0a", "anchor_text": "Making sense of the Kullback\u2013Leibler (KL) DivergenceAnyone who has ever spent some time working with neural networks will have undoubtedly come across the Kullback-Liebler\u2026medium.com"}, {"url": "https://github.com/marcellusruben/bayesian_cnn", "anchor_text": "here"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----a90a5956b14e---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----a90a5956b14e---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/tag/data-science?source=post_page-----a90a5956b14e---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/image-classification?source=post_page-----a90a5956b14e---------------image_classification-----------------", "anchor_text": "Image Classification"}, {"url": "https://medium.com/tag/tensorflow?source=post_page-----a90a5956b14e---------------tensorflow-----------------", "anchor_text": "TensorFlow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa90a5956b14e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&user=Ruben+Winastwan&userId=5dae9da73c9b&source=-----a90a5956b14e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa90a5956b14e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&user=Ruben+Winastwan&userId=5dae9da73c9b&source=-----a90a5956b14e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa90a5956b14e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a90a5956b14e--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fa90a5956b14e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----a90a5956b14e---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----a90a5956b14e--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----a90a5956b14e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----a90a5956b14e--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----a90a5956b14e--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----a90a5956b14e--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----a90a5956b14e--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----a90a5956b14e--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----a90a5956b14e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@marcellusruben?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@marcellusruben?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ruben Winastwan"}, {"url": "https://medium.com/@marcellusruben/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "925 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5dae9da73c9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&user=Ruben+Winastwan&userId=5dae9da73c9b&source=post_page-5dae9da73c9b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F46c6747bd93b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-image-classification-model-with-bayesian-perspective-a90a5956b14e&newsletterV3=5dae9da73c9b&newsletterV3Id=46c6747bd93b&user=Ruben+Winastwan&userId=5dae9da73c9b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}