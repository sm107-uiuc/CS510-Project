{"url": "https://towardsdatascience.com/develop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c", "time": 1683018271.594354, "path": "towardsdatascience.com/develop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c/", "webpage": {"metadata": {"title": "Develop and Deploy a Scalable RESTful API using Node.js & Mongo. | by Saleh Alkhalifa | Towards Data Science", "h1": "Develop and Deploy a Scalable RESTful API using Node.js & Mongo.", "description": "An API, or Application Programming Interface, can be simply defined as an interaction between various software components. When a user clicks a button to see a list of their Facebook friends, likes\u2026"}, "outgoing_paragraph_urls": [{"url": "https://nodejs.org/en/", "anchor_text": "website", "paragraph_index": 9}, {"url": "https://www.mongodb.com/try/download/community", "anchor_text": "link", "paragraph_index": 11}, {"url": "https://www.mongodb.com/", "anchor_text": "https://www.mongodb.com/", "paragraph_index": 12}, {"url": "http://localhost:3000/api/v1/books", "anchor_text": "http://localhost:3000/api/v1/books", "paragraph_index": 35}, {"url": "http://www.heroku.com", "anchor_text": "www.heroku.com", "paragraph_index": 37}, {"url": "https://github.com/alkhalifas/node-api-books", "anchor_text": "GitHub", "paragraph_index": 43}], "all_paragraphs": ["An API, or Application Programming Interface, can be simply defined as an interaction between various software components. When a user clicks a button to see a list of their Facebook friends, likes on Instagram, or emails within an inbox, data is generally being exchanged in one way or another through a web service API.", "There are a number of different types of web service APIs such as:", "For the purposes of this article, we will be focusing specifically on the utilization of REST as an architectural principle.", "APIs function as methods allowing for the transfer of data from the client-side, to an API server which interacts with a database of some sort. Data is generally retrieved based on a set of conditions, and then returned back to the client.", "One of the most commonly used examples for an API generally involve the stock market, companies and daily prices. While keeping the diagram above in mind, a user (client) may request the price history data for a particular company. The client-side would make an API call specifying a specific company, and the API server would retrieve that information from the database, and return it to the user. Note that the user never interacts with the database, only the API server.", "An API call is an action in which an endpoint of a server is specified and request, and the server responds with the requested content. Take for example the process of logging into a social media website. A user would fill out their login information, and then click \u201clogin\u201d. Upon clicking this button, a number of API calls are made to authenticate the user and then retrieve the user\u2019s data. This in of itself is an example of an API call. Let us take a look at a simple example of a URL in which stock price data is being requested for a specific company.", "In the above example, you see the URL request broken down by section. We begin with an HTTPs protocol, followed by the name of a particular domain of interest. Following the best practices of a RESTful API, we then specify the path of the api as well as the version. We then specify the exact end point of interest. Notice that the endpoint follows a particular \u201cfunnel down\u201d approach in which we narrow down the scope of the data as we go from the left to right. We first start with all of the companies, and then specifically selection Apple as the company of interest, and then specifically request the prices from that one company. This is a classic RESTful architectural pattern.", "When interacting with an API server, there are four main methods one can take: GET, POST, PUT, and DELETE. For a more detailed explanation, please visit my last article in which in discuss this in more detail in a Python setting.", "In the following steps, we will be developing a Node.js API using Mongo as our database. Let us go ahead and get started.", "You can download Node.js directly from their website. Select the LTS option which is recommended for most users, and install that locally on your machine. You can confirm the installation by running \u201cnode\u201d on your command line.", "\u2026and you should see a welcome message from nodejs. If you do not, please re-run the installation of node.", "On the other hand the MongoDB Community Edition can be downloaded using this link. Select the version appropriate for your OS, and click download and install. You can confirm the installation of mongo by running either \u201cmongo\u201d to access the client, or \u201cmongod\u201d to start the database server.", "There are a number of remote database options ranging from scalable relational database to object databases depending on the specific usecase. For the purposes of this tutorial, we will be deploying our API to an object database known as Mongo. A Mongo database can be used via the CLI we installed in the previous section, or via a GUI. To get started, you will need to navigate the to https://www.mongodb.com/.", "Create a new account by selecting the \u201cStart Free\u201d option in the main page. once you have signed up for a new account, navigate to the clusters section of the website and select \u201cCreate a New Cluster\u201d.", "For the Cloud Provider & Region, select AWS and change the region closest to you. When selecting a region, be sure to select one with with \u201cFree Tier\u201d option.", "Keep all other settings such as Cluster Tier & Additional Settings as their defaults. Feel free to change the cluster name. Finally, click \u201cCreate Cluster\u201d. You will need to wait a few minutes while the cluster gets provisioned. Follow the tutorial that will auto-start at the end of the provisioning. This will walk you through creating the clusters credentials. Be sure to note the username, password, and collection. We will need those in a few minutes.", "Back on the main cluster page, find your new cluster and click the \u201cConnect\u201d button:", "A new menu will appear with three options. Select the option called \u201cConnect to MongoDB Compass\u201d.", "Clicking this option will bring up another menu consisting of two steps. Step 1 is to download Compass which is a GUI interface allowing you to interact with the database. The alternative to this is using the CLI we installed in the previous section, however, it is highly recommended you use the GUI. Step 2 is to copy the connection string. Be sure to substitute <password> for your actual password you created in the tutorial. Save this connection string, we will need this in a few moments.", "With Atlas installed, you can now open the GUI, connected to your database using the connection string, and create new data for your database.", "We can get stared by creating a new directory and then initializing npm (which was installed with Node). You will be asked to fill out a few items for the project such as the name, author, etc. These are completely optional, but recommended as best practice. Keep most items as their default values.", "At this point, the project is created and ready for development. I would recommend you open the directory with your favorite IDE such as IntelliJ, WebStorm, or VisualCode \u2014 all will function the same.", "We will be creating a few files within the project, each of which server a very specific function. Theoretically, we could group the contents of all of these files into server.js, however, decoupling the contents based on function is considered best practice when developing a node API, which is what we will complete here today. We beign with server.js which is the main file any incoming request will interact with. This then prompts the controller which determines the specific function to carry out based on the endpoint. The service then communications with the DAO (Data Access Object), which carries out a specific function in conjunction with the model and schema of our database \u2014 both of which will be governed using the mongoose library.", "To get stared, let us go ahead and install two libraries we will need: (1) Express to handle the backend web application framework of the API, and mongoose to help with the database interaction with Mongo.", "The server.js file acts as the main \u2018gatekeeper\u2019 for all API calls. There are three main functions we will set up within this file:", "Managing access is commonly done through what is known as a CORS policy. This can be configured using the CORS library which allows you to specify the domains that you do and do not wish to grant access to. For the purposes of this tutorial, we will grant access to all domains by listing the \u201c*\u201d in the code below.", "Once access is determined and granted, the file then passes the API request to controller which will determine the type of request by determining the endpoint. In order to access the controller, we must \u2018require\u2019 it.", "Finally, we will connect to the remote Mongo database using the Mongoose library. Paste the connection from the previous section that was copied from the MongoDB website.", "The controller is responsible for outlining the endpoints of your API that users can navigate to. For example, one particular endpoint we can create is www.website.com/api/v1/books which should return a list of all books.", "Perhaps we could even narrow down the scope and return a single book by specifying the book\u2019s ID. For that, we could use an endpoint of www.website.com/api/v1/books/123, in which 123 is the book\u2019s ID or primary key. We could also set up an endpoint to query by author.", "In addition to retrieving values, we can also specify other CRUD operations here such as deleting, posting, and updating our database entries.", "The book-service file is responsible for connecting the book-controller to the book-dao (Database Access Object). Within this file we simply create a connection by creating a new constant and connecting it to the dao function. In the case of finding all books:", "The book-dao file is responsible for connecting the data access object to the database object\u2019s model. It is here that we can now use Mongoose operations such as find() and findById(id). For example, we can find all book values using:", "The book-model file is responsible for handling the model and its association to the predefined schema in the file book-schema. One of the benefits of defining a schema and connecting it to the model is ensuring that all entries will be identify in their format. Within this file we define the attributes of our Book object in the sense that a book can have a title and author which are of the type String. A publication date which is of the type Date. An edition in the form of an integer. And finally a type which must be of one of three available options of type String.", "Depending on your IDE of choice, there may be some built in capabilities to run your server directly from your menu bar. If not, you can always run this via the command line. Navigate to the folder containing the server.js file.", "In your web browser, navigate to http://localhost:3000/api/v1/books which should now display a list of books in JSON format.", "With that, the server is now ready for deployment on Heroku. Go ahead and add and commit all your code thus far to GitHub.", "There are many servers where one can deploy their API, one of which is Heroku. If you have not done so already, navigate to www.heroku.com and create a free new account.", "Within the apps menu, click on \u201cNew\u201d and then \u201cCreate new app\u201d.", "Assign the application a name and region, and click \u201ccreate\u201d. You will then be guided to the application\u2019s menu.", "Within the application, navigate to the \u201cDeploy\u201d section.", "Next, select your deployment method of choice. You are free to deploy your API via the Heroku CLI, or via the GitHub integration.", "Once the application has been deployed, click on the \u201cOpen App\u201d option at the top of the menu and you will be directed to the API where you can now navigate to the API endpoints we prepared.", "Within this article we covered the basic concepts of RESTful APIs including their characteristics, structure, and architecture. We then provisioned and deployed a mongo database using MongoDB and AWS. Next, we prepared a best-practice Node server with full CRUD operations to manage our database of books. Finally, we deployed the server on Heroku allowing us to access our API from anywhere. The code for this project can be cloned from by GitHub account.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F232ad79e0f6c&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://alkhalifas.medium.com/?source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": ""}, {"url": "https://alkhalifas.medium.com/?source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": "Saleh Alkhalifa"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4e29ead8695c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&user=Saleh+Alkhalifa&userId=4e29ead8695c&source=post_page-4e29ead8695c----232ad79e0f6c---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F232ad79e0f6c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F232ad79e0f6c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://www.nodejs.org", "anchor_text": "www.nodejs.org"}, {"url": "http://www.mongodb.com", "anchor_text": "www.mongodb.com"}, {"url": "https://nodejs.org/en/", "anchor_text": "website"}, {"url": "https://www.mongodb.com/try/download/community", "anchor_text": "link"}, {"url": "https://www.mongodb.com/", "anchor_text": "https://www.mongodb.com/"}, {"url": "https://www.mongodb.com/", "anchor_text": "https://www.mongodb.com/"}, {"url": "https://www.mongodb.com/", "anchor_text": "https://www.mongodb.com/"}, {"url": "https://www.mongodb.com/", "anchor_text": "https://www.mongodb.com/"}, {"url": "https://www.mongodb.com/", "anchor_text": "https://www.mongodb.com/"}, {"url": "https://www.mongodb.com/", "anchor_text": "https://www.mongodb.com/"}, {"url": "http://localhost:3000/api/v1/books", "anchor_text": "http://localhost:3000/api/v1/books"}, {"url": "http://www.heroku.com", "anchor_text": "www.heroku.com"}, {"url": "https://www.mongodb.com/", "anchor_text": "https://www.heroku.com/"}, {"url": "https://www.mongodb.com/", "anchor_text": "https://www.heroku.com/"}, {"url": "https://www.mongodb.com/", "anchor_text": "https://www.heroku.com/"}, {"url": "https://www.mongodb.com/", "anchor_text": "https://www.heroku.com/"}, {"url": "https://github.com/alkhalifas/node-api-books", "anchor_text": "GitHub"}, {"url": "https://medium.com/tag/nodejs?source=post_page-----232ad79e0f6c---------------nodejs-----------------", "anchor_text": "Nodejs"}, {"url": "https://medium.com/tag/mongodb?source=post_page-----232ad79e0f6c---------------mongodb-----------------", "anchor_text": "Mongodb"}, {"url": "https://medium.com/tag/aws?source=post_page-----232ad79e0f6c---------------aws-----------------", "anchor_text": "AWS"}, {"url": "https://medium.com/tag/api?source=post_page-----232ad79e0f6c---------------api-----------------", "anchor_text": "API"}, {"url": "https://medium.com/tag/heroku?source=post_page-----232ad79e0f6c---------------heroku-----------------", "anchor_text": "Heroku"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F232ad79e0f6c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&user=Saleh+Alkhalifa&userId=4e29ead8695c&source=-----232ad79e0f6c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F232ad79e0f6c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&user=Saleh+Alkhalifa&userId=4e29ead8695c&source=-----232ad79e0f6c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F232ad79e0f6c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F232ad79e0f6c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----232ad79e0f6c---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----232ad79e0f6c--------------------------------", "anchor_text": ""}, {"url": "https://alkhalifas.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://alkhalifas.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Saleh Alkhalifa"}, {"url": "https://alkhalifas.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "166 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4e29ead8695c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&user=Saleh+Alkhalifa&userId=4e29ead8695c&source=post_page-4e29ead8695c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F311783af3d3e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdevelop-and-deploy-a-scalable-restful-api-using-nodejs-mongo-232ad79e0f6c&newsletterV3=4e29ead8695c&newsletterV3Id=311783af3d3e&user=Saleh+Alkhalifa&userId=4e29ead8695c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}