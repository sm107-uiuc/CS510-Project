{"url": "https://towardsdatascience.com/conv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6", "time": 1682994510.006332, "path": "towardsdatascience.com/conv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6/", "webpage": {"metadata": {"title": "Conv Nets for dummies. There are many great online articles\u2026 | by Rich Stureborg | Towards Data Science", "h1": "Conv Nets for dummies", "description": "There are many great online articles that explain convolutional neural networks (or \u201cCNNs\u201d) on levels ranging from beginner to advanced. This article, written for beginners, is meant to take a\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/artificial-neural-networks-for-total-beginners-d8cd07abaae4", "anchor_text": "find a great explanation with images here!", "paragraph_index": 19}, {"url": "http://cs231n.stanford.edu/", "anchor_text": "Stanford course", "paragraph_index": 27}, {"url": "https://www.quora.com/Why-do-we-need-a-non-linear-activation-function-in-a-convolutional-neural-network-The-convolution-is-already-non-linear-Shouldnt-that-already-be-enough", "anchor_text": "this one", "paragraph_index": 35}], "all_paragraphs": ["There are many great online articles that explain convolutional neural networks (or \u201cCNNs\u201d) on levels ranging from beginner to advanced. This article, written for beginners, is meant to take a different approach than most of those out there: a bottom-up explanation of the mechanisms and system that make up CNN. My hypothesis is that many engineers learn about solutions in the order they were created: adding every new function one at a time to build the final product.", "The Olympics of computer vision is an annual competition nicknamed the \u201cImageNet Challenge\u201d (ILSVRC). Starting in 2010, the task has been to build a computer program that can correctly identify the object in an image. That is, if I give your program a picture of a butterfly, it should return the string \u201cbutterfly.\u201d", "This process is something the human brain does almost instantly. You already know what the image above is, without me telling you. That\u2019s because the moment a human sees a lion, the brain recognizes it as a distinct object and immediately classifies it as \u201clion\u201d. It isn\u2019t difficult to think of the benefits from a survival perspective. The 2012 winner of ImageNet (named \u2018AlexNet\u2019) used this human skill as the basis for their design. They created a successful CNN by examining neuroscience theories regarding object recognition by the brain.", "So how does the brain turn the image above into \u201cthree dogs in a field?\u201d One thing we do is recognize the sharp edge between the green of the background with the brown of the dogs\u2019 fur. Using this we recognize a general outline of the dogs: two ears sticking out and long bodies. Other shapes inside of this outline help us determine that it is a dog rather than a fox (consider the tongue, shape of the mouth and nose, etc). The color of the dogs helps us, too. So assuming that we want to approach the problem of recognizing shapes just like a human does, we may want to start with making an algorithm that will recognize certain shapes or edges in an image. This is where Section 2 picks up.", "It is important to understand the shape of the input data for this problem. To a computer, an image is a 3-dimensional ( Width\u00d7Height\u00d7Depth ) matrix of values between 0\u2013255. A 4K color image is of dimensions 4096\u00d72160\u00d73. That is, its pixel-width by pixel-height by the three color channels RGB. The values represent intensity for each color of each pixel. For simplification, this article will mostly consider black-and-white images which have a depth of 1.", "Convolutional neural networks can be broken down into several components. These components can be considered separate algorithms and are commonly referred to as \u201clayers.\u201d First, consider layers individually. Section 3 will later examine how they\u2019re combined. There are three layers we will look at (A, B, C).", "As mentioned in section 1, we may want to recognize edges or colors inside of an image. For example, we may want to detect curves such as the one below. The curve can be represented using a matrix of values (just like the input). The depth of the filter is always equal to the depth of the image.", "Now we want to test if the image contains this shape. The matrix that represents this shape is called the filter. It is also referred to as the neuron or kernel. Let\u2019s test the simple image below for this shape using our filter:", "If we focus on a section of the image with the same dimensions (W\u00d7H\u00d7D) as the filter, we can calculate a dot-product of the image section values and the filter values. First, let\u2019s examine an area of the image that contains the shape we are testing for. The area we focus on is referred to as the receptive field:", "Now perform the dot product of between the filter and receptive field:", "The dot-product for this section computes to 218535, a very large number. This number would be smaller if the shape in the image wasn\u2019t so similar to the shape of the filter. Below is an example where the dot-product computes to a much lower value since the shape in the image doesn\u2019t match that of the filter (it computes to 0).", "In fact, the greater the dot-product is, the more alike are the filter and the section of the image. Therefore we can use a dot-product of the filter and a section of the image to test where specific shapes are located. Getting the filter values correct is important since you want to test for appropriate shapes. The values that we \u201ctrain\u201d in a CNN is exactly this: the matrix values of the filter. It is common to initialize the values randomly before training on a set of images. Note that the values of the filter can also be negative.", "But how do we store this information? We want to keep some form of record for where there are curves in the image. How do we store that there is one curve at the top left and there is no one on the right side?", "For every receptive field, the dot product computation is stored in another matrix called the activation map.", "It is called a map because any location on the activation map will represent how well the shape (filter) fits on the corresponding location of the actual image. In other words, the map shows where a certain shape appears in the image.", "The depth of the activation map for one filter is always 1.", "The purpose of a pooling layer is to reduce the spacial size of the activation maps. This not only reduces the amount of computation necessary but also protects against overfitting. The idea of pooling is very simple. We want to reduce large matrices to become smaller ones. The most common pooling technique used is max-pooling.", "The idea of this method is to keep only the maximum value in smaller regions of the activation map, and getting rid of the rest. In the orange region above, 7is the maximum value so it is kept while 5, 3, and 2 are thrown away.", "The fully-connected layer is always the last layer of a convolutional neural network. This is because it is the layer that associates the transformations done on the image into actual categories such as \u201clion\u201d and \u201cmouse\u201d.", "This layer is a traditional, multi-layer perceptron. Understanding multi-layer perceptrons is important to understand machine learning models in general (find a great explanation with images here!). The fully-connected layer of a CNN is only one of many cases where it is used. Therefore, I urge you to seek another tutorial that goes more in-depth for this topic. For now, I will focus on the input and output of this layer.", "The input of the fully connected layer is a matrix of values that contains information of where certain complex shapes are located. It essentially points to where on the image these shapes are.", "How we get this input will become more apparent in Section 3. For now, however, the important thing to remember is that the input indicates the location of complex patterns that help us guess what the image is composed of. We call these complex patterns trainable classifiers. The exact trainable classifiers that the model learns to look for may be much different from the illustrative examples given above.", "Why do we not just use a fully connected layer?", "Well, while the fully connected layer may be able to \u201canalyze\u201d combinations of already identified shapes, it is not able to make sense of individual pixels. That is because individual pixels don\u2019t correlate to what the image contains, while complex shapes do. Very few images of cats contain shapes of wheels.", "The output of the fully connected layer is a vector of probabilities for every category we decide to train the model on. If, for example, we force a model to categorize an image as either \u201ccat,\u201d \u201clion,\u201d or \u201ccar\u201d then the output may be a vector such as [0.91, 0.08, 0.01]. This means there is a 91% chance the image is of a cat, 8% that it is a lion, and 1% that it is a car. We then pick the most likely category as our \u201cguess\u201d for the image in question. The sum of the elements in this vector always adds to 1. (If you are interested in why it has to do with the activation function of the multi-layer perceptron).", "In short, the output weights are derived from both what trainable classifiers are in the image, but also where they are relative to each other. This highlights the importance of a good set of images to train on. If the model has never seen a car from the side, it may misclassify such an image as not being a car. However, the work we have done means we won\u2019t need to see every angle.", "There are a few ways to combine the layers described in section 2 into something useful to classify images. Here, we look at combining multiple convolutional layers to recognize complex shapes and what is sometimes called a fourth \u201clayer\u201d used in CNNs: non-linearity functions. Finally, we will look at some successful CNNs and their general architecture.", "In section 2A we discussed convolutional layers and took a simple example of a shape that we may want to test the image for. In reality, the filters look a bit different. To the left is an example from a Stanford course specifically on CNNs. It is a more accurate visualization of what the filters may look like.", "Recognizing these patterns is a good start, but they might not identify something as being a \u201clion\u201d or a \u201ccat.\u201d For that, we need to build more complex shapes using these simple ones.", "To recognize the shape below, we could create a filter for it just like before. The issue with a filter of that complexity is that it may either fail to recognize shapes which are similar but not perfect fits to it, or it can falsely trigger on shapes that don\u2019t look like the filter.", "Simpler filters are better at avoiding these issues. Thus, they are kept simple. Instead, we apply multiple filters to an image in one convolutional layer and combine them in the next layer only once they have been detected and recorded individually in the activation maps.", "The two individual shapes (filter 1 and 2) on the original image are identified in the activation maps as higher values (from dot-product computations). We can then create a filter of the same depth as the output of the first layer to combine the filters. In the example above this depth is 2 since we used 2 filters. In other architectures, this may be greater; it entirely depends on how many filters we use in the first layer. The filter for this second layer can be very simple in our case. We want to find occurrences of shape 1 by looking at activation map 1, and occurrences of shape 2 by looking at activation map 2. The projection of these onto a 2D image should yield their side-by-side combination. Thereby we identify the areas of the image with this more complex shape.", "This process is then repeated for as many times as you want. Repeating it more times means that the network can learn increasingly complex shapes. The goal is to learn to detect complex features that can become trainable classifiers for a list of objects. Consider the complex features of a car below:", "The specific features above aren\u2019t necessarily what a network competing in the ILSVRC learns to \u201clook for.\u201d They are just visualization to help us humans understand what is going on under the hood of CNNs.", "If you\u2019re familiar with other neural network structures you won\u2019t be surprised to hear that it\u2019s common practice to use non-linearity functions between convolutional layers. But why is that? What does a non-linearity function do?", "The simple answer is that convolution is a linear transformation. There are simple mathematical explanations of this (like this one), and I would urge you to read one if you aren\u2019t convinced of that already.", "Now, if we perform multiple linear transformations one after another, the resulting process could be simplified as a single linear transformation. Thus, in order to avoid the convolution layers from collapsing into a single transformation, we can introduce non-linear elements between each convolution.", "One successful non-linearity function used in many CNNs is ReLU. This is simply the function \u201cmax(0,x)\u201d where x is the input value, applied element-wise across a matrix. It turns any negative values into 0.", "You now understand all the building blocks. We (1) take an image and apply a convolution layer. We then (2) apply a non-linearity function to the output in order to (3) repeat with another convolution layer. After a few convolution and non-linearity pair layers, we (4) apply a pooling layer to reduce complexity and avoid overfitting. With some (5) repetitions of this (steps 1\u20134), we have identified some trainable classifiers and can (6) send the output matrix into a fully-connected layer. It outputs probability weights for each category we want to train it on. The process is summarized below:", "All the choices made regarding the number of layers, their hyper-parameters, and the order of them will uniquely identify a network. There are many open source and famous networks, with different purposes and levels of success. We already discussed AlexNet, the winner of ILSVRC 2012. Another network which focuses on recognizing more complex trainable classifiers is called the VGG.", "That\u2019s it! At this point, we understand how a CNN solves the problem we identified at the top: classifying images that it hasn\u2019t seen before into subject categories.", "If you liked this article, please consider giving it a round of applause. It really helps me out and motivates me to make more!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Ph.D. candidate at Duke University, working on research regarding vaccine misinformation and credibility online."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fc1b754fb14d6&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@stureborg.r?source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@stureborg.r?source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": "Rich Stureborg"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbeba0fb6561a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&user=Rich+Stureborg&userId=beba0fb6561a&source=post_page-beba0fb6561a----c1b754fb14d6---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc1b754fb14d6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc1b754fb14d6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/vdumoulin/conv_arithmetic", "anchor_text": "this"}, {"url": "https://towardsdatascience.com/artificial-neural-networks-for-total-beginners-d8cd07abaae4", "anchor_text": "find a great explanation with images here!"}, {"url": "http://cs231n.stanford.edu/", "anchor_text": "Stanford course"}, {"url": "https://www.quora.com/Why-do-we-need-a-non-linear-activation-function-in-a-convolutional-neural-network-The-convolution-is-already-non-linear-Shouldnt-that-already-be-enough", "anchor_text": "this one"}, {"url": "http://cs231n.stanford.edu/", "anchor_text": "course"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----c1b754fb14d6---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/convolution-neural-net?source=post_page-----c1b754fb14d6---------------convolution_neural_net-----------------", "anchor_text": "Convolution Neural Net"}, {"url": "https://medium.com/tag/convolutional-network?source=post_page-----c1b754fb14d6---------------convolutional_network-----------------", "anchor_text": "Convolutional Network"}, {"url": "https://medium.com/tag/data-science?source=post_page-----c1b754fb14d6---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----c1b754fb14d6---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc1b754fb14d6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&user=Rich+Stureborg&userId=beba0fb6561a&source=-----c1b754fb14d6---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc1b754fb14d6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&user=Rich+Stureborg&userId=beba0fb6561a&source=-----c1b754fb14d6---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc1b754fb14d6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fc1b754fb14d6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----c1b754fb14d6---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----c1b754fb14d6--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@stureborg.r?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@stureborg.r?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Rich Stureborg"}, {"url": "https://medium.com/@stureborg.r/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "55 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbeba0fb6561a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&user=Rich+Stureborg&userId=beba0fb6561a&source=post_page-beba0fb6561a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F787307130fc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fconv-nets-for-dummies-a-bottom-up-approach-c1b754fb14d6&newsletterV3=beba0fb6561a&newsletterV3Id=787307130fc&user=Rich+Stureborg&userId=beba0fb6561a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}