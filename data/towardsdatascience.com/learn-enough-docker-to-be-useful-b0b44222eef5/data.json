{"url": "https://towardsdatascience.com/learn-enough-docker-to-be-useful-b0b44222eef5", "time": 1682994805.841138, "path": "towardsdatascience.com/learn-enough-docker-to-be-useful-b0b44222eef5/", "webpage": {"metadata": {"title": "Learn Enough Docker to be Useful. Part 3: A Dozen Dandy Dockerfile\u2026 | by Jeff Hale | Towards Data Science", "h1": "Learn Enough Docker to be Useful", "description": "This article is all about Dockerfiles. It\u2019s the third installment in a six-part series on Docker. If you haven\u2019t read Part 1, read it first and see Docker container concepts in a whole new light. \ud83d\udca1\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/learn-enough-docker-to-be-useful-b7ba70caeb4b", "anchor_text": "Part 1", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/learn-enough-docker-to-be-useful-1c40ea269fa8", "anchor_text": "Part 2", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/slimming-down-your-docker-images-275f0ca9337e", "anchor_text": "future articles", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/Everything_is_a_file", "anchor_text": "file", "paragraph_index": 7}, {"url": "https://docs.docker.com/develop/develop-images/baseimages/", "anchor_text": "parent image", "paragraph_index": 17}, {"url": "https://hub.docker.com/_/ubuntu", "anchor_text": "official Docker repository", "paragraph_index": 18}, {"url": "https://docs.docker.com/v17.09/engine/userguide/storagedriver/imagesandcontainers/", "anchor_text": "here", "paragraph_index": 23}, {"url": "https://github.com/docker-library/python/blob/ab8b829cfefdb460ebc17e570332f0479039e918/3.7/alpine3.8/Dockerfile", "anchor_text": "source code", "paragraph_index": 26}, {"url": "https://docs.docker.com/config/labels-custom-metadata/", "anchor_text": "here", "paragraph_index": 27}, {"url": "https://www.cyberciti.biz/faq/10-alpine-linux-apk-command-examples/", "anchor_text": "Alpine Linux package manager", "paragraph_index": 33}, {"url": "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/", "anchor_text": "Docker docs", "paragraph_index": 39}, {"url": "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy", "anchor_text": "Docker docs", "paragraph_index": 40}, {"url": "https://pypi.org/project/pip/", "anchor_text": "pip", "paragraph_index": 48}, {"url": "https://pythonwheels.com/", "anchor_text": "wheel", "paragraph_index": 48}, {"url": "https://medium.com/@chadlagore/conda-environments-with-docker-82cdc9d25754", "anchor_text": "conda", "paragraph_index": 48}, {"url": "https://vsupalov.com/docker-build-time-env-values/", "anchor_text": "here", "paragraph_index": 54}, {"url": "https://docs.docker.com/v17.09/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact", "anchor_text": "Docker docs", "paragraph_index": 58}, {"url": "https://docs.python.org/3/library/argparse.html", "anchor_text": "argparse", "paragraph_index": 59}, {"url": "https://kapeli.com/cheat_sheets/Dockerfile.docset/Contents/Resources/Documents/index", "anchor_text": "cheat sheet", "paragraph_index": 66}, {"url": "https://towardsdatascience.com/slimming-down-your-docker-images-275f0ca9337e", "anchor_text": "next article in this series on slimming down images", "paragraph_index": 67}, {"url": "https://medium.com/@jeffhale", "anchor_text": "me", "paragraph_index": 67}, {"url": "https://medium.com/@jeffhale", "anchor_text": "here", "paragraph_index": 69}, {"url": "https://dataawesome.com", "anchor_text": "https://dataawesome.com", "paragraph_index": 71}], "all_paragraphs": ["This article is all about Dockerfiles. It\u2019s the third installment in a six-part series on Docker. If you haven\u2019t read Part 1, read it first and see Docker container concepts in a whole new light. \ud83d\udca1 Part 2 is a quick run-through of the Docker ecosystem. In future articles, I\u2019ll look at slimming down Docker images, Docker CLI commands, and using data with Docker.", "Let\u2019s jump into the dozen Dockerfile instructions to know!", "Recall that a Docker container is a Docker image brought to life. It\u2019s a self-contained, minimal operating system with application code.", "The Docker image is created at build time and the Docker container is created at run time.", "The Dockerfile is at the heart of Docker. The Dockerfile tells Docker how to build the image that will be used to make containers.", "Each Docker image contains a file named Dockerfile with no extension. The Dockerfile is assumed to be in the current working directory when docker build is called to create an image. A different location can be specified with the file flag (-f).", "Recall that a container is built from a series of layers. Each layer is read only, except the final container layer that sits on top of the others. The Dockerfile tells Docker which layers to add and in which order to add them.", "Each layer is really just a file with the changes since the previous layer. In Unix, pretty much everything is a file.", "The base image provides the initial layer(s). A base image is also called a parent image.", "When an image is pulled from a remote repository to a local machine only layers that are not already on the local machine are downloaded. Docker is all about saving space and time by reusing existing layers.", "A Dockerfile instruction is a capitalized word at the start of a line followed by its arguments. Each line in a Dockerfile can contain an instruction. Instructions are processed from top to bottom when an image is built. Instructions look like this:", "Only the instructions FROM, RUN, COPY, and ADD create layers in the final image. Other instructions configure things, add metadata, or tell Docker to do something at run time, such as expose a port or run a command.", "In this article, I\u2019m assuming you are using a Unix-based Docker image. You can also used Windows-based images, but that\u2019s a slower, less-pleasant, less-common process. So use Unix if you can.", "Let\u2019s do a quick once-over of the dozen Dockerfile instructions we\u2019ll explore.", "FROM \u2014 specifies the base (parent) image.LABEL \u2014provides metadata. Good place to include maintainer info.ENV \u2014 sets a persistent environment variable.RUN \u2014runs a command and creates an image layer. Used to install packages into containers.COPY \u2014 copies files and directories to the container.ADD \u2014 copies files and directories to the container. Can upack local .tar files.CMD \u2014 provides a command and arguments for an executing container. Parameters can be overridden. There can be only one CMD.WORKDIR \u2014 sets the working directory for the instructions that follow.ARG \u2014 defines a variable to pass to Docker at build-time.ENTRYPOINT \u2014 provides command and arguments for an executing container. Arguments persist. EXPOSE \u2014 exposes a port.VOLUME \u2014 creates a directory mount point to access and store persistent data.", "A Dockerfile can be as simple as this single line:", "A Dockerfile must start with a FROM instruction or an ARG instruction followed by a FROM instruction.", "The FROM keyword tells Docker to use a base image that matches the provided repository and tag. A base image is also called a parent image.", "In this example, ubuntu is the image repository. Ubuntu is the name of an official Docker repository that provides a basic version of the popular Ubuntu version of the Linux operating system.", "Notice that this Dockerfile includes a tag for the base image: 18.04 . This tag tells Docker which version of the image in the ubuntu repository to pull. If no tag is included, then Docker assumes the latest tag, by default. To make your intent clear, it\u2019s good practice to specify a base image tag.", "When the Dockerfile above is used to build an image locally for the first time, Docker downloads the layers specified in the ubuntu image. The layers can be thought of as stacked upon each other. Each layer is a file with the set of differences from the layer before it.", "When you create a container, you add a writable layer on top of the read-only layers.", "Docker uses a copy-on-write strategy for efficiency. If a layer exists at a previous level within an image, and another layer needs read access to it, Docker uses the existing file. Nothing needs to be downloaded.", "When an image is running, if a layer needs modified by a container, then that file is copied into the top, writeable layer. Check out the Docker docs here to learn more about copy-on-write.", "Although our one-line image is concise, it\u2019s also slow, provides little information, and does nothing at container run time. Let\u2019s look at a longer Dockerfile that builds a much smaller size image and executes a script at container run time.", "Whoa, what\u2019s going on here? Let\u2019s step through it and demystify.", "The base image is an official Python image with the tag 3.7.2-alpine3.8. As you can see from its source code, the image includes Linux, Python and not much else. Alpine images are popular because they are small, fast, and secure. However, Alpine images don\u2019t come with many operating system niceties. You must install such packages yourself, should you need them.", "The next instruction is LABEL. LABEL adds metadata to the image. In this case, it provides the image maintainer\u2019s contact info. Labels don\u2019t slow down builds or take up space and they do provide useful information about the Docker image, so definitely use them. More about LABEL metadata can be found here.", "ENV sets a persistent environment variable that is available at container run time. In the example above, you could use the ADMIN variable when your Docker container is created.", "ENV is nice for setting constants. If you use a constant several places in your Dockerfile and want to change its value at a later time, you can do so in one location.", "With Dockerfiles there are often multiple ways to accomplish the same thing. The best method for your case is a matter of balancing Docker conventions, transparency, and speed. For example, RUN, CMD, and ENTRYPOINT serve different purposes, and can all be used to execute commands.", "RUN creates a layer at build-time. Docker commits the state of the image after each RUN.", "RUN is often used to install packages into an image. In the example above, RUN apk update && apk upgrade tells Docker to update the packages from the base image. && apk add bash tells Docker to install bash into the image.", "apk stands for Alpine Linux package manager. If you\u2019re using a Linux base image in a flavor other than Alpine, then you\u2019d install packages with RUN apt-get instead of apk. apt stand for advanced package tool. I\u2019ll discuss other ways to install packages in a later example.", "RUN \u2014 and its cousins, CMD and ENTRYPOINT \u2014 can be used in exec form or shell form. Exec form uses JSON array syntax like so: RUN [\"my_executable\", \"my_first_param1\", \"my_second_param2\"].", "In the example above, we used shell form in the format RUN apk update && apk upgrade && apk add bash.", "Later in our Dockerfile we used the preferred exec form with RUN [\"mkdir\", \"/a_directory\"] to create a directory. Don\u2019t forget to use double quotes for strings with JSON syntax for exec form!", "The COPY . ./app instruction tells Docker to take the files and folders in your local build context and add them to the Docker image\u2019s current working directory. Copy will create the target directory if it doesn\u2019t exist.", "ADD does the same thing as COPY, but has two more use cases. ADD can be used to move files from a remote URL to a container and ADD can extract local TAR files.", "I used ADD in the example above to copy a file from a remote url into the container\u2019s my_app_directory. The Docker docs don\u2019t recommend using remote urls in this manner because you can\u2019t delete the files. Extra files increase the final image size.", "The Docker docs also suggest using COPY instead of ADD whenever possible for improved clarity. It\u2019s too bad that Docker doesn\u2019t combine ADD and COPY into a single command to reduce the number of Dockerfile instructions to keep straight \ud83d\ude03.", "Note that the ADD instruction contains the \\ line continuation character. Use it to improve readability by breaking up a long instruction over several lines.", "CMD provides Docker a command to run when a container is started. It does not commit the result of the command to the image at build time. In the example above, CMD will have the Docker container run the my_script.py file at run time.", "A few other things to know about CMD:", "Let\u2019s introduce a few more instructions in another example Dockerfile.", "Note that you can use comments in Dockerfiles. Comments start with #.", "Package installation is a primary job of Dockerfiles. As touched on earlier, there are several ways to install packages with RUN.", "You can install a package in an Alpine Docker image with apk. apk is like apt-get in regular Linux builds. For example, packages in a Dockerfile with a base Ubuntu image can be updated and installed like this: RUN apt-get update && apt-get install my_package.", "In addition to apk and apt-get, Python packages can be installed through pip, wheel, and conda. Other languages can use various installers.", "The underlying layers need to provide the install layer with the the relevant package manger. If you\u2019re having an issue with package installation, make sure the package managers are installed before you try to use them. \ud83d\ude03", "You can use RUN with pip and list the packages you want installed directly in your Dockerfile. If you do this concatenate your package installs into a single instruction and break it up with line continuation characters (\\). This method provides clarity and fewer layers than multiple RUN instructions.", "Alternatively, you can list your package requirements in a file and RUN a package manager on that file. Folks usually name the file requirements.txt. I\u2019ll share a recommended pattern to take advantage of build time caching with requirements.txt in the next article.", "WORKDIR changes the working directory in the container for the COPY, ADD, RUN, CMD, and ENTRYPOINT instructions that follow it. A few notes:", "ARG defines a variable to pass from the command line to the image at build-time. A default value can be supplied for ARG in the Dockerfile, as it is in the example: ARG my_var=my_default_value.", "Unlike ENV variables, ARG variables are not available to running containers. However, you can use ARG values to set a default value for an ENV variable from the command line when you build the image. Then, the ENV variable persists through container run time. Learn more about this technique here.", "The ENTRYPOINT instruction also allows you provide a default command and arguments when a container starts. It looks similar to CMD, but ENTRYPOINT parameters are not overwritten if a container is run with command line parameters.", "Instead, command line arguments passed to docker run my_image_name are appended to the ENTRYPOINT instruction\u2019s arguments. For example, docker run my_image bash adds the argument bash to the end of the ENTRYPOINT instruction\u2019s existing arguments.", "A Dockerfile should have at least one CMD or ENTRYPOINT instruction.", "The Docker docs have a few suggestions for choosing between CMD and ENTRYPOINT for your initial container command:", "In the example above, ENTRYPOINT [\"python\", \"my_script.py\", \"my_var\"] has the container run the the python script my_script.py with the argument my_var when the container starts running. my_var could then be used by my_script via argparse. Note that my_var has a default value supplied by ARG earlier in the Dockerfile. So if an argument isn\u2019t passed from the command line, then the default argument will be used.", "Docker recommends you generally use the exec form of ENTRYPOINT: ENTRYPOINT [\"executable\", \"param1\", \"param2\"]. This form is the one with JSON array syntax.", "The EXPOSE instruction shows which port is intended to be published to provide access to the running container. EXPOSE does not actually publish the port. Rather, it acts as a documentation between the person who builds the image and the person who runs the container.", "Use docker run with the -p flag to publish and map one or more ports at run time. The uppercase -P flag will publish all exposed ports.", "VOLUME specifies where your container will store and/or access persistent data. Volumes are the topic of a forthcoming article in this series, so we\u2019ll investigate them then.", "Let\u2019s review the dozen Dockerfile instructions we\u2019ve explored.", "FROM \u2014 specifies the base (parent) image.LABEL \u2014provides metadata. Good place to include maintainer info.ENV \u2014 sets a persistent environment variable.RUN \u2014runs a command and creates an image layer. Used to install packages into containers.COPY \u2014 copies files and directories to the container.ADD \u2014 copies files and directories to the container. Can upack local .tar files.CMD \u2014 provides a command and arguments for an executing container. Parameters can be overridden. There can be only one CMD.WORKDIR \u2014 sets the working directory for the instructions that follow.ARG \u2014 defines a variable to pass to Docker at build-time.ENTRYPOINT \u2014 provides command and arguments for an executing container. Arguments persist. EXPOSE \u2014 exposes a port.VOLUME \u2014 creates a directory mount point to access and store persistent data.", "Now you know a dozen Dockerfile instructions to make yourself useful! Here\u2019s a bonus bagel: a cheat sheet with all the Dockerfile instructions. The five commands we didn\u2019t cover are USER, ONBUILD, STOPSIGNAL, SHELL, and HEALTHCHECK. Now you\u2019ve seen their names if you come across them. \ud83d\ude03", "Dockerfiles are perhaps the key component of Docker to master. I hope this article helped you gain confidence with them. We\u2019ll revisit them in the next article in this series on slimming down images. Follow me to make sure you don\u2019t miss it!", "If you found this article helpful, please help others find it by sharing on your favorite social media. \ud83d\udc4d", "I write about data science, cloud computing, and other tech stuff. Follow me and read more here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I write about data science. Join my Data Awesome mailing list to stay on top of the latest data tools and tips: https://dataawesome.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb0b44222eef5&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b0b44222eef5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b0b44222eef5--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://jeffhale.medium.com/?source=post_page-----b0b44222eef5--------------------------------", "anchor_text": ""}, {"url": "https://jeffhale.medium.com/?source=post_page-----b0b44222eef5--------------------------------", "anchor_text": "Jeff Hale"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F451599b1142a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&user=Jeff+Hale&userId=451599b1142a&source=post_page-451599b1142a----b0b44222eef5---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb0b44222eef5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb0b44222eef5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/learn-enough-docker-to-be-useful-b7ba70caeb4b", "anchor_text": "Part 1"}, {"url": "https://towardsdatascience.com/learn-enough-docker-to-be-useful-1c40ea269fa8", "anchor_text": "Part 2"}, {"url": "https://towardsdatascience.com/slimming-down-your-docker-images-275f0ca9337e", "anchor_text": "future articles"}, {"url": "https://en.wikipedia.org/wiki/Everything_is_a_file", "anchor_text": "file"}, {"url": "https://docs.docker.com/engine/reference/builder/#from", "anchor_text": "FROM"}, {"url": "https://docs.docker.com/develop/develop-images/baseimages/", "anchor_text": "parent image"}, {"url": "https://hub.docker.com/_/ubuntu", "anchor_text": "official Docker repository"}, {"url": "https://docs.docker.com/v17.09/engine/userguide/storagedriver/imagesandcontainers/#images-and-layers", "anchor_text": "Docker Docs"}, {"url": "https://docs.docker.com/v17.09/engine/userguide/storagedriver/imagesandcontainers/", "anchor_text": "here"}, {"url": "https://raw.githubusercontent.com/discdiver/pachy-vid/master/sample_vids/vid1.mp4", "anchor_text": "https://raw.githubusercontent.com/discdiver/pachy-vid/master/sample_vids/vid1.mp4"}, {"url": "https://github.com/docker-library/python/blob/ab8b829cfefdb460ebc17e570332f0479039e918/3.7/alpine3.8/Dockerfile", "anchor_text": "source code"}, {"url": "https://docs.docker.com/engine/reference/builder/#label", "anchor_text": "LABEL"}, {"url": "https://docs.docker.com/config/labels-custom-metadata/", "anchor_text": "here"}, {"url": "https://docs.docker.com/engine/reference/builder/#env", "anchor_text": "ENV"}, {"url": "https://docs.docker.com/engine/reference/builder/#run", "anchor_text": "RUN"}, {"url": "https://www.cyberciti.biz/faq/10-alpine-linux-apk-command-examples/", "anchor_text": "Alpine Linux package manager"}, {"url": "https://docs.docker.com/engine/reference/builder/#copy", "anchor_text": "COPY"}, {"url": "https://docs.docker.com/engine/reference/builder/#add", "anchor_text": "ADD"}, {"url": "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/", "anchor_text": "Docker docs"}, {"url": "https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#add-or-copy", "anchor_text": "Docker docs"}, {"url": "https://docs.docker.com/engine/reference/builder/#cmd", "anchor_text": "CMD"}, {"url": "https://pypi.org/project/pip/", "anchor_text": "pip"}, {"url": "https://pythonwheels.com/", "anchor_text": "wheel"}, {"url": "https://medium.com/@chadlagore/conda-environments-with-docker-82cdc9d25754", "anchor_text": "conda"}, {"url": "https://docs.docker.com/v17.09/engine/reference/builder/#workdir", "anchor_text": "WORKDIR"}, {"url": "https://docs.docker.com/engine/reference/builder/#arg", "anchor_text": "ARG"}, {"url": "https://vsupalov.com/docker-build-time-env-values/", "anchor_text": "here"}, {"url": "https://docs.docker.com/engine/reference/builder/#entrypoint", "anchor_text": "ENTRYPOINT"}, {"url": "https://docs.docker.com/v17.09/engine/reference/builder/#understand-how-cmd-and-entrypoint-interact", "anchor_text": "Docker docs"}, {"url": "https://docs.python.org/3/library/argparse.html", "anchor_text": "argparse"}, {"url": "https://docs.docker.com/engine/reference/builder/#expose", "anchor_text": "EXPOSE"}, {"url": "https://docs.docker.com/engine/reference/builder/#volume", "anchor_text": "VOLUME"}, {"url": "https://kapeli.com/cheat_sheets/Dockerfile.docset/Contents/Resources/Documents/index", "anchor_text": "cheat sheet"}, {"url": "https://towardsdatascience.com/slimming-down-your-docker-images-275f0ca9337e", "anchor_text": "next article in this series on slimming down images"}, {"url": "https://medium.com/@jeffhale", "anchor_text": "me"}, {"url": "https://medium.com/@jeffhale", "anchor_text": "here"}, {"url": "https://dataawesome.com", "anchor_text": ""}, {"url": "https://medium.com/tag/docker?source=post_page-----b0b44222eef5---------------docker-----------------", "anchor_text": "Docker"}, {"url": "https://medium.com/tag/software-development?source=post_page-----b0b44222eef5---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/data-science?source=post_page-----b0b44222eef5---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----b0b44222eef5---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/technology?source=post_page-----b0b44222eef5---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb0b44222eef5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&user=Jeff+Hale&userId=451599b1142a&source=-----b0b44222eef5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb0b44222eef5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&user=Jeff+Hale&userId=451599b1142a&source=-----b0b44222eef5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb0b44222eef5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b0b44222eef5--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb0b44222eef5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b0b44222eef5---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b0b44222eef5--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b0b44222eef5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b0b44222eef5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b0b44222eef5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b0b44222eef5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b0b44222eef5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b0b44222eef5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b0b44222eef5--------------------------------", "anchor_text": ""}, {"url": "https://jeffhale.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://jeffhale.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Jeff Hale"}, {"url": "https://jeffhale.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "18K Followers"}, {"url": "https://dataawesome.com", "anchor_text": "https://dataawesome.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F451599b1142a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&user=Jeff+Hale&userId=451599b1142a&source=post_page-451599b1142a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe7ae6804f27a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flearn-enough-docker-to-be-useful-b0b44222eef5&newsletterV3=451599b1142a&newsletterV3Id=e7ae6804f27a&user=Jeff+Hale&userId=451599b1142a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}