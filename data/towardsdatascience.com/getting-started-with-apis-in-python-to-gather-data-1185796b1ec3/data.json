{"url": "https://towardsdatascience.com/getting-started-with-apis-in-python-to-gather-data-1185796b1ec3", "time": 1683004433.614846, "path": "towardsdatascience.com/getting-started-with-apis-in-python-to-gather-data-1185796b1ec3/", "webpage": {"metadata": {"title": "Getting started with APIs in Python to Gather Data | by Nik Piepenbreier | Towards Data Science", "h1": "Getting started with APIs in Python to Gather Data", "description": "Get started with APIs in Python to collect web data using the easy-to-follow, plain-language tutorial that guides you through open and authenticated APIs."}, "outgoing_paragraph_urls": [{"url": "http://open-notify.org/Open-Notify-API/", "anchor_text": "visiting their documentation", "paragraph_index": 11}, {"url": "https://darksky.net/dev/register", "anchor_text": "https://darksky.net/dev/register", "paragraph_index": 23}, {"url": "https://darksky.net/dev/account", "anchor_text": "https://darksky.net/dev/account", "paragraph_index": 24}, {"url": "https://darksky.net/dev/docs", "anchor_text": "https://darksky.net/dev/docs", "paragraph_index": 26}, {"url": "https://www.google.com/maps", "anchor_text": "Google Maps", "paragraph_index": 30}, {"url": "https://www.google.com/maps/place/CN+Tower/@43.6425701,-79.3892455,17z/data=!3m1!4b1!4m5!3m4!1s0x882b34d68bf33a9b:0x15edd8c4de1c7581!8m2!3d43.6425662!4d-79.3870568", "anchor_text": "https://www.google.com/maps/place/CN+Tower/@43.6425701,-79.3892455,17z/", "paragraph_index": 30}, {"url": "https://www.python.org/dev/peps/pep-0498/", "anchor_text": "Python docs for them", "paragraph_index": 31}, {"url": "https://www.quandl.com/data/FSE-Frankfurt-Stock-Exchange/documentation", "anchor_text": "documentation can be found here", "paragraph_index": 37}], "all_paragraphs": ["APIs, or Application Programming Interfaces, provide easy ways to retrieve (and post) data. They are the interfaces provided by servers that you can use to, among others, retrieve and send data using code. In essence, they streamline complex instructions to provide back a request from a server. They can be compared to a waiter at a restaurant. As a patron, you give the waiter instructions for a meal, who then communicates the request back to the kitchen, where the chefs undertake complex steps to prepare a dish, without you ever knowing all the hard work he or she put into it! You then get back the meal you ordered, without having to figure out the steps it took to get there!", "APIs provide many efficiencies over using static data downloads (such as CSV files). These include the ability to work with rapidly changing data or working with data from which you only want a small chunk (say, today\u2019s temperature, compared to downloading a whole trove of weather data).", "In the real, abstracted world, you likely use APIs every day, without knowing it. It\u2019s this abstraction that makes APIs so useful \u2014 websites may rely on Google Maps\u2019 API to link you to directions or your Twitter client lets you post data directly to your account.", "But how do we leverage APIs to collect data?", "In this tutorial, we\u2019ll explore gathering data first without requiring authentication, and then another API that requires us to authenticate. We\u2019ll start by finding where the International Space Station (ISS) currently is using the Open Notify API, and then use authentication to Dark Sky\u2019s weather API to collect interesting weather data. We\u2019ll close off the post by exploring how to add data about the Frankfurt Stock Exchange into a Pandas DataFrame!", "Similarly to interacting with regular websites, when you want to get data from an API, you need to make a request from the server. To be able to pull data from an API using Python, we\u2019ll need to use the requests library (go figure!). Requests is more or less the standard package for making HTTP requests in Python. It\u2019s immensely simple to use due to its abstractions, especially when working with APIs.", "To get started, you may need to install the Requests library, as it\u2019s not part of the standard Python package. This can be accomplished either via pip or conda.", "A request is made up of four different pieces:", "When we run a request using the requests library, it returns a request object, which includes the data we\u2019re hoping to extract, but also a requests status code. The status code tells us what happened with the request and they are a part of every request that we make. We\u2019ll be working with GET requests and there\u2019s a number of response codes that are relevant for our work. The codes are split into different values in hundreds, depending on the information they\u2019re returning:", "You may be familiar with seeing the (sometimes comical) 404 page when a page can\u2019t be found. This is what that status code is.", "Similarly, a status code of 200 lets us know that everything is OK! This is the one we\u2019re going for and will hopefully get!", "For the first part of this tutorial, we\u2019ll take a look at the Open Notify API that provides data on the International Space Station. You can find more information on the API by visiting their documentation.", "One of the great things about this API is that it doesn\u2019t require authentication, meaning we can dive right into pulling some data without additional set up.", "Let\u2019s begin by generating a URL request with the Requests library, and accessing its status code attribute.", "We can do this by using the code outlined below. The output is printed under the dashed line for simplicity.", "The .get() function requests a request object. Here, we can use the .status_code attribute to discover what the status code returns. In this example, the status_code returned was 200, meaning we are good to move forward!", "The data that we get back comes back in what\u2019s known as JSON format. A JSON file is similar to a Python dictionary and ensures that data is easily readable by machines. An easy way to understand JSON files is to think of them as Python dictionaries represented as strings.", "To begin working with JSON files, let\u2019s import the JSON library, which is part of the standard package (so we don\u2019t need to install anything). I\u2019ve included the output of the code under the dashed line for ease of reading.", "The string that this response returned is quite short and quite easy to read. However, many API responses will be lengthy and may require a bit of parsing to determine where you want to look for your data (if you\u2019re interested in a particular piece). Let\u2019s use the .dumps() function to convert a JSON string into a Python object. We\u2019ll repeat some of the code for continuity.", "This is a much easier-to-read format, allowing us to parse out the data much more readily. Say we were only interested in knowing the latitude and longitude, we could parse this out in the same manner that we would parse data out of a dictionary in Python.", "An important thing to note here is that we are calling the response.json() object here \u2014 not the one that we returned using the .dumps() function.", "From here, we can now use this data to easily append data to a data set, using whatever method we want.", "Let\u2019s now turn our attention to the Dark Sky API, which requires a bit of set up before we can get started.", "To get started, we\u2019ll need to get what\u2019s known as an API secret key. Keys are ways that allow a user to be authenticated without needing to provide a username and password. As such, they should be treated securely and not be shared. To get your own Dark Sky secret key, sign up for a Dark Sky account at https://darksky.net/dev/register. A free tier will be fine for experimenting with.", "Once you\u2019re signed up, navigate to the Account Page https://darksky.net/dev/account, which will give you your API Key. Make note of this key, and be sure to keep it secret.", "As part of the free tier, you can make up to 1,000 calls per day.", "Dark Sky provides a thorough resource for what data is included in their API, which you can access by visiting: https://darksky.net/dev/docs", "There are two main types of calls: (1) the Forecast request, and (2) the Time Machine Request. The former provides current weather (up to the next week), and the latter provides data for the past and the future.", "Let\u2019s assume that we wanted to pull out the current weather conditions (summary, temperature, and wind speed) for Toronto, Ontario.", "That means we need three things:", "To easily find your latitude and longitude, you can put the address you\u2019re looking for into Google Maps. For example, I searched for Toronto\u2019s CN Tower. The URL returned will include the coordinates: https://www.google.com/maps/place/CN+Tower/@43.6425701,-79.3892455,17z/", "Let\u2019s write the code out in a verbose, but easy to follow manner. We\u2019ll make use of f-strings to make the code even easier to read. If you\u2019re not familiar with f-strings, check out the Python docs for them.", "Based on the documentation, we can see that the generic request pulls more data than we need. While not required, we can trim this down using Dark Sky\u2019s exclude block, which will reduce latency on the request. We\u2019ll only be using the currently block, so we will exclude all the others.", "Earlier we mentioned we were going to be interested in the current conditions (specifically, the summary, temperature, and windspeed). By reviewing the structure above, we can see that we can readily pull this data by accessing the key-value pairs for those items.", "The Dark Sky API lets you also set units. Right now, our statement isn\u2019t clear as to what units the data we\u2019re extracting is in. Let\u2019s be more explicit. As we\u2019re pulling data for a Canadian location, let\u2019s specify for their locale. The Dark Sky API documentation tells u that we should set units=si.", "So far, we\u2019ve learned how to make API calls with and without authentication. Let\u2019s take it one step further by adding this into a Pandas dataframe.", "Let\u2019s say we\u2019re working on a project, and we need to generate a data frame with financial data. We can do this easily using built-in functions in Pandas.", "For this, we\u2019ll use Quandl\u2019s financial API. In particular, we\u2019ll use the free API for Frankfurt\u2019s Stock Exchange, for which the documentation can be found here.", "Let\u2019s explore the data a bit. We\u2019ll load the data following the instructions for generating the URL on the website and print the data using the json.dumps() function described above. We\u2019ll need to import the same libraries as before, as well as Pandas.", "The data actually keeps going for a long, long time, but it\u2019s truncated here.", "From this, we can see that:", "Let\u2019s create a dataframe using this knowledge:", "In this post, we explored what APIs are, how to use them in Python, both with and without authentication, and how to add data from APIs to pandas dataframes. There\u2019s still a whole lot more to APIs that we didn\u2019t cover here, but hopefully this gives you a good understanding of where to take your learning from here!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1185796b1ec3&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----1185796b1ec3--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1185796b1ec3--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@nik.piepenbreier?source=post_page-----1185796b1ec3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@nik.piepenbreier?source=post_page-----1185796b1ec3--------------------------------", "anchor_text": "Nik Piepenbreier"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F634ffd0ea2aa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&user=Nik+Piepenbreier&userId=634ffd0ea2aa&source=post_page-634ffd0ea2aa----1185796b1ec3---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1185796b1ec3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1185796b1ec3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://open-notify.org/Open-Notify-API/", "anchor_text": "visiting their documentation"}, {"url": "https://darksky.net/dev/register", "anchor_text": "https://darksky.net/dev/register"}, {"url": "https://darksky.net/dev/account", "anchor_text": "https://darksky.net/dev/account"}, {"url": "https://darksky.net/dev/docs", "anchor_text": "https://darksky.net/dev/docs"}, {"url": "https://api.darksky.net/forecast/%5Bkey%5D/%5Blatitude%5D,%5Blongitude%5D", "anchor_text": "https://api.darksky.net/forecast/[key]/[latitude],[longitude]"}, {"url": "https://www.google.com/maps", "anchor_text": "Google Maps"}, {"url": "https://www.google.com/maps/place/CN+Tower/@43.6425701,-79.3892455,17z/data=!3m1!4b1!4m5!3m4!1s0x882b34d68bf33a9b:0x15edd8c4de1c7581!8m2!3d43.6425662!4d-79.3870568", "anchor_text": "https://www.google.com/maps/place/CN+Tower/@43.6425701,-79.3892455,17z/"}, {"url": "https://www.python.org/dev/peps/pep-0498/", "anchor_text": "Python docs for them"}, {"url": "https://www.quandl.com/data/FSE-Frankfurt-Stock-Exchange/documentation", "anchor_text": "documentation can be found here"}, {"url": "https://medium.com/tag/api?source=post_page-----1185796b1ec3---------------api-----------------", "anchor_text": "API"}, {"url": "https://medium.com/tag/python?source=post_page-----1185796b1ec3---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----1185796b1ec3---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/web-scraping?source=post_page-----1185796b1ec3---------------web_scraping-----------------", "anchor_text": "Web Scraping"}, {"url": "https://medium.com/tag/programming?source=post_page-----1185796b1ec3---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1185796b1ec3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&user=Nik+Piepenbreier&userId=634ffd0ea2aa&source=-----1185796b1ec3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1185796b1ec3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&user=Nik+Piepenbreier&userId=634ffd0ea2aa&source=-----1185796b1ec3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1185796b1ec3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1185796b1ec3--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F1185796b1ec3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----1185796b1ec3---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----1185796b1ec3--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----1185796b1ec3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----1185796b1ec3--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----1185796b1ec3--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1185796b1ec3--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1185796b1ec3--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----1185796b1ec3--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----1185796b1ec3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@nik.piepenbreier?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@nik.piepenbreier?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Nik Piepenbreier"}, {"url": "https://medium.com/@nik.piepenbreier/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2.8K Followers"}, {"url": "https://datagy.io", "anchor_text": "https://datagy.io"}, {"url": "https://bit.ly/2AptX91", "anchor_text": "https://bit.ly/2AptX91"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F634ffd0ea2aa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&user=Nik+Piepenbreier&userId=634ffd0ea2aa&source=post_page-634ffd0ea2aa--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F1f5adc4c309f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-apis-in-python-to-gather-data-1185796b1ec3&newsletterV3=634ffd0ea2aa&newsletterV3Id=1f5adc4c309f&user=Nik+Piepenbreier&userId=634ffd0ea2aa&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}