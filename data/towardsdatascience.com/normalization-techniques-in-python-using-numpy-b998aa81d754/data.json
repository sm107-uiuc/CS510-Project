{"url": "https://towardsdatascience.com/normalization-techniques-in-python-using-numpy-b998aa81d754", "time": 1683016347.937045, "path": "towardsdatascience.com/normalization-techniques-in-python-using-numpy-b998aa81d754/", "webpage": {"metadata": {"title": "Normalization Techniques in Python Using NumPy | by Chris Morrow | Towards Data Science", "h1": "Normalization Techniques in Python Using NumPy", "description": "Data Science isn\u2019t only about developing models. A lot of the work involves cleaning data and selecting features. Plugging features into a model that have similar distributions but significantly\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Database_normalization", "anchor_text": "database normalization", "paragraph_index": 1}], "all_paragraphs": ["Data Science isn\u2019t only about developing models. A lot of the work involves cleaning data and selecting features. Plugging features into a model that have similar distributions but significantly different means, or are on vastly different scales can lead to erroneous predictions. A common solution to these problems is to first \u201cnormalize\u201d features to eliminate significant differences in mean and variance.", "The term \u201cnormalization\u201d can be misleading (and also shouldn\u2019t be confused with database normalization), because it has come to mean many things in statistics. There is however, a common theme among normalization techniques which is to bring separate datasets into alignment for easier comparison. The two techniques we\u2019ll focus on are Residual Extraction, which shifts the datasets\u2019 means, and Re-scaling which stretches and squeezes the values in the datasets to fit on a scale from 0 to 1. Needless to say, both of these techniques will eliminate the units applied to the datasets. Thankfully, the shifting and scaling techniques can both be accomplished easily in Python and calculated efficiently using the NumPy Python package.", "Let\u2019s first explore the Residual Extraction technique. A residual is the relative difference between a value in a dataset and the dataset\u2019s mean. This technique is useful when you have datasets with similar distributions but significantly different means, making comparisons between the datasets difficult. For example, let\u2019s say we have an exam that\u2019s taken by two different classes of equal size. The questions are the same, in the same order, and have the same answers. However, the average scores between the two classes are different. Class 1 averaged an 82 on the test and Class 2 averaged a 77. How can we combine the scores from the two classes?", "Lets start by setting up our Python environment:", "The code above imports the NumPy package as np, the SciPy stats module as st \u2014 which will be used for creating our datasets, the analyze function from the sci_analysis Python package \u2014 for graphing results, and lastly, we set the random number generator seed value so that the results are reproducible. The number 12 passed as an argument to np.random.seed() was arbitrarily selected. Now, lets create two datasets, one for each class:", "Class 1 is represented by dist1 and Class 2 by dist2. Both variables are NumPy arrays of twenty-five normally distributed random variables, where dist1 has a mean of 82 and standard deviation of 4, and dist2 has a mean of 77 and standard deviation of 7. Both arrays are converted to integers to complete our exam score example. We can visualize the class scores with the code below:", "From the graph above as well as the mean and standard deviation of dist1 and dist2, we can tell that the distributions are not matched.", "Let\u2019s now calculate the residuals for dist1 and dist2:", "The residuals are the difference between each value and the mean of the value\u2019s distribution. In other words, each residual is the distance from each distribution\u2019s mean which is now zero. Since each distribution now has a mean of zero, they can now be compared directly to one another.", "We can see that the means are now near zero (and would be zero if it wasn\u2019t for rounding error when converting the values to integers), but the variance of each distribution hasn\u2019t changed. This shows how calculating the residuals is effectively shifting the mean of each distribution to align them for direct comparison.", "Another normalization technique is to re-scale datasets. This is useful when trying to compare datasets of different factors or that use different units, such as comparing miles to meters. Let\u2019s generate two new distributions that are on different scales by a factor of 100:", "From the output above, you can see that dist3 is on a 0 to 10 scale and dist4 is a factor of 100 greater than dist3. By checking the mean and standard deviation, we can see that these distributions cannot be compared to one another.", "Luckily, there\u2019s a technique to re-scale the distributions by using the ratio of the distance of each value from the minimum value in each dataset to the range of values in each dataset. This ratio is represented by the equation:", "By applying this equation in Python we can get re-scaled versions of dist3 and dist4:", "By re-scaling dist3 and dist4 the maximum value for each dataset is now 1 while the minimum is now 0. This is convenient since each dataset is now on the same scale, and the shape of each distribution is preserved. In effect, each distribution has been squeezed and shifted to fit between 0 and 1. Now, lets check the mean and standard deviation of the re-scaled dist3 and dist4:", "We can now see that means for dist3_scaled and dist4_scaled are significantly different with similar standard deviations.", "Both residuals and re-scaling are useful techniques for normalizing datasets for analysis. However, these datasets are often more than just 25 values, so it\u2019s worth thinking about how to compute residuals and perform re-scaling efficiently. Thankfully, NumPy can help perform these calculations quickly and efficiently.", "If you aren\u2019t familiar with NumPy, it is a Python package for high-performance scientific computing. NumPy has two features that make calculations faster and more efficient compared to using regular Python lists. First, NumPy uses arrays as its primary data structure which uses less memory compared to Python lists, and requires each value in the array to be of the same type. Arrays can also be operated on by scalars \u2014 applying the scalar operation to each value of the array. In fact, we already saw this when calculating the residuals by subtracting the mean of the distribution (a scalar) from the distribution (an array).", "Let\u2019s compare the difference in speed between calculating residuals using a Python list comprehension and an array operation. We\u2019ll start by creating an array of random, normally distributed variables with 100,000 values:", "Let\u2019s see how long it takes to calculate the residuals of dist5 using a list comprehension:", "The list comprehension takes around 25 milliseconds to iterate through each value in dist5 which isn\u2019t too bad. However, let\u2019s calculate the residuals of dist5 again, but with a NumPy scalar operation:", "Just subtracting the mean from dist5 (which is a NumPy array) takes 144 microseconds! This is thanks to the efficient design of the NumPy array.", "Now, what if we want to operate on an array with a function and not just a simple scalar? This is NumPy\u2019s second performance boost over Python in the form of universal functions. The universal functions are \u201cvectorized\u201d operations that take advantage of CPU optimizations to achieve computational speedups when iterating over each value in an array. NumPy has numerous built-in universal functions, but we can also write our own by using NumPy\u2019s frompyfunc() function.", "Let\u2019s look at the difference in speed between re-scaling the values of an array using a list comprehension and a custom universal function:", "The list comprehension performs admirably by re-scaling dist5 in 47 milliseconds. Let\u2019s compare this to creating a custom universal function called scale.", "We use the np.frompyfunc() function which accepts a callable, the number of inputs, and the number of outputs as its arguments. The callable in this case is our re-scaling equation in the form of a lambda function. If you aren\u2019t familiar with lambda functions, you can think of them as one-line, unnamed functions. Our lambda function has three arguments, x, min, and max. These three arguments are the three inputs specified when calling np.frompyfunc(). Also worth noting, min and max are scalars calculated from dist5 while x represents each value in dist5. Now, let\u2019s calculate min and max and call the scale function:", "As you can see, the custom universal function takes half the time to complete compared to the list comprehension.", "We examined two normalization techniques \u2014 Residual Extraction and Min-Max Re-scaling. Residual Extraction can be thought of as shifting a distribution so that it\u2019s mean is 0. Min-Max Re-scaling can be thought of as shifting and squeezing a distribution to fit on a scale between 0 and 1. Residual Extraction is useful for comparing distributions with different means but similar shapes. Min-Max Re-scaling is useful for comparing distributions with different scales or different shapes.", "Both of these normalization techniques can be performed efficiently with NumPy when the distributions are represented as NumPy arrays. Scalar operations on NumPy arrays are fast and easy to read. When more complex operations on arrays are needed, a universal function can be used to perform the operation efficiently.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I'm a software developer and I like to build things."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb998aa81d754&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b998aa81d754--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b998aa81d754--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://cmmorrow.medium.com/?source=post_page-----b998aa81d754--------------------------------", "anchor_text": ""}, {"url": "https://cmmorrow.medium.com/?source=post_page-----b998aa81d754--------------------------------", "anchor_text": "Chris Morrow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F11a884f75c12&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&user=Chris+Morrow&userId=11a884f75c12&source=post_page-11a884f75c12----b998aa81d754---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb998aa81d754&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb998aa81d754&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/getting-started", "anchor_text": "Getting Started"}, {"url": "https://www.flickr.com/photos/cmmorrow/9654448075/in/album-72157635320846374/", "anchor_text": "Flickr"}, {"url": "https://en.wikipedia.org/wiki/Database_normalization", "anchor_text": "database normalization"}, {"url": "https://medium.com/tag/data-science?source=post_page-----b998aa81d754---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----b998aa81d754---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/normalization?source=post_page-----b998aa81d754---------------normalization-----------------", "anchor_text": "Normalization"}, {"url": "https://medium.com/tag/statistics?source=post_page-----b998aa81d754---------------statistics-----------------", "anchor_text": "Statistics"}, {"url": "https://medium.com/tag/getting-started?source=post_page-----b998aa81d754---------------getting_started-----------------", "anchor_text": "Getting Started"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb998aa81d754&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&user=Chris+Morrow&userId=11a884f75c12&source=-----b998aa81d754---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb998aa81d754&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&user=Chris+Morrow&userId=11a884f75c12&source=-----b998aa81d754---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb998aa81d754&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b998aa81d754--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb998aa81d754&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b998aa81d754---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b998aa81d754--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b998aa81d754--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b998aa81d754--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b998aa81d754--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b998aa81d754--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b998aa81d754--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b998aa81d754--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b998aa81d754--------------------------------", "anchor_text": ""}, {"url": "https://cmmorrow.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://cmmorrow.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Chris Morrow"}, {"url": "https://cmmorrow.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "51 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F11a884f75c12&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&user=Chris+Morrow&userId=11a884f75c12&source=post_page-11a884f75c12--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd5573d31e536&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnormalization-techniques-in-python-using-numpy-b998aa81d754&newsletterV3=11a884f75c12&newsletterV3Id=d5573d31e536&user=Chris+Morrow&userId=11a884f75c12&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}