{"url": "https://towardsdatascience.com/binary-tree-and-lowest-common-ancestor-58eddd433ac", "time": 1683016361.96769, "path": "towardsdatascience.com/binary-tree-and-lowest-common-ancestor-58eddd433ac/", "webpage": {"metadata": {"title": "Binary Tree and Lowest Common Ancestor | by Shuo Wang | Towards Data Science", "h1": "Binary Tree and Lowest Common Ancestor", "description": "But the shared parent at the lowest level is 9, and it is referred to as the lowest common ancestor(LCA). A binary search tree is a special case of a binary tree, where the left subtree only contains\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["It is the lowest level parent shared by two nodes within a tree.", "Let\u2019s take a look at an example:", "Within the above binary tree, nodes 8 and 10 are highlighted. What are their shared parents?", "It\u2019s quite obvious that the shared parents are 5, 7, and 9.", "But the shared parent at the lowest level is 9, and it is referred to as the lowest common ancestor(LCA).", "Let\u2019s warm up with a binary search tree.", "A binary search tree is a special case of a binary tree, where the left subtree only contains smaller nodes and right subtree only contains bigger nodes.", "Our example above is a binary search tree. As you can see, at node 3, all nodes in the left subtree(0, 1, 2) are smaller than 3 and all nodes on in the right subtree are bigger (4).", "So, how do we go about looking for the LCA in a binary search tree for, say, node 8 and 10?", "Actually binary search tree makes the search quite simple. Take a close look at node 9, what makes it different from node 7? I can think one thing:", "Node 9 is between 8 and 10, whereas for node 7, both nodes 8 and 10 are bigger.", "This is actually enough information to determine that node 9 is the LCA for node 8 and 10 in a binary search tree, thanks to its great property.", "Below is an implementation of it:", "In this implementation, we first create a binary tree data structure from a list of values, and then call the LCA algorithm to find the LCA of node 8 and 10, which returns the correct value of 9.", "Let\u2019s take a pause and think about the complexity of this algorithm a little. The algorithm starts at the root, at each node it compares the node\u2019s value against the two input nodes, if the value is between the two nodes return the node as the answer, otherwise move on to the left if the value is greater than both input nodes, or right if the value is smaller than both input nodes.", "So during each recursion iteration, the search space is cut in half (half of the tree), this means that if the total number of nodes in the tree is n, the number of iterations needed is log(n) (of base 2), so the complexity is O(log(n)). Not too bad.", "That was a nice warm up, now let\u2019s make things slightly more complicated.", "Suppose now that the tree is not a binary search tree, but a tree with random node values of no particular structure. How do we find the LCA of two nodes in the tree?", "If you try to run the binary search tree LCA algorithm on the above tree, it will fail miserably:", "We have to think of another way.", "One intuitive way is from the following observation:", "As you can see from the graphs above, the path to node 9 is 0, 2, 6, 9, and the path to node 10, is 0, 2, 6, 10. Once we have the paths to each node, all we need to do is find the last matching node in the two paths, which would also be our LCA!", "The above algorithm is simple enough, just one thing to notice, the Find Path algorithm searches the entire tree for a path to a target node, so its complexity is O(n), therefore the LCA algorithm using find_path is also O(n). A sacrifice of performance for not constructing the tree as a binary search tree.", "The complexity of the Find Path algorithm is not terribly worrying, but what if you need to perform the search repeatedly? Remember there are n choose 2 number of unique pairs of nodes in a tree of size n. that\u2019s:", "number of node pairs, if we get the LCA for all of them using Find Path algorithm, that would be O(n\u00b2n) or O(n\u00b3). Maybe we should try to speed it up a bit.", "One way to speed up the calculation of the find path is to store a parent pointer in the node, so that when we try to find the path to a node, all we need to do is follow the parents all the way to the root instead of searching the entire tree for a path.", "Below is an implementation of this enhancement to the tree:", "In this new implementation of the tree, we have stored an additional field, parent, in the node to store the parent node.", "We have also created a dictionary of value to nodes so that we can find the nodes corresponding to a value easily.", "With these two enhancement, we can implement a new LCA algorithm:", "With this enhancement, we sacrificed a bit more memory space, O(n), to store the parent pointer, but since tracing from node to root parent is O(log(n)), the complexity of the algorithm reduces to O(log(n)). Running on all node pairs now takes O(n\u00b2log(n)), memory for speed.", "Is this the best we can do? Absolutely not, there are many ways to optimize the algorithm. Tarjan\u2019s Off-Line Lowest Common Ancestor algorithm, in particular, can reduce the performance complexity to constant! But since it involves a completely new data structure (disjoint-set), we\u2019ll discuss it in another story.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Interesting pieces on various topics in finance and technology."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F58eddd433ac&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----58eddd433ac--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----58eddd433ac--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://r-shuo-wang.medium.com/?source=post_page-----58eddd433ac--------------------------------", "anchor_text": ""}, {"url": "https://r-shuo-wang.medium.com/?source=post_page-----58eddd433ac--------------------------------", "anchor_text": "Shuo Wang"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F693d095d5e0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&user=Shuo+Wang&userId=693d095d5e0d&source=post_page-693d095d5e0d----58eddd433ac---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F58eddd433ac&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F58eddd433ac&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://medium.com/tag/algorithms?source=post_page-----58eddd433ac---------------algorithms-----------------", "anchor_text": "Algorithms"}, {"url": "https://medium.com/tag/python?source=post_page-----58eddd433ac---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----58eddd433ac---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/binary-tree?source=post_page-----58eddd433ac---------------binary_tree-----------------", "anchor_text": "Binary Tree"}, {"url": "https://medium.com/tag/graph-algorithms?source=post_page-----58eddd433ac---------------graph_algorithms-----------------", "anchor_text": "Graph Algorithms"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F58eddd433ac&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&user=Shuo+Wang&userId=693d095d5e0d&source=-----58eddd433ac---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F58eddd433ac&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&user=Shuo+Wang&userId=693d095d5e0d&source=-----58eddd433ac---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F58eddd433ac&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----58eddd433ac--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F58eddd433ac&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----58eddd433ac---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----58eddd433ac--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----58eddd433ac--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----58eddd433ac--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----58eddd433ac--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----58eddd433ac--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----58eddd433ac--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----58eddd433ac--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----58eddd433ac--------------------------------", "anchor_text": ""}, {"url": "https://r-shuo-wang.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://r-shuo-wang.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Shuo Wang"}, {"url": "https://r-shuo-wang.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "273 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F693d095d5e0d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&user=Shuo+Wang&userId=693d095d5e0d&source=post_page-693d095d5e0d--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F74e98ddc277b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbinary-tree-and-lowest-common-ancestor-58eddd433ac&newsletterV3=693d095d5e0d&newsletterV3Id=74e98ddc277b&user=Shuo+Wang&userId=693d095d5e0d&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}