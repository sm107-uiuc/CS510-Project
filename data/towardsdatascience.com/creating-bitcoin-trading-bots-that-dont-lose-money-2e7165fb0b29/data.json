{"url": "https://towardsdatascience.com/creating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29", "time": 1682995977.046467, "path": "towardsdatascience.com/creating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29/", "webpage": {"metadata": {"title": "Creating Bitcoin trading bots don\u2019t lose money | by Adam King | Towards Data Science", "h1": "Creating Bitcoin trading bots don\u2019t lose money", "description": "In this article we are going to create deep reinforcement learning agents that learn to make money trading Bitcoin. In this tutorial we will be using OpenAI\u2019s gym and the PPO agent from the\u2026"}, "outgoing_paragraph_urls": [{"url": "https://openai.com/blog/", "anchor_text": "AlphaGo, OpenAI Five, and AlphaStar", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/trade-smarter-w-reinforcement-learning-a5e91163f315", "anchor_text": "TensorTrade", "paragraph_index": 5}, {"url": "https://medium.com/@notadamking/creating-a-custom-openai-gym-environment-for-stock-trading-be532be3910e", "anchor_text": "how to create a gym environment from scratch", "paragraph_index": 6}, {"url": "https://medium.com/@notadamking/visualizing-stock-trading-agents-using-matplotlib-and-gym-584c992bc6d4", "anchor_text": "how to render simple visualizations of those environments", "paragraph_index": 6}, {"url": "https://www.kaggle.com/mczielinski/bitcoin-historical-data", "anchor_text": "Zielak", "paragraph_index": 7}, {"url": "https://github.com/notadamking/RLTrader", "anchor_text": "GitHub", "paragraph_index": 7}, {"url": "https://medium.com/@notadamking/visualizing-stock-trading-agents-using-matplotlib-and-gym-584c992bc6d4", "anchor_text": "the last article I wrote", "paragraph_index": 32}, {"url": "https://github.com/notadamking/Stock-Trading-Visualization", "anchor_text": "GitHub", "paragraph_index": 32}, {"url": "https://medium.com/@SOGorman35/now-that-i-had-a-chance-to-read-your-article-in-a-bit-more-depth-ill-add-some-more-input-beyond-b71e442bb8a", "anchor_text": "Sean O\u2019Gorman\u2019s advice", "paragraph_index": 48}, {"url": "https://towardsdatascience.com/using-reinforcement-learning-to-trade-bitcoin-for-massive-profit-b69d0e8f583b", "anchor_text": "my next article", "paragraph_index": 51}, {"url": "https://arxiv.org/abs/1807.02811", "anchor_text": "Bayesian optimization", "paragraph_index": 51}, {"url": "https://towardsdatascience.com/using-reinforcement-learning-to-trade-bitcoin-for-massive-profit-b69d0e8f583b", "anchor_text": "my next article", "paragraph_index": 53}, {"url": "https://coinbase-consumer.sjv.io/c/1949163/626312/9251", "anchor_text": "long live Bitcoin", "paragraph_index": 53}, {"url": "https://github.com/notadamking/RLTrader", "anchor_text": "GitHub", "paragraph_index": 55}, {"url": "https://twitter.com/notadamking", "anchor_text": "Twitter", "paragraph_index": 55}, {"url": "https://github.com/users/notadamking/sponsorship", "anchor_text": "Github Sponsors", "paragraph_index": 56}, {"url": "https://www.patreon.com/join/notadamking", "anchor_text": "Patreon", "paragraph_index": 56}, {"url": "https://www.patreon.com/notadamking", "anchor_text": "https://www.patreon.com/notadamking", "paragraph_index": 59}], "all_paragraphs": ["In this article we are going to create deep reinforcement learning agents that learn to make money trading Bitcoin. In this tutorial we will be using OpenAI\u2019s gym and the PPO agent from the stable-baselines library, a fork of OpenAI\u2019s baselines library.", "The purpose of this series of articles is to experiment with state-of-the-art deep reinforcement learning technologies to see if we can create profitable Bitcoin trading bots. It seems to be the status quo to quickly shut down any attempts to create reinforcement learning algorithms, as it is \u201cthe wrong way to go about building a trading algorithm\u201d. However, recent advances in the field have shown that RL agents are often capable of learning much more than supervised learning agents within the same problem domain. For this reason, I am writing these articles to see just how profitable we can make these trading agents, or if the status quo exists for a reason.", "Many thanks to OpenAI and DeepMind for the open source software they have been providing to deep learning researchers for the past couple of years. If you haven\u2019t yet seen the amazing feats they\u2019ve accomplished with technologies like AlphaGo, OpenAI Five, and AlphaStar, you may have been living under a rock for the last year, but you should also go check them out.", "While we won\u2019t be creating anything quite as impressive, it is still no easy feat to trade Bitcoin profitably on a day-to-day basis. However, as Teddy Roosevelt once said,", "So instead of learning to trade ourselves\u2026 let\u2019s make a robot to do it for us.", "When you\u2019ve read this article, check out TensorTrade \u2014 the successor framework to the codebase produced in this article.", "If you are not already familiar with how to create a gym environment from scratch, or how to render simple visualizations of those environments, I have just written articles on both of those topics. Feel free to pause here and read either of those before continuing.", "For this tutorial, we are going to be using the Kaggle data set produced by Zielak. The .csv data file will also be available on my GitHub repo if you\u2019d like to download the code to follow along. Okay, let\u2019s get started.", "First, let\u2019s import all of the necessary libraries. Make sure to pip install any libraries you are missing.", "Next, let\u2019s create our class for the environment. We\u2019ll require a pandas data frame to be passed in, as well as an optional initial_balance, and a lookback_window_size, which will indicate how many time steps in the past the agent will observe at each step. We will default the commission per trade to 0.075%, which is Bitmex\u2019s current rate, and default the serial parameter to false, meaning our data frame will be traversed in random slices by default.", "We also call dropna() and reset_index() on the data frame to first remove any rows with NaN values, and then reset the frame\u2019s index since we\u2019ve removed data.", "Our action_space here is represented as a discrete set of 3 options (buy, sell, or hold) and another discrete set of 10 amounts (1/10, 2/10, 3/10, etc). When the buy action is selected, we will buy amount * self.balance worth of BTC. For the sell action, we will sell amount * self.btc_held worth of BTC. Of course, the hold action will ignore the amount and do nothing.", "Our observation_space is defined as a continuous set of floats between 0 and 1, with the shape (10, lookback_window_size + 1). The + 1 is to account for the current time step. For each time step in the window, we will observe the OHCLV values, our net worth, the amount of BTC bought or sold, and the total amount in USD we\u2019ve spent on or received from those BTC.", "Next, we need to write our reset method to initialize the environment.", "Here we use both self._reset_session and self._next_observation, which we haven\u2019t defined yet. Let\u2019s define them.", "An important piece of our environment is the concept of a trading session. If we were to deploy this agent into the wild, we would likely never run it for more than a couple months at a time. For this reason, we are going to limit the amount of continuous frames in self.df that our agent will see in a row.", "In our _reset_session method, we are going to first reset the current_step to 0. Next, we\u2019ll set steps_left to a random number between 1 and MAX_TRADING_SESSION, which we will now define at the top of the file.", "Next, if we are traversing the frame serially, we will setup the entire frame to be traversed, otherwise we\u2019ll set the frame_start to a random spot within self.df, and create a new data frame called active_df, which is just a slice of self.df from frame_start to frame_start + steps_left.", "One important side effect of traversing the data frame in random slices is our agent will have much more unique data to work with when trained for long periods of time. For example, if we only ever traversed the data frame in a serial fashion (i.e. in order from 0 to len(df)), then we would only ever have as many unique data points as are in our data frame. Our observation space could only even take on a discrete number of states at each time step.", "However, by randomly traversing slices of the data frame, we essentially manufacture more unique data points by creating more interesting combinations of account balance, trades taken, and previously seen price action for each time step in our initial data set. Let me explain with an example.", "At time step 10 after resetting a serial environment, our agent will always be at the same time within the data frame, and would have had 3 choices to make at each time step: buy, sell, or hold. And for each of these 3 choices, another choice would then be required: 10%, 20%, \u2026, or 100% of the amount possible. This means our agent could experience any of (1\u2070\u00b3)\u00b9\u2070 total states, for a total of 1\u2070\u00b3\u2070 possible unique experiences.", "Now consider our randomly sliced environment. At time step 10, our agent could be at any of len(df) time steps within the data frame. Given the same choices to make at each time step, this means this agent could experience any of len(df)\u00b3\u2070 possible unique states within the same 10 time steps.", "While this may add quite a bit of noise to large data sets, I believe it should allow the agent to learn more from our limited amount of data. We will still traverse our test data set in serial fashion, to get a more accurate understanding of the algorithm\u2019s usefulness on fresh, seemingly \u201clive\u201d data.", "It can often be helpful to visual an environment\u2019s observation space, in order to get an idea of the types of features your agent will be working with. For example, here is a visualization of our observation space rendered using OpenCV.", "Each row in the image represents a row in our observation_space. The first 4 rows of frequency-like red lines represent the OHCL data, and the spurious orange and yellow dots directly below represent the volume. The fluctuating blue bar below that is the agent\u2019s net worth, and the lighter blips below that represent the agent\u2019s trades.", "If you squint, you can just make out a candlestick graph, with volume bars below it and a strange morse-code like interface below that shows trade history. It looks like our agent should be able to learn sufficiently from the data in our observation_space, so let\u2019s move on. Here we\u2019ll define our _next_observation method, where we\u2019ll scale the observed data from 0 to 1.", "It\u2019s important to only scale the data the agent has observed so far to prevent look-ahead biases.", "Now that we\u2019ve set up our observation space, it\u2019s time to write our step function, and in turn, take the agent\u2019s prescribed action. Whenever self.steps_left == 0 for our current trading session, we will sell any BTC we are holding and call _reset_session(). Otherwise, we set the reward to our current net worth and only set done to True if we\u2019ve run out of money.", "Taking an action is as simple as getting the current_price, determining the specified action, and either buying or selling the specified amount of BTC. Let\u2019s quickly write _take_action so we can test our environment.", "Finally, in the same method, we will append the trade to self.trades and update our net worth and account history.", "Our agents can now initiate a new environment, step through that environment, and take actions that affect the environment. It\u2019s time to watch them trade.", "Our render method could be something as simple as calling print(self.net_worth), but that\u2019s no fun. Instead we are going to plot a simple candlestick chart of the pricing data with volume bars and a separate plot for our net worth.", "We are going to take the code in StockTradingGraph.py from the last article I wrote, and re-purposing it to render our Bitcoin environment. You can grab the code from my GitHub.", "The first change we are going to make is to update self.df['Date'] everywhere to self.df['Timestamp'], and remove all calls to date2num as our dates already come in unix timestamp format. Next, in our render method we are going to update our date labels to print human-readable dates, instead of numbers.", "First, import the datetime library, then we\u2019ll use the utcfromtimestamp method to get a UTC string from each timestamp and strftime to format the string in Y-m-d H:M format.", "Finally, we change self.df['Volume'] to self.df['Volume_(BTC)'] to match our data set, and we\u2019re good to go. Back in our BitcoinTradingEnv, we can now write our render method to display the graph.", "And voila! We can now watch our agents trade Bitcoin.", "The green ghosted tags represent buys of BTC and the red ghosted tags represent sells. The white tag on the top right is the agent\u2019s current net worth and the bottom right tag is the current price of Bitcoin. Simple, yet elegant. Now, it\u2019s time to train our agent and see how much money we can make!", "One of the criticisms I received on my first article was the lack of cross-validation, or splitting the data into a training set and test set. The purpose of doing this is to test the accuracy of your final model on fresh data it has never seen before. While this was not a concern of that article, it definitely is here. Since we are using time series data, we don\u2019t have many options when it comes to cross-validation.", "For example, one common form of cross validation is called k-fold validation, in which you split the data into k equal groups and one by one single out a group as the test group and use the rest of the data as the training group. However time series data is highly time dependent, meaning later data is highly dependent on previous data. So k-fold won\u2019t work, because our agent will learn from future data before having to trade it, an unfair advantage.", "This same flaw applies to most other cross-validation strategies when applied to time series data. So we are left with simply taking a slice of the full data frame to use as the training set from the beginning of the frame up to some arbitrary index, and using the rest of the data as the test set.", "Next, since our environment is only set up to handle a single data frame, we will create two environments, one for the training data and one for the test data.", "Now, training our model is as simple as creating an agent with our environment and calling model.learn.", "Here, we are using tensorboard so we can easily visualize our tensorflow graph and view some quantitative metrics about our agents. For example, here is a graph of the discounted rewards of many agents over 200,000 time steps:", "Wow, it looks like our agents are extremely profitable! Our best agent was even capable of 1000x\u2019ing his balance over the course of 200,000 steps, and the rest averaged at least a 30x increase!", "It was at this point that I realized there was a bug in the environment\u2026 Here is the new rewards graph, after fixing that bug:", "As you can see, a couple of our agents did well, and the rest traded themselves into bankruptcy. However, the agents that did well were able to 10x and even 60x their initial balance, at best. I must admit, all of the profitable agents were trained and tested in an environment without commissions, so it is still entirely unrealistic for our agent\u2019s to make any real money. But we\u2019re getting somewhere!", "Let\u2019s test our agents on the test environment (with fresh data they\u2019ve never seen before), to see how well they\u2019ve learned to trade Bitcoin.", "Clearly, we\u2019ve still got quite a bit of work to do. By simply switching our model to use stable-baseline\u2019s A2C, instead of the current PPO2 agent, we can greatly improve our performance on this data set. Finally, we can update our reward function slightly, as per Sean O\u2019Gorman\u2019s advice, so that we reward increases in net worth, not just achieving a high net worth and staying there.", "These two changes alone greatly improve the performance on the test data set, and as you can see below, we are finally able to achieve profitability on fresh data that wasn\u2019t in the training set.", "However, we can do much better. In order for us to improve these results, we are going to need to optimize our hyper-parameters and train our agents for much longer. Time to break out the GPU and get to work!", "However, this article is already a bit long and we\u2019ve still got quite a bit of detail to go over, so we are going to take a break here. In my next article, we will use Bayesian optimization to zone in on the best hyper-parameters for our problem space, and improve the agent\u2019s model to achieve highly profitable trading strategies.", "In this article, we set out to create a profitable Bitcoin trading agent from scratch, using deep reinforcement learning. We were able to accomplish the following:", "While our trading agent isn\u2019t quite as profitable as we\u2019d hoped, it is definitely getting somewhere. Next time, we will improve on these algorithms through advanced feature engineering and Bayesian optimization to make sure our agents can consistently beat the market. Stay tuned for my next article, and long live Bitcoin!", "It is important to understand that all of the research documented in this article is for educational purposes, and should not be taken as trading advice. You should not trade based on any algorithms or strategies defined in this article, as you are likely to lose your investment.", "Thanks for reading! As always, all of the code for this tutorial can be found on my GitHub. Leave a comment below if you have any questions or feedback, I\u2019d love to hear from you! I can also be reached on Twitter at @notadamking.", "You can also sponsor me on Github Sponsors or Patreon via the links below.", "Github Sponsors is currently matching all donations 1:1 up to $5,000!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Co-Founder, Software Architect, and Deep Learning Enthusiast \u2014 Judge me by my age, I dare you https://www.patreon.com/notadamking"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F2e7165fb0b29&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@notadamking?source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@notadamking?source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": "Adam King"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6e3a5234f1cc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&user=Adam+King&userId=6e3a5234f1cc&source=post_page-6e3a5234f1cc----2e7165fb0b29---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2e7165fb0b29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2e7165fb0b29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://openai.com/blog/", "anchor_text": "AlphaGo, OpenAI Five, and AlphaStar"}, {"url": "https://deepmind.com/blog/alphastar-mastering-real-time-strategy-game-starcraft-ii/", "anchor_text": "https://deepmind.com/blog/alphastar-mastering-real-time-strategy-game-starcraft-ii/"}, {"url": "https://towardsdatascience.com/trade-smarter-w-reinforcement-learning-a5e91163f315", "anchor_text": "Trade and Invest Smarter \u2014 The Reinforcement Learning WayA deep dive into TensorTrade \u2014 an open source Python framework for training, evaluating, and deploying robust trading\u2026towardsdatascience.com"}, {"url": "https://towardsdatascience.com/trade-smarter-w-reinforcement-learning-a5e91163f315", "anchor_text": "TensorTrade"}, {"url": "https://medium.com/@notadamking/creating-a-custom-openai-gym-environment-for-stock-trading-be532be3910e", "anchor_text": "how to create a gym environment from scratch"}, {"url": "https://medium.com/@notadamking/visualizing-stock-trading-agents-using-matplotlib-and-gym-584c992bc6d4", "anchor_text": "how to render simple visualizations of those environments"}, {"url": "https://www.kaggle.com/mczielinski/bitcoin-historical-data", "anchor_text": "Zielak"}, {"url": "https://github.com/notadamking/RLTrader", "anchor_text": "GitHub"}, {"url": "https://medium.com/@notadamking/visualizing-stock-trading-agents-using-matplotlib-and-gym-584c992bc6d4", "anchor_text": "the last article I wrote"}, {"url": "https://github.com/notadamking/Stock-Trading-Visualization", "anchor_text": "GitHub"}, {"url": "https://medium.com/@SOGorman35/now-that-i-had-a-chance-to-read-your-article-in-a-bit-more-depth-ill-add-some-more-input-beyond-b71e442bb8a", "anchor_text": "Sean O\u2019Gorman\u2019s advice"}, {"url": "https://towardsdatascience.com/using-reinforcement-learning-to-trade-bitcoin-for-massive-profit-b69d0e8f583b", "anchor_text": "my next article"}, {"url": "https://arxiv.org/abs/1807.02811", "anchor_text": "Bayesian optimization"}, {"url": "https://towardsdatascience.com/using-reinforcement-learning-to-trade-bitcoin-for-massive-profit-b69d0e8f583b", "anchor_text": "my next article"}, {"url": "https://coinbase-consumer.sjv.io/c/1949163/626312/9251", "anchor_text": "long live Bitcoin"}, {"url": "https://towardsdatascience.com/using-reinforcement-learning-to-trade-bitcoin-for-massive-profit-b69d0e8f583b", "anchor_text": "Using reinforcement learning to trade Bitcoin for massive profitLet\u2019s teach our deep RL agents to make even more money through feature engineering and Bayesian optimizationtowardsdatascience.com"}, {"url": "https://towardsdatascience.com/trade-smarter-w-reinforcement-learning-a5e91163f315", "anchor_text": "Trade and Invest Smarter \u2014 The Reinforcement Learning WayA deep dive into TensorTrade \u2014 an open source Python framework for training, evaluating, and deploying robust trading\u2026towardsdatascience.com"}, {"url": "https://github.com/notadamking/RLTrader", "anchor_text": "GitHub"}, {"url": "https://twitter.com/notadamking", "anchor_text": "Twitter"}, {"url": "https://github.com/users/notadamking/sponsorship", "anchor_text": "Github Sponsors"}, {"url": "https://www.patreon.com/join/notadamking", "anchor_text": "Patreon"}, {"url": "https://github.com/users/notadamking/sponsorship", "anchor_text": "Sponsor @notadamking on GitHub SponsorsHi, I\u2019m Adam. I\u2019m a developer, writer, and entrepreneur, specifically interested in financial applications of deep\u2026github.com"}, {"url": "https://patreon.com/notadamking", "anchor_text": "Adam King is creating World Changing Content | PatreonHi, I\u2019m Adam. I\u2019m a developer, writer, and entrepreneur, specifically interested in financial applications of deep\u2026patreon.com"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----2e7165fb0b29---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----2e7165fb0b29---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/reinforcement-learning?source=post_page-----2e7165fb0b29---------------reinforcement_learning-----------------", "anchor_text": "Reinforcement Learning"}, {"url": "https://medium.com/tag/bitcoin?source=post_page-----2e7165fb0b29---------------bitcoin-----------------", "anchor_text": "Bitcoin"}, {"url": "https://medium.com/tag/trading?source=post_page-----2e7165fb0b29---------------trading-----------------", "anchor_text": "Trading"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2e7165fb0b29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&user=Adam+King&userId=6e3a5234f1cc&source=-----2e7165fb0b29---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2e7165fb0b29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&user=Adam+King&userId=6e3a5234f1cc&source=-----2e7165fb0b29---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2e7165fb0b29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F2e7165fb0b29&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----2e7165fb0b29---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----2e7165fb0b29--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@notadamking?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@notadamking?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Adam King"}, {"url": "https://medium.com/@notadamking/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2.7K Followers"}, {"url": "https://www.patreon.com/notadamking", "anchor_text": "https://www.patreon.com/notadamking"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6e3a5234f1cc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&user=Adam+King&userId=6e3a5234f1cc&source=post_page-6e3a5234f1cc--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F77c80e888452&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreating-bitcoin-trading-bots-that-dont-lose-money-2e7165fb0b29&newsletterV3=6e3a5234f1cc&newsletterV3Id=77c80e888452&user=Adam+King&userId=6e3a5234f1cc&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}