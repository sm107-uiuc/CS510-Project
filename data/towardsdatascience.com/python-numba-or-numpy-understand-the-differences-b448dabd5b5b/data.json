{"url": "https://towardsdatascience.com/python-numba-or-numpy-understand-the-differences-b448dabd5b5b", "time": 1683004296.6826181, "path": "towardsdatascience.com/python-numba-or-numpy-understand-the-differences-b448dabd5b5b/", "webpage": {"metadata": {"title": "Python Numba or NumPy: understand the differences | by Mohammed Alhamid | Towards Data Science", "h1": "Python Numba or NumPy: understand the differences", "description": "NumPy and Numba are two great Python packages for matrix computations. Both of them work efficiently on multidimensional matrices. In Python, the creation of a list has a dynamic nature. Appending\u2026"}, "outgoing_paragraph_urls": [{"url": "http://numba.pydata.org/numba-doc/0.12/tutorial_numpy_and_numba.html", "anchor_text": "documentation", "paragraph_index": 18}, {"url": "https://towardsdatascience.com/svd-8c2f72e264f", "anchor_text": "Here", "paragraph_index": 26}, {"url": "https://github.com/malhamid/Python-useful-tools/blob/master/NumPy_Numba_comparisons.ipynb", "anchor_text": "my Github repo", "paragraph_index": 33}, {"url": "https://numpy.org", "anchor_text": "https://numpy.org", "paragraph_index": 34}, {"url": "http://numba.pydata.org", "anchor_text": "http://numba.pydata.org", "paragraph_index": 35}], "all_paragraphs": ["NumPy and Numba are two great Python packages for matrix computations. Both of them work efficiently on multidimensional matrices. In Python, the creation of a list has a dynamic nature. Appending values to such a list would grow the size of the matrix dynamically. NumPy works differently. It builds up array objects in a fixed size. Adding or removing any element means creating an entirely new array in the memory. In this article, we are looking into finding an efficient object structure to solve a simple problem.", "What is essential to discuss is not only how the array objects are created, but how to apply scientific operations on those arrays, particularly scanning arrays. Performance is the principal motivation of having those libraries when we apply some expensive logic to them. For instance, when we develop Machine Learning (ML) models, especially in production environments, we spend a reasonable amount of time optimizing the code that generates the training data applying any required data transformation or any other ETL operation. Using some compiled programming languages like C or Fortran is ideal, but it would need us to build some wrappers here and there to bring the pipeline back to Python.", "Let us have a simple example: First, we will create a simple list in python with ten million values. The big number would highlight the differences in performance easily.", "I am using IPython; if you are running this code on Jupyter Notebook, then I recommend using built-in magic (time).", "Let us search in this list how many rows contain the value 999?", "It took my machine 461 ms, and the function found 10184 instances of the value 999. Now let us see how to do the same job using NumPy arrays.", "Searching how many rows contain the value 999 in the NumPy array is only one line of code:", "In addition to just writing a few instructions, it took my machine 12.6 ms for doing the same job as the list array.", "Please note that the indexing mechanism of the NumPy array is similar to any ordinary Python list.", "Now we will make the example a little bit more interesting by introducing some mathematical operations on the array values. First, we will construct three vectors (X, Y, Z) from the original list and then will do the same job using NumPy.", "Applying the operation on the list took 3.01 seconds.", "Let us define the same function with Numpy:", "Using Numpy, it took only 132 ms.", "Numba works perfectly with Python and gives you the privilege to use your favourite math libraries but compiled to native machine instructions [2]. Using Numba is straightforward and does not require you to change the way you wrote the function:", "Note that all we have to change compared to Numpy function defined above.", "Using Numba, the calculation of the three vectors took only 71.5 ms.", "\u201cNumPy is the fundamental package for scientific computing with Python. It contains among other things: a powerful N-dimensional array object, sophisticated (broadcasting) functions, tools for integrating C/C++ and Fortran code, useful linear algebra, Fourier transform, and random number capabilities\u201d [1]", "NumPy is a enormous container to compress your vector space and provide more efficient arrays. The most significant advantage is the performance of those containers when performing array manipulation.", "Numba, on the other hand, is designed to provide native code that mirrors the python functions. Python can be looked at as a wrapper to the Numba API code. From my experience, we use Numba whenever an already provided Numpy API does not support the operation that we execute on the vectors. If the implemented customized function is not fast enough in our context, then Numba can help us to generate the function inside the Python interpreter. This is also the recommendation available from the Numba documentation.", "The example provided earlier does not show how significant the difference is? This is true since we only search for the frequency of a single value. Let\u2019s repeat the experiment by computing the frequency of all the values in a single column.", "In Python, the most efficient way to avoid a nested loop, which is O^2 is the use of a function count(). With only one line of code, we can compute the frequencies of the full column:", "However, depending on your processing power, this function may take hours to complete 10-million records. Let\u2019s see next what Numpy could offer:", "Computing the frequency of a million-value column took 388 ms using Numpy. A big performance relief! Note that this function is enhanced by computing the frequency of distinct values only. This is an example that shows how unrealistic to use a nested loop in a big data environment.", "Until recently, Numba was not supporting np.unique() function, but still, you won\u2019t get any benefit if used with return_counts. This just to show sometimes Numpy could be the best option to pick.", "Finally, the next two figures show the runtime performance of using different data object structure. The x-axis represents the incremental increase of the size of the data from 10,000 rows to 1-billion rows.", "The next figure shows the performance of the Numby with Numba library. Note that the number may vary depending on the data size. The numbers in the graph show the average of repeating the experiment for five times.", "The frequency example is just one application that might not be enough to draw an impression, so let us pick SVD as another example. SVD is a well known unsupervised learning algorithm. It allows us to decompose a big matrix into a product of multiple smaller matrices. SVD has many application in ML and used to reduce the dimensionality. Here is a recommended article for further readings.", "The example written below only uses two dimensions (columns) with the same number of rows as in our earlier example.", "If you try to run the code, you probably will get a similar error like the following failure: \u201cValueError: Too large work array required \u2014 computation cannot be performed with standard 32-bit LAPACK.\u201d. That\u2019s because the internal implementation of lapack-lite uses int for indices. With a size like our array, it definitely will cause an overflow. We either have to reduce the size of the vector or use an alternative algorithm. If the SVD function used with Numba, we will not get any noticeable benefits either since we are calling the LAPACK SVD function.", "Matrix multiplication is another example that shows how Numba could be useful to boost up the processing time. Even without Cuda, we could achieve better performance. Let us take the example step by step. As we did before, we will implement a function using Python list.", "For 10-million row, the list is pretty quick to process the multiplications. The runtime is only 1min and 7 seconds. Using Numpy, it took 95 seconds to the do the same job.", "Now replacing Numby with Numba, we reduced the costly multiplications by a simple function which led to only 68 seconds that is 28% time reduction.", "The next figure shows the performance of matrix multiplication using a Python list, with Numby, and with Numba library.", "The examples provided in this publication have been run on 15-inch 2018 MacBook Pro with 16 GB and using anaconda distribution. The code used in these examples can be found in my Github repo. The performance could be enhanced using a GPU environment, which was not considered in this comparison.", "[1] Official NumPy website, available online at https://numpy.org", "[2] Official Numba website, available online at http://numba.pydata.org", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "PhD, working on Machine Learning and AI"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb448dabd5b5b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@moh.alhamid?source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@moh.alhamid?source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": "Mohammed Alhamid"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F330f41d600d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&user=Mohammed+Alhamid&userId=330f41d600d1&source=post_page-330f41d600d1----b448dabd5b5b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb448dabd5b5b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb448dabd5b5b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@impatrickt", "anchor_text": "Patrick Tomasso"}, {"url": "https://unsplash.com/s/photos/books?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://unsplash.com/@pkmfaris?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Faris Mohammed"}, {"url": "https://unsplash.com/@pkmfaris?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "http://twitter.com/jit", "anchor_text": "@jit"}, {"url": "http://numba.pydata.org/numba-doc/0.12/tutorial_numpy_and_numba.html", "anchor_text": "documentation"}, {"url": "https://towardsdatascience.com/svd-8c2f72e264f", "anchor_text": "Here"}, {"url": "http://twitter.com/jit", "anchor_text": "@jit"}, {"url": "https://github.com/malhamid/Python-useful-tools/blob/master/NumPy_Numba_comparisons.ipynb", "anchor_text": "my Github repo"}, {"url": "https://numpy.org", "anchor_text": "https://numpy.org"}, {"url": "http://numba.pydata.org", "anchor_text": "http://numba.pydata.org"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----b448dabd5b5b---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/numpy?source=post_page-----b448dabd5b5b---------------numpy-----------------", "anchor_text": "Numpy"}, {"url": "https://medium.com/tag/numba?source=post_page-----b448dabd5b5b---------------numba-----------------", "anchor_text": "Numba"}, {"url": "https://medium.com/tag/python?source=post_page-----b448dabd5b5b---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----b448dabd5b5b---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb448dabd5b5b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&user=Mohammed+Alhamid&userId=330f41d600d1&source=-----b448dabd5b5b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb448dabd5b5b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&user=Mohammed+Alhamid&userId=330f41d600d1&source=-----b448dabd5b5b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb448dabd5b5b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb448dabd5b5b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b448dabd5b5b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b448dabd5b5b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@moh.alhamid?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@moh.alhamid?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Mohammed Alhamid"}, {"url": "https://medium.com/@moh.alhamid/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "241 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F330f41d600d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&user=Mohammed+Alhamid&userId=330f41d600d1&source=post_page-330f41d600d1--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Feb9178ad1719&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-numba-or-numpy-understand-the-differences-b448dabd5b5b&newsletterV3=330f41d600d1&newsletterV3Id=eb9178ad1719&user=Mohammed+Alhamid&userId=330f41d600d1&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}