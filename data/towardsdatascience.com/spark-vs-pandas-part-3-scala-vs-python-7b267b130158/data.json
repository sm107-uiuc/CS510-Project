{"url": "https://towardsdatascience.com/spark-vs-pandas-part-3-scala-vs-python-7b267b130158", "time": 1683015695.539527, "path": "towardsdatascience.com/spark-vs-pandas-part-3-scala-vs-python-7b267b130158/", "webpage": {"metadata": {"title": "Spark vs Pandas, part 3 \u2014 Scala vs Python | by Kaya Kupferschmidt | Towards Data Science", "h1": "Spark vs Pandas, part 3 \u2014 Scala vs Python", "description": "In this third installment of the series \u201cPandas vs Spark\u201d we will have a closer look at the programming languages and the implications of choosing one. Originally I wanted to write a single article\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/stop-using-pandas-and-start-using-spark-with-scala-f7364077c2e0", "anchor_text": "the original article I was referring to at the beginning", "paragraph_index": 8}, {"url": "https://en.wikipedia.org/wiki/Anonymous_function", "anchor_text": "lambda functions", "paragraph_index": 15}, {"url": "https://en.wikipedia.org/wiki/List_comprehension", "anchor_text": "list comprehension", "paragraph_index": 15}, {"url": "https://en.wikipedia.org/wiki/Java_bytecode", "anchor_text": "Java bytecode", "paragraph_index": 17}, {"url": "http://www.scalanlp.org/", "anchor_text": "ScalaNLP", "paragraph_index": 26}, {"url": "https://jupyter.org/", "anchor_text": "Jupyter Notebooks", "paragraph_index": 33}, {"url": "https://spark.apache.org/docs/latest/ml-guide.html", "anchor_text": "most important machine learning algorithms", "paragraph_index": 36}, {"url": "https://github.com/scalanlp/breeze/", "anchor_text": "Breeze", "paragraph_index": 36}, {"url": "http://www.scalanlp.org/", "anchor_text": "ScalaNLP", "paragraph_index": 36}, {"url": "https://zeppelin.apache.org/", "anchor_text": "Zeppelin", "paragraph_index": 37}], "all_paragraphs": ["In this third installment of the series \u201cPandas vs Spark\u201d we will have a closer look at the programming languages and the implications of choosing one.", "Originally I wanted to write a single article for a fair comparison of Pandas and Spark, but it continued to grow until I decided to split this up. This is the second part of the small series.", "This third part of the series will focus on the programming languages Scala and Python. Spark itself is written in Scala with bindings for Python while Pandas is available only for Python.", "Of course programming languages play an important role, although their relevance is often misunderstood. Having the right programming language in your CV may eventually be one of the deciding factors for getting a specific job or project. This is a good example where the relevance of programming languages might be misunderstood, especially in the context of Data Science.", "Don\u2019t get me wrong, being an expert for a given programming language takes far more time than coding a couple of weeks. You do not only need to get used to the syntax, but also to the language specific idioms. It\u2019s really like learning a foreign natural language, which takes more than only knowing the words and the grammar (which in itself already is a huge task).", "On the other hand, in certain areas like Data Science, methodology matters at least as much as knowing a specific programming language. I would prefer to hire a machine learning expert with profound knowledge in R for ML project using Python instead of a Python expert with no knowledge in Data Science, and I bet most of you would agree. So from an experts point of view, the programming language doesn\u2019t matter so much on your CV (at least it shouldn\u2019t \u2014 I know that it\u2019s different in reality), as long as you know what\u2019s going on under the hood and understand the scientific method of approaching a problem.", "But things look quite differently from a project\u2019s point of view: When setting up a larger project and starting to create actual code, you eventually need to think about which programming language you\u2019d preferably want to use. And this decision has many consequences, which you should be aware of. I will discuss many of them in this article, with a strong focus on Scala and Python as being the natural programming languages for Spark and Pandas.", "When comparing Spark and Pandas, we should also include a comparison of the programming languages supported by each framework. While Pandas is \u201cPython-only\u201d, you can use Spark with Scala, Java, Python and R with some more bindings being developed by corresponding communities.", "Since choosing a programming language will have some serious direct and indirect implications, I\u2019d like to point out some fundamental differences between Python and Scala. Going into more detail would probably make up a separate article on its own. I mainly pick up this comparison, as the original article I was referring to at the beginning also suggested that people should start using Scala (instead of Python), while I propose a more differentiated view again.", "Let\u2019s first look at the type systems: Both languages provide some simple built in types like integers, floats and strings. The fundamental types in Scala also provide some specific sizes like Short for a 16bit integer, Double for a 64bit floating point number.", "Both languages also offer classes with inheritance, although many details are really different.", "There are two main differences between the type systems in Scala and in Python:", "These differences have a huge impact, as we will see later.", "While Python has grown from a simple scripting language to a fully featured programming language, the focus of Scala as a research project was from the very beginning to combine aspects from functional programming languages (like Haskell) with those of object oriented languages (like Java) \u2014 there is a some debate if this combination is successful, or even desirable.", "For me, the term functional programming refers to a certain paradigm that functions shall not have side effects (i.e. they do not change some global state and respect immutability). Object oriented programming on the other hand is just about the opposite, where each method is seen as some way to communicate with an object, which in turn changes its state. It is important to separate the paradigm itself from specific language features \u2014 one can implement purely functional programs in almost any language, but only some languages will provide supporting concepts, while things will get complicated in other languages.", "Both Python and Scala support some functional concepts, specifically functions can be passed as values and anonymous functions (lambda functions). Scala also comes with a rich collections library which very well supports functional approaches like immutability, while Pythons best offering in this area is list comprehension.", "Python is an interpreted language, which essentially means that Python can immediately execute any code, as long as it is valid Python syntax. No \u201cbuild\u201d or \u201ccompile\u201d step is required. This makes Python a great choice for interactive work, since Python can immediately execute code as you type it.", "Scala on the other hand is a compiled language, which means that a Scala compiler first needs to transform Scala code into so called Java bytecode for the JVM (which in turn is translated into native machine code during execution). This three-step approach (write, compile, execute) often makes code experiments more difficult, since the turn over times are higher. Luckily Scala also provides an interactive shell, which is able to compile and immediately execute the code as you type it. But generally speaking, Scala is meant to be compiled.", "Generally speaking, Python is very simple to learn \u2014 it was specifically designed to be like that with a strong focus on readability. Pythons dynamic type system is well suited for beginners, which had never contact to a programming language. Python is very forgiving and its syntax is easy to understand.", "Scala on the other hand has a much steeper learning curve, and \u2014 as opposed to Python \u2014 code can become quickly hard to read for novices. Although for using Spark you first only need a small subset, you eventually need to understand more and more details of Scala when you begin to dig deeper into Spark and when you try to solve more complex problems.", "I found that most Java programmers at the beginning have big problems getting used to the functional aspects of Scala, partly because of a very concise syntax. I always feel that the information density (i.e. how much logic is encoded per letter program code) is much higher in Scala than in Java, and this density is challenging for most peoples brain at the beginning since they are used to much more boiler-plate code in Java, which significantly lowers the information density.", "Dynamically typed languages have one huge disadvantage over statically typed languages: Using a wrong type is only detected during run time and not earlier (during compile time). This means that if a function is called with a wrong data type under some very rare conditions, you might only notice that when it\u2019s too late \u2014 in production.", "In contrast a statically typed and compiled language will stop you from releasing the broken code to production. It will point directly to the usage of the wrong type and you have to fix that before the compiler can finish its work.", "Because of this difference I found writing robust, production-ready Python code much more difficult than writing robust Scala code. This is even more difficult when writing a whole framework or library, that is then used by other applications. Applications could pass wrong data types to functions, but maybe those types are \u201cgood enough\u201d in some cases (because they implement all required methods) but fail in other cases (because other methods are missing or their signature has changed).", "On top of that, refactoring with Python can be very difficult, since the consequences of using different types or renaming methods are not always correctly detected by your IDE.", "Nowadays the success of a programming language is not mainly tied to its syntax or its concepts, but to its ecosystem. This includes many aspects like the availability of useful libraries, the choice of good editors, the support of relevant operating systems and more.", "Specifically the set of libraries nowadays has a huge impact of the primary domain where a specific programming language is used. The most prominent example is Python, where most new state-of-the-art machine learning algorithms are implemented for \u2014 an area where Scala is far behind, although projects like ScalaNLP try to improve the situation.", "While Scalas boost during the last years probably can be traced back to the success of Apache Spark, it is also used in many projects for network services which require a high concurrency, something where Scalas functional programming features can provide support for implementing robust multi-threaded code.", "Both Scala and Python have their place. Specifically in the area of data processing, Python well suits a scientific workflow with many small and quick code experiments as part of an exploration phase to gain new insights.", "Scala\u2019 s \u201cwrite-compile-execute\u201d workflow its static type system better fit to an engineering workflow, where the knowledge for approaching a specific problem is already there and therefore experiments are not performed any more.", "As I pointed out in \u201cRobustness of Code\u201d, I prefer to use a strongly typed language for production code except in some simple cases, where the application is almost trivial.", "After this excursion in a comparison of Scala and Python, let\u2019s move back a little bit to Pandas vs Spark. There is one aspect that is highly coupled to the programming language, and that is the ecosystem. I already mentioned this aspect above, but let us focus more on libraries which can be used together with Pandas and with Spark.", "Since Pandas at its core is built on top of NumPy arrays, it naturally integrates very well with a very rich ecosystem of many numerical and statistical libraries. Just to name a few important examples:", "Moreover we also have the lovely Jupyter Notebooks for working interactively as part of an experimentally driven exploration phase.", "Spark on the other hand lives in a completely different universe. As being a citizen of the JVM world, you can use all kind of Java libraries \u2014 but the focus of most Java libraries is networking, web services and databases. Numerical algorithms is not in the core domain of Java.", "Therefore the ecosystem for Spark looks very differently. Most importantly, there are many connectors to use Spark with all kinds of databases, like relational databases via JDBC connectors, HBase, MongoDB, Cassandra, and so on.", "In addition to connectors, Spark already implements the most important machine learning algorithms like regression, decision trees etc. And then we also have Breeze and ScalaNLP for lower level numerical algorithms (which also cannot be directly scaled by Spark to work on different machines in parallel). But when you compare these libraries with the possibilities of the corresponding Python libraries, you quickly find out that these are much smaller in scope.", "Finally with Zeppelin or by using PySpark (the Python binding for Spark) in Jupyter, we can also use Spark in notebook environments.", "We see huge differences in the ecosystems of Pandas and Spark. While Pandas has strong ties to all sorts of numerical packages, Spark excels in uniform connectivity to all sorts of data sources.", "Since Spark can be used with both Scala and Python, it makes sense to dig a little bit deeper for choosing the appropriate programming language for working with Spark.", "I already indicated that Python has a far larger set of numerical libraries which are commonly used in Data Science projects. Although this is already a strong argument for using Python with PySpark instead of Scala with Spark, another strong argument is the ease of learning Python in contrast to the steep learning curve required for non-trivial Scala programs. Even worse, Scala code is not only hard to write, but also hard to read and to understand. That makes Scala a difficult language for collaborative projects where colleagues or even non-programmers also need or want to understand the logical details of an application. This is often the case in a Data Science environment.", "Because of the availability of many relevant libraries for data science, and because of the easy readability of Python code, I always recommend to use PySpark for real Data Science. This also fits well to the profile of many Data Scientists, who have a strong mathematical background but who often are no programming experts (the focus of their work is somewhere else).", "By using PySpark, data scientsts can work with huge data sets which do not fit into the RAM of a local machine any more, and at the same time (to a certain degree) they can still access all the relevant Python libraries \u2014 as long as they can downsample or aggregate the data such that these tools and libraries become feasible again.", "Things look differently for data engineering. I highly recommend to use Spark with Scala for these types of tasks. First data engineers should have a strong technical background such that using Scala is viable. Next it may be well the case that some custom transformations are required which are not available in Spark. But Spark is very extensible, and in this case it can really pay off to use Scala as the native Spark programming language.", "Using Scala instead of Python not only provides better performance, but also enables developers to extend Spark in many more ways than what would be possible by using Python. With Scala you can access even the internal developer APIs of Spark (as long as they aren\u2019t private) whereas Python can only access the public end user API of Spark.", "Moreover I strongly believe that in data engineering projects all the aspects of \u201cproduction quality code\u201d are far more important than for an explorative data analysis task performed in a notebook environment. This is precisely where having a statically typed and compiled language like Scala provides great benefits.", "Choosing a programming language isn\u2019t easy. You have to think about your requirements, both functional and non-functional. While Python is great for data science, I would prefer to use Scala for data engineering with Spark.", "The next and final section will summarize all the findings and will give more advise when to use what.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Freelance Big Data and Machine Learning expert at dimajix."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F7b267b130158&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://me.dm/@kupferk", "anchor_text": "Mastodon"}, {"url": "https://towardsdatascience.com/?source=post_page-----7b267b130158--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7b267b130158--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://kupferk.medium.com/?source=post_page-----7b267b130158--------------------------------", "anchor_text": ""}, {"url": "https://kupferk.medium.com/?source=post_page-----7b267b130158--------------------------------", "anchor_text": "Kaya Kupferschmidt"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa1b1c406b9d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&user=Kaya+Kupferschmidt&userId=a1b1c406b9d0&source=post_page-a1b1c406b9d0----7b267b130158---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7b267b130158&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7b267b130158&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@timothycdykes?utm_source=medium&utm_medium=referral", "anchor_text": "Timothy Dykes"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://towardsdatascience.com/spark-vs-pandas-part-1-pandas-10d768b979f5", "anchor_text": "Spark vs Pandas, part 1 \u2014 Pandas"}, {"url": "https://towardsdatascience.com/spark-vs-pandas-part-2-spark-c57f8ea3a781", "anchor_text": "Spark vs Pandas, part 2 \u2014 Spark"}, {"url": "https://towardsdatascience.com/stop-using-pandas-and-start-using-spark-with-scala-f7364077c2e0", "anchor_text": "the original article I was referring to at the beginning"}, {"url": "https://en.wikipedia.org/wiki/Duck_typing", "anchor_text": "Duck Typing"}, {"url": "https://en.wikipedia.org/wiki/Anonymous_function", "anchor_text": "lambda functions"}, {"url": "https://en.wikipedia.org/wiki/List_comprehension", "anchor_text": "list comprehension"}, {"url": "https://en.wikipedia.org/wiki/Java_bytecode", "anchor_text": "Java bytecode"}, {"url": "http://www.scalanlp.org/", "anchor_text": "ScalaNLP"}, {"url": "https://scikit-learn.org/", "anchor_text": "SciKit Learn"}, {"url": "https://www.statsmodels.org/", "anchor_text": "Statmodels"}, {"url": "https://www.tensorflow.org/", "anchor_text": "TensorFlow"}, {"url": "https://matplotlib.org/", "anchor_text": "Matplotlib"}, {"url": "https://jupyter.org/", "anchor_text": "Jupyter Notebooks"}, {"url": "https://spark.apache.org/docs/latest/ml-guide.html", "anchor_text": "most important machine learning algorithms"}, {"url": "https://github.com/scalanlp/breeze/", "anchor_text": "Breeze"}, {"url": "http://www.scalanlp.org/", "anchor_text": "ScalaNLP"}, {"url": "https://zeppelin.apache.org/", "anchor_text": "Zeppelin"}, {"url": "https://medium.com/tag/big-data-analytics?source=post_page-----7b267b130158---------------big_data_analytics-----------------", "anchor_text": "Big Data Analytics"}, {"url": "https://medium.com/tag/python?source=post_page-----7b267b130158---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/pandas?source=post_page-----7b267b130158---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/spark?source=post_page-----7b267b130158---------------spark-----------------", "anchor_text": "Spark"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7b267b130158&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&user=Kaya+Kupferschmidt&userId=a1b1c406b9d0&source=-----7b267b130158---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7b267b130158&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&user=Kaya+Kupferschmidt&userId=a1b1c406b9d0&source=-----7b267b130158---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7b267b130158&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7b267b130158--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F7b267b130158&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----7b267b130158---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----7b267b130158--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----7b267b130158--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----7b267b130158--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----7b267b130158--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----7b267b130158--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----7b267b130158--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----7b267b130158--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----7b267b130158--------------------------------", "anchor_text": ""}, {"url": "https://kupferk.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://kupferk.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Kaya Kupferschmidt"}, {"url": "https://kupferk.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "223 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa1b1c406b9d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&user=Kaya+Kupferschmidt&userId=a1b1c406b9d0&source=post_page-a1b1c406b9d0--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F874fa4e516b6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspark-vs-pandas-part-3-scala-vs-python-7b267b130158&newsletterV3=a1b1c406b9d0&newsletterV3Id=874fa4e516b6&user=Kaya+Kupferschmidt&userId=a1b1c406b9d0&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}