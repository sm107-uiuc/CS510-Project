{"url": "https://towardsdatascience.com/make-your-data-processing-code-fly-in-5-minutes-c4998e6da094", "time": 1682995761.523222, "path": "towardsdatascience.com/make-your-data-processing-code-fly-in-5-minutes-c4998e6da094/", "webpage": {"metadata": {"title": "Make Your Data Processing Code Fly in 5 Minutes | by Zixuan Zhang | Towards Data Science", "h1": "Make Your Data Processing Code Fly in 5 Minutes", "description": "Although data scientist is titled the \u2018sexiest\u2019 job of the 21st century, data processing, an important part of the daily work for data practitioners, is laborious and often not so fun. In the era of\u2026"}, "outgoing_paragraph_urls": [{"url": "https://stackoverflow.com/questions/868568/what-do-the-terms-cpu-bound-and-i-o-bound-mean", "anchor_text": "I/O-bound.", "paragraph_index": 2}, {"url": "https://stackoverflow.com/questions/8385602/why-are-numpy-arrays-so-fast", "anchor_text": "numpy library", "paragraph_index": 21}, {"url": "http://docs.dask.org/en/latest/scheduling.html", "anchor_text": "Quote", "paragraph_index": 25}], "all_paragraphs": ["Although data scientist is titled the \u2018sexiest\u2019 job of the 21st century, data processing, an important part of the daily work for data practitioners, is laborious and often not so fun. In the era of big data, data processing is even more time-consuming, easily taking tens of hours to complete. This is both a frustration and it hampers project progress. Therefore, data practitioners are willing to write complex code just for a tiny bit of performance improvement. However, speeding up data processing isn\u2019t that hard! In this article, I\u2019ll introduce some easy and intuitive ways to cut down the runtime of several common data processing works.", "First of all, modern CPUs are lightning fast. Popular CPUs like Intel i7 series can easily achieve 3 GHz clock and have at least 4 cores, which means they should be able to carry out most data processing tasks in a reasonable amount of time. However, CPUs are often starved, meaning the code is bounded by other factors such as I/O delays (disk to RAM, RAM to Cache, etc). Therefore, reducing I/O delays is crucial.", "As you can see, reading data from HDD (rotational disk) is rather slow. Therefore, you can improve its speed just by moving the data read/write folder to an SSD if your task is I/O-bound.", "Secondly, if the operation is CPU-bound, we\u2019ll have to dig a little bit deeper into the regime of parallelism. Parallelism can utilize the full potential of the CPU, making every penny you paid worthwhile. Python offers a variety of parallel computing libraries, but most of them, unfortunately, require large chunks of additional setup code and a decent understanding of threads/processes/synchronization/ etc. Dask is a library that provides parallel computation without exposing users to the nitty-gritty details of parallel configuration. I\u2019ll show you how easy to speed up your code with the help of Dask.", "Dask is installed by default in Anaconda Python environment. If you do not have dask installed, just type this line of code in your terminal", "Set up a local cluster (each core is a worker in the cluster)", "That\u2019s it! You now have several workers at your disposal.", "Example 1: convert JSON files to CSVs", "Converting JSON to CSV is a common task in web crawling. A common way to process JSON files is this:", "However, this serial method does not utilize the full potential of your machine. We can write a better code with minor modifications:", "dask.delayed() is a lazy signal, which means that it will not perform the function (json_process in this case) unless being specifically told to. The advantage of using delayed() is that the system will intelligently determine the parallelizable part.", "For instance, dask can identify the underlying task dependency in the following operation and then work on as many operations at the same time as possible (4 tasks in this case)", "Benchmark: Process JSON files into dataframe in CSV format.", "Example 2: merge CSVs into one large CSV", "Another major hassle for data practitioners is merging CSVs. Here\u2019s a code I found online:", "This code will give a bad performance, as pd.concat() is an expensive function. pd.concat(df1,df2) reallocates a new memory space and copies both dataframes to the new dataframe. The code above gives you quadratic runtime.", "This code only copies dataframes once and thus yields linear runtime. We can\u2019t improve this code significantly, but we can improve it sublinearly using dask.", "Dask provides several data structures and dask.dataframe is one of them. Dask.dataframe allows users to break one huge dataframe into chunks, which allows collaboration between cores. To create dask.dataframe, just do:", "Dask.dataframe object highly resembles pandas dataframe (many commands are exactly the same). For example,", "One important thing: dataframe partitioning is not random work; it is a good idea to partition your data according to the number of cores you have. Too many partitions will unavoidably increase the communication overhead.", "Feature engineering is one crucial prerequisite of a good model. It is always a good idea to vectorize your code when possible. For example:", "Pandas is based on numpy library, a high performance computation library, therefore any vectorized operation is stunningly fast. Luckily, we get the same API in dask:", "However, not all work can be vectorized. For instance: If your dataframe looks like this and you wish to extract the first names, you have to use apply().", "Since the vectorized operations are generally fast enough, I\u2019ll focus on un-vectorizable operations.", "I set the scheduler to \u2018processes\u2019 because this code is purely dominated by operation(). It is reasonable in this case to send data to other processes in exchange for true parallelism (each process works on a partition). See the explanation provided by dask:", "Quote \u2018 The threaded scheduler \u2026 is lightweight \u2026. It introduces very little task overhead (around 50us per task) \u2026. However, due to Python\u2019s Global Interpreter Lock (GIL), this scheduler only provides parallelism when your computation is dominated by non-Python code.\u2019", "\u2018The multiprocessing scheduler \u2026. Every task and all of its dependencies are shipped to a local process, executed, and then their result is shipped back to the main process. This means that it is able to bypass issues with the GIL and provide parallelism even on computations that are dominated by pure Python code\u2019", "Moving data around is costly, which is why using processes scheduler is helpful only when the operation you wish to conduct is way more expensive than inter-process communication:", "As you can see, large n and large theta can make the denominator smaller and thus makes the division greater, which is why we want large n and theta.", "You\u2019ll want to go as close to the top right corner as possible. On the other hand, if your operation does not take that long or your dataframe is small, you might just use pandas.", "If you have multiple columns that need processing, you can work on those columns at the same time:", "Benchmark: same as the previous example, both operation time and data length play important roles.", "Data processing can be time-consuming, especially when done by a single-threader. I have illustrated how easy it is to utilize the full power of your computer with dask. There are, of course, other multiprocessing/threading libraries, but I think dask is the easiest and quickest tool to help data practitioners get started.", "Now go speed up your code!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "New grad SDE at some random company. Student at Columbia & USC. I know how hard learning CS outside the classroom can be, so I hope my blog can help!"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fc4998e6da094&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----c4998e6da094--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c4998e6da094--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://zixuan-zhang.medium.com/?source=post_page-----c4998e6da094--------------------------------", "anchor_text": ""}, {"url": "https://zixuan-zhang.medium.com/?source=post_page-----c4998e6da094--------------------------------", "anchor_text": "Zixuan Zhang"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6bee41715a0e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&user=Zixuan+Zhang&userId=6bee41715a0e&source=post_page-6bee41715a0e----c4998e6da094---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc4998e6da094&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc4998e6da094&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.prowesscorp.com/computer-latency-at-a-human-scale/", "anchor_text": "\u2018Computer Latency at a Human Scale\u2019"}, {"url": "https://stackoverflow.com/questions/868568/what-do-the-terms-cpu-bound-and-i-o-bound-mean", "anchor_text": "I/O-bound."}, {"url": "https://stackoverflow.com/questions/8385602/why-are-numpy-arrays-so-fast", "anchor_text": "numpy library"}, {"url": "http://docs.dask.org/en/latest/scheduling.html", "anchor_text": "Quote"}, {"url": "https://docs.dask.org/en/latest/why.html", "anchor_text": "https://docs.dask.org/en/latest/why.html"}, {"url": "https://github.com/dask/dask", "anchor_text": "https://github.com/dask/dask"}, {"url": "https://www.youtube.com/watch?v=ods97a5Pzw0", "anchor_text": "https://www.youtube.com/watch?v=ods97a5Pzw0"}, {"url": "https://medium.com/tag/python?source=post_page-----c4998e6da094---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----c4998e6da094---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/data-processing?source=post_page-----c4998e6da094---------------data_processing-----------------", "anchor_text": "Data Processing"}, {"url": "https://medium.com/tag/parallel-computing?source=post_page-----c4998e6da094---------------parallel_computing-----------------", "anchor_text": "Parallel Computing"}, {"url": "https://medium.com/tag/data?source=post_page-----c4998e6da094---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc4998e6da094&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&user=Zixuan+Zhang&userId=6bee41715a0e&source=-----c4998e6da094---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc4998e6da094&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&user=Zixuan+Zhang&userId=6bee41715a0e&source=-----c4998e6da094---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc4998e6da094&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c4998e6da094--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fc4998e6da094&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----c4998e6da094---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----c4998e6da094--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----c4998e6da094--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----c4998e6da094--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----c4998e6da094--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----c4998e6da094--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----c4998e6da094--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----c4998e6da094--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----c4998e6da094--------------------------------", "anchor_text": ""}, {"url": "https://zixuan-zhang.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://zixuan-zhang.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Zixuan Zhang"}, {"url": "https://zixuan-zhang.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.5K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6bee41715a0e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&user=Zixuan+Zhang&userId=6bee41715a0e&source=post_page-6bee41715a0e--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F8eaa96f63522&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-data-processing-code-fly-in-5-minutes-c4998e6da094&newsletterV3=6bee41715a0e&newsletterV3Id=8eaa96f63522&user=Zixuan+Zhang&userId=6bee41715a0e&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}