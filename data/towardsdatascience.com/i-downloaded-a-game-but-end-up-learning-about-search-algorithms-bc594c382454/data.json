{"url": "https://towardsdatascience.com/i-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454", "time": 1683017181.787494, "path": "towardsdatascience.com/i-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454/", "webpage": {"metadata": {"title": "I downloaded a game but end up learning about search algorithms | by Ji Wei Liew | Towards Data Science", "h1": "I downloaded a game but end up learning about search algorithms", "description": "I was watching a sequel of a Hong Kong drama series \uff08\u4f7f\u5f92\u884c\u80053\uff09 and one of the lead actresses was featured to be playing a Klotzli puzzle (\u534e\u5bb9\u9053). That got me intrigued as I love solving puzzles and\u2026"}, "outgoing_paragraph_urls": [{"url": "https://play.google.com/store/apps/details?id=com.momokka.cn.hakoiri&hl=zh&gl=US", "anchor_text": "game", "paragraph_index": 1}, {"url": "https://gist.github.com/jiweiliew/ff47bc136aaab324e81101bdf72635be", "anchor_text": "Full code here", "paragraph_index": 4}, {"url": "https://stackoverflow.com/a/513906/8350440", "anchor_text": "answers", "paragraph_index": 18}, {"url": "https://wiki.python.org/moin/TimeComplexity", "anchor_text": "documentation", "paragraph_index": 18}, {"url": "https://gist.github.com/jiweiliew/ff47bc136aaab324e81101bdf72635be", "anchor_text": "code", "paragraph_index": 32}, {"url": "https://gist.github.com/jiweiliew/ff47bc136aaab324e81101bdf72635be", "anchor_text": "here", "paragraph_index": 40}, {"url": "https://www.pythonanywhere.com/user/zysterl/shares/4897dabf648c4b6182f37f09a69b5091/", "anchor_text": "here", "paragraph_index": 40}, {"url": "https://docs.python.org/3.7/library/collections.html#collections.deque", "anchor_text": "list-like container with fast appends and pops on either end", "paragraph_index": 42}, {"url": "http://www.linkedin.com/in/ji-wei-liew", "anchor_text": "www.linkedin.com/in/ji-wei-liew", "paragraph_index": 49}], "all_paragraphs": ["I was watching a sequel of a Hong Kong drama series \uff08\u4f7f\u5f92\u884c\u80053\uff09 and one of the lead actresses was featured to be playing a Klotzli puzzle (\u534e\u5bb9\u9053). That got me intrigued as I love solving puzzles and specifically, I enjoy finding the optimal solution for puzzles.", "With some effort, I managed to find a similar game on Google Play Store, downloaded it, and started playing. The objective of the game is simple: move the 2x2 block out from the bottom of the frame. Turns out the game is really complicated and not that easily solvable, and finding the optimal solution is much harder. Each stage has optimal solution given by the minimum number of steps. The diagram below shows that the optimal solution for Stage 50 involves 138 moves.", "As determined as I was, I decided that I can (perhaps) solve this on python, as I could probably model the state of the puzzle in a pandas DataFrame, plug it into a function that recursively moves each block and stop when the win condition is met (i.e. the 2 by 2 block is at the bottom-center position). Little did I know that it would take me sap up the bulk of my personal time for 3 weeks, figuring out the solution, and then optimizing it. I had little knowledge of graph theory, breadth first search, depth first search and performance of list versus dict.", "The rest of this article will be broken down into the following sections:", "The following section describes how to model the 4 types of blocks. Code snippets have been simplified. Full code here.", "btype (short for type of block) 1,2,3 and 4 refer to the unit, horizontal, vertical and 2 by 2 block respectively.", "row & col refers to the number of rows and columns the block occupies. E.g. a horizontal block occupies 1 row and 2 columns.", "general is used to distinguish similar blocks. e.g. guanyu and zhuge block have the same btype attribute but have different general attribute.\u00b9", "position specifies the location of the block on the Stage. If a block is made up of more than one unit, the position references the top-left corner of the block.", "coords is a list of coordinates that block occupies on the Stage.", "[1] For those who are not familiar with the Romance of Three Kingdoms, guanyu is a general in the military, hence the attribute is named as such. Strictly speaking, Liubei, CaoCao not generals, more likely warlords.", "Next, we need a way to represent the Stage.", "At this juncture, it is probably worthwhile to explain why there is a need for the 2 block attributes (btype & general). In my initial attempts, I stored each state as a Dataframe with general attribute in self.states and I found that the script took a very long time. Upon investigation, I discovered that the script is stuck trying to exhaust all the downstream possibilities whenever such cyclic symmetry exists, because it sees each configuration as a distinct state:", "When there are many unit blocks, such possibilities are increased many folds! Therefore, there is a need to let similar blocks share a common value (btype), so that these states can be identified to be the same, to avoid trying such moves.", "The general attribute continues to be useful: One, it is used as a key in the d_blocks dictionary. Also, when the solver is complete, it is hard to check the solution without a way to distinguish similar blocks. Using Stage(2) as an example:", "The first 3 steps of the optimal solution for such this puzzle is:", "One will need to guess which block can move DR, DD and LD! *gasps*s.image() removes the guesswork:", "Why not list of lists, numpy array or pandas dataframe?", "I\u2019ve tried different approaches and found dictionaries to be fastest. You\u2019ll may be shocked to know that list of lists is the slowest of the three. There are some answers addressing why this is so, but the python documentation on Time Complexity states it best.", "Moving a block is somewhat complicated. It involves:", "A block can also move 2 steps (this counts as 1 move in the game). Horizontal blocks can move RR or LL. Unit blocks can make 12 possible 2-step moves: UU, DD, RR, LL, UR, UL, DR, DL, RU, RD, LU, LD. Moves in reverse direction (e.g. RL, LR, UD, DU) are not allowed, it\u2019s wasting moves!", "The next code block can probably benefit from some refactoring, but it might make it rather abstract for understanding.", "(4) deserves some explanation. Imagine a scenario where a Block (e.g. z10 of Stage 2) is moved L, and then moved L again. Such an approach is, once again, wasting moves and will not be the optimal solution. Also, the exhaustive search would cover the scenario where the block moves LL directly. Similarly, a block which can move U or L, can move U then DL. But this would not be the most optimal solution, hence we can simply forbid all moves that involve the last_moved_general.", "Initially, I had stumbled upon the depth first search approach which is extremely slow and that led me to reconsider solving the problem via breadth first search. It was only much later that I learnt that depth first search can solve the problem eventually (assuming I don\u2019t run out of memory), but the first solution is unlikely to be optimal; and breadth first search will get the optimal solution.", "By inspecting the attempts made by the script to solve the puzzle, I noticed that the number of moves to be searched increases at an increasing rate (rather alarmingly). This led me to think about how to further eliminate the number of moves to be searched.", "If the Stage is symmetrical length-wise, it would suffice to try only moves involving blocks that lie either to the left or right of the block, and not both.", "This is important because if a stage starts out to be symmetric, the total number of searches would reduce by 50%. Furthermore, as the search progresses, there could be symmetric child stages as well and there would be further reduction.", "I was hoping this would reduce the time by 50% for symmetric Stages, since I\u2019d have reduced the number of searches by at least 50%. But turns out, there is only a 10% reduction in time taken, so there is (probably) an immense cost to check for symmetry and remove symmetric moves.", "This was written as a standalone method initially and I\u2019ve added it to the d_path method in the final code.", "It can get a bit worrying if the script takes a bit too long to run and, oftentimes, is very comforting to print some output messages so that the script can inform you that it is still progressing (in a sane fashion).", "Hence, I added some print commands indicate which Move No. the script is currently at and to count the number of Stage(s) in the queue. This provides a sense of how rapidly the search tree expands (or contracts) and serves as a motivation to come up with innovative solutions to limit search options. Removing symmetric moves came about because of this. :D", "I\u2019ve also added a timer function which prints the time taken to process all moves of the same number. Also, I\u2019ve converted the BFS_solver to a generator, so that those who are keen can examine the Stage that is being yielded at any given point more easily using solve_BFS.", "For those who are keen to try out how the code runs, here\u2019s how to use it.", "Solving Stage 1 (via Breadth first search approach):", "Here\u2019s the depth first search approach (works well only for Stage 1 and Stage 12).", "Stage 12 (DFS is surprisingly faster than BFS):", "Depth first search approach returns the last attempted move when one breaks out of the code (e.g. pressing Ctrl+C on Powershell)", "The hardest stage (Stage 50) takes a considerable amount of time to solve using the breadth first search approach. An interesting observation: After 24 moves, there is only 1 available Stage in the queue, which means the rest are likely to be dead-ends.", "self.playback() can be used to replay the solution step-by-step, after .solve_BFS() has been called.", "Additional stages can be added by creating list of blocks and positions and adding them to the d_stage dictionary.", "Full code is available here (Github) and here (PythonAnywhere).", "derive_moves: A subtle note here is that the 2-step move (e.g. RR, RD, RU) is added before the 1-step move (e.g. R). There is some minor advantage. Imagine a Stage where the optimal solution comprises of N moves. Now consider the extreme ends of the queue when BFS is processing the N-th move. The very first Stage at the start of the queue would have taken many 2-step moves from Move 1 to Move N-1. On the other hand, the Stage at the end of the queue would have taken all the 1-step moves from Move 1 to Move N-1. Given that we are trying to minimize moves, trying the stages which have taken more 2-step moves first may make more sense. I guess we\u2019ve have achieved some sort of prioritization here?", "deque: I have been aware about this container type for some time, but never really found a situation where there a regular list object may be inefficient. Turns out deque is very suitable when setting up a queue for the breadth first search as it a \u201clist-like container with fast appends and pops on either end\u201d.", "While I am very pleased to have solved this problem, what I find extremely valuable is the problem-solving process and learning about the intricacies of python.", "At work, I have the luxury of not having to deal with problems where the level of complexity is so great that the performance of set, list and dictionary matters.", "Need more processing power? Sure, we can equip you with a computer with a faster processor.", "Need more memory? Sure, we can migrate you to workspace with 64GB shared among 4 other users, who use about 2\u20133GB of RAM on average.", "If you\u2019ve enjoyed this article, do drop me a comment and check out my other articles.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Business consultant for banks, passionate about scripting and automating work using python. www.linkedin.com/in/ji-wei-liew"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fbc594c382454&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----bc594c382454--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bc594c382454--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://jiweiliew.medium.com/?source=post_page-----bc594c382454--------------------------------", "anchor_text": ""}, {"url": "https://jiweiliew.medium.com/?source=post_page-----bc594c382454--------------------------------", "anchor_text": "Ji Wei Liew"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbf5390a70cc8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&user=Ji+Wei+Liew&userId=bf5390a70cc8&source=post_page-bf5390a70cc8----bc594c382454---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbc594c382454&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbc594c382454&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://play.google.com/store/apps/details?id=com.momokka.cn.hakoiri&hl=zh&gl=US", "anchor_text": "game"}, {"url": "https://play.google.com/store/apps/details?id=com.momokka.cn.hakoiri&hl=en&gl=US", "anchor_text": "\u534e\u5bb9\u9053: Kloski game"}, {"url": "https://gist.github.com/jiweiliew/ff47bc136aaab324e81101bdf72635be", "anchor_text": "Full code here"}, {"url": "https://stackoverflow.com/a/513906/8350440", "anchor_text": "answers"}, {"url": "https://wiki.python.org/moin/TimeComplexity", "anchor_text": "documentation"}, {"url": "https://www.geeksforgeeks.org/difference-between-bfs-and-dfs/", "anchor_text": "here"}, {"url": "https://gist.github.com/jiweiliew/ff47bc136aaab324e81101bdf72635be", "anchor_text": "code"}, {"url": "https://gist.github.com/jiweiliew/ff47bc136aaab324e81101bdf72635be", "anchor_text": "here"}, {"url": "https://www.pythonanywhere.com/user/zysterl/shares/4897dabf648c4b6182f37f09a69b5091/", "anchor_text": "here"}, {"url": "https://docs.python.org/3.7/library/collections.html#collections.deque", "anchor_text": "list-like container with fast appends and pops on either end"}, {"url": "https://towardsdatascience.com/python-tips-for-someone-transiting-from-excel-ce16c5f9cbac", "anchor_text": "Python tips for someone transiting from ExcelExcel is one of the most frequently used application for data analysis. However, due with its clear limitations (i.e\u2026towardsdatascience.com"}, {"url": "https://towardsdatascience.com/how-to-create-a-list-of-files-folders-and-subfolders-and-then-export-as-excel-6ce9eaa3867a", "anchor_text": "How to create a list of files, folders, and subfolders and then export as ExcelA productivity tool to Marie Kondo your folderstowardsdatascience.com"}, {"url": "https://medium.com/tag/python?source=post_page-----bc594c382454---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/klotzli?source=post_page-----bc594c382454---------------klotzli-----------------", "anchor_text": "Klotzli"}, {"url": "https://medium.com/tag/breadth-first-search?source=post_page-----bc594c382454---------------breadth_first_search-----------------", "anchor_text": "Breadth First Search"}, {"url": "https://medium.com/tag/search-algorithm?source=post_page-----bc594c382454---------------search_algorithm-----------------", "anchor_text": "Search Algorithm"}, {"url": "https://medium.com/tag/hua-rong-dao?source=post_page-----bc594c382454---------------hua_rong_dao-----------------", "anchor_text": "Hua Rong Dao"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbc594c382454&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&user=Ji+Wei+Liew&userId=bf5390a70cc8&source=-----bc594c382454---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbc594c382454&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&user=Ji+Wei+Liew&userId=bf5390a70cc8&source=-----bc594c382454---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbc594c382454&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bc594c382454--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fbc594c382454&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----bc594c382454---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----bc594c382454--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----bc594c382454--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----bc594c382454--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----bc594c382454--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----bc594c382454--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----bc594c382454--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----bc594c382454--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----bc594c382454--------------------------------", "anchor_text": ""}, {"url": "https://jiweiliew.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://jiweiliew.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ji Wei Liew"}, {"url": "https://jiweiliew.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "86 Followers"}, {"url": "http://www.linkedin.com/in/ji-wei-liew", "anchor_text": "www.linkedin.com/in/ji-wei-liew"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbf5390a70cc8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&user=Ji+Wei+Liew&userId=bf5390a70cc8&source=post_page-bf5390a70cc8--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fde67d60b7022&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fi-downloaded-a-game-but-end-up-learning-about-search-algorithms-bc594c382454&newsletterV3=bf5390a70cc8&newsletterV3Id=de67d60b7022&user=Ji+Wei+Liew&userId=bf5390a70cc8&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}