{"url": "https://towardsdatascience.com/real-time-recommendation-system-rolling-feature-matrix-f5ca701439df", "time": 1682996289.996989, "path": "towardsdatascience.com/real-time-recommendation-system-rolling-feature-matrix-f5ca701439df/", "webpage": {"metadata": {"title": "Real-time Recommendation System: Rolling Feature Matrix | by Gregory Arefyev | Towards Data Science", "h1": "Real-time Recommendation System: Rolling Feature Matrix", "description": "Nowadays it\u2019s rather hard to find a news website that wouldn\u2019t make a try to keep your attention by means of some recommendation system. If you happen to read an article anywhere on the internet\u2014the\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Cosine_similarity", "anchor_text": "cosine similarity", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/shortest-path-similarity-a-fresh-breath-to-item-based-recommendations-9ac3d6ba7240", "anchor_text": "more precise algorithm", "paragraph_index": 6}, {"url": "https://en.wikipedia.org/wiki/Adaptive_replacement_cache", "anchor_text": "Adaptive Replacement Cache", "paragraph_index": 10}, {"url": "https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.lil_matrix.html", "anchor_text": "lil_matrix", "paragraph_index": 11}, {"url": "https://github.com/grinya007/recomlive", "anchor_text": "Recom.live", "paragraph_index": 13}, {"url": "https://github.com/grinya007/recomlive-docker", "anchor_text": "this repository", "paragraph_index": 13}, {"url": "https://github.com/grinya007/recomlive-client", "anchor_text": "client library", "paragraph_index": 14}], "all_paragraphs": ["Nowadays it\u2019s rather hard to find a news website that wouldn\u2019t make a try to keep your attention by means of some recommendation system.", "If you happen to read an article anywhere on the internet\u2014the \u201cread next\u201d, \u201cmost read\u201d, \u201ctrending\u201d or something of the like will inevitably meet you below. At times we still see editor\u2019s digest \u2014 the case when recommended articles don\u2019t change regardless of the context. The more advanced would use tags, content-based or another kind of handcrafted similarity. But when a person reads of a today\u2019s fire accident it doesn\u2019t necessarily mean that \u201cfire\u201d or \u201caccident\u201d characterizes his or her interest. It could be true for say 11.3% but other news from today could be more interesting than another fire accident from a month ago, let\u2019s say with a probability of 24.6%, and the rest of probable interest is a complex combination of thoughts and feelings formed by informational background over the past three days.", "Of course, one could somehow understand and measure the influence of all the possible factors and come up with a list of very precise coefficients for a ranking function, but tomorrow the world is gonna be different. An empirical study shows that collaborative filtering of any sort is way more efficient in making recommendations. That is, we should never try to interpret the collective mind into a human-readable representation. The modern recommendation system should look not for keywords and dates, but for behavioral patterns. The simple and proven method to be efficient is to rely on the cosine similarity of the articles.", "In order to use cosine similarity, you have to represent articles as vectors of visits. For simplicity let the Nth coefficient be 1 when the Nth reader has visited a given article and 0 otherwise. When exploring multiple articles, you can stack those vectors into a matrix where each row represents an article and each column represents a reader. If you pick a window in an access log of a website you can represent it as follows.", "Now, to know the cosine similarity between each pair of articles you can use the following approach.", "The resulting symmetric matrix has a shape of M by M where M is the number of articles. Each coefficient denotes a measure of similarity between i-th and j-th article. Needless to say, when i = j the coefficient is 1 as this is the similarity of an article to itself.", "The above example is a kind of batch processing. That is, when you load a decent piece of raw input data, make calculations and store a result, they can be retrieved later on when recommendations are requested. This approach is widely used in recommendation systems as it enables you to use a more complex data representation and a more precise algorithm. It works pretty well in the applications where new publications have a lower frequency and a longer lifecycle \u2014 such as an online store or an entertainment platform. But when it comes to a news website an intermittent operation becomes a significant problem.", "Imagine a viral publication that\u2019s being visited by thousands of people within a few minutes. What if such a wave happens to come in between duty cycles of your recommendation system that runs a batch every 10 minutes? To take full advantage of the peak attendance you have to recommend something to those people in order to make them stay. When you try to increase the frequency of batch processing while having limited computational power, you likely need to decrease the size of a batch, which in turn reduces the quality of the outcome and still doesn\u2019t fully eliminate the negative effect of intermittency. So, how do you make a recommendation system for a news website work continuously?", "The key idea is to always keep the document/person matrix in memory, to fill it with data as it comes and to perform the calculation on demand. At the same time, we still would want to have control over the size of the matrix. Hence, the matrix must contain only the most important data at any given moment in time. As if the batch was loaded every time when a request for recommendations has been dispatched. What comes to mind is to make use of some cache replacement policy.", "Imagine we have a pouring input stream of document_id, person_id pairs. When the next pair arrives we put its document_id into Cache1 and person_id into Cache2. When a hit occurs we adjust the corresponding cache in accordance with the policy and assign a corresponding coefficient in the matrix. And for a case of a miss, we replace the least important (e.g. the least recent) record in the cache and reinitialize the corresponding row or column in the matrix with all zeros except for the intersection of the pair. The GIF that\u2019s worth a thousand words is shown below.", "In this example, I use the Adaptive Replacement Cache algorithm. This algorithm accounts for both frequency and recency of elements that are being cached by learning from an eviction history. The ratio of the most frequent elements to the most recent elements is adaptive and is the core knowledge of the algorithm. It helps to keep only the most important elements in memory, that is, such elements that are likely to be accessed again in the near\u00a0future. The key feature of the implementation that I use is that every record in the cache is assigned a unique ID taken from the range of 0 to N\u200a-\u200a1, where N is the maximum number of records in the cache. These IDs don\u2019t tell us anything about the order of records but just are guaranteed to be unique across a cache instance. Thus, IDs can be used as indexes of rows and columns in the matrix. When a record is evicted, ID is reused and we know which row or column has to be reinitialized. Now we have a \u201cRolling Feature Matrix\u201d. Meaning that it contains a sliding batch of input data ready to be used for the calculation of recommendations in the real-time. Of course, this approach may have many more applications. I\u2019m just using a recommendation system to give you an idea.", "Use lil_matrix to make the calculation faster while preserving the efficiency of mutation (sparsity change), drop unneeded columns before performing a calculation of recommendations for a certain document. That is, slice out all columns where the corresponding row has zeros.", "In the case when you have a 2k by 2k matrix with something about 10k of nonzero values (which is a sufficient amount of data in many situations) the above code runs hundreds of times per second within a single thread on any modern CPU making this approach suitable for a real-time application.", "To make my point I\u2019ve implemented Recom.live, the recommendation system that takes advantage of the \u201cRolling Feature Matrix\u201d. This is a production-ready real-time recommendation system. You can install and run it in a docker container. Please check out this repository, containing a Dockerfile and instructions. In short, installation is as simple as:", "This will start a UDP server (default port is 5005). You can start pouring document_id, person_id pairs into it and retrieving recommendations out of it by providing the same context (the pair of document_id, person_id). The API is very simple, although to make it even simpler, I\u2019ve written a tiny client library in python.", "Under the load, Recom.live is holding 700 record/recommend requests per second while running on Intel Core-i5 CPU. Having a default shape of the matrix (which is 2000 X 2000) Recom.live server consumes about 100 Mb of RAM. Docker image is built from debian:stretch-slim and takes about 350 Mb of disk space. All in all, it definitely isn\u2019t going to bring your servers down.", "So, everyone is welcome to use, leave feedback and contribute to the development of Recom.live. Have a great day/weekend/life and never hesitate to reach out!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff5ca701439df&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f5ca701439df--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f5ca701439df--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@gregory_7188?source=post_page-----f5ca701439df--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@gregory_7188?source=post_page-----f5ca701439df--------------------------------", "anchor_text": "Gregory Arefyev"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdda707b3b49f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&user=Gregory+Arefyev&userId=dda707b3b49f&source=post_page-dda707b3b49f----f5ca701439df---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff5ca701439df&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff5ca701439df&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://en.wikipedia.org/wiki/Cosine_similarity", "anchor_text": "cosine similarity"}, {"url": "https://towardsdatascience.com/shortest-path-similarity-a-fresh-breath-to-item-based-recommendations-9ac3d6ba7240", "anchor_text": "more precise algorithm"}, {"url": "https://en.wikipedia.org/wiki/Adaptive_replacement_cache", "anchor_text": "Adaptive Replacement Cache"}, {"url": "https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.lil_matrix.html", "anchor_text": "lil_matrix"}, {"url": "https://github.com/grinya007/recomlive", "anchor_text": "Recom.live"}, {"url": "https://github.com/grinya007/recomlive-docker", "anchor_text": "this repository"}, {"url": "https://github.com/grinya007/recomlive-client", "anchor_text": "client library"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----f5ca701439df---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/recommendation-system?source=post_page-----f5ca701439df---------------recommendation_system-----------------", "anchor_text": "Recommendation System"}, {"url": "https://medium.com/tag/algorithms?source=post_page-----f5ca701439df---------------algorithms-----------------", "anchor_text": "Algorithms"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff5ca701439df&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&user=Gregory+Arefyev&userId=dda707b3b49f&source=-----f5ca701439df---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff5ca701439df&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&user=Gregory+Arefyev&userId=dda707b3b49f&source=-----f5ca701439df---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff5ca701439df&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f5ca701439df--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff5ca701439df&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f5ca701439df---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f5ca701439df--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f5ca701439df--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f5ca701439df--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f5ca701439df--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f5ca701439df--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f5ca701439df--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f5ca701439df--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f5ca701439df--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@gregory_7188?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@gregory_7188?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Gregory Arefyev"}, {"url": "https://medium.com/@gregory_7188/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "45 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdda707b3b49f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&user=Gregory+Arefyev&userId=dda707b3b49f&source=post_page-dda707b3b49f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2Fdda707b3b49f%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freal-time-recommendation-system-rolling-feature-matrix-f5ca701439df&user=Gregory+Arefyev&userId=dda707b3b49f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}