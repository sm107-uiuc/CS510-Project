{"url": "https://towardsdatascience.com/10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820", "time": 1683010258.6762571, "path": "towardsdatascience.com/10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820/", "webpage": {"metadata": {"title": "10 Idiomatic Ways to Refactor Your Python Code | by Yong Cui | Towards Data Science", "h1": "10 Idiomatic Ways to Refactor Your Python Code", "description": "Python is a general-purpose programming language that is widely used in scientific computation, artificial intelligence, web development, financial modeling, and many other areas. One major reason\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.python.org/dev/peps/pep-0498/", "anchor_text": "official documentation", "paragraph_index": 5}, {"url": "https://medium.com/swlh/string-formatting-in-python-6-things-to-know-about-f-strings-72fd38d96172", "anchor_text": "my recent article", "paragraph_index": 5}, {"url": "https://www.manning.com/books/python-how-to", "anchor_text": "https://www.manning.com/books/python-how-to", "paragraph_index": 24}], "all_paragraphs": ["Python is a general-purpose programming language that is widely used in scientific computation, artificial intelligence, web development, financial modeling, and many other areas. One major reason for its popularity is its flexibility of having multiple solutions for various operations. However, in most cases, there is one possible idiotic solution that is preferred among seasoned Python programmers. In this article, I would like to review 10 idiomatic cases that you can consider using to refactor your Python code.", "There are three common mutable container data types in Python, including lists, dictionaries, and sets. If we start with an iterable, we can use a for loop to go over the iterable using the for loop to create a new list from it. However, the idiomatic way is to use list comprehension, which has the following syntax: [expression for x in iterable if any_condition]. Note that the conditional evaluation part is optional. Let\u2019s see the following code.", "Besides the list comprehension, we can also use comprehension for dictionaries and sets, which are termed dictionary comprehension and set comprehension, respectively. The dictionary comprehension has the following syntax: {key_expr: val_expr for item in iterable}, while the set comprehension\u2019s syntax is: {expr for item in iterable}. The following code shows you their usages.", "Strings are a common primitive data type that we use in almost all our projects. To display string data, in most cases, we need to take a step further by formatting strings in a specific way. We can do the string formatting with the C-style method which involves using the % symbol or the format method of Python strings.", "However, in recent releases of Python, the new string formatting method has been introduced. It\u2019s known as the f-strings, which stand for formatted string literals \u2014 a concise and readable way to format the strings. Let\u2019s see the comparisons between these different formatting approaches.", "Certainly, the above code only shows you the very basic usage about f-strings, which in fact implement almost all formatting styles that are supported by the C-style or the string\u2019s format method. You can read more about f-strings in the official documentation or in my recent article.", "When we work with variables, it\u2019s a common practice that we define one variable in each line. However, when we\u2019re declaring multiple variables, we can do that in a single line. Please note that to avoid confusion, you may want to declare variables that are semantically related. If they serve distinct purposes, I wouldn\u2019t recommend doing that. Let\u2019s see the refactoring below.", "Under the hood, the multiple assignments involve the creation of a tuple on the right side and unpacking of the tuple on the left side. The following code shows you how to unpack a tuple. As you can see, it looks like multiple assignment, because they\u2019re using the same mechanism.", "In the above section, we reviewed how to unpack a tuple using the most basic format \u2014 the same number of variables to denote each of the elements in the element. However, when there are multiple elements in the tuple, sometimes you may want to unpack it using the catch-all method. Specifically, all the elements that are not explicitly denoted by variables will be captured by the variable with an asterisk prefix. To achieve the same result, the non-idiomatic method usually involves slicing, which is error-prone if we miss the correct indices.", "As you may notice, the values of middle_numbers0 and middle_numbers1 aren\u2019t equal. It\u2019s because that the catch-all unpacking (using the asterisk) generates a list object by default. Thus, to make the final unpacked data have the same data type, we can use the tuple constructor, as shown below.", "The assignment expression is better known as the walrus expression using the walrus operator :=, which looks like a walrus with a pair of eyeballs and tusks, doesn\u2019t it? As indicated by its name, assignment expression allows you to assign a value to a variable and in the meantime, it can be used as an expression, such as in an if statement. The definition sounds confusing, and let\u2019s see its usage in the following code snippet.", "As shown above, when we don\u2019t use the assignment expression, we have to get the account number first and use it to for the money withdrawing operation, which creates some code duplication. By contrast, we can eliminate one line of code by assignment expression, which calls the function and assigns the returned value to the new variable to be evaluated in the meantime.", "Some people may argue that saving one line of code doesn\u2019t matter too much, but it makes our intention more clear that the variable account_number is only relevant in the scope of the if statement. If you have coding experience in Swift, the usage of assignment expression in the if statement is pretty much like the optional binding technique, as shown below. Basically, the temporary variable accountNumber is only used in the subsequent scope when it's valid. Thus, you should get familiar with assignment expression, and after a while, you\u2019ll find the code more readable.", "In almost every project, we inevitably make our program repeat particular operations for all the elements in a list, tuple, or some other container data types. These repeated operations can be achieved with the for loop. Normally, we can use the basic form: for item in iterable. However, for the iteration, if we need to track the count of the current iteration loop, it\u2019s better to use the enumerate function, which can create the counter for us. Moreover, we can set the number at which we can start the counter.", "Suppose that we start with two iterables, and we want to join these two iterables for each corresponding pair of elements. Typically, we can use the indexing method by retrieving the elements from each iterable such that we can join them to form a dictionary. However, Python has the built-in function zip, which does exactly what we want to achieve. Basically, the zip function takes multiple iterables, and create an iterable of the length that matches use the shortest length of the iterables. Let\u2019s see the following example.", "What\u2019s the zip function does is to create an iterator zip object with each element as a tuple consisting of items from the supplied iterables. One thing to note is that by default, the zip function will stop when it reaches the end of any iterable. By contrast, the zip_longest function will use the longest iterable.", "The above idiomatic way is taking advantage of the dict constructor being able to use an iterable to create a dict object. Besides the above usage, the zip object can be directly used in an iteration, as shown below.", "In the above example, we used the zip function to join the iterables element-wise. What should we do if our specific business need is to concatenate iterables? Suppose that we need to go over two iterables of elements of the same category for the same operation. We can achieve this functionality by using the chain function. Let\u2019s see the usage below.", "As shown above, the non-idiomatic ways need the creation of extra lists, which are not the most memory-efficient. By contrast, the chain function creates an iterable from these initially defined iterables. Moreover, the chain function is flexible and it can take any kinds of iterables, which means it can take dictionaries, sets, lists, zip objects, map objects (using the map function), and many other kinds of iterables in Python.", "If we need to assign something to a variable, different values will be assigned based on the condition. In this case, we can use the if statement to evaluate the condition and determine what value to use for the assignment. This typically involves several lines of code. However, we can use the ternary expression to get the job done with just one line of code, which has the following general syntax: var = true_value if condition else false_value. Let\u2019s see their respective usages.", "The concept of generators can be unfamiliar to those people who are new to Python, because it\u2019s not a common technique in many other programming languages. It\u2019s a neat trick to allow you to work with a stream of data without the need of establishing the stream at front. Instead, the generator yields the next value when it\u2019s asked to do so, which is very memory efficient.", "Consider the following trivial example. Suppose that we need to process tons of data in a file. Theoretically, we can read the entire file to a list and process each row of the data in the list. However, it\u2019s entirely possible that your computer can run out of memory when the file is enormously large. Instead, the better and more idiomatic solution is to make a generator from the file, which yields only one row of data each time at demand.", "There are many more idiomatic ways to do various kinds of things in Python, and the topics covered in this article is just an incomplete list of tricks that I find useful in my daily projects. I hope they can help you write Python code too. A final tip is that you\u2019ll have to purposely refactor your code using these and other idioms, which are usually more performant ways. By refactoring your code consistently, you will gradually improve your Python coding skills.", "Thanks for reading this piece and happy coding.", "Work at the nexus of biomedicine, data science & mobile dev. Author of Python How-to by Manning (https://www.manning.com/books/python-how-to)."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fcbb05bb0c820&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://yongcui01.medium.com/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": ""}, {"url": "https://yongcui01.medium.com/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "Yong Cui"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F88ff1e2545d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&user=Yong+Cui&userId=88ff1e2545d0&source=post_page-88ff1e2545d0----cbb05bb0c820---------------------post_header-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fcbb05bb0c820&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&user=Yong+Cui&userId=88ff1e2545d0&source=-----cbb05bb0c820---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcbb05bb0c820&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&source=-----cbb05bb0c820---------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://unsplash.com/@martinshreder?utm_source=medium&utm_medium=referral", "anchor_text": "Martin Shreder"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.python.org/dev/peps/pep-0498/", "anchor_text": "official documentation"}, {"url": "https://medium.com/swlh/string-formatting-in-python-6-things-to-know-about-f-strings-72fd38d96172", "anchor_text": "my recent article"}, {"url": "https://medium.com/tag/python?source=post_page-----cbb05bb0c820---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/technology?source=post_page-----cbb05bb0c820---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----cbb05bb0c820---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/data-science?source=post_page-----cbb05bb0c820---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----cbb05bb0c820---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fcbb05bb0c820&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&user=Yong+Cui&userId=88ff1e2545d0&source=-----cbb05bb0c820---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fcbb05bb0c820&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&user=Yong+Cui&userId=88ff1e2545d0&source=-----cbb05bb0c820---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcbb05bb0c820&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://yongcui01.medium.com/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F88ff1e2545d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&user=Yong+Cui&userId=88ff1e2545d0&source=post_page-88ff1e2545d0----cbb05bb0c820---------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fef441bd78519&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&newsletterV3=88ff1e2545d0&newsletterV3Id=ef441bd78519&user=Yong+Cui&userId=88ff1e2545d0&source=-----cbb05bb0c820---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://yongcui01.medium.com/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "Written by Yong Cui"}, {"url": "https://yongcui01.medium.com/followers?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "5.5K Followers"}, {"url": "https://towardsdatascience.com/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://www.manning.com/books/python-how-to", "anchor_text": "https://www.manning.com/books/python-how-to"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F88ff1e2545d0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&user=Yong+Cui&userId=88ff1e2545d0&source=post_page-88ff1e2545d0----cbb05bb0c820---------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fef441bd78519&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F10-idiotic-ways-to-refactor-your-python-code-cbb05bb0c820&newsletterV3=88ff1e2545d0&newsletterV3Id=ef441bd78519&user=Yong+Cui&userId=88ff1e2545d0&source=-----cbb05bb0c820---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://betterprogramming.pub/advanced-python-9-best-practices-to-apply-when-you-define-classes-871a27af658b?source=author_recirc-----cbb05bb0c820----0---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://yongcui01.medium.com/?source=author_recirc-----cbb05bb0c820----0---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://yongcui01.medium.com/?source=author_recirc-----cbb05bb0c820----0---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "Yong Cui"}, {"url": "https://betterprogramming.pub/?source=author_recirc-----cbb05bb0c820----0---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "Better Programming"}, {"url": "https://betterprogramming.pub/advanced-python-9-best-practices-to-apply-when-you-define-classes-871a27af658b?source=author_recirc-----cbb05bb0c820----0---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "Advanced Python: 9 Best Practices to Apply When You Define ClassesHow to make your code more readable and maintainable"}, {"url": "https://betterprogramming.pub/advanced-python-9-best-practices-to-apply-when-you-define-classes-871a27af658b?source=author_recirc-----cbb05bb0c820----0---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "\u00b711 min read\u00b7Aug 12, 2020"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fbetter-programming%2F871a27af658b&operation=register&redirect=https%3A%2F%2Fbetterprogramming.pub%2Fadvanced-python-9-best-practices-to-apply-when-you-define-classes-871a27af658b&user=Yong+Cui&userId=88ff1e2545d0&source=-----871a27af658b----0-----------------clap_footer----741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://betterprogramming.pub/advanced-python-9-best-practices-to-apply-when-you-define-classes-871a27af658b?source=author_recirc-----cbb05bb0c820----0---------------------741d36f9_f897_47b0_9162_352ea2263080-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "3"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F871a27af658b&operation=register&redirect=https%3A%2F%2Fbetterprogramming.pub%2Fadvanced-python-9-best-practices-to-apply-when-you-define-classes-871a27af658b&source=-----cbb05bb0c820----0-----------------bookmark_preview----741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----cbb05bb0c820----1---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://barrmoses.medium.com/?source=author_recirc-----cbb05bb0c820----1---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://barrmoses.medium.com/?source=author_recirc-----cbb05bb0c820----1---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "Barr Moses"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----cbb05bb0c820----1---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----cbb05bb0c820----1---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "Zero-ETL, ChatGPT, And The Future of Data EngineeringThe post-modern data stack is coming. Are we ready?"}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----cbb05bb0c820----1---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "9 min read\u00b7Apr 3"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F71849642ad9c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fzero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c&user=Barr+Moses&userId=2818bac48708&source=-----71849642ad9c----1-----------------clap_footer----741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----cbb05bb0c820----1---------------------741d36f9_f897_47b0_9162_352ea2263080-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "21"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F71849642ad9c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fzero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c&source=-----cbb05bb0c820----1-----------------bookmark_preview----741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----cbb05bb0c820----2---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://medium.com/@mattchapmanmsc?source=author_recirc-----cbb05bb0c820----2---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://medium.com/@mattchapmanmsc?source=author_recirc-----cbb05bb0c820----2---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "Matt Chapman"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----cbb05bb0c820----2---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----cbb05bb0c820----2---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "The Portfolio that Got Me a Data Scientist JobSpoiler alert: It was surprisingly easy (and free) to make"}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----cbb05bb0c820----2---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "\u00b710 min read\u00b7Mar 24"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F513cc821bfe4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4&user=Matt+Chapman&userId=bf7d13fc53db&source=-----513cc821bfe4----2-----------------clap_footer----741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----cbb05bb0c820----2---------------------741d36f9_f897_47b0_9162_352ea2263080-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "42"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F513cc821bfe4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4&source=-----cbb05bb0c820----2-----------------bookmark_preview----741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/effective-data-filtering-in-pandas-using-loc-40eb815455b6?source=author_recirc-----cbb05bb0c820----3---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://yongcui01.medium.com/?source=author_recirc-----cbb05bb0c820----3---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://yongcui01.medium.com/?source=author_recirc-----cbb05bb0c820----3---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "Yong Cui"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----cbb05bb0c820----3---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/effective-data-filtering-in-pandas-using-loc-40eb815455b6?source=author_recirc-----cbb05bb0c820----3---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "Effective Data Filtering in Pandas Using .loc[]Learn multiple ways using .loc[] to filter DataFrames in Pandas"}, {"url": "https://towardsdatascience.com/effective-data-filtering-in-pandas-using-loc-40eb815455b6?source=author_recirc-----cbb05bb0c820----3---------------------741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": "\u00b74 min read\u00b7Feb 25, 2020"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F40eb815455b6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feffective-data-filtering-in-pandas-using-loc-40eb815455b6&user=Yong+Cui&userId=88ff1e2545d0&source=-----40eb815455b6----3-----------------clap_footer----741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/effective-data-filtering-in-pandas-using-loc-40eb815455b6?source=author_recirc-----cbb05bb0c820----3---------------------741d36f9_f897_47b0_9162_352ea2263080-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "2"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F40eb815455b6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feffective-data-filtering-in-pandas-using-loc-40eb815455b6&source=-----cbb05bb0c820----3-----------------bookmark_preview----741d36f9_f897_47b0_9162_352ea2263080-------", "anchor_text": ""}, {"url": "https://yongcui01.medium.com/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "See all from Yong Cui"}, {"url": "https://towardsdatascience.com/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "See all from Towards Data Science"}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://alexcancode.medium.com/?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://alexcancode.medium.com/?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Alexander Nguyen"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Why I Keep Failing Candidates During Google Interviews\u2026They don\u2019t meet the bar."}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "\u00b74 min read\u00b7Apr 13"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Fdc8f865b2c19&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwhy-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19&user=Alexander+Nguyen&userId=a148fd75c2e9&source=-----dc8f865b2c19----0-----------------clap_footer----a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "91"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fdc8f865b2c19&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwhy-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19&source=-----cbb05bb0c820----0-----------------bookmark_preview----a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://medium.com/geekculture/mastering-python-tuples-a-comprehensive-guide-to-efficient-coding-f88eb247a0b6?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://deeptechtalker.medium.com/?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://deeptechtalker.medium.com/?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Abhishek Verma"}, {"url": "https://medium.com/geekculture?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Geek Culture"}, {"url": "https://medium.com/geekculture/mastering-python-tuples-a-comprehensive-guide-to-efficient-coding-f88eb247a0b6?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Mastering Python Tuples: A Comprehensive Guide to Efficient CodingUnleash the Untapped Power of Python Tuples and Revolutionize Your Code Forever!"}, {"url": "https://medium.com/geekculture/mastering-python-tuples-a-comprehensive-guide-to-efficient-coding-f88eb247a0b6?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "\u00b710 min read\u00b7Mar 22"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgeekculture%2Ff88eb247a0b6&operation=register&redirect=https%3A%2F%2Fmedium.com%2Fgeekculture%2Fmastering-python-tuples-a-comprehensive-guide-to-efficient-coding-f88eb247a0b6&user=Abhishek+Verma&userId=18373f6fd34a&source=-----f88eb247a0b6----1-----------------clap_footer----a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://medium.com/geekculture/mastering-python-tuples-a-comprehensive-guide-to-efficient-coding-f88eb247a0b6?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "8"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff88eb247a0b6&operation=register&redirect=https%3A%2F%2Fmedium.com%2Fgeekculture%2Fmastering-python-tuples-a-comprehensive-guide-to-efficient-coding-f88eb247a0b6&source=-----cbb05bb0c820----1-----------------bookmark_preview----a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://medium.com/geekculture/mastering-python-dictionaries-tricks-and-techniques-e165cc611963?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://deeptechtalker.medium.com/?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://deeptechtalker.medium.com/?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Abhishek Verma"}, {"url": "https://medium.com/geekculture?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Geek Culture"}, {"url": "https://medium.com/geekculture/mastering-python-dictionaries-tricks-and-techniques-e165cc611963?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Mastering Python Dictionaries: Tricks and TechniquesDo you what OrderedDict, DefaultDict and Counter is?"}, {"url": "https://medium.com/geekculture/mastering-python-dictionaries-tricks-and-techniques-e165cc611963?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "\u00b715 min read\u00b7Feb 22"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgeekculture%2Fe165cc611963&operation=register&redirect=https%3A%2F%2Fmedium.com%2Fgeekculture%2Fmastering-python-dictionaries-tricks-and-techniques-e165cc611963&user=Abhishek+Verma&userId=18373f6fd34a&source=-----e165cc611963----0-----------------clap_footer----a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://medium.com/geekculture/mastering-python-dictionaries-tricks-and-techniques-e165cc611963?source=read_next_recirc-----cbb05bb0c820----0---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe165cc611963&operation=register&redirect=https%3A%2F%2Fmedium.com%2Fgeekculture%2Fmastering-python-dictionaries-tricks-and-techniques-e165cc611963&source=-----cbb05bb0c820----0-----------------bookmark_preview----a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://medium.com/@arthurmello_?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://medium.com/@arthurmello_?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Arthur Mello"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Exploratory Data Analysis: The Ultimate WorkflowExplore the true potential of your data with Python"}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "\u00b716 min read\u00b7Apr 20"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Fa82b1d21f747&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fexploratory-data-analysis-the-ultimate-workflow-a82b1d21f747&user=Arthur+Mello&userId=9d32d5e0ac40&source=-----a82b1d21f747----1-----------------clap_footer----a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----cbb05bb0c820----1---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "5"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa82b1d21f747&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fexploratory-data-analysis-the-ultimate-workflow-a82b1d21f747&source=-----cbb05bb0c820----1-----------------bookmark_preview----a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----cbb05bb0c820----2---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://thepycoach.com/?source=read_next_recirc-----cbb05bb0c820----2---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://thepycoach.com/?source=read_next_recirc-----cbb05bb0c820----2---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "The PyCoach"}, {"url": "https://artificialcorner.com/?source=read_next_recirc-----cbb05bb0c820----2---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Artificial Corner"}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----cbb05bb0c820----2---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "You\u2019re Using ChatGPT Wrong! Here\u2019s How to Be Ahead of 99% of ChatGPT UsersMaster ChatGPT by learning prompt engineering."}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----cbb05bb0c820----2---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "\u00b77 min read\u00b7Mar 17"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fartificial-corner%2F886a50dabc54&operation=register&redirect=https%3A%2F%2Fartificialcorner.com%2Fyoure-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54&user=The+PyCoach&userId=fb44e21903f3&source=-----886a50dabc54----2-----------------clap_footer----a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----cbb05bb0c820----2---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "276"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F886a50dabc54&operation=register&redirect=https%3A%2F%2Fartificialcorner.com%2Fyoure-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54&source=-----cbb05bb0c820----2-----------------bookmark_preview----a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://betterprogramming.pub/9-python-dataclass-best-practices-to-improve-the-development-process-8a68df446580?source=read_next_recirc-----cbb05bb0c820----3---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://dr-bruce-cottman.medium.com/?source=read_next_recirc-----cbb05bb0c820----3---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://dr-bruce-cottman.medium.com/?source=read_next_recirc-----cbb05bb0c820----3---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Bruce H. Cottman, Ph.D."}, {"url": "https://betterprogramming.pub/?source=read_next_recirc-----cbb05bb0c820----3---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "Better Programming"}, {"url": "https://betterprogramming.pub/9-python-dataclass-best-practices-to-improve-the-development-process-8a68df446580?source=read_next_recirc-----cbb05bb0c820----3---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "9 Python @dataclass Best Practices To Improve the Development ProcessAn exploration of the benefits of @dataclass"}, {"url": "https://betterprogramming.pub/9-python-dataclass-best-practices-to-improve-the-development-process-8a68df446580?source=read_next_recirc-----cbb05bb0c820----3---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": "\u00b711 min read\u00b7Jan 2"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fbetter-programming%2F8a68df446580&operation=register&redirect=https%3A%2F%2Fbetterprogramming.pub%2F9-python-dataclass-best-practices-to-improve-the-development-process-8a68df446580&user=Bruce+H.+Cottman%2C+Ph.D.&userId=c7bcf6635d7d&source=-----8a68df446580----3-----------------clap_footer----a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://betterprogramming.pub/9-python-dataclass-best-practices-to-improve-the-development-process-8a68df446580?source=read_next_recirc-----cbb05bb0c820----3---------------------a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "6"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8a68df446580&operation=register&redirect=https%3A%2F%2Fbetterprogramming.pub%2F9-python-dataclass-best-practices-to-improve-the-development-process-8a68df446580&source=-----cbb05bb0c820----3-----------------bookmark_preview----a39be3a5_bf38_4f6e_98c2_bddf0e78f087-------", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "See more recommendations"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=post_page-----cbb05bb0c820--------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}