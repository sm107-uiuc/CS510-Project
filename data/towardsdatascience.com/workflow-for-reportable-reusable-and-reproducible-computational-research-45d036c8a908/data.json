{"url": "https://towardsdatascience.com/workflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908", "time": 1683000508.221638, "path": "towardsdatascience.com/workflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908/", "webpage": {"metadata": {"title": "How to organize code in Python if you are a scientist | by Victor Serban | Towards Data Science", "h1": "How to organize code in Python if you are a scientist", "description": "If you work in computational research or data science and you don\u2019t come from a Computer Science background, you probably generated amazing pieces of scientific knowledge, but the code you wrote to\u2026"}, "outgoing_paragraph_urls": [{"url": "https://packaging.python.org/tutorials/packaging-projects/", "anchor_text": "Python Packaging guide", "paragraph_index": 38}, {"url": "https://medium.com/@joel.barmettler/how-to-upload-your-python-package-to-pypi-65edc5fe9c56", "anchor_text": "tutorial", "paragraph_index": 38}, {"url": "https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html", "anchor_text": "conda environment", "paragraph_index": 38}, {"url": "https://github.com/Anaconda-Platform/nb_conda_kernels", "anchor_text": "nb_conda_kernels", "paragraph_index": 38}], "all_paragraphs": ["If you work in computational research or data science and you don\u2019t come from a Computer Science background, you probably generated amazing pieces of scientific knowledge, but the code you wrote to do it is not quite up to the academic standard. You might need a week yourself to make your scripts do the same things again. Even if you are an experienced coder, you might find it hard to do both the job of a developer and that of a scientist.", "I have faced this challenge myself as a research student. Although I took classes in Software Engineering, I found it hard to divert from the research questions I was handed to think about how I can create useful tools out of my code. After some trial and error, I designed a recipe to help me make the transition seamlessly and now I use it in my exploratory work as a Data Scientist.", "In this article, I share the way I organize my coding workflow, give you some tips and tricks and show you the tool stack I use. The goal is to make the transition from experimentation to tool development easier.", "For research to be reproducible, you need to log all the stuff you are doing. This might be a burden if you just want to experiment as fast as possible and do ad-hoc analysis.", "The tool I use for experimentation is Jupyter Notebook. The interactive programming interface allows you to check what your code does instantaneously, so you can build algorithms step by step. Moreover, you can use Markdown cells to write down your thinking and conclusions, along with the code. This makes it really easy to log and report everything you do.", "You can find plenty of Jupyter tutorials on the web. I recommend getting familiar with the Keyboard Shortcuts (they are described under the Help menu of the editor), as they will accelerate your work significantly.", "In digital experiments, looping through experimental variables is really simple. After all, the power of computers comes from their capacity to do things over and over again.", "I structure the formal experiments as in the code below.", "I keep all the important variables for the current experiment in lists at the beginning of the file for transparency.", "A thing to consider here is what to do with the output of each iteration: should you process it into a visualization, compute a metric or store it? The application and desired form of reporting dictates this choice.", "A Notebook file should be created for each significant piece of experimentation, and it is up to you to decide what that means. I save an experiment with a relevant title and a versioning number for each time I repeat it using different parameters or a new way of doing things.", "This is different from version control in that I keep all the records of my work in place, not only the latest version of it. Moreover, I put all the experiments in the same folder regardless of the project they are assigned to.", "Although this creates a huge pile of files, you can easily keep the relevant ones on top through sorting by the date modified. Centralization makes it easy to find specific files by simple search, rather than walking through a hierarchy of folders you don\u2019t remember the logic of.", "The greatest advantage of keeping things together is that you can implement cross referencing within and between notebooks. This is simply done with html links in Markdown.", "To create a reference to a section of your Notebook, add the following code in a Markdown cell before the referenced part:", "Now, in the place where you want your link to the reference to appear write one of the following:", "Now you can jump straight to the referenced section in the old experiment with one click.", "Reports should be nothing else but summaries of the best versions of your experiments and accompanying comments. Fast lookup through your records is key to reportability of your work and it is a matter of clicking your way through notebooks if the cross references are set in place.", "Sometimes you need to save some data results, either for reporting, sharing or use in other experiments. The file format is up to you and the situation. For this cases I save the data in a data folder within the experiments folder and name them with something that makes clear the experiment they originated from and the version number of that experiment.", "To make things tractable I keep a log in a spreadsheet where I list the data inputs and outputs of all my experiments.", "You are probably familiar with writing functions within a script to make the code neat, enhance understanding and most importantly to DRY (Don\u2019t Repeat Yourself). As the experiments evolve, so do your functions, encapsulating more and more logic and other functions within them.", "If you followed my approach this far, you started separating your experiments into multiple notebook files, one for each experiment and version of it. When the baggage (of functions) you carry on from one experiment to another grows considerably, it is time for you to start thinking about the reusability of your code. Wouldn\u2019t it be nice if you could just import the functions that passed the test of time smoothly into your code as you do with any other Python library?", "You should simply start by saving functions within .py files together with your experiments. You can edit those files in your favourite IDE (I use VS Code). Then you can just use import statements on the file names to get all that functionality back into your experiments:", "As your functions become more complex and flexible, they will need a lot of inputs which become hard to manage. Luckily Python facilitates setting up default values of function arguments. Having defaults speeds up the experimentation process considerably, hiding away unnecessary complexity. It also helps someone new to your functions get started with them right away.", "Sometimes you will come across situations where the default needs to be defined as a function of other parameters. In this case, the strategy I use is to set the default to None and immediately check in the body of the function whether the argument to be set was defined at call. If it was not, then I assign a value to it accordingly. See the example below.", "When functions become so large that they encapsulate entire algorithms with lots of parameters to tune, the simple interface of a function might not be enough. In this situation, I prefer the flexibility of the object oriented approach.", "With algorithms wrapped as objects you can change parameters on the go by defining them as attributes of the class. You can set up very specific configurations and only make tiny adjustments to the algorithm as needed.", "Classes can also be used to build data structures specific to your application and encapsulate the functionality associated with them. There is a whole science of design patterns using OOP.", "Now that your reusable functions are in modules separate from the experiments code, keeping things tractable and reproducible might become challenging. You will probably want to modify the reusable bits of your code to make them better in time.", "This is the moment where reproducibility and reusability come into conflict. If you want to reproduce your two year old experiment using your super evolved algorithm you might end up with totally different results. Therefore, you want to keep the exact version of the modules you used in experiments together with the notebook files in which you used them (unless you want to cover up some stupid thing you\u2019ve done in the past). If you save a numbered file for each modification you make and keep that along with the experiments for the record, things get really entangled.", "Enter Version Control. Software Engineers make things reproducible by versioning and using environments to keep things compatible with one another. Exactly the same idea can be applied to our experiments. You can start version controlling your functions and classes as you improve them, and at the same time maintain a reference to the corresponding versions in the experiment files.", "This is how I do it. I sort out those .py files into project folders named <project>_func, within which I set up repositories and start version controlling with git. If you didn\u2019t use git before, go on and find a git tutorial, then come back.", "Whenever I create a new experiment file, I make sure I\u2019ve committed the code version I am using and write the following lines in a cell at the top of the experiment file:", "Then in the experiment, I import my functions as needed. For example, let\u2019s say I moved to France recently and now I write all my reports in French. Importing and running the latest version of this function", "The problem is that I have an old experiment script that generated a report in English, and I would like to rerun it. Luckily, I referenced the commit id at the top of the experiment notebook as shown earlier:", "The output of the same code from above within this context is:", "Voil\u00e0! The magic of Version Control and well written records.", "Eventually, you will want to pack the .py files together in proper Python packages. Then you will be able to share them with other people and install them in the environments of the Ipython kernels you use in experiment notebooks.", "You can follow the official Python Packaging guide to learn how to package code and this tutorial to upload it on PyPi. To use a specific version of your package in Jupyter Notebook, I recommend you to install it in a conda environment. Then you can run the Jupyter kernel in that environment if you follow the installation instructions of the nb_conda_kernels extension.", "As you add functionality to your package, you can adopt the test-driven development philosophy. It states that you should write unit tests before you write the bit of code which they test. In this way you can make the task you want to achieve from your package concrete.", "You probably play around with your modules in the experiment files already. You can design tests in your Notebooks and just paste their code into the formal structure of unit tests. For my packages, I use the pytest framework.", "When you reach this point, you are no longer just an experimentalist. You are also a developer and you need to share, maintain and improve the tools you created. Have fun coding!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Full Stack Data Scientist, London. Graduate from University of Cambridge"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F45d036c8a908&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----45d036c8a908--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----45d036c8a908--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@serban.victor?source=post_page-----45d036c8a908--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@serban.victor?source=post_page-----45d036c8a908--------------------------------", "anchor_text": "Victor Serban"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F365b0350f52f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&user=Victor+Serban&userId=365b0350f52f&source=post_page-365b0350f52f----45d036c8a908---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F45d036c8a908&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F45d036c8a908&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://packaging.python.org/tutorials/packaging-projects/", "anchor_text": "Python Packaging guide"}, {"url": "https://medium.com/@joel.barmettler/how-to-upload-your-python-package-to-pypi-65edc5fe9c56", "anchor_text": "tutorial"}, {"url": "https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html", "anchor_text": "conda environment"}, {"url": "https://github.com/Anaconda-Platform/nb_conda_kernels", "anchor_text": "nb_conda_kernels"}, {"url": "https://medium.com/tag/python?source=post_page-----45d036c8a908---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/jupyter-notebook?source=post_page-----45d036c8a908---------------jupyter_notebook-----------------", "anchor_text": "Jupyter Notebook"}, {"url": "https://medium.com/tag/git?source=post_page-----45d036c8a908---------------git-----------------", "anchor_text": "Git"}, {"url": "https://medium.com/tag/research?source=post_page-----45d036c8a908---------------research-----------------", "anchor_text": "Research"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----45d036c8a908---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F45d036c8a908&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&user=Victor+Serban&userId=365b0350f52f&source=-----45d036c8a908---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F45d036c8a908&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&user=Victor+Serban&userId=365b0350f52f&source=-----45d036c8a908---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F45d036c8a908&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----45d036c8a908--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F45d036c8a908&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----45d036c8a908---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----45d036c8a908--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----45d036c8a908--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----45d036c8a908--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----45d036c8a908--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----45d036c8a908--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----45d036c8a908--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----45d036c8a908--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----45d036c8a908--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@serban.victor?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@serban.victor?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Victor Serban"}, {"url": "https://medium.com/@serban.victor/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "125 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F365b0350f52f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&user=Victor+Serban&userId=365b0350f52f&source=post_page-365b0350f52f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F254019f118bd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fworkflow-for-reportable-reusable-and-reproducible-computational-research-45d036c8a908&newsletterV3=365b0350f52f&newsletterV3Id=254019f118bd&user=Victor+Serban&userId=365b0350f52f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}