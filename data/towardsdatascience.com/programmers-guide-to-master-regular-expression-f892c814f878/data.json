{"url": "https://towardsdatascience.com/programmers-guide-to-master-regular-expression-f892c814f878", "time": 1683011614.3718882, "path": "towardsdatascience.com/programmers-guide-to-master-regular-expression-f892c814f878/", "webpage": {"metadata": {"title": "The Only Guide You Need To Master Regular Expression 1 | by Sara A. Metwalli | Towards Data Science", "h1": "The Only Guide You Need To Master Regular Expression 1", "description": "Regular Expression or (Regex) is one of the most powerful, flexible, and efficient text processing approaches. Regex has its own terminologies, conditions, and syntax; it is, in a sense, a mini\u2026"}, "outgoing_paragraph_urls": [{"url": "https://regexr.com/", "anchor_text": "regexr.com", "paragraph_index": 41}, {"url": "http://bit.ly/2CvFAw6", "anchor_text": "bit.ly/2CvFAw6", "paragraph_index": 43}], "all_paragraphs": ["Regular Expression or (Regex) is one of the most powerful, flexible, and efficient text processing approaches. Regex has its own terminologies, conditions, and syntax; it is, in a sense, a mini programming language. Regex can be used to add, remove, isolate, and manipulate all kinds of text and data. It could be used as a simple text editor command, e.g., search and replace, or as it\u2019s own powerful text-processing language. Because of that, Regex has so many applications in technology today, such as: Extract Useful Information With Web Crawlers, Data Scraping and Web Scraping, Data Wrangling, and machine learning \u2014 namely, natural language process and speech recognition.", "Regex is not a programming language-specific application; in fact, it can be used in all programming languages today. Programming languages give support to the usage of Reges, but all the magic and strength comes from the Regex itself.", "Using Regex can save the programmer a precious time that can be wasted on mundane tasks. Tasks such as looking for emails in a folder of files, removing repetition from a bunch of text files, analyzing the syntax of a specific language, highlighting some context in a file, and much much more applications. For those who never worked with Regex before, it may sound magical, yet intimidating! Reading a Regex for the first time maybe \u2014 not, perhaps, definitely \u2014 confusing, and complicated. I mean, look at this example:", "I promise you that by the end of this article, you\u2019ll quickly understand any Regex you come across, including the one above.", "Nevertheless, seeing a new language for the first time is always confusing. Still, when you get around to learning the small blocks that form the language, then it doesn\u2019t look complicated or confusing anymore.", "So, let\u2019s get into deciphering Regexes\u2026", "Full Regex is often composed of two basic types of characters: metacharacters and literals. Metacharacters are the special characters the give Regex its power, while literals are all other standard text characters. What sets Regex apart from file name patterns is that file name patterns provide limited options for limited applications. In contrast, Regex offers a rich selection of metacharacters that allow for more advanced applications.", "One way of thinking about metacharacters and literals is since Regex is its own language, we can say that literals are the words of the language, and metacharacter is its grammar. Words and grammar can be sued together under a specific set of rules to form an infinite number of expressions that are capable of expressing any possible pattern you can think of.", "Do you realize the power of Regex, yet?", "First, we will cover the basic concepts of Regex, and then we will take some examples, we will see how to construct a Regex and how can we use Python to extract matches.", "There are three basic types of metacharacters, each used to represent an aspect of the pattern we are searching for. The three types are Metacahrcters class, quantifiers, and position metacharacters.", "These types of metacharacters are used to match single characters, and they all start with \\ to distinguish them from literals. Here is a table of the six possible Metacahracters classes:", "These types of metacharacters are used to indicate the number of occurrences of a character in the pattern we are trying to match. Say we want to match both \u201cJessy\u201d and \u201cJesy,\u201d we would use one of the quantifiers to indicate that both options are acceptable. There are four types of quantifiers:", "Position metacharacters are used to indicate the location of the character we are looking for. Is it at the beginning of the text, at the end of the line, or a word? To get this specific, we use position metacharacters.", "That\u2019s just what I call them \u2014 definitely not the official name \ud83d\ude04 \u2014 these are some extra metacharacters that are used to join other metacharacters and literals.", "Literals are all words and characters that is not a metacharacter. For example, \u201cFrom,\u201d \u201cTo,\u201d \u201cHello:\u201d all these are literals. A problem arises if I want to match one of the metacharacters, for example, say I want to match * or ^ characters, would should I do?", "In this case, we use the escape character to Regex to explicitly indicate we want to match that character. So we type \\^ or \\* instead of just ^ and *.", "To use Regex in Python we need to use a library called re. This library is part of the Python built-in libraries, which means you don\u2019t need to install it in order to use it. You just import it and get matching. This library contains many functions that allow us to use Regex efficiently. In this article, we will discuss the basic five functions: compile, search, match, findall, and sub.", "Regular expressions are basically patterns that we define and ask the code to look for. In Python, these expressions are handles as strings or raw strings. The difference between usual string and raw strings is, in raw strings escape characters are not processed, i.e., they will be printed as is. For Example:", "In Python, you can either use strings to represent expressions or you can use the compile function to compute a regular expression pattern into a regular expression object. If you\u2019re planning on using the same pattern multiple times in the code, it\u2019s better to have it as a compiled object; because storing the pattern as a regular expression object for reuse is more efficient than saving it as a string.", "We can use the matchfunction to search for a pattern within a given string. The method returns a match object if the search is successful. If not, it returns None.", "The search function looks for the first occurrence of a given pattern as it scans over a string. If a match is found, it will be returned as a match object, otherwise, it will return None.", "The match function checks for a match only at the beginning of the string, whereas the search function checks for a match at any location in the string.", "The findall function searches a string and finds all the possible matches and returns them as a list of strings. Each returned string represents one match.", "The sub is the substitute function. It takes an original string and a pattern and returns the string obtained by replacing the leftmost non-overlapping occurrences of pattern in that string by the replacement repl. If the pattern is not found, then the string is returned without a change.", "The subn is similar to sub. However, it returns a tuple containing the new string value and the number of replacements that performed on the original string.", "Notice how all these methods had an additional attribute called flag?", "This attribute is used to finetune the searching and matching of patterns, these flags are:", "Okay, that was a lot, let\u2019s take some examples to help us clarify the usage of the different metacharacters.", "We will start small and then build up to more complex examples. \ud83d\ude09", "Create a Regex that matches any word with any length that starts with an uppercase letter. For example, in the sentence:", "The sidebar includes a Cheatsheet, full Reference, and Help. You can also save & Share with the Community, and view patterns you create or favorite in My Patterns.", "We want to match all words starting with uppercase letters.", "Python code to match the pattern:", "Create a Regex to match phone numbers in the format xxxx-xxxx-xxx. For example, in this sentence:", "Python code to match the pattern:", "We want to create a Regex to match any date in the format DD.MM.YYYY or DD-MM-YYYY or DD/MM/YYYY. Also, we want the years to be only in the 19s or 20s.", "We want to match all three dates in that sentence.", "Python code to match the pattern:", "That was fun \u2014 I hope!.", "Regex is a huge topic, and we can spend hours and hours talking about it, that\u2019s why I decided to divide this into two articles. In this one, I covered the basics, and in the next one \u2014 coming next week \u2014 I will go into more advanced forms, and we will discuss how to craft efficient regular expression as well as more re methods in Python\u2026", "[2] A useful tool to practice Regex is regexr.com.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Ph.D. candidate working on Quantum Computing. Traveler, writing lover, science enthusiast, and CS instructor. Get in touch with me bit.ly/2CvFAw6"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff892c814f878&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f892c814f878--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f892c814f878--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://saraametwalli.medium.com/?source=post_page-----f892c814f878--------------------------------", "anchor_text": ""}, {"url": "https://saraametwalli.medium.com/?source=post_page-----f892c814f878--------------------------------", "anchor_text": "Sara A. Metwalli"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7938431b336a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&user=Sara+A.+Metwalli&userId=7938431b336a&source=post_page-7938431b336a----f892c814f878---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff892c814f878&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff892c814f878&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@ffstop?utm_source=medium&utm_medium=referral", "anchor_text": "Fotis Fotopoulos"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.canva.com/", "anchor_text": "Canva"}, {"url": "https://regexr.com/", "anchor_text": "regexr.com"}, {"url": "https://medium.com/tag/programming?source=post_page-----f892c814f878---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-development?source=post_page-----f892c814f878---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----f892c814f878---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----f892c814f878---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/tag/data-science?source=post_page-----f892c814f878---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff892c814f878&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&user=Sara+A.+Metwalli&userId=7938431b336a&source=-----f892c814f878---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff892c814f878&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&user=Sara+A.+Metwalli&userId=7938431b336a&source=-----f892c814f878---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff892c814f878&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f892c814f878--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff892c814f878&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f892c814f878---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f892c814f878--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f892c814f878--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f892c814f878--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f892c814f878--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f892c814f878--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f892c814f878--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f892c814f878--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f892c814f878--------------------------------", "anchor_text": ""}, {"url": "https://saraametwalli.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://saraametwalli.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sara A. Metwalli"}, {"url": "https://saraametwalli.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "7.7K Followers"}, {"url": "http://bit.ly/2CvFAw6", "anchor_text": "bit.ly/2CvFAw6"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7938431b336a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&user=Sara+A.+Metwalli&userId=7938431b336a&source=post_page-7938431b336a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ffe98bb54630a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fprogrammers-guide-to-master-regular-expression-f892c814f878&newsletterV3=7938431b336a&newsletterV3Id=fe98bb54630a&user=Sara+A.+Metwalli&userId=7938431b336a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}