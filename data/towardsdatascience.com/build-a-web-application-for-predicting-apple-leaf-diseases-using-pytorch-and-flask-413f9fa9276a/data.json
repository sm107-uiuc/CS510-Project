{"url": "https://towardsdatascience.com/build-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a", "time": 1683009916.586955, "path": "towardsdatascience.com/build-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a/", "webpage": {"metadata": {"title": "Machine Learning Web App with Python | Towards Data Science", "h1": "Build a Web Application for Predicting Apple Leaf Diseases Using PyTorch and Flask", "description": "The article will show you on how to build a Machine Learning Web Application using PyTorch and Flask."}, "outgoing_paragraph_urls": [{"url": "https://github.com/spMohanty/PlantVillage-Dataset/tree/master/raw/color", "anchor_text": "here", "paragraph_index": 6}, {"url": "http://app.py", "anchor_text": "app.py", "paragraph_index": 30}, {"url": "http://127.0.0.1:5000/", "anchor_text": "http://127.0.0.1:5000/", "paragraph_index": 32}, {"url": "https://github.com/khalidmeister/apple-leaf-disease-prediction", "anchor_text": "here", "paragraph_index": 40}], "all_paragraphs": ["Deep Learning is a great model for handling unstructured data, especially on images. The progress of this field is really fast, and one of the progress is something called Transfer Learning.", "Transfer Learning is a method to train the neural network that has already trained on a different dataset, so we don\u2019t have to train it from scratch because it could take several days or weeks to train them.", "If we use the transfer learning to our dataset, it only takes several hours to train because we only train the final layer. Therefore, we can use it to train on the other dataset with already pre-trained model and its given architecture.", "To make the model is useful to use, we have to deploy them, in example by building a web app that makes it more user friendly. Thankfully, we can do that using PyTorch to build a deep learning model and Flask to build a web application.", "In this article, I will show you on how to build a web application for image classification on an Apple leaf to classify whether is it healthy or not and if it doesn\u2019t, which disease the leaf has. To build that, we can use transfer learning using PyTorch, and also how to build a simple web application using Flask. Here is the preview of the web application,", "The first task that we have to do is to build an image classifier. It consists of several steps to do, they are,", "For the dataset, we can use the PlantVillage datasets to retrieve our dataset to use. You can download the dataset from this GitHub repository here.", "Right after we download the data, we can prepare the dataset first. First, we have to structure our dataset into separate folders.", "If we see the dataset that we have downloaded, we can see that there are so many images from different plants. In this case, we only pick the plant that relates to Apple.", "So, we take the folder that consists of Apple leaf images to it.", "Then, we divide each folder into 3 different folders, they are train, val, and test. Then, we divide each group by 80% for train data (divide them for train and validation with 90:10 proportion) and 20% for test data. The amount of each folder will look like this,", "Finally, the folder will have a structure will look like this,", "After we have a folder structure like above, we can build the model for image classification. Before we can build that, we have to import the dataset, and also we have to transform the data, so it has the same representation that gets into the model. The code will look like this,", "As we can see above, there are several steps on how to prepare the dataset. First, we have to transform the dataset. It is a must because the model cannot process the data that don\u2019t have the required size. Therefore, we have to resize it and also crop the dataset with the same dimension with the first layer of the model.", "Then, after we transform the image, we can load it to our code using ImageFolder method to do it. Also, we apply the transform to the dataset to it. We can train the model by using all of the training dataset, but it will take a lot of time. Therefore, we have to create batches to reduce the computation time. To make sure that the batches are random, we have to set the shuffle parameter to true.", "Finally, we retrieve the number of the images and the class names, and also we can enable the GPU using the torch.device function. After we do all the steps, we can move into the modelling section.", "Because we build the model based on the pre-trained model, the first thing we have to do is to download the model. In this case, I only use VGG-16, ResNet-18, and AlexNet architecture, and then we compare the model which one is the best and make sure that you set the pretrained parameter to true.", "Because we use that, we have to set the parameters to not calculate the gradient except the final layer which is the fully-connected layer. Then, we can change the final layer\u2019s output neurons based on the number of class on the dataset. And then, we can train the model.", "Make sure that you know where the location of the final layer because each model has a different method on how to access it. With ResNet, we can access the fc index to access the final layer, but on the VGG and AlexNet, we access it by index classifier and index number 6.", "You can see the outline of each model by calling it on the block code, and here is the code and the output,", "When we train the model, it occurs on several epochs. Epochs describe how many iterations to train the model. On each epoch, there are several steps to train the model. First, the model feedforwards the image, and get the best output. Then, it compares the output and the true label and calculates the loss. After that, it calculates the gradient on each parameter, and then update each weight based on the amount of gradient of the model. It repeats until it reaches the final epoch, and we will get the best model from all epochs.", "Here is the best result on each model,", "To determine which model to use, we have to consider based on our needs. Of course, we need a model with great accuracy to it. But if we want to deploy to the web application, make sure that your model has a small size, so we can deploy that on GitHub and Heroku.", "Based on those results, we conclude that the AlexNet is the best and the fastest model to classify the disease on the apple in 7 minutes and 40 seconds. Also, we can see that the VGG-16 model is the slowest and the lowest accuracy score. The ResNet-18 is in the middle position. It\u2019s not slower than the AlexNet, and it\u2019s also has a great accuracy than VGG-16. But, when we deploy those models, the ResNet-18 has the smallest size. Therefore, we will use the ResNet-18 model as our classifier.", "If we want to test the model, we can call the dataloader on test dataset to test whether the model can predict the image accurately. The code will look like this,", "After that, we have the output that looks like this,", "So, if we are confident with our new model, we can save it. To do that, we can use this code below,", "It will save your model to .pth format. If we want to use it in the other session, we can use this command,", "And that\u2019s how to build an image classifier using PyTorch!", "Right after we create the model, we can build the web application using Flask. In general, we will work on two things. They are working on the server and create the page to display that.", "First, we have to build a file called app.py. It will handle the website, and it includes showing the page, and also it will process the input. In this case, we have an image input. The code inside of it will look like this,", "Let me explain each line of it. Line 1\u20138 imports the libraries that we need, including Flask, PyTorch, string, and many more. Line 10 declares a Flask object. Line 12\u201336 do the modelling task with PyTorch. Line 38\u201343 declares a dictionary that displays the prediction result. Line 46\u201358 is the main process of our web app. Line 60\u201361 to make sure our app will run by using this command below,", "Some of you are probably new to the Flask. Let me explain to you how it works. Line 46 is to set our route on the website. In this case, on our website, if we want to show the main page, we will go to that root like http://127.0.0.1:5000/ where the last character of the URL describes our route.", "Inside of it also describe the GET and POST methods. They describe on how we interact with the website. If we use the GET method, we only request to the server and not send any file there. The POST method will send files to the server, and also request the result from it.", "On line 47, it declares a function called upload_file. It will work on our data. If we open the web at first, it will use the GET method to retrieve the web page only. After that, we give an image input and then upload them. Because we upload the data, it will use the POST method to process our data where it will predict which disease that exists on the leaf image. After it\u2019s done, we receive a new page that shows what disease of the leaf has and the descriptions of it.", "Now, we create the web pages that describe the main page and the prediction result page. We create three files they are layout.html, index.html, and result.html. Wait, we build two pages, but why we build another page?", "There\u2019s a concept on Flask called templates. In short, we don\u2019t have to build a full web page. Instead, we build the additional page as the layout to all pages, so we don\u2019t have to code a full HTML to it. Let me show you the layout.html file,", "As we can see, the web page doesn\u2019t have any content at all, except there is a {% block content %} command inside our body tag. It\u2019s called a block, and it will contain the element from another file. Let me show you the index and the result page,", "As we can see from both files, we don\u2019t code the full web page. Instead, we call {% extends \u201clayout.html\u201d %} as our template for the website. Below of it, there is the block section to fill that. That\u2019s why we don\u2019t have to build from scratch, and it makes our time shorter than before.", "Transfer Learning is a useful concept to implement our own classifier without training them from scratch. In this article, I have already shown to you on how we can build it using transfer learning concept on PyTorch with different architectures. Also, I\u2019ve already shown to you on how to build a web app using Flask. Make sure that your model doesn\u2019t consume a huge size of storage, but still has a great accuracy to it, so you can deploy the model without any problem.", "I hope it will be useful to you and thank you for reading my article. If you want to see the code, you can look at my GitHub repo here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F413f9fa9276a&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----413f9fa9276a--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----413f9fa9276a--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@irfanalghani11?source=post_page-----413f9fa9276a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@irfanalghani11?source=post_page-----413f9fa9276a--------------------------------", "anchor_text": "Irfan Alghani Khalid"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F44601cf05927&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&user=Irfan+Alghani+Khalid&userId=44601cf05927&source=post_page-44601cf05927----413f9fa9276a---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F413f9fa9276a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F413f9fa9276a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@josefin?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Josefin"}, {"url": "https://towardsdatascience.com/s/photos/leaf?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://github.com/spMohanty/PlantVillage-Dataset/tree/master/raw/color", "anchor_text": "here"}, {"url": "http://app.py", "anchor_text": "app.py"}, {"url": "http://127.0.0.1:5000/", "anchor_text": "http://127.0.0.1:5000/"}, {"url": "http://127.0.0.1:5000/", "anchor_text": "http://127.0.0.1:5000/"}, {"url": "https://github.com/khalidmeister/apple-leaf-disease-prediction", "anchor_text": "here"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----413f9fa9276a---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----413f9fa9276a---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----413f9fa9276a---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----413f9fa9276a---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/editors-pick?source=post_page-----413f9fa9276a---------------editors_pick-----------------", "anchor_text": "Editors Pick"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F413f9fa9276a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&user=Irfan+Alghani+Khalid&userId=44601cf05927&source=-----413f9fa9276a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F413f9fa9276a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&user=Irfan+Alghani+Khalid&userId=44601cf05927&source=-----413f9fa9276a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F413f9fa9276a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----413f9fa9276a--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F413f9fa9276a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----413f9fa9276a---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----413f9fa9276a--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----413f9fa9276a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----413f9fa9276a--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----413f9fa9276a--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----413f9fa9276a--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----413f9fa9276a--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----413f9fa9276a--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----413f9fa9276a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@irfanalghani11?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@irfanalghani11?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Irfan Alghani Khalid"}, {"url": "https://medium.com/@irfanalghani11/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.2K Followers"}, {"url": "https://www.linkedin.com/in/alghaniirfan/", "anchor_text": "https://www.linkedin.com/in/alghaniirfan/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F44601cf05927&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&user=Irfan+Alghani+Khalid&userId=44601cf05927&source=post_page-44601cf05927--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F309de219c913&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-web-application-for-predicting-apple-leaf-diseases-using-pytorch-and-flask-413f9fa9276a&newsletterV3=44601cf05927&newsletterV3Id=309de219c913&user=Irfan+Alghani+Khalid&userId=44601cf05927&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}