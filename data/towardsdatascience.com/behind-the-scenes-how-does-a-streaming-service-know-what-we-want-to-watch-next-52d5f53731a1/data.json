{"url": "https://towardsdatascience.com/behind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1", "time": 1683009851.982432, "path": "towardsdatascience.com/behind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1/", "webpage": {"metadata": {"title": "Behind the scenes \u2014 How does a streaming service know what we want to watch next? | by Pritha Saha | Towards Data Science", "h1": "Behind the scenes \u2014 How does a streaming service know what we want to watch next?", "description": "Netflix, a company that started in 1997 as a DVD-by-mail-rental, evolved into a video streaming service within a decade and is now an inseparable part of our lives. It ensures customer stickiness by\u2026"}, "outgoing_paragraph_urls": [{"url": "https://grouplens.org/datasets/movielens/", "anchor_text": "MovieLens 1M data", "paragraph_index": 4}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfVectorizer.html", "anchor_text": "TfidVectorizer", "paragraph_index": 9}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise.cosine_similarity.html", "anchor_text": "cosine", "paragraph_index": 10}, {"url": "http://surpriselib.com/", "anchor_text": "Surprise package", "paragraph_index": 47}, {"url": "https://github.com/pritha21/Concepts/tree/master/Recommender_Systems", "anchor_text": "link", "paragraph_index": 48}, {"url": "https://datajobs.com/data-science-repo/Recommender-Systems-[Netflix].pdf", "anchor_text": "Matrix Factorisation techniques for recommender systems", "paragraph_index": 53}], "all_paragraphs": ["Netflix, a company that started in 1997 as a DVD-by-mail-rental, evolved into a video streaming service within a decade and is now an inseparable part of our lives. It ensures customer stickiness by enabling the discovery of one binge-worthy title after another, powered by a recommendation engine in the backend. In fact the homepage\u2019s \u201cPopular on Netflix\u201d is not a definitive ranking of the universally popular titles, but a representation of popular titles among similar users, based on viewing history. The recommendation system is an important contributor to Netflix\u2019s revenue, powering about 80% hours streamed on the platform.", "The platform analyses how viewers click, search, watch, play and pause to generate implicit ratings, which lead to personalising the titles that appear on the homepage. This is a more scalable approach than relying on explicit ratings from users (example \u2014 number of stars, like button etc).", "To better identify users\u2019 preferences, content is categorized into tens of thousands of micro-genres as specific as \u201cCritically Acclaimed Emotional Underdog Movies\u201d or \u201cGritty Chinese Action & Adventure from the 1970s.\u201d Netflix then pairs the genre tags with a user\u2019s viewing history. The data points are combined to create clusters of people who have the same content preferences.", "Netflix has identified over 2,000 taste communities. One group of subscribers who streamed \u201cHouse of Cards\u201d, also streamed \u201cIt\u2019s Always Sunny in Philadelphia\u201d. Those who watch \u201cBlack Mirror\u201d tend to gravitate toward the equally cynical and edgy documentaries \u201cDirty Money and Food, Inc\u201d.", "In this article we will look into the algorithms behind recommendation engines. The reference dataset is the MovieLens 1M data. The data consists of user, movie and ratings data.", "The movies data has 3883 entries and has the following columns:", "The ratings data has 1 million entries and each row corresponds to a user-movie rating. This data has the following columns:", "First, we will look at a Content based recommendation system. Similar movies will be recommended based on the past watching history. The similarity between movies can be ascertained on the basis of several factors like \u2014 set of actors, movie release year, director etc. In this case, since we do not have any other information, similarity will be calculated on the basis of genre.", "In order to analyse the genre, we split the genre into an array, as per below:", "Thereafter, TfidVectorizer is applied to the genre column to identify the distinguishing features for every movie. The genres with the highest Tfidf scores, for every movie are the ones which characterise the movie.", "Based on the Tfidf scores, the similarity between movies is calculated using cosine.", "Each row of the matrix cosine_sim gives us the similarity score between each movie and 3882 others. The following function calculates the most similar movies with respect to a particular title.", "On running this function for Toy Story, we get the top ten similar movies:", "However Content based recommendation suffers from being too domain specific and homogeneous. For instance if a user had watched comedy in the past, future recommendations will also be centred around comedy, without taking into consideration that the user could like other genres as well.", "Hence, a Collaborative Filtering method is used more often. This method analyses relationships between users and interdependencies among products to identify new user-item associations. The two primary techniques, used within this method are \u2014 neighbourhood models and latent factor models.", "User neighbours are the ones who rate movies in a similar manner. Item neighbours are movies which have been rated similarly by the same user. Hence by finding user neighbours, we can recommend an unseen movie to a particular user, based on what her neighbours have watched. Inversely, we would look at a movie\u2019s nearest neighbours to predict how much it would be rated by a particular user.", "In this article we will study user-user collaborative filtering. To start with, the mean rating of every user is calculated.", "The goal is to arrive at a rating matrix with user ids as the row index, movie ids as column index and ratings as the value.", "However users are usually biased in their ratings. Some may have a tendency to always rate low and some may always rate highly. To normalise the values, we will subtract the mean rating from each individual rating.", "On normalising, low ratings are turned into negative numbers and high ratings into positive numbers. If we then take the cosine distance, we find that users with opposite views of the movies they viewed in common will have vectors in almost opposite directions, and can be considered as far apart as possible. However, users with similar opinions about the movies rated in common will have a relatively small angle between them.", "The final rating matrix, after subtracting the mean rating for each user is as follows:", "The Nan values are simply movies which have not been seen by the user. We need to predict the rating of these unseen movies to be able to determine of the user would like to watch them. Before computing the similarity between users, we will populate the Nan values with the row mean.", "The rating matrix now looks like this:", "Finally the similarity between users is computed:", "The top 30 neighbours of each user are computed:", "Finally we predict the rating which a particular user would give to a movie with the help of the following steps:", "i) We find the top 30 neighbours of the user whose rating we want to predict.", "ii) Next, we find the values of the ratings given by those neighbours to the movie in question. Neighbours who have not rated that particular movie are ignored.", "iii) We have two data points now- the ratings given by the neighbour users to a particular movie and their similarity values with respect to the user, whose rating we want to predict. A weighted score is calculated by dividing the sum product of the ratings and similarity values, by the similarity values.", "iv) This is then added to the mean rating of the user, who rating we want to predict, to arrive at a final figure.", "v) Depending on this value, we can finally decide if we want to recommend the movie to the user.", "The process can be intuitively understood with the help of the below illustration:", "This rating matrix shows ratings given by 12 users to 6 movies. The column \u201cavg\u201d is the mean rating of every user and \u201csim\u201d is the similarity value of each user with respect to user 1.", "The normalised matrix is calculated after subtracting the mean rating from every value.", "Suppose, we want to predict how much user 1 would rate movie 2.", "Users most similar to 1 are users 10, 11 and 2. However user 2 has not seen the movie 2, hence we can ignore that row. The predicted rating of user 1 to movie 2 is hence the weighted average of the ratings of users 10 and 11. the weights in this case are the similarity values. Finally we arrive at a value -1.3 for movie 2 as given by user 1. This implies that user 1 would rate the movie 1.3 points below his average. In all likelihood we should not recommend this movie to user 1.", "This process can be replicated for item-item collaborative filtering by taking a transpose of the rating matrix and repeating the steps to find similar items instead of similar users.", "Usually number of users far exceeds the number of items on any platform. Hence item-item collaborative filtering gives us a better result, since it\u2019s easier to group similar items rather than similar users.", "How often have we been guilty of playing a song on loop without really knowing exactly why we like it?", "Latent factor models attempt to find those hidden features which are not easily discoverable. They characterise both users and items on the basis of those features.", "This is done by a method known as Matrix Factorisation, which breaks down the user(n) x item(m) matrix into two matrices : user(n) x features(f) * features(f) x item(m)", "Intuitively this means that the rating given by the user to a particular movie in the first matrix is a function of the features, which the movie possesses. This is similar to creating a user profile and movie profile. The value of the features are initialised randomly to yield a certain rating value by multiplying the two matrices. The aim is to find a value as close as possible to the original rating matrix, during training, and this is accomplished by gradient descent. Once we have the decomposed matrices we can match a user with a movie on the basis of the value of the features. For instance- if the number of features is 2, one user might have corresponding values of [4,3] for the two features. If the values for those two features for a particular movie is [3.8, 2.7], we can conclude that the user and movie profiles match. The more close the values are, the higher probability that the user will rate the movie higher and hence we should recommend the same.", "Apart from finding the latent features, this approach helps us to translate a huge matrix into two thin matrices. Suppose there are 5000 users and 1000 movies. Hence the first matrix would have 5000x1000=5 million placeholders.", "Now if we hypothetically have 20 features, the first matrix on the right side of the equation would have 5000users x 20features = 100k placeholders. Similarly the second matrix would have 20features x 1000movies = 20k placeholders. This is a total of 120k, which is a huge reduction from 5 million.", "The Matrix Factorisation technique evolved to a more sophisticated SVD technique which breaks down the rating matrix into 3 matrices instead of 2.", "*V is the transpose of movie(n) x feature(k) matrix.", "Matrix S is a diagonal matrix having only k nonzero entries. The diagonal entries (s1, s2,\u2026,sk) of S have the property that si > 0 and s1 \u2265 s2 \u2265 \u2026 \u2265 sk. Hence the S matrix is a feature matrix that gives us the relative importance of the features in decreasing order. It is possible to retain only k-r singular values by discarding r other entries, which are unimportant. The matrices U and V are also reduced by removing r columns from U and r rows from V respectively. The reduced matrix, received by multiplying the three is a good approximation of the original one.", "Python facilitates application of SVD through the Surprise package.", "For detailed code on all the topics covered here, please refer to the github link.", "Collaborative Filtering suffers from the cold start problem and popularity bias. Netflix attempts to manage the cold start problem by asking a new user to list some initial preferences, so that future recommendations can be based on the same. There are different ways to prevent popularity bias, however that is beyond the scope of the article. Netflix takes into account several parameters, like freshness and diversity while recommending titles to users, hence keeping popularity bias at bay.", "This article aims to only provide a brief framework of how a recommendation system works. In real life scenarios, plenty of computing and data mining goes into creating user profiles, movie profiles and usually a combination of several algorithms is used to finally arrive at recommendations that can be rolled out to the user.", "I hope I have been able to get started on the intuition behind the recommender engine! As always, feedback is welcome!", "Incremental Singular Value Decomposition Algorithms for Highly Scalable Recommender Systems (Badrul Sarwar\u2020\u2217, George Karypis\u2021, Joseph Konstan\u2020, and John Riedl\u2020 {sarwar, karypis, konstan, riedl}@cs.umn.edu \u2020 GroupLens Research Group / \u2021 Army HPC Research Center Department of Computer Science and Engineering University of Minnesota, Minneapolis, MN 55455, USA)", "Matrix Factorisation techniques for recommender systems", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I love working with data and have been recently indulging myself in the field of data science."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F52d5f53731a1&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----52d5f53731a1--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----52d5f53731a1--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@prithasaha_62327?source=post_page-----52d5f53731a1--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@prithasaha_62327?source=post_page-----52d5f53731a1--------------------------------", "anchor_text": "Pritha Saha"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F17eb7a22d9d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&user=Pritha+Saha&userId=17eb7a22d9d7&source=post_page-17eb7a22d9d7----52d5f53731a1---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F52d5f53731a1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F52d5f53731a1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@jenskreuter?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Jens Kreuter"}, {"url": "https://towardsdatascience.com/s/photos/streaming-service?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://grouplens.org/datasets/movielens/", "anchor_text": "MovieLens 1M data"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfVectorizer.html", "anchor_text": "TfidVectorizer"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.pairwise.cosine_similarity.html", "anchor_text": "cosine"}, {"url": "https://unsplash.com/@tamtit24?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "B\u00f9i Thanh T\u00e2m"}, {"url": "https://towardsdatascience.com/s/photos/neighbours-buying-the-same-thing?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://unsplash.com/@brucemars?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "bruce mars"}, {"url": "https://towardsdatascience.com/s/photos/person-with-headphone?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "http://surpriselib.com/", "anchor_text": "Surprise package"}, {"url": "https://github.com/pritha21/Concepts/tree/master/Recommender_Systems", "anchor_text": "link"}, {"url": "https://www.buzzfeednews.com/article/nicolenguyen/netflix-recommendation-algorithm-explained-binge-watching", "anchor_text": "Netflix Has A Plan To Change The Way You ChillIt's Thursday night, and you're in front of the TV. To save money, you've replaced your cable TV package with a $10.99\u2026www.buzzfeednews.com"}, {"url": "https://www.newamerica.org/oti/reports/why-am-i-seeing-this/case-study-netflix/#:~:text=Netflix%27s%20recommendation%20system%20is%20an,targeted%20advertisements%20to%20its%20users.", "anchor_text": "Why Am I Seeing This?How video and e-commerce platforms use algorithms to drive recommendations to users.www.newamerica.org"}, {"url": "https://netflixtechblog.com/netflix-recommendations-beyond-the-5-stars-part-2-d9b96aa399f5", "anchor_text": "Netflix Recommendations: Beyond the 5 stars (Part 2)More insight into our broader personalization technology.netflixtechblog.com"}, {"url": "https://blogs.commons.georgetown.edu/cctp-607-spring2019/2019/05/06/music-to-my-ears-de-blackboxing-spotifys-recommendation-algorithm/", "anchor_text": "https://blogs.commons.georgetown.edu/cctp-607-spring2019/2019/05/06/music-to-my-ears-de-blackboxing-spotifys-recommendation-algorithm/"}, {"url": "http://www.mmds.org/", "anchor_text": "http://www.mmds.org/"}, {"url": "https://datajobs.com/data-science-repo/Recommender-Systems-[Netflix].pdf", "anchor_text": "Matrix Factorisation techniques for recommender systems"}, {"url": "https://medium.com/tag/recommender-systems?source=post_page-----52d5f53731a1---------------recommender_systems-----------------", "anchor_text": "Recommender Systems"}, {"url": "https://medium.com/tag/matrix-factorization?source=post_page-----52d5f53731a1---------------matrix_factorization-----------------", "anchor_text": "Matrix Factorization"}, {"url": "https://medium.com/tag/collaborative-filtering?source=post_page-----52d5f53731a1---------------collaborative_filtering-----------------", "anchor_text": "Collaborative Filtering"}, {"url": "https://medium.com/tag/netflix?source=post_page-----52d5f53731a1---------------netflix-----------------", "anchor_text": "Netflix"}, {"url": "https://medium.com/tag/svd?source=post_page-----52d5f53731a1---------------svd-----------------", "anchor_text": "Svd"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F52d5f53731a1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&user=Pritha+Saha&userId=17eb7a22d9d7&source=-----52d5f53731a1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F52d5f53731a1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&user=Pritha+Saha&userId=17eb7a22d9d7&source=-----52d5f53731a1---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F52d5f53731a1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----52d5f53731a1--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F52d5f53731a1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----52d5f53731a1---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----52d5f53731a1--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----52d5f53731a1--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----52d5f53731a1--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----52d5f53731a1--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----52d5f53731a1--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----52d5f53731a1--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----52d5f53731a1--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----52d5f53731a1--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@prithasaha_62327?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@prithasaha_62327?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Pritha Saha"}, {"url": "https://medium.com/@prithasaha_62327/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "194 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F17eb7a22d9d7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&user=Pritha+Saha&userId=17eb7a22d9d7&source=post_page-17eb7a22d9d7--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fdf6be7020fc4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbehind-the-scenes-how-does-a-streaming-service-know-what-we-want-to-watch-next-52d5f53731a1&newsletterV3=17eb7a22d9d7&newsletterV3Id=df6be7020fc4&user=Pritha+Saha&userId=17eb7a22d9d7&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}