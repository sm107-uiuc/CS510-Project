{"url": "https://towardsdatascience.com/guide-to-car-detection-using-yolo-48caac8e4ded", "time": 1683006648.576592, "path": "towardsdatascience.com/guide-to-car-detection-using-yolo-48caac8e4ded/", "webpage": {"metadata": {"title": "Guide to Car Detection using YOLO | by Bryan Tan | Towards Data Science", "h1": "Guide to Car Detection using YOLO", "description": "You are working on a self-driving car. As a critical component of this project, you\u2019d like to first build a car detection system. To collect data, you\u2019ve mounted a camera to the hood of the car\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.coursera.org/lecture/convolutional-neural-networks/non-max-suppression-dvrjH", "anchor_text": "non-max suppression", "paragraph_index": 3}, {"url": "https://www.coursera.org/lecture/convolutional-neural-networks/intersection-over-union-p9gxz", "anchor_text": "Intersection over Union", "paragraph_index": 20}, {"url": "https://github.com/allanzelener/YAD2K/blob/master/yad2k/models/keras_yolo.py", "anchor_text": "'keras_yolo.py'", "paragraph_index": 37}, {"url": "http://creativecommons.org/licenses/by/4.0/", "anchor_text": "Creative Commons Attribution 4.0 International License", "paragraph_index": 48}], "all_paragraphs": ["You are working on a self-driving car. As a critical component of this project, you\u2019d like to first build a car detection system. To collect data, you\u2019ve mounted a camera to the hood of the car, which takes pictures of the road ahead every few seconds while you drive around.", "You\u2019ve gathered all these images into a folder and have labelled them by drawing bounding boxes around every car you found. Here\u2019s an example of what your bounding boxes look like:", "If you have 80 classes that you want the object detector to recognize, you can represent the class label c either as an integer from 1 to 80, or as an 80-dimensional vector (with 80 numbers) \u2014 one component of which is 1 and the rest of which are 0. In this article, I will be using both representations, depending on which is more convenient for a particular step.", "\u201cYou Only Look Once\u201d (YOLO) is a popular algorithm because it achieves high accuracy whilst also being able to run in real-time. This algorithm \u201conly looks once\u201d at the image in the sense that it requires only one forward propagation pass through the network to make predictions. After non-max suppression, it then outputs recognized objects together with the bounding boxes.", "Let\u2019s look in greater detail at what this encoding represents.", "If the center/midpoint of an object falls into a grid cell, that grid cell is responsible for detecting that object.", "Since we are using 5 anchor boxes, each of the 19 x 19 cells thus encodes information about 5 boxes. Anchor boxes are defined only by their width and height.", "Now, for each box (of each cell), we will compute the following element-wise product and extract a probability that the box contains a certain class.", "The class score is score_c\u1d62 = p_c * c\u1d62 \u2014 the probability that there is an object p_c times the probability that the object is a certain class c\u1d62.", "In Figure 4, let\u2019s say for box 1 (cell 1), the probability that an object exists is p\u2081 = 0.60. So there\u2019s a 60% chance that an object exists in box 1 (cell 1).", "The probability that the object is the class category 3 (a car) is c\u2083 = 0.73.", "Let\u2019s say we calculate the score for all 80 classes in box 1 and find that the score for the car class (class 3) is the maximum. So we\u2019ll assign the score 0.44 and class 3 to this box 1.", "Here\u2019s one way to visualize what YOLO is predicting on an image:", "Doing this results in this picture:", "Note that this visualization isn\u2019t a core part of the YOLO algorithm itself for making predictions; it\u2019s just a nice way of visualizing an intermediate result of the algorithm.", "Another way to visualize YOLO\u2019s output is to plot the bounding boxes that it outputs. Doing that results in a visualization like this:", "In the figure above, we plotted only boxes for which the model had assigned a high probability, but this is still too many boxes. We\u2019d like to reduce the algorithm\u2019s output to a much smaller number of detected objects.", "To do so, we\u2019ll use non-max suppression. Specifically, we\u2019ll carry out these steps:", "We are going to first apply a filter by thresholding. We would like to get rid of any box for which the class \u201cscore\u201d is less than a chosen threshold.", "Even after filtering by thresholding over the class scores, we might still end up with a lot of overlapping boxes. A second filter for selecting the right boxes is called non-maximum suppression (NMS).", "Non-max suppression uses the very crucial function called Intersection over Union, or IoU.", "In this code, I\u2019ll be using the convention that (0, 0) is the top-left corner of an image; (1, 0) is the upper-right corner; (1, 1) is the lower-right corner. In other words, the (0, 0) origin starts at the top left corner of the image. As x increases, we move to the right. As y increases, we move downwards.", "I\u2019ll define a box using its two corners: upper left (x\u2081, y\u2081) and lower right (x\u2082, y\u2082) instead of using the midpoint, height and width. This makes it a bit easier to calculate the intersection.", "To calculate the area of a rectangle, multiply its height (y\u2082 \u2212 y\u2081) by its width (x\u2082 \u2212 x\u2081). Since (x\u2081, y\u2081) is the top left and (x\u2082, y\u2082) is the bottom right, these differences should be non-negative.", "Feel free to draw some examples on paper to clarify this conceptually. To find the intersection of the two boxes (xi\u2081, yi\u2081, xi\u2082, yi\u2082):", "We are now ready to implement non-max suppression. The key steps are:", "This will remove all boxes that have a large overlap with the selected boxes. Only the \u201cbest\u201d boxes remain.", "It\u2019s time to implement a function taking the output of the deep CNN (the 19 x 19 x 5 x 85 dimensional encoding) and filtering through all the boxes using the functions we\u2019ve just implemented.", "This function takes the output of the YOLO encoding and filters the boxes using score threshold and NMS.", "There\u2019s one implementations detail you need to know. There are a few ways of representing boxes, such as via their corners or via their midpoint and height/width. YOLO converts between a few such formats at different times, using the following functions:", "which converts the YOLO box coordinates (x, y, w, h) to box corners\u2019 coordinates (x\u2081, y\u2081, x\u2082, y\u2082) to fit the input of yolo_filter_boxes .", "YOLO\u2019s network was trained to run on 608 x 608 images. If you are testing this data on a different size image \u2014 for example, a car detection dataset with 720 x 1280 images \u2014 this step rescales the boxes so that they can be plotted on top of the original 720 x 1280 image.", "In this part, we are going to use a pre-trained model and test it on the car detection dataset. We\u2019ll need a session to execute the computation graph and evaluate the tensors:", "Recall that we were trying to detect 80 classes, and are using 5 anchor boxes. We will read the names and anchors of the 80 classes and 5 boxes that are stored in two files \u2014 coco_classes.txt and yolo_anchors.txt (more info in Github repo). The car detection dataset has 720 x 1280 images, which are pre-processed into 608 x 608 images.", "Training a YOLO model takes a very long time and requires a fairly large dataset of labelled bounding boxes for a large range of target classes. So we are instead going to load an existing pre-trained Keras YOLO model. (more info in Github repo). These weights come from the official YOLO website and were converted using a function written by Allan Zelener. References are at the end of this article. Technically, these are the parameters from the YOLOv2 model, but we will simply refer to it as YOLO in this article.", "This loads the weights of a trained YOLO model. You can take a look at the summary of the layers the model contains in the notebook in the Github repo.", "The output of yolo_model is a (m, 19, 19, 5, 85) tensor that needs to pass through non-trivial processing and conversion. The following code does that for us:", "If you are curious about how yolo_head is implemented, you can find the function definition in the file 'keras_yolo.py' in the Github repo.", "After adding yolo_outputs to our graph. This set of 4 tensors is ready to be used as input by the yolo_eval function.", "yolo_outputs gave us all the predicted boxes of yolo_model in the correct format. We\u2019re now ready to perform filtering and selecting only the best boxes by calling yolo_eval, which we had previously implemented, to do this.", "Let the fun begin. We have created a graph that can be summarized as follows:", "predict()runs the graph to test YOLO on an image. You will need to run a TensorFlow session, to have it compute scores, boxes, classes.", "The code below also uses the following function:", "Testing the function on a test image:", "The model we\u2019ve just run is actually able to detect 80 different classes listed in coco_classes.txt. Feel free to try with on with your own images by downloading the files in the Github repo.", "If we were to run the session in a for loop over all the images. Here\u2019s what we would get:", "All figures by courtesy of deeplearning.ai.", "The ideas presented in this article came primarily from the two YOLO papers. The implementation here also took significant inspiration and used many components from Allan Zelener\u2019s GitHub repository. The pre-trained weights used in this exercise came from the official YOLO website.", "Car detection dataset: The Drive.ai Sample Dataset (provided by drive.ai) is licensed under a Creative Commons Attribution 4.0 International License.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "19, Data Science Intern. I write maths & ai."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F48caac8e4ded&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----48caac8e4ded--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----48caac8e4ded--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@bryantanjw?source=post_page-----48caac8e4ded--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@bryantanjw?source=post_page-----48caac8e4ded--------------------------------", "anchor_text": "Bryan Tan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7cdfc2e9a731&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&user=Bryan+Tan&userId=7cdfc2e9a731&source=post_page-7cdfc2e9a731----48caac8e4ded---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F48caac8e4ded&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F48caac8e4ded&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://en.wikipedia.org/wiki/Drive.ai", "anchor_text": "drive.ai"}, {"url": "https://www.coursera.org/lecture/convolutional-neural-networks/non-max-suppression-dvrjH", "anchor_text": "non-max suppression"}, {"url": "https://keras.io/backend/#argmax", "anchor_text": "Keras argmax"}, {"url": "https://keras.io/backend/#max", "anchor_text": "Keras max"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/boolean_mask", "anchor_text": "boolean mask"}, {"url": "https://www.coursera.org/lecture/convolutional-neural-networks/intersection-over-union-p9gxz", "anchor_text": "Intersection over Union"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/image/non_max_suppression", "anchor_text": "tf.image.non_max_suppression()"}, {"url": "https://github.com/allanzelener/YAD2K/blob/master/yad2k/models/keras_yolo.py", "anchor_text": "'keras_yolo.py'"}, {"url": "https://www.deeplearning.ai/", "anchor_text": "deeplearning.ai"}, {"url": "https://arxiv.org/abs/1506.02640", "anchor_text": "You Only Look Once: Unified, Real-Time Object Detection"}, {"url": "https://arxiv.org/abs/1612.08242", "anchor_text": "YOLO9000: Better, Faster, Stronger"}, {"url": "https://github.com/allanzelener/YAD2K", "anchor_text": "YAD2K: Yet Another Darknet 2 Keras"}, {"url": "https://pjreddie.com/darknet/yolo/", "anchor_text": "https://pjreddie.com/darknet/yolo/"}, {"url": "http://creativecommons.org/licenses/by/4.0/", "anchor_text": "Creative Commons Attribution 4.0 International License"}, {"url": "https://github.com/TheClub4/car-detection-yolov2", "anchor_text": "https://github.com/TheClub4/car-detection-yolov2"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----48caac8e4ded---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/object-detection?source=post_page-----48caac8e4ded---------------object_detection-----------------", "anchor_text": "Object Detection"}, {"url": "https://medium.com/tag/deeplearing?source=post_page-----48caac8e4ded---------------deeplearing-----------------", "anchor_text": "Deeplearing"}, {"url": "https://medium.com/tag/autonomous-cars?source=post_page-----48caac8e4ded---------------autonomous_cars-----------------", "anchor_text": "Autonomous Cars"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----48caac8e4ded---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F48caac8e4ded&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&user=Bryan+Tan&userId=7cdfc2e9a731&source=-----48caac8e4ded---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F48caac8e4ded&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&user=Bryan+Tan&userId=7cdfc2e9a731&source=-----48caac8e4ded---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F48caac8e4ded&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----48caac8e4ded--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F48caac8e4ded&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----48caac8e4ded---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----48caac8e4ded--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----48caac8e4ded--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----48caac8e4ded--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----48caac8e4ded--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----48caac8e4ded--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----48caac8e4ded--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----48caac8e4ded--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----48caac8e4ded--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@bryantanjw?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@bryantanjw?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Bryan Tan"}, {"url": "https://medium.com/@bryantanjw/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "306 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7cdfc2e9a731&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&user=Bryan+Tan&userId=7cdfc2e9a731&source=post_page-7cdfc2e9a731--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F32dd6de2739d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fguide-to-car-detection-using-yolo-48caac8e4ded&newsletterV3=7cdfc2e9a731&newsletterV3Id=32dd6de2739d&user=Bryan+Tan&userId=7cdfc2e9a731&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}