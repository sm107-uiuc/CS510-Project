{"url": "https://towardsdatascience.com/environments-conda-pip-aaaaah-d2503877884c", "time": 1683008637.724312, "path": "towardsdatascience.com/environments-conda-pip-aaaaah-d2503877884c/", "webpage": {"metadata": {"title": "Environments, Conda, Pip, aaaaah! | by Dennis Bakhuis | Towards Data Science", "h1": "Environments, Conda, Pip, aaaaah!", "description": "There are many ways to install Python and unfortunately, it is very easy to create a mess. In this blog post I describe a method that works pretty well. I am aware of other great solutions, but this\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/master-python-in-10-minutes-a-day-ac32996b5ded", "anchor_text": "This is part of my Python-10-minutes-a-day course", "paragraph_index": 1}, {"url": "https://github.com/dennisbakhuis/Tutorials/tree/master/0_Python_Conda_Pip_Environments", "anchor_text": "my Github", "paragraph_index": 2}, {"url": "https://xkcd.com/1987/", "anchor_text": "XKCD", "paragraph_index": 6}, {"url": "https://www.anaconda.com/products/individual", "anchor_text": "Anaconda", "paragraph_index": 15}, {"url": "https://docs.conda.io/en/latest/miniconda.html", "anchor_text": "Miniconda", "paragraph_index": 15}], "all_paragraphs": ["There are many ways to install Python and unfortunately, it is very easy to create a mess. In this blog post I describe a method that works pretty well. I am aware of other great solutions, but this is generally the way I recommend, especially to beginners.", "\ud83d\udc49 This is part of my Python-10-minutes-a-day course!", "While there is not much to code along, this document is still available as a Jupyter Notebook on my Github. You can also find my previous tutorials there.", "A short overview of the topics we will be discussing:", "As many others, I \u2764\ufe0f Python! You can very rapidly translate your ideas into readable code solutions. One big reason Python is such a success is the very active community in which amazing people share their awesome solutions. This is why you do not have to write Data structures from scratch, but you simply import Pandas. Write the data to an hdf5 file format? Import h5py! Plot some figure, xkcd style? Import matplotlib! Even better, there are multiple flavors so if you prefer to plot your data in a different way, import one of the various other plotting system, e.g. Plotly, Bokeh, ggplot, to name a few. All this sharing goodness makes that Python is quite popular in many rapid evolving fields, such as Machine Learning.", "Unfortunately, all effort from the large community comes at a price. The packages you used get updated, restructured, improved, or just rewritten, just because the authors came up with a better way to solve their problem. These changes can be breaking changes for the code you have written. Popular packages, such as Numpy or Matplotlib are very reliable, and chances that you get breaking changes are slim. However, using packages that are not as popular, breaking changing can happen, especially when upgrading the package or Python itself.", "A way, the Python community solved this problem is with the use of virtual environments. These create isolated Python installations with their own set of packages. It is good practice to have a unique environment for each project or task. This ensures that dependencies of one project will not create breaking changes for another. This solution works great, but also creates some bookkeeping as you have different Python installations, for which each might come with their own package manager Pip. All of these references pointing Python and/or Pip can create a mess quite quickly and we end up in the famous diagram van XKCD below:", "While all XKCDs are funny as they generally contain some truth and indeed, if you do not have some sort of system to do the bookkeeping, your Python installations can become a mess. As with all things in Python, there are many different ways to organize this, including some great tools such as Poetry, Pipenv, and many more. In the next section I will describe the system I am using. This works for me and this might also work for you. These are just my two cents, and you should of course choose whatever suits you best.", "While there are many ways to organize your Python versions, virtual environments, and packages I do the following:", "There are probably very nice and flexible graphical user interfaces (GUIs) out there, however I prefer the command line interace (CLI) over them. They give me the impression that I am more in control. I am not sure if that is true, but at least I get confirmation over each step that I am doing. There are many different shells to choose from and it really does not matter that much. Use the one you have available is generally the easiest. When you spend more time in the CLI, you might get pickier one day and choose a different flavor.", "Windows has two different CLIs installed by default, the Command Line Prompt (CMD) and Windows Powershell. Both are fine, but the power shell gives more of an shell feeling. If you have never used a CLI, it can be useful to watch a tutorial of the power shell on Youtube. While I have not used Windows for a while, there are other options including running the famous Linux Bash shell on windows.", "MacOs has by default Bash (MacOs Catalina has Zsh) which is great. You can access the shell using the Terminal application which is a way to interact with bash or zsh. I personally prefer Zsh as a shell and iTerm2 to interact with it. Both can be installed using home-brew. If you are not familiar with Bash, I highly advice to watch a tutorial on it, as it is incredibly useful.", "Linux users are probably already familiar with a shell. Which shell and terminal application is installed, depends on the distribution you have installed. Generally all are fine, use what you have available.", "While your shell will most likely look quite different, here is an image of my shell:", "Now that we are familiar with a shell, lets get the next requirement: a conda distribution. Conda is a popular package manager for Python (and many other languages) and gives you access practically all Python versions and packages. It includes a easy system to manage virtual environments. While conda can be used to install packages, I only use it for virtual environments and Python versions. Conda has a feature called dependency checking, which works quite well, but sometimes can be a bit slow. Also, some packages are more up-to-date using Pip and therefore I choose to only use pip. Mixing both will probably work but it is probably better to use a single tool.", "Often, conda is installed using Anaconda, which is a full-fledged distribution, including many packages, tools and a GUI. It installs many packages you will probably never use and I find the GUI slow to work with. The other option to install conda is to use Miniconda, another distribution which is much smaller as the name suggests. Miniconda is a base installation with a Python system, Pip, Conda, and some other tools. While it is straight forward to install, here are some simple guide lines:", "This is all there is in installing the tools required to work with Python en virtual environments. In the next section I will explain a typical workflow.", "Miniconda comes without any GUIs and therefore, your starting point is always the shell.", "If you now open a shell, you have your new Python, Conda, and Pip ready for your bidding. You could install packages straight into your \u2018base\u2019 environment, however I highly advice against this. If you, for what ever reason make a mess of you \u2018base\u2019 environment, there is not way to delete it. Options are a reinstall (which actually is not all that bad) or removing packages by hand. Maybe there are tricks, but much easier is to just create virtual environments.", "I would create an environment for each project or task, just to keep things separate. As mentioned before, I create an environment using conda:", "This will create a new environment with the name \u2018tutorial\u2019 and Python version 3.7.x. Because we used a single \u2018=\u2019, we tell conda to use the latest version in the Python 3.7 tree. At the moment this is version 3.7.7. If we would have used two equal signs \u2018==\u2019 we would tell conda to give exactly version 3.7, so there is a subtle difference.", "After the environment is created, we have to switch to the newly created environment. For this conda has the activate command:", "Now you are in the isolated python environment called \u2018tutorial\u2019, which has its own version of Python, Conda, and pip. It is possible that you are not completely sure how a previously created environment was called. To check the available environments, you can always use:", "The previous figure shows all my available environments. These are just subdirectories in your miniconda folder. The currently active environment is shown with an asterix. Let\u2019s now install some packages in our fleshly created environment in the next section.", "In your activated environment, it is dead easy to install packages using the command \u2018pip install\u2019. For this example we will install the packages numpy, pandas, jupyterlab, matplotlib. While the dependency checking of pip is not as sophisticated as conda, it does however know that Pandas depends on numpy, and will install the dependecy if it is missing. To install the packages type:", "After the install, the packages are ready to go. For example to start Jupyter Lab type:", "Sometimes it happens when you work in a notebook, bot forgot to install that one package. For example, want to use tqdm to have some progress bars. To install that package, open another shell next to the one you are already using, activate the environment, and use pip to install tqdm. The package is immediately ready for use in the notebook you are working in. Or install it directly in you notebook using:", "The \u2018!\u2019 is used to execute shell commands. For example to do an *list directory* (ls) we do:", "So using \u2018!pip install tqdm\u2019 we can directly install the package in the current environment. The shell method is in my opinion a bit more explicit as you are absolutely sure in which environment you are installing the package, but both are great!.", "Another great way of installing packages is using the requirements.txt file. This is a list generated using the \u2018pip freeze\u2019 command and gives exact versions of packages used and is a great way to reproduce environments from previous projects. To create a requirements.txt yourself, type the following in a shell:", "Of course you can also invoke this command from jupyter:", "If you open the file, or run it without the \u2018> requirements.txt\u2019 you will see a list of all packages in your environment and the exact version behind the double equal sign. If you provide this file in the root folder of your project or git-repo, others can install all required packages with a single command:", "As you can see, requirements.txt is a great way to share and reproduce environments.", "After a while, you will be collecting quite some environments, which can introduce some clutter to your system. To remove environments that are not needed anymore, we can simply delete them. If you would require it again, using the requirements.txt it is dead easy to recreate the environment. Before we can remove an environment, we have to deactivate it. To do that type:", "Now we can delete an environment by typing:", "To verify, the environment is indeed gone:", "Some commands that might be useful:Clone an existing environment:", "This was it for managing Pythons, ENVs, PIPs, and all the snakes. As I mentioned before, this is one way to do it and there are many others. The other ways might work better, but this works for me. Feel free to comment on how this process can be done better or what works for you.", "Please let me know if you have any questions or suggestions.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist with a passion for natural language processing and deep learning. Python and open source enthusiast. Background in fluid dynamics."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd2503877884c&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d2503877884c--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d2503877884c--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://dennisbakhuis.medium.com/?source=post_page-----d2503877884c--------------------------------", "anchor_text": ""}, {"url": "https://dennisbakhuis.medium.com/?source=post_page-----d2503877884c--------------------------------", "anchor_text": "Dennis Bakhuis"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5b8617eb89bb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&user=Dennis+Bakhuis&userId=5b8617eb89bb&source=post_page-5b8617eb89bb----d2503877884c---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd2503877884c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd2503877884c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/master-python-in-10-minutes-a-day-ac32996b5ded", "anchor_text": "This is part of my Python-10-minutes-a-day course"}, {"url": "https://github.com/dennisbakhuis/Tutorials/tree/master/0_Python_Conda_Pip_Environments", "anchor_text": "my Github"}, {"url": "https://xkcd.com/1987/", "anchor_text": "XKCD"}, {"url": "https://www.anaconda.com/products/individual", "anchor_text": "Anaconda"}, {"url": "https://docs.conda.io/en/latest/miniconda.html", "anchor_text": "Miniconda"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d2503877884c---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----d2503877884c---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/python?source=post_page-----d2503877884c---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----d2503877884c---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data?source=post_page-----d2503877884c---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd2503877884c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&user=Dennis+Bakhuis&userId=5b8617eb89bb&source=-----d2503877884c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd2503877884c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&user=Dennis+Bakhuis&userId=5b8617eb89bb&source=-----d2503877884c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd2503877884c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d2503877884c--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd2503877884c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d2503877884c---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d2503877884c--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d2503877884c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d2503877884c--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d2503877884c--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d2503877884c--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d2503877884c--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d2503877884c--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d2503877884c--------------------------------", "anchor_text": ""}, {"url": "https://dennisbakhuis.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://dennisbakhuis.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Dennis Bakhuis"}, {"url": "https://dennisbakhuis.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.5K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5b8617eb89bb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&user=Dennis+Bakhuis&userId=5b8617eb89bb&source=post_page-5b8617eb89bb--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fc167ef22c4d5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fenvironments-conda-pip-aaaaah-d2503877884c&newsletterV3=5b8617eb89bb&newsletterV3Id=c167ef22c4d5&user=Dennis+Bakhuis&userId=5b8617eb89bb&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}