{"url": "https://towardsdatascience.com/getting-started-with-plot-ly-3c73706a837c", "time": 1682996659.809897, "path": "towardsdatascience.com/getting-started-with-plot-ly-3c73706a837c/", "webpage": {"metadata": {"title": "Getting Started with Plot.ly. A Guided Walkthrough for Powerful\u2026 | by Ishaan Dey | Towards Data Science", "h1": "Getting Started with Plot.ly", "description": "Matplotlib is alright, Seaborn is great, but Plot.ly? That\u2019s on an entirely new level. Plot.ly offers more than your average graph by providing options for full interactivity and many editing tools\u2026"}, "outgoing_paragraph_urls": [{"url": "https://images.plot.ly/plotly-documentation/images/python_cheat_sheet.pdf", "anchor_text": "here", "paragraph_index": 3}, {"url": "https://plot.ly/python/", "anchor_text": "here", "paragraph_index": 3}, {"url": "https://plot.ly/settings/api#/", "anchor_text": "https://plot.ly/settings/api#/", "paragraph_index": 5}], "all_paragraphs": ["Authors: Elyse Lee and Ishaan Dey", "Matplotlib is alright, Seaborn is great, but Plot.ly? That\u2019s on an entirely new level. Plot.ly offers more than your average graph by providing options for full interactivity and many editing tools. Differentiated from the others by having options to have graphs in offline and online mode, it is also equipped with a robust API that when set up will work seamlessly to have the graphs displayed in a web browser as well as the ability for saving a local copy. One of the only frustration you\u2019ll come across is dealing with many options to figure out the tools you want to use for your plots.", "We\u2019ll start with the basics of setting up plot.ly in Python. After that, we\u2019ll get started with some basic visualizations ranging from typical box & whisker plots to choropleth maps, with code breakdowns along the way. We\u2019ve made all visualizations in this guide using the Zillow Economics Dataset, which contains time-series data from 1996 to 2017 on various housing metrics aggregated by location. If you\u2019re interested in the full code for this post, check out the GitHub link below; otherwise, all the code used to create the visualizations will be included for each visualization.", "Our hope is that by the end, you\u2019ll have developed a basic intuition for how the plotly API works, as well as a feel for the generalizable framework you can apply towards your own projects. You can find a link to a plotly cheatsheet here, and if you\u2019re interested in fine tuning any of the parameters used for the visualization, you can access the documentation using the help() function. For more details on all types of plots and parameters, here is a link to more information on Plotly\u2019s Python open source graphing library.", "Plotly is a platform that runs on JSON, a format in which parameters are passed to the plotly API in dictionary formats. We can access this API in python using the plot.ly package. To install the package, open up terminal and type $ pip install plotly or $ sudo pip install plotly.", "Plotly\u2019s graphs are hosted using an online web service, so you\u2019ll first have to setup a free account online to store your plots. To retrieve your personal API key, follow the link here: https://plot.ly/settings/api#/. Once you\u2019ve done so, you can begin setting up plotly with the set_credential_files() function, as shown below.", "When displaying visualizations on plotly, both the plot and data are saved to your plotly account. Without paying for more space in cloud, you\u2019ll have a maximum of 25 plots that can be stored on the cloud, but these images can easily be stored locally and deleted when making space for more.", "There are two main ways to display plotly plots. If you\u2019re using Jupyter Notebook or another interactive python environment (files with the .ipynb extension), the py.iplot() function displays the plots in the output below the cell. py.plot(), on the other hand, returns a url that can be saved, and also opens using the default web browser.", "The Plotly offline mode also enables you to save graphs locally. To plot offline, you can use plotly.offline.plot() or plotly.offline.iplot(). Again, the iplot() function is used for Jupyter notebook, and will display the plots within the notebook. plot() creates an HTML page that is saved locally to be opened in a web browser.", "As we mentioned before, all plot.ly visualizations are created using Json structure which are list of parameters to be modified using API, so essentially you\u2019ll see the parameters and general structure to make each plot which if you learn one, you can make the rest.", "import plotly.plotly as py : This has the functions for communicating with the plotly servers", "import plotly.graph_objs as go: This has the functions for generating graph objects. This is a useful module for calling help on to see all the attributes taken as parameters of an object. There are also different useful methods of the object available such as the update method that can be used to update the plot object to add more information onto it.", "The graph_objs class contains several structures that are consistent across visualizations made in plot.ly, regardless of type.", "We begin with trace, which can be thought of as an individual layer that contains the data and specifications for how the data should be plotted (i.e. lines, markers, chart type). Here\u2019s an example of the structure of trace:", "As you can see, trace is a dictionary of parameters of the data to be plotted, as well as information about the color and line types.", "We can compile several traces by appending them to a list, which we\u2019ll call data. The order of traces in the list determine the order in which they\u2019re laid onto the final plot. Typically, data should look something like this:", "layout = go.Layout(): This object is used for the layout of the data including how it looks and changeable features such as title, axis titles, font, and spacing. Just like trace, it is a dictionary of dictionaries.", "We can finally compile the data and the layout using the go.Figure() function, which eventually gets passed to the plotting function that we choose.", "go.Bar()creates a bar chart type figure. Within the go.Layout() function, we can specify important information such as barmode = \u201cgroup\u201d, which groups the different bars for each year together, labels for the x and y axes, and a title for the full graph.", "go.Scatter() instantiates a trace of scatter type, as opposed to a bar chart or other form.", "We can change the mode of the marker using the mode parameter. Even though we are using a scatter plot, we can generate a scatter plot which creates lines and markers (points) on the lines.", "Here, we\u2019ve added a range slider that adjusts the domain of data that can be included in the main plot using the rangeslider parameter.", "We\u2019ve also passed a colors dictionary containing a unique color for each state. To do so, we used the seaborn color_palette() function, specified the color range, as well as the number of discrete values we need from the distribution. Because plot.ly will not accept RGB tuples, we can convert the output to HEX codes using the as_hex() function.", "To create this layout, instead of appending the traces to a single dictionary, we create subplots using the make_subplots() function, and add the trace to a specific location on the grid using the append_trace() function.", "With the choropleth, we can take a shortcut using the figure factory class, which contains a set of functions to easily plot more complex figures such geographical maps.", "From the ff.create_choropleth() function, we pass a set of FIPS values, or geographical identification codes specific to each county, city, or state, where the values (ZHVI_BottomTier) correspond to the data to be assigned to that region.", "As depicted from the examples of different types of graphs above, Plot.ly is a powerful tool for developing both visually pleasing and comprehensible plots for a wide range of audiences. It has many benefits including being widely accessible with having both offline and online modes, and containing functions that can display generated graphs in the notebook and in a web browser. With extra advantages in interactivity, Plotly is a great alternative to Matplotlib and Seaborn, and can boost impact for presentation.", "Let us know if you have any questions!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Student of Applied Statistics at the University of Virginia"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F3c73706a837c&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----3c73706a837c--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----3c73706a837c--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@ishaandey?source=post_page-----3c73706a837c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ishaandey?source=post_page-----3c73706a837c--------------------------------", "anchor_text": "Ishaan Dey"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd688d6425be7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&user=Ishaan+Dey&userId=d688d6425be7&source=post_page-d688d6425be7----3c73706a837c---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3c73706a837c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3c73706a837c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://images.plot.ly/plotly-documentation/images/python_cheat_sheet.pdf", "anchor_text": "here"}, {"url": "https://plot.ly/python/", "anchor_text": "here"}, {"url": "https://plot.ly/settings/api#/", "anchor_text": "https://plot.ly/settings/api#/"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----3c73706a837c---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/plotly?source=post_page-----3c73706a837c---------------plotly-----------------", "anchor_text": "Plotly"}, {"url": "https://medium.com/tag/data-science?source=post_page-----3c73706a837c---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----3c73706a837c---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3c73706a837c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&user=Ishaan+Dey&userId=d688d6425be7&source=-----3c73706a837c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3c73706a837c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&user=Ishaan+Dey&userId=d688d6425be7&source=-----3c73706a837c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3c73706a837c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----3c73706a837c--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F3c73706a837c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----3c73706a837c---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----3c73706a837c--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----3c73706a837c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----3c73706a837c--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----3c73706a837c--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----3c73706a837c--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----3c73706a837c--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----3c73706a837c--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----3c73706a837c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ishaandey?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ishaandey?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ishaan Dey"}, {"url": "https://medium.com/@ishaandey/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "128 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd688d6425be7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&user=Ishaan+Dey&userId=d688d6425be7&source=post_page-d688d6425be7--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fcdefb47813dc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgetting-started-with-plot-ly-3c73706a837c&newsletterV3=d688d6425be7&newsletterV3Id=cdefb47813dc&user=Ishaan+Dey&userId=d688d6425be7&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}