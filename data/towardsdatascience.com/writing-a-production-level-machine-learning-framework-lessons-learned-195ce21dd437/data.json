{"url": "https://towardsdatascience.com/writing-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437", "time": 1683013773.462691, "path": "towardsdatascience.com/writing-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437/", "webpage": {"metadata": {"title": "Writing a Production-Level Machine Learning Framework: Lessons Learned | by Stefan Schroedl | Towards Data Science", "h1": "Writing a Production-Level Machine Learning Framework: Lessons Learned", "description": "My wonderful colleagues at Atomwise and I have written a production-level PyTorch framework for training and running deep learning models. Our application centers on drug discovery \u2014 predicting\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.atomwise.com/", "anchor_text": "Atomwise", "paragraph_index": 0}, {"url": "https://www.codit.eu/blog/continuous-refactoring/", "anchor_text": "\u201ccontinuous refactoring\u201d", "paragraph_index": 1}, {"url": "https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader", "anchor_text": "torch.utils.data.DataLoader", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/flexible-declarative-dataset-sampling-in-pytorch-613c6d5db10c", "anchor_text": "TreeSampler", "paragraph_index": 2}, {"url": "https://www.tensorflow.org/tensorboard", "anchor_text": "Tensorboard", "paragraph_index": 3}, {"url": "https://mlflow.org/", "anchor_text": "MLFlow", "paragraph_index": 3}, {"url": "https://towardsdatascience.com/pytorch-tidbits-measuring-streams-and-times-de0c7bae85da", "anchor_text": "here.", "paragraph_index": 3}, {"url": "https://pypi.org/project/configobj/", "anchor_text": "ConfigObj", "paragraph_index": 7}, {"url": "https://engineering.fb.com/open-source/hydra/", "anchor_text": "hydra.", "paragraph_index": 7}, {"url": "https://caffe.berkeleyvision.org/", "anchor_text": "Caffe", "paragraph_index": 10}, {"url": "https://en.wikipedia.org/wiki/Indirection", "anchor_text": "Fundamental Theorem of Software Engineering", "paragraph_index": 13}, {"url": "https://en.wikipedia.org/wiki/Ship_of_Theseus", "anchor_text": "Ship of Theseus.", "paragraph_index": 21}, {"url": "https://github.com/warner/python-versioneer", "anchor_text": "versioneer", "paragraph_index": 27}, {"url": "https://pytorch.org/docs/stable/notes/randomness.html", "anchor_text": "GPU computation is inherently non-deterministic", "paragraph_index": 28}, {"url": "https://towardsdatascience.com/flexible-declarative-dataset-sampling-in-pytorch-613c6d5db10c", "anchor_text": "earlier post", "paragraph_index": 28}], "all_paragraphs": ["My wonderful colleagues at Atomwise and I have written a production-level PyTorch framework for training and running deep learning models. Our application centers on drug discovery \u2014 predicting whether a molecule inhibits the activity of a protein by binding to a pocket. The goal was to have a stable yet flexible platform to support both machine scientists in training and experimenting, and medicinal chemists in applying them as part of their production workflow.", "Iterative improvement and \u201ccontinuous refactoring\u201d are ubiquitous in software development, and we were no exception. The first version was far from perfect; but looking at use cases, feedback, and extended functionality, we have gone through several rounds of refinement. Our design goals were to provide a tool that allows easy experimentation without the need to write code, as well as the use within an automation pipeline. This meant we had to strike a balance between allowing enough knobs to conduct meaningful research, yet limiting the potential for unintentional misconfiguration and confusion. We also optimized for performance and cost-effectiveness within a cloud environment. In this post, I would like to reflect on some general, domain-independent lessons we learned along the way.", "When we took a first stab at it, we designed an application from scratch; using torch.Tensor arithmetic, but few of the other provided utility classes. This turned out to be a mistake: We ran into issues with multi-processing and data queueing that we hadn\u2019t anticipated and that torch.utils.data.DataLoader already addresses. While this Python class might not seem to do much on the surface, it is actually quite elaborate under the hood! And it is flexible enough such that it can be adopted without changes in most use cases. It is much simpler to use customization by inheriting from the lightweight torch.utils.data.DataSet and from torch.utils.data.Sampler instead. For the latter, please see my previous post about our vintage TreeSampler design.", "Most of our architecture follows common standards \u2014 see below for a high-level sketch. The training and scoring loops are encapsulated into an Engine class. Training iterates through minibatches of data; after each epoch, a fixed number of minibatches from a separate test set are used to estimate learning curves and detect possible overfitting. Whenever we improve on (a smoothing average over the most recent) test metrics, we write out a checkpoint as the current best model that could be used to simulate early stopping. In addition, at (possibly different) configurable intervals, we write checkpoints, record learning statistics into a metrics logger (e.g., Tensorboard or MLFlow), and print messages to log files and to the console. I described the auxiliary Meter class here.", "We found that a large part of the engine code was concerned with initializing all the objects needed for a training run (model, data sets, optimizer, scheduler, loss functions, \u2026), so we later factored out a LaunchManager class that is only used during startup.", "The transform pipeline typically refers to a sequence of data preprocessing steps, such as selection, format conversion, and random augmentations. It is most commonly suggested to call them in the __getitem__() method of the DataSet. We departed from that by making the transform pipeline part of the collation phase, when a list of examples get concatenated into a minibatch Tensor. For this purpose, the DataLoader allows to pass in an optional collate_fn argument. Thus, Tensor operations can be vectorized over the entire minibatch, resulting in a significant speedup compared to looping over individual examples.", "If shell commands have more than a handful of possible options, they become a burden to remember and to type. In practice, users then often end up copy/pasting wrapper shell scripts that essentially serve as configurations. A better solution is to distinguish settings from code by using configuration files right from the start. These come with several added benefits: They allow hierarchical organization in sections, comments, a clean way of managing defaults, and automatic validation tools.", "While an interpreted language like Python makes it easy to write configurations in Python itself, I prefer to keep the distinction from code explicit by using a format like yaml or json. In our case, we chose yaml format with validation using the ConfigObj package. There are also alternative configuration packages, such as are schema, or Facebook\u2019s recently introduced hydra. ConfigObj manages a separate specification file containing the type and value constraints for each parameter. It is convenient to specify defaults here \u2014 the configuration can then omit certain options. For example, when running in scoring mode, we can leave the training section blank \u2014 and vice versa. During validation, remember to also check for extra parameters \u2014 those specified by the user, but unmentioned in the spec. In many cases, these are typos, and would easily go unnoticed otherwise.", "We constrain the entire configuration to a single file. While file inclusion, override mechanisms, or having multiple sub-configurations could be simpler to manage when running experiments, we felt that it would not serve the longer term goals of consistency and reproducibility.", "We found it useful to implement an intelligent diff-like functionality for configuration files. The function breaks out added, removed, and changed options. This helps to quickly see how new models differ from previously trained ones, and what was changed in fine-tuning runs. In contrast to line-based (unix) diff, it takes into consideration immaterial changes in ordering, implicit default values, and can be told to ignore certain differences such as in logging.", "It is easy to have heated debates about the right way to configure and define model architectures \u2014 and we had our share as well. First question: What is the appropriate level of specification granularity? The Caffe framework specifies the complete model declaratively, as a list of all the layers with their settings. On the other end of the spectrum, PyTorch usually takes a more procedural approach \u2014 we can define the model as a subclass of torch.nn.Module, and write out its forward method containing the sequence of computation steps. Both of these approaches have advantages and disadvantages in terms of flexibility, susceptibility to inadvertent misspecification, amount of code, and cross-experiment tracking and comparison. We wanted to avoid a proliferation of model files that only differ in minor ways, so we opted for a compromise solution: We write out one file per model family, but allow for some variation controlled by options (e.g., the depth and width of layers). This is further facilitated by providing a library of common building blocks, such as multi-layer perceptrons with different activations and optional dropout and normalization layers.", "Next question: How do we retrieve these models in the configuration by name (surely we don\u2019t want to refer to the file path)? To this end, we designed a light-weight model registry (you could also call it a factory). When the model code is decorated with a @register tag, it will be recognized and subsequently be accessible in the configuration by its class name, or a custom given name. Each model file comes with an associated parameter specification. The registry reads and validates these parameters before creating an instance at the start of training.", "Some models we used are composed of others \u2014 multi-task, Siamese, and ensemble networks. For these, it proved useful to allow for multiple named models in the configuration, some of which could be currently unused. For example, an ensemble network could have a structure as follows:", "In other words, we are using the Fundamental Theorem of Software Engineering. We started using named components in other parts of the configuration as well. For example, different model types can require different transform pipelines. So if users switched models, they would need to modify the transform section accordingly, which could be tedious and error-prone (in practice, users would most likely tend to keep commenting and uncommenting sections). So we also refer by name to transform pipelines and minibatch sampling settings.", "Overall, our current configuration file has grown to about 500 lines. It is organized into the following top-level sections:", "\u201cAll problems in computer science can be solved by another level of indirection \u2026 except for the problem of too many layers of indirection.\u201d", "The practice of machine learning scientists involves continuously training and evaluating a large number of models in order to figure out the best model architectures, hyper-parameters, data, and sampling configurations. After evaluation, they keep model files around for the sake of comparisons and to be able to do more analysis in the future. You always want to be able to go back if you need to and have a good understanding of how exactly you arrived at an experimental result; and you don\u2019t exactly know today which question you will ask tomorrow, in a month or in a year from now.", "Archiving doesn\u2019t only apply to the raw model files, but to all artifacts that an experimental run might produce: Logging and Tensorboard output, checkpoints, visualizations, and so on. One way of keeping experiments organized is a systematic directory structure, such as using path names that are mnemonic of the parameter differences that were explored, compared to a base model. While many machine learning scientists naturally tend to such an organization, why not do it for them and enforce it?", "Therefore, we keep all training-related artifacts in a directory dedicated to a specific run:", "For a fresh training run, an empty directory is created. It is supposed to be modified only by our command-line interface script, never directly by the user. This reduces possible errors, and simplifies the engine code as we can assume a layout with predefined names and structure. Our etiquette is to treat the model directory like a black-box archive.", "How do we design the command line interface so that it is simple and robust to be used both by a machine learning scientist conducting experiments, and as part of a standard workflow for a domain expert, who is not necessarily a programmer (such as a medicinal chemist in our case)? I discussed above the goal of controlling the program behavior declaratively using a configuration file. In contrast, and to avoid confusion, we want to keep the command line options minimal. Essentially, the script will need to know only three things:", "Sometimes we want to initialize model weights from an existing model instead of randomly. This is true for fine-tuning, but also if we just want to continue training with additional iterations. Should we track this process in the existing model directory, or create a new one? Or, should the behavior depend on the significance of the configuration change (e.g., allowing the user to add more iterations with otherwise unchanged configuration in the same directory)? This question is reminiscent of the Ship of Theseus. Our discussions ultimately settled on always requiring a new directory. For reference, the old model checkpoint is copied; but after initialization, the training run is treated exactly the same as any other.", "We also had to take into consideration that training and scoring is mostly run within a cloud environment. We often provision spot instances for cost discounts, but that means we have to be ready for interruptions at any time. Evidently training should not start again from scratch, but resume from a point where it left off. We call this separate scenario auto-restart. It should be as frictionless and transparent to the user as possible; so it should work automatically by re-issuing the original command, without any changes.", "At fixed regular intervals, we save checkpoints comprising the model, optimizer, and scheduler state; note that for sampling purposes, it is necessary to save the states of all random number generators as well. Remember to delete older checkpoints only after successfully writing the current one, to deal with corruption. At auto-restart, we check for the most recent, valid one.", "As mentioned above, we want to prevent users from accidentally overwriting previous experiments. So how do we distinguish that case from auto-restart? Configuration files outside of the model directory could have been modified in the meantime, and the model might even continue in a different absolute path. This is where a function for comparing configurations comes in handy again. If the contents of the configuration file specified on the command lines agrees with that one archived in the model directory, the script assumes it has been auto-restarted; otherwise, we warn the user and abort.", "Auto-restart does not only apply to training; sometimes we need to score huge files with tens of millions or of rows. To this end, the Scorer creates a temporary directory named after the output file and saves batches of scores at regular intervals. Finally, all these partial results are re-read, concatenated, aggregated and formatted appropriately before being written back to a single output file.", "Capturing all model-related artifacts in a dedicated directory is one step towards reproducibility, but only the first.", "For later reference, it is helpful to print important meta-data to the log file. We use the versioneer package for tracking the software version; it retrieves the most recent git tag and hash string and makes it available as a Python string. We set our package __VERSION__ string accordingly, use it to mark our internal PyPI releases, and print it to the log output for every run. We also print the version numbers of important packages, such as torch.", "It is well known that GPU computation is inherently non-deterministic. Even special CUDA execution flags cannot eliminate these effects of parallel execution in all cases. Nevertheless, it can be worthwhile to be also to make training as reproducible as possible. To this end, we provide options to seed all random number generators: for the Python random package, for numpy, for torch CPU operation, and for each GPU instance. Note that the PyTorch Dataloader spawns multiple processes, each of which comes with its own independent set of random number generators. As described in more detail in this earlier post, we can control this effectively by pre-generating all required random numbers in the single main thread dedicated to sampling, and tacking them on to each example data.", "Test-driven development is an effective, generally applicable guidance for software development. Accordingly, we strive to cover most of our code base with appropriate unit tests. We also require a few integration steps that simulate the different envisioned cases of a complete workflow: Training from scratch, auto-restart, scoring, and retuning, with empty or existing model directories. What is specific to machine learning that it is very easy to introduce a subtle bug and not recognize it for some time: As long as it doesn\u2019t lead to a catastrophic breakdown, model training is designed to compensate for any data flaws, to some degree. Therefore, we found it extremely useful to automate a nightly training regression job, running for a hundred thousand iterations with our latest commits and typical model architectures. Based on previous runs, we set expectation and tolerances for various metrics at specified iterations, to alert us to any change in behavior, be it positive or negative.", "A common, well-known pitfall is premature optimization, or optimizing a part of the software that is not really that critical in terms of either functionality or performance. Profiling and selective simplification (e.g., running with a trivial model or with trivial data) can hint at what is most important in the overall picture. And on the contrary, sometimes inconspicuous pieces can have outsize effects. As an example, profiling revealed that the following line in the training loop led to slowdown due to unnecessary GPU synchronization:", "On our journey, we have gone down a few paths that in hindside turned out to be rabbit holes. To name just one example: We went too far in trying to protect existing model directories from accidental overwriting, as discussed above. We had a scheme of write-protecting files, but we didn\u2019t want users to have to change permissions explicitly, and at the same time, it had to work within an automation framework where state was stored in permission-less S3 files. This required a lot of logic to cover the different use cases, but there are always new cases that you didn\u2019t anticipate. The design was complicated and brittle, and in the end just not worth it for the purported benefit.", "If software gets too complicated to manage, users will get frustrated \u2014 but they will do so too if it doesn\u2019t provide at least a basic version of their most desired features. It is a continual process of filtering and prioritizing requests, bundling them into a common, minimal interface.", "As software grows and matures, there is always a delicate balance between robustness and convenience on the one side, and new features and flexibility on the other. As much as developers we strive to satisfy as many users as possible, we can never make every one perfectly happy.", "Thanks to Brandon Anderson, Bastiaan Bergman, Jared Thompson, and Greg Friedland!", "Head of Machine Learning @ Atomwise \u2014 Deep Learning for Better Medicines, Faster. Formerly Amazon, Yahoo, DaimlerChrysler."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F195ce21dd437&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://stefan-schroedl.medium.com/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": ""}, {"url": "https://stefan-schroedl.medium.com/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "Stefan Schroedl"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4c3954a88def&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&user=Stefan+Schroedl&userId=4c3954a88def&source=post_page-4c3954a88def----195ce21dd437---------------------post_header-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F195ce21dd437&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&user=Stefan+Schroedl&userId=4c3954a88def&source=-----195ce21dd437---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F195ce21dd437&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&source=-----195ce21dd437---------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://www.atomwise.com/", "anchor_text": "Atomwise"}, {"url": "https://www.codit.eu/blog/continuous-refactoring/", "anchor_text": "\u201ccontinuous refactoring\u201d"}, {"url": "https://pytorch.org/docs/stable/data.html#torch.utils.data.DataLoader", "anchor_text": "torch.utils.data.DataLoader"}, {"url": "https://towardsdatascience.com/flexible-declarative-dataset-sampling-in-pytorch-613c6d5db10c", "anchor_text": "TreeSampler"}, {"url": "https://www.tensorflow.org/tensorboard", "anchor_text": "Tensorboard"}, {"url": "https://mlflow.org/", "anchor_text": "MLFlow"}, {"url": "https://towardsdatascience.com/pytorch-tidbits-measuring-streams-and-times-de0c7bae85da", "anchor_text": "here."}, {"url": "https://pypi.org/project/configobj/", "anchor_text": "ConfigObj"}, {"url": "https://engineering.fb.com/open-source/hydra/", "anchor_text": "hydra."}, {"url": "https://caffe.berkeleyvision.org/", "anchor_text": "Caffe"}, {"url": "https://en.wikipedia.org/wiki/Indirection", "anchor_text": "Fundamental Theorem of Software Engineering"}, {"url": "https://towardsdatascience.com/flexible-declarative-dataset-sampling-in-pytorch-613c6d5db10c", "anchor_text": "earlier post"}, {"url": "https://docs.python.org/3/library/logging.config.html", "anchor_text": "logging.config"}, {"url": "https://docs.python.org/3/library/logging.handlers.html#queuelistener", "anchor_text": "logging.handlers.QueueListener"}, {"url": "https://unsplash.com/@timmossholder?utm_source=medium&utm_medium=referral", "anchor_text": "Tim Mossholder"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.groupby.html", "anchor_text": "pandas.DataFrame.groupby"}, {"url": "https://en.wikipedia.org/wiki/Ship_of_Theseus", "anchor_text": "Ship of Theseus."}, {"url": "https://unsplash.com/@anetek?utm_source=medium&utm_medium=referral", "anchor_text": "Aneta Foub\u00edkov\u00e1"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/warner/python-versioneer", "anchor_text": "versioneer"}, {"url": "https://pytorch.org/docs/stable/notes/randomness.html", "anchor_text": "GPU computation is inherently non-deterministic"}, {"url": "https://towardsdatascience.com/flexible-declarative-dataset-sampling-in-pytorch-613c6d5db10c", "anchor_text": "earlier post"}, {"url": "https://unsplash.com/@kmuza?utm_source=medium&utm_medium=referral", "anchor_text": "Carlos Muza"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://medium.com/tag/software-development?source=post_page-----195ce21dd437---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----195ce21dd437---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/pytorch?source=post_page-----195ce21dd437---------------pytorch-----------------", "anchor_text": "Pytorch"}, {"url": "https://medium.com/tag/engineering?source=post_page-----195ce21dd437---------------engineering-----------------", "anchor_text": "Engineering"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----195ce21dd437---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F195ce21dd437&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&user=Stefan+Schroedl&userId=4c3954a88def&source=-----195ce21dd437---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F195ce21dd437&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&user=Stefan+Schroedl&userId=4c3954a88def&source=-----195ce21dd437---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F195ce21dd437&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://stefan-schroedl.medium.com/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4c3954a88def&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&user=Stefan+Schroedl&userId=4c3954a88def&source=post_page-4c3954a88def----195ce21dd437---------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F4c3954a88def%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&user=Stefan+Schroedl&userId=4c3954a88def&source=-----195ce21dd437---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://stefan-schroedl.medium.com/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "Written by Stefan Schroedl"}, {"url": "https://stefan-schroedl.medium.com/followers?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "245 Followers"}, {"url": "https://towardsdatascience.com/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4c3954a88def&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&user=Stefan+Schroedl&userId=4c3954a88def&source=post_page-4c3954a88def----195ce21dd437---------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F4c3954a88def%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwriting-a-production-level-machine-learning-framework-lessons-learned-195ce21dd437&user=Stefan+Schroedl&userId=4c3954a88def&source=-----195ce21dd437---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://theapeiron.co.uk/philosophical-zombies-and-us-a4de10febab0?source=author_recirc-----195ce21dd437----0---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://stefan-schroedl.medium.com/?source=author_recirc-----195ce21dd437----0---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://stefan-schroedl.medium.com/?source=author_recirc-----195ce21dd437----0---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "Stefan Schroedl"}, {"url": "https://theapeiron.co.uk/?source=author_recirc-----195ce21dd437----0---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "The Apeiron Blog"}, {"url": "https://theapeiron.co.uk/philosophical-zombies-and-us-a4de10febab0?source=author_recirc-----195ce21dd437----0---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "Philosophical Zombies and UsWhat does it mean to be a conscious being?"}, {"url": "https://theapeiron.co.uk/philosophical-zombies-and-us-a4de10febab0?source=author_recirc-----195ce21dd437----0---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "10 min read\u00b7Nov 19, 2020"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fthe-apeiron-blog%2Fa4de10febab0&operation=register&redirect=https%3A%2F%2Ftheapeiron.co.uk%2Fphilosophical-zombies-and-us-a4de10febab0&user=Stefan+Schroedl&userId=4c3954a88def&source=-----a4de10febab0----0-----------------clap_footer----f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://theapeiron.co.uk/philosophical-zombies-and-us-a4de10febab0?source=author_recirc-----195ce21dd437----0---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "2"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa4de10febab0&operation=register&redirect=https%3A%2F%2Ftheapeiron.co.uk%2Fphilosophical-zombies-and-us-a4de10febab0&source=-----195ce21dd437----0-----------------bookmark_preview----f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----195ce21dd437----1---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://barrmoses.medium.com/?source=author_recirc-----195ce21dd437----1---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://barrmoses.medium.com/?source=author_recirc-----195ce21dd437----1---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "Barr Moses"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----195ce21dd437----1---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----195ce21dd437----1---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "Zero-ETL, ChatGPT, And The Future of Data EngineeringThe post-modern data stack is coming. Are we ready?"}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----195ce21dd437----1---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "9 min read\u00b7Apr 3"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F71849642ad9c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fzero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c&user=Barr+Moses&userId=2818bac48708&source=-----71849642ad9c----1-----------------clap_footer----f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----195ce21dd437----1---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "21"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F71849642ad9c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fzero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c&source=-----195ce21dd437----1-----------------bookmark_preview----f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/how-i-turned-my-companys-docs-into-a-searchable-database-with-openai-4f2d34bd8736?source=author_recirc-----195ce21dd437----2---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://medium.com/@jacob_marks?source=author_recirc-----195ce21dd437----2---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://medium.com/@jacob_marks?source=author_recirc-----195ce21dd437----2---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "Jacob Marks, Ph.D."}, {"url": "https://towardsdatascience.com/?source=author_recirc-----195ce21dd437----2---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/how-i-turned-my-companys-docs-into-a-searchable-database-with-openai-4f2d34bd8736?source=author_recirc-----195ce21dd437----2---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "How I Turned My Company\u2019s Docs into a Searchable Database with OpenAIAnd how you can do the same with your docs"}, {"url": "https://towardsdatascience.com/how-i-turned-my-companys-docs-into-a-searchable-database-with-openai-4f2d34bd8736?source=author_recirc-----195ce21dd437----2---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "15 min read\u00b7Apr 25"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4f2d34bd8736&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-turned-my-companys-docs-into-a-searchable-database-with-openai-4f2d34bd8736&user=Jacob+Marks%2C+Ph.D.&userId=f7dc0c0eae92&source=-----4f2d34bd8736----2-----------------clap_footer----f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/how-i-turned-my-companys-docs-into-a-searchable-database-with-openai-4f2d34bd8736?source=author_recirc-----195ce21dd437----2---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "20"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4f2d34bd8736&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-turned-my-companys-docs-into-a-searchable-database-with-openai-4f2d34bd8736&source=-----195ce21dd437----2-----------------bookmark_preview----f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://medium.com/atomwise/machine-learning-for-drug-discovery-in-a-nutshell-part-ii-24f90d5963d9?source=author_recirc-----195ce21dd437----3---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://stefan-schroedl.medium.com/?source=author_recirc-----195ce21dd437----3---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://stefan-schroedl.medium.com/?source=author_recirc-----195ce21dd437----3---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "Stefan Schroedl"}, {"url": "https://medium.com/atomwise?source=author_recirc-----195ce21dd437----3---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "Atomwise"}, {"url": "https://medium.com/atomwise/machine-learning-for-drug-discovery-in-a-nutshell-part-ii-24f90d5963d9?source=author_recirc-----195ce21dd437----3---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "Machine Learning for Drug Discovery in a Nutshell - Part IIPart II"}, {"url": "https://medium.com/atomwise/machine-learning-for-drug-discovery-in-a-nutshell-part-ii-24f90d5963d9?source=author_recirc-----195ce21dd437----3---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": "30 min read\u00b7Jun 17, 2018"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fatomwise%2F24f90d5963d9&operation=register&redirect=https%3A%2F%2Fmedium.com%2Fatomwise%2Fmachine-learning-for-drug-discovery-in-a-nutshell-part-ii-24f90d5963d9&user=Stefan+Schroedl&userId=4c3954a88def&source=-----24f90d5963d9----3-----------------clap_footer----f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://medium.com/atomwise/machine-learning-for-drug-discovery-in-a-nutshell-part-ii-24f90d5963d9?source=author_recirc-----195ce21dd437----3---------------------f552f610_b52e_486d_b745_8cd7c6640e65-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F24f90d5963d9&operation=register&redirect=https%3A%2F%2Fmedium.com%2Fatomwise%2Fmachine-learning-for-drug-discovery-in-a-nutshell-part-ii-24f90d5963d9&source=-----195ce21dd437----3-----------------bookmark_preview----f552f610_b52e_486d_b745_8cd7c6640e65-------", "anchor_text": ""}, {"url": "https://stefan-schroedl.medium.com/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "See all from Stefan Schroedl"}, {"url": "https://towardsdatascience.com/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "See all from Towards Data Science"}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://alexcancode.medium.com/?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://alexcancode.medium.com/?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "Alexander Nguyen"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "Why I Keep Failing Candidates During Google Interviews\u2026They don\u2019t meet the bar."}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "\u00b74 min read\u00b7Apr 13"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Fdc8f865b2c19&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwhy-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19&user=Alexander+Nguyen&userId=a148fd75c2e9&source=-----dc8f865b2c19----0-----------------clap_footer----6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "91"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fdc8f865b2c19&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwhy-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19&source=-----195ce21dd437----0-----------------bookmark_preview----6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://thepycoach.com/?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://thepycoach.com/?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "The PyCoach"}, {"url": "https://artificialcorner.com/?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "Artificial Corner"}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "You\u2019re Using ChatGPT Wrong! Here\u2019s How to Be Ahead of 99% of ChatGPT UsersMaster ChatGPT by learning prompt engineering."}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "\u00b77 min read\u00b7Mar 17"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fartificial-corner%2F886a50dabc54&operation=register&redirect=https%3A%2F%2Fartificialcorner.com%2Fyoure-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54&user=The+PyCoach&userId=fb44e21903f3&source=-----886a50dabc54----1-----------------clap_footer----6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "276"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F886a50dabc54&operation=register&redirect=https%3A%2F%2Fartificialcorner.com%2Fyoure-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54&source=-----195ce21dd437----1-----------------bookmark_preview----6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://medium.com/@mattchapmanmsc?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://medium.com/@mattchapmanmsc?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "Matt Chapman"}, {"url": "https://towardsdatascience.com/?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "The Portfolio that Got Me a Data Scientist JobSpoiler alert: It was surprisingly easy (and free) to make"}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "\u00b710 min read\u00b7Mar 24"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F513cc821bfe4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4&user=Matt+Chapman&userId=bf7d13fc53db&source=-----513cc821bfe4----0-----------------clap_footer----6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=read_next_recirc-----195ce21dd437----0---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "42"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F513cc821bfe4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4&source=-----195ce21dd437----0-----------------bookmark_preview----6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://betterprogramming.pub/how-to-build-your-own-custom-chatgpt-with-custom-knowledge-base-4e61ad82427e?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://medium.com/@timothymugayi?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://medium.com/@timothymugayi?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "Timothy Mugayi"}, {"url": "https://betterprogramming.pub/?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "Better Programming"}, {"url": "https://betterprogramming.pub/how-to-build-your-own-custom-chatgpt-with-custom-knowledge-base-4e61ad82427e?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "How To Build Your Own Custom ChatGPT With Custom Knowledge BaseFeed your ChatGPT bot with custom data sources"}, {"url": "https://betterprogramming.pub/how-to-build-your-own-custom-chatgpt-with-custom-knowledge-base-4e61ad82427e?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "\u00b711 min read\u00b7Apr 7"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fbetter-programming%2F4e61ad82427e&operation=register&redirect=https%3A%2F%2Fbetterprogramming.pub%2Fhow-to-build-your-own-custom-chatgpt-with-custom-knowledge-base-4e61ad82427e&user=Timothy+Mugayi&userId=34774d6cac27&source=-----4e61ad82427e----1-----------------clap_footer----6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://betterprogramming.pub/how-to-build-your-own-custom-chatgpt-with-custom-knowledge-base-4e61ad82427e?source=read_next_recirc-----195ce21dd437----1---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "83"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4e61ad82427e&operation=register&redirect=https%3A%2F%2Fbetterprogramming.pub%2Fhow-to-build-your-own-custom-chatgpt-with-custom-knowledge-base-4e61ad82427e&source=-----195ce21dd437----1-----------------bookmark_preview----6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://medium.com/trigger-ai/mlops-in-practice-machine-learning-ml-model-deployment-patterns-part-1-ce7cb575feda?source=read_next_recirc-----195ce21dd437----2---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://medium.com/@weiyunna91?source=read_next_recirc-----195ce21dd437----2---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://medium.com/@weiyunna91?source=read_next_recirc-----195ce21dd437----2---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "YUNNA WEI"}, {"url": "https://medium.com/trigger-ai?source=read_next_recirc-----195ce21dd437----2---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "Efficient Data+AI Stack"}, {"url": "https://medium.com/trigger-ai/mlops-in-practice-machine-learning-ml-model-deployment-patterns-part-1-ce7cb575feda?source=read_next_recirc-----195ce21dd437----2---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "MLOps in Practice \u2014 Machine Learning (ML) model deployment patterns (Part 1)Machine Learning (ML) model serving and deployment is one of the most critical components of any solid ML solution architecture. This\u2026"}, {"url": "https://medium.com/trigger-ai/mlops-in-practice-machine-learning-ml-model-deployment-patterns-part-1-ce7cb575feda?source=read_next_recirc-----195ce21dd437----2---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "\u00b711 min read\u00b7Jan 26"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftrigger-ai%2Fce7cb575feda&operation=register&redirect=https%3A%2F%2Fmedium.com%2Ftrigger-ai%2Fmlops-in-practice-machine-learning-ml-model-deployment-patterns-part-1-ce7cb575feda&user=YUNNA+WEI&userId=4b47aa84fc4&source=-----ce7cb575feda----2-----------------clap_footer----6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://medium.com/trigger-ai/mlops-in-practice-machine-learning-ml-model-deployment-patterns-part-1-ce7cb575feda?source=read_next_recirc-----195ce21dd437----2---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fce7cb575feda&operation=register&redirect=https%3A%2F%2Fmedium.com%2Ftrigger-ai%2Fmlops-in-practice-machine-learning-ml-model-deployment-patterns-part-1-ce7cb575feda&source=-----195ce21dd437----2-----------------bookmark_preview----6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----195ce21dd437----3---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://medium.com/@arthurmello_?source=read_next_recirc-----195ce21dd437----3---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://medium.com/@arthurmello_?source=read_next_recirc-----195ce21dd437----3---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "Arthur Mello"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----195ce21dd437----3---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----195ce21dd437----3---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "Exploratory Data Analysis: The Ultimate WorkflowExplore the true potential of your data with Python"}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----195ce21dd437----3---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": "\u00b716 min read\u00b7Apr 20"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Fa82b1d21f747&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fexploratory-data-analysis-the-ultimate-workflow-a82b1d21f747&user=Arthur+Mello&userId=9d32d5e0ac40&source=-----a82b1d21f747----3-----------------clap_footer----6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----195ce21dd437----3---------------------6d053a14_2b77_4c51_b52f_65f6d27cf244-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "5"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa82b1d21f747&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fexploratory-data-analysis-the-ultimate-workflow-a82b1d21f747&source=-----195ce21dd437----3-----------------bookmark_preview----6d053a14_2b77_4c51_b52f_65f6d27cf244-------", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "See more recommendations"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----195ce21dd437--------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=post_page-----195ce21dd437--------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}