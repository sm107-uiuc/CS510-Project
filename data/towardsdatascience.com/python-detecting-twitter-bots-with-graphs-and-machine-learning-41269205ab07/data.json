{"url": "https://towardsdatascience.com/python-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07", "time": 1683012103.9424808, "path": "towardsdatascience.com/python-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07/", "webpage": {"metadata": {"title": "Python: Detecting Twitter Bots with Graphs and Machine Learning | by Gabriel Faucher | Towards Data Science", "h1": "Python: Detecting Twitter Bots with Graphs and Machine Learning", "description": "The uptick in Twitter user activity during the recent lockdown made it seem like a good place to start looking for a quarantine project to increase my competency with machine learning. Specifically\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.engadget.com/twitter-q1-2020-112603005.html", "anchor_text": "uptick", "paragraph_index": 0}, {"url": "https://allianceforscience.cornell.edu/blog/2020/04/covid-top-10-current-conspiracy-theories/", "anchor_text": "baffling", "paragraph_index": 0}, {"url": "https://www.nbcnews.com/think/opinion/covid-19-conspiracies-get-embraced-trump-right-wing-media-because-ncna1235238", "anchor_text": "conspiracies", "paragraph_index": 0}, {"url": "https://arxiv.org/pdf/1910.01180.pdf", "anchor_text": "few", "paragraph_index": 7}, {"url": "https://www.aclweb.org/anthology/R19-1065.pdf", "anchor_text": "attempts", "paragraph_index": 7}, {"url": "https://developer.twitter.com/en/apply-for-access", "anchor_text": "here", "paragraph_index": 8}, {"url": "http://docs.tweepy.org/en/latest/auth_tutorial.html", "anchor_text": "in its docs", "paragraph_index": 8}, {"url": "https://botometer.iuni.iu.edu/bot-repository/index.html", "anchor_text": "Bot Repository", "paragraph_index": 11}, {"url": "https://towardsdatascience.com/python-identifying-twitter-influencers-through-network-analysis-964c9b293e03", "anchor_text": "Jacob Moore\u2019s tutorial", "paragraph_index": 11}, {"url": "https://www.youtube.com/watch?v=VwVg9jCtqaU", "anchor_text": "this video", "paragraph_index": 20}, {"url": "https://arxiv.org/pdf/2003.04819.pdf", "anchor_text": "Karate Club", "paragraph_index": 23}, {"url": "https://karateclub.readthedocs.io/en/latest/modules/root.html#karateclub.graph_embedding.graph2vec.Graph2Vec", "anchor_text": "Graph2Vec", "paragraph_index": 23}, {"url": "https://towardsdatascience.com/overview-of-deep-learning-on-graph-embeddings-4305c10ad4a4", "anchor_text": "this writeup", "paragraph_index": 23}, {"url": "https://arxiv.org/pdf/1707.05005.pdf", "anchor_text": "this white paper", "paragraph_index": 23}, {"url": "https://xgboost.readthedocs.io/en/latest/", "anchor_text": "XGBoost", "paragraph_index": 27}, {"url": "https://botometer.iuni.iu.edu/#!/", "anchor_text": "Botometer classification model", "paragraph_index": 33}], "all_paragraphs": ["The uptick in Twitter user activity during the recent lockdown made it seem like a good place to start looking for a quarantine project to increase my competency with machine learning. Specifically, as misinformation and baffling conspiracies took hold of the U.S.\u2019s online population, trying to come up with new ways to identify bad actors seemed like more and more of a relevant task.", "In this post, I\u2019ll be demonstrating, with the help of some useful Python network graphing and machine learning packages, how to build a model for predicting whether Twitter users are humans or bots, using only a minimum viable graph representation of each user.", "5. Closing thoughts / Room for Improvement", "All programming, data collection, etc. was done in a Jupyter Notebook. Libraries used:", "Finally, four resources were key to this task, which I will discuss later in this writeup:", "While bot detection as a goal is nothing new, to the extent that a project like this would have been impossible without drawing on the prior and vital work referenced above, there were a few topics within the problem space that I thought could be further explored.", "The first was scale and reduction. I wouldn\u2019t describe my data science expertise at any level above \u201chobbyist\u201d, and as such, processing power and Twitter API access were both factors I had to keep in mind. I knew I wouldn\u2019t be able to replicate the accuracy of models by larger, more established groups, so instead one of the things I set out to investigate was how scalable and accurate of a classification model could be made given these limitations.", "The second was the type of user data used in classification. I found several models that drew on a variety of different elements of users\u2019 profiles, from the text content of tweets to the length of usernames or the profile pictures used. However, I found only a few attempts at doing the same with features based on graphs of users\u2019 social networks. By chance, this graph-based method also ended up being the best way for me to collect just enough data on each user to use for later classification without coming up against Twitter\u2019s API limits.", "First things first, when working with Twitter, you\u2019ll need developer API access. If you haven\u2019t already, you can apply for it here, and Tweepy (the Twitter API wrapper I\u2019ll be using throughout this writeup) has more information on the authentication process in its docs.", "Once you\u2019ve done so, you\u2019ll need to create an instance of the API with your credentials, like so.", "In order to train a model, I would need a database of Twitter usernames and existing labels, as well as a way to quickly collect relevant data about each user.", "The database I ended up settling on was IUNI\u2019s excellent Bot Repository, which contains thousands of labeled human and bot accounts in TSV and JSON format. The second part was a bit harder. At first, I tried to generate graph representations of each user\u2019s entire timeline, but this could take more than a day per user for some more prolific users, due to API limits. The best format for a smaller graph ended up being Jacob Moore\u2019s tutorial for identifying Twitter influencers using Eigenvector Centrality.", "I won\u2019t repeat the full explanation of how his script works, or what Eigencentrality is, because both of those things are there in his tutorial better than I could put them, but from a high-level view, his script takes a Twitter user (or a keyword, but I didn\u2019t end up using that functionality) as input, and outputs a CSV with an edge list of users weighted by how much \u201cinfluence\u201d they have on the given user\u2019s interactions on Twitter. It additionally outputs an iGraph object, which we\u2019ll be writing to a GML file that we\u2019ll use going forwards as a unique representation of each user.", "You\u2019ll need the functionality of the TweetGrabber, RetweetParser, and TweetGraph classes from his tutorial. The next step is to create a TweetGrabber instance with your API keys, and perform a search on your selected Twitter user.", "Lines 27 and 28 of the above code create a \u2018size\u2019 attribute for each vertex that holds its Eigencentrality value, meaning that when we write the created iGraph object to a GML file, as we do in line 31, that file will contain all the information we need on the user, and the previously created CSV can be discarded. Additionally, if you\u2019d like, you can uncomment lines 33\u201338 to plot and view the graph, which will likely look something like this:", "To build the database I would be training my classification model on, I added each of the usernames and labels collected from the Bot Repository into a pandas DataFrame, and iterated through it, running this script with each of the usernames as input. This part of the process was the most time-intensive, taking several hours, but the result, after dropping empty or deleted accounts from the frame, was just over 20,000 user graphs with \u2018ground truth\u2019 labels for classification. Next step: formatting this data to train the model.", "But first, a brief refresher on what a model is (if you\u2019re familiar, you can skip to \u2018At this point in the process\u2026\u2019).", "The goal of a machine learning model is to look at a bunch of information (features) about something , and then to use that information to try and predict a specific statement (or label) about that thing.", "For example, this could be a model that takes a person\u2019s daily diet and tries to predict the amount of plaque they would have on their teeth, or this could be a model that takes the kinds of stores a person shops at regularly and tries to predict their hair colour. A model like the first, where the information about the person is more strongly correlated to the characteristic being predicted (diet probably has more impact on dental health than shopping habits do on hair colour), is usually going to be more successful.", "The way a model like this is created and is \u201ctaught\u201d to more accurately make these predictions is by being exposing it to a large number of somethings that have their features and labels already given. Through \u201cstudying\u201d these provided examples, the model ideally \u201clearns\u201d what features are the most correlated with one label or another. E.g. if the database your model is \u201cstudying\u201d contains information on a bunch of people who have the feature \u201ceats marshmallows for breakfast\u201d, and most of these people coincidentally tend to have higher amounts of plaque, your model is probably going to be able to predict that if an unlabeled person also eats marshmallows for breakfast, their teeth won\u2019t be looking so hot.", "For a better and more comprehensive explanation, I\u2019d recommend this video.", "At this point in the process, we have a database of somethings (Twitter users), each for which we also have information (their graph) and a yes/no statement (whether or not they\u2019re a bot). However, this brings us to our next step, which is a crucial one in the creation of a model \u2014 how to convert these graphs to input features. Providing a model with too much irrelevant information can make it take longer to \u201clearn\u201d from the input, or worse, make its prediction less accurate.", "What\u2019s the most efficient way to represent each user\u2019s graph for our model, without losing any important information?", "That\u2019s where Karate Club comes in. Specifically, Graph2Vec, a whole-graph \u201cembedding\u201d library that takes an arbitrarily-sized graph such as the one in the above image, and embeds it as a lower-dimensional vector. For more information about graph embedding (including Graph2Vec specifically), I\u2019d recommend this writeup, as well as this white paper. Long story short, Graph2Vec converts graphs into denser representations that preserve properties like structure and information, which is exactly the kind of thing we want for our input features.", "In order to do so, we\u2019ll need to convert our graphs into a format that\u2019s compatible with Graph2Vec. For me, the process looked like this:", "The end result will look something like the following:", "Not pretty to human eyes, but combined with our labels, exactly what we\u2019ll need for creating the classification model. I repeated this process for each labeled user and stored the results in another pandas DataFrame, so that now I had a DataFrame of ~20,000 rows and 65 columns, 64 of which were vectors describing the user\u2019s graph, and the 65th being the \u201cground truth\u201d label of whether that user was a bot or a human. Now, on to the final step.", "Since our goal is classification (predicting whether each \u201csomething\u201d should be placed in one of two categories, in this case a bot or a human), I opted to use XGBoost\u2019s XGBClassifier model. XGBoost uses gradient boosting to optimize predictions for regression and classification problems, resulting in, in my experience, more accurate predictions than most other options out there.", "From here, there are two different options:", "If your goal is to train your own model to make predictions with and modify, and you have a database of user graph vectors and labels to do so with, you\u2019ll need to fit the classification model to your database. This was my process:", "If your goal is just to try to predict the human-ness or bot-ness of a single user you\u2019ve graphed and vectorized, that\u2019s fine too. I\u2019ve included a JSON file that you can load my model from in my GitHub, which is linked to in my profile. Here\u2019s what that process would look like:", "And that\u2019s it! You should be looking at the predicted label for the account you started with.", "There are a number of things that could be improved about my model, and which I hope to revisit someday.", "First and foremost is accuracy. While the Botometer classification model that IUNI has built from their Bot Repository demonstrates nearly 100% accuracy at classification on the testing data set, mine demonstrates 79% accuracy. This makes sense, as I\u2019m using a lower number of features to predict each user\u2019s labels, but I\u2019m confident that there is a middle ground between my minimalist approach and IUNI\u2019s, and I would be interested in trying to combine graph-based, text-based, and profile-based classification methods.", "Another, which ties into accuracy, is the structure of the graphs themselves. Igraph is able to compute the Eigenvector centrality for each node in a graph, but also includes a number of other node-based measurements, such as closeness, betweenness, or an optimized combination of multiple measurements.", "Finally, two things make it difficult to test and improve upon the accuracy of this model at scale. The first is that due to my limited understanding of vector embedding, it\u2019s difficult for me to identify what features lead to accurate or inaccurate labeling. The second is how accurate results on the testing data set would be to Twitter\u2019s ecosystem today. As bots are detected, the field evolves, and methods for detection will have to evolve as well. Towards that end, I\u2019ve been skimming trending topics from Twitter throughout the quarantine for users to apply this model to, but I think that will have to wait for a later post.", "Thank you for reading! Please let me know in the comments if you have any questions or feedback.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F41269205ab07&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----41269205ab07--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----41269205ab07--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@gabriel_40900?source=post_page-----41269205ab07--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@gabriel_40900?source=post_page-----41269205ab07--------------------------------", "anchor_text": "Gabriel Faucher"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcf99749c8ff3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&user=Gabriel+Faucher&userId=cf99749c8ff3&source=post_page-cf99749c8ff3----41269205ab07---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F41269205ab07&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F41269205ab07&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@alinnnaaaa?utm_source=medium&utm_medium=referral", "anchor_text": "Alina Grubnyak"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.engadget.com/twitter-q1-2020-112603005.html", "anchor_text": "uptick"}, {"url": "https://allianceforscience.cornell.edu/blog/2020/04/covid-top-10-current-conspiracy-theories/", "anchor_text": "baffling"}, {"url": "https://www.nbcnews.com/think/opinion/covid-19-conspiracies-get-embraced-trump-right-wing-media-because-ncna1235238", "anchor_text": "conspiracies"}, {"url": "https://botometer.iuni.iu.edu/bot-repository/index.html", "anchor_text": "Bot Repository"}, {"url": "https://towardsdatascience.com/python-identifying-twitter-influencers-through-network-analysis-964c9b293e03", "anchor_text": "Jacob Moore\u2019s tutorial"}, {"url": "https://github.com/benedekrozemberczki/karateclub", "anchor_text": "Karate Club"}, {"url": "https://xgboost.readthedocs.io/en/latest/", "anchor_text": "XGBoost"}, {"url": "https://arxiv.org/pdf/1910.01180.pdf", "anchor_text": "few"}, {"url": "https://www.aclweb.org/anthology/R19-1065.pdf", "anchor_text": "attempts"}, {"url": "https://developer.twitter.com/en/apply-for-access", "anchor_text": "here"}, {"url": "http://docs.tweepy.org/en/latest/auth_tutorial.html", "anchor_text": "in its docs"}, {"url": "https://botometer.iuni.iu.edu/bot-repository/index.html", "anchor_text": "Bot Repository"}, {"url": "https://towardsdatascience.com/python-identifying-twitter-influencers-through-network-analysis-964c9b293e03", "anchor_text": "Jacob Moore\u2019s tutorial"}, {"url": "https://www.youtube.com/watch?v=VwVg9jCtqaU", "anchor_text": "this video"}, {"url": "https://arxiv.org/pdf/2003.04819.pdf", "anchor_text": "Karate Club"}, {"url": "https://karateclub.readthedocs.io/en/latest/modules/root.html#karateclub.graph_embedding.graph2vec.Graph2Vec", "anchor_text": "Graph2Vec"}, {"url": "https://towardsdatascience.com/overview-of-deep-learning-on-graph-embeddings-4305c10ad4a4", "anchor_text": "this writeup"}, {"url": "https://arxiv.org/pdf/1707.05005.pdf", "anchor_text": "this white paper"}, {"url": "https://xgboost.readthedocs.io/en/latest/", "anchor_text": "XGBoost"}, {"url": "https://botometer.iuni.iu.edu/#!/", "anchor_text": "Botometer classification model"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----41269205ab07---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/python?source=post_page-----41269205ab07---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-science?source=post_page-----41269205ab07---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/twitter?source=post_page-----41269205ab07---------------twitter-----------------", "anchor_text": "Twitter"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F41269205ab07&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&user=Gabriel+Faucher&userId=cf99749c8ff3&source=-----41269205ab07---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F41269205ab07&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&user=Gabriel+Faucher&userId=cf99749c8ff3&source=-----41269205ab07---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F41269205ab07&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----41269205ab07--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F41269205ab07&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----41269205ab07---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----41269205ab07--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----41269205ab07--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----41269205ab07--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----41269205ab07--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----41269205ab07--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----41269205ab07--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----41269205ab07--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----41269205ab07--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@gabriel_40900?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@gabriel_40900?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Gabriel Faucher"}, {"url": "https://medium.com/@gabriel_40900/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "28 Followers"}, {"url": "https://github.com/Gabrieliam", "anchor_text": "https://github.com/Gabrieliam"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcf99749c8ff3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&user=Gabriel+Faucher&userId=cf99749c8ff3&source=post_page-cf99749c8ff3--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F9336ddf8025d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-detecting-twitter-bots-with-graphs-and-machine-learning-41269205ab07&newsletterV3=cf99749c8ff3&newsletterV3Id=9336ddf8025d&user=Gabriel+Faucher&userId=cf99749c8ff3&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}