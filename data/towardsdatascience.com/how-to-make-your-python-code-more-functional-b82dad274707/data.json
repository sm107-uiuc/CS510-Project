{"url": "https://towardsdatascience.com/how-to-make-your-python-code-more-functional-b82dad274707", "time": 1683012271.932959, "path": "towardsdatascience.com/how-to-make-your-python-code-more-functional-b82dad274707/", "webpage": {"metadata": {"title": "How to make your Python code more functional | by Ari Joury, PhD | Towards Data Science", "h1": "How to make your Python code more functional", "description": "Functional programming has been getting more and more popular in recent years. Not only is it perfectly suited for tasks like data analysis and machine learning. It\u2019s also a powerful way to make code\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.haskell.org/communities/05-2018/html/report.html", "anchor_text": "data analysis", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/functional-programming-for-deep-learning-bc7b80e347e9", "anchor_text": "machine learning", "paragraph_index": 0}, {"url": "https://elm-lang.org", "anchor_text": "Elm", "paragraph_index": 1}, {"url": "https://www.haskell.org", "anchor_text": "Haskell", "paragraph_index": 1}, {"url": "https://www.scala-lang.org", "anchor_text": "Scala", "paragraph_index": 1}, {"url": "https://www.rust-lang.org", "anchor_text": "Rust", "paragraph_index": 1}, {"url": "https://medium.com/@DakshHub/lambdas-the-companion-of-modern-c-b7dfd43b5abb", "anchor_text": "C++", "paragraph_index": 1}, {"url": "https://stackabuse.com/functional-programming-in-python/", "anchor_text": "increment each element", "paragraph_index": 12}, {"url": "https://realpython.com/primer-on-python-decorators/", "anchor_text": "doesn\u2019t imply", "paragraph_index": 21}, {"url": "https://docs.python.org/3/howto/functional.html#small-functions-and-the-lambda-expression", "anchor_text": "small function", "paragraph_index": 29}, {"url": "https://docs.python.org/3/howto/functional.html#the-functools-module", "anchor_text": "few more", "paragraph_index": 41}, {"url": "https://arijoury.medium.com/membership", "anchor_text": "https://arijoury.medium.com/membership", "paragraph_index": 47}], "all_paragraphs": ["Functional programming has been getting more and more popular in recent years. Not only is it perfectly suited for tasks like data analysis and machine learning. It\u2019s also a powerful way to make code easier to test and maintain.", "The trend is easy to see: Even though they\u2019re still in a bit of a niche, purely functional languages like Elm and Haskell are gaining traction. Languages that are somewhat functional, like Scala and Rust, are taking off. And popular languages like C++ and Python are adding more and more pieces of functional programming to their repertoire.", "If you\u2019ve used to object-oriented code, writing functional programs can seem scary at first. The good news is that you can mix-and-match functional and object-oriented code pretty well. A few tweaks from functional programming are often enough to reap some benefits. So let\u2019s get to it!", "The pesky thing with non-functional programming is that functions can have side effects. That is, they make use of variables that don\u2019t necessarily appear in the declaration of the function.", "Consider this simple example, where we\u2019re adding two numbers:", "The global variable b doesn\u2019t appear in the declaration of add_ab, so if you want to debug it, you\u2019ll have to check that b is in fact used. Sounds simple, but it can get tedious with bigger programs. We can fix this easily by being honest about what we\u2019re putting into the function:", "This is just a dumb little example. But with larger programs, you\u2019ll notice how much easier you can understand and debug the code when you don\u2019t need to worry about side-effects.", "In functional programming, you can nest functions: either you design a function that takes another function as an argument, or you code a function that returns another function.", "As an example for a function that takes another function, consider that you have an array of numbers and you\u2019d like to calculate the sine, cosine, and exponential of that array. You could, in theory, write it like this (numpy is a Python package for maths):", "This is nice and simple, but it\u2019s kind of annoying to write three different functions with the exact same structure. Instead, we can write a function that takes the other functions like so:", "Not only is this more concise and nicer to read. It\u2019s also easier to expand because you only need to add one line for a new function, instead of three in the example above.", "You can also turn the concept of a function in a function upside down: Not only can you make a function take another function as an argument; you can also make it return an argument.", "Imagine you have an array of numbers, and you need to increment each element of the array by 2:", "If you want to increment the elements of an array by something else, you could, of course, copy-paste this function and replace the 2 by that increment. But there\u2019s a more elegant solution: we can write a function that takes any increment and returns another function that performs what add2 does, but for whichever increment.", "With this routine, each new function takes one line to define instead of five. And like the function that takes a function, the function returning a function is easier to debug: if you had a bug in add_num, you\u2019d only have to fix that. You don\u2019t need to go back and fix add2 and whichever other function you might have defined in the same way. The bigger programs get, more this pays off.", "Note that even though add_num is written in a functional style, it isn\u2019t purely functional. It has one side effect, numbers, which makes it an impure function. But that\u2019s okay: you don\u2019t need to be a slave to one programming paradigm; instead, you can get the best of each to maximize your productivity.", "Of course you can combine the two approaches from above and write a function that not only takes a function as an argument, but returns a function as well. Consider this code, where we\u2019re expanding on the add_num function from above:", "One difference to the example above is that you can customize the message that is output on the screen. In a bigger program, you could expand that to account for different error messages, for example.", "The line message1 = add_num(message1) is where the magic happens: the name message1 now points to the inner layer of add_num, i.e., to add_inc. This is called a decoration.", "The other difference is that the argument increment has been pushed downwards; this just makes it easier to handle the next step.", "We can make the decoration even nicer with the @ syntax (the def add_num part will stay the same):", "In effect, this is just an even neater way of writing a decoration. Note that using decorators doesn\u2019t imply that your code is functional. Rather, decorators are inspired by functional programming, just like nested functions are. The above example isn\u2019t purely functional since it contains two side-effects, but it\u2019s inspired by functional programming nevertheless.", "List comprehensions and generator expressions are concepts that Python copied from Haskell, a purely functional programming language. Consider the following example, where we\u2019re trying to calculate a few square numbers:", "That\u2019s quite clunky since we need to define two arrays and write a for loop. A much more concise and elegant way is to do this with a list comprehension:", "You can select only particular elements by adding an if condition. For example, let\u2019s say we only want those square numbers that are even:", "List comprehensions store all values of a list in the memory. That\u2019s wonderful for small objects, but they would make your program rather sluggish if you\u2019re dealing with large lists. That\u2019s where generator expressions come into play:", "Generator expressions don\u2019t evaluate the objects immediately. That\u2019s why you just see a funny expression if you try to call them (the exact form of the output depends on your OS). However, they make them accessible for later. You can call an element of a generator expression like this:", "Or you could create a list of the first few elements in the generator expression like so:", "As with the other tricks, this doesn\u2019t automatically make your code purely functional. It\u2019s just a concept borrowed from functional programming that can be useful in many situations.", "If you want to write a small function, there is nothing wrong in writing it like this:", "However, you could also use a lambda-expression:", "It\u2019s practically the same length, and it\u2019s pretty readable once you\u2019ve got used to the syntax. Whether you use it or not really depends on your personal taste. But as we\u2019ll see below, it can be quite handy in certain situations.", "Like with the above, using lambda-expressions won\u2019t necessarily make your code functional, even though they are a key idea of functional programming.", "The function map() basically returns generator expressions. This is a simple example:", "As you saw earlier, you can do the same thing with a list comprehension. Sometimes your code can be a bit more readable, however, when you use the map() function.", "This is analogous to a list comprehension with an if clause, for example like so:", "You can also nest map() and filter() like so:", "If you\u2019re looping through a list and you need to keep track of the indexes, enumerate() is a good option:", "If you need to create tuples from two lists, you can use zip():", "The list() is wrapped around this expression because zip() only returns iterables like generator expressions do.", "Sometimes you\u2019ll have a function that takes a few arguments, but you need to fix a few. Consider this simple example:", "There are a few more functions apart from functools.partial() in this module, but this is by far the most important one. As before, partial() doesn\u2019t always lead to functional code, but it\u2019s a neat concept that\u2019s borrowed from functional programming.", "When you started out coding, you probably heard a lot about object-oriented programming, and not very much about functional programming. That does make sense, since object-oriented programming is extremely useful.", "But in recent years, we\u2019ve been encountering more and more problems that are easier to crack when you have some skills in functional programming.", "You don\u2019t need to learn a functional programming language like Elm or Haskell right away. Instead, you can take the most useful aspects of them and use them directly in your Python code.", "Once you know the tricks, you\u2019ll see opportunities to use them all over the place. Happy coding!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Lost in my thoughts, mostly about tech. https://arijoury.medium.com/membership"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb82dad274707&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b82dad274707--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b82dad274707--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://arijoury.medium.com/?source=post_page-----b82dad274707--------------------------------", "anchor_text": ""}, {"url": "https://arijoury.medium.com/?source=post_page-----b82dad274707--------------------------------", "anchor_text": "Ari Joury, PhD"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F593908e0206&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&user=Ari+Joury%2C+PhD&userId=593908e0206&source=post_page-593908e0206----b82dad274707---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb82dad274707&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb82dad274707&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@davidclode?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "David Clode"}, {"url": "https://unsplash.com/s/photos/python?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://www.haskell.org/communities/05-2018/html/report.html", "anchor_text": "data analysis"}, {"url": "https://towardsdatascience.com/functional-programming-for-deep-learning-bc7b80e347e9", "anchor_text": "machine learning"}, {"url": "https://elm-lang.org", "anchor_text": "Elm"}, {"url": "https://www.haskell.org", "anchor_text": "Haskell"}, {"url": "https://www.scala-lang.org", "anchor_text": "Scala"}, {"url": "https://www.rust-lang.org", "anchor_text": "Rust"}, {"url": "https://medium.com/@DakshHub/lambdas-the-companion-of-modern-c-b7dfd43b5abb", "anchor_text": "C++"}, {"url": "https://towardsdatascience.com/why-developers-are-falling-in-love-with-functional-programming-13514df4048e", "anchor_text": "Why developers are falling in love with functional programmingFrom Python to Haskell, the trend isn\u2019t going away anytime soontowardsdatascience.com"}, {"url": "https://unsplash.com/@thisisengineering?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "ThisisEngineering RAEng"}, {"url": "https://unsplash.com/s/photos/mathematics?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://stackabuse.com/functional-programming-in-python/", "anchor_text": "increment each element"}, {"url": "https://unsplash.com/@_ferh97?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Fernando Hernandez"}, {"url": "https://unsplash.com/s/photos/developer?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://realpython.com/primer-on-python-decorators/", "anchor_text": "doesn\u2019t imply"}, {"url": "https://towardsdatascience.com/elements-of-functional-programming-in-python-1b295ea5bbe0", "anchor_text": "Elements of Functional Programming in PythonLearn how to how to use the lambda, map, filter, and reduce functions in Python to transform data structures.towardsdatascience.com"}, {"url": "https://unsplash.com/@nesabymakers?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "NESA by Makers"}, {"url": "https://unsplash.com/s/photos/code?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://docs.python.org/3/howto/functional.html#small-functions-and-the-lambda-expression", "anchor_text": "small function"}, {"url": "https://docs.python.org/3/howto/functional.html#the-functools-module", "anchor_text": "few more"}, {"url": "https://towardsdatascience.com/the-ultimate-guide-to-writing-better-python-code-1362a1209e5a", "anchor_text": "The ultimate guide to writing better Python codeMaking your software faster, more readable and maintainable doesn\u2019t need to be so hardtowardsdatascience.com"}, {"url": "https://medium.com/tag/programming?source=post_page-----b82dad274707---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----b82dad274707---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/functional-programming?source=post_page-----b82dad274707---------------functional_programming-----------------", "anchor_text": "Functional Programming"}, {"url": "https://medium.com/tag/software-development?source=post_page-----b82dad274707---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----b82dad274707---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb82dad274707&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&user=Ari+Joury%2C+PhD&userId=593908e0206&source=-----b82dad274707---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb82dad274707&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&user=Ari+Joury%2C+PhD&userId=593908e0206&source=-----b82dad274707---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb82dad274707&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b82dad274707--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb82dad274707&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b82dad274707---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b82dad274707--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b82dad274707--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b82dad274707--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b82dad274707--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b82dad274707--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b82dad274707--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b82dad274707--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b82dad274707--------------------------------", "anchor_text": ""}, {"url": "https://arijoury.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://arijoury.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ari Joury, PhD"}, {"url": "https://arijoury.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "6.2K Followers"}, {"url": "https://arijoury.medium.com/membership", "anchor_text": "https://arijoury.medium.com/membership"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F593908e0206&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&user=Ari+Joury%2C+PhD&userId=593908e0206&source=post_page-593908e0206--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F1b4593a6442&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-your-python-code-more-functional-b82dad274707&newsletterV3=593908e0206&newsletterV3Id=1b4593a6442&user=Ari+Joury%2C+PhD&userId=593908e0206&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}