{"url": "https://towardsdatascience.com/understand-loops-in-python-with-one-article-bace2ddba789", "time": 1683015788.302769, "path": "towardsdatascience.com/understand-loops-in-python-with-one-article-bace2ddba789/", "webpage": {"metadata": {"title": "Understand Loops in Python with One Article | by Julian Herrera | Towards Data Science", "h1": "Understand Loops in Python with One Article", "description": "Being able to delegate the automation of routinary tasks to computers is an invaluable skill which every programmer should master in order to improve their coding skills and code accuracy. The number\u2026"}, "outgoing_paragraph_urls": [{"url": "http://herrera.ajulian@gmail.com", "anchor_text": "email", "paragraph_index": 48}, {"url": "http://www.linkedin.com/in/julianherrera-lnkd", "anchor_text": "www.linkedin.com/in/julianherrera-lnkd", "paragraph_index": 50}], "all_paragraphs": ["Computers are great at performing repetitive tasks over and over, as they never \u201cget bored\u201d or make mistakes. A simple calculation requested to a computer could be performed one or a thousand times, and the first result will be as accurate as the last one. This is something humans are not capable of guaranteeing.", "Being able to delegate the automation of routinary tasks to computers is an invaluable skill which every programmer should master in order to improve their coding skills and code accuracy.", "The number of tasks available to perform with the help of loops ranges from copying files to a group of computers on the network, sending personalized emails to certain users or verifying that a process is still running.", "In Python, Loops can be me implemented in three ways:", "During this article, I\u2019ll explain these techniques considering that each one takes a slightly different approach. You\u2019ll learn how to write the code and how to understand when to use one technique instead of the others.", "This technique instructs the computer to continuously execute a code based on the value of a condition. It begins with the keyword while, followed by a comparison to be evaluated, then a colon. On the next line is the code block to be executed, indented to the right. Similar to an if statement, the code in the body will only be executed if the comparison is evaluated to be true.", "What sets a while loop apart, however, is that the code block will keep executing as long as the evaluation statement is true. Once the statement is no longer true, the loop exits and the next line of code will be executed.", "Take a look a the following example:", "Let\u2019s go through each line of code inside this loop:", "And because 1 here is still smaller than 5, it executes the body of the loop again. The computer will keep doing this until the condition isn\u2019t true anymore. In this example, the condition will be false when \u201ci\u201d is no longer smaller than 5. Once the condition is False, the loop finishes, and the next line of the code is executed.", "As previously told, while loops use the condition to check whether to exit from the loop structure. The body of the while loop needs to make sure that the condition being checked will change. If it doesn\u2019t change, the loop may never finish and we get what\u2019s called an infinite loop, a loop that keeps executing and never stops.", "Take the following code as an example. As in the previous case, we initialized the \u201ci\u201d variable, but forgot to add an index inside the loop to refresh the variable in each iteration. As a consequence, the loop will run until we manually interrupt it with the CTRL+C commands:", "In order to avoid this issue, it\u2019s a good idea to take a moment to consider the different values a variable can take. This helps you make sure the loop won\u2019t get stuck during the iteration.", "While you need to watch out for infinite loops, they are not always a bad thing.", "Sometimes you actually want your program to execute continuously until some external condition is met.", "If you\u2019ve used the ping utility on Linux or macOS system, or ping-t on a Windows system, you\u2019ve seen an infinite loop in action. This tool will keep sending packets and printing the results to the terminal unless you send it the interrupt signal, usually pressing Ctrl+C.", "In Python, we usually create our loops with an automatic indication to interrupt the iteration with the keyword break, which you can see in the code below, to signal that the current loop should stop running:", "As you can see, the indicated procedure was to add 1 to the variable \u201ci\u201d for each iteration, until it reaches a value of 10, when it should interrupt the process. The logic of the code would be something like this:", "A for loop iterates over a sequence of values. A very simple example of a for loop is to iterate over a sequence of numbers, for example from 0 to 4.", "Notice that the structure is kind of similar to the structures of while loops. The first line indicates the distinguishing for keyword and it ends with a colon. The body of the loop is indented to the right, like in the while loop, the if block, and the function definitions. What\u2019s different in this case is that we have the keyword in.", "Also, between the for keyword and in keyword, we have the name of a variable, in this case \u201ci\u201d for \u201cindex\u201d. This variable will take each of the values in the sequence that the loop iterates through. So in this example, it\u2019ll iterate through a sequence of numbers generated using the range() function.", "As a reminder, in Python and a lot of other programming languages, a range of numbers will start with the value 0 by default. In addition, the list of numbers generated will be one less than the given value. In the simple example here, \u201ci\u201d will take the values 0, 1, 2, 3, and 4.", "Well, the power of the for loop is that we can use it to iterate over a sequence of values of any type, not just a range of numbers. For example, we can iterate over a list of string or words:", "The sequence that the for loop iterates over could contain any type of element, not just strings. For example, we could iterate over a list of numbers to calculate the total sum and average.", "In this example, we\u2019re defining a list of values. After that, we\u2019re initializing two variables, some and length, that will update in the body of the for loop. In the for loop, we\u2019re iterating over each of the values in the list, adding the current value to the sum of values, and then also adding 1 to length, which calculates how many elements there are in the list. Once we\u2019ve gone through the whole list, we print out the sum and the average.", "We\u2019ll keep using for loops in our examples every time we want to iterate over the elements of any sequence and operate with them.", "If you\u2019re wondering when you should use for loops and when you should use while loops, there\u2019s a way to tell:", "And if whatever you\u2019re trying to do can be done with either for or while loops, just use whichever one\u2019s your favorite.", "Basically, a Nested Loop is a one or more for loops inside another loop. For example, suppose that you have to prepare the schedule for a tennis tournament with four of our favorite players that will play against each other.", "To prepare our schedule, let\u2019s sort the players with a Python script that will output all possible match pairings. For this, the order of the names matters because for each game, the first name will be the one player and the second name will be the contender. Of course, what we don\u2019t want to do is have a player against itself. To do this, we need to use a conditional that makes sure we only print the pairing when the names are different.", "As you can see, Nested Loops are very useful for solving certain problems, such as sorting players in a tournament.", "As a practical example of the first scenario, let\u2019s try to iterate an integer:", "There are two solutions to this problem, depending on what we\u2019re trying to do:", "Recursion is the third mechanism in Python to loop through a sequence of values in addition to while and for loops.", "While Recursion is a very common technique used in software engineering, it\u2019s not much used in automation tasks. Still, it\u2019s valuable to know about it as you might encounter it in someone else\u2019s code or, even more importantly, you might face a problem where recursion is the best way to solve it.", "Recursion is the repeated application of the same procedure to a smaller problem.", "A great visual example for these methods are Russian nesting dolls:", "As you might see, each doll has a smaller doll inside it. When you open up the doll to find the smaller one inside, you keep going until you reach the smallest doll which can't be opened. Recursion lets us tackle complex problems by reducing the problem to a simpler one.", "Imagine that we want to find how many dolls there are in total, we would need to loop over each doll until we get to the last one and then count how many dolls we\u2019ve opened. That\u2019s recursion in action.", "In programming, recursion is a way of doing a repetitive task by having a function call itself. A recursive function calls itself usually with a modified parameter until it reaches a specific condition. This condition is called the base case.", "In the Russian dolls example, the smallest doll would be the base case. Let\u2019s try a real-life problem, in which we\u2019ll try to code a function that calculates the factorial of a number. In mathematics, the factorial of a positive integer n, denoted by n!, is the product of all positive integers less than or equal to n:", "As you can see in the code above, the function factorial() calls itself in order to solve factorials for numbers greater than 1. Each time the function is executed, it calls itself with a smaller number until it reaches the base case. Once it reaches the base case, it returns the value 1. This loop will keep going until the first factorial() function returns the desired result.", "Because solutions to some specific problems are easier to write and understand when using recursive functions. For example, for IT specialists trying to automate tasks, recursion would be a useful tool to inspect a computer\u2019s directory as each directory will contain sub-directories which contain files.", "The base case would be a directory with no sub-directories. For this case, the function would just return the amount of files, but for the remaining sub-directories it would call the recursive function. When operating with recursive structures, it\u2019s often easier to use recursive functions instead of for or while loops.", "It\u2019s important to call out that in some languages there\u2019s a maximum amount of recursive calls you can use. In Python by default, you can call a recursive function 1,000 times until you reach the limit. That\u2019s fine for things like sub-directories or similar recursive structures.", "In this article I explained how to tell a computer to do an action repetitively. Python gives us three different ways to perform repetitive tasks: while loops, for loops, and recursion.", "For loops are best when you want to iterate over a known sequence of elements but when you want to operate while a certain condition is true, while loops are the best choice.", "If you liked the information included in this article don\u2019t hesitate to contact me to share your thoughts. It motivates me to keep on sharing!", "Thanks for taking the time to read my article! If you have any questions or ideas to share, please feel free to contact me to my email, or you can find me in the following social networks for more related content:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Tech Enthusiast | MSc in Finance | Python Developer | www.linkedin.com/in/julianherrera-lnkd"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fbace2ddba789&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----bace2ddba789--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bace2ddba789--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://julianh.medium.com/?source=post_page-----bace2ddba789--------------------------------", "anchor_text": ""}, {"url": "https://julianh.medium.com/?source=post_page-----bace2ddba789--------------------------------", "anchor_text": "Julian Herrera"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff63e1ce1521d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&user=Julian+Herrera&userId=f63e1ce1521d&source=post_page-f63e1ce1521d----bace2ddba789---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbace2ddba789&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbace2ddba789&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.pexels.com/@divinetechygirl?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Christina Morillo"}, {"url": "https://www.pexels.com/photo/python-book-1181671/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Pexels"}, {"url": "https://unsplash.com/@groovelanddesigns?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Grooveland Designs"}, {"url": "https://unsplash.com/s/photos/circles?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://www.pexels.com/@cottonbro?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "cottonbro"}, {"url": "https://www.pexels.com/photo/2-blue-and-yellow-ceramic-owl-figurines-4966171/?utm_content=attributionCopyText&utm_medium=referral&utm_source=pexels", "anchor_text": "Pexels"}, {"url": "https://towardsdatascience.com/create-a-stock-price-simulator-with-python-b08a184f197d", "anchor_text": "Create a Stock Price Simulator With PythonEasy application of a Geometric Brownian Motion process to simulate stock prices.towardsdatascience.com"}, {"url": "https://towardsdatascience.com/business-intelligence-visualizations-with-python-1d2d30ce8bd9", "anchor_text": "Business Intelligence Visualizations with PythonI prepared an extensive guide to display beautiful visualizations to enhance metrics, KPIs, forecasts, and other\u2026towardsdatascience.com"}, {"url": "https://towardsdatascience.com/airbnb-rental-analysis-of-new-york-using-python-a6e1b2ecd7dc", "anchor_text": "Airbnb Rental-Analysis of New York using PythonDiscover the most convenient rentals to stay implementing Data Analytics with nice visualizations.towardsdatascience.com"}, {"url": "http://herrera.ajulian@gmail.com", "anchor_text": "email"}, {"url": "https://www.linkedin.com/in/juli%C3%A1n-alfredo-herrera-08531559/", "anchor_text": "LinkedIn"}, {"url": "https://github.com/Jotaherrer", "anchor_text": "GitHub"}, {"url": "https://medium.com/tag/python?source=post_page-----bace2ddba789---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----bace2ddba789---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/coding?source=post_page-----bace2ddba789---------------coding-----------------", "anchor_text": "Coding"}, {"url": "https://medium.com/tag/learning-to-code?source=post_page-----bace2ddba789---------------learning_to_code-----------------", "anchor_text": "Learning To Code"}, {"url": "https://medium.com/tag/learning?source=post_page-----bace2ddba789---------------learning-----------------", "anchor_text": "Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbace2ddba789&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&user=Julian+Herrera&userId=f63e1ce1521d&source=-----bace2ddba789---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbace2ddba789&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&user=Julian+Herrera&userId=f63e1ce1521d&source=-----bace2ddba789---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbace2ddba789&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bace2ddba789--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fbace2ddba789&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----bace2ddba789---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----bace2ddba789--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----bace2ddba789--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----bace2ddba789--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----bace2ddba789--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----bace2ddba789--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----bace2ddba789--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----bace2ddba789--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----bace2ddba789--------------------------------", "anchor_text": ""}, {"url": "https://julianh.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://julianh.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Julian Herrera"}, {"url": "https://julianh.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "288 Followers"}, {"url": "http://www.linkedin.com/in/julianherrera-lnkd", "anchor_text": "www.linkedin.com/in/julianherrera-lnkd"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff63e1ce1521d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&user=Julian+Herrera&userId=f63e1ce1521d&source=post_page-f63e1ce1521d--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F620ddda3d8d1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Funderstand-loops-in-python-with-one-article-bace2ddba789&newsletterV3=f63e1ce1521d&newsletterV3Id=620ddda3d8d1&user=Julian+Herrera&userId=f63e1ce1521d&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}