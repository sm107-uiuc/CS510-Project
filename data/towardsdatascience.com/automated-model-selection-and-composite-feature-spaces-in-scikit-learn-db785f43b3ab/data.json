{"url": "https://towardsdatascience.com/automated-model-selection-and-composite-feature-spaces-in-scikit-learn-db785f43b3ab", "time": 1683018036.891155, "path": "towardsdatascience.com/automated-model-selection-and-composite-feature-spaces-in-scikit-learn-db785f43b3ab/", "webpage": {"metadata": {"title": "Automated model selection and composite feature spaces in scikit-learn | by Oliver Batey | Medium", "h1": "Automated model selection and composite feature spaces in scikit-learn", "description": "Sometimes there are hundreds, if not thousands, of possible configurations of a machine learning model, making it impossible to find the best one by hand, and making automation essential. This is\u2026"}, "outgoing_paragraph_urls": [{"url": "https://archive.ics.uci.edu/ml/datasets/sms+spam+collection", "anchor_text": "here", "paragraph_index": 4}, {"url": "https://github.com/job9931/Blog-notebooks/tree/main/automated_model_selection", "anchor_text": "GitHub", "paragraph_index": 4}, {"url": "https://github.com/job9931/Blog-notebooks/tree/main/automated_model_selection", "anchor_text": "notebook", "paragraph_index": 12}], "all_paragraphs": ["Sometimes there are hundreds, if not thousands, of possible configurations of a machine learning model, making it impossible to find the best one by hand, and making automation essential. This is especially true when working with composite feature spaces, where we want to apply different transformations to different features of the dataset. A great example is combining text documents with numerical data, however, I couldn't find much info on how to automatically model this type of feature space in scikit-learn.", "Instead of manually transforming your text into a bag-of-words, and then manually appending some numerical columns onto it, you can work much more efficiently using scikit-learn pipelines. This post shows you how.", "Using pipelines allows you to treat a sequence of transformation steps and an estimator (classifier or regressor) as a single model, called a composite estimator. Not only does this keep your code neat and prevent information leakage between your training and test sets, but it also allows you to treat your transformation steps as hyperparameters of your model, then optimise your model over the hyperparameter space with a grid search. This means you can experiment with different combinations of numerical features alongside your text data, as well as different text processing methods, and more, automatically.", "In what follows you\u2019ll see how to build a system that: takes a collection of labelled text documents as input; automatically generates some numerical features; transforms the different data types; passes the data to a classifier; then searches different combinations of features and transformations, to find the best performing model.", "I\u2019m using the Spam SMS dataset, downloadable from the UCI machine learning repository here, which contains two columns: a column of SMS text documents, text, and a corresponding label column, containing the strings \u2018spam\u2019 and \u2018ham\u2019, which we have to predict. As always, the entire project code is available on GitHub.", "The first step is to define the transformations that we want to apply to the dataset. To include a data transformation in a scikit-learn pipeline we must write it as a class, not an ordinary Python function; this may sound daunting initially but it's straightforward. One method is to simply define an ordinary Python function and pass it to the FunctionTransformer class, which turns it into a scikit-learn transformer object. Here, however, I will show you the more manual approach, so you can see what\u2019s actually happening since I think it helps to understand how scikit-learn works.", "You create a class that inherits from the BaseEstimator and TransformerMixin classes provided by scikit-learn, which provide the attributes and methods required to create an object that is compatible with scikit-learn pipelines. Then, you include what would be your function parameters as class attributes in the __init__() method, and override the transform() method with the body of the function you would use to transform your dataset. I\u2019ve provided three examples below.", "The first two transformers are used to create new numerical features, here I'm choosing to use the number of words in the document, and the mean length of the words in the document, as features. Since our dataset contains only two columns, text and label, our text is stored as a pandas Series after separating the label column, which we should do at the very beginning of the project. As a result, CountWords.transform() is designed to accept a Series and return a DataFrame, since I will use this as the first transformer in our pipeline.", "The final transformer FeatureSelector will allow us to treat various features as hyperparameters of our model. Its transform() method takes a list of column names and it will return a DataFrame containing only those columns; by passing it different lists of column names, we can search over different feature spaces to find the best one. These three transformers provide all the additional functionality we need to construct the pipeline.", "The final pipeline is constructed out of three components: an initial Pipeline object, a ColumnTransformer object, and an estimator. The second component, ColumnTransformer is a convenient class introduced in version 0.20 which allows you to apply separate transformations to specified columns of your dataset. We will use it here to apply the CountVectorizer to the text column and apply another pipeline, num_pipeline, which contains FeatureSelector and scikit-learn\u2019s SimpleImputer class, to the numerical columns. The structure of the entire pipeline is shown in this diagram:", "In the code example above, we are using the default parameters of CountVectorizer and SimpleImputer, keeping both numerical columns, and using a support vector classifier as an estimator. This final pipeline is our composite estimator, and every object inside of it, as well as the parameters of those objects, is a hyperparameter which we are free to vary. This means we can search different feature spaces, different vectorization settings, and different estimator objects.", "With the composite estimator set-up, it is very easy to find the best performing model; all you need to do is to create a dictionary, specifying which hyperparameters you want to vary and the values you\u2019d like to test. You then pass this to scikit-learn\u2019s GridSearchCV class which evaluates the model using cross-validation for each combination of hyperparameter values, then returns the best.", "Our composite estimator has a total of 65 tunable parameters, however, we are varying only two here: the numerical columns that are used and the max_features parameter of CountVectorizer, which sets the maximum number of words we use from the vocabulary. In the notebook, you can see how to get a list of all the available hyperparameters. Below is a visualisation of the mean balanced accuracy plotted over the hyperparameter space.", "The best performance is achieved when we use only one numerical column, n_words, and use all the words in the vocabulary, that is when max_features = None. The balanced accuracy of this model is 0.94 during cross-validation and 0.93 when evaluated on the test set. Note that the exact numbers may change if you run the notebook yourself.", "We\u2019ve covered a lot, specifically, how we can automate our entire modelling process by setting up a composite estimator, which is a series of transformations and an estimator contained within a single pipeline. Not only is this good practice, but it is the only feasible way to search large hyperparameter spaces, which often arise when working with composite feature spaces. We saw an example of combining text data with numerical data, but it is easy to follow the same procedure with any data type, enabling you to work faster, more efficiently, and more effectively.", "Machine Learning Engineer, based in London. Interested in most things data."], "all_outgoing_urls": [{"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://unsplash.com/@pawel_czerwinski?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Pawe\u0142 Czerwi\u0144ski"}, {"url": "https://unsplash.com/s/photos/texture-pattern?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://towardsdatascience.com/?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "Oliver Batey"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff1363e5fd5d2&operation=register&redirect=https%3A%2F%2Foliverbatey.medium.com%2Fautomated-model-selection-and-composite-feature-spaces-in-scikit-learn-db785f43b3ab&user=Oliver+Batey&userId=f1363e5fd5d2&source=post_page-f1363e5fd5d2----db785f43b3ab---------------------post_header-----------", "anchor_text": "Follow"}, {"url": "https://archive.ics.uci.edu/ml/datasets/sms+spam+collection", "anchor_text": "here"}, {"url": "https://github.com/job9931/Blog-notebooks/tree/main/automated_model_selection", "anchor_text": "GitHub"}, {"url": "https://github.com/job9931/Blog-notebooks/tree/main/automated_model_selection", "anchor_text": "notebook"}, {"url": "https://www.linkedin.com/in/oliver-batey-084a75150/", "anchor_text": "Linkedin"}, {"url": "https://medium.com/tag/feature-engineering?source=post_page-----db785f43b3ab---------------feature_engineering-----------------", "anchor_text": "Feature Engineering"}, {"url": "https://medium.com/tag/model-selection?source=post_page-----db785f43b3ab---------------model_selection-----------------", "anchor_text": "Model Selection"}, {"url": "https://medium.com/tag/pipeline?source=post_page-----db785f43b3ab---------------pipeline-----------------", "anchor_text": "Pipeline"}, {"url": "https://medium.com/tag/scikit-learn?source=post_page-----db785f43b3ab---------------scikit_learn-----------------", "anchor_text": "Scikit Learn"}, {"url": "https://medium.com/tag/editors-pick?source=post_page-----db785f43b3ab---------------editors_pick-----------------", "anchor_text": "Editors Pick"}, {"url": "https://towardsdatascience.com/?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fc92c76aff6a&operation=register&redirect=https%3A%2F%2Foliverbatey.medium.com%2Fautomated-model-selection-and-composite-feature-spaces-in-scikit-learn-db785f43b3ab&newsletterV3=f1363e5fd5d2&newsletterV3Id=c92c76aff6a&user=Oliver+Batey&userId=f1363e5fd5d2&source=-----db785f43b3ab---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "Written by Oliver Batey"}, {"url": "https://towardsdatascience.com/followers?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "23 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fc92c76aff6a&operation=register&redirect=https%3A%2F%2Foliverbatey.medium.com%2Fautomated-model-selection-and-composite-feature-spaces-in-scikit-learn-db785f43b3ab&newsletterV3=f1363e5fd5d2&newsletterV3Id=c92c76aff6a&user=Oliver+Batey&userId=f1363e5fd5d2&source=-----db785f43b3ab---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/small-data-large-uncertainty-1d4059ced4f8?source=author_recirc-----db785f43b3ab----0---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=author_recirc-----db785f43b3ab----0---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=author_recirc-----db785f43b3ab----0---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": "Oliver Batey"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----db785f43b3ab----0---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/small-data-large-uncertainty-1d4059ced4f8?source=author_recirc-----db785f43b3ab----0---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": "Small data, large uncertaintyHow to estimate the uncertainty of your model\u2019s statistics via sampling distributions"}, {"url": "https://towardsdatascience.com/small-data-large-uncertainty-1d4059ced4f8?source=author_recirc-----db785f43b3ab----0---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": "6 min read\u00b7Dec 15, 2020"}, {"url": "https://towardsdatascience.com/small-data-large-uncertainty-1d4059ced4f8?source=author_recirc-----db785f43b3ab----0---------------------1963512c_ecfb_4472_9410_db0127751306-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "1"}, {"url": "https://towardsdatascience.com/build-an-interface-to-parse-text-from-any-type-of-document-in-1-line-of-code-33f9dcf8003e?source=author_recirc-----db785f43b3ab----1---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=author_recirc-----db785f43b3ab----1---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=author_recirc-----db785f43b3ab----1---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": "Oliver Batey"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----db785f43b3ab----1---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/build-an-interface-to-parse-text-from-any-type-of-document-in-1-line-of-code-33f9dcf8003e?source=author_recirc-----db785f43b3ab----1---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": "Build an interface to parse text from any type of document in 1 line of codeExtract text from txt, docx, pdf, html, pptx files, and more, using object-orientated design patterns."}, {"url": "https://towardsdatascience.com/build-an-interface-to-parse-text-from-any-type-of-document-in-1-line-of-code-33f9dcf8003e?source=author_recirc-----db785f43b3ab----1---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": "5 min read\u00b7Jan 21, 2021"}, {"url": "https://towardsdatascience.com/build-an-interface-to-parse-text-from-any-type-of-document-in-1-line-of-code-33f9dcf8003e?source=author_recirc-----db785f43b3ab----1---------------------1963512c_ecfb_4472_9410_db0127751306-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "1"}, {"url": "https://towardsdatascience.com/mining-an-economic-news-article-using-pre-trained-language-models-f75af041ecf0?source=author_recirc-----db785f43b3ab----2---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=author_recirc-----db785f43b3ab----2---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=author_recirc-----db785f43b3ab----2---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": "Oliver Batey"}, {"url": "https://towardsdatascience.com/mining-an-economic-news-article-using-pre-trained-language-models-f75af041ecf0?source=author_recirc-----db785f43b3ab----2---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": "Mining an economic news article using pre-trained language modelsFind key entities, build dependency networks, and gauge sentiment in news articles"}, {"url": "https://towardsdatascience.com/mining-an-economic-news-article-using-pre-trained-language-models-f75af041ecf0?source=author_recirc-----db785f43b3ab----2---------------------1963512c_ecfb_4472_9410_db0127751306-------", "anchor_text": "8 min read\u00b7Jan 14, 2021"}, {"url": "https://towardsdatascience.com/mining-an-economic-news-article-using-pre-trained-language-models-f75af041ecf0?source=author_recirc-----db785f43b3ab----2---------------------1963512c_ecfb_4472_9410_db0127751306-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "See all from Oliver Batey"}, {"url": "https://medium.com/@dimitris.effrosynidis/ensemble-feature-selection-for-machine-learning-c0df77b970f9?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": ""}, {"url": "https://medium.com/@dimitris.effrosynidis?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": ""}, {"url": "https://medium.com/@dimitris.effrosynidis?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Dimitris Effrosynidis"}, {"url": "https://towardsdatascience.com/?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@dimitris.effrosynidis/ensemble-feature-selection-for-machine-learning-c0df77b970f9?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Ensemble Feature Selection for Machine LearningSelect the best features by combining individual feature selection methods"}, {"url": "https://medium.com/@dimitris.effrosynidis/ensemble-feature-selection-for-machine-learning-c0df77b970f9?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "\u00b75 min read\u00b7Nov 2, 2022"}, {"url": "https://medium.com/@dimitris.effrosynidis/ensemble-feature-selection-for-machine-learning-c0df77b970f9?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": ""}, {"url": "https://medium.com/@arthurmello_/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": ""}, {"url": "https://medium.com/@arthurmello_?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": ""}, {"url": "https://medium.com/@arthurmello_?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Arthur Mello"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Level Up Coding"}, {"url": "https://medium.com/@arthurmello_/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Exploratory Data Analysis: The Ultimate WorkflowExplore the true potential of your data with Python"}, {"url": "https://medium.com/@arthurmello_/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "\u00b716 min read\u00b7Apr 20"}, {"url": "https://medium.com/@arthurmello_/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "5"}, {"url": "https://kayjanwong.medium.com/feature-encoding-techniques-in-machine-learning-with-python-implementation-dbf933e64aa?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": ""}, {"url": "https://kayjanwong.medium.com/?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": ""}, {"url": "https://kayjanwong.medium.com/?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Kay Jan Wong"}, {"url": "https://towardsdatascience.com/?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Towards Data Science"}, {"url": "https://kayjanwong.medium.com/feature-encoding-techniques-in-machine-learning-with-python-implementation-dbf933e64aa?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Feature Encoding Techniques in Machine Learning with Python Implementation6 feature encoding techniques to consider for your data science workflows"}, {"url": "https://kayjanwong.medium.com/feature-encoding-techniques-in-machine-learning-with-python-implementation-dbf933e64aa?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "\u00b710 min read\u00b7Jan 10"}, {"url": "https://kayjanwong.medium.com/feature-encoding-techniques-in-machine-learning-with-python-implementation-dbf933e64aa?source=read_next_recirc-----db785f43b3ab----0---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "2"}, {"url": "https://gustavorsantos.medium.com/pandas-for-one-hot-encoding-data-preventing-high-cardinality-16148a0ca399?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": ""}, {"url": "https://gustavorsantos.medium.com/?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": ""}, {"url": "https://gustavorsantos.medium.com/?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Gustavo Santos"}, {"url": "https://towardsdatascience.com/?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Towards Data Science"}, {"url": "https://gustavorsantos.medium.com/pandas-for-one-hot-encoding-data-preventing-high-cardinality-16148a0ca399?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Pandas for One-Hot Encoding Data Preventing High CardinalityA simple technique to One-Hot Encode variables using Pandas"}, {"url": "https://gustavorsantos.medium.com/pandas-for-one-hot-encoding-data-preventing-high-cardinality-16148a0ca399?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "\u00b75 min read\u00b7Nov 15, 2022"}, {"url": "https://gustavorsantos.medium.com/pandas-for-one-hot-encoding-data-preventing-high-cardinality-16148a0ca399?source=read_next_recirc-----db785f43b3ab----1---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": ""}, {"url": "https://pauliusztin.medium.com/how-to-quickly-design-advanced-sklearn-pipelines-3cc97b59ce16?source=read_next_recirc-----db785f43b3ab----2---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": ""}, {"url": "https://pauliusztin.medium.com/?source=read_next_recirc-----db785f43b3ab----2---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": ""}, {"url": "https://pauliusztin.medium.com/?source=read_next_recirc-----db785f43b3ab----2---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Paul Iusztin"}, {"url": "https://towardsdatascience.com/?source=read_next_recirc-----db785f43b3ab----2---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Towards Data Science"}, {"url": "https://pauliusztin.medium.com/how-to-quickly-design-advanced-sklearn-pipelines-3cc97b59ce16?source=read_next_recirc-----db785f43b3ab----2---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "How to Quickly Design Advanced Sklearn PipelinesCompose all the components from Scikit-Learn Pipelines to build custom production-ready models."}, {"url": "https://pauliusztin.medium.com/how-to-quickly-design-advanced-sklearn-pipelines-3cc97b59ce16?source=read_next_recirc-----db785f43b3ab----2---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "\u00b710 min read\u00b7Nov 2, 2022"}, {"url": "https://pauliusztin.medium.com/how-to-quickly-design-advanced-sklearn-pipelines-3cc97b59ce16?source=read_next_recirc-----db785f43b3ab----2---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "1"}, {"url": "https://angeleastbengal.medium.com/chi-square-test-how-to-calculate-chi-square-using-formula-python-implementation-6da203f96569?source=read_next_recirc-----db785f43b3ab----3---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": ""}, {"url": "https://angeleastbengal.medium.com/?source=read_next_recirc-----db785f43b3ab----3---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": ""}, {"url": "https://angeleastbengal.medium.com/?source=read_next_recirc-----db785f43b3ab----3---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Angel Das"}, {"url": "https://towardsdatascience.com/?source=read_next_recirc-----db785f43b3ab----3---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Towards Data Science"}, {"url": "https://angeleastbengal.medium.com/chi-square-test-how-to-calculate-chi-square-using-formula-python-implementation-6da203f96569?source=read_next_recirc-----db785f43b3ab----3---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "Chi-square Test \u2014 How to calculate Chi-square using Formula & Python Implementation1. Type of Test"}, {"url": "https://angeleastbengal.medium.com/chi-square-test-how-to-calculate-chi-square-using-formula-python-implementation-6da203f96569?source=read_next_recirc-----db785f43b3ab----3---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------", "anchor_text": "\u00b77 min read\u00b7Nov 2, 2022"}, {"url": "https://angeleastbengal.medium.com/chi-square-test-how-to-calculate-chi-square-using-formula-python-implementation-6da203f96569?source=read_next_recirc-----db785f43b3ab----3---------------------522898f7_5b6f_4e7c_960a_a7ed630da5bd-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "See more recommendations"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=post_page-----db785f43b3ab--------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}