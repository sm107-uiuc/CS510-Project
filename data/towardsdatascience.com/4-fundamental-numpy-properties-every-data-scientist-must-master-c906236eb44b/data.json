{"url": "https://towardsdatascience.com/4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b", "time": 1683017821.601851, "path": "towardsdatascience.com/4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b/", "webpage": {"metadata": {"title": "4 Fundamental NumPy Properties Every Data Scientist Must Master | by Susan Maina | Towards Data Science", "h1": "4 Fundamental NumPy Properties Every Data Scientist Must Master", "description": "NumPy, or Numerical Python, is an open-source python library that provides common mathematical and numerical functions. It introduces a type of data structure called the numPy array that is optimized\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.geeksforgeeks.org/why-import-star-in-python-is-a-bad-idea/", "anchor_text": "here", "paragraph_index": 1}, {"url": "https://en.wikibooks.org/wiki/Python_Programming/Data_Types", "anchor_text": "datatype", "paragraph_index": 2}, {"url": "https://numpy.org/doc/stable/reference/routines.array-creation.html", "anchor_text": "here", "paragraph_index": 3}, {"url": "https://towardsdatascience.com/ultimate-guide-to-lists-tuples-arrays-and-dictionaries-for-beginners-8d1497f9777c", "anchor_text": "tuple", "paragraph_index": 10}, {"url": "https://www.pythoninformer.com/python-libraries/numpy/index-and-slice/", "anchor_text": "this", "paragraph_index": 20}, {"url": "https://numpy.org/doc/stable/reference/routines.math.html", "anchor_text": "this", "paragraph_index": 25}, {"url": "https://www.pythonprogramming.in/numpy-aggregate-and-statistical-functions.html", "anchor_text": "aggregation", "paragraph_index": 26}, {"url": "https://numpy.org/doc/1.16/reference/routines.random.html", "anchor_text": "this", "paragraph_index": 28}, {"url": "https://www.pythonprogramming.in/numpy-aggregate-and-statistical-functions.html", "anchor_text": "here", "paragraph_index": 31}], "all_paragraphs": ["NumPy, or Numerical Python, is an open-source python library that provides common mathematical and numerical functions. It introduces a type of data structure called the numPy array that is optimized for calculations by being very fast with numerical data and generally more efficient than lists. In this article, we are going to look at four useful traits of numPy which make it a powerful tool in data science.", "You can import the module in a variety of ways as shown below. For this article, we use the first method where the np alias represents the numPy module and this is the recommended convention for importing numPy. The third method- from numpy import * -is not recommended as it bloats the name space among other reasons listed here.", "NumPy arrays can only hold elements of one datatype, usually numerical data such as integers and floats, but it can also hold strings.", "The code below creates a numPy array using np.array(list). Check here for all the ways to create a numPy array.", "Note that if the list contains a mix of numerical and string types as below, numPy will convert all the elements into strings.", "To check the datatype of the array elements, use array.dtype. To check the type of the array object itself, use type(array) which returns \u2018numpy.ndarray\u2019 as below.", "You can access the elements inside the numPy array the same way you would a list; array[index]. You can also slice it to return a subset as in array[start_index:stop_index]. The start_index is inclusive, while stop_index is exclusive. Another way is to return elements at 2 separate indices; array[[index_1, index_3]]. Here you provide another list that holds the indices.", "Missing data and NaN(Not a Number)", "NumPy allows you to have missing data in your array and still maintain the datatype of the elements by using np.nan to represent these elements. Numeric arrays(integers or floats) with nan elements automatically assume the float datatype.", "So far, we have only created 1 dimensional arrays, but you can also have numPy arrays of more than 1 dimension. One way is to feed a list of lists as in np.array(list of lists, datatype).", "You can get the dimensions of a numPy array using array.shape. The shape method returns a tuple. The number of elements in the tuple represent the number of dimensions, for example the shape of array_5 in the code below is (2,3) which makes it a 2 dimensional array. array_1 has one dimension.", "For a two dimensional array, you can interpret the shape to be (rows,columns), meaning that array_5 above has 2 rows and 3 columns.", "You can also get the dimensions by the length of the shape of the array: len(array.shape). This is because array.shape returns a tuple and len(tuple) returns the number of elements in the tuple. Check also the number of square brackets enclosing the lists below for an indication of the dimensions.", "You can re-arrange the array into any shape, as long as the total number of elements (or the product of the shape) remains the same. We use array.reshape(rows,columns). For example if the shape is (2,3), you can only reshape to an array with 6 elements such as (1,6), (3,2) or even (6,). Also note that the order of the elements remains the same after reshaping and you will see soon why this is important.", "Not to be confused with reshaping, transposing means flipping the array, so that the rows are now columns and the columns rows.We use array.transpose(). This is demonstrated below.", "Let\u2019s start with a 2 by 3 array.", "We then reshape the array to 3 by 2. See how the order of the elements is maintained.", "Now we transpose the same original array to get 3 by 2 matrix. Note the order.", "This refers to reducing any array to 1 dimension using array.flatten().", "Indexing and slicing a multi dimensional array", "We can select elements from a multi dimensional array using the indices; use array[row_index,column_index]. Remember the array indices start at 0. To select all elements over that axis, provide just a colon : to represent that axis. For example array[:,column_index] returns everything in the column \u2018column_index\u2019 . Check out this detailed tutorial on slicing.", "The numPy functions are applied to each element of the array. For example np.sqrt(array) returns a new array where each element is squared. For operations between arrays, the math is between corresponding elements of each array.", "For example below we create 2 arrays and then perform operations between them.", "Notice the element wise operations where the element at index 1,1 of one array is added to element at index 1,1 of the second array and so on.", "You can also perform operations between an array and a scalar (a whole number). For example array+3 adds 3 to every element of the array.", "The numPy library is packed with several helper functions for performing mathematical operations as shown in this documentation.", "Other functions are aggregation functions which summarize the array and return one number. You can also choose to summarize by rows or columns by including axis=0 or axis=1 respectively as a parameter. Common aggregation functions are np.mean(), np.median(), np.min(), np.max() and np.std().", "Numpy comes with a randomization module called numpy.random for sampling or generating a random sample of data.", "To create an array of random integers, use np.random.randint(low, high, size). low is the lower boundary and is inclusive. high is the higher boundary and is exclusive. size is the number of elements of the array, and you can provide just one number such as 16 to create a one dimensional array, or provide a shape such as (4,4) to create a two dimensional array. Check out this documentation for all numPy random sampling routines.", "Every time you run the code above, numPy generates a new random sample. You can create a reliably random array each time you run by setting a seed using np.random.seed(number). Use any arbitrary number for the seed.", "You can select a random sample from an array using np.random.choice(array,number,replace). array parameter can be any array or a slice of an array. number represents the number of elements you want to sample. replace takes a boolean value and is optional. replace=True (default) means sample with replacement meaning sampled elements can be repeated -as is the case in the code below (line 4). replace=False means sample without replacement and an element cannot be repeated(line 5).", "Those are the 4 numPy properties. NumPy contains many other built-in functions not covered here such as linear algebra operations, histograms, fourier transforms, splitting and joining arrays, and so much more. Check out the numPy documentation here, and as always remember to practice, practice, practice!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fc906236eb44b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----c906236eb44b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c906236eb44b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://suemnjeri.medium.com/?source=post_page-----c906236eb44b--------------------------------", "anchor_text": ""}, {"url": "https://suemnjeri.medium.com/?source=post_page-----c906236eb44b--------------------------------", "anchor_text": "Susan Maina"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7df9dec030e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&user=Susan+Maina&userId=7df9dec030e&source=post_page-7df9dec030e----c906236eb44b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc906236eb44b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc906236eb44b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@brett_jordan?utm_source=medium&utm_medium=referral", "anchor_text": "Brett Jordan"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.geeksforgeeks.org/why-import-star-in-python-is-a-bad-idea/", "anchor_text": "here"}, {"url": "https://en.wikibooks.org/wiki/Python_Programming/Data_Types", "anchor_text": "datatype"}, {"url": "https://numpy.org/doc/stable/reference/routines.array-creation.html", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/ultimate-guide-to-lists-tuples-arrays-and-dictionaries-for-beginners-8d1497f9777c", "anchor_text": "tuple"}, {"url": "https://towardsdatascience.com/ultimate-guide-to-lists-tuples-arrays-and-dictionaries-for-beginners-8d1497f9777c", "anchor_text": "Ultimate Guide to Lists, Tuples, Arrays and Dictionaries For Beginners.A simple guide to creating, updating and manipulating python\u2019s most popular data structures, and their key differences.towardsdatascience.com"}, {"url": "https://www.pythoninformer.com/python-libraries/numpy/index-and-slice/", "anchor_text": "this"}, {"url": "https://numpy.org/doc/stable/reference/routines.math.html", "anchor_text": "this"}, {"url": "https://www.pythonprogramming.in/numpy-element-wise-mathematical-operations.html", "anchor_text": "element wise"}, {"url": "https://www.pythonprogramming.in/numpy-aggregate-and-statistical-functions.html", "anchor_text": "aggregation"}, {"url": "https://numpy.org/doc/1.16/reference/routines.random.html", "anchor_text": "this"}, {"url": "https://www.pythonprogramming.in/numpy-aggregate-and-statistical-functions.html", "anchor_text": "here"}, {"url": "https://medium.com/tag/data-science?source=post_page-----c906236eb44b---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----c906236eb44b---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----c906236eb44b---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/python?source=post_page-----c906236eb44b---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc906236eb44b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&user=Susan+Maina&userId=7df9dec030e&source=-----c906236eb44b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc906236eb44b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&user=Susan+Maina&userId=7df9dec030e&source=-----c906236eb44b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc906236eb44b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c906236eb44b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fc906236eb44b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----c906236eb44b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----c906236eb44b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----c906236eb44b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----c906236eb44b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----c906236eb44b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----c906236eb44b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----c906236eb44b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----c906236eb44b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----c906236eb44b--------------------------------", "anchor_text": ""}, {"url": "https://suemnjeri.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://suemnjeri.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Susan Maina"}, {"url": "https://suemnjeri.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "810 Followers"}, {"url": "https://www.linkedin.com/in/suemnjeri", "anchor_text": "https://www.linkedin.com/in/suemnjeri"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7df9dec030e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&user=Susan+Maina&userId=7df9dec030e&source=post_page-7df9dec030e--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd8ec78e8bf15&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F4-fundamental-numpy-properties-every-data-scientist-must-master-c906236eb44b&newsletterV3=7df9dec030e&newsletterV3Id=d8ec78e8bf15&user=Susan+Maina&userId=7df9dec030e&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}