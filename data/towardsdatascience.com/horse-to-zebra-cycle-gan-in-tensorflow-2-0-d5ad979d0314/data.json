{"url": "https://towardsdatascience.com/horse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314", "time": 1683011621.7683892, "path": "towardsdatascience.com/horse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314/", "webpage": {"metadata": {"title": "Horse to Zebra Cycle GAN in TensorFlow 2.0 | by Sai Srikanth | Towards Data Science", "h1": "Horse to Zebra Cycle GAN in TensorFlow 2.0", "description": "When I started with Deep Learning, I came across Horse to Zebra Cycle GAN. What makes it stand out from other GANs, is the fact that transferring of traits doesn\u2019t need DNA anymore! Physical\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["When I started with Deep Learning, I came across Horse to Zebra Cycle GAN. What makes it stand out from other GANs, is the fact that transferring of traits doesn\u2019t need DNA anymore! Physical characteristics are not only constricted to biology class, and creativity is not only constricted to art class.", "I had a hard time to understand how to implement, but the TensorFlow API has made my job easier.", "I\u2019m going to show you the TensorFlow implementation of Horse-to-Zebra Cycle GAN.", "All the implementation in this blog is inspired by the CycleGAN tutorial by TensorFlow [1].", "Okay! So let\u2019s start by gathering predefined Generators and Discriminators by Tensorflow.", "First things first let\u2019s quickly go throw the basics of Generative Adversarial Network (GAN) to help the readers who are not familiar with it. Let\u2019s imagine a situation where we wanted to generate an image that belongs to a particular domain. For example, we\u2019d like to sketch a new outfit for youth and we ask a computer to do this task. To do that we need a representation of the Fashion Designing domain space. Assume there\u2019s a function F and an input image X, we need a Y which is very close to our target domain where Y=F(X). A GAN is a network which can eventually find out an approximate representation function F of our target domain Y", "How does a GAN perform this? and here\u2019s the trick, the solution has two parts (i) we need a Generator which keeps on generates an image from a random initialization (ii) we need a Discriminator to differentiate between generated image and real image. So a Generator is just like a new Fashion Designer who has no idea about fashion but always thrives to reproduce a masterpiece youth outfit and a Discriminator is a Senior Fashion Designer who can say what\u2019s wrong in the new outfit. As long as our Discriminator is good at judging our Generator can benefit from the feedback. At a point, our Generator will be at a position where it gets positive feedback from Discriminator. So we\u2019ll use deep learning to build our Generator and Discriminator.", "To make a good Discriminator we need to feed both generated and original images to our model and it gets trained by comparing its decision and the ground truth. For a Generator, it depends on the decision of Discriminator and if it gets positive feedback it indicates that Generator is heading towards the right direction, and vice versa. The interesting part is they learn from each other and try to thump each other.", "Gradually both the Generator and Discriminator will be good at their tasks such that we can take the Generator out to perform the Fashion Designing task independently. Now how does a GAN can convert a Horse to Zebra? if we think a little, in point of fact generating a new outfit from a random initialization is similar to generating a zebra from a horse, the only difference is here we start our prediction from a horse image instead of random initialization. To do this, we need a paired dataset but what if we don\u2019t have such data? how to accomplish this task from unpaired data?", "Fortunately, there\u2019s a way to accomplish this task from unpaired data. The main idea behind the CycleGAN is, instead of using paired data to train Discriminator we can form a cycle, where two Generators work to convert an image back and forth. To be precise if I use one of the Generator to convert my image(say x) to a beard guy(say y) and another Generator to convert my beard image(y) to normal image(say x\u2019) if the images x and x\u2019 are same then we can conclude that our GAN is working well with unpaired data.", "Let\u2019s implement Horse to Zebra CycleGAN!", "Let\u2019s preheat the oven by importing all the required libraries. Some of the libraries are:", "There are two ways to build an input pipeline for model:", "We can further split the test set into the validation set, which is not implemented here.", "Now let\u2019s tie the lace by initializing some parameters before the code so that we can tune them as per our need.", "In order to prevent overfitting, we need to map some pre-processing techniques to our data, for that we gotta write some functions :", "Now let\u2019s define 2 parent functions to incorporate these snippets.", "Note: random_jitter is only used for pre-processing the training set, to make our model go for an extra mile.", "Now let\u2019s combine all the snippets.", "map(parameter 1, parameter 2): where parameter 1 is the function that has to be mapped. Parameter 2 is the data sample.", "shuffle(BUFFER_SIZE).batch(1) \u2014 Shuffles the data and maps the pre-processing techniques sample-wise.", "Now, Let\u2019s pick a random sample from train_horses and train_zebras and plot it before and after applying our preprocessing techniques, to make sure that we didn\u2019t mess up.", "Hmm, everything is fine with our preprocessing techniques", "Let\u2019s design the backbone of our model \u2014 Generator and Discriminator!", "The architecture of a generator is split into encoder and decoder which is similar to an architecture of modified U-Net.", "In the case of a Cycle GAN, we use instance normalization instead of batch normalization and we can also use a ResNet based generator instead of U-Net. (In our case, we are using U-Net for simplicity).", "Cycle GAN requires two generators (Say G1, and G2) and two discriminators (Say D1, and D2) to be trained.", "We are not going to write code for generator and discriminator instead, we are using the predefined generator and discriminator by TensorFlow implemented in pix2pix.", "And here we go with a random noise by our generator and discriminator, What do we do now?", "Oh yes! You guessed it right! We need a loss function in order to get a fair output.", "It is a sigmoid cross-entropy loss of the generated images and an array of ones (\u20181s\u2019) so that it allows generated images to become structurally similar to the target images.", "Discriminator loss function takes 2 inputs i.e., real images and generated images.", "Okay, Now our discriminator is capable of differentiating whether the output is a horse or a zebra, but it cannot determine the similarity between the input and generated images.", "To clear this issue, we will use reconstruction loss. So what is a reconstruction loss?", "Let\u2019s assume we\u2019ve translated an English sentence to Hindi sentence now when I convert back my Hindi Sentence to English it must be the same as the initial statement, this is called Cycle consistency.", "Here we need a new parameter called lambda, this is something you can tweak, which decides how similar the output is, compared to the input.", "Now there\u2019s something called Identity loss, generator G is responsible for translating image X to Y. Identity loss is, if you feed image Y to generator G, it should yield the real image Y or something similar to image Y.", "TensorFlow also allows us to save checkpoints (weights) for our training, it\u2019s completely optional.", "The training process consists of 4 basic steps:", "(iv) Apply gradients to the optimizer", "We need a function to print the input image and predicted image at each epoch, let\u2019s define it.", "Ahh, looks a little complicated right?", "Let\u2019s combine all these steps with a single function.", "Now that we\u2019ve created a function for training, I\u2019m saving checkpoints for every 5 epochs. We can also tweak the number of epochs to get better accuracy, here I\u2019m running it for 40 epochs.", "Once the training is completed we can test our model on the test set.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "AI and ML enthusiast, currently pursuing B.E(Computer Science Engineering) from Neil Gogte Institute of Technology"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd5ad979d0314&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d5ad979d0314--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d5ad979d0314--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@saisrikanthmurki?source=post_page-----d5ad979d0314--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@saisrikanthmurki?source=post_page-----d5ad979d0314--------------------------------", "anchor_text": "Sai Srikanth"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbf3297084ed8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&user=Sai+Srikanth&userId=bf3297084ed8&source=post_page-bf3297084ed8----d5ad979d0314---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd5ad979d0314&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd5ad979d0314&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.tensorflow.org/tutorials/generative/cyclegan", "anchor_text": "https://www.tensorflow.org/tutorials/generative/cyclegan"}, {"url": "https://www.tensorflow.org/datasets/catalog/overview#cycle_gan", "anchor_text": "https://www.tensorflow.org/datasets/catalog/overview#cycle_gan"}, {"url": "https://arxiv.org/abs/1703.10593", "anchor_text": "Unpaired Image-to-Image Translation Using Cycle-Consistent Adversarial Networks,"}, {"url": "https://www.giassa.net/?page_id=174", "anchor_text": "https://www.giassa.net/?page_id=174"}, {"url": "https://www.giassa.net/?page_id=200", "anchor_text": "https://www.giassa.net/?page_id=200"}, {"url": "https://www.linkedin.com/in/murki-sai-srikanth-083093189", "anchor_text": "https://www.linkedin.com/in/murki-sai-srikanth-083093189"}, {"url": "https://medium.com/tag/cyclegan?source=post_page-----d5ad979d0314---------------cyclegan-----------------", "anchor_text": "Cyclegan"}, {"url": "https://medium.com/tag/tensorflow2?source=post_page-----d5ad979d0314---------------tensorflow2-----------------", "anchor_text": "Tensorflow2"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd5ad979d0314&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&user=Sai+Srikanth&userId=bf3297084ed8&source=-----d5ad979d0314---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd5ad979d0314&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&user=Sai+Srikanth&userId=bf3297084ed8&source=-----d5ad979d0314---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd5ad979d0314&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d5ad979d0314--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd5ad979d0314&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d5ad979d0314---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d5ad979d0314--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d5ad979d0314--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d5ad979d0314--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d5ad979d0314--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d5ad979d0314--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d5ad979d0314--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d5ad979d0314--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d5ad979d0314--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@saisrikanthmurki?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@saisrikanthmurki?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sai Srikanth"}, {"url": "https://medium.com/@saisrikanthmurki/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "14 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fbf3297084ed8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&user=Sai+Srikanth&userId=bf3297084ed8&source=post_page-bf3297084ed8--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2Fbf3297084ed8%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhorse-to-zebra-cycle-gan-in-tensorflow-2-0-d5ad979d0314&user=Sai+Srikanth&userId=bf3297084ed8&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}