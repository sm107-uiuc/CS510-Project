{"url": "https://towardsdatascience.com/advanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb", "time": 1683011229.491522, "path": "towardsdatascience.com/advanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb/", "webpage": {"metadata": {"title": "Advanced SQLAlchemy Features You Need To Start Using | by Martin Heinz | Towards Data Science", "h1": "Advanced SQLAlchemy Features You Need To Start Using", "description": "Working with SQL in Python can be easy with SQLAlchemy and its hybrid properties, nested queries, table metadata, dialects and more!"}, "outgoing_paragraph_urls": [{"url": "https://github.com/absent1706/sqlalchemy-mixins", "anchor_text": "https://github.com/absent1706/sqlalchemy-mixins", "paragraph_index": 11}, {"url": "https://docs.sqlalchemy.org/en/13/dialects/postgresql.html", "anchor_text": "more", "paragraph_index": 17}, {"url": "https://docs.sqlalchemy.org/en/13/dialects/", "anchor_text": "https://docs.sqlalchemy.org/en/13/dialects/", "paragraph_index": 21}, {"url": "https://docs.sqlalchemy.org/en/13/core/index.html", "anchor_text": "SQLAlchemy API reference", "paragraph_index": 33}, {"url": "https://martinheinz.dev/blog/28?utm_source=tds&utm_medium=referral&utm_campaign=blog_post_28", "anchor_text": "martinheinz.dev", "paragraph_index": 34}, {"url": "https://martinheinz.dev/", "anchor_text": "https://martinheinz.dev/", "paragraph_index": 36}, {"url": "https://ko-fi.com/martinheinz", "anchor_text": "https://ko-fi.com/martinheinz", "paragraph_index": 36}], "all_paragraphs": ["If you are Python developer and you work with SQL databases, then SQLAlchemy is most likely a library you are familiar with. It\u2019s a powerful, yet flexible toolkit for working with SQL in Python with lots of features. Some of these features like ORM and basic queries are common knowledge, but there are quite a few features you might not know about and should definitely be taking advantage of. So, let\u2019s se how to leverage things like hybrid properties, nested queries, table metadata, dialects and more!", "Let\u2019s start simple. I think it\u2019s pretty common that you might want to create mapped attribute based on other columns \u2014 essentially creating computed column. The simplest example would be string concatenation:", "This is nice, but it\u2019s much more useful when we use SQL expressions to create such attribute:", "For the example above we added a little bit more code. We created CreditCard class which has many-to-one relationship with User. This user - on top of the columns and attributes from first example - has also column property named has_credit_card, which is computed by checking whether credit card with users ID exists.", "One thing you should be mindful of though when using this feature is that column properties won\u2019t be populated before you commit the session, which might be unexpected when working with freshly created record:", "To follow up on the previous tip, let me also show you hybrid properties. They are similar to column properties in the sense that they produce computed attributes. Hybrid properties however, produce value from Python expression on instance level and SQL expression on class level. Little confusing? Alright, let\u2019s see an example:", "To show off the capabilities of hybrid_property, we implement simple relationship between User and Order, where each user has list of orders which have .state - in this case either Pending or Complete. Now, if we want to find out whether user has any Pending orders, we need to think of 2 cases - If we are working with rows that were already loaded into Python objects, then we can just use Python expression and produce Python value ( has_pending_orders(self)). If we are on the other hand querying this information directly from database, we can't use Python expression as database engine won't understand it. Therefore, for this case ( has_pending_orders(cls)) we write SQL expression, that can be ran against the database.", "As a side note \u2014 if your expression is same for both Python and SQL evaluation, then you can omit the second function decorated with .expression and SQLAlchemy will use the first one for both cases.", "One of my favourite features are Mixin classes. Mixins aren\u2019t something specific only to SQLAlchemy, but they are especially useful in conjunction with ORM models. Quite often you might run into situation, where you have multiple classes (models) that require same attribute or same classmethod. One such example is User model below:", "In this example, we have 2 Mixin classes from which the User model inherits. First of them - MixinAsDict provides method as_dict(self), that can be used to get dict representation of the model. The other one MixinGetByUsername provides both username column as well as static method for querying users by their username.", "Defining these functions as Mixins allows us to make them reusable and add them to other models without copy-pasting same code everywhere.", "If you don\u2019t want to write all the Mixins yourself, then you can take a look at https://github.com/absent1706/sqlalchemy-mixins which is a collection of common SQLAlchemy Mixins.", "Sometimes you might need to access table column names, check constraints on the table or maybe check if columns is nullable. All of this can be done with MetaData() class:", "The important part here are the print statements at bottom of code snippet. Each of them demonstrates some of the things you can access through the metadata object. This includes table names, columns names, column type, foreign and primary keys as well as other constraints.", "Some of your database tables might require a bit more extensive initial setup. For example \u2014 you might want to include a few check constraints, indexes or specify different schema:", "All of these things can be configured using __table_args__ class attribute. Here, we setup 2 check constraints, 1 index for ID column and foreign key constraint. We also turn on automatic table extensions, which means that if we add columns to this table after it was created, then it will be automatically added. Lastly, we also specify to which schema this table belongs to.", "Every database engine has some custom features, which you might want to make use of. For me \u2014 as a PostgreSQL user \u2014 I would like to use some of the custom column types that PostgreSQL has. So how would one use those with SQLAlchemy?", "The code above shows one Example table that has PostgreSQL UUID, INT4RANGE, NUMRANGE, JSON and ARRAY columns. All of these and more can be imported from sqlalchemy.dialects.postgresql.", "Creating rows that include values of these types is pretty self-explanatory. When it comes to querying them though, you will need to use the dialect and type specific comparators as shown above with PostgreSQL ARRAY type and .contains comparator.", "For other types like JSON you might be able to get away with just comparing them as text (using .astext).", "To make your life easier when creating these queries, I recommend setting echo=True when creating engine, which will make SQLAchemy print all SQL queries into console, so that you can check whether your code actually produces correct queries.", "All of the dialects, their types and comparators are documented at https://docs.sqlalchemy.org/en/13/dialects/.", "While on the topic of PostgreSQL features. What about the full-text search with tsqeury and tsvector? We can do that with SQLAchemy too:", "Once again we create Mixin class for full-text search, as this is something that a lot of models can use. This Mixin has single static method, which takes search string and column to search in ( field). To do the actual search we use func.to_tsvector to which we pass language and reference to tables column. On that, we chain call to .match function which really is a call to to_tsquery in PostgreSQL and we give it search string and search configuration as arguments.", "From the generated SQL we can see that the Python code really produces correct SQL queries.", "Creating created_at or updated_at column is pretty common practice. This can be done very simply with SQLAlchemy:", "For updated_at you just need to set onupdate to func.now() which will make it so that every time the row is updated, this column will be set to current timestamp. As for the created_at column, you can omit the onupdate argument and instead use server_default which sets the function that is called when row is created.", "It\u2019s not uncommon to have recursive/self-referential relations in database \u2014 whether it\u2019s manager -> employee relationship, tree structures or some materialized path. This tip shows how you can setup this kind of relationship using SQLAlchemy:", "For this example we use tree structure created using Node records. Each node has some data, reference to its parent and list of its children. As a convenience method we also include __str__ and __repr__ to help us visualize the tree little better.", "If you are fine with normal one-to-many relationship, then you can do it the same way as for any non-self-referential relationship. To make it work for bi-directional relationships however, you need to also include the backref with remote_side=[id] as shown above.", "The last one is for all the Flask users. If you ever need to connect to multiple databases \u2014 for example, because of multiple geographies or multiple data sources \u2014 then you can use SQLALCHEMY_BINDS to specify extra database binds:", "In the code snippet above we configure default database by setting SQLALCHEMY_DATABASE_URI and alternative binds in SQLALCHEMY_BINDS. With this configuration, all the above databases will be available to us. Next, we set __bind_key__ of a table to refer to one of the binds, so that whenever we interact with this particular table, SQLAlchemy will know which database to connect to.", "If you, however, need to connect to multiple DBs with same tables/schema, you can use multiple engines and sessions \u2014 one for each database and switch between them as you wish, like so:", "Hopefully, at least a few of these tips and tricks shown here will be useful to you and will make your life just a little bit easier next time you need work with SQLAlchemy. This article is definitely not an exhaustive list of all the cool things you can do with SQLAlchemy and you can find a bunch of useful things just by scrolling through SQLAlchemy API reference.", "This article was originally posted at martinheinz.dev", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "CKA | RHCE | DevOps Engineer at IBM | Working with Python, Kubernetes, Linux and more | https://martinheinz.dev/ | https://ko-fi.com/martinheinz"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe6fc1ddafbdb&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@martin.heinz?source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@martin.heinz?source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": "Martin Heinz"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4cbd6b36e62a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&user=Martin+Heinz&userId=4cbd6b36e62a&source=post_page-4cbd6b36e62a----e6fc1ddafbdb---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe6fc1ddafbdb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe6fc1ddafbdb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@flik185?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Simone Viani"}, {"url": "https://unsplash.com/?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://github.com/absent1706/sqlalchemy-mixins", "anchor_text": "https://github.com/absent1706/sqlalchemy-mixins"}, {"url": "https://docs.sqlalchemy.org/en/13/dialects/postgresql.html", "anchor_text": "more"}, {"url": "https://docs.sqlalchemy.org/en/13/dialects/", "anchor_text": "https://docs.sqlalchemy.org/en/13/dialects/"}, {"url": "https://docs.sqlalchemy.org/en/13/core/index.html", "anchor_text": "SQLAlchemy API reference"}, {"url": "https://martinheinz.dev/blog/28?utm_source=tds&utm_medium=referral&utm_campaign=blog_post_28", "anchor_text": "martinheinz.dev"}, {"url": "https://towardsdatascience.com/all-the-things-you-can-do-with-github-api-and-python-f01790fca131", "anchor_text": "All the Things You Can Do With GitHub API and PythonGitHub REST API allows you to manage issues, branches, repos, commits and more, so let\u2019s see how you can do that using\u2026towardsdatascience.com"}, {"url": "https://towardsdatascience.com/ultimate-guide-to-python-debugging-854dea731e1b", "anchor_text": "Ultimate Guide to Python DebuggingLet\u2019s explore the Art of debugging using Python logging, tracebacks, decorators and more\u2026towardsdatascience.com"}, {"url": "https://towardsdatascience.com/automating-every-aspect-of-your-python-project-6517336af9da", "anchor_text": "Automating Every Aspect of Your Python ProjectEvery Python project can benefit from automation using Makefile, optimized Docker images, well configured CI/CD, Code\u2026towardsdatascience.com"}, {"url": "https://medium.com/tag/programming?source=post_page-----e6fc1ddafbdb---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----e6fc1ddafbdb---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/technology?source=post_page-----e6fc1ddafbdb---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----e6fc1ddafbdb---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/python?source=post_page-----e6fc1ddafbdb---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe6fc1ddafbdb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&user=Martin+Heinz&userId=4cbd6b36e62a&source=-----e6fc1ddafbdb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe6fc1ddafbdb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&user=Martin+Heinz&userId=4cbd6b36e62a&source=-----e6fc1ddafbdb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe6fc1ddafbdb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe6fc1ddafbdb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e6fc1ddafbdb---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e6fc1ddafbdb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@martin.heinz?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@martin.heinz?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Martin Heinz"}, {"url": "https://medium.com/@martin.heinz/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "5.4K Followers"}, {"url": "https://martinheinz.dev/", "anchor_text": "https://martinheinz.dev/"}, {"url": "https://ko-fi.com/martinheinz", "anchor_text": "https://ko-fi.com/martinheinz"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4cbd6b36e62a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&user=Martin+Heinz&userId=4cbd6b36e62a&source=post_page-4cbd6b36e62a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff723091181e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fadvanced-sqlalchemy-features-you-need-to-start-using-e6fc1ddafbdb&newsletterV3=4cbd6b36e62a&newsletterV3Id=f723091181e3&user=Martin+Heinz&userId=4cbd6b36e62a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}