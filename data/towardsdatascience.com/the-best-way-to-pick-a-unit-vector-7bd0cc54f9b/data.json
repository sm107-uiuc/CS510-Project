{"url": "https://towardsdatascience.com/the-best-way-to-pick-a-unit-vector-7bd0cc54f9b", "time": 1683011260.122922, "path": "towardsdatascience.com/the-best-way-to-pick-a-unit-vector-7bd0cc54f9b/", "webpage": {"metadata": {"title": "The Best Way to Pick a Unit Vector | by Don Cross | Towards Data Science", "h1": "The Best Way to Pick a Unit Vector", "description": "How to choose a unit vector in an n-dimensional space with equal probability of it pointing in any direction, using Gaussian normal distributions."}, "outgoing_paragraph_urls": [{"url": "https://projecteuclid.org/download/pdf_1/euclid.aoms/1177706645", "anchor_text": "Note on the Generation of Random Normal Deviates", "paragraph_index": 40}], "all_paragraphs": ["Sometimes a simulation or numeric solver requires generating random unit vectors that fairly represent all directions in an n-dimensional space. Perhaps you are simulating molecules in a gas, and you want to model their random collisions. Maybe you want to explore the neighborhood of a point in a highly-dimensional space to find the local minimum of a function. Or you could be rendering a raytraced scene that includes scattering of photons from a matte surface.", "In cases like these, it\u2019s handy to have a random unit vector generator in your scientific programming toolbox. The ideal algorithm will pick unit vectors that point in random directions in the n-dimensional space, without any bias. That means that, over time, the unit vectors will be scattered evenly over the surface of an n-dimensional unit hypersphere centered at the origin.", "The most obvious solution is to choose n random numbers uniformly from the range [\u22121, +1] to form a vector:", "Then divide by the length of the vector to normalize to a unit vector:", "This naive algorithm is biased toward certain directions and away from others. More specifically, it over-represents directions diagonal to your chosen Cartesian axes. To prove this assertion, consider the two-dimensional case. Let\u2019s start with a grid having a unit circle inscribed on it:", "Picking a pair of random vector components is like picking a pair of intersecting lines from the grid. The point where the lines intersect defines a direction vector from the origin.", "Now consider two different pie slices emanating from the origin, one surrounding the positive x-axis, the other roughly 45 degrees away from the x-axis:", "Suppose both slices contain an equal angular span. Assume we choose random x and y values from this grid, and both from the range [\u22121, +1]. Then each random point (x, y) will be somewhere inside or on the purple square that fits just outside the unit circle.", "There are more points that fall between the green diagonal lines than between the red lines that straddle the x-axis. This is because there are more points outside the circle in the diagonal direction than in the horizontal direction.", "As you make the grid smaller and smaller, with the gap between the lines approaching zero, the number of points in each region becomes arbitrarily proportional to the respective enclosed areas. The diagonal region contains more area than the horizontal region. If you imagine randomly throwing a dart at a dartboard, it is more likely to strike a region having larger area.", "A point chosen using uniform Cartesian coordinates is thus more likely to occur along a diagonal than an orthogonal. The simple approach fails the bias test: it does not pick from all directions with equal probability.", "In this two-dimensional case, an effective alternative is to pick a random angle \u03b8 in the half-open range [0, 2\u03c0). Then the unbiased unit vector becomes (cos \u03b8, sin \u03b8). However, this only works in the two-dimensional case. We want a solution that works in any positive number of dimensions n.", "Looking again at the diagram above, we see that the bias occurs because the number of points inside the square but outside the circle varies with angle. If we could always pick a point inside the circle, the bias would disappear.", "This suggests a modified algorithm: pick a series of random coordinates for each vector component, but reject the pick if it lies outside the circle, sphere, or hypersphere for the n-dimensional space. In other words, keep picking another batch of n random numbers until they satisfy", "Once you find a point inside the bounding radius, every direction is represented equally, and the unit vector has an unbiased direction.", "This approach works well for two or three dimensions, but there is a problem in the general case.", "The problem with looping until we find a point inside the n-dimensional hypersphere is that it becomes increasingly inefficient as n increases. Each squared term in the above sum can take on a value from 0 to 1. With n terms, the sum of squares can range from 0 to n.", "As n increases, it becomes increasingly likely that the sum will exceed 1. With a high enough dimension count, your program will spend more and more time looping until it finds a point inside a unit radius.", "(As an interesting aside, this reveals a surprising fact about higher dimensional geometry: the ratio of the volume of a hypersphere to the volume of its enclosing hypercube approaches zero as the dimensionality n increases without bound.)", "It would be much better to have an algorithm that picks a random direction vector without burdensome looping.", "Because a uniform random distribution isn\u2019t suited to picking an unbiased direction in space, the solution to the problem is to find some non-uniform distribution that compensates for any directional bias. The desired distribution will cancel out any artificial bias introduced by the choice of coordinate axes.", "It turns out that the answer is familiar to any student of statistics: the Gaussian (or \u201cnormal\u201d) distribution. This is a random distribution whose probability density function assumes the famous bell curve shape.", "Probability density functions may be unfamiliar to you. Let\u2019s take a step back and revisit the original uniform distribution we started with. That uniform distribution is a machine that outputs a series of random numbers that are always in the range [\u22121, +1]. Being uniform means that the probability of the number being in any small range inside [\u22121, +1], say [+0.37, +0.38], is exactly the same as it being in any other such range of the same size, for example [\u22120.67, \u22120.66].", "Because each uniformly-selected random number must be somewhere within [\u22121, +1], we say that the probability of being in that range is 1. Likewise, the probability of the number being outside that range is 0, meaning that never happens.", "Divide the total probability 1 by the size of the range (+1)\u2212(\u22121)=2, to get a probability density of \u00bd. This density number tells us that the probability of a random number being inside the range [+0.7, +0.8] is half the size of the range, or \u00bd(0.8\u22120.7) = 0.05.", "The graph of the uniform probability density looks like this:", "It stands to reason that if using a uniform distribution to pick vector components causes the resulting vector to be biased away from the Cartesian coordinate axes, the desired non-uniform distribution must have a compensating bias of each component toward zero. The Gaussian normal distribution function is:", "where \u03c3 is the standard deviation of the distribution away from the mean value 0. As we will see later, we can choose any positive number for \u03c3 to obtain an unbiased direction, once we normalize to a unit vector. The graph of the normal distribution produces the following bell-shaped curve:", "This distribution certainly picks numbers closer to 0 more often than numbers far from zero, with a tapering probability as x moves away from 0 in either direction.", "The above reasoning is fuzzy and doesn\u2019t prove anything. How do we know a vector whose components are picked from a normal distribution necessarily points in a perfectly unbiased direction? There is a simple way to prove it.", "The first step is to relate the probability density function of each vector component to the probability density of the whole vector. The normal function shown above, p(x), describes the relative likelihood of choosing a value near any particular value of x. In the two-dimensional case, we apply the same function to the other coordinate y. Since we choose both x and y using the same normal distribution, p(y) describes the probability density of choosing y near any given value.", "When you have two independent events, the probability of both happening is the product of their individual probabilities. Therefore, the probability of choosing a vector near any given value (x, y) is described by the product p(x)p(y).", "Before we go any further, let\u2019s choose a value \u03c3 that makes things as simple as possible:", "Take a look at what happens with the product p(x)p(y):", "Here\u2019s where the magic happens. The quantity x\u00b2+y\u00b2 can be replaced with r\u00b2, where r is the length of the vector (x, y). In other words, when using a normal distribution to choose x and y, the likelihood of choosing a vector near a given pair (x, y) is", "The key insight: the likelihood of landing in the infinitesimal neighborhood of (x, y) depends only on the length r of the vector (x, y). The direction the vector is pointing does not affect how likely you are to choose it.", "Put another way, we have found a way to convert the product p(x)p(y) from Cartesian coordinates (x, y) to polar coordinates (r, \u03b8), where r is the distance from the origin and \u03b8 is the counterclockwise angle from the positive x-axis. Because \u03b8 never appears in the probability density function, it cannot affect how likely we are to choose a vector at any given angle \u03b8. All angles are equally likely! That\u2019s exactly the property we wanted all along.", "Even better, this angular irrelevance works for any number of dimensions. In the general case, the n-dimensional probability density product becomes", "Because the Pythagorean distance formula works in any number of dimensions, we can replace the sum of n squared components with r\u00b2, resulting in a probability distribution that depends only on the length of the vector.", "The Gaussian normal distribution sounds great, but how does one generate random numbers having such a distribution? Uniform random number generators are available in most programming languages. It would be helpful to transform a uniform distribution into a normal distribution.", "In 1958, George E. P. Box and Mervin E. Muller published a two-page Note on the Generation of Random Normal Deviates that showed how to do exactly that. Their method generates normally-distributed random numbers in pairs. Given two uniformly-distributed random numbers A and B, both from the half-open range (0, 1], the Box\u2013Muller transform calculates a pair of independent, normally-distributed numbers as follows:", "It\u2019s worth emphasizing that A must never be zero because the logarithm of zero is not defined. Keep generating pairs of numbers using these formulas until you have n numbers to complete a set of vector components. If n is odd, you can keep the leftover generated value and use it as the first component of the next vector you generate, or you may simply discard it. Either way, as a final step, divide through by the length of the resulting vector to create your unit vector v:", "Unit vectors generated this way will be completely unbiased, having an equal probability of pointing in any direction in the n-dimensional space.", "I have provided a sample implementation in the C programming language:", "For Python programmers, the numpy project provides a ready-made random generator that produces normally-distributed values:", "The random unit vector generator is very simple. Just call randomvector passing in the number of dimensions as n and you will get back a list containing the components of an unbiased unit vector.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F7bd0cc54f9b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@cosinekitty?source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@cosinekitty?source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": "Don Cross"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe2d2166d7d92&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&user=Don+Cross&userId=e2d2166d7d92&source=post_page-e2d2166d7d92----7bd0cc54f9b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7bd0cc54f9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7bd0cc54f9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@galchonog?utm_source=medium&utm_medium=referral", "anchor_text": "Galina Tcarkova"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://projecteuclid.org/download/pdf_1/euclid.aoms/1177706645", "anchor_text": "Note on the Generation of Random Normal Deviates"}, {"url": "https://github.com/cosinekitty/randomvector", "anchor_text": "cosinekitty/randomvectorUsing the Box-Muller transform to generate random unit vectors with unbiased directions GitHub is home to over 50\u2026github.com"}, {"url": "https://mathworld.wolfram.com/HyperspherePointPicking.html", "anchor_text": "Hypersphere Point Picking"}, {"url": "https://en.wikipedia.org/wiki/Box%E2%80%93Muller_transform", "anchor_text": "Box\u2013Muller transform"}, {"url": "https://github.com/cosinekitty/randomvector", "anchor_text": "Sample C source code"}, {"url": "https://medium.com/tag/statistics?source=post_page-----7bd0cc54f9b---------------statistics-----------------", "anchor_text": "Statistics"}, {"url": "https://medium.com/tag/data-science?source=post_page-----7bd0cc54f9b---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/random?source=post_page-----7bd0cc54f9b---------------random-----------------", "anchor_text": "Random"}, {"url": "https://medium.com/tag/programming?source=post_page-----7bd0cc54f9b---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/mathematics?source=post_page-----7bd0cc54f9b---------------mathematics-----------------", "anchor_text": "Mathematics"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7bd0cc54f9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&user=Don+Cross&userId=e2d2166d7d92&source=-----7bd0cc54f9b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7bd0cc54f9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&user=Don+Cross&userId=e2d2166d7d92&source=-----7bd0cc54f9b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7bd0cc54f9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F7bd0cc54f9b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----7bd0cc54f9b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----7bd0cc54f9b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@cosinekitty?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@cosinekitty?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Don Cross"}, {"url": "https://medium.com/@cosinekitty/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "535 Followers"}, {"url": "https://github.com/cosinekitty", "anchor_text": "https://github.com/cosinekitty"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe2d2166d7d92&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&user=Don+Cross&userId=e2d2166d7d92&source=post_page-e2d2166d7d92--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F376b6ecea8c2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-best-way-to-pick-a-unit-vector-7bd0cc54f9b&newsletterV3=e2d2166d7d92&newsletterV3Id=376b6ecea8c2&user=Don+Cross&userId=e2d2166d7d92&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}