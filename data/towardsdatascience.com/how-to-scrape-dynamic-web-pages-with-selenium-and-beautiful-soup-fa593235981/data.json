{"url": "https://towardsdatascience.com/how-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981", "time": 1683016809.537856, "path": "towardsdatascience.com/how-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981/", "webpage": {"metadata": {"title": "How to Scrape Dynamic Web pages with Selenium and Beautiful Soup | by Alan Jones | Towards Data Science", "h1": "How to Scrape Dynamic Web pages with Selenium and Beautiful Soup", "description": "Beautiful Soup is an excellent library for scraping data from the web but it doesn\u2019t deal with dynamically created content. That\u2019s not in any way a criticism \u2014 Beautiful Soup does precisely the job\u2026"}, "outgoing_paragraph_urls": [{"url": "https://chromedriver.chromium.org/downloads", "anchor_text": "chromedriver.chromium.org/downloads", "paragraph_index": 12}, {"url": "https://technofile.substack.com/", "anchor_text": "here", "paragraph_index": 20}], "all_paragraphs": ["Beautiful Soup is an excellent library for scraping data from the web but it doesn\u2019t deal with dynamically created content. That\u2019s not in any way a criticism \u2014 Beautiful Soup does precisely the job it is supposed to do and that does not include rendering the webpage as a browser would.", "In order to get that dynamic content the web page must be interpreted by a browser so the Javascript that creates the dynamic content can do its work. But how do we get at the HTML code that is rendered by the browser? One answer is by using a headless browser and the Selenium Python library. And that is what I\u2019m going to demonstrate here.", "We are going to use a very simple HTML file that contains some dynamically rendered text. Here it is:", "All we have here is a HTML file with a single <div> in the body that contains some text (\u201cPlaceholder text\u201d) but when the page is loaded that text is replaced with the text generated by the Javascript further down. The script locates the <div> by its id, \u201ctext\u201d and then sets the internal text to : \u201cThis is the text we want\u201d.", "So, if we view the page in a web browser we see the text that is dynamically generated by the Javascript.", "Let\u2019s see what happens when we run this by Beautiful Soup and try and scrape the text from the <div>.", "The code above imports BeautifulSoup and the os library, opens the file test.html from the local directory and creates a BS object which is stored in the variable soup.", "Then we have two print statements. The first gets the text from the title in the BS object and prints that. The second does a similar thing but finds the tag with the id \u201ctext\u201d and gets the text from that.", "Oh dear \u2014 not what we want. BeautifulSoup is correctly parsing the code but finding the default text in the <div> rather than the text that was rendered in the browser. If we had been looking at a table of say stock market prices that were filled from data in a database, we would likely see only null values in the table, not the dynamically loaded prices.", "What we need is the HTML to be run in a browser in order to see the correct values and then be able to capture those values programmatically.", "The way to do this is with a headless browser. A headless browser is essentially a browser with no user interface. It does not render its output to a screen but rather to a text object.", "Most, if not all, modern browsers will run in headless mode but they need a driver in order to communicate the results back to the user. Also, in order to use the results in a Python program, we need a library that will talk to the driver.", "The Python library is Selenium and the driver that it communicates with is known as a webdriver. In the example below, I will use Chrome as the headless browser and so I need the Chrome web driver which you can download from chromedriver.chromium.org/downloads. If you use a different browser just search for \u201cwebdriver Edge\u201d, \u201cwebdriver Firefox\u201d, etc to find the appropriate download. Then download the webdriver and place it in your working directory. You will also need to conda/pip install Selenium.", "The first thing to do is import the necessary parts of Selenium and then set the appropriate options. In the code below, the --headless argument will tell the browser that it should run in headless mode (obviously), then I\u2019ve specified the location of the Chrome binary. As you can see I\u2019m using a portable version of Chrome and it is located in a folder in my working directory \u2014 I like to keep things self-contained. You may not need to specify where the binary is if you have a standard installation.", "The webdriver is in the local directory and I set a variable to its path.", "Next I instantiate a driver object using the previously set options and the location of the Chrome webdriver. With this driver I can load a web page which will be interpreted by the Chrome browser. The result will be loaded into the driver object where we can access the text of the page in the page_source attribute.", "The next step is to create a Beautiful Soup object and load the page source into it. We can then scrape data from this source. In the code below you can see that we do much the same as in the previous exercise. But this time the result will be different. Here\u2019s the code:", "As you can see, now we are using the code that has been processed by the headless web browser, the result is what would be rendered in a browser window, not the original source as in our first attempt.", "Finally, we need to close the browser:", "And that is all there is to it. With the code above and your own Beautiful Soup code, you are now equipped to start scraping data from dynamic web pages.", "Thanks for reading and if you would like to keep up to date with the articles that I publish please consider subscribing to my free newsletter here. You can catch up with older ones from the same link.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ffa593235981&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://me.dm/@alanjones", "anchor_text": "Mastodon"}, {"url": "https://towardsdatascience.com/?source=post_page-----fa593235981--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fa593235981--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@alan-jones?source=post_page-----fa593235981--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@alan-jones?source=post_page-----fa593235981--------------------------------", "anchor_text": "Alan Jones"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7d3f5fb94faa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&user=Alan+Jones&userId=7d3f5fb94faa&source=post_page-7d3f5fb94faa----fa593235981---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffa593235981&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffa593235981&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://chromedriver.chromium.org/downloads", "anchor_text": "chromedriver.chromium.org/downloads"}, {"url": "https://technofile.substack.com/", "anchor_text": "here"}, {"url": "https://medium.com/tag/web-scraping?source=post_page-----fa593235981---------------web_scraping-----------------", "anchor_text": "Web Scraping"}, {"url": "https://medium.com/tag/beautifulsoup?source=post_page-----fa593235981---------------beautifulsoup-----------------", "anchor_text": "Beautifulsoup"}, {"url": "https://medium.com/tag/python?source=post_page-----fa593235981---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----fa593235981---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/hands-on-tutorials?source=post_page-----fa593235981---------------hands_on_tutorials-----------------", "anchor_text": "Hands On Tutorials"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffa593235981&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&user=Alan+Jones&userId=7d3f5fb94faa&source=-----fa593235981---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffa593235981&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&user=Alan+Jones&userId=7d3f5fb94faa&source=-----fa593235981---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffa593235981&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fa593235981--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ffa593235981&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----fa593235981---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----fa593235981--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----fa593235981--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----fa593235981--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----fa593235981--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----fa593235981--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----fa593235981--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----fa593235981--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----fa593235981--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@alan-jones?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@alan-jones?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Alan Jones"}, {"url": "https://medium.com/@alan-jones/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F7d3f5fb94faa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&user=Alan+Jones&userId=7d3f5fb94faa&source=post_page-7d3f5fb94faa--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ffc3a6cdb7554&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-scrape-dynamic-web-pages-with-selenium-and-beautiful-soup-fa593235981&newsletterV3=7d3f5fb94faa&newsletterV3Id=fc3a6cdb7554&user=Alan+Jones&userId=7d3f5fb94faa&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}