{"url": "https://towardsdatascience.com/how-to-make-sense-of-messy-tabular-data-d59264bb2d58", "time": 1683000503.8103411, "path": "towardsdatascience.com/how-to-make-sense-of-messy-tabular-data-d59264bb2d58/", "webpage": {"metadata": {"title": "How to Make Sense of Messy Tabular Data | by Peter Grant | Towards Data Science", "h1": "How to Make Sense of Messy Tabular Data", "description": "Have you ever had to open a data set that was poorly formatted? The kind of data set that somebody slapped together and printed without thinking that maybe, maybe, somebody might want to later open\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.geeksforgeeks.org/python-string-split/", "anchor_text": ".split()", "paragraph_index": 7}, {"url": "https://www.geeksforgeeks.org/filter-in-python/", "anchor_text": "filter", "paragraph_index": 10}, {"url": "https://towardsdatascience.com/automatically-storing-results-from-analyzed-data-sets-ed918d04bc13", "anchor_text": "Automatically Storing Results from Analyzed Data Sets", "paragraph_index": 12}], "all_paragraphs": ["Have you ever had to open a data set that was poorly formatted? The kind of data set that somebody slapped together and printed without thinking that maybe, maybe, somebody might want to later open that data and process it themselves?", "It\u2019s a fantastic way to waste time and sprout a few more grey hairs, isn\u2019t it?", "Fortunately, Python provides a vast array of tools that you can use to make your life easier. You can use these available tools to reformat the data sets in a manner that\u2019s easy for you to use whether it was formatted well to begin with.", "In this example, let\u2019s talk about data that was saved in .txt format. Not in .csv, or some other format that makes sense for saving data sets. As a text file, with enough spaces in between to make the values line up and appear to be tabulated.", "Take, for instance, the data presented in Figure 1. This is sample data that I made up specifically to demonstrate the concept. If physical context matters to you, pretend that it\u2019s data showing the performance of a water-water heat exchanger. There\u2019s flow across both the hot side and cold side of the device, and inlet and outlet temperature measurements on both sides of the device.", "Do you see what makes this data set annoying to work with? It\u2019s a text file. There are no commas separating the data set, so you can\u2019t treat it as a CSV. Nope, it\u2019s not tab-separated either (Though that isn\u2019t obvious from the figure). Values are entered into the table, then enough spaces are added to make sure everything lines up.", "As data scientists we want to load this data and get to processing it as quickly as possible, but the format of this data set presents a delay. How do we quickly and easily get this into a usable format? With the power of Python\u2019s filter and .split functions!", "Text file objects read into Python have the .split() function available. This is a very useful function that does exactly what it says. It splits a block of text whenever the specified separator arrives. If you want your file to split whenever there\u2019s a comma, you can call .split(\u2018,\u2019) (Though I\u2019d recommend opening those as .csv files instead). If you want to split a file whenever you see a code word, you can enter that as a separator. If you have a text file that is formatted using an unspecified number of spaces, you can format on that as well. And that\u2019s what we need to do with the example data shown in Figure 1.", "To solve this conundrum, we first need to split the data whenever there is a space. This will yield a list containing all of our data points, keeping the data points intact. This .split function needs to be applied to each row of the table sequentially in order to keep the data in the desired format. Assuming that the data file is open and stored in a variable called Contents, we can use the following code:", "The above code will split the data of each row whenever it finds a space. This is a great step and provides a list that contains all of the final data. Unfortunately, since there is an arbitrary number of spaces in each separator the script will sometimes return empty values in the list.", "To solve this problem, we can use Python\u2019s filter function. To use filter, we simply provide it with the filter we want to use, and the data set we want to apply it to. You can create whatever filter you want when calling the filter function, making it a very flexible and useful too. If we want to remove all empty values from a list, we can take advantage of the filter commands available None option. This removes all of the blank spaces without extra effort from us. Finally, we need to enter our filtered results into a list (Python\u2019s filter doesn\u2019t return the actual data otherwise. The code then appears as:", "The result of this process is that all of the empty spaces between each data point are now removed, and the meaningful data points are now available as a list. This list of data can be used however you please. If you\u2019re ready to move straight into data analysis with this row of data, you can do so.", "However, I typically don\u2019t like to take that route. I like to save intermediate results as often as possible in case I want to return to the file later and use it for other purposes. In order to do that, you need to sequentially add each row of data to a data frame as you process it, and save the data frame using a meaningful name. Techniques to do that are described in Automatically Storing Results from Analyzed Data Sets.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Scientist at Lawrence Berkeley National Laboratory who also teaches skills you need to build a fulfilling career."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd59264bb2d58&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d59264bb2d58--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d59264bb2d58--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://petergrant-81989.medium.com/?source=post_page-----d59264bb2d58--------------------------------", "anchor_text": ""}, {"url": "https://petergrant-81989.medium.com/?source=post_page-----d59264bb2d58--------------------------------", "anchor_text": "Peter Grant"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F985f2ff02845&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&user=Peter+Grant&userId=985f2ff02845&source=post_page-985f2ff02845----d59264bb2d58---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd59264bb2d58&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd59264bb2d58&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.geeksforgeeks.org/python-string-split/", "anchor_text": ".split()"}, {"url": "https://www.geeksforgeeks.org/filter-in-python/", "anchor_text": "filter"}, {"url": "https://towardsdatascience.com/automatically-storing-results-from-analyzed-data-sets-ed918d04bc13", "anchor_text": "Automatically Storing Results from Analyzed Data Sets"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d59264bb2d58---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----d59264bb2d58---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----d59264bb2d58---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----d59264bb2d58---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/programming?source=post_page-----d59264bb2d58---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd59264bb2d58&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&user=Peter+Grant&userId=985f2ff02845&source=-----d59264bb2d58---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd59264bb2d58&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&user=Peter+Grant&userId=985f2ff02845&source=-----d59264bb2d58---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd59264bb2d58&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d59264bb2d58--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd59264bb2d58&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d59264bb2d58---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d59264bb2d58--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d59264bb2d58--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d59264bb2d58--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d59264bb2d58--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d59264bb2d58--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d59264bb2d58--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d59264bb2d58--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d59264bb2d58--------------------------------", "anchor_text": ""}, {"url": "https://petergrant-81989.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://petergrant-81989.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Peter Grant"}, {"url": "https://petergrant-81989.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "969 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F985f2ff02845&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&user=Peter+Grant&userId=985f2ff02845&source=post_page-985f2ff02845--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F90e3ec001185&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-make-sense-of-messy-tabular-data-d59264bb2d58&newsletterV3=985f2ff02845&newsletterV3Id=90e3ec001185&user=Peter+Grant&userId=985f2ff02845&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}