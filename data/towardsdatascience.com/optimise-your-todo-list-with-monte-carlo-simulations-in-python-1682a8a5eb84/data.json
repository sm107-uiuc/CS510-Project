{"url": "https://towardsdatascience.com/optimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84", "time": 1683002581.1728818, "path": "towardsdatascience.com/optimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84/", "webpage": {"metadata": {"title": "Optimise your todo list with Monte Carlo simulations in Python | by Sau Sheong | Towards Data Science", "h1": "Optimise your todo list with Monte Carlo simulations in Python", "description": "Create Monte Carlo simulations to figure out the best strategy for managing todo lists"}, "outgoing_paragraph_urls": [{"url": "https://bulletjournal.com/pages/learn", "anchor_text": "system on paper", "paragraph_index": 1}, {"url": "https://en.wikipedia.org/wiki/Monte_Carlo_method", "anchor_text": "Monte Carlo simulations", "paragraph_index": 5}, {"url": "https://www.thoughtco.com/probabilities-for-rolling-three-dice-3126558", "anchor_text": "likelihood of getting a 4, a 5 and a 6 on the roll of three dice", "paragraph_index": 6}, {"url": "https://www.skullsplitterdice.com/pages/how-to-use-a-d100", "anchor_text": "a die with a 100 sides", "paragraph_index": 15}, {"url": "https://en.wikipedia.org/wiki/Exponential_distribution", "anchor_text": "exponential distribution", "paragraph_index": 16}, {"url": "https://www.mathsisfun.com/data/percentiles.html", "anchor_text": "percentile", "paragraph_index": 25}, {"url": "https://en.wikipedia.org/wiki/All_models_are_wrong", "anchor_text": "George Box", "paragraph_index": 66}], "all_paragraphs": ["Returning from my holiday break back to the real world is quite a pain. I miss not waking up to an alarm clock, not commuting to the office and not having back-to-back meetings lined up the whole day. I also miss not having a todo list except having early morning walks along the beach with my wife.", "Like a lot of people, I have lots of things in my todo list. There are different schools of thought keeping a todo list \u2014 some like to keep them in an app on their phone, others synchronize with their email clients and yet other have a system on paper or even have a personal assistant who helps to organize them! Whichever it is, the idea of todo lists is to help you to be more effective in doing your tasks.", "Which leads to the obvious question \u2014 if you have multiple tasks on your todo list, which should you do first? The first one on the list? The easiest one to do? The important ones first? Or should you have more elaborate ways to tackle them?", "All this becomes a bit more interesting if you have limited time to complete our tasks. If you don\u2019t have enough time, which ones should you tackle first and what is the strategy to use to optimise your time?", "Obviously this depends greatly on what you want to optimise for \u2013 do you want to complete as many tasks as possible? Or complete as many high priority tasks as possible? Or complete as many tasks in time as possible?", "I like Monte Carlo simulations. I suppose most programmers do. Unless you\u2019re very good at mathematics, a good way to solve problems is to simply model the problem, generate random data and through run the simulations as many times as possible.", "Just think of it this way. Let\u2019s say you want to find out the likelihood of getting a 4, a 5 and a 6 on the roll of three dice. You can come up with a mathematical formula, or we can simply throw the dice a hundred thousand times, record the results of each throw to get the probabilities.", "Throwing the dice a hundred thousand times is pretty tedious but if you\u2019re a programmer you\u2019ll write a simple script to generate two random numbers between 1 and 6, then loop it.", "Of course in this example, coming up with the mathematical formula is easier since you probably learnt this in primary school maths but for more complex problems that are harder to solve, this can be a pretty effective way of coming up with the answer.", "That essentially is what Monte Carlo simulations are all about. This is what we\u2019re going to use to find out which is the best strategy to use when trying to optimise a todo list. We\u2019ll be using Python 3 to build a Monte Carlo simulation, running on Jupyter Notebook. The simulation will test various strategies and we\u2019ll measure their effectiveness through a set of metrics we design.", "The first thing we need to do is to build a model. It\u2019s simple enough, the only thing that we really need to model is the task.", "In most todo lists we have a description of the task, some notes and a due date. Many also have a priority level attached to the task. As part of modeling a task, we also need to indicate how much time the task takes as well as the date when the task is completed.", "In other words, we will model a task with the following attributes:", "I use recordtype to representTask. It\u2019s like a kind of mutable named tuple and it\u2019s relatively simple. To create aTask recordtype we need to have a function to create tasks.", "The create_task function takes the number of tasks to create and return a list of tasks. For each task, I need to set the weight, due date, duration and the completion date (done).", "The weight is simply a random number between 1 to 100, where the higher the number is, the more important the task is. I use randint to generate the random number. It uses a discrete uniform distribution, which is really like throwing a die with a 100 sides (this actually exists, I kid you not).", "The due date is another integer indicating the number of days away from the start of the simulation this task is due. Due dates in todo lists are mostly close to the current date, further away due dates are not as common. To model this, I create an exponential distribution, with a rate parameter (\u03bb) value of 5. Then I randomly choose a value from this distribution. What this does is to make it likelier to have closer due dates than later ones.", "The duration parameter for the task is how much time it will take to do that task, which is really the complexity of the task. The duration should be less than the due date, otherwise it\u2019s an impossible task! To model this I made the duration a random integer between 1 and the due date, again using randint.", "Finally the completion date or done attribute is set to 0 when the task is created and will be set to an integer that represents the amount of time that has passed since the simulation started, once the task is completed.", "We also need to have a function that tallies up the results after running the simulation.", "The tally function takes in a list of completed tasks and a list of all tasks that were created for the simulation, and returns a tuple of 3 values:", "These values are also the metrics by which we measure the effectiveness of the algorithms. Let\u2019s look at how we come up with these values.", "To calculate the percentage of tasks completed we just count the number of completed tasks over the total number of all tasks.", "Figuring out how many important tasks have been completed is tricky. Firstly how do we determine what tasks are important? Each task have a weight which has a value between 1 and 99. The larger this value is, the more important the task is.", "One way is to draw a line and say if the weight is more than 75, it\u2019ll be considered as an important task. However, the weights are randomly set for every simulation, which means there is a chance we might end up having no important task or having a lot of important tasks. This is not what we want.", "Another way is to use the percentile method to figure out which tasks are important. First, we sort the tasks according to their weight. Then we use a percentile, in this case, the 75th percentile of the important tasks (using the 75th percentile is arbitrary). For example, if we run a simulation with 25 tasks, then the 75th percentile is the top 6 tasks with the largest weight values and therefore these are considered the important tasks for that particular simulation.", "Now that we have a list of important tasks, we can check how many of them are in that list of completed tasks (that is, how many important tasks have been completed). We use this number over the total number of all tasks to represent the percentage of important tasks completed.", "Calculating this is quite straightforward. We just need to check each completed task in the given list and make sure that the done date is less than the due date. If it is, that means the task was completed in time, otherwise it\u2019s not. We just take this number of tasks completed in time over all tasks in the simulation to represent percentage of tasks completed in time.", "Next we\u2019ll look at the simulation. As mentioned earlier, if we have all the time we need to do all the tasks, we might not need to optimise our todo list. Unfortunately in the real world, we don\u2019t have this luxury. To simulate this lack of time, we add up the duration for all tasks and take a percentage of this total duration. This will be our deadline.", "As we go through the simulation we keep track of the elapsed time. We iterate through the given list of tasks and for each task we add the task duration to the elapsed time. As long as the elapsed_time is not past the deadline, we set the task completion date to the elapsed time and add the task to a list of completed tasks.", "Once the elapsed time is past the deadline the simulation ends, and we end up with a list of completed tasks. Remember that even if the task is complete, it doesn\u2019t mean it\u2019s done in time.", "If we run the simulation just once then it\u2019s not a Monte Carlo simulation. Monte Carlo simulations are about running simulations over and over again to solve a problem. To do this we will create a function called run.", "This function is pretty straightforward. We run over a number of iterations the following steps:", "Once we have the final set of data, we divide it over the number of iterations to get the final set of results for that particular algorithm.", "This is the fun part! The simulation is designed to test different todo strategies or algorithms to determine their effectiveness. The effectiveness of the algorithm is measured using 3 metrics (as explained above):", "Here\u2019s a list of the different algorithms we\u2019ll experiment. For each of these algorithms, we pass in a list of tasks and algorithm\u2019s job is to sort the tasks in an order according to how we want them to be processed.", "Now that we have all the pieces we need, let\u2019s assemble them together and run our Monte Carlo simulation! For each algorithm we use we also want to create a radar chart of the results.", "For the simulation, we will use the following parameters:", "You can change any of the parameters later when you run your own simulation to see how they impact the end results.", "Here\u2019s the results for each of the algorithms we ran.", "This is the default setup, which is really just doing the tasks in the same sequence as they were created. This requires no processing at all, we simply return the list of tasks as they were!", "As expected, since we have only 50% of the time to do the tasks, we expect only about 50% of all tasks completed. This goes for the important tasks as well.", "As for the completion of tasks in time, it turns out rather low at around 12%. This is not unexpected as well \u2014 because we are doing tasks in sequence and never in parallel, many tasks will not be completed in time.", "In this algorithm, we want the tasks that are due earlier to be done first. In other words, we want to sort by the due date, in an ascending order.", "With this algorithm, we have much better results! If we do tasks that are due first, we complete around 78% of all and important tasks. And since we are focusing on the due dates first, it\u2019s natural that we manage to do more tasks in time as well \u2014 around 29% of all tasks are completed in time.", "Just to test the simulation, we want to flip it around and do the tasks that are due later first instead. If our simulation works, we should get poor results.", "Sure enough, the number of tasks completed are rather low at about 18% and only around 7% of tasks are completed in time.", "In this algorithm, we want to focus on the importance of the tasks and so we sort them by their weight, in descending order.", "By focusing on important tasks first, we complete almost all the important tasks! Remember, we only have half the time to do it so this is quite a good result. As expected, the results for tasks completed and tasks completed in time are the same as the do-as-they-come algorithm.", "For this algorithm we want to do the easier tasks first, so we sort the tasks by their duration, in ascending order.", "The results here are pretty good but in surprising way.", "We complete around 83% of all and important tasks. This is expected because we are targeting the easier ones first which means we get to complete them faster and therefore more tasks get completed.", "However, surprisingly around 47% of tasks are completed in time as well. This number is even higher than the due-task-first algorithm!", "However, one way of looking at it, if we do the simpler tasks first, this means we end up doing more tasks, resulting in smaller completion dates as well. In this case it makes sense that we will end up completing more tasks in time.", "The algorithms we used previously were rather one-dimensional. That is, we focused on either the importance, due date or complexity alone. What if we use a more two dimensional algorithm?", "For this algorithm, we do the important tasks that are easier first. Meaning we weigh the duration of each task with its importance and sort by that result.", "Because this is a hybrid algorithm, we should expect the results to be in-between. For important tasks completed, as expected this is between the easier-tasks-first and the important-tasks-first algorithms. Similarly for the tasks completed, we have results in between important-tasks-first and easier-tasks-first as well.", "For tasks completed in time, we actually have results that are almost the same as the easier-tasks-first algorithm!", "Finally we try to do the easier tasks that are due first. This means we again weigh the duration of each task, but this time with its due date, and sort by that result.", "The results for this algorithm is a bit surprising. For all and important tasks completed, the results are about the same as the due-tasks-first algorithm, while the tasks completed in-time are about the same as the easier-tasks-first algorithm.", "As you probably realise by now, there is no best algorithm, the best one is the one that optimises for what you want. If you want to complete as many tasks as possible in time, you will do well with the easier-tasks-first algorithm. If you want to complete the most important tasks, then go with the important-tasks-first algorithm.", "This is, as the cliche goes, just the tip of the iceberg. There\u2019s plenty more to explore and improve. For example, you can try to improve the model:", "You can also create more complicated algorithms in order to optimise the todo list. For example, I\u2019ve only done a simple hybrid of 2 simple algorithms, you can try creating an algorithm that links up the weight, due date and duration parameters or even more.", "Also, all my algorithms simply sorted the todo list. You can actually customise a specific sequence of tasks that maximises all 3 metrics! In fact, you can try to create different permutations of the sequence of tasks in the todo list and run them through the simulation to figure out the optimal permutation. However do note that this doesn\u2019t necessarily constitute a particular algorithm to optimise your todo list, and a complex algorithm is hard to practice in real life.", "Feel free to check out the whole Jupyter Notebook here and make your changes! Let me know your result.", "We just ran through a whole bunch of different strategies for optimising your todo list and ran through a Monte Carlo simulation to try each one of them out. But how realistic is the simulation?", "As George Box, a famous statistician said:", "All models are wrong, but some are useful", "However simulations helps us to better understand the actual things or events we\u2019re simulating. It allows us to manipulate parameters and apply different strategies to test what works the best. At the end of the day, simulations are just tools to allow us to strategise and plan better.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1682a8a5eb84&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://me.dm/@sausheong", "anchor_text": "Mastodon"}, {"url": "https://towardsdatascience.com/?source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://sausheong.com/?source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": ""}, {"url": "https://sausheong.com/?source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": "Sau Sheong"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa358058b2410&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&user=Sau+Sheong&userId=a358058b2410&source=post_page-a358058b2410----1682a8a5eb84---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1682a8a5eb84&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1682a8a5eb84&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://bulletjournal.com/pages/learn", "anchor_text": "system on paper"}, {"url": "https://www.flickr.com/photos/robandstephanielevy/4616960925", "anchor_text": "https://www.flickr.com/photos/robandstephanielevy/4616960925"}, {"url": "https://en.wikipedia.org/wiki/Monte_Carlo_method", "anchor_text": "Monte Carlo simulations"}, {"url": "https://www.thoughtco.com/probabilities-for-rolling-three-dice-3126558", "anchor_text": "likelihood of getting a 4, a 5 and a 6 on the roll of three dice"}, {"url": "https://www.skullsplitterdice.com/pages/how-to-use-a-d100", "anchor_text": "a die with a 100 sides"}, {"url": "https://en.wikipedia.org/wiki/Zocchihedron", "anchor_text": "zocchihedron"}, {"url": "https://www.skullsplitterdice.com/pages/how-to-use-a-d100", "anchor_text": "https://www.skullsplitterdice.com/pages/how-to-use-a-d100"}, {"url": "https://en.wikipedia.org/wiki/Exponential_distribution", "anchor_text": "exponential distribution"}, {"url": "https://www.mathsisfun.com/data/percentiles.html", "anchor_text": "percentile"}, {"url": "https://en.wikipedia.org/wiki/Monte_Carlo_Casino", "anchor_text": "https://en.wikipedia.org/wiki/Monte_Carlo_Casino"}, {"url": "https://en.wikipedia.org/wiki/All_models_are_wrong", "anchor_text": "George Box"}, {"url": "https://medium.com/tag/python?source=post_page-----1682a8a5eb84---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/monte-carlo?source=post_page-----1682a8a5eb84---------------monte_carlo-----------------", "anchor_text": "Monte Carlo"}, {"url": "https://medium.com/tag/simulation?source=post_page-----1682a8a5eb84---------------simulation-----------------", "anchor_text": "Simulation"}, {"url": "https://medium.com/tag/to-do-list?source=post_page-----1682a8a5eb84---------------to_do_list-----------------", "anchor_text": "To Do List"}, {"url": "https://medium.com/tag/jupyter-notebook?source=post_page-----1682a8a5eb84---------------jupyter_notebook-----------------", "anchor_text": "Jupyter Notebook"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1682a8a5eb84&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&user=Sau+Sheong&userId=a358058b2410&source=-----1682a8a5eb84---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1682a8a5eb84&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&user=Sau+Sheong&userId=a358058b2410&source=-----1682a8a5eb84---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1682a8a5eb84&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F1682a8a5eb84&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----1682a8a5eb84---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----1682a8a5eb84--------------------------------", "anchor_text": ""}, {"url": "https://sausheong.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://sausheong.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sau Sheong"}, {"url": "https://sausheong.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.6K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa358058b2410&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&user=Sau+Sheong&userId=a358058b2410&source=post_page-a358058b2410--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fb7ba9640486a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptimise-your-todo-list-with-monte-carlo-simulations-in-python-1682a8a5eb84&newsletterV3=a358058b2410&newsletterV3Id=b7ba9640486a&user=Sau+Sheong&userId=a358058b2410&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://www.manning.com/books/go-web-programming", "anchor_text": "Go Web Programming2016"}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}