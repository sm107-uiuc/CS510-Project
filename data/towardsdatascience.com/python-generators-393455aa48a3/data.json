{"url": "https://towardsdatascience.com/python-generators-393455aa48a3", "time": 1683006235.300305, "path": "towardsdatascience.com/python-generators-393455aa48a3/", "webpage": {"metadata": {"title": "Python Generators. A tutorial on developing python\u2026 | by Anuradha Wickramarachchi | Towards Data Science", "h1": "Python Generators", "description": "In simple terms, Python generators facilitate functionality to maintain persistent states. This enables incremental computations and iterations. Furthermore, generators can be used in place of arrays\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["In simple terms, Python generators facilitate functionality to maintain persistent states. This enables incremental computations and iterations. Furthermore, generators can be used in place of arrays to save memory. This is because generators do not store the values, but rather the computation logic with the state of the function, similar to an unevaluated function instance ready to be fired.", "Generator expressions can be used in place of array create operations. Unlike an array, the generator will generate numbers at runtime.", "We can see that in the above scenario, we are saving quite a lot of memory by having the generator in place of the array.", "Let us consider a simple example where you want to generate an arbitrary number of prime numbers. The following are the functions to check if a number is prime and the generator that will yield us infinitely many prime numbers.", "As you can see in the second function we iterate in a while loop and yield the numbers that are prime. Let\u2019s see how we can use the above generator.", "First, we call the function and get the generator instance. Although this can emulate an infinite array, there is no element to be found yet. If you call list(primes), your program could crash with a MemoryError. However, for prime numbers, it will not go there since the prime number space is sparse for computations to reach the memory limit in a finite time. However, for generators, you will not know the length beforehand. If you call len(primes) you\u2019ll get the following error for the very same reason that the numbers are only generated at the run time.", "Although our prime number example has an infinite iteration space, in most day-to-day scenarios we face with finite computations. Therefore, let\u2019s have a look at an example that we can use to read a file containing text data and the semantic score of the sentence in the next line.", "Imagine the file is 1TB and the corpus of words is 500000. It would not fit in memory. A simple solution is to read 2 lines at once, compute a dictionary of words per line and return it with the semantic score in the next line. The file would look like below.", "It is a clear fact that we do not need to open the file at once. Furthermore, the lines must be vectorized and possibly saved into another file that can be parsed straightaway to train a machine learning model. So the option that will give us a clean code is to use a generator that will read two lines at once and give us the data and semantic score as a tuple.", "Assume that we have the above text document in a file named test.txt. We will be using the following generator function to read the file.", "We can use the above function in a for loop as follows.", "In a normal for loop, the iteration is stopped when no more yielding is performed by the generator. However, this can be observed by us manually calling next() on the generator instance. Calling the next() beyond the iteration limit will raise the following exception.", "Let's recall our prime numbers example. Imagine we want to reset our generator function\u2019s value to 100 to start yielding values above 100 if they\u2019re prime. We can use send() method on a generator instance to push a value into the generator as below.", "Note that we must call next() at least once before we call send(). Let\u2019s see how we must modify our function to fit the purpose. Because the function should know how to assign the received value.", "We store the yielded value in the variable i. If that\u2019s not None type, we assign it to the value variable. None check is essential as the first next() will have no value in value variable to yield.", "Imagine you want to end the iteration at a value above 10 to avoid overflow or timeouts (hypothetically). The throw() function can be used to prompt the generator to halt raising an exception.", "This technique is useful to validate inputs. The logic lies upon the user of the generator. This will result in the following output.", "It is often elegant to handle the closure without an exception in hand. In such scenarios, theclose() function can be used to effectively close the iterator.", "This will give us the following output.", "Note that we have value 11 which is the last computed value greater than 11. This simulates the behaviour of a do while loop in C/C++.", "I believe this article would help you to make better software and research programs in future. Thanks for reading.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F393455aa48a3&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----393455aa48a3--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----393455aa48a3--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://anuradhawick.medium.com/?source=post_page-----393455aa48a3--------------------------------", "anchor_text": ""}, {"url": "https://anuradhawick.medium.com/?source=post_page-----393455aa48a3--------------------------------", "anchor_text": "Anuradha Wickramarachchi"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fddf633dcad17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=post_page-ddf633dcad17----393455aa48a3---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F393455aa48a3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F393455aa48a3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://pixabay.com/users/Al3xanderD-1476718/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=4550711", "anchor_text": "Alexander Droeger"}, {"url": "https://pixabay.com/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=4550711", "anchor_text": "Pixabay"}, {"url": "https://medium.com/tag/programming?source=post_page-----393455aa48a3---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----393455aa48a3---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data?source=post_page-----393455aa48a3---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/tag/data-science?source=post_page-----393455aa48a3---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/software?source=post_page-----393455aa48a3---------------software-----------------", "anchor_text": "Software"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F393455aa48a3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=-----393455aa48a3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F393455aa48a3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=-----393455aa48a3---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F393455aa48a3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----393455aa48a3--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F393455aa48a3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----393455aa48a3---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----393455aa48a3--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----393455aa48a3--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----393455aa48a3--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----393455aa48a3--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----393455aa48a3--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----393455aa48a3--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----393455aa48a3--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----393455aa48a3--------------------------------", "anchor_text": ""}, {"url": "https://anuradhawick.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://anuradhawick.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Anuradha Wickramarachchi"}, {"url": "https://anuradhawick.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2K Followers"}, {"url": "https://anuradhawick.com/", "anchor_text": "https://anuradhawick.com/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fddf633dcad17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=post_page-ddf633dcad17--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F9f8ac7ab9f5b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpython-generators-393455aa48a3&newsletterV3=ddf633dcad17&newsletterV3Id=9f8ac7ab9f5b&user=Anuradha+Wickramarachchi&userId=ddf633dcad17&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}