{"url": "https://towardsdatascience.com/from-covariance-matrix-to-principle-component-analysis-d101cc50934e", "time": 1683017838.703422, "path": "towardsdatascience.com/from-covariance-matrix-to-principle-component-analysis-d101cc50934e/", "webpage": {"metadata": {"title": "From Covariance Matrix to Principle Component Analysis | by Dennis Bakhuis | Towards Data Science", "h1": "From Covariance Matrix to Principle Component Analysis", "description": "You probably have an idea of what variance is but did you ever realize that the variance and covariance have a geometric interpretation? Many algorithms such as logistic regression, support vector\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/dennisbakhuis/Tutorials/tree/master/Covariance_PCA", "anchor_text": "here", "paragraph_index": 1}, {"url": "https://www.linkedin.com/in/dennisbakhuis/", "anchor_text": "contact me on LinkedIn", "paragraph_index": 30}], "all_paragraphs": ["You probably have an idea of what variance is but did you ever realize that the variance and covariance have a geometric interpretation? Many algorithms such as logistic regression, support vector machines, and neural networks greatly benefit from zero-mean, standardized, and uncorrelated features. One method to investigate your dataset is calculating the variance-covariance matrix and this same matrix can be used to decorrelate your features.", "The Jupyter notebook with all code is available here.", "Before we start with the covariance let us first have a quick look at the mean and variance. These are two statistics we are generally interested in when talking about a dataset or population. For example, we might be interested in the mean length of a fish in the ocean. To get the exact value we need to measure each fish in the ocean, which is of course completely impossible to do.", "To make good estimates in uncertainty we use statistics. Instead of measuring all the fish in the ocean, we take a sample and say that this sample represents the length of all fish in the ocean. This sample could be for example 1000 fish we randomly caught all over the ocean. From these 1000 fish the average length is 10cm. This gives a first impression on the length of the fish, but this does not tell you much on what you can expect. To get a better impression on what to expect we also measure the spread of a distribution. For example, we have two distribution of three fish, the first being [0.1cm, 10cm, 20cm] and the second [9cm, 10cm, 11cm]. Both distributions have (almost) identical mean, namely 10cm. Still, the distributions are completely different as in the first you can expect fish between 0.1cm and 20cm while in the second between 9cm and 11cm. The second distribution as a much smaller spread. The spread is generally measured using variance or standard deviation (square root of the variance). The variance is literally the average difference between the mean of the distribution and is defined as:", "Here, X is our distribution and we sum over all squared differences between the sample and the distribution mean (x\u0305). In this article I promised to discuss the covariance which is closely related to the variance. The covariance is a measure of how much two random variables vary together. This might be a bit vague, but let us express this in terms of our fish example. Instead of only measuring the the length of each fish, we also measured the weight. Now we can use the covariance to compare how much these to variables vary together. Before we show an example using Python, lets have a look at the definition:", "You might notice that the equation for variance is almost identical to the equation for covariance. Specifically, the variance is the covariance with itself. Another property we can see in this equation is that it is symmetrical, i.e. the order of X and Y do not matter and give identical results. But what does the number that comes out of the covariance calculation actually mean? For this, let us create a dataset about our fish\u2019s length and weights and translate these equations into \ud83d\udc0d Python!", "The code above creates two normally distributed sets of numbers which we group in a single Numpy array. The mean of both distributions are 10 and we set the standard deviation at 2.5. For both properties (X = length, Y = weight), we take 1000 samples. When we plot the distribution, it looks like this:", "Feature X (length) is on the horizontal axis and feature Y (weight) is on the vertical axis. Next, we will write a function to calculate the variance and the covariance. As the variance is identical to the covariance with itself, we only need to implement that function.", "The distribution we created had a standard deviation of 2.5, this means that we expect a variance of 6.25 ((2.5)\u00b2). Our covariance with itself, which is the variance, we find 5.77 which is quite close but not perfect. We have a subset of the population of fish and therefore, not all the fish in the ocean. A small mismatch is to be expected. When we look at the covariance between the two variables we have, length and weight, we see that it is quite small (0.016). We took random samples from a normal distribution and this means that both variables are independent, i.e. uncorrelated. We expect that the covariance is zero. For the same reasoning as before, we have a small but explainable mismatch. Both, variance and covariance are very useful when investigating a dataset. We can calculate the variance and covariance of all our features separately or we can do it all at once and calculate the so-called variance-covariance matrix, or simply called the covariance matrix. When calculating the covariance matrix, you will get square matrix where both dimensions are the amount of features in a dataset. If we would calculate the covariance matrix for our fish dataset, it would have a dimensions 2x2. Each position in the matrix is a covariance between two of the features. On the diagonal are all the variances and on all the off-diagonal are the covariances. As mentioned before, the covariance is a symmetric function. This results that the covariance-matrix is also symmetric and both sides of the diagonal are identical. The covariance matrix can be calculated in Python like this:", "Indeed, the covariance matrix is of size 2x2 and we see that the variances are on the diagonal. Both distributions have a different spread, however, the covariance is identical in both entries as it should (the covariance is symmetric). Now, that we have made the covariance clear, lets move to a better example. When looking at our previous distribution, the relation between length and weight of the fish did not feel right. Our gut-feeling probably tells us that the weight should increase with the length of the fish, at least in some extent. Have a look at the new distribution:", "It is now clearly visible that these two variables share a trend. When a fish is smaller in length, it is generally also lighter, while longer fish are often on the heavy side. Due to the transformations, the averages have changed to 39.8cm and 15.2kg for the length and weigh respectively. Lets have a look at the covariance matrix:", "The variances are much larger now. The spread on the length of the fish (X) is approximately 4 times larger than the spread on the weight. A quick check in figure 2 shows that this is indeed the case (the width of values on both axes show a difference of approximately a factor four). Notice that the variance explains the spread only in the direction parallel to the axes, i.e. in the horizontal and vertical directions of figure 2.", "In our previous example, we had uncorrelated data, and this resulted in a covariance close to zero. In this example, the covariance is much larger and as we already suspected from the figure, the features show a correlation. Another thing to notice is that the covariance is positive, meaning that the features are positively correlated. Larger fish are heavier and smaller fish are lighter. When size increases, so does the weight. If the value of the covariance would have been negative, the features would have been negatively correlated, i.e. if one feature increases, the other feature would decrease and vice versa. For uncorrelated features, where the covariance is (close to) zero, if one feature changes, the other feature would not respond to that change. To get some more feeling on these numbers, have a look on the table below:", "The table shows our previously defined variables X (the length of the fish) and Y (the weight of the fish). For simplicity, we only have gathered five samples. X has values 35cm, 30cm, 12cm, 25cm, and 22cm and for the same fish, we measured weights of 9kg, 7kg, 3kg, 5kg, and 4kg respectively. The first step is to calculate the mean of both variables. For X and Y the means are 24.8cm and 5.6cm. Next, we are going to calculate the difference between the sample and its mean for each variable (shown as x-<x> in the table). A positive value means that the sample is larger than its average value and a negative value is below the typical value. We are now just two steps away from the covariance. First we need to multiply deviation from means with each other. Notice that when two signs are identical, i.e. both are positive or negative, the product will also be positive. When one of the two values are of a different sign, we get negative values. In this example, most samples have the same sign (shown in green). To get the covariance, we need sum the final values and divide them by n-1. Again, we have a positive covariance and therefore, the variable X and Y are positively correlated.", "Now, lets ask ourselves, how do we get a covariance of zero? There are two possible options. The first option is that if one sample is large (we have a large fish), the other variable is approximately the mean. We would multiply a large number (the large fish) with approximately zero (the average weight). This would have been visible when we plotted the distribution as it would resemble a cross figure (think about it or check figure 3). The second option for a covariance to be close to zero is that the average tends to zero. They are on average a similar amount of positively correlated samples (the positive product values) as there are negatively correlated samples (when the product is negative). We cannot predict one variable using the other and therefore, they are not correlated. This is what we see in our first, completely random distribution.", "The covariance is zero when the positive correlation contributions are equal to the negative correlation contributions, resulting in unpredictable behavior.", "Now we know that a large positive covariance means a positive correlation and a large negative covariance means a negative correlation. But what does the magnitude of the covariance actually mean. It is related to the amount of correlation between the two variables, i.e. larger is more correlated. But what if we would have a third variable, e.g. maximum swim velocity, and want to know which of the variables are more correlated with each other? The problem here is that the covariance still has units, namely cm*kg. Of course, these units do not make sense in the real world and the measure is only good for comparing with other covariances with identical units. To compare multiple covariances with each other, we need to normalize them. This is what is done when we calculate the correlation (Pearson Population Coefficient):", "The correlation is the covariance (numerator) divided by the individual standard deviation (square root of the variance) of each variable (denominator). What is great about this normalization is that the correlation scales between -1 and 1. When -1, both variables are perfect negatively correlated and when 1, they are positively correlated. There are no more units as they are divided out, and therefore, we can now compare the amount of correlation with any variable we want.", "I promised a geometric interpretation of the covariance matrix and maybe from the previous examples you have already a hunch where we are going. In our fish example, when calculating the covariance matrix, there are three unique values. Two of these values are the variances of each feature and they indicate the spread. The wider the spread, the larger the variance. We can imagine these variances as vectors (more spread is a larger vector). The final number in the covariance-matrix is the covariance itself and this tells us how correlated the two features are. This can be seen as the angle between the two vectors. If the angle is perpendicular, the features are not correlated. All three cases are shown in figure 4:", "The angle between the two vectors (the covariance) is directly related to the overlap of the two vectors. If we would project vector Y on top of vector X, i.e. calculate how much vector Y is overlapping with vector X, we can calculate the angle using the so called dot product:", "What we have learned so far is that the covariance is the rotation between two vectors. The rotation is in direct relation with the dot product that is a measure of overlap between two vectors. Rewriting the dot product we seen an equation that must look very familiar:", "By reordering the dot product equation we can set the cosine(\u236c) in front. If the vectors are not overlapping (no correlation), cosine(\u236c) is zero. The more there is a positive correlation, cosine(\u236c) increases in the positive direction, with a maximum of 1 for perfect overlap. The negative correlation, cosine(\u236c) in the negative direction, with -1 as the perfect anti-correlation.", "All this this information is encoded in the covariance matrix. The variances indicate the scale of each vector (feature) and the covariance indicates the amount of rotation (overlap) between the two vectors.", "The geometric relation is exploited in Principle Component Analysis (PCA) and other related techniques. In our fish measuring example, there is a clear correlation and we can draw an imaginary diagonal that fits that trend. If we would calculate the variance (spread) on this diagonal line, it would be larger than the other two variances. PCA finds these optimal axes, generally called basis, and orders these using the variance. The first basis will have the largest variance and the second will be a bit less. Generally, PCA is used as a method for dimension reduction, i.e. reduce features while minimizing the loss of important information. The principle components can also be used for a technique called whitening, which decorrelates the input vector and transforms it into a white noise vector. This can be useful for many Machine Learning (ML) techniques such as logistic regression, support vector machines, and artificial neural networks. These algorithms perform much better if the features are uncorrelated and whitening can help. To find the principle components for our example data we have to calculate the eigen vectors and eigen values of the covariance matrix. While we could easily spend hours on the topic of eigen values and eigen vectors, for now, it is important to know that the vectors define the direction en the values define their scaling. For this particular case (because our covariance matrix is symmetric), the eigen vectors are perpendicular to each other and this makes it pretty neat. Calculating the eigen vectors is not that trivial but Numpy has all of the linear algebra included:", "Now we can use the eigen values and eigen vectors to overlay the principle components:", "If we would do PCA we could for example only take the main principle component, which is the diagonal and look at its influence on the target variable. However, if we want to apply whitening, we want to somehow rotate the data such that the first principle component is horizontal and the second is vertical. Of course, this is all also possible with 100 dimensions, but impossible to visualize. We could choose to standardize the variance but that depends on what we want to achieve. For now, lets just remove the correlation between the two features. In Python, it is only a few lines:", "We do a dot product with the eigen vectors, which will apply the rotation. To standardize, we would also divide by the square root of the eigen values to scale to unit variance. Now we have a decorrelated the two features:", "Decorrelating data does not always make sense. We have successfully decorrelated our fish data and now can easily the new features. Realize, that the new features are not the length and weight anymore, but combined features. In this example, it might not be useful anymore to include the decorrelated Y feature.", "In this example it is probably not that useful to apply whitening. Whitening is however very useful for images as pixels are very correlated with their neighboring pixels. Whitening is a useful tool in your toolbox and as it is closely related to PCA, also gives understanding in that topic.", "I hope that this shed some light into variance, covariance, the variance-covariance matrix, PCA, and whitening and how they are all linked. When I first learned about these topics it felt very abstract but the geometric representation helped my understanding. Hopefully, it was also useful for you.", "If you have any questions, comments, or requests, feel free to contact me on LinkedIn.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist with a passion for natural language processing and deep learning. Python and open source enthusiast. Background in fluid dynamics."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd101cc50934e&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d101cc50934e--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d101cc50934e--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://dennisbakhuis.medium.com/?source=post_page-----d101cc50934e--------------------------------", "anchor_text": ""}, {"url": "https://dennisbakhuis.medium.com/?source=post_page-----d101cc50934e--------------------------------", "anchor_text": "Dennis Bakhuis"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5b8617eb89bb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&user=Dennis+Bakhuis&userId=5b8617eb89bb&source=post_page-5b8617eb89bb----d101cc50934e---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd101cc50934e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd101cc50934e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/dennisbakhuis/Tutorials/tree/master/Covariance_PCA", "anchor_text": "here"}, {"url": "https://unsplash.com/@johnnyafrica?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Johnny Chen"}, {"url": "https://unsplash.com/s/photos/school-fish?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://www.linkedin.com/in/dennisbakhuis/", "anchor_text": "contact me on LinkedIn"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d101cc50934e---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----d101cc50934e---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/python?source=post_page-----d101cc50934e---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/statistics?source=post_page-----d101cc50934e---------------statistics-----------------", "anchor_text": "Statistics"}, {"url": "https://medium.com/tag/programming?source=post_page-----d101cc50934e---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd101cc50934e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&user=Dennis+Bakhuis&userId=5b8617eb89bb&source=-----d101cc50934e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd101cc50934e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&user=Dennis+Bakhuis&userId=5b8617eb89bb&source=-----d101cc50934e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd101cc50934e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d101cc50934e--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd101cc50934e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d101cc50934e---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d101cc50934e--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d101cc50934e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d101cc50934e--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d101cc50934e--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d101cc50934e--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d101cc50934e--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d101cc50934e--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d101cc50934e--------------------------------", "anchor_text": ""}, {"url": "https://dennisbakhuis.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://dennisbakhuis.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Dennis Bakhuis"}, {"url": "https://dennisbakhuis.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.5K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5b8617eb89bb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&user=Dennis+Bakhuis&userId=5b8617eb89bb&source=post_page-5b8617eb89bb--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fc167ef22c4d5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-covariance-matrix-to-principle-component-analysis-d101cc50934e&newsletterV3=5b8617eb89bb&newsletterV3Id=c167ef22c4d5&user=Dennis+Bakhuis&userId=5b8617eb89bb&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}