{"url": "https://towardsdatascience.com/nlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b", "time": 1682995453.105261, "path": "towardsdatascience.com/nlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b/", "webpage": {"metadata": {"title": "NLP: Contextualized word embeddings from BERT | by Andreas Pogiatzis | Towards Data Science", "h1": "NLP: Contextualized word embeddings from BERT", "description": "Step by step tutorial to obtain contextualized token embeddings by utilizing Google\u2019s BERT model. Implemented in Google Colaboratory with Keras and TensorFlow."}, "outgoing_paragraph_urls": [{"url": "https://colab.research.google.com/drive/1RhmL0BqNe52FEbdSyLpkfVuCZxE7b5ke", "anchor_text": "here", "paragraph_index": 4}, {"url": "https://colab.research.google.com/notebooks/welcome.ipynb#recent=true", "anchor_text": "Google Colab", "paragraph_index": 31}, {"url": "https://colab.research.google.com/drive/1RhmL0BqNe52FEbdSyLpkfVuCZxE7b5ke", "anchor_text": "here", "paragraph_index": 51}, {"url": "https://arxiv.org/abs/1810.04805", "anchor_text": "BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding", "paragraph_index": 54}, {"url": "https://github.com/openai/gpt-2", "anchor_text": "Language Models are Unsupervised Multitask Learners", "paragraph_index": 55}, {"url": "https://arxiv.org/abs/1802.05365", "anchor_text": "Deep contextualized word representations", "paragraph_index": 56}, {"url": "https://arxiv.org/pdf/1310.4546.pdf", "anchor_text": "Distributed Representations of Words and Phrases and their Compositionality", "paragraph_index": 57}], "all_paragraphs": ["Undoubtedly, Natural Language Processing (NLP) research has taken enormous leaps after being relatively stationary for a couple of years. Firstly, Google\u2019s Bidirectional Encoder Representations from Transformer (BERT) [1] becoming the highlight by the end of 2018 for achieving state-of-the-art performance in many NLP tasks and not much later, OpenAI\u2019s GPT-2 stealing the thunder by promising even more astonishing results which reportedly rendering it too dangerous to publish! Considering the time frame and the players behind these publications, it takes no effort to realize that there is a lot of activity in the space at the moment.", "That being said, we will focus on BERT for this post and attempt to have a small piece of this pie by extracting pre-trained contextualized word embeddings like ELMo [3].", "To give you a brief outline, I will first give a little bit of background context, then a take a high-level overview of BERT\u2019s architecture, and lastly jump into the code while explaining some tricky parts here and there.", "Just for more convenience, I will be using Google\u2019s Colab for the coding but the same code can as well run on your local environment without many modifications.", "If you came just for the coding part, skip to the \u201cBERT Word Embedding Extraction\u201d section. Find the finished notebook code here.", "To start off, embeddings are simply (moderately) low dimensional representations of a point in a higher dimensional vector space. In the same manner, word embeddings are dense vector representations of words in lower dimensional space. The first, word embedding model utilizing neural networks was published in 2013 [4] by research at Google. Since then, word embeddings are encountered in almost every NLP model used in practice today. Of course, the reason for such mass adoption is quite frankly their effectiveness. By translating a word to an embedding it becomes possible to model the semantic importance of a word in a numeric form and thus perform mathematical operations on it. To make this more clear I will give you the most common example that you can find in the context of word embeddings", "When this was first possible by the word2vec model it was an amazing breakthrough. From there, many more advanced models surfaced which not only captured a static semantic meaning but also a contextualized meaning. For instance, consider the two sentences below:", "Note that the word apple has a different semantic meaning in each sentence. Now with a contextualized language model, the embedding of the word apple would have a different vector representation which makes it even more powerful for NLP tasks.", "However, I will leave the details of how that works, out of the scope of this post just to keep it short and on point.", "To be frank, much of the progress in the NLP space can be attributed to the advancements of general deep learning research. More particularly, Google (again!) presented a novel neural network architecture called a transformer in a seminal paper [5] which had many benefits over the conventional sequential models (LSTM, RNN, GRU etc). Advantages included but were not limited to, the more effective modeling of long term dependencies among tokens in a temporal sequence, and the more efficient training of the model in general by eliminating the sequential dependency on previous tokens.", "In a nutshell, a transformer is an encoder-decoder architecture model which uses attention mechanisms to forward a more complete picture of the whole sequence to the decoder at once rather than sequentially as illustrated in the figures below.", "Again, I won\u2019t be describing details about how attention works as it will make the topic way more confusing and harder to digest. Feel free to follow the relevant paper in the references.", "OpenAI\u2019s GPT was the first to create a transformer based language model with fine tuning but to be more precise, it was only using the decoder of the transformer. Therefore, making the language modeling uni-directional. The technical reason for dropping out the encoder was that language modeling would become a trivial task as the word to be predicted could have ultimately seen itself.", "By now, the name of the model should probably make more sense and give you a rough idea of what it is. BERT brought everything together to build a bidirectional transformer-based language model using encoders rather than decoders! To overcome the \u201csee itself\u201d issue, the guys at Google had an ingenious idea. They employed masked language modeling. In other words, they hid 15% of the words and used their position information to infer them. Finally, they also mixed it up a little bit to make the learning process more effective.", "Although this methodology had a negative impact on convergence time, it outperformed state-of-the-art models even before convergence which sealed the success of the model.", "Normally, BERT represents a general language modeling which supports transfer learning and fine-tuning on specific tasks, however, in this post we will only touch the feature extraction side of BERT by just obtaining ELMo-like word embeddings from it, using Keras and TensorFlow.", "But hold your horses! Before we jump into the code let\u2019s explore BERT\u2019s architecture really quick so that we have a bit of background at implementation time. Believe me, it will make things a lot easier to understand.", "In fact, BERT developers created two main models:", "In this post, I will be using the BASE model as it is more than enough ( and way smaller!).", "From a very high-level perspective, BERT\u2019s architecture looks like this:", "It may seem simple but remember that each encoder block encapsulates a more sophisticated model architecture.", "At this point, to make things clearer it is important to understand the special tokens that BERT authors used for fine-tuning and specific task training. These are the following:", "Moving on, the input format that BERT expects is illustrated below:", "As such, any input to be used with BERT must be formatted to match the above.", "The input layer is simply the vector of the sequence tokens along with the special tokens. The \u201c##ing\u201d token in the example above may raise some eyebrows so to clarify, BERT utilizes WordPiece [6] for tokenization which in effect, splits token like \u201cplaying\u201d to \u201cplay\u201d and \u201c##ing\u201d. This is mainly to cover a wider spectrum of Out-Of-Vocabulary (OOV) words.", "Token embeddings are the vocabulary IDs for each of the tokens.", "Sentence Embeddings is just a numeric class to distinguish between sentence A and B.", "And lastly, Transformer positional embeddings indicate the position of each word in the sequence. More details on this one can be found in [5].", "Finally, there is one last thing. Everything is great is sofar, but how can I get word embeddings from this?!? As discussed, BERT base model uses 12 layers of transformer encoders, each output per token from each layer of these can be used as a word embedding! You probably wonder, which one is the best though? Well, I guess this depends on the task but empirically, the authors identified that one of the best performing choices was to sum the last 4 layers, which is what we will be doing.", "As illustrated the best performing option is to concatenate the last 4 layers but in this post, the summing approach is used for convenience. More particularly, the performance difference is not that much, and also there is more flexibility for truncating the dimensions further, without losing much information.", "Enough with the theory. Let\u2019s move on to the practice.", "Firstly, create a new Google Colab notebook. Go to Edit->Notebook Settings and make sure hardware accelerator is set to TPU.", "Now, the first task is to clone the official BERT repository, add its directory to the path and import the appropriate modules from there.", "The two modules imported from BERT are modeling and tokenization. Modeling includes the BERT model implementation and tokenization is obviously for tokenizing the sequences.", "Adding to this, we fetch our TPU address from colab and initialize a new tensorflow session. (Note that this only applies for Colab. When running locally, it is not needed). If you see any errors on when running the block below make sure you are using a TPU as hardware accelerator (see above)", "Moving on, we select which BERT model we want to use.", "As you can see there are three available models that we can choose, but in reality, there are even more pre-trained models available for download in the official BERT GitHub repository. Those are just the models that have already been downloaded and hosted by Google in an open bucket so that can be accessed from Colaboratory. (For local use you need to download and extract a pre-trained model).", "Recall the parameters from before: 12 L (transformer blocks) 768 H (hidden layer size) 12 A (attention heads) . \u201cUncased\u201d is just for lowercase sequences. In this example, we will use the uncased BERT BASE model.", "Furthermore, we define some global parameters for the model:", "Most of the parameters above are pretty self-explanatory. In my opinion, the only one that may be a little bit tricky is the LAYERS array. Recall that we are using on the last 4 layers from the 12 hidden encoders. Hence, LAYERS keeps their indices.", "The next part is solely to define wrapper classes for the input before processing and after processing (Features).", "In the InputExample class, we have set text_b to None by default since we aim to use single sequences rather than a sequence-pairs.", "Moreover, the InputFeatures class encapsulates the features that BERT needs for input (See input diagram above). The tokens property is clearly a vector of input tokens, input_ids are the ids that correspond to the token from the vocabulary, input_mask annotates real token sequence from padding and lastly, input_type_ids separates segment A from segment B so it is not really relevant here.", "This is to set up our Estimator. An Estimator is just an abstraction for a model that tensorflow provides along with an API for training, evaluation, and prediction. Our custom estimator is, therefore, a wrapper around the BertModel. Admittedly there are parts of the code that can be removed from the above but I am sticking to the example that Google provided just for consistency. The important parts there is line 60 \u2014 where the bert model is defined \u2014 , and line 100 where the predictions from the top 4 layers are extracted.", "Continue along by also adding the following:", "This is the function that takes care of the input processing. In other words, it transforms InputExamples to InputFeatures.", "Adding to these, we create a function for converting a normal string sequence to InputExample:", "Now for the last bit of the code, we define a function which accepts an array of strings as a parameter and the desired dimension (max 768) of the embedding output and returns a dictionary with the token as key and the embedding vector as value.", "The above code snippet simply builds the estimator and invokes a prediction based on the given inputs.", "Let\u2019s go ahead and test our model by running this:", "If everything goes well, you will have a dictionary containing the embeddings of size 50 per token. Remember that these are contextualized embeddings, so if you have duplicate tokens on different sequences only the embedding of the last token will be kept in the dictionary. To keep both, replace the dictionary with a different data structure.", "You can find the complete notebook here.", "Now, these embeddings can be used as input features for other models built for custom tasks. Nevertheless, I will save that for another post. Or even maybe implement a BERT Keras Layer for seamless embedding integration.", "That\u2019s all from me folks. I hope you enjoyed the post and hopefully got a clearer picture around BERT. Feel free to post your feedback or questions in the comments section.", "[1] J.Devlin, M. Chang, K. Lee and K. Toutanova, BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding (2018)", "[2] Radford, Alec, Wu, Jeff, Child, Rewon, Luan, David, Amodei, Dario, Sutskever, Ilya, Language Models are Unsupervised Multitask Learners (2019)", "[3] M. Peters, M. Neumann, M. Iyyer, M. Gardner, C. Clark, K.Lee and L.Zettlemoyer, Deep contextualized word representations (2018), North American Chapter of the Association for Computational Linguistics", "[4] T.Mikolov, I. Sutskever, K. Chen, G. Corrado and J. Dean, Distributed Representations of Words and Phrases and their Compositionality (2013)", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "\u2630 PhD Candidate @ UoG \u25cf Combining Cyber Security with Data Science \u25cf Writing to Understand"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F67ef29f60a7b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://apogiatzis.medium.com/?source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": ""}, {"url": "https://apogiatzis.medium.com/?source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": "Andreas Pogiatzis"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd468d7b1e1a9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&user=Andreas+Pogiatzis&userId=d468d7b1e1a9&source=post_page-d468d7b1e1a9----67ef29f60a7b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F67ef29f60a7b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F67ef29f60a7b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/photos/6ywyo2qtaZ8?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Eugenio Mazzone"}, {"url": "https://unsplash.com/search/photos/words?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://colab.research.google.com/drive/1RhmL0BqNe52FEbdSyLpkfVuCZxE7b5ke", "anchor_text": "here"}, {"url": "http://mlexplained.com/2017/12/29/attention-is-all-you-need-explained/", "anchor_text": "http://mlexplained.com/2017/12/29/attention-is-all-you-need-explained/"}, {"url": "https://arxiv.org/pdf/1810.04805.pdf", "anchor_text": "https://arxiv.org/pdf/1810.04805.pdf"}, {"url": "http://jalammar.github.io/illustrated-bert/", "anchor_text": "http://jalammar.github.io/illustrated-bert/"}, {"url": "https://colab.research.google.com/notebooks/welcome.ipynb#recent=true", "anchor_text": "Google Colab"}, {"url": "https://github.com/google-research/bert", "anchor_text": "https://github.com/google-research/bert"}, {"url": "https://colab.research.google.com/drive/1RhmL0BqNe52FEbdSyLpkfVuCZxE7b5ke", "anchor_text": "here"}, {"url": "https://arxiv.org/abs/1810.04805", "anchor_text": "BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding"}, {"url": "https://github.com/openai/gpt-2", "anchor_text": "Language Models are Unsupervised Multitask Learners"}, {"url": "https://arxiv.org/abs/1802.05365", "anchor_text": "Deep contextualized word representations"}, {"url": "https://arxiv.org/pdf/1310.4546.pdf", "anchor_text": "Distributed Representations of Words and Phrases and their Compositionality"}, {"url": "https://arxiv.org/pdf/1706.03762.pdf", "anchor_text": "Attention Is All You Need"}, {"url": "https://arxiv.org/pdf/1609.08144.pdf", "anchor_text": "Google\u2019s Neural Machine Translation System: Bridging the Gap between Human and Machine Translation"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----67ef29f60a7b---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----67ef29f60a7b---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/nlp?source=post_page-----67ef29f60a7b---------------nlp-----------------", "anchor_text": "NLP"}, {"url": "https://medium.com/tag/bert?source=post_page-----67ef29f60a7b---------------bert-----------------", "anchor_text": "Bert"}, {"url": "https://medium.com/tag/ai?source=post_page-----67ef29f60a7b---------------ai-----------------", "anchor_text": "AI"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F67ef29f60a7b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&user=Andreas+Pogiatzis&userId=d468d7b1e1a9&source=-----67ef29f60a7b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F67ef29f60a7b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&user=Andreas+Pogiatzis&userId=d468d7b1e1a9&source=-----67ef29f60a7b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F67ef29f60a7b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F67ef29f60a7b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----67ef29f60a7b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----67ef29f60a7b--------------------------------", "anchor_text": ""}, {"url": "https://apogiatzis.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://apogiatzis.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Andreas Pogiatzis"}, {"url": "https://apogiatzis.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "788 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd468d7b1e1a9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&user=Andreas+Pogiatzis&userId=d468d7b1e1a9&source=post_page-d468d7b1e1a9--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F4df0306d22cc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnlp-extract-contextualized-word-embeddings-from-bert-keras-tf-67ef29f60a7b&newsletterV3=d468d7b1e1a9&newsletterV3Id=4df0306d22cc&user=Andreas+Pogiatzis&userId=d468d7b1e1a9&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}