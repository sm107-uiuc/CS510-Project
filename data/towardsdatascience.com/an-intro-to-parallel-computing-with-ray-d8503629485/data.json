{"url": "https://towardsdatascience.com/an-intro-to-parallel-computing-with-ray-d8503629485", "time": 1683005390.363092, "path": "towardsdatascience.com/an-intro-to-parallel-computing-with-ray-d8503629485/", "webpage": {"metadata": {"title": "An Intro to Parallel Computing with Ray | by Christian Hubbs | Towards Data Science", "h1": "An Intro to Parallel Computing with Ray", "description": "There are a host of challenges from the different terminology versus supervised learning or optimization, to developing a simulation, and of course, the alphabet soup of algorithms to choose from and\u2026"}, "outgoing_paragraph_urls": [{"url": "https://ray.readthedocs.io/en/latest/index.html", "anchor_text": "Ray", "paragraph_index": 3}, {"url": "https://rise.cs.berkeley.edu/", "anchor_text": "UC Berkeley\u2019s RISE Lab", "paragraph_index": 3}, {"url": "https://ray.readthedocs.io/en/latest/installation.html", "anchor_text": "check the docs for updates", "paragraph_index": 9}, {"url": "https://colab.research.google.com/drive/1QKD-vGI-pWTkO-C3TebKor8gsk14Gse2", "anchor_text": "Google Colab", "paragraph_index": 9}, {"url": "https://bit.ly/2scbU1P", "anchor_text": "https://bit.ly/2scbU1P", "paragraph_index": 34}], "all_paragraphs": ["Getting started with deep reinforcement learning is not easy.", "There are a host of challenges from the different terminology versus supervised learning or optimization, to developing a simulation, and of course, the alphabet soup of algorithms to choose from and the Greek alphabet soup of hyperparameters to fiddle with.", "Moreover, RL tends to be extremely data hungry, requiring thousands if not millions of simulations in order to learn a good policy. Even if you don\u2019t mind jumping in to the papers and implementing the algorithm yourself, you\u2019ll find that optimizing the algorithms and taking advantage of parallelization is going to be important to getting results.", "That\u2019s where Ray comes in. Ray has been around since 2017, developed by UC Berkeley\u2019s RISE Lab, it is designed to bring scalable, parallelizable, reinforcement learning to practitioners and researchers without the pain of implementing models yourself.", "Before we jump into the RL piece, let\u2019s spend some time with the basics of Ray and show how we can use it to achieve speed-ups in our computations via parallel computing.", "We introduce Ray and show how to parallelize a few different functions to get increased performance from the library.", "Before we get into the full-blown RL models, I want to walk through some simpler examples of parallelization and explain some of the benefits of the technique.", "Typically, programs you write in Python are done in serial, i.e. one step after the next. In many applications, this is just fine. However, given that modern machines \u2014 be it your laptop or an AWS server \u2014 has multiple CPU\u2019s, you can take advantage of that by breaking problems down so they can be run simultaneously in parallel to get huge speed-ups!", "This is the case for many machine learning algorithms, and particularly for reinforcement learning where Monte Carlo simulation is employed to generate training data. These simulations can be run in parallel and the trajectories sent back to the neural network for updating. This is incredibly useful and can greatly speed up your training.", "To get started, we need to install Ray using pip install ray. One thing to note, as of this writing, Ray will only run on Linux and MacOs machines, and is only compatible for Python 3.5-3.7 (check the docs for updates). If your machine doesn\u2019t meet those requirements, then you can hop over to Google Colab for free access to a notebook where you can run this code.", "Let\u2019s show an example of the speed-up that\u2019s achievable through parallelization by starting with a sequential program, timing it, and moving it to Ray. In the first instance, we\u2019re going to take a standard timing example to show the basics.", "We\u2019ll define a timer function that takes an argument, x, waits 1 second, then returns x. This is utterly useless, but will illustrate the sequential versus parallel power we have.", "This sequential model is our baseline, and it returns exactly what we expect.", "Before we parallelize, we need to initialize Ray with ray.init(), where we can set the number of CPU\u2019s we have. If you don\u2019t know what you have available, just run the following:", "As you see above, my machine has 8 CPU\u2019s I can use to parallize my process. If I don\u2019t pass a specific value when I call ray.init, it will use all 8. I\u2019m going to reinitialize ray with only 4 CPU\u2019s available to it so that each CPU will handle one of the calls to our timer function independently. Note that if you reinitialize ray from and IDE like Jupyter, you must pass the ignore_reinit_error=True argument, otherwise you\u2019ll get an error, or you need to restart your kernel.", "To parallelize our function with Ray, we just need to decorate it with remote.", "Running the exact same code as above, we have:", "Hopefully the above looks odd to you. First, the elapsed time is not the expected 1 second, and second, the results look like a lot of gibberish. What Ray is doing here is measuring the time it takes to create object ID\u2019s to be run, not the time it takes to run the code itself. That\u2019s what we\u2019re seeing when we print the values list: a list of object ID\u2019s that point to these tasks. To get Ray to actually evaluate these functions, we need to call ray.get().", "So, to get the timing and expected results for all of this, we\u2019ll wrap our list in the ray.get() function and try again.", "Now we get the expected output!", "Let\u2019s turn to a more useful example to show how we can leverage this in actual computation.", "There are numerous financial measurements and strategies that require computing moving averages. Sometimes you want a simple, 90-day moving average, other times a 10-day, or some other value. That\u2019s not so bad if you only have a few time series to deal with. But, as is often the case, you might need to calculate simple moving averages for thousands of different securities on a regular basis. If this is the case, we can take advantage of parallelization and make great gains.", "Let\u2019s start by generating 1,000 different, random time series to show how this works.", "From here, we\u2019ll implement a sequential simple moving average calculation that returns a 10-day moving average. If too little data is available \u2013 such as over the first 9 data points \u2013 it will just give the moving average over those days.", "The function below will give us the desired result.", "Our calc_moving_average function takes each individual time series (denoted by a row in our data) and then returns the moving average for each step. If you plot this, it will show a smoothed value.", "We\u2019ll time it as we did for the examples above.", "Nearly 8 seconds elapse to calculate this. Let\u2019s see if we can do better by using our @ray.remote decorator on the function.", "Our implementation didn\u2019t work out so well versus the baseline: we saved ~0.3 seconds, not quite the boost we were looking for. The reason for this is that we didn\u2019t break the moving average calculation down into easily parallelizable steps. We just told the computer to parallelize the entire algorithm, not the pieces that make the most sense.", "We can make a slight adjustment to this as shown below and see what the speed-up looks like.", "Now we have a 3.5X speed up, which is about what we\u2019d expect now that we\u2019ve parallelized our process over 4 CPUs rather than running on a single processor. All we had to change was how we\u2019re inputting our data to the function. By passing each row of the data to the function, we\u2019ve parallelized at a lower and more meaningful level for this algorithm.", "We don\u2019t get an exact 4.0X speed up because there is some overhead cost associated with this operation. Typically, the more information that needs to be moved around, the more overhead cost we incur. This means we want to shy away from lots of small operations because it might cost more in terms of time to pass the information back and forth between the various cores than we gain by parallelizing.", "Ray has two other libraries built on top of it, RLLIB and Tune, both of which are incredibly powerful for implementing reinforcement learning algorithms. They take advantage of the parallelization we discussed here and I\u2019ll turn to introducing those libraries and key functionalities in subsequent posts.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "AI/ML researcher writing about technology, economics, and business. Connect with me: https://bit.ly/2scbU1P"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd8503629485&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d8503629485--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d8503629485--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://christiandhubbs.medium.com/?source=post_page-----d8503629485--------------------------------", "anchor_text": ""}, {"url": "https://christiandhubbs.medium.com/?source=post_page-----d8503629485--------------------------------", "anchor_text": "Christian Hubbs"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8c5ed989fb1b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&user=Christian+Hubbs&userId=8c5ed989fb1b&source=post_page-8c5ed989fb1b----d8503629485---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd8503629485&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd8503629485&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://ray.readthedocs.io/en/latest/index.html", "anchor_text": "Ray"}, {"url": "https://rise.cs.berkeley.edu/", "anchor_text": "UC Berkeley\u2019s RISE Lab"}, {"url": "https://ray.readthedocs.io/en/latest/installation.html", "anchor_text": "check the docs for updates"}, {"url": "https://colab.research.google.com/drive/1QKD-vGI-pWTkO-C3TebKor8gsk14Gse2", "anchor_text": "Google Colab"}, {"url": "http://twitter.com/ray", "anchor_text": "@ray"}, {"url": "http://twitter.com/ray", "anchor_text": "@ray"}, {"url": "http://twitter.com/ray", "anchor_text": "@ray"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d8503629485---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/reinforcement-learning?source=post_page-----d8503629485---------------reinforcement_learning-----------------", "anchor_text": "Reinforcement Learning"}, {"url": "https://medium.com/tag/parallel-computing?source=post_page-----d8503629485---------------parallel_computing-----------------", "anchor_text": "Parallel Computing"}, {"url": "https://medium.com/tag/ai?source=post_page-----d8503629485---------------ai-----------------", "anchor_text": "AI"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----d8503629485---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd8503629485&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&user=Christian+Hubbs&userId=8c5ed989fb1b&source=-----d8503629485---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd8503629485&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&user=Christian+Hubbs&userId=8c5ed989fb1b&source=-----d8503629485---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd8503629485&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d8503629485--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd8503629485&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d8503629485---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d8503629485--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d8503629485--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d8503629485--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d8503629485--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d8503629485--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d8503629485--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d8503629485--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d8503629485--------------------------------", "anchor_text": ""}, {"url": "https://christiandhubbs.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://christiandhubbs.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Christian Hubbs"}, {"url": "https://christiandhubbs.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "657 Followers"}, {"url": "https://bit.ly/2scbU1P", "anchor_text": "https://bit.ly/2scbU1P"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8c5ed989fb1b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&user=Christian+Hubbs&userId=8c5ed989fb1b&source=post_page-8c5ed989fb1b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd00e5d4c3897&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fan-intro-to-parallel-computing-with-ray-d8503629485&newsletterV3=8c5ed989fb1b&newsletterV3Id=d00e5d4c3897&user=Christian+Hubbs&userId=8c5ed989fb1b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}