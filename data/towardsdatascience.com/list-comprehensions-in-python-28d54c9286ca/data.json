{"url": "https://towardsdatascience.com/list-comprehensions-in-python-28d54c9286ca", "time": 1683013197.309201, "path": "towardsdatascience.com/list-comprehensions-in-python-28d54c9286ca/", "webpage": {"metadata": {"title": "List Comprehensions in Python. A more elegant and concise way to\u2026 | by Luay Matalka | Towards Data Science", "h1": "List Comprehensions in Python", "description": "In this tutorial we will learn how to create lists from other iterables or sequences using list comprehensions in python."}, "outgoing_paragraph_urls": [{"url": "https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions", "anchor_text": "List comprehensions", "paragraph_index": 3}, {"url": "https://towardsdatascience.com/using-map-and-filter-in-python-ffdfa8b97520", "anchor_text": "map", "paragraph_index": 10}, {"url": "https://lmatalka90.medium.com/membership", "anchor_text": "link", "paragraph_index": 34}], "all_paragraphs": ["Let\u2019s say that we want to create a list in python from another iterable object or sequence, such as another list. For example, we have a list of numbers, and we want to create a new list that contains the cubes of the numbers from the first list. There are multiple ways to accomplish this task. Perhaps the most basic way is to use a for loop as follows:", "In the above code, we use a for loop to loop over our num_list, and we add each number cubed to cube_list.", "Well, it turns out that there\u2019s an easier way to accomplish the same task, and that\u2019s with using a list comprehension.", "List comprehensions allow us to create lists from other sequences in a very concise way. We usually use list comprehensions to loop through another sequence, such as a list, and either add the elements that satisfy a certain condition, or add the result of an operation applied to each element in the sequence.", "A list comprehension is made up of brackets, which contain an expression, followed by a for loop, and zero or more for or if clauses. This list comprehension then creates a list that contains the expression evaluated in the context of the for and if clauses that follow it.", "Let\u2019s start with a basic list comprehension that contains only an expression and a for loop:", "[ <expression> for <name> in <iterable or sequence> ]", "For example, let\u2019s see how we can create the above cube_list, or a list that contains the cubes of another list, using a list comprehension:", "So what is going on in this line of code?", "First, we notice that we have brackets that contain an expression, num**3, followed by a for loop, for num in num_list. Within the for loop, num is the parameter name we give for the elements that we are looping over in our num_list, just like in the original for loop above. We are basically saying, take num (or the current element) from our num_list, cube it, and then add the result of that operation to our list, similar to cube_list.append(num**3). Thus we are adding the output of the expression num**3 to the list we are making as it iterates over the for loop.", "Note: A list comprehension behaves very similarly to the built-in map function in python.", "The expression in a list comprehension can include functions as well. For example, if we want to create a list that contains the corresponding lengths of a list of strings, we can do so with the following list comprehension:", "Notice how we used the built-in len function as part of our expression within the list comprehension.", "We can also add a condition to our list comprehensions using an if statement after the for loop:", "[ <expression> for <name> in <iterable or sequence> if <condition> ]", "For example, let\u2019s say that we want to make a new list from num_list that only contains the cubes of the odd numbers. Well, we accomplish that with the following list comprehension:", "Notice how we added the if statement at the end. So num**3 will only be added to our cubes_of_odds list if the current element or num is odd using the modulo operator. The modulo operator returns the remainder when num is divided by 2, which would equal zero if num is even.", "What if we want multiple conditions?", "Not only can we add an if statement, but we can add an else statement as well using the following format:", "[ <expression> if <condition> else <expression> for <name> in <iterable or sequence> ]", "For example, let\u2019s say we want to loop through num_list, and make a new list with the cubes of the odd numbers and the squares of the even numbers. We can do that with the following code:", "So as we loop through num_list, if num%2!=0 is True for that specific num or element, the num**3 is used as the expression for that specific element. If num%2!=0 is not True, the num**2 expression will be used for the element instead.", "The expression in a list comprehension can also be another list comprehension. For example, let\u2019s say that we want to make the following matrix (or 2 dimensional array):", "Note that it consists of four rows, each row containing the numbers 1 through 4. In other words it is a list that contains four identical lists, each being [1,2,3,4].", "We can make this matrix with a list comprehension in addition to an outer for loop as follows:", "The for loop has four iterations, and in each iteration a list is created with the list comprehension: [x for x in range(1,5)]. This list comprehension creates a list of [1,2,3,4]. Thus we are creating a list that contains four lists of [1,2,3,4].", "The above code is equivalent to the following nested list comprehension:", "So we are executing the initial expression, which is a list comprehension, [x for x in range(1,5)], that creates a [1,2,3,4] list. This expression is executed with each iteration of the second for loop, each time creating a [1,2,3,4] list and adding it to the outer list.", "List comprehensions are used to create lists out of other sequences, either by applying some operation to the elements, by filtering through the elements, or some combination of both. In other words, list comprehensions can have the same functionality as the built-in map and filter functions. The operation applied to each element is similar to the map function, and if you add a condition to which elements are added to the list in your list comprehension, that\u2019s similar to the filter function. Also, the expression that is added in the beginning of a list comprehension is similar to the lambda expression that can be used inside the map and filter functions.", "For example, this list comprehension is equivalent to the subsequent map and filter (with a lambda expression) example:", "This list comprehension that adds the square of the elements from 0 to 9, only if the element is even.", "The function passed into the map function is a lambda expression that takes input x and returns its square. The list passed into the map function is a filtered list that contains the even elements from 0 to 9.", "For more information on the map and filter functions:", "For more information on lambda expressions:", "If you enjoy reading stories like these and want to support me as a writer, consider signing up to become a Medium member. It\u2019s $5 a month, giving you unlimited access to stories on Medium. If you sign up using my link, I\u2019ll earn a small commission.", "In this tutorial, we learned how list comprehensions can be used to make lists from other lists or sequences. We saw how they can contain zero or more conditions. Then we saw how to use a nested list comprehension to make a 2-dimensional list. Lastly, we compared list comprehensions to the map and filter functions in python.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Cloud Data Engineer with a passion for teaching."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F28d54c9286ca&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----28d54c9286ca--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----28d54c9286ca--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://lmatalka90.medium.com/?source=post_page-----28d54c9286ca--------------------------------", "anchor_text": ""}, {"url": "https://lmatalka90.medium.com/?source=post_page-----28d54c9286ca--------------------------------", "anchor_text": "Luay Matalka"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F58bd20ab66d4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&user=Luay+Matalka&userId=58bd20ab66d4&source=post_page-58bd20ab66d4----28d54c9286ca---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F28d54c9286ca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F28d54c9286ca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@ikukevk?utm_source=medium&utm_medium=referral", "anchor_text": "Kevin Ku"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://docs.python.org/3/tutorial/datastructures.html#list-comprehensions", "anchor_text": "List comprehensions"}, {"url": "https://towardsdatascience.com/looping-in-python-5289a99a116e", "anchor_text": "Looping in PythonHow to use the enumerate() function in pythontowardsdatascience.com"}, {"url": "https://towardsdatascience.com/using-map-and-filter-in-python-ffdfa8b97520", "anchor_text": "map"}, {"url": "https://towardsdatascience.com/four-things-you-should-know-in-python-62a0519ca20e", "anchor_text": "Four Things You Should Know in PythonLearn how to slice sequences, loop through sequences, zip/unzip iterables, and more in Pythontowardsdatascience.com"}, {"url": "https://towardsdatascience.com/using-reduce-in-python-a9c2f0dede54", "anchor_text": "Using Reduce in PythonHow to use the reduce function in pythontowardsdatascience.com"}, {"url": "https://towardsdatascience.com/using-map-and-filter-in-python-ffdfa8b97520", "anchor_text": "Using Map and Filter in PythonHow to use the built-in map and filter functions in pythontowardsdatascience.com"}, {"url": "https://towardsdatascience.com/writing-lambda-expressions-in-python-745288614a39", "anchor_text": "Writing lambda Expressions in PythonHow to write lambda expressions in python!towardsdatascience.com"}, {"url": "https://lmatalka90.medium.com/membership", "anchor_text": "link"}, {"url": "https://lmatalka90.medium.com/membership", "anchor_text": "Join Medium with my referral link \u2014 Luay MatalkaRead every story from Luay Matalka (and thousands of other writers on Medium). Your membership fee directly supports\u2026lmatalka90.medium.com"}, {"url": "https://medium.com/tag/data-science?source=post_page-----28d54c9286ca---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----28d54c9286ca---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/technology?source=post_page-----28d54c9286ca---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----28d54c9286ca---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/software-development?source=post_page-----28d54c9286ca---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F28d54c9286ca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&user=Luay+Matalka&userId=58bd20ab66d4&source=-----28d54c9286ca---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F28d54c9286ca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&user=Luay+Matalka&userId=58bd20ab66d4&source=-----28d54c9286ca---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F28d54c9286ca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----28d54c9286ca--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F28d54c9286ca&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----28d54c9286ca---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----28d54c9286ca--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----28d54c9286ca--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----28d54c9286ca--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----28d54c9286ca--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----28d54c9286ca--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----28d54c9286ca--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----28d54c9286ca--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----28d54c9286ca--------------------------------", "anchor_text": ""}, {"url": "https://lmatalka90.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://lmatalka90.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Luay Matalka"}, {"url": "https://lmatalka90.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F58bd20ab66d4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&user=Luay+Matalka&userId=58bd20ab66d4&source=post_page-58bd20ab66d4--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Feb71491826a1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Flist-comprehensions-in-python-28d54c9286ca&newsletterV3=58bd20ab66d4&newsletterV3Id=eb71491826a1&user=Luay+Matalka&userId=58bd20ab66d4&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}