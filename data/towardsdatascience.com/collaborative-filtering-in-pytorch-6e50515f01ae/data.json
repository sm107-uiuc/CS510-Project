{"url": "https://towardsdatascience.com/collaborative-filtering-in-pytorch-6e50515f01ae", "time": 1683010770.492039, "path": "towardsdatascience.com/collaborative-filtering-in-pytorch-6e50515f01ae/", "webpage": {"metadata": {"title": "Collaborative Filtering in Pytorch | by Neel Iyer | Towards Data Science", "h1": "Collaborative Filtering in Pytorch", "description": "Collaborative filtering is a tool that companies are increasingly using. Netflix uses it to recommend shows for you to watch. Facebook uses it to recommend who you should be friends with. Spotify\u2026"}, "outgoing_paragraph_urls": [{"url": "https://engineering.fb.com/core-data/recommending-items-to-more-than-a-billion-people/", "anchor_text": "Facebook", "paragraph_index": 0}, {"url": "https://medium.com/s/story/spotifys-discover-weekly-how-machine-learning-finds-your-new-music-19a41ab76efe", "anchor_text": "Spotify", "paragraph_index": 0}, {"url": "http://files.grouplens.org/datasets/movielens/", "anchor_text": "here", "paragraph_index": 2}, {"url": "https://github.com/fastai/course-v3/blob/master/nbs/dl1/lesson4-collab.ipynb", "anchor_text": "fastai notebook", "paragraph_index": 2}, {"url": "https://youtu.be/CJKnDu2dxOE?t=1625", "anchor_text": "just an array lookup", "paragraph_index": 9}, {"url": "https://arxiv.org/pdf/1604.06737", "anchor_text": "reduces memory usage", "paragraph_index": 10}, {"url": "https://www.kaggle.com/c/rossmann-store-sales", "anchor_text": "Kaggle competition", "paragraph_index": 10}, {"url": "https://www.kaggle.com/c/rossmann-store-sales/discussion/17974", "anchor_text": "achieved 3rd place", "paragraph_index": 10}, {"url": "https://en.wikipedia.org/wiki/Latent_variable", "anchor_text": "Latent factors", "paragraph_index": 12}, {"url": "https://arxiv.org/abs/1609.04836", "anchor_text": "this", "paragraph_index": 16}, {"url": "https://arxiv.org/abs/1706.02677", "anchor_text": "this", "paragraph_index": 16}, {"url": "https://stats.stackexchange.com/questions/436878/choosing-optimal-batch-size-contradicting-results", "anchor_text": "contradictory results", "paragraph_index": 16}, {"url": "https://pytorch.org/docs/stable/optim.html#torch.optim.SGD", "anchor_text": "stochastic gradient descent", "paragraph_index": 21}, {"url": "https://towardsdatascience.com/stochastic-gradient-descent-clearly-explained-53d239905d31", "anchor_text": "selecting the data point", "paragraph_index": 21}, {"url": "https://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf", "anchor_text": "rmsprop", "paragraph_index": 22}, {"url": "https://www.youtube.com/watch?v=YU_W8PFkY2U", "anchor_text": "momentum", "paragraph_index": 22}, {"url": "https://arxiv.org/abs/1705.08292", "anchor_text": "this", "paragraph_index": 22}, {"url": "https://docs.fast.ai/collab.html#collab_learner", "anchor_text": "collab_learner", "paragraph_index": 25}, {"url": "https://dev.fast.ai/tutorial.collab#Movie-bias", "anchor_text": "Bias", "paragraph_index": 25}, {"url": "https://www.cs.toronto.edu/~hinton/absps/JMLRdropout.pdf", "anchor_text": "dropout", "paragraph_index": 25}, {"url": "https://youtu.be/CJKnDu2dxOE?t=2609", "anchor_text": "slightly", "paragraph_index": 29}, {"url": "https://en.wikipedia.org/wiki/Sigmoid_function", "anchor_text": "sigmoid function", "paragraph_index": 29}, {"url": "https://www.librec.net/release/v1.3/example.html", "anchor_text": "LibRec system", "paragraph_index": 31}, {"url": "https://github.com/fastai/course-v3/blob/master/nbs/dl1/lesson4-collab.ipynb", "anchor_text": "collaborative filtering lesson", "paragraph_index": 32}], "all_paragraphs": ["Collaborative filtering is a tool that companies are increasingly using. Netflix uses it to recommend shows for you to watch. Facebook uses it to recommend who you should be friends with. Spotify uses it to recommend playlists and songs. It\u2019s incredibly useful in recommending products to customers.", "In this post, I construct a collaborative filtering neural network with embeddings to understand how users would feel towards certain movies. From this, we can recommend movies for them to watch.", "The dataset is taken from here. This code is loosely based off the fastai notebook.", "First, let get rid of the annoyingly complex user ids. We can make do with plain old integers. They\u2019re much easier to handle.", "Then we\u2019ll do the same thing for movie ids as well.", "We\u2019ll need to get the number of users and the number of movies.", "First, let\u2019s create some random weights. We need to call. This allows us to avoid calling the base class explicitly. This makes the code more maintainable.", "These weights will be uniformly distributed between 0 and 0.05. The _ operator at the end of uniform_ denotes an inplace operation.", "Next, we add our Embedding matrices and latent factors.", "We\u2019re creating an embedding matrix for our user ids and our movie ids. An embedding is basically an array lookup. When we multiply our one-hot encoded user ids by our weights most calculations cancel to 0 (0 * number = 0). All we're left with is a particular row in the weight matrix. That's basically just an array lookup.", "So we don\u2019t need the matrix multiply and we don\u2019t need the one-hot encoded array. Instead, we can just do an array lookup. This reduces memory usage and speeds up the neural network. It also reveals the intrinsic properties of the categorical variables. This idea was applied in a recent Kaggle competition and achieved 3rd place.", "The size of these embedding matrices will be determined by n_factors. These factors determine the number of latent factors in our dataset.", "Latent factors are immensely useful in our network. They reduce the need for feature engineering. For example, if User_id 554 likes Tom cruise and Tom cruise appears in a movie. User 554 will probably like the movie. Tom cruise appearing in a movie would be a latent feature. We didn't specify it before training. It just showed up. And we're glad that it did.", "Finally, we\u2019ll need to add our forward function.", "As the name of this class would suggest we\u2019re doing a dot product of embedding matrices.", "users,movies = cats[:,0],cats[:,1] gives us a minibatch of users and movies. We only look at categorical variables for embeddings. conts refers to continous variables.", "This minibatch size will be determined by the batchsize that you set. According to this paper, a large batch size can actually compromise the quality of the model. But according to this paper, a large batch size increases the quality of the model. There is no consensus at the moment. Many people are reporting contradictory results. So feel free to experiment with a batch size of your choosing.", "From that minibatch, we want to do an array lookup in our embedding matrix.", "self.u(users),self.m(movies) allows us to do that array lookup. This lookup is less computationally intensive that a matrix multiply of a one-hot encoded matrix and a weight matrix.", "(u*m).sum(1).view(-1, 1) is a cross product of the embeddings for users and movies and returns a single number. This is the predicted rating for that movie.", "Next, we need to create a ColumnarModelData object", "Then I\u2019ll set up an optimiser. I\u2019ll use stochastic gradient descent for this. optim.SGD implements stochastic gradient descent. Stochastistic gradient descent is computationally less intensive than gradient descent. This is because we introduce randomness when selecting the data point to calculate the derivative.", "We could also use optim.Adam. That implements rmsprop and momentum. In turn that results in an adaptive learning rate. But this paper shows that the solutions derived from SGD generalize far better than the solutions obtained from Adam. Plus it doesn't take that long to train anyway, so SGD isn't a bad option.", "Then we fit for a 3 epochs.", "MSE loss is simply mean square error loss. This is calculated automatically.", "Fastai creates a neural net automatically behind the scenes. You can call a collab_learner which automatically creates a neural network for collaborative filtering. Fastai also has options for introducing Bias and dropout through this collab learner.", "Bias is very useful. We need to find user bias and movie bias. User bias would account for people who give high ratings for every movie. Movie bias would account for people who tend to give high ratings for a certain type of movie. Fastai adds in Bias automatically.", "Using fastai we can create a collab learner easily:", "Bias is very useful. We need to find user bias and movie bias. User bias would account for people who give high ratings for every movie. Movie bias would account for people who tend to give high ratings for a certain type of movie. Fastai adds in Bias automatically.", "Interestingly, fastai notes that you should be increase the y_range slightly. A sigmoid function is used to ensure that the final output is between the numbers specified in y_range. The issue is that a sigmoid function asymtotes. So we'll need to increase our y_range slightly. Fastai recommends increasing by 0.5.", "I\u2019m using the suggested learning rate here with a small amount of weight decay. This is the combination that I found to work really well.", "We finally get a MSE of 0.784105. But it's a very bumpy ride. Our loss jumps up and down considerably. That said 0.784105 is actually a better score than the LibRec system for collaborative filtering. They were getting 0.91**2 = 0.83 MSE.", "It\u2019s also actually slightly better than the model that fastai created in their collaborative filtering lesson. They were getting 0.814652 MSE.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F6e50515f01ae&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----6e50515f01ae--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----6e50515f01ae--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://neel-iyer.medium.com/?source=post_page-----6e50515f01ae--------------------------------", "anchor_text": ""}, {"url": "https://neel-iyer.medium.com/?source=post_page-----6e50515f01ae--------------------------------", "anchor_text": "Neel Iyer"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe7c5e1c9cae1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&user=Neel+Iyer&userId=e7c5e1c9cae1&source=post_page-e7c5e1c9cae1----6e50515f01ae---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6e50515f01ae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6e50515f01ae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@hngstrm", "anchor_text": "Henry & Co."}, {"url": "http://unsplash.com/", "anchor_text": "Unsplash"}, {"url": "https://engineering.fb.com/core-data/recommending-items-to-more-than-a-billion-people/", "anchor_text": "Facebook"}, {"url": "https://medium.com/s/story/spotifys-discover-weekly-how-machine-learning-finds-your-new-music-19a41ab76efe", "anchor_text": "Spotify"}, {"url": "http://files.grouplens.org/datasets/movielens/", "anchor_text": "here"}, {"url": "https://github.com/fastai/course-v3/blob/master/nbs/dl1/lesson4-collab.ipynb", "anchor_text": "fastai notebook"}, {"url": "https://youtu.be/CJKnDu2dxOE?t=1625", "anchor_text": "just an array lookup"}, {"url": "https://arxiv.org/pdf/1604.06737", "anchor_text": "reduces memory usage"}, {"url": "https://www.kaggle.com/c/rossmann-store-sales", "anchor_text": "Kaggle competition"}, {"url": "https://www.kaggle.com/c/rossmann-store-sales/discussion/17974", "anchor_text": "achieved 3rd place"}, {"url": "https://en.wikipedia.org/wiki/Latent_variable", "anchor_text": "Latent factors"}, {"url": "https://arxiv.org/abs/1609.04836", "anchor_text": "this"}, {"url": "https://arxiv.org/abs/1706.02677", "anchor_text": "this"}, {"url": "https://stats.stackexchange.com/questions/436878/choosing-optimal-batch-size-contradicting-results", "anchor_text": "contradictory results"}, {"url": "https://pytorch.org/docs/stable/optim.html#torch.optim.SGD", "anchor_text": "stochastic gradient descent"}, {"url": "https://towardsdatascience.com/stochastic-gradient-descent-clearly-explained-53d239905d31", "anchor_text": "selecting the data point"}, {"url": "https://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf", "anchor_text": "rmsprop"}, {"url": "https://www.youtube.com/watch?v=YU_W8PFkY2U", "anchor_text": "momentum"}, {"url": "https://arxiv.org/abs/1705.08292", "anchor_text": "this"}, {"url": "https://docs.fast.ai/collab.html#collab_learner", "anchor_text": "collab_learner"}, {"url": "https://dev.fast.ai/tutorial.collab#Movie-bias", "anchor_text": "Bias"}, {"url": "https://www.cs.toronto.edu/~hinton/absps/JMLRdropout.pdf", "anchor_text": "dropout"}, {"url": "https://youtu.be/CJKnDu2dxOE?t=2609", "anchor_text": "slightly"}, {"url": "https://en.wikipedia.org/wiki/Sigmoid_function", "anchor_text": "sigmoid function"}, {"url": "https://www.researchgate.net/profile/Knut_Kvaal/publication/239269767/figure/fig2/AS:643520205430784@1530438581076/An-illustration-of-the-signal-processing-in-a-sigmoid-function.png", "anchor_text": "ResearchGate"}, {"url": "https://www.librec.net/release/v1.3/example.html", "anchor_text": "LibRec system"}, {"url": "https://github.com/fastai/course-v3/blob/master/nbs/dl1/lesson4-collab.ipynb", "anchor_text": "collaborative filtering lesson"}, {"url": "https://www.kaggle.com/ibtesama/getting-started-with-a-movie-recommendation-system#Content-Based-Filtering", "anchor_text": "Other methods"}, {"url": "https://www.kaggle.com/rounakbanik/movie-recommender-systems#Movies-Recommender-System", "anchor_text": "hybrid"}, {"url": "https://www.kdnuggets.com/2019/01/data-scientist-dilemma-cold-start-machine-learning.html", "anchor_text": "cold-start problem"}, {"url": "https://spiyer99.github.io/Recommendation-System-in-Pytorch/", "anchor_text": "https://spiyer99.github.io"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----6e50515f01ae---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----6e50515f01ae---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/pytorch?source=post_page-----6e50515f01ae---------------pytorch-----------------", "anchor_text": "Pytorch"}, {"url": "https://medium.com/tag/collaborative-filtering?source=post_page-----6e50515f01ae---------------collaborative_filtering-----------------", "anchor_text": "Collaborative Filtering"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6e50515f01ae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&user=Neel+Iyer&userId=e7c5e1c9cae1&source=-----6e50515f01ae---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F6e50515f01ae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&user=Neel+Iyer&userId=e7c5e1c9cae1&source=-----6e50515f01ae---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F6e50515f01ae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----6e50515f01ae--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F6e50515f01ae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----6e50515f01ae---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----6e50515f01ae--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----6e50515f01ae--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----6e50515f01ae--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----6e50515f01ae--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----6e50515f01ae--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----6e50515f01ae--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----6e50515f01ae--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----6e50515f01ae--------------------------------", "anchor_text": ""}, {"url": "https://neel-iyer.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://neel-iyer.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Neel Iyer"}, {"url": "https://neel-iyer.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "418 Followers"}, {"url": "https://www.linkedin.com/in/neel-iyer/", "anchor_text": "https://www.linkedin.com/in/neel-iyer/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe7c5e1c9cae1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&user=Neel+Iyer&userId=e7c5e1c9cae1&source=post_page-e7c5e1c9cae1--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fa4687e9ccf6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcollaborative-filtering-in-pytorch-6e50515f01ae&newsletterV3=e7c5e1c9cae1&newsletterV3Id=a4687e9ccf6&user=Neel+Iyer&userId=e7c5e1c9cae1&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}