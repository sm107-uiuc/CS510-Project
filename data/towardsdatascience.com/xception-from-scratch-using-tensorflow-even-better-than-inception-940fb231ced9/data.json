{"url": "https://towardsdatascience.com/xception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9", "time": 1683015534.441042, "path": "towardsdatascience.com/xception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9/", "webpage": {"metadata": {"title": "Xception: Implementing from scratch using Tensorflow | by Arjun Sarkar | Towards Data Science", "h1": "Xception: Implementing from scratch using Tensorflow", "description": "Convolutional Neural Networks (CNN) have come a long way, from the LeNet-style, AlexNet, VGG models, which used simple stacks of convolutional layers for feature extraction and max-pooling layers for\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.linkedin.com/in/arjun-sarkar-9a051777/", "anchor_text": "https://www.linkedin.com/in/arjun-sarkar-9a051777/", "paragraph_index": 31}], "all_paragraphs": ["Convolutional Neural Networks (CNN) have come a long way, from the LeNet-style, AlexNet, VGG models, which used simple stacks of convolutional layers for feature extraction and max-pooling layers for spatial sub-sampling, stacked one after the other, to Inception and ResNet networks which use skip connections and multiple convolutional and max-pooling blocks in each layer. Since its introduction, one of the best networks in computer vision has been the Inception network. The Inception model uses a stack of modules, each module containing a bunch of feature extractors, which allow them to learn richer representations with fewer parameters.", "As we see in figure 1, the Xception module has 3 main parts. The Entry flow, the Middle flow (which is repeated 8 times), and the Exit flow.", "The entry flow has two blocks of convolutional layer followed by a ReLU activation. The diagram also mentions in detail the number of filters, the filter size (kernel size), and the strides.", "There are also various Separable convolutional layers. There are also Max Pooling layers. When the strides are different than one, the strides are also mentioned. There are also Skip connections, where we use \u2018ADD\u2019 to merge the two tensors. It also shows the shape of the input tensor in each flow. For example, we begin with an image size of 299x299x3, and after the entry flow, we get an image size of 19x19x728.", "Similarly, for the Middle flow and the Exit flow, this diagram clearly explains the image size, the various layers, the number of filters, the shape of filters, the type of pooling, the number of repetitions, and the option of adding a fully connected layer in the end.", "Also, all Convolutional and Separable Convolutional layers are followed by batch normalization.", "Separable convolutions consist of first performing a depthwise spatial convolution (which acts on each input channel separately) followed by a pointwise convolution which mixes the resulting output channels.- From Keras Documentation", "Let's assume that we have an input tensor of size (K, K,3). K is the spatial dimension and 3 is the number of feature maps/channels. As we see from the above Keras documentation, first we need to implement depthwise spatial convolution on each input channel separately. So we use K, K,1 \u2014 the first channel of the image/tensor. Suppose we use a filter of size 3x3x1. And this filter is applied across all three channels of the input tensor. As there are 3 channels, so the dimension we get is 3x3x1x3. This is shown in the Depthwise convolution part of Figure 4.", "After this, all the 3 outputs are taken together, and we obtain a tensor of size (L, L,3). The dimensions of L can be the same as K or can be different, depending on the strides and padding used in the previous convolutions.", "Then the Pointwise convolution is applied. The filter is of size 1x1x3 (3 channels). And the number of filters can be any number of filters we want. Let\u2019s say we use 64 filters. So the total dimension comes to 1x1x3x64. Finally, we obtain an output tensor of size LxLx64. this is shown in the Pointwise convolution part of Figure 4.", "Why is separable convolution better than normal convolution?", "If we were to use a normal convolution on the input tensor, and we use a filter/kernel size of 3x3x3 (kernel size \u2014 (3,3) and 3 feature maps). And the total number of filters we want is 64. So a total of 3x3x3x64.", "Instead, in separable convolution, we first use 3x3x1x3 in depthwise convolution and 1x1x3x64 in pointwise convolution.", "The difference lies in the dimensionality of the filters.", "As we see, separable convolution layers are way more advantageous than traditional convolutional layers, both in terms of computation cost as well as memory. The main difference is that in the normal convolution, we are transforming the image multiple times. And every transformation uses up 3x3x3x64 = 1,728 multiplications. In the separable convolution, we only transform the image once \u2014 in the depthwise convolution. Then, we take the transformed image and simply elongate it to 64 channels. Without having to transform the image over and over again, we can save up on computational power.", "3. Write one function for each one of the 3 flows \u2014 Entry, Middle, and Exit", "4. Use these functions to build the complete model", "The Conv-Batch Norm block takes as inputs, a tensor \u2014 x, number of filters \u2014 filters, kernel size of the convolutional layer \u2014 kernel_size, strides of convolutional layer \u2014 strides. Then we apply a convolution layer to x and then apply Batch Normalization. We add use_bias = False, so that the number of parameters of the final model, will be the same as the number of parameters of the original paper.", "Similar structure as the Conv-Batch Norm block, except we use SeparableConv2D instead of Conv2D.", "Functions for Entry, Middle, and Exit flow:", "Here we just follow Figure 2. It begins with two Conv layers with 32 and 64 filters respectively. Each followed by a ReLU activation.", "Then there is a skip connection, which is done by using Add.", "Inside each of the skip connection blocks, there are two separable Conv layers followed by MaxPooling. The skip connections itself have a Conv layer of 1x1 with strides 2.", "The middle flow follows the steps as shown in figure 7.", "The exit flow follows the steps as shown in figure 8.", "The above code displays the number of trainable parameters.", "Entire code to create Xception model from scratch using Tensorflow:", "As seen in Figures 5 and 6, the Xception architecture shows much better performance improvement than the Inception network on the JFT dataset as compared to the ImageNet dataset. The authors of Xception believe that this is due to the fact that Inception was designed to focus on ImageNet and thus might have over-fit on the specific task. On the other hand, neither architectures were tuned for the JFT dataset.", "Also, Inception has approximately 23.6 million parameters while Xception has 22.8 million parameters.", "The Xception architecture is very easily explained in the paper as seen in Figure 1, making it very easy to implement the network architecture using TensorFlow.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Ph.D. student \u2014 Deep Learning on Biomedical Images at the Leibniz Institute-HKI, Germany. LinkedIn-https://www.linkedin.com/in/arjun-sarkar-9a051777/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F940fb231ced9&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----940fb231ced9--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----940fb231ced9--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://arjun-sarkar786.medium.com/?source=post_page-----940fb231ced9--------------------------------", "anchor_text": ""}, {"url": "https://arjun-sarkar786.medium.com/?source=post_page-----940fb231ced9--------------------------------", "anchor_text": "Arjun Sarkar"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ffa31366b2eda&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&user=Arjun+Sarkar&userId=fa31366b2eda&source=post_page-fa31366b2eda----940fb231ced9---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F940fb231ced9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F940fb231ced9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://arxiv.org/abs/1610.02357", "anchor_text": "https://arxiv.org/abs/1610.02357"}, {"url": "https://arxiv.org/abs/1610.02357v3", "anchor_text": "arXiv:1610.02357v3"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----940fb231ced9---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----940fb231ced9---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----940fb231ced9---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----940fb231ced9---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/python?source=post_page-----940fb231ced9---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F940fb231ced9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&user=Arjun+Sarkar&userId=fa31366b2eda&source=-----940fb231ced9---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F940fb231ced9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&user=Arjun+Sarkar&userId=fa31366b2eda&source=-----940fb231ced9---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F940fb231ced9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----940fb231ced9--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F940fb231ced9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----940fb231ced9---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----940fb231ced9--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----940fb231ced9--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----940fb231ced9--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----940fb231ced9--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----940fb231ced9--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----940fb231ced9--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----940fb231ced9--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----940fb231ced9--------------------------------", "anchor_text": ""}, {"url": "https://arjun-sarkar786.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://arjun-sarkar786.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Arjun Sarkar"}, {"url": "https://arjun-sarkar786.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "517 Followers"}, {"url": "https://www.linkedin.com/in/arjun-sarkar-9a051777/", "anchor_text": "https://www.linkedin.com/in/arjun-sarkar-9a051777/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ffa31366b2eda&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&user=Arjun+Sarkar&userId=fa31366b2eda&source=post_page-fa31366b2eda--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F25711c8db9ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fxception-from-scratch-using-tensorflow-even-better-than-inception-940fb231ced9&newsletterV3=fa31366b2eda&newsletterV3Id=25711c8db9ff&user=Arjun+Sarkar&userId=fa31366b2eda&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}