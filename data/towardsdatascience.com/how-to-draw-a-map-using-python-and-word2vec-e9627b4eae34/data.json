{"url": "https://towardsdatascience.com/how-to-draw-a-map-using-python-and-word2vec-e9627b4eae34", "time": 1683013161.8329432, "path": "towardsdatascience.com/how-to-draw-a-map-using-python-and-word2vec-e9627b4eae34/", "webpage": {"metadata": {"title": "Drawing a Map using Python and Word2vec | Towards Data Science", "h1": "How to Draw a Map using Python and Word2vec", "description": "Using Python to create a 2-D visual representation of the principal components created from the word2vec vectors of European capitals ."}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Word2vec", "anchor_text": "Word2vec", "paragraph_index": 0}, {"url": "https://nlp.stanford.edu/projects/glove/", "anchor_text": "GloVe", "paragraph_index": 3}, {"url": "https://fasttext.cc/", "anchor_text": "fastText", "paragraph_index": 3}, {"url": "https://en.wikipedia.org/wiki/Word_embedding", "anchor_text": "word embedding", "paragraph_index": 4}, {"url": "https://towardsdatascience.com/nlp-101-word2vec-skip-gram-and-cbow-93512ee24314", "anchor_text": "this article", "paragraph_index": 7}, {"url": "https://en.wikipedia.org/wiki/Word2vec", "anchor_text": "wiki site", "paragraph_index": 7}, {"url": "https://github.com/mmihaltz/word2vec-GoogleNews-vectors", "anchor_text": "https://github.com/mmihaltz/word2vec-GoogleNews-vectors", "paragraph_index": 9}, {"url": "https://github.com/Phlya/adjustText", "anchor_text": "adjustText", "paragraph_index": 27}], "all_paragraphs": ["Word2vec is definitely the most playful concept I\u2019ve met during my Natural Language Processing studies so far. Imagine an algorithm that can really successfully mimic understanding meanings of words and their functions in the language, that can measure the closeness of words along the lines of hundreds of different topics, that can answer more complicated questions like \u201cwho was to literature what Beethoven was to music\u201d.", "I thought it would be interesting to visually represent word2vec vectors: essentially, we can take the vectors of countries or cities, apply principal component analysis to reduce the dimensions, and put them on a 2-D chart. And then, we can observe how close we are to an actual geographical map.", "In this post, we are going to:", "The original word2vec research paper and the pre-trained model is from 2013, and considering the rate with which the NLP literature is expanding, it\u2019s old technology at this point. Newer approaches include GloVe (faster training, different algorithm, can be trained on smaller corpus) and fastText (capable of handling character n-grams). I\u2019m sticking with the results of the original algorithm for now.", "One of the core concepts of Natural Language Processing is how we can quantify words and expressions in order to be able to work with them in a model setting. This mapping of language elements to numerical representations is called word embedding.", "Word2vec is a word embedding process. The concept is relatively simple: sentence by sentence, it loops through the corpus, and fits a model that predicts words based on neighbouring words from a pre-defined sized window. To do that, it uses a neural network, but doesn\u2019t actually use the predictions, once the model is saved, it only saves the weights from the first layer. In the original model, the one we are going to use, there are 300 weights, so every word is represented by a 300-dimensional vector.", "Note that two words don\u2019t have to be in each other\u2019s proximity to be deemed similar. If two words never appear in the same sentence, but they are usually surrounded by the same words, it is safe to assume that they have a similar meaning.", "There are two modelling approaches within word2vec: skip-gram and continuous bag-of-words, both with their own advantages and sensitivities to certain hyperparameters\u2026 but you know what? We aren\u2019t going to fit our own model, so I\u2019m not going to spend more time on it, you can read more about the different approaches and parameters in this article or the wiki site.", "Naturally, the word vectors you get depend on the corpus you train your model on. Generally, you do need a huge corpus, there are versions trained on Wikipedia, or news articles from various sources. The results that we are going to use were trained on Google News.", "First, you will need to download pre-trained word2vec vectors. You can choose from a wide variety of models, trained on different types of documents. I went with the original model, trained on Google News, which you can download from many sources, just search for \u201cGoogle News vectors negative 300\u201d. For example, this GitHub link is a convenient method: https://github.com/mmihaltz/word2vec-GoogleNews-vectors.", "Be careful, the file is 1.66 GB, but in its defence, it contains the 300-dimensional representation of 3 billion words.", "When it comes to working with word2vec in Python, once again, you have a lot of packages to choose from, we are going to use the gensim library. Assuming you have the file saved in the word2vec_pretrained folder, you can load it in Python like so:", "The limit parameter defines how many words you are importing, 1 million was plenty enough for my purposes.", "Now that we have the word2vec vectors in place, we can check out some of its applications.", "First of all, you can actually check the vector representation of any word:", "The result is, as we expected, a 300-dimensional vector that is quite difficult to interpret. But that\u2019s the basis of the whole concept, we are making calculations on these vectors by adding and subtracting them from each other, and then we calculate the cosine similarities to find closest matching words.", "You can find synonyms with the most_similar function, the topn parameter defines how many words you want to be listed:", "Now, you might think that with a similar approach, you can also find antonyms, you just need to enter the word \u2018nice\u2019 as a negative, right? Not really, the result is this:", "These are the words that are farthest away from the word \u2018nice\u2019, suggesting that it does not always work as you would expect.", "You can find odd ones out using the doesnt_match function:", "returns Beethoven. Which is handy, I guess.", "And finally, let\u2019s see a couple of examples of the operations that made the algorithm famous by giving it a false sense of intelligence. If we want to combine the values of the word vectorsfather and woman but subtract the values assigned to the word vectorman:", "It\u2019s a bit difficult to wrap your head around this operation first, and I think phrasing the question like \u201cWhat is to a woman that father is to a man?\u201d is not really that helpful. Imagine that we have only 2 dimensions: parentness and gender. The word \u2018woman\u2019 might be represented by this vector: [0, 1], \u2018man\u2019 is[0, -1], \u2018father\u2019 would be [1, -1], and \u2018mother\u2019 would be [1, 1]. Now, if we do the same operations as we did up there with the word vectors, we get the same results. Of course, the difference is that we have 300 dimensions instead of the mere 2 in the example, and the dimensions\u2019 meaning are nigh impossible to interpret.", "There was a famous example of gender bias when it came to word2vec operations, the woman version of the word \u2018doctor\u2019 (which is, as we know, a gender-neutral word) used to be calculated as \u2018nurse\u2019. I tried replicating it, but did not get the same result:", "All right, now that we checked out a few of the basic possibilities, let\u2019s work on our map!", "First, we need a plan of what we want our mapping function to do. Assuming we have a list of strings we want to visualise and a word vector object, we want to:", "We will need the following libraries:", "One library that is not commonly used from the list is adjustText, it\u2019s a very handy package that makes it simple to write legends in scatter plots, without them overlapping. It was surprisingly hard for me to find this solution, and as far as I know, there is no way to do this in matplotlib or seaborn.", "Without further ado, this is the function that will do exactly what we need:", "Now it\u2019s time to test the function. I plotted the capitals of the European countries, but you can use literally any list, names of presidents or other historical figures, car brands, cooking ingredients, rock bands, etc, just pass it in the word_list parameter. I had some fun with it, it\u2019s interesting to see clusters forming up and trying to come up with a meaning behind the two axes.", "In case you want to reproduce the results, here are the cities:", "(Andorra\u2019s capital, Andorra la Vella is missing from the list, couldn\u2019t find a format that word2vec recognises. We will live with that.)", "Assuming you still have the word_vectors object we created in the previous section, you can call the function like so:", "(Axis y is flipped in order to create a representation that better resembles a real map.)", "I don\u2019t know how you feel, when I first saw the map, I couldn\u2019t believe how well it turned out! Yes, sure, the longer you look, the more \u201cmistakes\u201d you find, one ominous outcome is that Moscow is not as far to the east as it should be\u2026 Still, east and west are almost perfectly separated, Scandinavian and Baltic countries are nicely grouped, so are capitals around Italy, and the list goes on.", "It\u2019s important to emphasise that this was never meant to be purely the geographical location, for example, Athens is very far to the west, but there\u2019s a reason for that. Let\u2019s recap how the map above is derived, just so we can fully appreciate it:", "And I think that\u2019s pretty awesome!", "Hobson, L. & Cole, H. & Hannes, H. (2019). Natural Language Processing in Action: Understanding, Analyzing, and Generating Text with Python. Manning Publications, 2019.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe9627b4eae34&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e9627b4eae34--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e9627b4eae34--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://matepocs.medium.com/?source=post_page-----e9627b4eae34--------------------------------", "anchor_text": ""}, {"url": "https://matepocs.medium.com/?source=post_page-----e9627b4eae34--------------------------------", "anchor_text": "Mate Pocs"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F686b78ddcf4b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&user=Mate+Pocs&userId=686b78ddcf4b&source=post_page-686b78ddcf4b----e9627b4eae34---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe9627b4eae34&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe9627b4eae34&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@jakobustrop?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Jakob Braun"}, {"url": "https://unsplash.com/s/photos/map-of-europe?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://en.wikipedia.org/wiki/Word2vec", "anchor_text": "Word2vec"}, {"url": "https://nlp.stanford.edu/projects/glove/", "anchor_text": "GloVe"}, {"url": "https://fasttext.cc/", "anchor_text": "fastText"}, {"url": "https://en.wikipedia.org/wiki/Word_embedding", "anchor_text": "word embedding"}, {"url": "https://towardsdatascience.com/nlp-101-word2vec-skip-gram-and-cbow-93512ee24314", "anchor_text": "this article"}, {"url": "https://en.wikipedia.org/wiki/Word2vec", "anchor_text": "wiki site"}, {"url": "https://github.com/mmihaltz/word2vec-GoogleNews-vectors", "anchor_text": "https://github.com/mmihaltz/word2vec-GoogleNews-vectors"}, {"url": "https://github.com/Phlya/adjustText", "anchor_text": "adjustText"}, {"url": "https://en.wikipedia.org/wiki/Word2vec", "anchor_text": "Word2vecWord2vec is a technique for natural language processing. The word2vec algorithm uses a neural network model to learn\u2026en.wikipedia.org"}, {"url": "https://adjusttext.readthedocs.io/en/latest/", "anchor_text": "Welcome to the documentation for adjustText! - adjustText 0.7 documentationadjustText is a small library to help you adjust text positions on matplotlib plots to remove or minimize overlaps with\u2026adjusttext.readthedocs.io"}, {"url": "https://medium.com/tag/nlp?source=post_page-----e9627b4eae34---------------nlp-----------------", "anchor_text": "NLP"}, {"url": "https://medium.com/tag/word2vec?source=post_page-----e9627b4eae34---------------word2vec-----------------", "anchor_text": "Word2vec"}, {"url": "https://medium.com/tag/python?source=post_page-----e9627b4eae34---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe9627b4eae34&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&user=Mate+Pocs&userId=686b78ddcf4b&source=-----e9627b4eae34---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe9627b4eae34&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&user=Mate+Pocs&userId=686b78ddcf4b&source=-----e9627b4eae34---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe9627b4eae34&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e9627b4eae34--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe9627b4eae34&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e9627b4eae34---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e9627b4eae34--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e9627b4eae34--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e9627b4eae34--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e9627b4eae34--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e9627b4eae34--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e9627b4eae34--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e9627b4eae34--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e9627b4eae34--------------------------------", "anchor_text": ""}, {"url": "https://matepocs.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://matepocs.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Mate Pocs"}, {"url": "https://matepocs.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "460 Followers"}, {"url": "http://linkedin.com/in/matepocs", "anchor_text": "linkedin.com/in/matepocs"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F686b78ddcf4b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&user=Mate+Pocs&userId=686b78ddcf4b&source=post_page-686b78ddcf4b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fea5ecc8b4148&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-draw-a-map-using-python-and-word2vec-e9627b4eae34&newsletterV3=686b78ddcf4b&newsletterV3Id=ea5ecc8b4148&user=Mate+Pocs&userId=686b78ddcf4b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}