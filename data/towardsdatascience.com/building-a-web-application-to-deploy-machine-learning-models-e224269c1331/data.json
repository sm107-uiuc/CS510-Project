{"url": "https://towardsdatascience.com/building-a-web-application-to-deploy-machine-learning-models-e224269c1331", "time": 1683003276.09762, "path": "towardsdatascience.com/building-a-web-application-to-deploy-machine-learning-models-e224269c1331/", "webpage": {"metadata": {"title": "Building a Web Application to Deploy Machine Learning Models | by Joseph Lee Wei En | Towards Data Science", "h1": "Building a Web Application to Deploy Machine Learning Models", "description": "If you\u2019ve been learning Deep Learning for a while now, you may have built some really cool models using your Jupyter notebook doing a range of things, from image recognition to language translation\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/josephlee94/intuitive-deep-learning/tree/master/Building%20a%20Web%20Application%20to%20Deploy%20Machine%20Learning%C2%A0Models", "anchor_text": "here", "paragraph_index": 8}, {"url": "http://www.intuitivedeeplearning.com)", "anchor_text": "www.intuitivedeeplearning.com)", "paragraph_index": 23}, {"url": "http://flask.palletsprojects.com/en/1.1.x/", "anchor_text": "here", "paragraph_index": 48}, {"url": "https://medium.com/intuitive-deep-learning/build-your-first-convolutional-neural-network-to-recognize-images-84b9c78fe0ce", "anchor_text": "pre-requisite tutorial", "paragraph_index": 65}, {"url": "https://medium.com/intuitive-deep-learning/intuitive-deep-learning-part-3-rnns-for-natural-language-processing-4f4b0bcbee80", "anchor_text": "Intuitive Deep Learning Part 3: RNNs for Natural Language Processing", "paragraph_index": 94}], "all_paragraphs": ["If you\u2019ve been learning Deep Learning for a while now, you may have built some really cool models using your Jupyter notebook doing a range of things, from image recognition to language translation. You probably want to let your friends try out your models (or maybe even set up a company from this), but sending them a Jupyter notebook isn\u2019t really what you had in mind. How do you build a Web Application to deploy your Machine Learning models?", "The focus of this post is building a web app around our Machine Learning model for others to try. We will go through some Web programming techniques such as HTML and Flask, as well as deploying it on the Web on a Ubuntu server on DigitalOcean.", "By the end of this tutorial, other people (from all over the world) will be able to try your simple image recognition software. Your web app will look something like this page I\u2019ve built:", "This is the front page of the Web app:", "Once you\u2019ve chosen a file (please choose a file below 500kb in size), you can click \u201cUpload\u201d. Suppose I chose the cat image that I used previously in my Notebook, I\u2019ll be redirected to this page with my prediction:", "To get something up quickly, we\u2019ll skip a few best practices along the way; but hopefully, we\u2019ll come back to it in later posts!", "This post assumes familiarity with building your own image recognition model; you may refer to the guide here to get up to speed:", "Once you\u2019ve completed the tutorial above, you should have a .h5 file with a model to classify images into 10 different classes (airplane, automobile, bird, cat, deer, dog, frog, horse, ship, and truck). If you have that model file, we can begin creating a Web app around it!", "If at any point you want to see the full code for what we\u2019ll be doing in this post, please see the GitHub here.", "[Note: as this section relies on a third party service, DigitalOcean, the instructions might change over time]", "The purpose of this post is to teach you how to deploy a simple Web application on the Web for others to try. For this, we need a Web server, which is like a computer that will send information (the webpage) to other computers who request for it. We will set up a Web server on DigitalOcean, and you may use my referral link here (or just go to the website directly):", "In that link, create an account on the right panel:", "DigitalOcean will then walk you through the steps in creating an account:", "Once you click the link in the confirmation email, you will need to key in your billing information. After keying in your billing information, you will be led to this page to create your first project:", "After keying in the project name and what your project is for, you can scroll down to the bottom and ignore the other questions. Click the nice blue Start banner at the bottom:", "You should then reach this landing page:", "The Web server we will need is called a \u201cdroplet\u201d in DigitalOcean. Hover over the \u2018plus\u2019 below the heading \u2018Create a Droplet\u2019 and you\u2019ll see this:", "Now click on the blue \u2018Create Droplet\u2019 button. You should see this page:", "The default (highlighted above) is Ubuntu, which is what this tutorial will be based on.", "If you scroll down to Choose a plan, you can choose how powerful you want your Web server to be. The more expensive plans that you choose, you can process larger images and process them faster. I suggest picking the $10/month one, as we will need some memory to process images. However, the $5/month should be good enough to try this tutorial out:", "If you scroll down further, you can also choose which physical data center you want your server to be on. I\u2019ve chosen SF(2):", "You can ignore the other options on this page for now. Scroll down to the very bottom, give your droplet a name and click the green \u201cCreate\u201d button.", "It will take a little while for your droplet to initialize, but once you\u2019re down, you should see this as your front page:", "Note that there are four numbers (157.230.156.140) which will be the IP address for our droplet. An IP address is like any web URL (like www.intuitivedeeplearning.com) so you can just enter it into your address bar. If you want a domain name for it so that others can type in English words into the address bar rather than a series of four numbers, you\u2019ll have to purchase it and set up separately.", "At this point, you\u2019ll get an email like this:", "Copy your password and then go back to the DigitalOcean console. If you click the three dots on the side of your droplet, a pop-up should appear.", "Click on \u201cAccess console\u201d. This will open up a window which will allow you to communicate to your Web server.", "Now, type in the username and password you\u2019ve got in your email. The username should be \u2018root\u2019. The password will not show, but if you click Cntrl-V and Enter, you should be able to get access in. The system will prompt you to change your password. Enter your current password (Cntrl-V, Enter) and then type in your new password twice.", "Once you\u2019re done, you should see a screen like this:", "Now don\u2019t be intimidated by the console. The console looks scary, but it really is a way to speak to the computer by typing very specific commands. For example, try asking what Python 3 version your server is using by typing", "and clicking Enter. You should see something like this:", "The computer then tells you the version of Python your server is using, which for me right now is Python 3.6.7.", "Now, it\u2019s time to create your first HTML file. HTML is a language which Web browsers understand, and it will turn the HTML code into the Web page you\u2019re looking at right now. To create our files, we will need to use something like a text editor, like Notepad but on your server. We\u2019ll be using an editor called nano for this tutorial.", "Our first webpage will be called index.html which is the front page of your website. Now, type this command to your server:", "In the console, it\u2019ll look like this:", "This command means to open up the file index.html with the editor nano. Since index.html doesn\u2019t exist, it will create the file for you. You should see something like this on your screen now:", "As the bottom suggests, this is a new file for you to type stuff in. You can type any sentence in to this Notepad-like app, for example:", "Your console will look like this:", "Now, we\u2019ll exit out of this Notepad by clicking Cntrl-X. At the bottom, they will ask you if you wish to save your file:", "You have to save your changes, so type \u2018Y\u2019. Now, they will ask you what your filename will be:", "Just click Enter on your keyboard, and you\u2019ll be done! Now, this might seem a bit less user-friendly than your standard Notepad, but just bear with it for a while.", "You\u2019ve now got a HTML file on your Webserver, all you need to do is to \u2018open\u2019 your Webserver. To do so, type this:", "\u201880\u2019 is the standard port which serves HTTP files. Your console should now look like this:", "Now, your website is online! Go to the IP address for your droplet, which are the four numbers you see beside your droplet in DigitalOcean. You should be able to see your first webpage, which is the content you\u2019ve written in index.html through the nano editor just now.", "Congratulations \u2014 you\u2019ve set up your first Web sever on DigitalOcean! To stop the Webpage and get back to typing commands, just press Cntrl-C. Now, we are ready to build our first Machine Learning Web app on our Web server!", "Your Web app can be thought of as two parts \u2014 the \u201cbackend\u201d and the \u201cfrontend\u201d. Think of the \u201cbackend\u201d application as the brains behind the operations \u2014 you might not see it, but the computations are all done here. This is where we define the logic of how an user will interact with your web application, and what happens to the user\u2019s inputs. It is also where we will run our Machine Learning model. The \u201cfrontend\u201d on the other hand, defines what the users see, touch and experience. This is like the face of your Web application and will be what your user interacts directly with.", "In this section, we will define the backend \u2014 we\u2019ll create the \u201cbrains\u201d first, and then we\u2019ll see how to fit in the \u201cface\u201d later. In particular, we will:", "In the next section, we will define how the user sees the two webpages \u2014 the homepage and the \u201cprediction\u201d page. But for now, let\u2019s focus on the backend, and we\u2019ll be using Flask as a framework to build it.", "Flask is a simple web application framework that we can use to build the backend of web apps and get started quickly. In this tutorial, I will explain enough to create the web app around your Machine Learning model. Unfortunately, I will not be explaining every line of Flask code and structure; you can learn more about Flask here.", "First, let\u2019s install Flask. To do so, we first have to install pip3, which helps us to install other Python packages like Flask on our server. In your console, type", "Your console should look like this:", "Once you click Enter, it will tell you the packages that will be installed. Type in \u201cY\u201d to continue. Now that pip3 is installed, enter the command into your console:", "Your console should look like this:", "While we\u2019re installing Flask, be sure to install all the Python packages we had previously now on the server:", "Now, we will organise our files in the server. We will createa Python file for our web backend, which we will call imgrec_webapp.py(using nano like we did earlier). We will then have two folders, one to store the uploaded images (which we will call uploads) and one to store the HTML files for your frontend (called templates). To create a folder, type mkdir folder_name into the console, where \u201cfolder_name\u201d can be replaced by your desired name. So the two commands to type are:", "Now, we need to upload our model, my_cifar10_model.h5 into the server. Since the model is in my local computer, unfortunately, we can\u2019t use the console to upload the model from my desktop. Instead, we will use Windows PowerShell. This is an app that you likely have installed already if you are using Windows:", "When you\u2019ve opened Windows Powershell, type in this command to upload your model, and be sure to replace the instructions in triangular brackets:", "In my case, I would type:", "If it is your first time connecting from Powershell, a prompt like this will appear. Simply click \u201cyes\u201d.", "Type in your password, and once you\u2019re done, it should look something like this:", "And now your model is on the Droplet! Now, go back to the DigitalOcean console where you accessed your server previously. Alternatively, if you like the PowerShell interface, you can use PowerShell to connect to your server like this:", "In my case, it would be:", "And voila! You no longer need to go to DigitalOcean to get your server console. Once you\u2019re in your console, type ls (which stands for list) to make sure that you\u2019ve got all your files and folders:", "Now that we\u2019ve got everything set up, we can (finally) start coding our backend application. Open up the Python file you have created, imgrec_webapp.py. As usual, we will import some of the necessary functions that you will need later:", "Then, we create an instance of a Flask app which just one line of code:", "We\u2019ll add more to the Flask app later. For now, let\u2019s load our Machine Learning model that we\u2019ve already saved in our pre-requisite tutorial my_cifar10_model.h5. We call the following functions and load the model like this:", "Now that we\u2019ve got our model running, let\u2019s add to our Flask web app. The first thing we want to do is state what the web application will do when it hits a certain URL. To define that, we use the@app.route() function. For my main page, I will use the default URL (i.e. I won\u2019t have any additional \u201csuffixes\u201d to my URL) and so my first parameter will be '/'. An user will interact with my main page in two ways:", "This requires two different methods of interacting with this page: Interaction #1 will use \u201cGET\u201d (a method primarily for an user to request data from a resource), while interaction #2 will use \u201cPOST\u201d (a method primarily for an user to send data to a server to create or update a resource). The code block below therefore says that if I\u2019m at interaction #2, save the file in my \u201cuploads\u201d folder and go to the \u201cprediction\u201d page (and pass in the parameter filename). If not, I\u2019m at interaction #1 and just render the webpage \u201cindex.html\u201d.", "Now, we have to create a \u201cprediction\u201d page to go to, and define what the Web app should do when an user is at that page. We use the @app.route()function again, and say that if an user is at the /prediction/<filename> subdirectory, pass in the <filename> into the Python function that I define for that page.", "In this prediction page, I will:", "The five steps are reflected below:", "All this should be pretty familiar, if you need a refresher, please visit the tutorial:", "Lastly, we run the app with port 80, which is the standard port for accessing web pages. Type this at the end of your Python file:", "Now we have the backbones of our Web application. You might have noticed that we are still missing a few different pieces though. In particular, we\u2019ve called on the HTML web pages like index.html and predict.html but we\u2019ve not built them yet! We will do so in the next section.", "Do also note that in this bare-bones tutorial, we\u2019ve skipped many good practices. You may want to try incorporating some of these practices if you know how to (or Google it!):", "When a user interacts with your web application, they do so via the web pages, which is what we will be building in this section. Go into the templates folder by typing in the console:", "Create the two template files we need, index.html and predict.html. If you type ls you should see those two files under templates:", "We use a language called HyperText Markup Language (HTML), which just tells the browser how to render the content that you have. To generalise it a little bit, we tag the content with tags like \u201cheader\u201d or \u201cparagraph\u201d and then we tell the browser how to display content with those type of tags. For example, if I want to tag the words \u201cHello\u201d as a \u201cheader 1\u201d type, I\u2019ll write:", "Usually, when you start the tag (i.e. <h1>), you have to close the tag as well to show where it ends (i.e. </h1>). We\u2019ll learn as we go, so let\u2019s start with index.html. To remind you how the page will look like, we are trying to build something like this:", "The first thing we start index.html with is this line:", "This tells the browser what kind of document type to expect (i.e. HTML). We then begin the document with a<html> tag, which we will close it at the very end. Now, we also define the head of the document, which contains the \u201cmeta-data\u201d of the document. Here, I\u2019ve defined the title and I\u2019ve linked a Bootstrap stylesheet, where other people have already defined styles for the various tags. I can therefore leave large amounts of the styling to what others have coded for us, unless there are some aspects I need to customise.", "First, I tell HTML that I want a background color of black. Then, I have a div container so that I can contain the following content together. I want the container to be in the middle of the page with a certain height and width and margins, so I define that in the style. Within my div container, I have three main content pieces:", "Once I\u2019ve defined these three content pieces within my div container, I close the body and html tags and I\u2019m done! Do note that it is good practice to re-organizing your code into CSS files and HTML files so that we can separate the style from the content \u2014 for the purpose of this tutorial, we\u2019ve taken some shortcuts!", "Now, we move on to the predict.html page. Remember how the page is supposed to look like:", "For the HTML code, the head is still the same as index.html, but there are a few new elements introduced in the body:", "In my div container (which is the same as in index.html), I now have the following content:", "And there we have it! Again, it is good practice to re-organizing your code into CSS files and HTML files so that we can separate the style from the content. This way, if we want to consistently change the style of the div for example, we don\u2019t need to go to both index.html and predict.html to change it.", "Now, all there is left to do is to run the Web application. Go back to the console and type this:", "You\u2019ll see a whole bunch of warning messages, but you can ignore them. The most important thing is that at the end, you see this screen:", "Now, you can enter your droplet\u2019s IP address into your browser and click Enter.", "You should see your application up and running, and you should be able to upload a small image and get a prediction! Do note that the first image will always take a lot longer, so be patient! It will be faster after that!", "Consolidated Summary: In this post, we\u2019ve written a web application around our image recognition model by:", "Congratulations! You\u2019ve built your very first web application. We are still quite far away from building a production-level web application, and we have not incorporated many necessary practices if we are to scale this up. But at least we have some semblance of a Web application running, and we can incorporate these practices to our base framework.", "What\u2019s Next: In our next Coding Companion Part 3 (link to be released), we will explore how to code up our own Recurrent Neural Networks (RNNs) to deal with natural language! Be sure to get an intuitive understanding of RNNs here:", "Intuitive Deep Learning Part 3: RNNs for Natural Language Processing", "Note: This story first appeared in Intuitive Deep Learning:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I want to make Deep Learning concepts as intuitive and as easily understandable as possible by everyone! Follow my publication to learn more!"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe224269c1331&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e224269c1331--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e224269c1331--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@josephleeweien?source=post_page-----e224269c1331--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@josephleeweien?source=post_page-----e224269c1331--------------------------------", "anchor_text": "Joseph Lee Wei En"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb59450ee20d9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&user=Joseph+Lee+Wei+En&userId=b59450ee20d9&source=post_page-b59450ee20d9----e224269c1331---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe224269c1331&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe224269c1331&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://157.230.156.140/", "anchor_text": "Classify your Image!157.230.156.140"}, {"url": "https://medium.com/intuitive-deep-learning/build-your-first-convolutional-neural-network-to-recognize-images-84b9c78fe0ce", "anchor_text": "Build your first Convolutional Neural Network to recognize imagesA step-by-step guide to building your own image recognition software with Convolutional Neural Networks using Keras on\u2026medium.com"}, {"url": "https://github.com/josephlee94/intuitive-deep-learning/tree/master/Building%20a%20Web%20Application%20to%20Deploy%20Machine%20Learning%C2%A0Models", "anchor_text": "here"}, {"url": "https://m.do.co/c/e2093d3a5967", "anchor_text": "DigitalOcean \u2014 Cloud Computing, Simplicity at ScaleProviding developers and businesses a reliable, easy-to-use cloud computing platform of virtual servers (Droplets)\u2026m.do.co"}, {"url": "http://www.intuitivedeeplearning.com)", "anchor_text": "www.intuitivedeeplearning.com)"}, {"url": "http://flask.palletsprojects.com/en/1.1.x/", "anchor_text": "here"}, {"url": "https://medium.com/intuitive-deep-learning/build-your-first-convolutional-neural-network-to-recognize-images-84b9c78fe0ce", "anchor_text": "pre-requisite tutorial"}, {"url": "http://twitter.com/app", "anchor_text": "@app"}, {"url": "http://twitter.com/app", "anchor_text": "@app"}, {"url": "https://medium.com/intuitive-deep-learning/build-your-first-convolutional-neural-network-to-recognize-images-84b9c78fe0ce", "anchor_text": "Build your first Convolutional Neural Network to recognize imagesA step-by-step guide to building your own image recognition software with Convolutional Neural Networks using Keras on\u2026medium.com"}, {"url": "https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css", "anchor_text": "https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"}, {"url": "https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css", "anchor_text": "https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"}, {"url": "https://medium.com/intuitive-deep-learning/intuitive-deep-learning-part-3-rnns-for-natural-language-processing-4f4b0bcbee80", "anchor_text": "Intuitive Deep Learning Part 3: RNNs for Natural Language Processing"}, {"url": "https://medium.com/intuitive-deep-learning", "anchor_text": "Intuitive Deep LearningWe explain cutting-edge deep learning concepts in an intuitive way! Non-technical beginners, students of deep learning\u2026medium.com"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----e224269c1331---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----e224269c1331---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----e224269c1331---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/web-development?source=post_page-----e224269c1331---------------web_development-----------------", "anchor_text": "Web Development"}, {"url": "https://medium.com/tag/coding?source=post_page-----e224269c1331---------------coding-----------------", "anchor_text": "Coding"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe224269c1331&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&user=Joseph+Lee+Wei+En&userId=b59450ee20d9&source=-----e224269c1331---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe224269c1331&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&user=Joseph+Lee+Wei+En&userId=b59450ee20d9&source=-----e224269c1331---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe224269c1331&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e224269c1331--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe224269c1331&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e224269c1331---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e224269c1331--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e224269c1331--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e224269c1331--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e224269c1331--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e224269c1331--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e224269c1331--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e224269c1331--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e224269c1331--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@josephleeweien?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@josephleeweien?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Joseph Lee Wei En"}, {"url": "https://medium.com/@josephleeweien/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.3K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb59450ee20d9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&user=Joseph+Lee+Wei+En&userId=b59450ee20d9&source=post_page-b59450ee20d9--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F6ce1a0660711&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-web-application-to-deploy-machine-learning-models-e224269c1331&newsletterV3=b59450ee20d9&newsletterV3Id=6ce1a0660711&user=Joseph+Lee+Wei+En&userId=b59450ee20d9&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}