{"url": "https://towardsdatascience.com/better-features-for-a-tree-based-model-d3b21247cdf2", "time": 1683014023.0920808, "path": "towardsdatascience.com/better-features-for-a-tree-based-model-d3b21247cdf2/", "webpage": {"metadata": {"title": "Better Features for a Tree-Based Model | by Agnis Liukis | Towards Data Science", "h1": "Better Features for a Tree-Based Model", "description": "When you understand how a model works, it becomes much easier to create successful features. It is because you can reason about the model\u2019s strong and weak sides and prepare features accordingly\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.kaggle.com/alijs1", "anchor_text": "https://www.kaggle.com/alijs1", "paragraph_index": 37}], "all_paragraphs": ["When you understand how a model works, it becomes much easier to create successful features. It is because you can reason about the model\u2019s strong and weak sides and prepare features accordingly. Let\u2019s take a look together at what features can be understood by a tree-based model and what features are harder for it to use (and how can we help the model in such cases).", "We\u2019ll start by taking a closer look at what\u2019s inside the tree-based model.", "The main building block of tree-based models is a binary decision. It takes the value of a specific feature and make a split depending on it. Many such decisions form a decision tree. And many trees predictions averaged give model predictions. Of course, this is a quite simplified explanation of tree-based models, but it fits very well for understanding what properties are required from successful features.", "The number of required splits (or required binary decisions) is an important property of the feature", "Given the binary nature, tree-based models are good at handling features where the main signal can be extracted by a few splits. Let\u2019s take a look at some features with such property.", "In order to better reason about required splits, we\u2019ll use \u201cfeature vs target\u201d graphs. On the X axis, we have feature values sorted from smallest to largest. And on the Y axis, we have corresponding target values for each feature value. Additionally, we\u2019ll use a split line to separate between which target values we would like to consider low and high.", "Here are some examples of \u201cfeature vs target\u201d graphs for features requiring one or a few splits, which are handled well by tree-based models.", "As you can see, tree-based models are good at handling features, where the graph doesn\u2019t change the direction often from upward to downward and vice-versa. Features don\u2019t need to be linear, the main requirement is that they don\u2019t require many split points to separate low and high target values.", "Additionally, what is the strong side of tree-based models, is the ability to handle feature interactions. This is when feature A behaved in one way for small feature B values but changes its behavior for big feature B values. Not all models can capture such interaction, but tree-based models handle it very naturally.", "Now let\u2019s take a look at some features, which are harder for tree-based models to handle.", "The more splits are needed for a feature to capture the full signal, the deeper trees are required. But deeper trees with many leaves means a higher risk of over-fitting. Allowing the model to grow deeper trees, doesn\u2019t mean it will make splits only on the features we want. It can use splits to unnecessarily divide some other features resulting in capturing noise.", "Now, having some intuition on what type of features we want for our tree-based model, let\u2019s look at some examples of how to actually transform features to make them better.", "Here we can see a feature with some repeating pattern. One real example of a feature with a similar pattern is a date. In many datasets, there are one or several date features. They can specify the date of registration, date of birth, date of measurement, and so on. One typical property of date features is that sometimes they have a seasonality component. E.g. the target variable can depend on weekday \u2014 in weekends target variable behaves differently than in working days.", "It will be hard for our model to extract such information. As it will need two splits for each weekend \u2014 to separate it from both sides. An additional pitfall is that making splits on exact date values won\u2019t help for predicting on unseen data in the future as dates are not repeating.", "The best way how to help our model is to extract the pattern to much simpler binary feature \u201cis_weekend\u201d, which will have value \u201c1\u201d for weekends and \u201c0\u201d for working days. Or maybe it will be more effective to use a \u201cweekday\u201d feature, having values from 1 to 7 for each weekday. When we see what this means visually for our previous example, we are reducing necessary splits to fully capture the signal in data, thus making the feature more friendly for tree-based models.", "Basically, we push all repetitive intervals (e.g. weeks) together and let the model use an average value for making decisions on splits. In the example above this allows us to reduce the number of required splits from 8 to 2. If you wonder, how this is done in code \u2014 we simply took x mod 25 here as the new feature value, because the original feature had repeating intervals of length 25.", "We can improve features by reducing the number of required splits for the model to capture the signal", "Another situation where a tree-based model might need some help is very noisy data. Consider some feature where the values are very noisy, but in reality, only one point is meaningful. If this point is known to us, we can help the model by making the necessary split ourselves. This can be achieved by transforming raw feature to the binary one.", "For example, we are given a number of purchases at a store in different dates and there is a known date when this store was moved to a different location. If we would check the average value before and after the move, the corresponding means would be 25 and 30. But given a high variance with values changing from 0 to 60, it is hard for the model to determine the correct split point.", "In this particular example, given that the mean value changed, most likely the model will manage to make a split somewhere near the correct point. However, it may choose some point to one or other side, resulting in worse predictions around this moving point. We can help the model by introducing a new feature specifying this point explicitly \u2014 for example, this could be a \u201cnew_location\u201d feature, having value 1 for all rows after the move and value 0 before it.", "Of course, such transformation requires some domain knowledge and \u201cexpert decision\u201d to choose the correct split point. But when this is possible, such a feature can greatly help the model to avoid making unnecessary wrong splits, which could cause over-fitting to noise.", "So far we explored how tree-based models are using features and looked at some examples of how to use that knowledge to fix or engineer better features.", "Now let\u2019s talk about other considerations that can help us when working with tree-based models.", "One weak spot of tree-based models is an inability to extrapolate. Simply speaking, a tree-based model will typically fail to predict a value that is smaller than the smallest value in training data, or a value that is bigger than the biggest value in the training set.", "Consider the feature X values and corresponding target Y values as follows:", "Any simple linear model will capture the linear relationship between X and Y and will guess the last Y value correctly. But tree-based models most likely will predict a value around 4. And not 5, which is obviously the correct value.", "To understand the reason, we should recall the way how tree-based models are using features \u2014 by making splits on them. And if the model has never seen feature X value bigger than 3, there is no way for it to make splits for bigger values. As a result, all X values bigger than 3 will be treated exactly the same by the tree-based model.", "Now, can we help a model to overcome this? In general \u2014 no, we can\u2019t in any way force a model to make splits outside the known feature interval.", "A tree-based model can\u2019t make splits for feature values outside the interval seen in training data, therefore it can\u2019t distinguish between them.", "There actually exist some approaches around this limitation, but those typically involve a transformation of target value \u2014 therefore I won\u2019t consider them here as in this article I want to focus only on transforming/creating features. I can just give you a clue regarding the direction of those approaches. For example, sometimes it is possible to predict not the actual target value, but the difference from some previous value and at the end reconstruct the real target values by incrementally adding predicted difference from the previous value one by one.", "When working with tree-based models, it is not needed to scale or normalize data. Why? Because making split at 0.8 in the interval from 0 to 1 is equally hard (or easy) as making split at e.g. 700 in an interval from -100 to 900.", "To see it visually, let\u2019s plot the \u201cfeature vs target\u201d graph for some random feature with values ranging from 30 to 130. And let\u2019s plot the same graph for the same feature, but after normalization to the interval (0,1).", "Notice, the only thing changed is the scale of the X-axis. The model will need exactly the same splits as before normalization to separate low and high target values.", "Similarly, tree-based models are not sensitive to outliers in features (on the contrary to e.g. linear models).", "Despite undeniable advancements of deep learning lately, tree-based models are still very competitive. And if we talk about tabular data, in many (if not most) of the cases, tree-based models with accurate feature engineering can still outperform the deep learning approach, which is proven by many Kaggle competition results. In case of tree-based models, feature engineering is the key to success. But the understanding of models underlying structure and operation is the key to successful feature engineering.", "Hope you found something interesting, and useful in this article, and thanks for reading! Follow me not to miss further articles about machine learning.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Software Architect, Data Scientist, Kaggle Grandmaster (https://www.kaggle.com/alijs1). Sometimes I write about Python, Data Science and Machine Learning\u2026"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd3b21247cdf2&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://agnis-liukis.medium.com/?source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": ""}, {"url": "https://agnis-liukis.medium.com/?source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": "Agnis Liukis"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fce835d44241e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&user=Agnis+Liukis&userId=ce835d44241e&source=post_page-ce835d44241e----d3b21247cdf2---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd3b21247cdf2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd3b21247cdf2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@franki?utm_source=medium&utm_medium=referral", "anchor_text": "Franki Chamaki"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----d3b21247cdf2---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d3b21247cdf2---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/feature-engineering?source=post_page-----d3b21247cdf2---------------feature_engineering-----------------", "anchor_text": "Feature Engineering"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd3b21247cdf2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&user=Agnis+Liukis&userId=ce835d44241e&source=-----d3b21247cdf2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd3b21247cdf2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&user=Agnis+Liukis&userId=ce835d44241e&source=-----d3b21247cdf2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd3b21247cdf2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd3b21247cdf2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d3b21247cdf2---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d3b21247cdf2--------------------------------", "anchor_text": ""}, {"url": "https://agnis-liukis.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://agnis-liukis.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Agnis Liukis"}, {"url": "https://agnis-liukis.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "205 Followers"}, {"url": "https://www.kaggle.com/alijs1", "anchor_text": "https://www.kaggle.com/alijs1"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fce835d44241e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&user=Agnis+Liukis&userId=ce835d44241e&source=post_page-ce835d44241e--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F7a6d1b0d1a83&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbetter-features-for-a-tree-based-model-d3b21247cdf2&newsletterV3=ce835d44241e&newsletterV3Id=7a6d1b0d1a83&user=Agnis+Liukis&userId=ce835d44241e&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}