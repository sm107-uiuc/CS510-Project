{"url": "https://towardsdatascience.com/using-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e", "time": 1683008646.560093, "path": "towardsdatascience.com/using-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e/", "webpage": {"metadata": {"title": "Using Kafka as a Temporary Data Store and Data-loss Prevention Tool in The Data Lake | by Lucio Daza | Towards Data Science", "h1": "Using Kafka as a Temporary Data Store and Data-loss Prevention Tool in The Data Lake", "description": "Apache Kafka is a streaming platform that allows for the creation of real-time data processing pipelines and streaming applications. Kafka is an excellent tool for a range of use cases. If you are\u2026"}, "outgoing_paragraph_urls": [{"url": "https://kafka.apache.org/", "anchor_text": "Apache Kafka", "paragraph_index": 0}, {"url": "https://medium.com/@lucio_17231/using-kafka-for-collecting-web-application-metrics-in-your-cloud-data-lake-b97004b2ce31", "anchor_text": "previous article", "paragraph_index": 0}, {"url": "http://www.dremio.com", "anchor_text": "Dremio", "paragraph_index": 5}, {"url": "https://www.dremio.com/aws/", "anchor_text": "Dremio AWS edition", "paragraph_index": 5}, {"url": "https://kafka-python.readthedocs.io/en/master/apidoc/KafkaConsumer.html", "anchor_text": "documentation", "paragraph_index": 22}, {"url": "https://www.dremio.com/tutorials/analyzing-s3-with-tableau/", "anchor_text": "Integrating Tableau with Amazon S3", "paragraph_index": 35}, {"url": "https://www.dremio.com/tutorials/adls-gen2-python-machine-learning/", "anchor_text": "Creating a Regression machine learning model using ADLS Gen2 data", "paragraph_index": 35}, {"url": "https://www.dremio.com/tutorials/combining-data-from-multiple-datasets/", "anchor_text": "Combining Data From Multiple Datasets", "paragraph_index": 35}, {"url": "https://www.dremio.com/tutorials/analyzing-student-performance-with-dremio-python/", "anchor_text": "A Simple Way to Analyze Student Performance Data with Dremio and Python", "paragraph_index": 35}], "all_paragraphs": ["Apache Kafka is a streaming platform that allows for the creation of real-time data processing pipelines and streaming applications. Kafka is an excellent tool for a range of use cases. If you are interested in examples of how Kafka can be used for a web application\u2019s metrics collection, read my previous article.", "Kafka is a powerful technique in a data engineer\u2019s toolkit. When you know how and where Kafka can be used, you can improve the quality of data pipelines and process data more efficiently. In this article, we will look at an example of how Kafka can be applied for more unusual cases such as storing data in Amazon S3 and preventing data loss. As you may know, fault-tolerance and durability in data storing are among the crucial requirements for most data engineering projects. So, it is important to know how to use Kafka in a way that meets those needs.", "Here we will use Python as the programming language. To interact with Kafka from Python, you also need to have a special package. We will use the kafka-python library. To install it, you can use the following command:", "Kafka can be used for storing data. You may be wondering whether Kafka is a relational or NoSQL database. The answer is that it is neither one nor the other.", "Kafka, as an event streaming platform, works with streaming data. At the same time, Kafka can store data for some time before removing it. This means that Kafka is different from traditional message queues that drop messages as soon as they are read by the consumer. The period during which the data is stored by Kafka is called retention. Theoretically, you can set this period to forever. Kafka also can store data on persistent storage, and replicates data over the brokers inside a cluster. This is just another trait that makes Kafka look like a database.", "Why then isn\u2019t Kafka used widely as a database, and why aren\u2019t we addressing the idea that this might be a data storage solution? The simplest reason for this is because Kafka has some peculiarities that are not typical for general databases. For example, Kafka also doesn\u2019t provide arbitrary access lookup to the data. This means that there is no query API that can be used to fetch columns, filter them, join them with other tables, and so on. Actually, there is a Kafka StreamsAPI and even an ksqlDB. They support queries and strongly resemble traditional databases. But they are like scaffolds around Kafka. They act as consumers that process data for you after it\u2019s consumed. So, when we talk about Kafka in general and not its extensions, it\u2019s because there isn\u2019t a query language like SQL available within Kafka to help you access data. By the way, modern data lake engines like Dremio can solve this issue. Dremio supports interactions using SQL with data sources that don\u2019t support SQL natively. So, for example, you can persist data from Kafka streams in AWS S3, and then access it using Dremio AWS edition.", "Kafka is also focused on the paradigm of working with streams. Kafka is designed to act as the core of applications and solutions that are based on streams of data. In short, it can be seen as a brain that processes signals from different parts of the body and allows an organ to work by interpreting those signals. The aim of Kafka is not to replace more traditional databases. Kafka lives in a different domain, and it can interact with databases, but it is not a replacement for databases. Kafka can be easily integrated with databases and cloud data lake storage such as Amazon S3 and Microsoft ADLS with the help of Dremio.", "Keep in mind that Kafka has the ability to store data and the data storage mechanism is quite easy to understand. Kafka stores the log of records (messages) from the first message up till now. Consumers fetch data starting from the specified offset in this log of records. This is the simplified explanation of what it looks like:", "The offset can be moved back in history which will force the consumer to read past data again.", "Because Kafka is different from traditional databases, the situations where it can be used as a data store are also somewhat specific. Here are some of them:", "Later in this article, we will look at an example of how Kafka can be used as a data store in a use case similar to the first one described above.", "A lot of developers choose Kafka for their projects because it provides a high level of durability and fault-tolerance. These features are achieved by saving records on disk and replicating data. Replication means that the same copies of your data are located on several servers (Kafka brokers) within the cluster. Because the data is saved on disk, the data is still there even if the Kafka cluster becomes inactive for some period of time. Thanks to the replication, the data stays protected even when one or several of the clusters inside the broker are damaged.", "After data is consumed, it is often transformed and/or saved somewhere. Sometimes data can become corrupt or lost during data processing. In such cases, Kafka can help restore the data. If needed, Kafka can provide a way to execute operations from the beginning of the data stream.", "You should be aware that the two main parameters used to control the data loss prevention policy are the replication factor and the retention period. The replication factor shows how many redundant copies of data for the given topic are created in the Kafka cluster. To support fault-tolerance you should set the replication factor to a value greater than one. In general, the recommended value is three. The greater the replication factor, the more stable the Kafka cluster. You can also use this feature to place Kafka brokers closer to the data consumers while having replicas on geographically remote brokers at the same time.", "The retention period is the time during which Kafka saves the data. It is obvious that the longer the period, the more data you will save, and the more data you will be able to restore in case something bad happens (for example, the consumer goes down due to power failure, or the database loses all data as the result of an accidental wrong database query or hacker attack, etc.).", "Here\u2019s an example of how Kafka\u2019s storing capabilities can be very helpful when the business logic of data processing changes suddenly.", "Suppose we have an IoT device that collects weather metrics such as temperature, humidity, and the concentration of carbon monoxide (CO). The device has limited computation power, so all it can do with the metrics is to send them somewhere. In our setup, the device will send data to the Kafka cluster. We will send one datapoint per second, measuring every second as a day (in other words, the IoT device collects information on a per-day basis). The diagram that visualizes this flow is demonstrated below:", "A consumer subscribes to the topic to which the producer sends its messages. The consumer then aggregates the data in a specified way. It accumulates data during the month, then calculates the average metrics (average temperature, humidity, and the concentration of CO). Information about each month should be written into the file. The file contains only one line and the values are separated by commas. Here is an example of what the file might look like:", "Let\u2019s start from the creation of the Kafka producer. The producer will be located in the producer.py file. At the beginning of the file, we should import all the libraries we\u2019ll need and create the KafkaProducer instance, which will work with the Kafka cluster located on the localhost:9092:", "Below you can see the code that generates data and sends it to the Kafka cluster. At the top, we defined the initial values for temperature, humidity and CO concentration (prev_temp, prev_humidity, prev_co_concentration). The counter i is used for record indexing. For this simulation, we want generated values to be random, but we also want to avoid very inconsistent results (like changing the temperature for 40 degrees in just one day). So we don\u2019t just generate random values; we also need to take into account values from the previous day when generating values for the next day. Also, on each iteration, we check whether the generated numbers are in acceptable intervals.", "After generating all of the required data for the current timestamp, the script creates the weather_dict variable from the dictionary with data. After that, the producer sends the JSON-encoded weather_dict to the specified topic of the Kafka cluster. We assign the current values to the corresponding variables that represent the data from the previous timestamp. In the end, we wait for one second before executing the next iteration of the loop.", "Now let\u2019s explore the consumer.py file. At the top of the file, we define the consumer with several parameters. The first and second parameters are the names of the topics for subscription and the URL where the Kafka server is located. The auto_offset_reset argument defines the behaviour when the OffsetOutOfRange error occurs. The \u2018earliest\u2019 value means that the offset should be moved to the oldest available record. So, all messages (records) will be consumed once again after the error. The consumer_timeout_ms parameter is responsible for turning off the consumer when there are no new messages during the specified period of time. The -1 value means that we don\u2019t want to turn off the consumer.", "You can read more about these and other parameters of KafkaConsumer in the documentation.", "Let\u2019s move on to the most important part of the consumer.py file. In the beginning, we define the counter i and the lists where we will store data during the month. On each iteration, we will decode the message (extract weather_dict from it) and append values for the current day to the corresponding lists. If the i counter is equal to 30, we calculate the average values of the metrics for the month.", "Next, we open the file weather_aggregation.txt and write data into it. The data is written in a single line, without line breaks. So, the programs that will need to read the file should be aware that every 5th value is the start of the new data point.", "Before running the producer and consumer, you should run the Kafka cluster. You can do this using the following command (assuming that you have already installed Kafka):", "Here is how the output file looks:", "Suppose now that the time flew and after some period of time, the business requirements have changed. Now we need to process the weather data in a different way.", "First, the aggregation metrics (averages) should be calculated on a per-week basis rather than on a per-month basis, as per the previous requirements. Secondly, we need to convert Celsius temperature degrees into Fahrenheit scale. Finally, we want to change storing logic. Instead of creating a .txt file and writing all data into one file, we need to create a CSV file with columns and rows. Each row should represent one data point (one week\u2019s data). In addition, we want to save the same data into an AWS S3 bucket.", "Changing the code to implement these changes is not a problem. But we collected a lot of data earlier and we don\u2019t want to lose it. In the ideal situation, we want to recalculate all the metrics from the very beginning. So, in the result, we need to receive data in the new format, but ensure it includes those time periods for which we used a different processing approach earlier. Kafka\u2019s storing capabilities will help us.", "Let\u2019s explore the changes in the code we needed to make (file consumer.py). First, we need to import the boto3 library, specify AWS credentials, and instantiate the resource (S3). Also, we changed the names of the variables with lists to make them reflect the fact that they accumulated weekly data rather than monthly. The next change is that we are looking at each 7th record now in order to execute aggregation (earlier we waited for each 30th record). Also, we implemented the conversion from Celsius to Fahrenheit formula ((c * 1.8) + 32).", "Other changes are related to the saving of processed data. Now we work with CSV files, and if it is the first week, we write the column names to the file. Also, the script adds a new line character after each data point to write information about each week on a new row. Finally, we insert the weather_aggregation.csv file into AWS S3 storage as well. The bucket s3-bucket-name was created earlier.", "To recalculate aggregations from the start of our IoT device life (when it started to send data to Kafka), we need to move the offset to the beginning of the message queue. In kafka-python it is as simple as using the seek_to_beginning() method of the consumer:", "In other words, if we place the calling method before the code that we described above, we move the offset to the beginning of the queue for the consumer. This will force it to read messages again that it has already read and processed. This demonstrates the fact that when Kafka stores messages, it doesn\u2019t remove data after the consumer reads it once. Here is the weather_aggregation.csv file generated by the updated consumer:", "This example shows that Kafka was useful as a data storing system. The benefits that Kafka gives in terms of data loss prevention are easy to see. Suppose that the server where our consumer is located was down for some time. If Kafka didn\u2019t have data storing capabilities, all messages sent by the producer would be lost. But we know that when the consumer will be alive again, it will be able to fetch all messages that were accumulated by the Kafka cluster during the consumer downtime. No additional actions are required to use this feature. You don\u2019t need to move the offset. It will be located on the message that was consumed the last time the consumer was live; it will start to consume data right from the place where it stopped.", "The example we demonstrated is simple, but it allows us to understand how useful Kafka is. At the moment, we have the CSV file with the weekly-aggregated weather data. We can use it for data analysis (for example, look at the Integrating Tableau with Amazon S3 tutorial), machine learning model creation (Creating a Regression machine learning model using ADLS Gen2 data), or for internal purposes of an application. Dremio also allows us to join data sources in the data lake and work with it using SQL (even if the original data sources have no support for SQL \u2014 see Combining Data From Multiple Datasets or A Simple Way to Analyze Student Performance Data with Dremio and Python tutorials). Dremio is a useful instrument in the data engineering toolkit.", "In this article, we explored how Kafka can be used for the storing of data and as a data loss prevention tool for streaming applications. We provided an overview of these features, listed the use cases where they are useful, and explained why Kafka isn\u2019t a replacement for traditional databases. We demonstrated a case where a different approach for data processing and transformation was implemented. At the same time, stakeholders wanted to have the results of data processing computed according to the new approach on all data that we processed starting from the very beginning. With Kafka, this issue was solved easily.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Sr. Director of Technical Product Marketing. I love the thrill of the chase when searching for answers in the messiest of data."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F5472f2b586e&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----5472f2b586e--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5472f2b586e--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://luciodaza.medium.com/?source=post_page-----5472f2b586e--------------------------------", "anchor_text": ""}, {"url": "https://luciodaza.medium.com/?source=post_page-----5472f2b586e--------------------------------", "anchor_text": "Lucio Daza"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4c22f4a19725&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&user=Lucio+Daza&userId=4c22f4a19725&source=post_page-4c22f4a19725----5472f2b586e---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5472f2b586e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5472f2b586e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@its_tgain?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Tom Gainor"}, {"url": "https://unsplash.com/s/photos/lake?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://kafka.apache.org/", "anchor_text": "Apache Kafka"}, {"url": "https://medium.com/@lucio_17231/using-kafka-for-collecting-web-application-metrics-in-your-cloud-data-lake-b97004b2ce31", "anchor_text": "previous article"}, {"url": "http://www.dremio.com", "anchor_text": "Dremio"}, {"url": "https://www.dremio.com/aws/", "anchor_text": "Dremio AWS edition"}, {"url": "https://kafka-python.readthedocs.io/en/master/apidoc/KafkaConsumer.html", "anchor_text": "documentation"}, {"url": "https://www.dremio.com/tutorials/analyzing-s3-with-tableau/", "anchor_text": "Integrating Tableau with Amazon S3"}, {"url": "https://www.dremio.com/tutorials/adls-gen2-python-machine-learning/", "anchor_text": "Creating a Regression machine learning model using ADLS Gen2 data"}, {"url": "https://www.dremio.com/tutorials/combining-data-from-multiple-datasets/", "anchor_text": "Combining Data From Multiple Datasets"}, {"url": "https://www.dremio.com/tutorials/analyzing-student-performance-with-dremio-python/", "anchor_text": "A Simple Way to Analyze Student Performance Data with Dremio and Python"}, {"url": "https://medium.com/tag/kafka?source=post_page-----5472f2b586e---------------kafka-----------------", "anchor_text": "Kafka"}, {"url": "https://medium.com/tag/data-lake?source=post_page-----5472f2b586e---------------data_lake-----------------", "anchor_text": "Data Lake"}, {"url": "https://medium.com/tag/data-engineering?source=post_page-----5472f2b586e---------------data_engineering-----------------", "anchor_text": "Data Engineering"}, {"url": "https://medium.com/tag/dremio?source=post_page-----5472f2b586e---------------dremio-----------------", "anchor_text": "Dremio"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5472f2b586e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&user=Lucio+Daza&userId=4c22f4a19725&source=-----5472f2b586e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5472f2b586e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&user=Lucio+Daza&userId=4c22f4a19725&source=-----5472f2b586e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5472f2b586e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5472f2b586e--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F5472f2b586e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----5472f2b586e---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----5472f2b586e--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----5472f2b586e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----5472f2b586e--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----5472f2b586e--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----5472f2b586e--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----5472f2b586e--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----5472f2b586e--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----5472f2b586e--------------------------------", "anchor_text": ""}, {"url": "https://luciodaza.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://luciodaza.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Lucio Daza"}, {"url": "https://luciodaza.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "26 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4c22f4a19725&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&user=Lucio+Daza&userId=4c22f4a19725&source=post_page-4c22f4a19725--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F4c22f4a19725%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-kafka-as-a-temporary-data-store-and-data-loss-prevention-tool-in-the-data-lake-5472f2b586e&user=Lucio+Daza&userId=4c22f4a19725&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}