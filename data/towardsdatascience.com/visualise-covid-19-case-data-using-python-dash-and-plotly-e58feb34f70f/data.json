{"url": "https://towardsdatascience.com/visualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f", "time": 1683004901.3168662, "path": "towardsdatascience.com/visualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f/", "webpage": {"metadata": {"title": "Visualise COVID-19 case data using Python, Dash, and Plotly | by Meinhard Ploner | Towards Data Science", "h1": "Visualise COVID-19 case data using Python, Dash, and Plotly", "description": "This article is less about COVID-19, but more about how to create a useful web application using Python & Dash. It is intended as a simple guide to get up & running with the technology, and makes it\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/create-a-coronavirus-app-using-r-shiny-and-plotly-6a6abf66091d", "anchor_text": "same article about how to perform this task using R & Shiny", "paragraph_index": 1}, {"url": "https://www.python.org/downloads/", "anchor_text": "https://www.python.org/downloads/", "paragraph_index": 6}, {"url": "https://code.visualstudio.com/download", "anchor_text": "https://code.visualstudio.com/download", "paragraph_index": 7}, {"url": "https://towardsdatascience.com/guide-of-choosing-package-management-tool-for-data-science-project-809a093efd46", "anchor_text": "Medium post", "paragraph_index": 8}, {"url": "https://docs.python.org/3/tutorial/venv.html", "anchor_text": "virtual environments", "paragraph_index": 8}, {"url": "https://code.visualstudio.com/docs/python/python-tutorial", "anchor_text": "tutorial", "paragraph_index": 14}, {"url": "https://pandas.pydata.org/", "anchor_text": "Pandas", "paragraph_index": 17}, {"url": "https://towardsdatascience.com/create-a-coronavirus-app-using-r-shiny-and-plotly-6a6abf66091d", "anchor_text": "R-Shiny version of this app", "paragraph_index": 22}, {"url": "https://plot.ly/python/", "anchor_text": "documentation", "paragraph_index": 26}, {"url": "https://medium.com/@meinhard.ploner/create-a-coronavirus-app-using-r-shiny-and-plotly-6a6abf66091d", "anchor_text": "R-Shiny software stack", "paragraph_index": 27}, {"url": "https://github.com/ploner/coronavirus-py", "anchor_text": "https://github.com/ploner/coronavirus-py", "paragraph_index": 35}, {"url": "https://www.heroku.com/", "anchor_text": "Heroku", "paragraph_index": 36}, {"url": "https://towardsdatascience.com/create-a-coronavirus-app-using-r-shiny-and-plotly-6a6abf66091d", "anchor_text": "Visualize COVID-19 case data in a blink of an eye \u2014 using R, Shiny & Plotly", "paragraph_index": 38}], "all_paragraphs": ["This article is less about COVID-19, but more about how to create a useful web application using Python & Dash. It is intended as a simple guide to get up & running with the technology, and makes it easy to do it by yourself!", "I wrote pretty much the same article about how to perform this task using R & Shiny, and intentionally wanted to compare these two software stacks. Here I explain the Python-Dash way, but I plan on another article doing a dedicated comparison of the solutions.", "To get an idea what the final app would look like, test the app:", "The following Step-by-Step guide explains how to create this web application including the interactive plots. The software stack is based on Python & Dash, and it is open-source. Altogether only about 130 lines of code.", "Btw, a link to the GitHub code repository for download is given at the bottom of the article.", "The goal is to create a web application that updates the COVID-19 case data on app launch and shows the data on a dashboard. Features:", "First, download the latest stable release of Python from https://www.python.org/downloads/, start the installer and go through.", "For the selection of the code editor, there are plenty of possibilities. Visual Studio Code is a valid option. To install it, download the installer from https://code.visualstudio.com/download, run it, and complete the installation.", "There exist multiple solutions for package management in Python: pip, pipenv, (ana)conda, and virtual environments. For a quick explanation see e.g. this Medium post. We use here virtual environments.", "Still on the command line, move to the directory where the app should be located. Then create a new app directory and a virtual environment:", "Next, activate the virtual environment. On macOS and Linux, do:", "To install the packages into the new environment, type:", "Now open Visual Studio Code. On the top right of the Welcome screen (Customize -> Tools and languages) you can select Python to install the language support for Python:", "Still on the Welcome screen, click on the left side on \u201cOpen folder\u2026\u201d and select the folder you created previously (corona-app):", "For more details on setting up and customizing VS Code have a look at this dedicated tutorial. The next step is to create the file app.py, which will contain all the app code we need. Click on the plus button on the file explorer and enter the file name.", "In Visual Studio Code, click on the file name \u201capp.py\u201d if the file is not already open. Type the following lines to load the libraries we need:", "Next, define a baseURL from which we download the case data of the Coronavirus by country and region. The data is located on a server of the Johns Hopkins Center for Systems Science and Engineering (JHU/CSSE). The function loadData handles the download and some basic transformations, as explained below.", "read_csv downloads the file from the web and converts it into a Pandas dataframe. Geo-coordinates are omitted by drop; melt converts the dataframe from wide to long format. Then, astype ensures the types are correct. Finally, the method fillna inserts the text <all> if no region is available or 0 for the column containing the cumulated case number.", "The last transformation is a conversion into date type for the corresponding column.", "By calling the function loadData multiple times we load a cleaned dataframe of the Confirmed Cases, Recovered Cases, and Deaths. The function merge joins these 3 data sets to get one data set including all the data:", "For the initialization of the user interface, we need the country names. We extract them from the big dataframe using:", "Now we are done with the data load. Let\u2019s move to the UI part!", "First, we initialize a path to an external stylesheet, and a custom font (matching the R-Shiny version of this app):", "The Dash app will be initialized with the stylesheet defined above using:", "While the title and the two plots spread over the whole screen width, the three controls occupy only one third. In terms of the bootstrap grid system, this translates to three columns of a width of 4 each, which sums up to 12.", "Instead of the three dots (see last code block) we enter now the following code block to define the columns containing the controls:", "For the two bar charts we use the interactive version of Plotly (documentation), and change the config to hide the overwhelming amount of controls. The code is again part of the children array:", "In contrast to the R-Shiny software stack, Python-Dash has no simple solution to make expressions (=data!) reactive. The next function returns all the data for a specified country and state. The function will be used twice in our code (one per plot) so it would have been an advantage if the calculations would not happen twice:", "Besides filtering the overall dataframe for country and state, the function also aggregates the data (using groupby and sum) if the user chooses <all> for a country having states (e.g. US). Further differences are calculated from cumulated statistics and saved into new columns, prefixed with \u201cNew\u201d instead of \u201cCum\u201d.", "The next block defines a function to create the barchart, which will be used for both the plots.", "The top part of the function loops through the metrics to add the bars. The bottom part sets the barchart mode (\u201cgroup\u201d) and does some tweaking and styling on legend, axes, and labels. Most importantly, we wanna show the date on every single tick of the x-axis.", "While reactive expressions are not supported in Dash so far, reactive UI elements are. The following callbacks are fired if one of the Input values changes (country, state, or metrics). In this case, the subsequent function is called and updates the variables defined in Output (figure).", "To accomplish the task, the function loads the cleaned data and renders the chart by calling the appropriate function \u201cbarchart\u201d.", "Last but not least, the States/Provinces shown in the Dropdown menu have to adapt when the user changes the country of choice. update_states extracts the list of unique states, adds <all>, and returns the whole list and updates the selected value.", "Now you can run the app by simply pushing the green \u201cRun\u201d button on the top-right of VS Code. Have fun :)", "All the code above can be found on GitHub: https://github.com/ploner/coronavirus-py", "Publishing the app on a web server is quite easy, especially with free services like Heroku.", "This is my second post on Medium, and it is highly related to my first one:", "Visualize COVID-19 case data in a blink of an eye \u2014 using R, Shiny & Plotly", "If you are leading a Data Science team and your members are skilled in R and Python as well, comparing Shiny with Dash might be on your To-Do list. Let me know how you make your decision.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Manager Digital & AI @ GKN Hydrogen. Strong statistics and Machine Learning background. Loves excellent UI & UX. Creative and always open to new ideas."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe58feb34f70f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e58feb34f70f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e58feb34f70f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://meinhard-ploner.medium.com/?source=post_page-----e58feb34f70f--------------------------------", "anchor_text": ""}, {"url": "https://meinhard-ploner.medium.com/?source=post_page-----e58feb34f70f--------------------------------", "anchor_text": "Meinhard Ploner"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fae87c0a3a798&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&user=Meinhard+Ploner&userId=ae87c0a3a798&source=post_page-ae87c0a3a798----e58feb34f70f---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe58feb34f70f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe58feb34f70f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/create-a-coronavirus-app-using-r-shiny-and-plotly-6a6abf66091d", "anchor_text": "same article about how to perform this task using R & Shiny"}, {"url": "https://go.aws/2xsdb7q", "anchor_text": "https://go.aws/2xsdb7q"}, {"url": "https://www.python.org/downloads/", "anchor_text": "https://www.python.org/downloads/"}, {"url": "https://code.visualstudio.com/download", "anchor_text": "https://code.visualstudio.com/download"}, {"url": "https://towardsdatascience.com/guide-of-choosing-package-management-tool-for-data-science-project-809a093efd46", "anchor_text": "Medium post"}, {"url": "https://docs.python.org/3/tutorial/venv.html", "anchor_text": "virtual environments"}, {"url": "https://code.visualstudio.com/docs/python/python-tutorial", "anchor_text": "tutorial"}, {"url": "https://pandas.pydata.org/", "anchor_text": "Pandas"}, {"url": "https://towardsdatascience.com/create-a-coronavirus-app-using-r-shiny-and-plotly-6a6abf66091d", "anchor_text": "R-Shiny version of this app"}, {"url": "https://plot.ly/python/", "anchor_text": "documentation"}, {"url": "https://medium.com/@meinhard.ploner/create-a-coronavirus-app-using-r-shiny-and-plotly-6a6abf66091d", "anchor_text": "R-Shiny software stack"}, {"url": "http://twitter.com/app", "anchor_text": "@app"}, {"url": "http://twitter.com/app", "anchor_text": "@app"}, {"url": "http://twitter.com/app", "anchor_text": "@app"}, {"url": "https://github.com/ploner/coronavirus-py", "anchor_text": "https://github.com/ploner/coronavirus-py"}, {"url": "https://www.heroku.com/", "anchor_text": "Heroku"}, {"url": "https://dash.plot.ly/deployment", "anchor_text": "https://dash.plot.ly/deployment"}, {"url": "https://towardsdatascience.com/create-a-coronavirus-app-using-r-shiny-and-plotly-6a6abf66091d", "anchor_text": "Visualize COVID-19 case data in a blink of an eye \u2014 using R, Shiny & Plotly"}, {"url": "https://towardsdatascience.com/forget-daily-statistics-of-the-coronavirus-7e9bbb7349bd", "anchor_text": "Tired of being told about COVID-19 Direction Changes Every 2nd Day?Forget Daily Statistics and follow the Right KPI!towardsdatascience.com"}, {"url": "https://towardsdatascience.com/which-countries-react-similar-to-covid-19-machine-learning-provides-the-answer-5971ec2f6f31", "anchor_text": "Which Countries React Similar to COVID-19? Machine Learning provides the AnswerCheck how your country [or US state] performs compared to its peers. And see Cluster Analysis in action \u2014 using UMAP\u2026towardsdatascience.com"}, {"url": "https://medium.com/tag/python?source=post_page-----e58feb34f70f---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/dash?source=post_page-----e58feb34f70f---------------dash-----------------", "anchor_text": "Dash"}, {"url": "https://medium.com/tag/coronavirus?source=post_page-----e58feb34f70f---------------coronavirus-----------------", "anchor_text": "Coronavirus"}, {"url": "https://medium.com/tag/covit-19?source=post_page-----e58feb34f70f---------------covit_19-----------------", "anchor_text": "Covit 19"}, {"url": "https://medium.com/tag/plotly?source=post_page-----e58feb34f70f---------------plotly-----------------", "anchor_text": "Plotly"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe58feb34f70f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&user=Meinhard+Ploner&userId=ae87c0a3a798&source=-----e58feb34f70f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe58feb34f70f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&user=Meinhard+Ploner&userId=ae87c0a3a798&source=-----e58feb34f70f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe58feb34f70f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e58feb34f70f--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe58feb34f70f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e58feb34f70f---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e58feb34f70f--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e58feb34f70f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e58feb34f70f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e58feb34f70f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e58feb34f70f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e58feb34f70f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e58feb34f70f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e58feb34f70f--------------------------------", "anchor_text": ""}, {"url": "https://meinhard-ploner.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://meinhard-ploner.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Meinhard Ploner"}, {"url": "https://meinhard-ploner.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "167 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fae87c0a3a798&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&user=Meinhard+Ploner&userId=ae87c0a3a798&source=post_page-ae87c0a3a798--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F9c47c0da75ae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fvisualise-covid-19-case-data-using-python-dash-and-plotly-e58feb34f70f&newsletterV3=ae87c0a3a798&newsletterV3Id=9c47c0da75ae&user=Meinhard+Ploner&userId=ae87c0a3a798&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}