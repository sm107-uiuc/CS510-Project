{"url": "https://towardsdatascience.com/deploy-mlflow-with-docker-compose-8059f16b6039", "time": 1683002757.445468, "path": "towardsdatascience.com/deploy-mlflow-with-docker-compose-8059f16b6039/", "webpage": {"metadata": {"title": "Deploy MLflow with docker compose | by Guillaume Androz | Towards Data Science", "h1": "Deploy MLflow with docker compose", "description": "When in the process of building and training machine learning models, its very important to keep track of the results of each experiment. For deep learning models, TensorBoard is a very power tool to\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.mlflow.org/docs/latest/tracking.html#artifact-stores", "anchor_text": "documention", "paragraph_index": 10}, {"url": "http://web:5000.", "anchor_text": "http://web:5000", "paragraph_index": 20}, {"url": "http://web:5000.", "anchor_text": ".", "paragraph_index": 20}], "all_paragraphs": ["When in the process of building and training machine learning models, its very important to keep track of the results of each experiment. For deep learning models, TensorBoard is a very power tool to log training performances, track gradient, debug a model and so on. We also need to track the associated source code, and whereas Jupyter Notebooks are hard to version, we can definitely use a VCS such as git to help us. However, we also need a tool to help us keep track of the experiment context, the choice of hyperparameters, the dataset used for an experiment, the resulting model etc. MLflow has been explicitly developped for that purpose as stated on their website", "MLflow is an open source platform to manage the ML lifecycle, including experimentation, reproducibility and deployment.", "For that purpose, MLflow offers the component MLflow Tracking which is a web server that allows the tracking of our experiments/runs.", "In this post, I will show the steps to setup such a tracking server and I will progressively add components that could eventually be gathered into a docker-compose file. The docker approach is particularly convenient if MLflow has to be deployed on a remote server, for example on EC2, without having to configure the server by hand every time we need a new one.", "The first step to install a MLflow server is straightforward, we only need to install the python package. I will assume that python is installed on your machine and your are confortable with creating a virtual environment. For that purpose, I find conda more convenient than pipenv", "From this very basic first step, our MLflow tracking server is ready to use, all that remains is launching it with the command:", "We can also specify the host address that tells the server to listen on all public IPs. Although it is a very unsecure approach (the server is unauthenticated and unencrypted), we will further need to run the server behing a reverse proxy such as NGINX or in a virtual private network to control the accesses.", "Here the 0.0.0.0 IP tells the server to listen to all incoming IPs.", "We now have a running server to track our experiments and runs, but to go further we need to specify the server where to store the artifacts. For that, MLflow offers several possibilities:", "As my goal is to host a MLflow server on a cloud instance, I\u2019ve chosen to use Amazon S3 as an artifacts store. All we need is to slightly modify the command to run the server as", "where mlflow_bucket is a S3 bucket that have been priorly created. Here you would ask \u201chow the hell does MLflow access to my S3 bucket ?\u201d. Well, simply read the documention hehe", "MLflow obtains credentials to access S3 from your machine\u2019s IAM role, a profile in ~/.aws/credentials, or the environment variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY depending on which of these are available.", "So the more pratical is to use an IAM role, especially if we want to run the server on an AWS EC2 instance. The use of a profile is quite the same as the use of environment variables but for the illustration, I\u2019ll use environment variables as further explained with the use of docker-compose.", "So our tracking server stores artifacts on S3, fine. However, the hyperparameters, comments and so on are still stores in files on the hosting machine. Files are arguably not a good backend store, and we prefer a database backend. MLflow supports various database dialects (essentially the same as SQLAlchemy): mysql, mssql, sqlite, and postgresql.", "First I like to use SQLite as it is a compromise between files and databases as the whole database is stored in one file that can easily be moved. The syntax is the same of SQLAlchemy:", "Keeping in mind that we want to use docker containers, it is not a good idea to store those files locally because we\u2019ll loose the database after each restart of the containers. Of course, we can still mount a volume and an EBS volume on our EC2 instance, but it is cleaner to use a dedicated database server. For that purpose, I like to use MySQL. As we\u2019ll use docker for deployment, let\u2019s postpone the MySQL server installation (as it will be a simple docker container from an official docker image) and focus on MLflow usage. First, we need to install the python driver we want to use to interact with the MySQL. I like pymysql because it is very simple to install, very stable and well documented. So on the MLflow server host, run the command", "and now we can update the command to run the server according to the syntax of SQLAlchemy", "where we assume that our server name is db and it listens on port 3306. We also use the user mlflow with the very strong password strongpassword. Here again, it is not very secure in a production context, but when deploying with docker-compose, we can use environment variables.", "As mentionned earlier, we\u2019ll use the MLflow tracking server behind a reverse proxy, NGINX. For that, here again we\u2019ll use an official docker image and simply replace the default configuration /etc/nginx/nginx.conf by the following", "You can play with this basic configuration file if you need further customization. And finally, we\u2019ll make a configuration for the MLflow server we\u2019ll store in /etc/nginx/sites-enabled/mlflow.conf", "Notice the URL used to refer to the MLflow application http://web:5000. The MLflow server uses the port 5000, and the app will run in a docker-compose service which name will be web.", "As stated before, we want to run all of these in docker containers. The architecture is simple and is composed of three containers:", "For the database server, we\u2019ll use the official MySQL image without any modification.", "For the MLflow server, we can build a container on a debian slim image. The Dockerfile is very simple:", "And finally the NGINX reverse proxy is also based on the official image plus the configuration presented before", "Now we have all set, it\u2019s time to gather it all in a docker-compose file. It will then be possible to launch our MLflow tracking server with only command, which is very convenient. Our docker-compose file is composed of three services, one for the backend i.e. a MySQL database, one for the reverse proxy and one for the MLflow server itself. It looks like:", "First thing to notice, we have built two custom networks to isolate frontend (MLflow UI) with backend (MySQL database). Only the web service i.e. the MLflow server can talk to both. Secondly, as we don\u2019t want to loose all the data as the containers go down, the content of the MySQL database is a mounted volume named dbdata. Lastly, this docker-compose file will be launched on an EC2 instance, but as we do not want to hard-code AWS keys or database connection string, we use environment variables. Those environment variables can be located directly on the host machine or inside an .env file in the same directory as the docker-compose file. All that remains is building and running the containers", "The -d option tells that we want to execute the containers in daemon mode, and the --build option indicates that we want to build the docker images if needed before running them.", "And that\u2019s all ! We now have a perfectly running remote MLflow tracking server we can share between our team. This server can easily be deployed anywhere with only one command thanks to docker-compose.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F8059f16b6039&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----8059f16b6039--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8059f16b6039--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://guandroz.medium.com/?source=post_page-----8059f16b6039--------------------------------", "anchor_text": ""}, {"url": "https://guandroz.medium.com/?source=post_page-----8059f16b6039--------------------------------", "anchor_text": "Guillaume Androz"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe9c80b7a94f6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&user=Guillaume+Androz&userId=e9c80b7a94f6&source=post_page-e9c80b7a94f6----8059f16b6039---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8059f16b6039&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8059f16b6039&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/", "anchor_text": "https://unsplash.com/"}, {"url": "https://mlflow.org/", "anchor_text": "\u2014 https://mlflow.org/"}, {"url": "http://localhost:5000*", "anchor_text": "http://localhost:5000"}, {"url": "https://www.mlflow.org/docs/latest/tracking.html#artifact-stores", "anchor_text": "documention"}, {"url": "https://www.mlflow.org/docs/latest/tracking.html#artifact-stores", "anchor_text": "ttps://www.mlflow.org/docs/latest/tracking.html"}, {"url": "http://web:5000.", "anchor_text": "http://web:5000"}, {"url": "http://web:5000.", "anchor_text": "."}, {"url": "https://medium.com/tag/docker?source=post_page-----8059f16b6039---------------docker-----------------", "anchor_text": "Docker"}, {"url": "https://medium.com/tag/mlflow?source=post_page-----8059f16b6039---------------mlflow-----------------", "anchor_text": "Mlflow"}, {"url": "https://medium.com/tag/python?source=post_page-----8059f16b6039---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8059f16b6039&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&user=Guillaume+Androz&userId=e9c80b7a94f6&source=-----8059f16b6039---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8059f16b6039&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&user=Guillaume+Androz&userId=e9c80b7a94f6&source=-----8059f16b6039---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8059f16b6039&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8059f16b6039--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F8059f16b6039&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----8059f16b6039---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----8059f16b6039--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----8059f16b6039--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----8059f16b6039--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----8059f16b6039--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----8059f16b6039--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----8059f16b6039--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----8059f16b6039--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----8059f16b6039--------------------------------", "anchor_text": ""}, {"url": "https://guandroz.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://guandroz.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Guillaume Androz"}, {"url": "https://guandroz.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "80 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe9c80b7a94f6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&user=Guillaume+Androz&userId=e9c80b7a94f6&source=post_page-e9c80b7a94f6--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe5973915e993&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdeploy-mlflow-with-docker-compose-8059f16b6039&newsletterV3=e9c80b7a94f6&newsletterV3Id=e5973915e993&user=Guillaume+Androz&userId=e9c80b7a94f6&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}