{"url": "https://towardsdatascience.com/how-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14", "time": 1683006857.180272, "path": "towardsdatascience.com/how-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14/", "webpage": {"metadata": {"title": "How to efficiently implement Area Under Precision-Recall Curve (PR-AUC) | by Thomas Kurbiel | Towards Data Science", "h1": "How to efficiently implement Area Under Precision-Recall Curve (PR-AUC)", "description": "This post is based on the implementation of PR-AUC published by Facebook AI Research in the scope of the Detectron project. It took me a while to understand how only a few lines of code are able to\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/gaining-an-intuitive-understanding-of-precision-and-recall-3b9df37804a7", "anchor_text": "post", "paragraph_index": 1}, {"url": "https://github.com/facebookresearch/Detectron/blob/master/detectron/datasets/voc_eval.py", "anchor_text": "Facebook Research Detectron", "paragraph_index": 34}, {"url": "https://medium.com/@jonathan_hui/map-mean-average-precision-for-object-detection-45c121a31173", "anchor_text": "mAP (mean Average Precision) for Object Detection", "paragraph_index": 34}], "all_paragraphs": ["This post is based on the implementation of PR-AUC published by Facebook AI Research in the scope of the Detectron project. It took me a while to understand how only a few lines of code are able to perform such a complicated task. Let me share my insights.", "In the last post, we covered the theoretical background of PR-AUC. In this post, we will deepen our understanding by dissecting an efficient PR-AUC implementation. If you are not yet fully familiar with the notions of precision, recall, TP, FP etc. please revisit the last post.", "We will again use an over-simplified example containing only 10 samples. For each sample, we calculate the output (predicted confidence) of the neural network and put it together with the corresponding ground truth label in a table, see Tab. 1. Then we sort the entries according to the predicted confidences as in Tab. 2.", "If we choose our threshold to lie between the 1st and 2nd entry (0.84 < threshold < 0.97) all predictions above the threshold are considered positive (green) and all below the threshold are considered negative (red):", "Using the ground truth labels we can easily deduce TP, FP, TN and FN for the chosen threshold. To get TP just count how many 1s appear in the green rows of the \u201cLabel\u201d column (left table). To get TN to count the 0s in the red rows of the \u201cLabel\u201d column etc.", "Next, we choose our threshold to lie between the 2nd and 3rd entry (0.84 < threshold < 0.97) and repeat the procedure.", "We can perform this simple procedure for all rows in the table. In case it is not fully clear by now, how the procedure works, let us perform yet another example. We choose the threshold to lie between the 8th and 9th entry (0.15 < threshold < 0.24).", "Please first note that the value of TP in each row of the above table corresponds to the sum of all 1s above the row (including the row). In Python, this can easily be realized with a cumulative sum.", "Furthermore please note that the sum of TP and FP in the right table above is identical to the Rank entry of the left table. This is not surprising as in the last post we showed that TP+FP is the total number of positive predictions for a given threshold. This is great news since it means that for the calculation of precision we actually don\u2019t need to calculate FP (!). Precision can hence be obtained from the above tables by dividing the cumulative sum of column \u201cLabel\u201d by the entries of the column \u201cRank\u201d.", "Similarly please note that the sum of TP and FN in the right table above always amounts to 6. Again this should not be surprising since TP+FN is the total number of the actual positive samples in the data set. This number is equal to the sum over all entries in the Label column. For the calculation of recall, we hence do not need to calculate either the TN nor the FN (!).", "Let us next apply the obtained recipe for all entries of the above table:", "When we plot precision vs. recall we observe a zig-zag pattern:", "Now follows a little more advanced section in which I explain where the zig-zag pattern is coming from. At the end of this section, you should be able to qualitatively draw the precision-recall curve just by looking at the (sorted) \u201cLabel\u201d column. This is a nice skill, which allows you to get an even more intuitive understanding of the precision-recall curve. Just try some examples for yourself. If you are however only interested in the efficient implementation of PR-AUC, you can safely skip this section.", "The zig-zag pattern has the following root cause: each time we encounter one or more zeros in the column \u201cLabel\u201d, the cumulative sum in column \u201cTP\u201d has the same value as in the previous row.", "Since recall is TP divided by a constant, the value of recall also remains unchanged. The values in the \u201cRank\u201d column, however, are always increased by one, when going one row down. Since precision is TP divided by Rank, precision must get smaller. This explains the plunges in the precision-recall-curve.", "In contrast, each time we encounter one or more ones in the column \u201cLabels\u201d, the cumulative sum in column \u201cTP\u201d is increased by one, when proceeding to the next row. Since recall is TP divided by a constant, the value of recall must also increase.", "We can easily prove that under these circumstances the value of precision must either increase or remain the same. We hence want to proof the following expression:", "where i =Rank is just the index of the row. The above expression is equivalent to:", "Please note that we are considering only the case where the current entry (row i) in the \u201cLabel\u201d column has the value one:", "Plugging this expression into the upper formula we get:", "This statement is always fulfilled, which can trivially be seen in the table below:", "Please note that the equality in the above formula only holds as long as no zero is encountered in the column \u201cLabel\u201d. Hence the precision also remains constant (at a value of 1.0), as long as no zeros are encountered.", "Sentinel value makes the implementation of PR-AUC very efficient, as we will shortly see.", "Let us first examine a peculiarity visible in the example above. When the first entry in the column \u201cLabel\u201d is one, the first recall value is larger than zero.", "Please have again a look in the graph above to verify this statement. This is bad because when we perform the integration over the precision-recall curve to obtain the PR-AUC, we must start at the recall value of zero.", "Please note that if the first label in our example above was a zero, we would have obtained the following graph:", "This time we start at the recall value of zero, however, the corresponding value of precision is also zero. We hence get a point in the origin of the precision-recall curve. Please further note that if the first 2 entries of column \u201cLabels\u201d have been zero, we would have gotten two overlapping points in the origin of the precision-recall-curve and so on.", "For this reason, it does not do any harm if we add a sentinel value (precision=0.0 and recall=0.0) as an additional zeroth row in our tables.", "For completeness, we will also add a sentinel value (precision=0.0 and recall=1.0) at the end of the table. Please note that the value of recall in the last row must per definition always be 1.0.", "To smooth out the zigzag pattern and to correct the first sentinel value, we will calculate the envelope of the precision. The envelope is easily obtained by using our tables. For each row, we calculate the maximum of all the precision values below that row, including the value of the row itself.", "In order to calculate the area and the precision-recall-curve, we will partition the graph using rectangles (please note that the widths of the rectangles are not necessarily identical).", "In our example only 6 rectangles are needed to describe the area, however, we have 12 points defining the precision-recall curve. How do we find useful points? Notice that we need only those points who lie in the upper left corners of each rectangle. All other remaining points luckily have the property that they are followed (next row in the table) by a point with the same value of recall, look at the red points without little arrows in the figure above to get the point. In our tables, we must hence look for rows with different recall values than in the rows underneath.", "Please note that duplicate points in the origin (mentioned before) are also filtered by this method. Only the last point in the origin will be retained.", "Concluding we must calculate the areas of all the rectangles and add them up. The width of the rectangle is defined by two adjacent recall values.", "Facebook Research DetectronmAP (mean Average Precision) for Object Detection", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Advanced Computer Vision & AI Research Engineer at APTIV Germany"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fa85872fd7f14&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----a85872fd7f14--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a85872fd7f14--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://tkurbiel.medium.com/?source=post_page-----a85872fd7f14--------------------------------", "anchor_text": ""}, {"url": "https://tkurbiel.medium.com/?source=post_page-----a85872fd7f14--------------------------------", "anchor_text": "Thomas Kurbiel"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa86bca18debd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&user=Thomas+Kurbiel&userId=a86bca18debd&source=post_page-a86bca18debd----a85872fd7f14---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa85872fd7f14&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa85872fd7f14&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/gaining-an-intuitive-understanding-of-precision-and-recall-3b9df37804a7", "anchor_text": "post"}, {"url": "https://neptune.ai/blog/f1-score-accuracy-roc-auc-pr-auc", "anchor_text": "https://neptune.ai/blog/f1-score-accuracy-roc-auc-pr-auc"}, {"url": "https://github.com/facebookresearch/Detectron/blob/master/detectron/datasets/voc_eval.py", "anchor_text": "Facebook Research Detectron"}, {"url": "https://medium.com/@jonathan_hui/map-mean-average-precision-for-object-detection-45c121a31173", "anchor_text": "mAP (mean Average Precision) for Object Detection"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----a85872fd7f14---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----a85872fd7f14---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/metrics?source=post_page-----a85872fd7f14---------------metrics-----------------", "anchor_text": "Metrics"}, {"url": "https://medium.com/tag/data-science?source=post_page-----a85872fd7f14---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python-programming?source=post_page-----a85872fd7f14---------------python_programming-----------------", "anchor_text": "Python Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa85872fd7f14&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&user=Thomas+Kurbiel&userId=a86bca18debd&source=-----a85872fd7f14---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa85872fd7f14&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&user=Thomas+Kurbiel&userId=a86bca18debd&source=-----a85872fd7f14---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa85872fd7f14&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a85872fd7f14--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fa85872fd7f14&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----a85872fd7f14---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----a85872fd7f14--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----a85872fd7f14--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----a85872fd7f14--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----a85872fd7f14--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----a85872fd7f14--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----a85872fd7f14--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----a85872fd7f14--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----a85872fd7f14--------------------------------", "anchor_text": ""}, {"url": "https://tkurbiel.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://tkurbiel.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Thomas Kurbiel"}, {"url": "https://tkurbiel.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "287 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa86bca18debd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&user=Thomas+Kurbiel&userId=a86bca18debd&source=post_page-a86bca18debd--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fadf7de277c18&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-efficiently-implement-area-under-precision-recall-curve-pr-auc-a85872fd7f14&newsletterV3=a86bca18debd&newsletterV3Id=adf7de277c18&user=Thomas+Kurbiel&userId=a86bca18debd&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}