{"url": "https://towardsdatascience.com/building-a-dynamic-weather-download-app-1ce64a6c3e61", "time": 1683008421.523487, "path": "towardsdatascience.com/building-a-dynamic-weather-download-app-1ce64a6c3e61/", "webpage": {"metadata": {"title": "Building a Dynamic Weather Download App | by David Hurley | Towards Data Science", "h1": "Building a Dynamic Weather Download App", "description": "Building a web app to download historical weather data from Canadian weather stations using Python, Plotly Dash, AWS, and Heroku."}, "outgoing_paragraph_urls": [{"url": "https://climate.weather.gc.ca/historical_data/search_historic_data_e.html", "anchor_text": "web portal", "paragraph_index": 2}, {"url": "https://dash.plotly.com/introduction", "anchor_text": "Plotly Dash", "paragraph_index": 5}, {"url": "https://blog.miguelgrinberg.com/post/using-celery-with-flask", "anchor_text": "i.e. Miguel Grinberg\u2019s blog", "paragraph_index": 7}, {"url": "https://devcenter.heroku.com/articles/python-gunicorn", "anchor_text": "several recommendations", "paragraph_index": 24}, {"url": "https://www.cloudamqp.com/docs/celery.html", "anchor_text": "recommends configurations", "paragraph_index": 25}, {"url": "https://www.linkedin.com/in/hurleydavid/", "anchor_text": "https://www.linkedin.com/in/hurleydavid/", "paragraph_index": 30}], "all_paragraphs": ["This article describes the framework I used to build a dynamic dashboard web app for downloading and visualizing historical Canadian weather data\u2026FAST!!!", "There are more than 8000 active and inactive government weather stations in Canada all with open-source data. Yet, downloading the data is not easy.", "Presently, historical Canadian weather data is accessed and downloaded through a government-run web portal maintained by Environment and Climate Change Canada (ECCC). While ECCC provides excellent open-source data services the download portal leaves something to be desired. The portal has no map to visually search and display weather station locations, downloads are limited to small subsets of data, and there is no way to graph data once downloaded.", "Build a dashboard web app to dynamically search, filter, and download historical Canadian weather data.", "Initially, I developed a loose concept of how I wanted the app to be structured, such as which microservice framework to use, and after some trial and error, I settled on the architecture shown below. It\u2019s a standard structure consisting of front-end processes, background processes, and database storage.", "For small dashboard applications, microservice is the way to go. It accelerates development and is easy to deploy. I chose to use the Python microservice framework Plotly Dash to build my application. Dash is an AWESOME tool, especially for anyone not fluent in JavaScript, because it allows you to build complex interactive dashboards in pure Python!", "The main point of my app is to allow users to download historical weather data. Since the download task takes seconds to minutes to execute it can\u2019t be run on the front-end efficiently (i.e. it would introduce latency and prevent the app from responding quickly to incoming requests). A better solution is to execute long-running tasks as background jobs and feed the results to the front-end.", "To do this I used Celery, an asynchronous task queue, with CloudAMQPs RabbitMQ message broker and Heroku Redis result store. There are many great and detailed tutorials on how to set up an asynchronous task queue (i.e. Miguel Grinberg\u2019s blog) so I won\u2019t go into that here. Instead, I provide a summary of the Celery background job architecture.", "I HIGHLY recommend not using Heroku Redis as both the result store and message queue. I tried this at first and constantly reached the maximum number of concurrent connections allowed. By allocating the message queue to RabbitMQ and result store to Heroku Redis there are more concurrent connections available.", "Originally, my app was structured to download data directly from the ECCC server (3rd party). This turned out to be slow and not very robust. Instead, I downloaded all the ECCC data (~37 Gb) to an AWS S3 bucket. I did this by running multiple batch download jobs using AWS Lambda and SQS message queue. Once I had the data in an S3 bucket I used AWS Lambda and CloudWatch Events to update active weather station data every day at midnight. The result was a flexible database with no dependency on the ECCC server.", "The best part of hosting the data in an S3 bucket is that data can be queried in the app directly from CSV files in S3 using S3 SELECT (i.e. simple SQL expressions). I had considered using traditional SQL databases such as MySQL but S3 was cheaper in my use case and great for persistent storage. \ud83d\udcaa", "I chose to use Heroku cloud services to deploy my app. I don\u2019t have a great reason for using a cloud service such as Heroku over DigitalOcean, Linode, or EC2 other than it\u2019s extremely easy to deploy on. Heroku apps run on dynos (virtual Linux containers) and come in two types, a web dyno that handles web processes (i.e. HTTP traffic) and a worker dyno that handles background jobs (i.e. Celery tasks). I ended up deploying the app on Heroku free tier with one free web and worker dyno.", "There are a few downsides of Heroku for my use case:", "In the end, it was pretty easy to get around both of these problems by using AWS S3 for database storage.", "I wanted a simple interface that displayed weather stations on an interactive map so a user could visually filter weather stations based on things like station location and data availability. The Dash library includes easy to implement high-level components such as graphs, dropdowns, and input boxes. The structure of a Dash app is the app layout, consisting of HTML and Dash core components, followed by app callbacks which create chained interactivity.", "The background map is from the Mapbox API and weather station metadata, such as station location, is loaded on app startup from AWS S3. Callbacks in Dash are easy to implement and include input components (i.e. province or station name) and output components (i.e. map graph).", "After clicking a weather station on the map a user can view station metadata in the table and select the desired station to download data from. Then a user can set the download interval (i.e. how often data was recorded at the station) and download dates. Once this has been completed a message is displayed to let the user know what they will be downloading. This message also makes the \u201cGenerate Data\u201d button active.", "When the \u201cGenerate Data\u201d button is clicked a task is sent to the RabbitMQ message queue where a Celery worker receives it. The Celery task uses the selected table data (i.e. station name, province, etc.), download dates, and data interval to query a subset of the associated CSV in S3. While Celery is executing the task, the front-end uses the task.id to query task.state (i.e. pending, progress, success, or failed). This happens every 250ms and updates the visibility of the progress spinner.", "If I wasn\u2019t using Heroku I could save the queried data to disk, or if my data was smaller I could cache in browser. Instead, I push the queried S3 data back up to S3 to a temporary folder in the same bucket. On the front-end, an S3 pre-signed URL pointing to the temporary data is created and linked to the \u201cDownload Data\u201d button using Flask routing. When a user clicks the \u201cDownload Data\u201d button it redirects to the temporary data and downloads the file in browser.", "The awesome thing about pre-signed URLs, even if my download structure is a bit slower and less efficient (i.e. multiple S3 GET and PUSH commands), is the client downloads directly from S3 which avoids having data saved to the server or cached in browser.", "In my opinion, being able to visualize downloaded data in near real-time is the most important feature for a user as it allows them to do exploratory data analysis on the spot.", "I chose to present three basic graphs to convey different data statistics (i.e. box plots for seasonal trends and histograms for data distribution) using Dash graph components to render figures. The line and histogram graphs render relatively quickly with even large datasets (>500000 data points) but the box plot can be slow. To keep rendering to a few seconds I use a subsample of the data for the boxplot graph. This is done with the Pandas DataFrame.sample function and keeps the distribution the same as the original.", "As mentioned, because I am using Heroku, saving to disk was not an option, and since the datasets can be >50mb, using Heroku Redis to store Celery task results was impractical (i.e. only 25mb of memory on the free tier). Additionally, sharing data between Dash callbacks and Dash pages can be tricky. The standard solution is to use the dcc.Store component (i.e. in browser storage) but this only works for data less than a few megabytes.", "After some testing, the solution that I found best maximized cost and speed was using S3 SELECT to query data in S3 and graph. The biggest downside to this is longer load time in the graphs (i.e. querying data from a cloud database instead of retrieving locally) and the need to query S3 on each figure render.", "Dash (i.e. Flask) apps natively only process a single HTTP request at a time, so to handle multiple requests Dash should be deployed to Heroku using the Gunicorn WSGI web server. The Gunicorn web server allows you to run the app concurrently. Heroku has several recommendations for Gunicorn worker configuration, such as limiting the number of Gunicorn worker processes to 2\u20133 on a free tier.", "Getting the Procfile, RabbitMQ, Heroku Redis, and Celery configurations set correctly was pretty challenging. CloudAMQP recommends configurations for the RabbitMQ message queue when using Celery. The most important aspect when using the CloudAMQP free tier is to reduce the \u201cbackground\u201d message rate (i.e. configuring the Celery worker to run without gossip, mingle, and heartbeat).", "If your hobby app costs you an arm and a leg you won\u2019t be able to host it very long! My app currently costs me ~$1\u20132 a month but this will change with scaling.", "There are a few things I want to add and change in future versions of the app.", "Overall, this was a really fun project and I learned a lot about full stack development!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist in the energy industry | https://www.linkedin.com/in/hurleydavid/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1ce64a6c3e61&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@davidhurley_48402?source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@davidhurley_48402?source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": "David Hurley"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F995c0a4ee38f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&user=David+Hurley&userId=995c0a4ee38f&source=post_page-995c0a4ee38f----1ce64a6c3e61---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1ce64a6c3e61&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1ce64a6c3e61&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@vidarnm?utm_source=medium&utm_medium=referral", "anchor_text": "Vidar Nordli-Mathisen"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "http://www.weatherhistorycanada.com", "anchor_text": "WeatherHistoryCanda.com"}, {"url": "https://github.com/david-hurley/env-can-wx-app", "anchor_text": "GitHub Repo"}, {"url": "https://climate.weather.gc.ca/historical_data/search_historic_data_e.html", "anchor_text": "web portal"}, {"url": "https://dash.plotly.com/introduction", "anchor_text": "Plotly Dash"}, {"url": "https://blog.miguelgrinberg.com/post/using-celery-with-flask", "anchor_text": "i.e. Miguel Grinberg\u2019s blog"}, {"url": "https://devcenter.heroku.com/articles/python-gunicorn", "anchor_text": "several recommendations"}, {"url": "https://www.cloudamqp.com/docs/celery.html", "anchor_text": "recommends configurations"}, {"url": "https://medium.com/tag/aws?source=post_page-----1ce64a6c3e61---------------aws-----------------", "anchor_text": "AWS"}, {"url": "https://medium.com/tag/dash?source=post_page-----1ce64a6c3e61---------------dash-----------------", "anchor_text": "Dash"}, {"url": "https://medium.com/tag/python?source=post_page-----1ce64a6c3e61---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----1ce64a6c3e61---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/weather?source=post_page-----1ce64a6c3e61---------------weather-----------------", "anchor_text": "Weather"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1ce64a6c3e61&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&user=David+Hurley&userId=995c0a4ee38f&source=-----1ce64a6c3e61---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1ce64a6c3e61&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&user=David+Hurley&userId=995c0a4ee38f&source=-----1ce64a6c3e61---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1ce64a6c3e61&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F1ce64a6c3e61&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----1ce64a6c3e61---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----1ce64a6c3e61--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@davidhurley_48402?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@davidhurley_48402?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "David Hurley"}, {"url": "https://medium.com/@davidhurley_48402/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "76 Followers"}, {"url": "https://www.linkedin.com/in/hurleydavid/", "anchor_text": "https://www.linkedin.com/in/hurleydavid/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F995c0a4ee38f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&user=David+Hurley&userId=995c0a4ee38f&source=post_page-995c0a4ee38f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F995c0a4ee38f%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-a-dynamic-weather-download-app-1ce64a6c3e61&user=David+Hurley&userId=995c0a4ee38f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}