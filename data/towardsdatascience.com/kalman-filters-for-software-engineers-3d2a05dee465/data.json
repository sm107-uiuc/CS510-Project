{"url": "https://towardsdatascience.com/kalman-filters-for-software-engineers-3d2a05dee465", "time": 1683003305.930741, "path": "towardsdatascience.com/kalman-filters-for-software-engineers-3d2a05dee465/", "webpage": {"metadata": {"title": "Kalman Filters for Software Engineers | by Lorenzo Peppoloni | Towards Data Science", "h1": "Kalman Filters for Software Engineers", "description": "Speaking with friends of mine I often hear: \u201cOh Kalman Filters\u2026 I usually study them, understand them and then I forget everything\u201d. Well, considering that Kalman Filters (KF) are one of the most\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.xarg.org/2018/04/how-to-plot-a-covariance-error-ellipse/", "anchor_text": "here", "paragraph_index": 20}, {"url": "https://github.com/LorePep/blogposts_code/blob/master/KF_mobile_robot_example.ipynb", "anchor_text": "here", "paragraph_index": 24}, {"url": "http://faculty.salina.k-state.edu/tim/robotics_sg/Control/kinematics/unicycle.html", "anchor_text": "unicycle model", "paragraph_index": 24}, {"url": "http://ais.informatik.uni-freiburg.de/teaching/ws09/robotics2/pdfs/rob2-12-tracking.pdf", "anchor_text": "constant velocity model", "paragraph_index": 24}, {"url": "https://pykalman.github.io/", "anchor_text": "https://pykalman.github.io/", "paragraph_index": 35}], "all_paragraphs": ["Speaking with friends of mine I often hear: \u201cOh Kalman Filters\u2026 I usually study them, understand them and then I forget everything\u201d. Well, considering that Kalman Filters (KF) are one of the most widespread algorithms in the world (if you look around your house, 80% of the tech you have probably has some sort of KF running inside), let\u2019s try and make them clear once and for all.", "By the end of this post you will have an intuitive and detailed understanding of how a KF works, what\u2019s the idea behind it, why you need multiple variants and what are its most common ones.", "KFs are part of what is called State Estimation algorithms. What\u2019s state estimation? Imagine you have a system (let\u2019s treat it as a black box). This black box can be anything: your fan, a chemical system, a mobile robot. For each of these systems we can define a state. A state is a vector of variables that we care to know and that can describe the \u201cstate\u201d (here\u2019s why it\u2019s called state) in which the system is at a specific point in time. What does \u201ccan describe\u201d means? It means that if you know the state vector at time k and the input given to the system, you can know (using some sort knowledge of the system workings as well) the state of the system at time k+1.", "For example, let\u2019s say we have a moving robot and we care about knowing its position (and we don\u2019t care about its orientation) in space. If we define the state to be the robot position (x, y) and its velocities (v_x, v_y) and we have a model of how the robot moves, that would be enough to pinpoint where the robot is and where it will be at the next time instant.", "So a state estimation algorithm estimates the state of a system. Why do you want to estimate it? Because in real-life scenarios the real state of the system is never accessible by an external observer. Usually, there are two cases: you can measure the state but measurements are affected by noise (each sensor can only produce readings up to a certain precision which might not be enough for you) or you just cannot directly measure the state. An example could be computing the position of the aforementioned mobile robot using GPS (we decided position to be part of the state), that would give you probably up to 10 meters of measurement error which is probably not enough for any application you can think of.", "Usually, when you do state estimation you can safely assume that you know the input (because it\u2019s you giving it) and the output of the system. Since the output is measured, it is also affected by a certain measurement noise. From this, we define a state estimator as a system which takes in the input and the output of the system you want to estimate the state of and outputs an estimation of the system state.Traditionally, the state is indicated with x, the outputs with y or z, u is the input and tilde_x is the estimate state.", "As you may have noticed, we already discussed a bit about errors:", "In addition to that, I said that you need some sort of knowledge of the system, you need to know a model of the \u201cbehaviour\u201d of the system (more on this later), your model is of course not perfect so you will have an additional error.", "In KFs, you treat all these uncertainties using Gaussian distributions. A Gaussian distribution is a nice way of representing something you are not really sure about. Your current belief can be represented by the mean of the distribution, while the standard deviation will say how confident you are in your belief.", "Let\u2019s make some examples to understand what\u2019s the idea behind this.", "What about the estimated state uncertainty?The KF will take care of updating it according to what is happening during the estimation, the only thing you have to do is initializing it to a good-enough value. \u201cGood enough\u201d depends on your application, your sensors, your model, etc\u2026 In general, KF takes a bit to converge to the right estimation.", "As we said, for KF to work you need to have \u201csome knowledge\u201d about the system (an \u201cuncertain\u201d, aka not perfect, model). In particular with KF you need two models:", "Later, we\u2019ll see why we need these functions, let\u2019s first look at some examples to understand what they mean.", "State transition model This model tells you how your system evolves in time (if you remember, earlier we touched on how a state has to be descriptive enough to infer the system behaviour in time). This pretty much depends on the system itself and what you care about the system. If you have no idea of how to model your system, some googling can help. For moving objects (if measured at a decent sampling rate), you can use constant velocity models, which assume the object is moving with constant speed, for vehicles, you can use the unicycle model, etc\u2026 Let\u2019s assume that, one way or another, we got to a model. We are making an important assumption here, that is necessary for the KF to work: your current state only depends on the precedent. In other words, the \u201chistory\u201d of the system state is condensed in the previous state, that is to say each state is independent from the past, given the precedent state. This is also known as Markov assumption. If this doesn\u2019t hold, you cannot express the current state in terms of the precedent one alone.", "Measurement model The measurement model tells you how output (which you can measure) and state are tied together. Intuitively, you need this because you know the measured output and you want to infer the state from it during the estimation. Again, this model changes from case to case. For example, in the mobile robot example, if you care about the position and you have GPS, your model is the identity function, because you are already measuring a noisy version of the state.", "The mathematical formulation and explanation of each step follows:", "So how does the KF actually work? The algorithm works in two steps called predict and update. Let\u2019s assume we are at time k and we have our estimated state at that time. First, we use the state transition model and we make the estimated state evolve to the next time instant (1). This is equivalent to saying: given my current belief about the state, the input I have and my knowledge about the system, I expect my next state to be this. This is the predict step.", "Now, since we have also the output and the measurement model, we can actually \u201ccorrect\u201d the prediction using the real measurement. In the update step we take the expected state, we compute the output (with the measurement model) (2) and we compare it with the real measured output. We then use the difference between the two in a \u201csmart way\u201d to correct our estimation of the state (3).", "Usually, we indicate with apex -, the estimation of the state coming from the predict step, before the correction. K is called the Kalman Gain. That\u2019s where the smartness really is: the K depends on how much we trust the measurement, how much we trust our current estimation (which depends on how much we trust the model) and according to this information K \u201cdecides\u201d how much the predicted estimation is corrected with the measurement. If our measurement noise is \u201csmall\u201d compared to how much we are trusting our estimation coming from the predict step, we are going to correct the estimation a lot using the measurement, if the reverse is true, we are going to correct it minimally.", "A note: for the sake of simplicity, I wrote the equations as if we were dealing with normal variables, but you have to consider that at each step we\u2019re dealing with random Gaussian variables, thus we need to propagate through the functions also the covariances of the variables, not only the means.", "Let\u2019s exemplify. Let\u2019s imagine that we are tracking the position of a robot (again). The real position is shown in grey, at time k we believe that the robot is in the position in green, with an estimation covariance represented as an ellipse (if you are not familiar with this type of representation have a look here). Roughly speaking, you can see by the shape of the ellipse, that our filter is at this step more \u201cconfident\u201d about the lateral positioning, compared to the positioning in the direction of forward motion. After the predict step, where we let the system evolve using the state transition model, we think that the new position is the one in red. Since the ellipse grew bigger in the lateral direction, we are now less certain of the new estimated position (for example because we don\u2019t trust the model much). Then we read our GPS and we get the position in black. With the update step, the actual position estimation will be the dark green dotted one. The estimation will be closer to the red if we trust the model more (lower covariance compared to the measurement noise covariance) or closer to the measurement if we trust the measurement more (lower noise measurement covariance compared to the model uncertainty).", "KFs can be classified in two big families according to the type of models (state transition and measurement) they use: if the models are linear you have a Linear Kalman Filter, while if they are nonlinear you have Nonlinear Kalman Filters.", "Why the distinction? Well, KFs assume that your variables are Gaussian, when passed through a linear function a Gaussian variable remains a Gaussian variable, this is not true if you pass it through a nonlinear function. This breaks the Kalman assumption, thus we need to find ways to fix it.", "Historically, people have found two main approaches: cheating with the model and cheating with the data. If you cheat with the model you basically linearize the nonlinear functions around your current estimation, in that way you brought yourself back to the linear case that works. This approach is called Extended Kalman Filter (EKF). The main disadvantage of this method is that you have to be able to compute the Jacobians of f() and h(). Alternatively, if you cheat with the data, you use your nonlinear functions, but then you try and \u201cGaussianize\u201d (if that word even exists) the distributions that you made non Gaussian. This is done via a smart sampling technique, called Unscented Transform. This transformation allows you to describe (approximately) a distribution in terms of mean and covariance (only Gaussian distributions are fully described by the first two moments). This approach is called Unscented Kalman Filter (UKF). UKF is in theory superior to the EKF because the Unscented Transform gives a better approximation of the resulting distributions compared to the approximation you get linearizing the models. In practice, you have to have quite heavy nonlinearities to actually see big differences.", "Since I spoke so much about a mobile robot with GPS, I made a short demo about this case (you can find the code here if you want to play with it). The robot motion is generated using a unicycle model. The state transition model used for the KF is a constant velocity model, with a state containing the x and y positions, the steering angle and their derivatives.", "The robot is moving in time (the real positions shown in black), at each step you get a very noisy GPS measurement, which gives the x and y (in red) and estimates the position (blue). You can play with the different parameters and see how they affect the state estimation. As you can see, we can take very noisy measurements and get a nice estimation of the real positions.", "Let\u2019s have a look at the formulation of the Kalman Gain in the linear KF case and try to get a deeper intuition of how the gain works.", "where P_k is the covariance of the current estimated state (how confident we are about the estimation), C is the linear transformation for the measurement model such that y(k) = Cx(k) and R is the covariance matrix of the measurement noise. Note that the fraction notation is not really correct but makes visualizing what happens easier.", "From the equation, if R becomes 0, we have:", "Substituting in what we defined step (3) of the algorithm, we can see that we will completely disregard the predict step results and we use the inverse transformation of the measurement model to obtain a state estimation coming only from the measurements.", "If instead we trust the model/estimation a lot, P_k will tend to 0, giving:", "Thus we have a final estimation that is the same as the predict step output.", "It is to be noted that I\u2019m using \u201ctrusting the model\u201d and \u201ctrusting the current estimation\u201d interchangeably. They are not the same but they are related, since how much we trust the estimation of the predict step is a combination of how much we trust the model (as the predict step is done using only the model), plus how much we trust the estimation of the previous step of filtering.", "There are a bunch of nice libraries to compute KFs online, here are some of my favourites.", "Being a GO enthusiast, I\u2019ll start with this very nice GO library with several pre-implemented models:", "For Python, you can have a look at https://pykalman.github.io/.", "Conclusions: We had an in-depth look at what state estimation is, how Kalman Filters work, what\u2019s the intuition behind them, how to use them and when. We introduced a toy (but real life) problem and saw how you can solve it with a Kalman Filter. Then, we had a more in-depth look at what the Kalman Filter actually does under the hood.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Tech enthusiast, life-long learner, with a PhD in Robotics. I write about my day to day experience in Software and Data Engineering."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F3d2a05dee465&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----3d2a05dee465--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----3d2a05dee465--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@l.peppoloni?source=post_page-----3d2a05dee465--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@l.peppoloni?source=post_page-----3d2a05dee465--------------------------------", "anchor_text": "Lorenzo Peppoloni"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8f7354da9ac&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&user=Lorenzo+Peppoloni&userId=8f7354da9ac&source=post_page-8f7354da9ac----3d2a05dee465---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3d2a05dee465&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3d2a05dee465&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@clemono2?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Clem Onojeghuo"}, {"url": "https://unsplash.com/s/photos/kalman-filter?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://www.xarg.org/2018/04/how-to-plot-a-covariance-error-ellipse/", "anchor_text": "here"}, {"url": "https://github.com/LorePep/blogposts_code/blob/master/KF_mobile_robot_example.ipynb", "anchor_text": "here"}, {"url": "http://faculty.salina.k-state.edu/tim/robotics_sg/Control/kinematics/unicycle.html", "anchor_text": "unicycle model"}, {"url": "http://ais.informatik.uni-freiburg.de/teaching/ws09/robotics2/pdfs/rob2-12-tracking.pdf", "anchor_text": "constant velocity model"}, {"url": "https://github.com/rosshemsley/kalman", "anchor_text": "rosshemsley/kalmanA package implementing Kalman filtering and smoothing for continuous time-indexed models with non-uniform time\u2026github.com"}, {"url": "https://pykalman.github.io/", "anchor_text": "https://pykalman.github.io/"}, {"url": "https://medium.com/tag/kalman-filter?source=post_page-----3d2a05dee465---------------kalman_filter-----------------", "anchor_text": "Kalman Filter"}, {"url": "https://medium.com/tag/robotics?source=post_page-----3d2a05dee465---------------robotics-----------------", "anchor_text": "Robotics"}, {"url": "https://medium.com/tag/data-science?source=post_page-----3d2a05dee465---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/tech?source=post_page-----3d2a05dee465---------------tech-----------------", "anchor_text": "Tech"}, {"url": "https://medium.com/tag/technology?source=post_page-----3d2a05dee465---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3d2a05dee465&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&user=Lorenzo+Peppoloni&userId=8f7354da9ac&source=-----3d2a05dee465---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F3d2a05dee465&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&user=Lorenzo+Peppoloni&userId=8f7354da9ac&source=-----3d2a05dee465---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F3d2a05dee465&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----3d2a05dee465--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F3d2a05dee465&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----3d2a05dee465---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----3d2a05dee465--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----3d2a05dee465--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----3d2a05dee465--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----3d2a05dee465--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----3d2a05dee465--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----3d2a05dee465--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----3d2a05dee465--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----3d2a05dee465--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@l.peppoloni?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@l.peppoloni?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Lorenzo Peppoloni"}, {"url": "https://medium.com/@l.peppoloni/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "663 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8f7354da9ac&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&user=Lorenzo+Peppoloni&userId=8f7354da9ac&source=post_page-8f7354da9ac--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fd0b6df82fcb3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fkalman-filters-for-software-engineers-3d2a05dee465&newsletterV3=8f7354da9ac&newsletterV3Id=d0b6df82fcb3&user=Lorenzo+Peppoloni&userId=8f7354da9ac&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}