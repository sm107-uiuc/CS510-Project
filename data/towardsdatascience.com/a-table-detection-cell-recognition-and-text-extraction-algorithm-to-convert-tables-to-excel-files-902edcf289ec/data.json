{"url": "https://towardsdatascience.com/a-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec", "time": 1683004206.900467, "path": "towardsdatascience.com/a-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec/", "webpage": {"metadata": {"title": "A table detection, cell recognition and text extraction algorithm to convert tables in images to excel files | by Hucker Marius | Towards Data Science", "h1": "A table detection, cell recognition and text extraction algorithm to convert tables in images to excel files", "description": "Let\u2019s say you have a table in an article, pdf or image and want to transfer it into an excel sheet or dataframe to have the possibility to edit it. Especially in the field of preprocessing for\u2026"}, "outgoing_paragraph_urls": [{"url": "https://tabula.technology", "anchor_text": "https://tabula.technology/", "paragraph_index": 0}, {"url": "https://camelot-py.readthedocs.io/en/master/", "anchor_text": "https://camelot-py.readthedocs.io/en/master/", "paragraph_index": 0}, {"url": "https://excalibur-py.readthedocs.io/en/master/", "anchor_text": "https://excalibur-py.readthedocs.io/en/master/", "paragraph_index": 0}, {"url": "https://link.medium.com/JuV77oma08", "anchor_text": "Click here", "paragraph_index": 4}, {"url": "https://www.pyimagesearch.com/2015/04/20/sorting-contours-using-python-and-opencv/", "anchor_text": "https://www.pyimagesearch.com/2015/04/20/sorting-contours-using-python-and-opencv/", "paragraph_index": 12}, {"url": "https://towardsdatascience.com/how-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2", "anchor_text": "How to Fix Broken Lines in Table Recognition", "paragraph_index": 23}, {"url": "https://medium.com/@hucker.marius/membership", "anchor_text": "https://medium.com/@hucker.marius/membership", "paragraph_index": 25}], "all_paragraphs": ["Let\u2019s say you have a table in an article, pdf or image and want to transfer it into an excel sheet or dataframe to have the possibility to edit it. Especially in the field of preprocessing for Machine Learning this algorithm will be exceptionally helpful to convert many images and tables to editable data. In the case that your data exists of text-based PDFs there is already a handful of free solutions. The most popular ones are tabular, camelot/excalibur, which you can find under https://tabula.technology/, https://camelot-py.readthedocs.io/en/master/, https://excalibur-py.readthedocs.io/en/master/.", "However, what if your PDF is image-based or if you find an article with a table online? Why not just take a screenshot and convert it into an excel sheet? Since there seems to be no free or open source software for image-based data (jpg, png, image-based pdf etc.) the idea came up to develop a generic solution to convert tables into editable excel-files.", "But that\u2019s enough for now, let\u2019s see how it works.", "The algorithm consists of three parts: the first is the table detection and cell recognition with Open CV, the second the thorough allocation of the cells to the proper row and column and the third part is the extraction of each allocated cell through Optical Character Recognition (OCR) with pytesseract.", "As most table recognition algorithms, this one is based on the line structure of the table. Clear and detectable lines are necessary for the proper identification of cells. Tables with broken lines, gaps and holes lead to a worse identification and the cells only partially surrounded by lines are not detected. In case some of your documents have broken lines make sure to read this article and repair the lines: Click here.", "First, we need the input data, which is in my case a screenshot in png-format. The goal is to have a dataframe and excel-file with the identical tabular structure, where each cell can be edited and used for further analysis.", "The first step is to read in your file from the proper path, using thresholding to convert the input image to a binary image and inverting it to get a black background and white lines and fonts.", "The next step is to define a kernel to detect rectangular boxes, and followingly the tabular structure. First, we define the length of the kernel and following the vertical and horizontal kernels to detect later on all vertical lines and all horizontal lines.", "The next step is the detection of the vertical lines.", "And now the same for all horizontal lines.", "We combine the horizontal and vertical lines to a third image, by weighting both with 0.5. The aim is to get a clear tabular structure to detect each cell.", "After having the tabular structure we use the findContours function to detect the contours. This helps us to retrieve the exact coordinates of each box.", "The following function is necessary to get a sequence of the contours and to sort them from top-to-bottom (https://www.pyimagesearch.com/2015/04/20/sorting-contours-using-python-and-opencv/).", "The further steps are necessary to define the right location, which means proper column and row, of each cell. First, we need to retrieve the height for each cell and store it in the list heights. Then we take the mean from the heights.", "Next we retrieve the position, width and height of each contour and store it in the box list. Then we draw rectangles around all our boxes and plot the image. In my case I only did it for boxes smaller then a width of 1000 px and a height of 500 px to neglect rectangles which might be no cells, e.g. the table as a whole. These two values depend on your image size, so in case your image is a lot smaller or bigger you need to adjust both.", "Now as we have every cell, its location, height and width we need to get the right location within the table. Therefore, we need to know in which row and which column it is located. As long as a box does not differ more than its own (height + mean/2) the box is in the same row. As soon as the height difference is higher than the current (height + mean/2) , we know that a new row starts. Columns are logically arranged from left to right.", "Next we calculate the maximum number of columns (meaning cells) to understand how many columns our final dataframe/table will have.", "After having the maximum number of cells we store the midpoint of each column in a list, create an array and sort the values.", "At this point, we have all boxes and their values, but as you might see in the output of your row list the values are not always sorted in the right order. That\u2019s what we do next regarding the distance to the columns center. The proper sequence we store in the list finalboxes.", "In the next step we make use of our list finalboxes. We take every image-based box, prepare it for Optical Character Recognition by dilating and eroding it and let pytesseract recognize the containing strings. The loop runs over every cell and stores the value in the outer list.", "The last step is the conversion of the list to a dataframe and storing it into an excel-file.", "That\u2019s it! Your table should now be stored in a dataframe and in an excel-file and can be used for Nature Language Processing, for further analysis via statistics or just for editing it. This works for tables with a clear and simple structure. In case your table has an extraordinary structure, in the sense that many cells are combined, that the cells size varies strongly or that many colours are used, the algorithm may has to be adopted. Furthermore OCR (pytesseract) is nearly perfect in recognizing computer fonts. However, if you have tables containing handwritten input, the results may vary.", "If you use it for your own table(s), let me know how it worked.", "How to Fix Broken Lines in Table Recognition", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist @Atruvia | Tech & Marketing Enthusiast from Karlsruhe, Germany https://medium.com/@hucker.marius/membership"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F902edcf289ec&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----902edcf289ec--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----902edcf289ec--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@hucker.marius?source=post_page-----902edcf289ec--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@hucker.marius?source=post_page-----902edcf289ec--------------------------------", "anchor_text": "Hucker Marius"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F979676b8abe8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&user=Hucker+Marius&userId=979676b8abe8&source=post_page-979676b8abe8----902edcf289ec---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F902edcf289ec&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F902edcf289ec&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://tabula.technology", "anchor_text": "https://tabula.technology/"}, {"url": "https://camelot-py.readthedocs.io/en/master/", "anchor_text": "https://camelot-py.readthedocs.io/en/master/"}, {"url": "https://excalibur-py.readthedocs.io/en/master/", "anchor_text": "https://excalibur-py.readthedocs.io/en/master/"}, {"url": "https://link.medium.com/JuV77oma08", "anchor_text": "Click here"}, {"url": "https://opencv.org/", "anchor_text": "https://opencv.org/"}, {"url": "https://pypi.org/project/pytesseract/", "anchor_text": "https://pypi.org/project/pytesseract/"}, {"url": "https://medium.com/subscribe/@hucker.marius", "anchor_text": "Stay tuned on new articles of Marius HuckerStay tuned on new articles of Marius Hucker By signing up, you will create a Medium account if you don't already have\u2026medium.com"}, {"url": "https://www.pyimagesearch.com/2015/04/20/sorting-contours-using-python-and-opencv/", "anchor_text": "https://www.pyimagesearch.com/2015/04/20/sorting-contours-using-python-and-opencv/"}, {"url": "https://medium.com/subscribe/@hucker.marius", "anchor_text": "Stay tuned on new articles of Marius HuckerStay tuned on new articles of Marius Hucker By signing up, you will create a Medium account if you don't already have\u2026medium.com"}, {"url": "https://medium.com/@hucker.marius/membership", "anchor_text": "Support me and my work here"}, {"url": "https://towardsdatascience.com/how-to-recognize-and-fix-broken-lines-in-table-recognition-1a19f22d59f2", "anchor_text": "How to Fix Broken Lines in Table Recognition"}, {"url": "https://medium.com/tag/opencv?source=post_page-----902edcf289ec---------------opencv-----------------", "anchor_text": "Opencv"}, {"url": "https://medium.com/tag/table-recognition?source=post_page-----902edcf289ec---------------table_recognition-----------------", "anchor_text": "Table Recognition"}, {"url": "https://medium.com/tag/image-processing?source=post_page-----902edcf289ec---------------image_processing-----------------", "anchor_text": "Image Processing"}, {"url": "https://medium.com/tag/ocr?source=post_page-----902edcf289ec---------------ocr-----------------", "anchor_text": "Ocr"}, {"url": "https://medium.com/tag/text-recognition?source=post_page-----902edcf289ec---------------text_recognition-----------------", "anchor_text": "Text Recognition"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F902edcf289ec&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&user=Hucker+Marius&userId=979676b8abe8&source=-----902edcf289ec---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F902edcf289ec&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&user=Hucker+Marius&userId=979676b8abe8&source=-----902edcf289ec---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F902edcf289ec&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----902edcf289ec--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F902edcf289ec&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----902edcf289ec---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----902edcf289ec--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----902edcf289ec--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----902edcf289ec--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----902edcf289ec--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----902edcf289ec--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----902edcf289ec--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----902edcf289ec--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----902edcf289ec--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@hucker.marius?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@hucker.marius?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Hucker Marius"}, {"url": "https://medium.com/@hucker.marius/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.6K Followers"}, {"url": "https://medium.com/@hucker.marius/membership", "anchor_text": "https://medium.com/@hucker.marius/membership"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F979676b8abe8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&user=Hucker+Marius&userId=979676b8abe8&source=post_page-979676b8abe8--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fa76517c2b81d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-table-detection-cell-recognition-and-text-extraction-algorithm-to-convert-tables-to-excel-files-902edcf289ec&newsletterV3=979676b8abe8&newsletterV3Id=a76517c2b81d&user=Hucker+Marius&userId=979676b8abe8&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}