{"url": "https://towardsdatascience.com/from-biology-to-ai-the-perceptron-81abfdc788bf", "time": 1682993935.202652, "path": "towardsdatascience.com/from-biology-to-ai-the-perceptron-81abfdc788bf/", "webpage": {"metadata": {"title": "From Biology to artificial intelligence: The Perceptron | by Carsten Klein | Towards Data Science", "h1": "From Biology to artificial intelligence: The Perceptron", "description": "Implementation of the Perceptron algorithm in Python."}, "outgoing_paragraph_urls": [{"url": "http://www.cse.chalmers.se/~coquand/AUTOMATA/mcp.pdf", "anchor_text": "McCulloch and Pitts", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/using-signal-processing-to-extract-neural-events-in-python-964437dc7c0", "anchor_text": "micro electrode recordings form the human brain", "paragraph_index": 0}, {"url": "https://blogs.umass.edu/brain-wars/files/2016/03/rosenblatt-1957.pdf", "anchor_text": "The Perceptron \u2014 A Perceiving and Recognizing Automaton", "paragraph_index": 0}, {"url": "http://www.cse.chalmers.se/~coquand/AUTOMATA/mcp.pdf", "anchor_text": "McCulloch and Pitts", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/using-signal-processing-to-extract-neural-events-in-python-964437dc7c0", "anchor_text": "here", "paragraph_index": 1}, {"url": "http://www.cse.chalmers.se/~coquand/AUTOMATA/mcp.pdf", "anchor_text": "McCulloch and Pitts", "paragraph_index": 1}, {"url": "https://en.wikipedia.org/wiki/Heaviside_step_function", "anchor_text": "heaviside step function", "paragraph_index": 2}, {"url": "http://scikit-learn.org/stable/", "anchor_text": "scikit-learn", "paragraph_index": 7}, {"url": "http://www.numpy.org/", "anchor_text": "NumPy", "paragraph_index": 7}, {"url": "https://github.com/akcarsten/Perceptron/blob/master/perceptron.ipynb", "anchor_text": "found here", "paragraph_index": 7}, {"url": "https://github.com/akcarsten/Perceptron/blob/master/perceptron.ipynb", "anchor_text": "here", "paragraph_index": 12}, {"url": "https://twitter.com/ak_carsten", "anchor_text": "Twitter", "paragraph_index": 12}, {"url": "https://www.linkedin.com/in/carsten-klein/", "anchor_text": "LinkedIn", "paragraph_index": 12}], "all_paragraphs": ["It has been a long standing task to create machines that can act and reason in a similar fashion as humans do. And while there has been lots of progress in artificial intelligence (AI) and machine learning in recent years some of the groundwork has already been laid out more than 60 years ago. These early concepts drew their inspiration from theoretical principles of how biological neural networks such as the human brain work. In 1943 McCulloch and Pitts published a paper describing the relationships of (artificial) neurons in networks based on their \u201call-or-none\u201d activity characteristic. This \u201call-or-none\u201d characteristic refers to the fact that a biological neuron either responds to a stimulation or remains silent, there is no in between. A direct observation of this behavior can for example be seen in micro electrode recordings form the human brain. After this initial paper on artificial neural networks Frank Rosenblatt in 1957 published a paper entitled \u201cThe Perceptron \u2014 A Perceiving and Recognizing Automaton\u201d. The Perceptron is a supervised linear classifier that uses adjustable weights to assign an input vector to a class. Similar to the 1943 McCulloch and Pitts paper the idea behind the Perceptron is to resemble the computations of biological neurons to create an agent that can learn. In the following we will have a look on the idea behind the Perceptron and how to implement it in Python code.", "Your brain contains billions of neurons and each of them can be seen as a processing unit that integrates inputs and creates a binary response based on a threshold criterion. In biological terms the inputs are membrane depolarizations at the dendrites of the neuron which spread towards the soma. If the depolarization is strong enough the neuron will respond by generating an action potential which will travel along the axon. At the axon terminal neurotransmitters will be released into the synaptic cleft which will depolarize the dendrites of the downstream neuron. A more detailed description of this process can be found here. Now the actual clue is that a network of biological neurons can learn how to respond to its inputs. The term for this feature is plasticity and it is this property that makes the difference between a static piece of software and an intelligent agent that can adapt to its environment. The 1943 McCulloch and Pitts paper however did not address this issue instead it focused on the relationships among neurons. The Perceptron on the other hand offered an elegant solution for the plasticity problem: weights. Every input of the Perceptron gets multiplied by a weight and then the results get summed up. So by changing the weights of the inputs we can alter the Perceptrons response. The figure below gives a schematic overview of how the Perceptron operates.", "On the left hand side of Figure 1 the inputs are represented as x1, x2, x3,\u2026xn. Each input gets multiplied by a weight w0, w1, w2,\u2026 wn. After this multiplication step the results get summed up and passed through an activation function. In the case of the Perceptron the activation function resembles the \u201call-or-none\u201d characteristic of a biological neuron through a heaviside step function. This means that any value \u22640 will be transformed to 0 whereas any value >0 will become 1. We can write the above also as:", "Where w is the weight vector, x is the input vector and b is a bias term. In Figure 1 we already included the bias into the input vector as a 1 (red square) and into the weight vector as w0. So in this case the dot product of the input and the weight vector is all we need to calculate. But one question remains: How do we adjust the weights? After all this is how the Perceptron learns. One way to think about this is as follows. Our Perceptron is supposed to make a binary decision (0 or 1) based on its inputs. So imagine we have two data points, one belongs to class 1 the other to class 0 and the Perceptron has to learn the class of each data point. The task is visualized in the Figure 2 below.", "From Figure 2 we can see that the problem can be viewed as finding a decision boundary, also called hyperplane (red dashed line), that separates the two groups. Everything above the red dotted line will be class 0 and everything below the hyperplane will be class 1. The hyperplane is defined by a weight vector w\u2019 which is perpendicular to it (red solid vector). Therefore calculating the dot product of the input vector with the weight vector and passing the result through the activation function will give us the classification of the input. So if we take a look at data point 1 we can also draw it as a vector and perpendicular to it we can draw another hyperplane (solid yellow line). Next, looking at input vector 2 we can again draw a hyperplane perpendicular to it (solid blue line). Since the hyperplane which separates the two groups needs to be perpendicular to the weight vector we are looking for, it becomes obvious from Figure 2 that w\u2019 has to lay between the yellow and blue hyperplanes (labeled as \u201crange for x\u201d). So following the above we can implement the learning rule as follows.", "First we set all values in our weight vector to zero, including the bias term. In the case of a two dimensional input, like in Figure 2, this means: w = [0 0 0]. Then we add the bias of 1 to our first input vector which gives us X(1) = [1, x1, x2]. Now we calculate the dot product of X1 and w. The result of this calculation is 0. Passing 0 through the activation function will then classify X1 as class 0, which is correct. Therefore no update of w is needed. Doing the same for X(2) also gives us class 0 which is wrong so we need to update w by the following learning rule:", "In this case it means subtracting our result (class 0) from the correct class (1), multiplying the outcome by the current input vector and adding it to w. This will result in: w = [1 x1, x2]. If there would be more data points we would continue with this procedure for every input vector and with every iteration we would come closer to a weight vector that describes a hyperplane which linearly separates our two groups. To test this we will next implement the Perceptron in Python code.", "To develop our Perceptron algorithm we will use toy data which we generate with scikit-learn. All other functions we will implement using NumPy. The complete Jupyter Notebook with all the code for this article can be found here. The code below will create and visualize our toy data set.", "Figure 3 shows the two clusters we just created and as we can see they can be linearly separated by a hyperplane, the precondition for the Perceptron to work. Next we need to add the bias term to the input vector and initialize the weight vector with zeros.", "OK now we are all set to code the Perceptron algorithm. As we can see from the code below it is a strikingly simple and elegant algorithm. Because it is not guaranteed that the Perceptron will converge in one pass, we will feed all the training data into the Perceptron 10 times in a row while constantly applying the learning rule, just to make sure.", "So lets have a look at the result. The animation below visualizes how the Perceptron is searching for a hyperplane that separates the two clusters. As we can see it eventually comes up with a solution where one of the class 1 data points lays on the hyperplane. That solution is actually correct as we specified earlier in our activation function: return 1 if x >= 1 else 0 If you are interested you can re-run the above code with the the following activation function to see how the result changes: return 0 if x <= 0 else 1", "Finally, before we finish some thoughts on the above. As we saw the Perceptron algorithm is a simple way of implementing a supervised linear classifier. However it also has drawbacks. For example it does not work when the groups are not linearly separable. Also it is an online algorithm which means we can only pass one training example at a time into it, making the training process slow if we had a larger dataset. Despite these limitations the Perceptron actually is an important concept that started the first AI hype. Ironically it also ended it a couple of years later when it couldn\u2019t fulfill the big promises that were made about it.", "If you want the complete code of this project you can find it here. And of course feel free to follow me on Twitter or connect via LinkedIn.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "PhD in neuroscience interested in data analysis and artificial intelligence"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F81abfdc788bf&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----81abfdc788bf--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----81abfdc788bf--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://carstenklein.medium.com/?source=post_page-----81abfdc788bf--------------------------------", "anchor_text": ""}, {"url": "https://carstenklein.medium.com/?source=post_page-----81abfdc788bf--------------------------------", "anchor_text": "Carsten Klein"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc804c71f161a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&user=Carsten+Klein&userId=c804c71f161a&source=post_page-c804c71f161a----81abfdc788bf---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F81abfdc788bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F81abfdc788bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://www.cse.chalmers.se/~coquand/AUTOMATA/mcp.pdf", "anchor_text": "McCulloch and Pitts"}, {"url": "https://towardsdatascience.com/using-signal-processing-to-extract-neural-events-in-python-964437dc7c0", "anchor_text": "micro electrode recordings form the human brain"}, {"url": "https://blogs.umass.edu/brain-wars/files/2016/03/rosenblatt-1957.pdf", "anchor_text": "The Perceptron \u2014 A Perceiving and Recognizing Automaton"}, {"url": "http://www.cse.chalmers.se/~coquand/AUTOMATA/mcp.pdf", "anchor_text": "McCulloch and Pitts"}, {"url": "https://en.wikipedia.org/wiki/Perceptron", "anchor_text": "Mark I"}, {"url": "https://towardsdatascience.com/using-signal-processing-to-extract-neural-events-in-python-964437dc7c0", "anchor_text": "here"}, {"url": "http://www.cse.chalmers.se/~coquand/AUTOMATA/mcp.pdf", "anchor_text": "McCulloch and Pitts"}, {"url": "https://en.wikipedia.org/wiki/Heaviside_step_function", "anchor_text": "heaviside step function"}, {"url": "http://scikit-learn.org/stable/", "anchor_text": "scikit-learn"}, {"url": "http://www.numpy.org/", "anchor_text": "NumPy"}, {"url": "https://github.com/akcarsten/Perceptron/blob/master/perceptron.ipynb", "anchor_text": "found here"}, {"url": "https://github.com/akcarsten/Perceptron/blob/master/perceptron.ipynb", "anchor_text": "here"}, {"url": "https://twitter.com/ak_carsten", "anchor_text": "Twitter"}, {"url": "https://www.linkedin.com/in/carsten-klein/", "anchor_text": "LinkedIn"}, {"url": "https://github.com/akcarsten/Perceptron/blob/master/perceptron.ipynb", "anchor_text": "akcarsten/PerceptronContribute to akcarsten/Perceptron development by creating an account on GitHub.github.com"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----81abfdc788bf---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----81abfdc788bf---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/neuroscience?source=post_page-----81abfdc788bf---------------neuroscience-----------------", "anchor_text": "Neuroscience"}, {"url": "https://medium.com/tag/data-science?source=post_page-----81abfdc788bf---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----81abfdc788bf---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F81abfdc788bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&user=Carsten+Klein&userId=c804c71f161a&source=-----81abfdc788bf---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F81abfdc788bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&user=Carsten+Klein&userId=c804c71f161a&source=-----81abfdc788bf---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F81abfdc788bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----81abfdc788bf--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F81abfdc788bf&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----81abfdc788bf---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----81abfdc788bf--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----81abfdc788bf--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----81abfdc788bf--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----81abfdc788bf--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----81abfdc788bf--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----81abfdc788bf--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----81abfdc788bf--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----81abfdc788bf--------------------------------", "anchor_text": ""}, {"url": "https://carstenklein.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://carstenklein.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Carsten Klein"}, {"url": "https://carstenklein.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "669 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fc804c71f161a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&user=Carsten+Klein&userId=c804c71f161a&source=post_page-c804c71f161a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F540b346ea76a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffrom-biology-to-ai-the-perceptron-81abfdc788bf&newsletterV3=c804c71f161a&newsletterV3Id=540b346ea76a&user=Carsten+Klein&userId=c804c71f161a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}