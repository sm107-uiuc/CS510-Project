{"url": "https://towardsdatascience.com/reward-hacking-in-evolutionary-algorithms-c5bbbf42994b", "time": 1683001543.536623, "path": "towardsdatascience.com/reward-hacking-in-evolutionary-algorithms-c5bbbf42994b/", "webpage": {"metadata": {"title": "Reward Hacking in Evolutionary Algorithms | by Conor Lazarou | Towards Data Science", "h1": "Reward Hacking in Evolutionary Algorithms", "description": "If W. W. Jacobs had been born a century later, the The Monkey\u2019s Paw might have featured a devilish AI instead of that accursed hand. AI agents, like the titular paw, are notorious for doing what they\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Firefighter_arson", "anchor_text": "commits arson", "paragraph_index": 0}, {"url": "https://www.nytimes.com/1908/02/02/archives/dog-a-fake-hero-pushes-children-into-the-seine-to-rescue-them-and.html", "anchor_text": "knocking kids into the river", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/evolving-neural-networks-b24517bb3701", "anchor_text": "Evolving Neural Networks", "paragraph_index": 1}, {"url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3908773/", "anchor_text": "3D structure of a protein", "paragraph_index": 2}, {"url": "https://en.wikipedia.org/wiki/Evolved_antenna", "anchor_text": "electronic components", "paragraph_index": 2}, {"url": "https://rednuht.org/genetic_cars_2/", "anchor_text": "virtual cars", "paragraph_index": 2}, {"url": "http://www.karlsims.com/papers/siggraph94.pdf", "anchor_text": "Evolving Virtual Creatures", "paragraph_index": 4}, {"url": "https://www.researchgate.net/profile/Larry_Yaeger/publication/2448680_Computational_Genetics_Physiology_Metabolism_Neural_Systems_Learning_Vision_and_Behavior_or_PolyWorld_Life_in_a_New_Context/links/0912f50e101b77ec67000000.pdf", "anchor_text": "PolyWorld: Life in a New Context", "paragraph_index": 19}, {"url": "https://web.eecs.umich.edu/~weimerw/p/weimer-ssbse2013.pdf", "anchor_text": "presentation", "paragraph_index": 28}, {"url": "https://squareslab.github.io/genprog-code/", "anchor_text": "GenProg", "paragraph_index": 28}, {"url": "https://squareslab.github.io/genprog-code/", "anchor_text": "their website", "paragraph_index": 40}, {"url": "https://en.wikipedia.org/wiki/Goodhart%27s_law", "anchor_text": "Goodhart\u2019s law", "paragraph_index": 43}, {"url": "http://www.karlsims.com/papers/siggraph94.pdf", "anchor_text": "Evolving Virtual Creatures", "paragraph_index": 48}, {"url": "https://ieeexplore.ieee.org/document/6035728", "anchor_text": "GenProg: A Generic Method for Automatic Software Repair", "paragraph_index": 49}, {"url": "http://flatland.ai", "anchor_text": "flatland.ai", "paragraph_index": 51}], "all_paragraphs": ["If W. W. Jacobs had been born a century later, the The Monkey\u2019s Paw might have featured a devilish AI instead of that accursed hand. AI agents, like the titular paw, are notorious for doing what they were technically asked to do in a way that no one expected or wanted. Just as the occasional firefighter commits arson in order to play the hero and \u201csave the day\u201d (you were already a hero, bud), and like that dog who was rewarded with steak when he saved a drowning child and so took to knocking kids into the river, AI agents will do just about anything they can to maximize their reward. This sort of behaviour, in which AI agents increase their reward using strategies that violate the spirit or intent of the rules, is called reward hacking. Often, what seems like a reasonable reward to an AI developer or policy-maker leads to hilariously disastrous results. Here we\u2019ll explore three cases of AI agents acting naughty in pursuit of reward and what they can teach us about good reward design, both in AI and for humans.", "If you haven\u2019t already, check out my article Evolving Neural Networks for an explanation of evolutionary algorithms. If you\u2019ve read it, feel free to skip this section. If you haven\u2019t and won\u2019t, here\u2019s the synopsis:", "Evolutionary Algorithms are a technique that involve simulating biological evolution in order to produce a solution to some problem. Each organism in the simulation is a potential solution to the stated problem. These organisms can be practically anything: the 3D structure of a protein, electronic components, or virtual cars, to name a few. The steps of the algorithm are simple:", "In time, the algorithm will (hopefully) evolve an organism that is sufficient for the stated problem. Although reward hacking occurs in all types of reinforcement learning, I chose to focus on its occurrence in evolutionary algorithms because evolution is incapable of foresight or planning, which shows that these pathological strategies are evolutionarily stable and develop organically.", "In 1994, Karl Sims published a paper called Evolving Virtual Creatures in which he", "describes a novel system for creating virtual creatures that move and behave in simulated three-dimensional physical worlds [\u2026] using genetic algorithms. (Sims, 1994)", "As the paper explains, Sims developed a method for generating and training simulated 3D creatures. The DNA of these creatures is encoded as a directed graph, and is expressed as an organism by traversing the graph and instantiating each node as a limb. The figure below illustrates how the DNA was represented and how the genomes of three organisms manifest as virtual creatures.", "The simulated organisms evolved to perform a variety of tasks in different environments. These include:", "Creatures were put into a virtual underwater environment with the intent to evolve a creature that could swim. Water was simulated by disabling gravity and adding a viscous effect, which introduces friction and the potential for propulsion by pushing water. Each simulation was run for some fixed time, and the organisms\u2019 fitness scores were measured. From the paper,", "Swimming speed is used as the fitness value and is measured by the distance traveled by the creature\u2019s center of mass per unit time.", "In the experiment, Sims hit a couple of snags. First, it seems like the creatures learned to swim in circles, or maybe oscillate back and forth. Technically, both of these behaviours would constitute \u201cswimming\u201d as defined by the fitness function, but it\u2019s unlikely that either are what Sims had intended. Creatures with these behaviours were taking advantage of the reward given for average speed, and so learned to move very fast without actually going anywhere. To prevent this, the fitness function was changed to reward absolute average velocity instead of average speed (in other words, the creatures were rewarded proportional to the distance between where they started and where they ended up).", "The other unanticipated strategy that developed was that creatures made a big initial push then coasted through the water, which isn\u2019t so much swimming as it is flowing with style. To prevent this, the fitness function was changed to add an additional reward to the creature\u2019s velocity at the end of the simulation, encouraging them to push through until the end.", "Creatures were put in a virtual land environment with the intent of evolving a creature that could jump. The land environment was simulated by introducing gravity, removing the viscous water effect, and adding a flat ground with friction. When we say \u201cjump\u201d, it\u2019s important that we define it as a clearly measurable action. From the paper,", "Jumping behavior can be selected for by measuring the maximum height above the ground of the lowest part of the creature.", "Note how Sims is explicit that it\u2019s the maximum height of the lowest part of the creature. A less careful researcher (perhaps even Sims, on his first attempt) might define fitness here as the maximum height above the ground of the creature\u2019s centre of mass, as was used in the swimming experiment. At first glance centre of mass fitness function may seem reasonable, but in practice the creatures could easily cheat this system by growing ludicrously tall. Another potential fitness function that seems reasonable at a first glance would be the average height of the lowest part of the creature; however, this could lead to creatures that repeatedly make small hops instead of learning to jump in earnest.", "Creatures were again put in a simulated land environment, this time with the intent of evolving a creature that could move around on land. Similar to the swimming experiment, the paper states that", "[a]gain, speed is used as the selection criteria, but the vertical component of velocity is ignored.", "By \u201cspeed\u201d, it seems Sims again means \u201cabsolute average velocity\u201d, and we can assume he also added the same bonus for having a large final velocity. In this section of the paper, Sims describes an unfortunate strategy developed by some organisms that involved growing very tall and falling over. Although these creatures were certainly moving very fast, it\u2019s doubtful that this was the intended behaviour. Sims was able to prevent this \u201cby first running the simulation with no friction and no effector forces until the height of the center of mass reaches a stable minimum.\u201d This is a strange approach, since surely changing the fitness function to measure the absolute average velocity of the creature\u2019s nearest point to the start position, rather than its centre of mass, would be simpler and just as effective.", "Evolving Virtual Creatures is an excellent paper on its own, but is made so much better when you understand that the author had to battle his creatures\u2019 natural tendencies to cheat the system every step of the way. Reading through the methodology, he mentions several things that might go wrong, and we can be sure he\u2019s speaking from experience. If you\u2019re interested in seeing these creatures in action, here\u2019s a video. Sorry about the quality.", "In 1995, Larry Yaeger published a paper called PolyWorld: Life in a New Context, in which he describes the simultaneous evolution of simulated organisms in a virtual world. Like Sims\u2019 paper, PolyWorld is a virtual 3D environment used to create organisms whose morphology and behaviour are developed by an evolutionary algorithm. Unlike Sims\u2019 paper, in which organisms were simulated in isolation, PolyWorld was designed to allow organisms to interact with each other.", "Although complex in its implementation, the premise of PolyWorld is very simple. Creatures with random morphologies and behaviours are placed in the 3D environment, which consists of a flat plane (the ground), free-growing food, and optional barriers. Creatures interact with their environment by taking actions, including moving, eating, mating, and fighting, among others. In order to take any of these actions, creatures must expend energy. Energy is restored by eating food or the corpses of other creatures. When a creature runs out of energy, it dies. If two creatures come into contact and both initiate the \u201cmate\u201d action, they reproduce, and each give some of their energy to that offspring.", "Typically, genetic algorithms include a fitness function with the intent of evolving an organism that solves a particular problem, like Sims\u2019 evaluation of organisms\u2019 ability to swim, jump, and walk. However, Yaeger states in the PolyWorld paper that", "there is no fitness function except survival.", "This makes PolyWorld a genuine simulation of virtual life, and like organic life it produced some fairly unorthodox survival strategies.", "Yaeger describes a species that evolved in a toroidal environment without walls, which he refers to as \u201cFrenetic Joggers\u201d; these critters were characterized as always running in a straight line, mating with or eating whatever they came into contact with, as appropriate. In time, the Joggers came to dominate the population by breeding the diversity out of any other creature they met. Although the Frenetic Joggers were clearly living their best lives, theirs was an overly simplistic solution to the survival problem. To combat this, Yaeger added a miscegenation function, which discouraged genetically-dissimilar organisms from breeding and encouraged speciation. The era of free love and marathons was over.", "Another species Yaeger describes is the \u201cIndolent Cannibals\u201d. These creatures lived sedentary lives, typically dying within a few paces of where they were born. That\u2019s not to say their lives were boring, however; the Cannibals formed colonies in which they would mate, fight, kill, and eat each other (not necessarily in that order). If you picture the entirety of Game of Thrones taking place in a studio apartment, you\u2018d have the right idea. This species evolved because Yaeger hadn\u2019t originally required that parents give their offspring some of their energy; this resulted in babies that contained more energy than they cost to create (perpetual motion enthusiasts, take note.) Essentially, the Indolent Cannibals had learned to exploit a bug in the simulation to generate free energy. To combat this, Yaeger enforced that parents must give some of their energy to their offspring, which prevented children from becoming a cost-effective snack.", "Yaeger describes a third pathological species as the \u201cEdge Runners\u201d. These transients spent their entire lives patrolling the outer edge of their walled-in world. Although they repeatedly circled the entire simulation, the Edge Runners only lived off a small sliver of the total area in their self-confinement to the edge of the world. An advantage of this strategy was that it was common to stumble upon the long dead corpse of a distant ancestor, which made for an easy snack. When it came time to mate, an Edge Runner could merely stop running and wait for another to run along. Yaeger suggests that this may be a form of behavioural isolation, allowing the Edge Runners to to avoid mixing their genes with the larger community. Yaeger was able to discourage this strategy by replacing the hard wall around the world with \u201cdeadly, drop-off edges\u201d.", "PolyWorld: Life in a New Context is wonderful (but dense) paper, and I recommend reading it if you find this sort of work interesting. Even though the only task was \u201csurvive\u201d, the simulation still produced several creatures whose behaviours ran contrary to the spirit of the simulation, including one that exploited the simulation\u2019s physics to bolster its own fitness. Some, including Sims, have suggested that evolutionary algorithms may be an effective (although inefficient) debugging tool for complex environments like simulations and games, and indeed Yaeger (unintentionally) used the Indolent Cannibals to find a hole in his simulation logic. If you\u2019re interested in seeing PolyWorld in action, here\u2019s a video from them man himself.", "In 2013, Westley Weimer gave a presentation on the use of evolutionary algorithms to automatically address bugs in code. However, Weimer and his collaborators went beyond Sims\u2019 suggestion of using evolutionary algorithms to merely detect bugs and used them to patch bugs as well, resulting in a tool called GenProg. In his presentation, he discusses the development of GenProg and a number of lessons learned along the way. He outlines reward hacking as the biggest hurdle in the process, and describes GenProg as \u201ca whiny child\u201d, likening it to Calvin in this classic comic:", "At a high level, GenProg accepts a file of buggy source code and a set of tests as input. The tool then creates a series of \u201cchildren\u201d by mutating the original source code. The tests are applied to the children as a fitness function, and the simulation repeats in the typically evolutionary way. Here are three issues that were encountered in applying GenProg to different problems:", "Sorting a list is a fundamental software operation, which makes it an ideal proof-of-concept problem for GenProg. The scenario was simple: the sort program had a bug, and GenProg was tasked with evolving a patch for it. As a measure of fitness, sort would be given an unsorted list as input and the output would be tested to see if it was sorted. If the output was indeed sorted for a variety of inputs, then sort was considered patched. GenProg\u2019s solution: always output an empty list (which is, technically, sorted).", "\u201cYou only said I had get into the bathtub, you didn\u2019t say I had to wash.\u201d \u2014 Weimer, on his creation", "He was able to fix this by adding more tests, presumably by comparing the actual output to the intended output, rather than just testing that the output was sorted.", "GenProg was tasked with identifying and resolving an issue in nullhttpd. Specifically, there was a bug in its POST functionality that made it vulnerable to remote exploit, and the objective was to remove this vulnerability. After the program had run its course, all tests were passing and the vulnerability in nullhttpd\u2019s POST functionality was reportedly patched. GenProg\u2019s solution: remove POST functionality.", "Patient: \u201cDoctor, it hurts when I move my arm like this\u201d", "Doctor: \u201cThen don\u2019t move your arm like that\u201d", "The team was able solve this by adding another test to the set; it appears that he had originally been testing for the presence of the vulnerability, not for safe, working code.", "At this point, you might be thinking \u201cwhy didn\u2019t they have more robust tests in the first place?\u201d That\u2019s what I thought, anyway. As it turned out, he did. In the section \u201cLessons Learned: Test Framework\u201d of the presentation, Weimer briefly describes how the tests were run, and although he wasn\u2019t explicit, it appears to work like this: GenProg produces solutions (repaired programs, with varying degrees of repairedness), those solutions are run and produce a file your-output.txt, and the output is compared to trusted-output.txt as a measure of fitness. Sounds reasonable, right? When GenProg was confronted with this test framework, its solution was to delete your-output.txt and then proceed to output nothing.", "\u201c\u2018[\u2026] And so faintly you came tapping, tapping at my chamber door, / That I scarce was sure I heard you` here I opened wide the door; / Darkness there and nothing more.\u201c \u2014 Edgar Allan Poe, on his experience with GenProg", "Weimer didn\u2019t say how he solved this problem, or even if he solved this problem.", "GenProg is an amazing little tool that has received multiple best paper awards. According to their website,", "GenProg has repaired many kinds of defects, including infinite loops, segmentation violations, heap buffer overflows, non-overflow denial-of-service vulnerabilities, stack buffer overflows, format string vulnerabilities, integer overflows \u2014 as well as the ubiquitous \u201cmy program produces the incorrect output\u201d bug.", "Quite frankly, the idea of evolving executable programs that can modify a computer terrifies me almost as much as I find it exciting. GenProg uses a testing framework as a fitness function, and it\u2019s amusing to see all the little ways it games the system, but it\u2019s important to remember that traditional, survival-based natural selection applies to anything that can mutate and reproduce; that includes the programs created by GenProg. If GenProg churns out a program capable of self-replicating, you might just find an invasive species living on your hard drive.", "The takeaway from all these examples is distilled in Goodhart\u2019s law:", "When a measure becomes a target, it ceases to be a good measure.", "This pattern of behaviour isn\u2019t restricted to artificial intelligence; humans engage in reward hacking all the time, intentionally or not. Some examples include:", "How do we resolve these issues? Here are three guiding principles:", "The reward-selection-mutation loop is ultimately an arms race between the rewarder and the rewardee. Agents see fitness functions, in AI and in daily life, as just another obstacle in the environment to overcome. Fortunately, with these guiding principles, you can be armed against these reward hacking behaviours; remember, even The Monkey\u2019s Paw had an (almost) happy ending.", "[1] Karl Sims, Evolving Virtual Creatures (1994), Proceedings of the 21st annual conference on Computer graphics and interactive techniques", "[3] Claire Le Goues et al., GenProg: A Generic Method for Automatic Software Repair (2011), IEEE Transactions on Software Engineering", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data science and ML consultant, generative artist, writer. flatland.ai"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fc5bbbf42994b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://conor-lazarou.medium.com/?source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": ""}, {"url": "https://conor-lazarou.medium.com/?source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": "Conor Lazarou"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdeb461dc9d26&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&user=Conor+Lazarou&userId=deb461dc9d26&source=post_page-deb461dc9d26----c5bbbf42994b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc5bbbf42994b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc5bbbf42994b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://en.wikipedia.org/wiki/Firefighter_arson", "anchor_text": "commits arson"}, {"url": "https://www.nytimes.com/1908/02/02/archives/dog-a-fake-hero-pushes-children-into-the-seine-to-rescue-them-and.html", "anchor_text": "knocking kids into the river"}, {"url": "https://towardsdatascience.com/evolving-neural-networks-b24517bb3701", "anchor_text": "Evolving Neural Networks"}, {"url": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3908773/", "anchor_text": "3D structure of a protein"}, {"url": "https://en.wikipedia.org/wiki/Evolved_antenna", "anchor_text": "electronic components"}, {"url": "https://rednuht.org/genetic_cars_2/", "anchor_text": "virtual cars"}, {"url": "http://www.karlsims.com/papers/siggraph94.pdf", "anchor_text": "Evolving Virtual Creatures"}, {"url": "http://www.karlsims.com/papers/siggraph94.pdf", "anchor_text": "Sims, 1994"}, {"url": "https://www.researchgate.net/profile/Larry_Yaeger/publication/2448680_Computational_Genetics_Physiology_Metabolism_Neural_Systems_Learning_Vision_and_Behavior_or_PolyWorld_Life_in_a_New_Context/links/0912f50e101b77ec67000000.pdf", "anchor_text": "PolyWorld: Life in a New Context"}, {"url": "https://www.researchgate.net/profile/Larry_Yaeger/publication/2448680_Computational_Genetics_Physiology_Metabolism_Neural_Systems_Learning_Vision_and_Behavior_or_PolyWorld_Life_in_a_New_Context/links/0912f50e101b77ec67000000.pdf", "anchor_text": "the original paper"}, {"url": "https://www.freepik.com/", "anchor_text": "freepik"}, {"url": "https://www.freepik.com/", "anchor_text": "freepik"}, {"url": "http://rawpixel.com", "anchor_text": "rawpixel"}, {"url": "https://web.eecs.umich.edu/~weimerw/p/weimer-ssbse2013.pdf", "anchor_text": "presentation"}, {"url": "https://squareslab.github.io/genprog-code/", "anchor_text": "GenProg"}, {"url": "https://squareslab.github.io/genprog-code/", "anchor_text": "their website"}, {"url": "https://xkcd.com/350/", "anchor_text": "xkcd"}, {"url": "https://en.wikipedia.org/wiki/Goodhart%27s_law", "anchor_text": "Goodhart\u2019s law"}, {"url": "https://en.wikipedia.org/wiki/Teaching_to_the_test", "anchor_text": "Teaching to the test"}, {"url": "https://en.wikipedia.org/wiki/Cobra_effect", "anchor_text": "cobra effect"}, {"url": "https://en.wikipedia.org/wiki/Performance_indicator", "anchor_text": "KPIs"}, {"url": "http://www.karlsims.com/papers/siggraph94.pdf", "anchor_text": "Evolving Virtual Creatures"}, {"url": "https://www.researchgate.net/publication/2448680_Computational_Genetics_Physiology_Metabolism_Neural_Systems_Learning_Vision_and_Behavior_or_PolyWorld_Life_in_a_New_Context", "anchor_text": "PolyWorld: Life in a New Context"}, {"url": "https://ieeexplore.ieee.org/document/6035728", "anchor_text": "GenProg: A Generic Method for Automatic Software Repair"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----c5bbbf42994b---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/reinforcement-learning?source=post_page-----c5bbbf42994b---------------reinforcement_learning-----------------", "anchor_text": "Reinforcement Learning"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----c5bbbf42994b---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/evolution?source=post_page-----c5bbbf42994b---------------evolution-----------------", "anchor_text": "Evolution"}, {"url": "https://medium.com/tag/kpi?source=post_page-----c5bbbf42994b---------------kpi-----------------", "anchor_text": "Kpi"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc5bbbf42994b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&user=Conor+Lazarou&userId=deb461dc9d26&source=-----c5bbbf42994b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc5bbbf42994b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&user=Conor+Lazarou&userId=deb461dc9d26&source=-----c5bbbf42994b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc5bbbf42994b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fc5bbbf42994b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----c5bbbf42994b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----c5bbbf42994b--------------------------------", "anchor_text": ""}, {"url": "https://conor-lazarou.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://conor-lazarou.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Conor Lazarou"}, {"url": "https://conor-lazarou.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.1K Followers"}, {"url": "http://flatland.ai", "anchor_text": "flatland.ai"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdeb461dc9d26&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&user=Conor+Lazarou&userId=deb461dc9d26&source=post_page-deb461dc9d26--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F51220adfabae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freward-hacking-in-evolutionary-algorithms-c5bbbf42994b&newsletterV3=deb461dc9d26&newsletterV3Id=51220adfabae&user=Conor+Lazarou&userId=deb461dc9d26&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}