{"url": "https://towardsdatascience.com/create-a-sms-spam-classifier-in-python-b4b015f7404b", "time": 1683012538.058086, "path": "towardsdatascience.com/create-a-sms-spam-classifier-in-python-b4b015f7404b/", "webpage": {"metadata": {"title": "Create a SMS spam classifier in python | by Dehan Chia | Towards Data Science", "h1": "Create a SMS spam classifier in python", "description": "I have always been fascinated with Google\u2019s gmail spam detection system, where it is able to seemingly effortlessly judge whether incoming emails are spam and therefore not worthy of our limited\u2026"}, "outgoing_paragraph_urls": [{"url": "https://archive.ics.uci.edu/ml/datasets/SMS+Spam+Collection", "anchor_text": "UCI\u2019s Machine Learning Repository", "paragraph_index": 4}, {"url": "https://github.com/dehan97/spam_classifier", "anchor_text": "github repo", "paragraph_index": 4}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html", "anchor_text": "count vectorizer", "paragraph_index": 12}, {"url": "http://www.btechsmartclass.com/data_structures/sparse-matrix.html#:~:text=Sparse%20matrix%20is%20a%20matrix,only%2010%20non%2Dzero%20elements.", "anchor_text": "sparse matrix", "paragraph_index": 12}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.MultinomialNB.html#:~:text=The%20multinomial%20Naive%20Bayes%20classifier,tf%2Didf%20may%20also%20work.", "anchor_text": "Multinomial Naive Bayes Classifier Model", "paragraph_index": 14}, {"url": "https://towardsdatascience.com/understanding-auc-roc-curve-68b2303cc9c5#:~:text=AUC%20%2D%20ROC%20curve%20is%20a,degree%20or%20measure%20of%20separability.&text=By%20analogy%2C%20Higher%20the%20AUC,with%20disease%20and%20no%20disease.", "anchor_text": "AUC-ROC", "paragraph_index": 16}, {"url": "https://www.kaggle.com/adamschroeder/countvectorizer-tfidfvectorizer-predict-comments", "anchor_text": "tfidf vectorizer", "paragraph_index": 22}, {"url": "https://www.linkedin.com/in/dehan-c-948045177/", "anchor_text": "LinkedIn", "paragraph_index": 32}], "all_paragraphs": ["I have always been fascinated with Google\u2019s gmail spam detection system, where it is able to seemingly effortlessly judge whether incoming emails are spam and therefore not worthy of our limited attention.", "In this article, I seek to recreate such a spam detection system, but on sms messages. I will use a few different models and compare their performance.", "Using a train-test split, the 4 models were put through the stages of X_train vectorization, model fitting on X_train and Y_train, make some predictions and generate the respective confusion matrices and area under the receiver operating characteristics curve for evaluation. (AUC-ROC)", "The resultant best performing model was the Logistic Regression Model, although it should be noted that all 4 models performed reasonably well at detecting spam messages (all AUC > 0.9).", "The data was obtained from UCI\u2019s Machine Learning Repository, alternatively I have also uploaded the used dataset onto my github repo. In total, the data set has 5571 rows, and 2 columns: spamorham indicating it\u2019s spam status and the message\u2019s text. I found it quite funny how the text is quite relatable.", "Definitions: Spam refers to spam messages as they are commonly known, ham refers to non-spam messages.", "As the dataset is relatively simple, not much preprocessing was needed. Spam messages were marked with a 1, while ham was marked with a 0.", "Now, let\u2019s look at the dataset in detail. Taking an average of the \u2018target\u2019 column, we find that that 13.409% of the messages were marked as spam.", "Further, maybe the message length has some correlation with the target outcome? Splitting the spam and ham messages into their individual dataframes, we further add on the number of characters of a message as a third column \u2018len\u2019.", "Further, taking the averages of messages lengths, we can find that spam and ham messages have average lengths of 139.12 and 71.55 characters respectively.", "Now it\u2019s time for the interesting stuff.", "We begin with creating a train-test split using the default sklearn split of a 75% train-test split.", "A count vectorizer will convert a collection of text documents to a sparse matrix of token counts. This will be necessary for model fitting to be done.", "We fit the CountVectorizer onto X_train, and then further transform it using the transform method.", "Let\u2019s first try fitting a classic Multinomial Naive Bayes Classifier Model (MNNB), on X_train and Y_train.", "A Naive Bayes model assumes that each of the features it uses are conditionally independent of one another given some class. In practice Naive Bayes models have performed surprisingly well, even on complex tasks where it is clear that the strong independence assumptions are false.", "In evaluating the model\u2019s performance, we can generate some predictions then look at the confusion matrix and AUC-ROC score to evaluate performance on the test dataset.", "The confusion matrix is generated as below:", "The results seem promising, with a True Positive Rate (TPR) of 92.6% , specificity of 99.7% and a False Positive Rate (FPR) of 0.3%. These results show that the model performs quite well in predicting whether messages are spam, based solely on the text in the messages.", "The Receiver Operator Characteristic (ROC) curve is an evaluation metric for binary classification problems. It is a probability curve that plots the TPR against FPR at various threshold values and essentially separates the \u2018signal\u2019 from the \u2018noise\u2019. The Area Under the Curve (AUC) is the measure of the ability of a classifier to distinguish between classes and is used as a summary of the ROC curve.", "The model produced an AUC score of 0.962, which is significantly better than if the model made random guesses of the outcome.", "Although the Multinomial Naive Bayes Classifier seems to have worked quite well, I felt that maybe the result could possibly be improved further through a different model", "I then attempt to use a tfidf vectorizer instead of a count-vectorizer to see if it improves the results.", "The goal of using tfidf is to scale down the impact of tokens that occur very frequently in a given corpus and that are hence empirically less informative than features that occur in a small fraction of the training corpus.", "In evaluating the model\u2019s performance we look at the AUC-ROC numbers and the confusionn matrix again. It generates an AUC score of 91.67%", "The results seem promising, with a True Positive Rate (TPR) of 83.3% , specificity of 100% and a False Positive Rate (FPR) of 0.0%%.", "When comparing the two models based on AUC scores, it seems like the tfid vectorizer did not improve upon model accuracy, but even introduced more noise into the predictions! However, the tfid seems to have greatly improved the model\u2019s ability to detect ham messages to the point of 100% accuracy.", "Being a stubborn person, I still believe that better performance can be obtained, with a few tweaks.", "I now attempt to fit and transform the training data X_train using a Tfidf Vectorizer, while ignoring terms that have a document frequency strictly lower than 5. Further adding an additional feature, the length of document (number of characters), I then fit a Support Vector Classification (SVC) model with regularization C=10000.", "Using a logistic regression I further include the use of ngrams which allow the model to take into account groups of words, of max size 3, when considering whether a message is spam.", "After training and testing these 4 models, it\u2019s time to compare them. I primarily look at comparing them based on AUC scores as the TPR and TNR rates are all somewhat similar.", "The logistic regression had the highest AUC score, with the SVC model and MNNB 1 model being marginally behind. Relatively, the MNNB 2 model seemed to have underperformed the rest. However, I would still opine that all 4 models produce AUC scores which are much higher than 0.5, showing that all 4 perform good enough to beat a model that only randomly guesses the target.", "Do feel free to reach out to me on LinkedIn if you have questions or would like to discuss ideas on applying data science techniques in a post-Covid-19 world!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb4b015f7404b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b4b015f7404b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b4b015f7404b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@thedehan?source=post_page-----b4b015f7404b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thedehan?source=post_page-----b4b015f7404b--------------------------------", "anchor_text": "Dehan Chia"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb7b718ab5bb6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&user=Dehan+Chia&userId=b7b718ab5bb6&source=post_page-b7b718ab5bb6----b4b015f7404b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb4b015f7404b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb4b015f7404b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@hannes?utm_source=medium&utm_medium=referral", "anchor_text": "Hannes Johnson"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://archive.ics.uci.edu/ml/datasets/SMS+Spam+Collection", "anchor_text": "UCI\u2019s Machine Learning Repository"}, {"url": "https://github.com/dehan97/spam_classifier", "anchor_text": "github repo"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html", "anchor_text": "count vectorizer"}, {"url": "http://www.btechsmartclass.com/data_structures/sparse-matrix.html#:~:text=Sparse%20matrix%20is%20a%20matrix,only%2010%20non%2Dzero%20elements.", "anchor_text": "sparse matrix"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.MultinomialNB.html#:~:text=The%20multinomial%20Naive%20Bayes%20classifier,tf%2Didf%20may%20also%20work.", "anchor_text": "Multinomial Naive Bayes Classifier Model"}, {"url": "https://towardsdatascience.com/understanding-auc-roc-curve-68b2303cc9c5#:~:text=AUC%20%2D%20ROC%20curve%20is%20a,degree%20or%20measure%20of%20separability.&text=By%20analogy%2C%20Higher%20the%20AUC,with%20disease%20and%20no%20disease.", "anchor_text": "AUC-ROC"}, {"url": "https://towardsdatascience.com/understanding-auc-roc-curve-68b2303cc9c5#:~:text=AUC%20%2D%20ROC%20curve%20is%20a,degree%20or%20measure%20of%20separability.&text=By%20analogy%2C%20Higher%20the%20AUC,with%20disease%20and%20no%20disease.", "anchor_text": "this article"}, {"url": "https://www.kaggle.com/adamschroeder/countvectorizer-tfidfvectorizer-predict-comments", "anchor_text": "tfidf vectorizer"}, {"url": "https://github.com/dehan97/spam_classifier", "anchor_text": "code"}, {"url": "https://www.linkedin.com/in/dehan-c-948045177/", "anchor_text": "LinkedIn"}, {"url": "https://www.linkedin.com/in/dehan-c-948045177/", "anchor_text": "Dehan C. - Research Assistant - Singapore Management University | LinkedInView Dehan C.'s profile on LinkedIn, the world's largest professional community. Dehan has 2 jobs listed on their\u2026www.linkedin.com"}, {"url": "https://medium.com/@thedehan/pre-elections-sentiment-analysis-880bc5ad1db0", "anchor_text": "Pre-election Python Sentiment AnalysisSingapore\u2019s #GE2020SG in wordclouds and barcharts.medium.com"}, {"url": "https://medium.com/tag/data?source=post_page-----b4b015f7404b---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/tag/data-science?source=post_page-----b4b015f7404b---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/naturallanguageprocessing?source=post_page-----b4b015f7404b---------------naturallanguageprocessing-----------------", "anchor_text": "Naturallanguageprocessing"}, {"url": "https://medium.com/tag/nlp?source=post_page-----b4b015f7404b---------------nlp-----------------", "anchor_text": "NLP"}, {"url": "https://medium.com/tag/bayesian-statistics?source=post_page-----b4b015f7404b---------------bayesian_statistics-----------------", "anchor_text": "Bayesian Statistics"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb4b015f7404b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&user=Dehan+Chia&userId=b7b718ab5bb6&source=-----b4b015f7404b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb4b015f7404b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&user=Dehan+Chia&userId=b7b718ab5bb6&source=-----b4b015f7404b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb4b015f7404b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b4b015f7404b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb4b015f7404b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b4b015f7404b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b4b015f7404b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b4b015f7404b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b4b015f7404b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b4b015f7404b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b4b015f7404b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b4b015f7404b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b4b015f7404b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b4b015f7404b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thedehan?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@thedehan?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Dehan Chia"}, {"url": "https://medium.com/@thedehan/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "89 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb7b718ab5bb6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&user=Dehan+Chia&userId=b7b718ab5bb6&source=post_page-b7b718ab5bb6--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F6c6f2456b14&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fcreate-a-sms-spam-classifier-in-python-b4b015f7404b&newsletterV3=b7b718ab5bb6&newsletterV3Id=6c6f2456b14&user=Dehan+Chia&userId=b7b718ab5bb6&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}