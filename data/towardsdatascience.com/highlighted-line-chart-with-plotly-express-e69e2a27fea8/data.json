{"url": "https://towardsdatascience.com/highlighted-line-chart-with-plotly-express-e69e2a27fea8", "time": 1683015045.144536, "path": "towardsdatascience.com/highlighted-line-chart-with-plotly-express-e69e2a27fea8/", "webpage": {"metadata": {"title": "Highlighted line chart with Plotly.Express | by Vaclav Dekanovsky | Towards Data Science", "h1": "Highlighted line chart with Plotly.Express", "description": "Draw highlighted lines on the background of grey lines to show trends and data proportions. Simple with Plotly.Express."}, "outgoing_paragraph_urls": [{"url": "https://plotly.com/python/plotly-express/", "anchor_text": "Plotly.Express", "paragraph_index": 0}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Vizualizations/Plotly/Highlighted_Line_Chart_on_Grey_Lines_Background/Highlight_Lines_on_Grey_Background.ipynb", "anchor_text": "Github", "paragraph_index": 2}, {"url": "https://data.worldbank.org/indicator/ST.INT.ARVL", "anchor_text": "tourist arrivals", "paragraph_index": 3}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Vizualizations/Plotly/Preprocess/Preprocessing.ipynb", "anchor_text": "preprocess.ipynb notebook on github", "paragraph_index": 4}, {"url": "https://towardsdatascience.com/stop-persisting-pandas-data-frames-in-csvs-f369a6440af5", "anchor_text": "stored in python\u2019s pickle", "paragraph_index": 4}, {"url": "https://plotly.com/", "anchor_text": "plotly", "paragraph_index": 5}, {"url": "https://plotly.com/python/getting-started/#jupyterlab-support-python-35", "anchor_text": "jupyterlab-plotly", "paragraph_index": 7}, {"url": "https://plotly.com/python-api-reference/generated/plotly.express.line.html", "anchor_text": "number of parameters", "paragraph_index": 8}, {"url": "https://plotly.com/python-api-reference/generated/plotly.graph_objects.Figure.html#plotly.graph_objects.Figure.update_traces", "anchor_text": ".update_traces()", "paragraph_index": 11}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Vizualizations/Plotly/Highlighted_Line_Chart_on_Grey_Lines_Background/Highlight_Lines_on_Grey_Background.ipynb", "anchor_text": "Github", "paragraph_index": 19}, {"url": "https://www.python.org/dev/peps/pep-0515/", "anchor_text": "underscores in numeric literals due to PEP515", "paragraph_index": 25}, {"url": "https://plotly.com/dash/", "anchor_text": "Dash", "paragraph_index": 33}, {"url": "https://en.wikipedia.org/wiki/WebGL", "anchor_text": "WebGL format", "paragraph_index": 34}, {"url": "https://en.wikipedia.org/wiki/IIHF_World_Ranking", "anchor_text": "Ice-Hockey national team rankings", "paragraph_index": 35}, {"url": "https://en.wikipedia.org/wiki/OpenDocument", "anchor_text": ".ods", "paragraph_index": 36}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Vizualizations/Plotly/Highlighted_Line_Chart_on_Grey_Lines_Background/Highlight_Lines_on_Grey_Background.ipynb", "anchor_text": "Highlighted_Line_Chart_on_Grey_Lines_Background", "paragraph_index": 42}], "all_paragraphs": ["Creating interactive graphs with python\u2019s Plotly.Express from a data frame works like a charm. With a single line of code, you can explore the basic characteristics of your dataset. Adding a few more code-lines you can conjure up a really fancy but very narrative chart.", "In this exercise, I\u2019ll walk you through the process of drawing a thick colored line on the top of the shaded progress of the concurrent events. It has two enormous benefits:", "You can create all the charts with me, using the notebook stored on the Github. In this article you will learn:", "I\u2019ll use two datasets. The first about the progress of tourism around the world (tourist arrivals, 215 countries from 1995 to 2018), and the second showing ice-hockey national teams ranking in the last 6 years.", "The dataset is preprocessed in preprocess.ipynb notebook on github and stored in python\u2019s pickle.", "Plotly.Express was introduced in the version 4.0.0 of the plotly library and you can easily install it using:", "Plotly Express also requires pandas to be installed, otherwise, you will get this error when you try to import it.", "There are additional requirements if you want to use the plotly in Jupyter notebooks. For Jupyter Lab you need jupyterlab-plotly. In a regular notebook, I had to install nbformat (conda install -c anaconda nbformat)", "Creating the line chart with plotly cannot be easier. The syntax goes as px.line(df, parameters). It looks simple, but the number of parameters is quite big. It\u2019s also important to note that Plotly.Express loves long data structure (in contrast to wide structure), where each category and each value is a column.", "I\u2019ll draw and line chart for each country, showing yearly tourists in all the 215 countries. Plotly can handle that, but the chart won\u2019t tell you much information. You can switch off/on the lines, using the menu-legend on the right, but it\u2019s so long that you have to scroll through it to find your countries. When you hover over the lines a tooltip pops up providing details about the data.", "Let\u2019s say for your research or marketing purposes you should present the evolution of tourism in Japan \ud83c\uddef\ud83c\uddf5 and Turkey \ud83c\uddf9\ud83c\uddf7. So let\u2019s blur the other lines, giving them a grey shade similar to the background, and highlight the Japanese and Turkish lines by coloring them. You have a few options to do so.", "Using fig.update_traces({\"line\":{\"color\":\"lightgrey\"}}) changes the color of all lines to light grey. Then we use patch and selector arguments of the .update_traces(). The patch sets the parameters of the line and selector defines to which line they are applied.", "If you wonder how I know which values to supply to the dictionary, that {\"line\":{\"color\":\"blue\", \"width\":5} changes the properties of the line and that legendgroup is the right parameter to identify the line by Country name the easiest way is to read fig[\"data\"]. Each Plotly chart is a dictionary and all parameters can be changed when you update this dictionary.", "Each plotly chart is a dictionary. Use fig.to_dict() or fig[\u201cdata\u201d] to see the values.", "But the result is not what we wanted. Our traces showing tourism evolution in Japan and Turkey are somewhere in the middle. Some grey lines lie over them and some remain below.", "We can try Plotly\u2019s parameter category_orders which is meant to influence the order of the lines, but adding category_orders={\"Country Name\":[\"Japan\",\"Turkey\"]}) makes it even worse. These traces are displayed first and all the grey lines are on top of them.", "We can supply the full list of countries with Japan and Turkey at the end, but it\u2019s easier to sort the dataframe itself. We .map() order 1 to Japan and 2 to Turkey and fillna(3) to all the other lines, then sort the data frame by this value.", "Another option of how to color the lines is to supply a dictionary to the plotly\u2019s color_discrete_map parameter instead of applying fig.update_traces(). The dict structure is {trace_name: color}.", "To change the width, you can manipulate the Plotly\u2019s backend dictionary directly.", "Remember that all the code, including these various options on how to influence the look of the Plotly chart is available on Github.", "The chart still looks quite ugly. We have removed the legend and the axis and we don\u2019t even know how many visitors came to these countries. To show the viewer the important values, we must annotate the plot. Annotations are another dictionaries which are added into .fig.update_layout(..., annotations=[]). This annotation parameter contains a list of dictionaries and each dict is one annotation.", "You can influence many parameters of the annotation. Its position, font, and whether there is an arrow pointing from the annotation text to some point on the chart. The coordinates x and y of the text can either refer to the plot or the paper-canvas. In the first case, you specify the position using values displayed on the axes, in the second (0,0) is the bottom left corner of the plot area and (1,1) is the top right corner.", "The position also depends on the anchor (top-middle-bottom, left-center-right), offsets and adjustments. Each annotation can be modified by setting its font or HTML tags can be applied on the text like <b> or <i>.", "Look at this gist and the resulting plot to understand the options you have when annotating.", "If your annotations don\u2019t fit the canvas, you can increase the space around the plot with margin={\"l\": pixels, \"r\": px, \"t\": px, \"b\": px} inside the .update_layout().", "When we play a bit with our tourism chart, we can achieve quite good results. We set xref to paper and set it 0 for the beginning of the line. Adding xanchor=\"left\u201d will align while text to the left of the plot area. You can set yref=\u201dpaper\" and try to find the ideal position on the scale between 0 and 1, but it\u2019s easier not to set it as paper and use the exact position e.g. 3 300 000 (note that since python 3.6 you can use underscores in numeric literals due to PEP515 and write the million as 3_300_000)", "So the complete chart would look like this:", "I think the most interesting about annotations outside of the plot area is that you can refer x to be on the canvas and y using the coordinates on the chart. You can set, \"x\":0 (on the canvas), \"xanchor\":\"right and \"y\": 7_000_000 on the plot, \"ynachor\":\"middle\".", "The chart above is pretty impressive, isn\u2019t it, but what if you can add something more? What if you can give the users the option to highlight whatever data they want? That can be achieved with interactive buttons.", "Buttons are added via fig.update_layout(updatemenus=[]). You are now probably used to the fact, that each element is described by a python dictionary and buttons are no exception.", "Each of args, args2 also accepts 3 parameters \u2014 changes to the traces, changes to the layout, and list of traces that are influenced. E.g.", "The button set offers additional parameters influencing their position and style. Similarly to annotations, you can position the buttons around the plot. You can also choose between the single button, set of buttons, or a dropdown.", "Let\u2019s add buttons to switch on/off our two highlights about tourism in Japan and Turkey.", "The buttons in Plotly Express are not almighty. If you click on Japan and Turkey buttons without clearing the plot by the second-toggle-click, you will see both colored lines. I didn\u2019t find out how to ensure that one is dyed while all the others are grey. Such complex interaction can be achieved only with the Plotly\u2019s dashboard library \u2014 Dash. Its callback actions allow almost every imaginable output.", "You might also notice that so many lines, Plotly automatically picked WebGL format proven to improve the usability of the JavaScript plots with many data points.", "When I have first encountered this kind of chart, it displayed the rank of most popular national parks and how it evolved over time. I can\u2019t find this example anymore, so I\u2019ve decided to create one rank evolution chart of my own. I\u2019ll look at the Ice-Hockey national team rankings over the last 5 years.", "Because I have switched to Linux recently, I gathered the data manually into .ods spreadsheet. You can use pd.read_excel(path, engine=\"odf) to collect the data, but I had to install pip install odfpy to achieve that.", "Then you repeat the above code to display the overview of the ranks and highlight your favorite country. Here I had to deal with one new problem though. I wanted to show labels displaying the rank each year, only to this highlighted line (while it is supposed to be hidden for all the others).", "Again this problem had two solutions with slightly different results. You can either use fig.update_traces() and set both colors and labels. In this case, you must specify both text and mode:", "With this approach, the text is kind of ugly stick to the lines and I did not force it to lift. That can be done when you simply annotate with fig.update_layout(annotations=[]). You iterate over the data frame and prepare a list of dictionaries with each annotation:", "I hope you liked this introduction to the tricks you can do with python\u2019s Plotly Express. You have learned how to create the line chart containing a plethora of information and how to highlight important a part of this data to your audience. You have seen that there is often more than one approach to achieve the same. Finally, we have used the same approach of colored lines on the background of greyed ones to show changes in ranking.", "Do you have other use cases for this type of chart?", "All exercises can be walked through in this notebook on Github \u2014 Highlighted_Line_Chart_on_Grey_Lines_Background", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data scientist who loves to explore everything and write about the topics from multiple points of view."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fe69e2a27fea8&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://vdekanovsky.medium.com/?source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": ""}, {"url": "https://vdekanovsky.medium.com/?source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": "Vaclav Dekanovsky"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed473176733b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&user=Vaclav+Dekanovsky&userId=ed473176733b&source=post_page-ed473176733b----e69e2a27fea8---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe69e2a27fea8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe69e2a27fea8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://plotly.com/python/plotly-express/", "anchor_text": "Plotly.Express"}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Vizualizations/Plotly/Highlighted_Line_Chart_on_Grey_Lines_Background/Highlight_Lines_on_Grey_Background.ipynb", "anchor_text": "Github"}, {"url": "http://d18a", "anchor_text": "install"}, {"url": "https://data.worldbank.org/indicator/ST.INT.ARVL", "anchor_text": "tourist arrivals"}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Vizualizations/Plotly/Preprocess/Preprocessing.ipynb", "anchor_text": "preprocess.ipynb notebook on github"}, {"url": "https://towardsdatascience.com/stop-persisting-pandas-data-frames-in-csvs-f369a6440af5", "anchor_text": "stored in python\u2019s pickle"}, {"url": "https://plotly.com/", "anchor_text": "plotly"}, {"url": "https://plotly.com/python/getting-started/#jupyterlab-support-python-35", "anchor_text": "jupyterlab-plotly"}, {"url": "https://towardsdatascience.com/visualization-with-plotly-express-comprehensive-guide-eb5ee4b50b57", "anchor_text": "Visualization with Plotly.Express: Comprehensive guideOne dataset and over 70 charts. Interactivity and animation often in a single line of code.towardsdatascience.com"}, {"url": "https://plotly.com/python-api-reference/generated/plotly.express.line.html", "anchor_text": "number of parameters"}, {"url": "https://plotly.com/python-api-reference/generated/plotly.graph_objects.Figure.html#plotly.graph_objects.Figure.update_traces", "anchor_text": ".update_traces()"}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Vizualizations/Plotly/Highlighted_Line_Chart_on_Grey_Lines_Background/Highlight_Lines_on_Grey_Background.ipynb", "anchor_text": "Github"}, {"url": "https://www.python.org/dev/peps/pep-0515/", "anchor_text": "underscores in numeric literals due to PEP515"}, {"url": "https://plotly.com/dash/", "anchor_text": "Dash"}, {"url": "https://en.wikipedia.org/wiki/WebGL", "anchor_text": "WebGL format"}, {"url": "https://en.wikipedia.org/wiki/IIHF_World_Ranking", "anchor_text": "Ice-Hockey national team rankings"}, {"url": "https://en.wikipedia.org/wiki/OpenDocument", "anchor_text": ".ods"}, {"url": "https://partner.canva.com/vdek", "anchor_text": "canva.com"}, {"url": "https://towardsdatascience.com/histograms-with-plotly-express-complete-guide-d483656c5ad7", "anchor_text": "Plotly Histogram - Complete Guide"}, {"url": "https://towardsdatascience.com/complete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12", "anchor_text": "Everything you wanted to know about Kfold train-test split"}, {"url": "https://towardsdatascience.com/pythons-geocoding-convert-a-list-of-addresses-into-a-map-f522ef513fd6", "anchor_text": "How to turn a list of addreses into a map"}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Vizualizations/Plotly/Highlighted_Line_Chart_on_Grey_Lines_Background/Highlight_Lines_on_Grey_Background.ipynb", "anchor_text": "Highlighted_Line_Chart_on_Grey_Lines_Background"}, {"url": "https://medium.com/tag/python?source=post_page-----e69e2a27fea8---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/visualization?source=post_page-----e69e2a27fea8---------------visualization-----------------", "anchor_text": "Visualization"}, {"url": "https://medium.com/tag/plotly?source=post_page-----e69e2a27fea8---------------plotly-----------------", "anchor_text": "Plotly"}, {"url": "https://medium.com/tag/data-analysis?source=post_page-----e69e2a27fea8---------------data_analysis-----------------", "anchor_text": "Data Analysis"}, {"url": "https://medium.com/tag/interactive?source=post_page-----e69e2a27fea8---------------interactive-----------------", "anchor_text": "Interactive"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe69e2a27fea8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&user=Vaclav+Dekanovsky&userId=ed473176733b&source=-----e69e2a27fea8---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fe69e2a27fea8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&user=Vaclav+Dekanovsky&userId=ed473176733b&source=-----e69e2a27fea8---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fe69e2a27fea8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fe69e2a27fea8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----e69e2a27fea8---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----e69e2a27fea8--------------------------------", "anchor_text": ""}, {"url": "https://vdekanovsky.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://vdekanovsky.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Vaclav Dekanovsky"}, {"url": "https://vdekanovsky.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "623 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed473176733b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&user=Vaclav+Dekanovsky&userId=ed473176733b&source=post_page-ed473176733b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F41f38caa0bb5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhighlighted-line-chart-with-plotly-express-e69e2a27fea8&newsletterV3=ed473176733b&newsletterV3Id=41f38caa0bb5&user=Vaclav+Dekanovsky&userId=ed473176733b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}