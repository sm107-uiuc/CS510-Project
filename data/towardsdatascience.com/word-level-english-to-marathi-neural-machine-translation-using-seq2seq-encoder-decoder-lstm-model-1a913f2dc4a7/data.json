{"url": "https://towardsdatascience.com/word-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7", "time": 1682994917.34235, "path": "towardsdatascience.com/word-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7/", "webpage": {"metadata": {"title": "Word Level English to Marathi Neural Machine Translation using Encoder-Decoder Model | by Harshall Lamba | Towards Data Science", "h1": "Word Level English to Marathi Neural Machine Translation using Encoder-Decoder Model", "description": "Recurrent Neural Networks (or more precisely LSTM/GRU) have been found to be very effective in solving complex sequence related problems given a large amount of data. They have real time applications\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.analyticsvidhya.com/blog/2018/04/sequence-modelling-an-introduction-with-practical-use-cases/", "anchor_text": "blog", "paragraph_index": 0}, {"url": "http://karpathy.github.io/2015/05/21/rnn-effectiveness/", "anchor_text": "The Unreasonable Effectiveness of Recurrent Neural Networks", "paragraph_index": 8}, {"url": "http://colah.github.io/posts/2015-08-Understanding-LSTMs/", "anchor_text": "Understanding LSTM Networks", "paragraph_index": 8}, {"url": "https://machinelearningmastery.com/teacher-forcing-for-recurrent-neural-networks/", "anchor_text": "blog", "paragraph_index": 49}, {"url": "http://www.manythings.org/anki/", "anchor_text": "here", "paragraph_index": 66}, {"url": "https://github.com/hlamba28/Word-Level-Eng-Mar-NMT.git", "anchor_text": "here", "paragraph_index": 88}, {"url": "https://www.linkedin.com/in/harshall-lamba-55a14a4b", "anchor_text": "here", "paragraph_index": 90}], "all_paragraphs": ["Recurrent Neural Networks (or more precisely LSTM/GRU) have been found to be very effective in solving complex sequence related problems given a large amount of data. They have real time applications in speech recognition, Natural Language Processing (NLP) problems, time series forecasting, etc. This blog nicely explains some of these applications.", "Sequence to Sequence (often abbreviated to seq2seq) models are a special class of Recurrent Neural Network architectures typically used (but not restricted) to solve complex Language related problems like Machine Translation, Question Answering, creating Chat-bots, Text Summarization, etc.", "The purpose of this blog post is to give a detailed explanation on how sequence to sequence models are built and to give an intuitive understanding of how they solve these complex tasks.", "We will take the problem of Machine Translation (translating a text from one language to another, in our case from English to Marathi) as the running example in this blog. However the technical details apply to any sequence to sequence problem in general.", "Since we are using Neural Networks to perform Machine Translation, more commonly it is called as Neural Machine translation (NMT).", "a. Know Fundamental concepts in Machine Learning and Neural Networks", "b. Know High School Linear Algebra and Probability", "c. Have working knowledge of LSTM networks in Python and Keras", "The Unreasonable Effectiveness of Recurrent Neural Networks (explains how RNNs can be used to build language models) and Understanding LSTM Networks (explains the working of LSTMs with solid intuition) are two brilliant blogs that I strongly suggest to go through if you haven\u2019t. The concepts explained in these blogs are extensively used in my post.", "The most common architecture used to build Seq2Seq models is the Encoder Decoder architecture. This is the one we will use for this post. Below is a very high level view of this architecture.", "a. Both encoder and the decoder are typically LSTM models (or sometimes GRU models)", "b. Encoder reads the input sequence and summarizes the information in something called as the internal state vectors (in case of LSTM these are called as the hidden state and cell state vectors). We discard the outputs of the encoder and only preserve the internal states.", "c. Decoder is an LSTM whose initial states are initialized to the final states of the Encoder LSTM. Using these initial states, decoder starts generating the output sequence.", "d. The decoder behaves a bit differently during the training and inference procedure. During the training, we use a technique call teacher forcing which helps to train the decoder faster. During inference, the input to the decoder at each time step is the output from the previous time step.", "e. Intuitively, the encoder summarizes the input sequence into state vectors (sometimes also called as Thought vectors), which are then fed to the decoder which starts generating the output sequence given the Thought vectors. The decoder is just a language model conditioned on the initial states.", "Now we will understand all the above steps in detail by considering the example of translating an English sentence (input sequence) into its equivalent Marathi sentence (output sequence).", "This section provides a brief overview of the main components of the Encoder LSTM. I will keep this intuitive without going into the Mathematical arena. So here\u2019s what they are:", "The LSTM reads the data one sequence after the other. Thus if the input is a sequence of length \u2018k\u2019, we say that LSTM reads it in \u2018k\u2019 time steps (think of this as a for loop with \u2018k\u2019 iterations).", "Referring to the above diagram, below are the 3 main components of an LSTM:", "a. Xi => Input sequence at time step i", "b. hi and ci => LSTM maintains two states (\u2018h\u2019 for hidden state and \u2018c\u2019 for cell state) at each time step. Combined together these are internal state of the LSTM at time step i.", "c. Yi => Output sequence at time step i", "Important: Technically all of these components (Xi, hi, ci and Yi) are actually vectors of floating point numbers (explained below)", "Let\u2019s try to map all of these in the context of our problem. Recall that our problem is to translate an English sentence to its Marathi equivalent. For the purpose of this blog we will consider the below example. Say, we have the following sentence", "Input sentence (English)=> \u201cRahul is a good boy\u201d", "For now just focus on the input i.e. the English sentence", "Now a sentence can be seen as a sequence of either words or characters. For example in case of words, the above English sentence can be thought of as a sequence of 5 words (\u2018Rahul\u2019, \u2018is\u2019, \u2018a\u2019, \u2018good\u2019, \u2018boy\u2019). And in case of characters, it can be thought of as a sequence of 19 characters (\u2018R\u2019, \u2018a\u2019, \u2018h\u2019, \u2018u\u2019, \u2018l\u2019, \u2018 \u2018, \u2026\u2026, \u2018y\u2019).", "We will break the sentence by words as this scheme is more common in real world applications. Hence the name \u2018Word Level NMT\u2019. So, referring to the diagram above, we have the following input:", "The LSTM will read this sentence word by word in 5 time steps as follows", "But one question that we must answer is how to represent each Xi (each word) as a vector?", "There are various word embedding techniques which map (embed) a word into a fixed length vector. I will assume the reader to be familiar with the concept of word embeddings and won\u2019t cover this topic in detail. However, we will use the built-in Embedding Layer of the Keras API to map each word into a fixed length vector.", "The next question is what is the role of the internal states (hi and ci) at each time step?", "In very simple terms, they remember what the LSTM has read (learned) till now. For example:", "h3, c3 =>These two vectors will remember that the network has read \u201cRahul is a\u201d till now. Basically its the summary of information till time step 3 which is stored in the vectors h3 and c3 (thus called the states at time step 3).", "Similarly, we can thus say that h5, c5 will contain the summary of the entire input sentence, since this is where the sentence ends (at time step 5). These states coming out of the last time step are also called as the \u201cThought vectors\u201d as they summarize the entire sequence in a vector form.", "Then what about h0,c0? These vectors are typically initialized to zero as the model has not yet started to read the input.", "Note: The size of both of these vectors is equal to number of units (neurons) used in the LSTM cell.", "Finally, what about Yi at each time step? These are the output (predictions) of the LSTM model at each time step.", "But what type of a vector is Yi? More specifically in case of word level language models each Yi is actually a probability distribution over the entire vocabulary which is generated by using a softmax activation. Thus each Yi is a vector of size \u201cvocab_size\u201d representing a probability distribution.", "Depending on the context of the problem they might sometimes be used or sometimes be discarded.", "In our case we have nothing to output unless we have read the entire English sentence. Because we will start generating the output sequence (equivalent Marathi sentence) once we have read the entire English sentence. Thus we will discard the Yi of the Encoder for our problem.", "We will read the input sequence (English sentence) word by word and preserve the internal states of the LSTM network generated after the last time step hk, ck (assuming the sentence has \u2018k\u2019 words). These vectors (states hk and ck) are called as the encoding of the input sequence, as they encode (summarize) the entire input in a vector form. Since we will start generating the output once we have read the entire sequence, outputs (Yi) of the Encoder at each time step are discarded.", "Moreover you must also understand what type of vectors are Xi, hi, ci and Yi. What are their sizes (shapes) and what do they represent. If you have any confusion understanding this part, then you need to first strengthen your understanding of LSTM and language models.", "Unlike the Encoder LSTM which has the same role to play in both the training phase as well as in the inference phase, the Decoder LSTM has a slightly different role to play in both of these phases.", "In this section we\u2019ll try to understand how to configure the Decoder during the training phase, while in the next section we\u2019ll understand how to use it during inference.", "Recall that given the input sentence \u201cRahul is a good boy\u201d, the goal of the training process is to train (teach) the decoder to output \u201c\u0930\u093e\u0939\u0941\u0932 \u091a\u093e\u0902\u0917\u0932\u093e \u092e\u0941\u0932\u0917\u093e \u0906\u0939\u0947\u201d. Just as the Encoder scanned the input sequence word by word, similarly the Decoder will generate the output sequence word by word.", "For some technical reasons (explained later) we will add two tokens in the output sequence as follows:", "The most important point is that the initial states (h0, c0) of the decoder are set to the final states of the encoder. This intuitively means that the decoder is trained to start generating the output sequence depending on the information encoded by the encoder. Obviously the translated Marathi sentence must depend on the given English sentence.", "In the first time step we provide the START_ token so that the decoder starts generating the next token (the actual first word of Marathi sentence). And after the last word in the Marathi sentence, we make the decoder learn to predict the _END token. This will be used as the stopping condition during the inference procedure, basically it will denote the end of the translated sentence and we will stop the inference loop (more on this later).", "We use a technique called \u201cTeacher Forcing\u201d wherein the input at each time step is given as the actual output (and not the predicted output) from the previous time step. This helps in more faster and efficient training of the network. To understand more about teacher forcing, refer this blog.", "Finally the loss is calculated on the predicted outputs from each time step and the errors are back propagated through time in order to update the parameters of the network. Training the network over longer period with sufficiently large amount of data results in pretty good predictions (translations) as we\u2019ll see later.", "The entire training process (Encoder + Decoder) can be summarized in the below diagram:", "Let\u2019s now try to understand the setup required for inference. As already stated the Encoder LSTM plays the same role of reading the input sequence (English sentence) and generating the thought vectors (hk, ck).", "However, the decoder now has to predict the entire output sequence (Marathi sentence) given these thought vectors.", "Let\u2019s try to visually understand by taking the same example.", "Input sequence => \u201cRahul is a good boy\u201d", "Step 1: Encode the input sequence into the Thought Vectors:", "Step 2: Start generating the output sequence in a loop, word by word:", "a. During inference, we generate one word at a time. Thus the Decoder LSTM is called in a loop, every time processing only one time step.", "b. The initial states of the decoder are set to the final states of the encoder.", "c. The initial input to the decoder is always the START_ token.", "d. At each time step, we preserve the states of the decoder and set them as initial states for the next time step.", "e. At each time step, the predicted output is fed as input in the next time step.", "f. We break the loop when the decoder predicts the END_ token.", "The entire inference procedure can be summarized in the below diagram:", "Nothing beats the understanding developed when we actually implement the code, no matter how much efforts are put in to understand the theory (that does not however mean that we do not discuss any theory, but what I mean to say is theory must always be followed by implementation).", "Download and unzip mar-eng.zip file from here.", "Before we start building the models, we need to perform some data cleaning and preparation. Without going into too much details, I will assume the reader to understand the below (self explanatory) steps that are usually a part of any language processing project.", "Below we compute the vocabulary for both English and Marathi. We also compute the vocabulary sizes and the length of maximum sequence for both the languages. Finally we create 4 Python dictionaries (two for each language) to convert a given token into an integer index and vice-versa.", "Then we make a 90\u201310 train and test split and write a Python generator function to load the data in batches as follows:", "Then we define the model required for training as follows:", "You should be able to conceptually connect each and every line with the explanation I have provided in sections 4 and 5 above.", "Let\u2019s look at the model architecture generated from the plot_model utility of the Keras.", "We train the network for 50 epochs with a batch size of 128. On a P4000 GPU, it takes slightly more than 2 hours to train.", "Finally, we generate the output sequence by invoking the above setup in a loop as follows:", "At this point you must be able to conceptually connect each and every line of the code in the above two blocks with the explanation provided in section 6.", "The purpose of this blog post was to give an intuitive explanation on how to build basic level sequence to sequence models using LSTM and not to develop a top quality language translator. So keep in mind that the results are not world class (and you don\u2019t start comparing with google translate) for many reasons. The most important reason being is that the dataset size is very small, only 33000 pairs of sentences (yes these are too few). If you want to improve the quality of translations, I will list some suggestions towards the end of this blog. However for now, let\u2019s see some results generated from the above model (they are not too bad either).", "Even though the results are not the best, they are not that bad as well. Certainly much better than what a randomly generated sequence would result in. In some sentences we can even note that the words predicted are not correct but they are semantically quite close to the correct words.", "Also, another point to be noticed is that the results on training set are a bit better than the results on test set, which indicates that the model might be over-fitting a bit.", "If you are interested to improve the quality, you can try out below measures:", "a. Get much more data. Top quality translators are trained on millions of sentence pairs.", "b. Build more complex models like Attention.", "c. Use dropout and other forms of regularization techniques to mitigate over-fitting.", "d. Perform Hyper-parameter tuning. Play with learning rate, batch size, dropout rate, etc. Try using bidirectional Encoder LSTM. Try using multi-layered LSTMs.", "e. Try using beam search instead of a greedy approach.", "f. Try BLEU score to evaluate your model.", "g. The list is never ending and goes on.", "If the article appeals you, do provide some comments, feedback, constructive criticism, etc.", "Full code on my GitHub repo here.", "If you like my explanations, you can follow me as I plan to release some more interesting blogs related to Deep Learning and AI.", "You can connect on LinkedIn here", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1a913f2dc4a7&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@harshall.lamba?source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@harshall.lamba?source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": "Harshall Lamba"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa35dfc76e885&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&user=Harshall+Lamba&userId=a35dfc76e885&source=post_page-a35dfc76e885----1a913f2dc4a7---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1a913f2dc4a7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1a913f2dc4a7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.analyticsvidhya.com/blog/2018/04/sequence-modelling-an-introduction-with-practical-use-cases/", "anchor_text": "blog"}, {"url": "https://www.analyticsvidhya.com/blog/2018/04/sequence-modelling-an-introduction-with-practical-use-cases/", "anchor_text": "https://www.analyticsvidhya.com/blog/2018/04/sequence-modelling-an-introduction-with-practical-use-cases/"}, {"url": "http://karpathy.github.io/2015/05/21/rnn-effectiveness/", "anchor_text": "The Unreasonable Effectiveness of Recurrent Neural Networks"}, {"url": "http://colah.github.io/posts/2015-08-Understanding-LSTMs/", "anchor_text": "Understanding LSTM Networks"}, {"url": "https://towardsdatascience.com/sequence-to-sequence-model-introduction-and-concepts-44d9b41cd42d", "anchor_text": "https://towardsdatascience.com/sequence-to-sequence-model-introduction-and-concepts-44d9b41cd42d"}, {"url": "https://machinelearningmastery.com/teacher-forcing-for-recurrent-neural-networks/", "anchor_text": "blog"}, {"url": "http://www.manythings.org/anki/", "anchor_text": "here"}, {"url": "https://github.com/hlamba28/Word-Level-Eng-Mar-NMT.git", "anchor_text": "here"}, {"url": "https://www.linkedin.com/in/harshall-lamba-55a14a4b", "anchor_text": "here"}, {"url": "https://medium.com/@dev.elect.iitd/neural-machine-translation-using-word-level-seq2seq-model-47538cba8cd7", "anchor_text": "https://medium.com/@dev.elect.iitd/neural-machine-translation-using-word-level-seq2seq-model-47538cba8cd7"}, {"url": "https://blog.keras.io/a-ten-minute-introduction-to-sequence-to-sequence-learning-in-keras.html", "anchor_text": "https://blog.keras.io/a-ten-minute-introduction-to-sequence-to-sequence-learning-in-keras.html"}, {"url": "https://arxiv.org/abs/1409.3215", "anchor_text": "https://arxiv.org/abs/1409.3215"}, {"url": "https://arxiv.org/abs/1406.1078", "anchor_text": "https://arxiv.org/abs/1406.1078"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----1a913f2dc4a7---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----1a913f2dc4a7---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/lstm?source=post_page-----1a913f2dc4a7---------------lstm-----------------", "anchor_text": "Lstm"}, {"url": "https://medium.com/tag/seq2seq?source=post_page-----1a913f2dc4a7---------------seq2seq-----------------", "anchor_text": "Seq2seq"}, {"url": "https://medium.com/tag/machine-translation?source=post_page-----1a913f2dc4a7---------------machine_translation-----------------", "anchor_text": "Machine Translation"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1a913f2dc4a7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&user=Harshall+Lamba&userId=a35dfc76e885&source=-----1a913f2dc4a7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1a913f2dc4a7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&user=Harshall+Lamba&userId=a35dfc76e885&source=-----1a913f2dc4a7---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1a913f2dc4a7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F1a913f2dc4a7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----1a913f2dc4a7---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----1a913f2dc4a7--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@harshall.lamba?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@harshall.lamba?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Harshall Lamba"}, {"url": "https://medium.com/@harshall.lamba/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.2K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fa35dfc76e885&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&user=Harshall+Lamba&userId=a35dfc76e885&source=post_page-a35dfc76e885--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fbafcdf1b349d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fword-level-english-to-marathi-neural-machine-translation-using-seq2seq-encoder-decoder-lstm-model-1a913f2dc4a7&newsletterV3=a35dfc76e885&newsletterV3Id=bafcdf1b349d&user=Harshall+Lamba&userId=a35dfc76e885&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}