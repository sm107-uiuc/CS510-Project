{"url": "https://towardsdatascience.com/topic-modeling-on-pycaret-2ce0c65ba3ff", "time": 1683008704.247435, "path": "towardsdatascience.com/topic-modeling-on-pycaret-2ce0c65ba3ff/", "webpage": {"metadata": {"title": "Topic Modeling on PyCaret. A beginner\u2019s guide to PyCaret\u2019s natural\u2026 | by Ednalyn C. De Dios | Towards Data Science", "h1": "Topic Modeling on PyCaret", "description": "I remember a brief conversation with my boss\u2019 boss a while back. He said that he wouldn\u2019t be impressed if somebody in the company built a face recognition tool from scratch because, and I quote\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/u/298258b6d26f?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": "Prateek Baghel", "paragraph_index": 6}, {"url": "https://medium.com/u/dd4eda19e229?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": "Lettier", "paragraph_index": 30}, {"url": "https://twitter.com/ecdedios", "anchor_text": "Twitter", "paragraph_index": 42}, {"url": "https://www.linkedin.com/in/ednalyn-de-dios/", "anchor_text": "LinkedIn", "paragraph_index": 42}, {"url": "https://medium.com/@ednalyn.dedios/membership", "anchor_text": "https://medium.com/@ednalyn.dedios/membership", "paragraph_index": 44}], "all_paragraphs": ["I remember a brief conversation with my boss\u2019 boss a while back. He said that he wouldn\u2019t be impressed if somebody in the company built a face recognition tool from scratch because, and I quote, \u201cGuess what? There\u2019s an API for that.\u201d He then goes on about the futility of doing something that\u2019s already been done instead of just using it.", "This gave me an insight into how an executive thinks. Not that they don\u2019t care about the coolness factor of a project, but at the end of that day, they\u2019re most concerned about how a project will add value to the business and even more importantly, how quickly it can be done.", "In the real world, the time it takes to build prototype matters. And the quicker we get from data to insights, the better off we will be. These help us stay agile.", "And this brings me to PyCaret.", "PyCaret is an open source, low-code machine learning library in Python that allows you to go from preparing your data to deploying your model within seconds in your choice of notebook environment.", "Pycaret is basically a wrapper for some of the most popular machine learning libraries and frameworks scikit-learn and spaCy. Here are the things that PyCaret can do:", "If you\u2019re interested in reading about the difference between traditional NLP approach vs. PyCaret\u2019s NLP module, check out Prateek Baghel\u2019s article:", "In just a few lines of code, PyCaret makes natural language processing so easy that it\u2019s almost criminal. Like most of its other modules, PyCaret\u2019s NLP module streamlined pipeline cuts the time from data to insights in more than half the time.", "For example, with only one line, it performs text processing automatically, with the ability to customize stop words. Add another line or two, and you got yourself a language model. With yet another line, it gives you a properly formatted plotly graph. And finally, adding another line gives you the option to evaluate the model. You can even tune the model with, guess what, one line of code!", "Instead of just telling you all about the wonderful features of PyCaret, maybe it\u2019s be better if we do a little show and tell instead.", "For this post, we\u2019ll create an NLP pipeline that involves the following 6 glorious steps:", "We will be going through an end-to-end demonstration of this pipeline with a brief explanation of the functions involved and their parameters.", "Let us begin by installing PyCaret. If this is your first time installing it, just type the following into your terminal:", "However, if you have a previously installed version of PyCaret, you can upgrade using the following command:", "Beware: PyCaret is a big library so it\u2019s going to take a few minutes to download and install.", "We\u2019ll also need to download the English language model because it is not included in the PyCaret installation.", "Next, let\u2019s fire up a Jupyter notebook and import PyCaret\u2019s NLP module:", "Importing the pycaret.nlp automatically sets up your environment to perform NLP tasks only.", "Before setup, we need to decide first how we\u2019re going to ingest data. There are two methods of getting the data into the pipeline. One is by using a Pandas dataframe and another is by using a simple list of textual data.", "Above, we\u2019re simply loading the data into a dataframe.", "Above, we\u2019re opening the file 'list.txt' and reading it. We assign the resulting list into the lines.", "From the rest of this experiment, we\u2019ll just use a dataframe to pass textual data to thesetup() function of the NLP module. And for the sake of expediency, we\u2019ll sample the dataframe to only select a thousand tweets.", "Let\u2019s take a quick look at our dataframe with df.head() and df.shape.", "In the line below, we\u2019ll initialize the setup by calling the setup() function and assign it to nlp.", "With data and target, we\u2019re telling PyCaret that we\u2019d like to use the values in the 'text' column of df. Also, we\u2019re setting the session_id to an arbitrary number of 493 so that we can reproduce the experiment over and over again and get the same result. Finally, we added custom_stopwords so that PyCaret will exclude the specified list of words in the analysis.", "Note that if we want to use a list instead, we could replace df with lines and get rid of target = \u2018text\u2019 because a list has no columns for the PyCaret to target!", "The output table above confirms our session id, number of documents (rows or records), and vocabulary size. It also shows up if we used custom stopwords or not.", "Below, we\u2019ll create the model by calling the create_model() function and assign it to lda. The function already knows to use the dataset that we specified during setup(). In our case, the PyCaret knows we want to create a model based on the 'text' in df.", "In the line above, notice that w param used 'lda' as the parameter. LDA stands for Latent Dirichlet Allocation. We could\u2019ve just as easily opted for other types of models.", "Here\u2019s the list of models that PyCaret currently supports:", "I encourage you to research the difference between the models above, To start, check out Lettier\u2019s awesome guide on LDA.", "The next parameter we used is num_topics = 6. This tells PyCaret to use six topics in the results ranging from 0 to 5. If num_topic is not set, the default number is 4. Lastly, we set multi_core to tell PyCaret to use all available CPUs for parallel processing. This saves a lot of computational time.", "By calling assign_model(), we\u2019re going to label our data so that we\u2019ll get a dataframe (based on our original dataframe: df) with additional columns that include the following information:", "Let\u2019s take a look at df_lda.", "Calling the plot_model() function will give us some visualization about frequency, distribution, polarity, et cetera. The plot_model() function takes three parameters: model, plot, and topic_num. The model instructs PyCaret what model to use and must be preceded by a create_model() function. topic_num designates which topic number (from 0 to 5) will the visualization be based on.", "PyCarets offers a variety of plots. The type of graph generated will depend on the plot parameter. Here is the list of currently available visualizations:", "Evaluating the models involves calling the evaluate_model() function. It takes only one parameter: the model to be used. In our case, the model is stored is lda that was created with the create_model() function in an earlier step.", "The function returns a visual user interface for plotting.", "Using PyCaret\u2019s NLP module, we were able to quickly from getting the data to evaluating the model in just a few lines of code. We covered the functions involved in each step and examined the parameters of those functions.", "Thank you for reading! PyCaret\u2019s NLP module has a lot more features and I encourage you to read their documentation to further familiarize yourself with the module and maybe even the whole library!", "In the next post, I\u2019ll continue to explore PyCaret\u2019s functionalities.", "If you want to learn more about my journey from slacker to data scientist, check out the article below:", "You can reach me on Twitter or LinkedIn.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Machine Learning Engineer / Data Scientist / Python Developer / Food Lover https://medium.com/@ednalyn.dedios/membership"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F2ce0c65ba3ff&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@ednalyn.dedios?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ednalyn.dedios?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": "Ednalyn C. De Dios"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F92e30e2c69cb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&user=Ednalyn+C.+De+Dios&userId=92e30e2c69cb&source=post_page-92e30e2c69cb----2ce0c65ba3ff---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2ce0c65ba3ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2ce0c65ba3ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@gabrielgurrola?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Gabriel Gurrola"}, {"url": "https://unsplash.com/s/photos/carrots?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://medium.com/u/298258b6d26f?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": "Prateek Baghel"}, {"url": "https://towardsdatascience.com/nlp-classification-in-python-pycaret-approach-vs-the-traditional-approach-602d38d29f06", "anchor_text": "NLP Classification in PythonA comparative analysis between The Traditional Approach and PyCaret Approachtowardsdatascience.com"}, {"url": "https://medium.com/u/dd4eda19e229?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": "Lettier"}, {"url": "https://medium.com/@lettier/how-does-lda-work-ill-explain-using-emoji-108abf40fa7d", "anchor_text": "Your Guide to Latent Dirichlet AllocationBefore we get started, I made a tool (here\u2019s the source) that runs LDA right inside your browser (it\u2019s pretty neat). Be\u2026medium.com"}, {"url": "https://towardsdatascience.com/from-slacker-to-data-scientist-b4f34aa10ea1", "anchor_text": "From Slacker to Data ScientistMy journey into data science without a degree.towardsdatascience.com"}, {"url": "https://twitter.com/ecdedios", "anchor_text": "Twitter"}, {"url": "https://www.linkedin.com/in/ednalyn-de-dios/", "anchor_text": "LinkedIn"}, {"url": "https://pycaret.org/", "anchor_text": "https://pycaret.org/"}, {"url": "https://medium.com/tag/data-science?source=post_page-----2ce0c65ba3ff---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/nlp?source=post_page-----2ce0c65ba3ff---------------nlp-----------------", "anchor_text": "NLP"}, {"url": "https://medium.com/tag/pycaret?source=post_page-----2ce0c65ba3ff---------------pycaret-----------------", "anchor_text": "Pycaret"}, {"url": "https://medium.com/tag/topic-modeling?source=post_page-----2ce0c65ba3ff---------------topic_modeling-----------------", "anchor_text": "Topic Modeling"}, {"url": "https://medium.com/tag/python?source=post_page-----2ce0c65ba3ff---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2ce0c65ba3ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&user=Ednalyn+C.+De+Dios&userId=92e30e2c69cb&source=-----2ce0c65ba3ff---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F2ce0c65ba3ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&user=Ednalyn+C.+De+Dios&userId=92e30e2c69cb&source=-----2ce0c65ba3ff---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F2ce0c65ba3ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F2ce0c65ba3ff&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----2ce0c65ba3ff---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----2ce0c65ba3ff--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ednalyn.dedios?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ednalyn.dedios?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ednalyn C. De Dios"}, {"url": "https://medium.com/@ednalyn.dedios/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "838 Followers"}, {"url": "https://medium.com/@ednalyn.dedios/membership", "anchor_text": "https://medium.com/@ednalyn.dedios/membership"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F92e30e2c69cb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&user=Ednalyn+C.+De+Dios&userId=92e30e2c69cb&source=post_page-92e30e2c69cb--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F508dc0490c9a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftopic-modeling-on-pycaret-2ce0c65ba3ff&newsletterV3=92e30e2c69cb&newsletterV3Id=508dc0490c9a&user=Ednalyn+C.+De+Dios&userId=92e30e2c69cb&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}