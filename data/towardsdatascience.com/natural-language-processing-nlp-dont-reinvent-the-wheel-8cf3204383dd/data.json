{"url": "https://towardsdatascience.com/natural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd", "time": 1683012329.951696, "path": "towardsdatascience.com/natural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd/", "webpage": {"metadata": {"title": "NLP: Don't Reinvent the Wheel! | Towards Data Science", "h1": "Natural Language Processing (NLP): Don\u2019t Reinvent the Wheel", "description": "NLP can be difficult and time consuming. Learn how to use Python libraries to accelerate your development process and get great results!"}, "outgoing_paragraph_urls": [{"url": "https://github.com/keon/awesome-nlp", "anchor_text": "this repository", "paragraph_index": 21}, {"url": "https://github.com/avgupta456/medium_nlp/blob/master/Pre-Processing.ipynb", "anchor_text": "here", "paragraph_index": 25}, {"url": "https://github.com/avgupta456/medium_nlp/blob/master/Similarity.ipynb", "anchor_text": "here", "paragraph_index": 35}, {"url": "https://github.com/avgupta456/medium_nlp/blob/master/Sentiment.ipynb", "anchor_text": "the Jupyter Notebook", "paragraph_index": 41}, {"url": "https://www.linkedin.com/in/avgupta456/", "anchor_text": "LinkedIn", "paragraph_index": 46}], "all_paragraphs": ["Natural language processing (NLP) is an intimidating name for an intimidating field. Generating useful insight from unstructured text is hard, and there are countless techniques and algorithms out there, each with their own use-cases and complexities. As a developer with minimal NLP exposure, it can be difficult to know which methods to use, and how to implement them. I\u2019m here to help.", "If I were to offer perfect results for minimal effort, you would be right to be skeptical. Instead, using the 80/20 Principle, I\u2019ll show you how to quickly (20%) deliver solutions, without significantly sacrificing outcomes (80%).", "\u201cThe 80/20 Principle exerts that a minority of causes, inputs, or efforts usually leads to a majority of results, outputs, or rewards\u201d", "-Richard Koch, author of The 80/20 Principle", "How exactly will we achieve this goal? With some fantastic Python libraries! Instead of reinventing the wheel, we may stand on the shoulders of giants and innovate quickly. With pre-tested implementations and pre-trained models, we will focus on applying these methods and creating value.", "This article is intended for developers looking to quickly integrate natural language processing into their projects. With an emphasis on ease of use and rapid results comes the downside of reduced performance. In my experience, 80% of cutting-edge is plenty for projects, but look elsewhere for NLP research :)", "Natural language processing is a subfield of linguistics, computer science, and artificial intelligence, allowing for the automatic processing of text by software. NLP gives machines the ability to read, understand, and respond to messy, unstructured text.", "People often treat NLP as a subset of machine learning, but the reality is more nuanced.", "Some NLP tools rely on machine learning, and some even use deep learning. However these methods often rely on large datasets and are difficult to implement. Instead, we will focus on simpler, rule-based methods to speed up the development cycle.", "Starting with the smallest unit of data, a character is a single letter, number, or punctuation. A word is a list of characters, and a sentence is a list of words. A document is a list of sentences, and a corpus is a list of documents.", "Pre-processing is perhaps the most important step to a NLP project, and involves cleaning your inputs so your models can ignore the noise and focus on what matters most. A strong pre-processing pipeline will improve the performance of all your models, so I cannot stress it\u2019s value enough.", "Below are some common pre-processing steps:", "For a more thorough introduction to these concepts, check out this amazing guide:", "These steps are the foundation of a successful pre-processing pipeline. Depending on your dataset and task, you may skip certain steps or add new ones. Manually observe your data through pre-processing, and correct issues as they arise.", "Let\u2019s take a look at a couple leading Python libraries for NLP. These tools will handle most of the heavy lifting during and especially after pre-processing", "The Natural Language Tool Kit is the most widely-used NLP library for Python. Developed at UPenn for academic purposes, NLTK has a plethora of features and corpora. NLTK is great for playing with data and running pre-processing.", "Here is an example from the NLTK website showing how simple it is to tokenize a sentence and tag parts of speech.", "SpaCy is a modern and opinionated package. While NLTK has multiple implementations of each feature, SpaCy keeps only the best performing ones. Spacy supports a wide range of features, read the docs for more details:", "In just a few lines, we are able to perform Named Entity Recognition with SpaCy. Many other tasks can be accomplished quickly using the SpaCy API.", "Unlike NLTK and SpaCy, GenSim specifically tackles the problem of information retrieval (IR). Developed with an emphasis on memory management, GenSim contains many models for document similarity, including Latent Semantic Indexing, Word2Vec, and FastText.", "Below is an example of a pre-trained GenSim Word2Vec model that finds word similarities. Without worrying about the messy details, we can quickly get results.", "This list is by no means comprehensive, but covers a range of features and use-cases. I recommend checking this repository for more tools and references.", "Now that we have discussed pre-processing methods and Python libraries, let\u2019s put it all together with a few examples. For each, I\u2019ll cover a couple of NLP algorithms, pick one based on our rapid development goals, and create a simple implementation using one of the libraries.", "Pre-processing is a critical part of any NLP solution, so let\u2019s see how we can speed up the process with Python libraries. In my experience, NLTK has all the tools we need, with customization for unique use cases. Let\u2019s load a sample corpus.", "Following the pipeline defined above, we can use NLTK to implement segmentation, removing punctuation and stopwords, performing lemmatization, and more. Look how easy it is to remove stopwords:", "The entire pre-processing pipeline took me less than 40 lines of Python. See the full code here. Remember, this is a generalized example, and you should modify the process as needed for your specific use case.", "Document clustering is a common task in natural language processing, so let\u2019s discuss some ways to do it. The general idea here is to assign each document a vector representing the topics discussed:", "If the vectors are two dimensional, we can visualize the documents, like above. In this example, we see documents A and B are closely related, while D and F are loosely related. Using a distance metric, we can calculate similarity even when these vectors are three, one hundred, or one thousand dimensional.", "The next question is how to construct these vectors for each document, using the unstructured text input. Here there are a few options, from simplest to most complex:", "Word2Vec and Doc2Vec are quite complicated and require large datasets to learn word embeddings. We could use pre-trained models, but they may not scale well to tasks within niche fields. Instead, we will use Bag of Words, TF-IDF, and LSI.", "Now to choose our library. GenSim is specifically built for this task and contains easy implementations of all three algorithms, so let\u2019s use GenSim.", "For this example, let\u2019s use the Brown corpus again. It has 15 documents for categories of text, such as \u2018adventure\u2019, \u2018editorial\u2019, \u2018news\u2019, etc. After running our NLTK pre-processing routine, we can begin applying the GenSim models.", "First, we create a dictionary mapping tokens to unique indexes.", "Next, we iteratively apply Bag of Words, Term Frequency \u2014 Inverse Document Frequency, and Latent Semantic Indexing:", "In just ~10 lines of Python, we handled three separate models, and extracted vector representations for our documents. Using cosine similarity for vector comparison, we can find the most similar documents.", "And just like that, we have results! Adventure texts are most similar to fiction and romance, while editorials are similar to news and government. It checks out. Check the full code here.", "Sentiment analysis is the interpretation of unstructured text as positive, negative, or neutral. Sentiment analysis is a useful tool for analyzing reviews, measuring brand, building AI chatbots, and more.", "Unlike document clustering, where pre-processing was applied, we do not use pre-processing in sentiment analysis. The punctuation, flow, and context of a passage can reveal a lot about the sentiment, so we do not want to remove them. Instead, we jump straight into the models.", "Keeping things simple and effective, I recommend using pattern-based sentiment analysis. By searching for specific keywords, sentence structure, and punctuation marks, these models measure the text\u2019s polarity. Here are two libraries with built-in sentiment analyzers:", "VADER stands for Valence Aware Dictionary and sEntiment Recognizer, and is an extension of NLTK for sentiment analysis. It uses patterns to calculate sentiment, and works especially well with emojis and texting slang. It\u2019s also super easy to implement.", "A similar tool is TextBlob for sentiment analysis. TextBlob is actually a versatile library similar to NLTK and SpaCy. Regarding its sentiment analysis tool, it differs from VADER in reporting both polarity and subjectivity. From my personal experience, I prefer VADER, but each has its own strengths and weaknesses. TextBlob is also exceedingly easy to implement:", "Note: Pattern based models do not perform well on such small texts as in the examples above. I recommend sentiment analysis on texts averaging four sentences. For a quick demonstration of this, refer to the Jupyter Notebook.", "Here are a couple of additional topics and some useful algorithms and tools to accelerate your development.", "Hopefully, these examples help demonstrate the plethora of resources available for natural language processing in Python. Regardless of the problem, chances are someone has developed a library to streamline the process. Using these libraries can yield great results in a short time frame.", "With an introduction to NLP, an overview of Python libraries, and some example applications, you\u2019re almost ready to tackle your own challenges. Finally, I have a few tips and tricks to make the most of these resources.", "You should be well equipped to tackle some real-world NLP projects now. Good luck, and happy coding :)", "If you do anything cool with this information, leave a response in the comments. If you have any feedback or insights, feel free to connect with me on LinkedIn. Thanks for reading!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "CS@Yale | Interested in ML, NLP, Full-Stack Web Development"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F8cf3204383dd&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----8cf3204383dd--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8cf3204383dd--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@avgupta456?source=post_page-----8cf3204383dd--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@avgupta456?source=post_page-----8cf3204383dd--------------------------------", "anchor_text": "Abhijit Gupta"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F83dc37433c1b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&user=Abhijit+Gupta&userId=83dc37433c1b&source=post_page-83dc37433c1b----8cf3204383dd---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8cf3204383dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8cf3204383dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/a-practitioners-guide-to-natural-language-processing-part-i-processing-understanding-text-9f4abfd13e72", "anchor_text": "A Practitioner's Guide to Natural Language Processing (Part I) \u2014 Processing & Understanding TextProven and tested hands-on strategies to tackle NLP taskstowardsdatascience.com"}, {"url": "http://python.org", "anchor_text": "python.org"}, {"url": "https://www.nltk.org/", "anchor_text": "Natural Language Toolkit - NLTK 3.5 documentationNLTK is a leading platform for building Python programs to work with human language data. It provides easy-to-use\u2026www.nltk.org"}, {"url": "https://spacy.io/", "anchor_text": "spaCy \u00b7 Industrial-strength Natural Language Processing in PythonspaCy is designed to help you do real work \u2014 to build real products, or gather real insights. The library respects your\u2026spacy.io"}, {"url": "https://github.com/RaRe-Technologies/gensim", "anchor_text": "RaRe-Technologies/gensimGensim is a Python library for topic modelling, document indexing and similarity retrieval with large corpora. Target\u2026github.com"}, {"url": "https://github.com/keon/awesome-nlp", "anchor_text": "this repository"}, {"url": "https://github.com/avgupta456/medium_nlp/blob/master/Pre-Processing.ipynb", "anchor_text": "here"}, {"url": "https://github.com/avgupta456/medium_nlp/blob/master/Similarity.ipynb", "anchor_text": "here"}, {"url": "https://github.com/avgupta456/medium_nlp/blob/master/Sentiment.ipynb", "anchor_text": "the Jupyter Notebook"}, {"url": "https://www.linkedin.com/in/avgupta456/", "anchor_text": "LinkedIn"}, {"url": "https://medium.com/tag/nlp?source=post_page-----8cf3204383dd---------------nlp-----------------", "anchor_text": "NLP"}, {"url": "https://medium.com/tag/python?source=post_page-----8cf3204383dd---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/natural-language-process?source=post_page-----8cf3204383dd---------------natural_language_process-----------------", "anchor_text": "Natural Language Process"}, {"url": "https://medium.com/tag/libraries?source=post_page-----8cf3204383dd---------------libraries-----------------", "anchor_text": "Libraries"}, {"url": "https://medium.com/tag/algorithms?source=post_page-----8cf3204383dd---------------algorithms-----------------", "anchor_text": "Algorithms"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8cf3204383dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&user=Abhijit+Gupta&userId=83dc37433c1b&source=-----8cf3204383dd---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8cf3204383dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&user=Abhijit+Gupta&userId=83dc37433c1b&source=-----8cf3204383dd---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8cf3204383dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8cf3204383dd--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F8cf3204383dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----8cf3204383dd---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----8cf3204383dd--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----8cf3204383dd--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----8cf3204383dd--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----8cf3204383dd--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----8cf3204383dd--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----8cf3204383dd--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----8cf3204383dd--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----8cf3204383dd--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@avgupta456?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@avgupta456?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Abhijit Gupta"}, {"url": "https://medium.com/@avgupta456/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "20 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F83dc37433c1b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&user=Abhijit+Gupta&userId=83dc37433c1b&source=post_page-83dc37433c1b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F53755aed29f8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnatural-language-processing-nlp-dont-reinvent-the-wheel-8cf3204383dd&newsletterV3=83dc37433c1b&newsletterV3Id=53755aed29f8&user=Abhijit+Gupta&userId=83dc37433c1b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}