{"url": "https://towardsdatascience.com/exception-handling-in-python-85f49801b131", "time": 1683006963.53685, "path": "towardsdatascience.com/exception-handling-in-python-85f49801b131/", "webpage": {"metadata": {"title": "Beginner Guide to Exception Handling in Python | Towards Data Science", "h1": "Beginner Guide to Exception and Exception Handling in Python", "description": "This tutorial explains what an exception is in Python. It also covers user defined exception and exception handling using the try except statement."}, "outgoing_paragraph_urls": [{"url": "https://docs.python.org/3/library/exceptions.html", "anchor_text": "here", "paragraph_index": 7}, {"url": "https://docs.python.org/2/library/traceback.html", "anchor_text": "doc", "paragraph_index": 23}, {"url": "https://docs.python.org/3/tutorial/errors.html", "anchor_text": "tutorial", "paragraph_index": 49}], "all_paragraphs": ["In this tutorial, we will learn how to handle exceptions in Python by using the try except clause.", "But first, what is an exception? \ud83e\udd14", "An exception is an error that is thrown by our code when the execution of the code results in an unexpected outcome. Normally, an exception will have an error type and an error message. Some examples are as follows.", "ZeroDivisionError and TypeError are the error type and the text that comes after the colon is the error message. The error message usually describes the error type.", "Every good code and application handles exceptions to keep the user experience smooth and seamless. So, let\u2019s learn how to do that, shall we? \ud83d\ude42", "In Python, all the built-in exceptions are derived from the BaseException class. The exception classes that directly inherit the BaseException class are: Exception, GeneratorExit, KeyboardInterrupt and SystemExit. We are going to focus on the Exception class in this tutorial.", "In many cases, we want to define our own custom exception classes. The benefit of this is that we can be specific about the errors raised by our program by naming them in plain English that even the non-programmers can understand.", "To define a custom exception class, we need to inherit from the Exception class and not the BaseException class as suggested in the official Python 3 documentation here.", "Cool. Now that we have some basic understanding on exception, let\u2019s see some examples of it.", "Now, we will be looking at some of the most basic and common exceptions we might have encountered while learning Python programming.", "This exception is raised when we pass in a value that is of the right type but the value is wrong. As an example, let\u2019s say we want to convert a string to an integer.", "This works fine, right? Now, watch what happens when we pass a string that cannot be converted to an integer.", "It makes sense now, right? In the second example, even though the type of the argument is fine, the value is incorrect.", "This exception tells us that we are trying to access an item or element of a collection (e.g. a string or a list object) by an index that is out of range.", "In this example, the maximum index of some_list is 3 and we\u2019re asking our program to access an element at index [5]. Because that index does not exist (or out of range), the IndexError exception is thrown.", "Unlike ValueError, this exception is raised when the type of the argument or object we are passing to a function or an expression is of the wrong type.", "The error message is very clear here. It tells us that the + operator cannot be used on objects with type int and str.", "This exception is thrown whenever we try to use a variable that does not exist or has not been defined yet.", "Again, the error message is very clear. No need to explain this more. \ud83d\ude42", "There are still many more common exceptions, but I hope this is enough examples already.", "Now, you might be asking, what is that first couple of lines that says Traceback (most recent call last)? Well, let\u2019s discuss about it in the following section.", "One thing worth mentioning from all the sample exceptions from the previous section is the part before the exception type and message. This part is known as the traceback or stack trace.", "It is useful when our code is much more complex than the examples above, which I bet it will be, especially our application code. A traceback or stack trace essentially tells us the order of code executions from the latest (top) before the exception is thrown to the earliest (bottom).", "Let\u2019s see some example here taken from Python official doc.", "Here, the traceback is telling us that the last code execution that causes the IndexError exception is located on line 10, specifically when calling the lumberjack() function.", "It also tells us that prior to calling the lumberjack() function, our program executes the bright_side_of_death() function from line 4.", "In a real world application where our code is composed of many modules, the traceback is going to be helpful in debugging. Because it guides us what went wrong, where as well as the order of execution.", "As mentioned earlier, Python allows us to define our own custom exceptions. To do this, we need to define a class that inherits the Exception class.", "While we are on this, let\u2019s also see how we can raise an exception in our code. We will now define a function that will throw the MyCustomException.", "Now, let\u2019s call process_card by passing \"amex\" as its argument so that it will throw the MyCustomException.", "Perfect! So, in order to throw an exception from our code, the keyword to use is the raise keyword.", "Alright, I hope by now you have a pretty good understanding of what an exception is, particularly in Python. Next, we are going to learn how to handle it.", "Python provides us with the try except clause to handle exceptions that might be raised by our code. The basic anatomy of the try except clause is as follows.", "In plain English, the try except clause is basically saying, \u201cTry to do this, except if there\u2019s an error, then do this instead\u201d.", "There are a few options on what to do with the thrown exception from the try block. Let\u2019s discuss them.", "Let\u2019s take a look at how to write the try except statement to handle an exception by re-raising it.", "First, let\u2019s define a function that takes two input arguments and returns their sum.", "Next, let\u2019s wrap it in a try except clause and pass input arguments with the wrong type so the function will raise the TypeError exception.", "This is pretty much the same as how it would be if we didn\u2019t wrap the function in a try except clause.", "Another option is to define which exception types we want to catch specifically. To do this, we need to add the exception type to the except block.", "Cool. It is starting to look better, isn\u2019t it?", "Now, to make it even better, we can actually log or print the exception itself.", "Furthermore, we can catch multiple exception types in one except clause if we want to handle those exception types the same way.", "Let\u2019s pass an undefined variable to our function so that it will raise the NameError. We will also modify our except block to catch both TypeError and NameError and process either exception type the same way.", "Note that we can add as many exception types as we want. Basically, we just need to pass a tuple containing the exception types like (ExceptionType1, ExceptionType2, ExceptionType3, ..., ExceptionTypeN).", "Usually, we will have another except block with no specific exception type. The purpose of this is to catch the unhandled exception types. A use case would be when making a Http request to a third party API, we might not know all of the possible exception types, however, we still want to catch and handle them.", "Let\u2019s modify our try except block to include another except block that will catch the rest of the exception types.", "In the case where our function raises any exceptions other than TypeError and NameError, it will go to the last except block and prints Unhandled exception: <unhandled exception here>.", "Wow! Great job everyone for learning about exception and exception handling in Python. I hope that wasn\u2019t too bad \ud83d\ude06", "Just so you know, we can still extend our try except clause by adding else and finally blocks to it. More on this in the future tutorial. Or if you want to read about it yourself, you can checkout this tutorial.", "As always, feel free to drop any comments or ask any questions. \ud83d\ude42", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "An ordinary man trying to leave a good legacy on earth"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F85f49801b131&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----85f49801b131--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----85f49801b131--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://billydharmawan.medium.com/?source=post_page-----85f49801b131--------------------------------", "anchor_text": ""}, {"url": "https://billydharmawan.medium.com/?source=post_page-----85f49801b131--------------------------------", "anchor_text": "billydharmawan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F201d9c61a29a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&user=billydharmawan&userId=201d9c61a29a&source=post_page-201d9c61a29a----85f49801b131---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F85f49801b131&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F85f49801b131&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@hiteshchoudhary?utm_source=medium&utm_medium=referral", "anchor_text": "Hitesh Choudhary"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://docs.python.org/3/library/exceptions.html", "anchor_text": "here"}, {"url": "https://unsplash.com/@martenbjork?utm_source=medium&utm_medium=referral", "anchor_text": "Marten Bjork"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://docs.python.org/2/library/traceback.html", "anchor_text": "doc"}, {"url": "https://unsplash.com/@bethewerewolf?utm_source=medium&utm_medium=referral", "anchor_text": "Andr\u00e9s Canch\u00f3n"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://unsplash.com/@hhh13?utm_source=medium&utm_medium=referral", "anchor_text": "\u5085\u752c \u534e"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://docs.python.org/3/tutorial/errors.html", "anchor_text": "tutorial"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----85f49801b131---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/programming?source=post_page-----85f49801b131---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----85f49801b131---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/coding?source=post_page-----85f49801b131---------------coding-----------------", "anchor_text": "Coding"}, {"url": "https://medium.com/tag/education?source=post_page-----85f49801b131---------------education-----------------", "anchor_text": "Education"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F85f49801b131&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&user=billydharmawan&userId=201d9c61a29a&source=-----85f49801b131---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F85f49801b131&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&user=billydharmawan&userId=201d9c61a29a&source=-----85f49801b131---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F85f49801b131&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----85f49801b131--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F85f49801b131&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----85f49801b131---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----85f49801b131--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----85f49801b131--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----85f49801b131--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----85f49801b131--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----85f49801b131--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----85f49801b131--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----85f49801b131--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----85f49801b131--------------------------------", "anchor_text": ""}, {"url": "https://billydharmawan.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://billydharmawan.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "billydharmawan"}, {"url": "https://billydharmawan.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "509 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F201d9c61a29a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&user=billydharmawan&userId=201d9c61a29a&source=post_page-201d9c61a29a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F8ac392f5a205&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fexception-handling-in-python-85f49801b131&newsletterV3=201d9c61a29a&newsletterV3Id=8ac392f5a205&user=billydharmawan&userId=201d9c61a29a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}