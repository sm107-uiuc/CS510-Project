{"url": "https://towardsdatascience.com/introduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17", "time": 1682997566.119933, "path": "towardsdatascience.com/introduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17/", "webpage": {"metadata": {"title": "Introduction to AWS Lambda, Layers and boto3 using Python3 | by Gabriel dos Santos Gon\u00e7alves | Towards Data Science", "h1": "Introduction to AWS Lambda, Layers and boto3 using Python3", "description": "Amazon Lambda is probably the most famous serverless service available today offering low cost and practically no cloud infrastructure governance needed. It offers a relatively simple and\u2026"}, "outgoing_paragraph_urls": [{"url": "https://aws.amazon.com/cli/?nc1=f_ls", "anchor_text": "AWS Command Line Interface", "paragraph_index": 1}, {"url": "https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html", "anchor_text": "conda", "paragraph_index": 3}, {"url": "https://pypi.org/project/pipenv/", "anchor_text": "pipenv", "paragraph_index": 3}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/invoking-lambda-functions.html", "anchor_text": "Triggers", "paragraph_index": 7}, {"url": "https://boto3.amazonaws.com/v1/documentation/api/latest/index.html", "anchor_text": "boto3", "paragraph_index": 7}, {"url": "https://aws.amazon.com/lambda/pricing/?nc1=f_ls", "anchor_text": "Amazon Lambda pricing", "paragraph_index": 10}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/resource-model.html", "anchor_text": "Lambda allocates CPU power linearly in proportion to the amount of memory configured", "paragraph_index": 12}, {"url": "https://aws.amazon.com/cloudwatch/?nc1=f_ls", "anchor_text": "Amazon CloudWatch", "paragraph_index": 13}, {"url": "https://stackify.com/aws-lambda-with-python-a-complete-getting-started-guide/", "anchor_text": "Casey Dunham great Lambda Article", "paragraph_index": 13}, {"url": "https://gist.github.com/gene1wood/4a052f39490fae00e0c3", "anchor_text": "list of Python libraries", "paragraph_index": 15}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/lambda-intro-execution-role.html", "anchor_text": "Execution role", "paragraph_index": 22}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/limits.html", "anchor_text": "Amazon Lambda limits", "paragraph_index": 23}, {"url": "https://medium.com/hackernoon/build-a-serverless-data-pipeline-with-aws-s3-lamba-and-dynamodb-5ecb8c3ed23e", "anchor_text": "please check out this article from Yi Ai.", "paragraph_index": 23}, {"url": "https://www.kaggle.com/karangadiya/fifa19", "anchor_text": "Fifa19 player dataset from Kaggle", "paragraph_index": 24}, {"url": "https://medium-lambda-tutorial-bucket.s3.amazonaws.com/fifa19_kaggle.csv", "anchor_text": "fifa19_kaggle.csv", "paragraph_index": 24}, {"url": "https://aws.amazon.com/cli/?nc1=h_ls", "anchor_text": "awscli", "paragraph_index": 36}, {"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html", "anchor_text": "IAM", "paragraph_index": 36}, {"url": "https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html", "anchor_text": "boto3 client", "paragraph_index": 37}, {"url": "https://boto3.amazonaws.com/v1/documentation/api/1.9.42/reference/services/lambda.html#Lambda.Client.invoke", "anchor_text": "The Invocation type can be of three types", "paragraph_index": 38}, {"url": "https://medium.com/@eduardoromero/serverless-architectural-patterns-261d8743020", "anchor_text": "Eduardo Romero", "paragraph_index": 40}, {"url": "https://towardsdatascience.com/diving-deeper-into-aws-lambda-a52b22866767", "anchor_text": "recently published an article", "paragraph_index": 41}], "all_paragraphs": ["Amazon Lambda is probably the most famous serverless service available today offering low cost and practically no cloud infrastructure governance needed. It offers a relatively simple and straightforward platform for implementing functions on different languages like Python, Node.js, Java, C# and many more.", "Amazon Lambda can be tested through the AWS console or AWS Command Line Interface. One of the main problems about Lambda is that it becomes tricky to set up as soon as your functions and triggers get more complex. The goal of this article is to present you a digestible tutorial for configuring your first Amazon Lambda function with external libraries and doing something more useful than just printing \u201cHello world!\u201d.", "We are going to use Python3, boto3 and a few more libraries loaded in Lambda Layers to help us achieve our goal to load a CSV file as a Pandas dataframe, do some data wrangling, and save the metrics and plots on report files on an S3 bucket. Although using the AWS console for configuring your services is not the best practice approach to work on the cloud, we are going to show each step using the console, because it\u2019s more convenient for beginners to understand the basic structure of Amazon Lambda. I\u2019m sure that after going through this tutorial you\u2019ll have a good idea on migrating part of your local data analysis pipelines to Amazon Lambda.", "Before we start messing around with Amazon Lambda, we should first set our working environment. We first create a folder for the project (1) and the environment Python 3.7 using conda (you can also use pipenv )(2). Next, we create two folders, one to save the python scripts of your Lambda function, and one to build your Lambda Layers (3). We\u2019ll explain better what Lambda Layers consists later on the article. Finally, we can create the folder structure to build Lambda Layers so it can be identified by the Amazon Lambda (4). The folder structure we created is going to help you better understand the concept behind Amazon Lambda and also organize your functions and libraries.", "One of the main troubles I encountered when trying to implement my first Lambda functions was trying to understand the file structure used by AWS to invoke scripts and load libraries. If you follow the default options \u2018Author from scratch\u2019 (Figure 1) for creating a Lambda function, you\u2019ll end up with a folder with the name of your function and Python script named lambda_function.py inside it.", "The lambda_function.py file has a very simple structure and the code is the following:", "These 8 lines of code are key to understanding Amazon Lambda, so we are going through each line to explain it.", "Before running our first test, it\u2019s important to explain a key topic related to Amazon Lambda: Triggers. Triggers are basically ways in which you invoke your Lambda function. There are many ways for you to set up your trigger using events like adding a file to a S3 bucket, changing a value on a DynamoDB table or using an HTTP request through Amazon API Gateway. You can pretty much integrate your Lambda function to be invoked by a wide range of AWS services and this is probably one of the advantages offered by Lambda. One way we can do it to integrate with your Python code is by using boto3 to call your Lambda function, and that\u2019s the approach we are going to use later on this tutorial.", "As you can see, the template structure offered by AWS is super simple, and you can test it by configuring a test event and running it (Figure 2).", "As we didn\u2019t change anything on the code of the Lambda Function, the test runs the process and we receive a green alert describing the successful event (Figure 3).", "Figure 3 illustrates the layout of the Lambda invocation result. On the upper part you can see the dictionary contained on the returned statement. Underneath there is the Summary part, where we can see some important metrics related to the Lambda Function like Request ID, duration of the function, the billing duration and the amount of memory configured and used. We won\u2019t go deep on Amazon Lambda pricing, but it is important to know that is charged based on:", "In general, it is really cheap to test and use it, so you probably won\u2019t have billing problems when using Amazon Lambda for small workloads.", "Another important detail related to the pricing and performance is how CPU and memory are available. You choose the amount of memory for running your function and \u201cLambda allocates CPU power linearly in proportion to the amount of memory configured\u201d.", "At the bottom of Figure 3, you can see the Log output session where you can check all the execution lines printed by your Lambda function. One great feature implemented on Amazon Lambda is that it is integrated with Amazon CloudWatch, where you can find all the logs generated by your Lambda functions. For more details on monitoring execution and logs, please refer to Casey Dunham great Lambda Article.", "We have covered the basic features of Amazon Lambda, so on the next sessions, we are going to increase the complexity of our task to show you a real-world use providing a few insights into how to run a serverless service on a daily basis.", "One of the great things about using Python is the availability of a huge number of libraries that helps you implement fast solutions without having to code all classes and functions from scratch. As mentioned before, Amazon Lambda offers a list of Python libraries that you can import into your function. The problem starts when you have to use libraries that are not available. One way to do it is to install the library locally inside the same folder you have your lambda_function.py file, zip the files and upload it to your Amazon Lambda console. This process can be a laborious and inconvenient task to install libraries locally and upload it every time you have to create a new Lambda function. To make your life easier, Amazon offers the possibility for us to upload our libraries as Lambda Layers, which consists of a file structure where you store your libraries, load it independently to Amazon Lambda, and use them on your code whenever needed. Once you create a Lambda Layer it can be used by any other new Lambda Function.", "Going back to the first session where we organized our working environment, we are going to use the folder structure created inside lambda_layer folder to install locally one Python library, Pandas.", "By using pip with parameter -t we can specify where we want to install the libraries on our local folder (1). Next, we just need to zip the folder containing the libraries (2) and we have a file ready to be deployed as a Layer. It\u2019s important that you keep the structure of folders we create on the beginning (python/lib/python3.7/site-packages/) so that Amazon Layer can identify the libraries contained on your zipped package. Click on the option Layers on the left panel of your AWS Lambda console, and on the button \u2018Create Layer\u2019 to start a new one. Then we can specify the name, description and compatible runtimes (in our case is Python 3.7). Finally, we upload our zipped folder and create the Layer (Figure 4).", "It takes less than a minute and we have our Amazon Layer ready to be used on our code. Going back to the console of our Lambda function we can specify which Layers we are going to use by clicking on the Layer icon, then on \u2018Add a layer\u2019 (Figure 5).", "Next, we select the Layer we just created and its respective version (Figure 6). As you can see from Figure 6, AWS offers a Lambda Layer with Scipy and Numpy ready to be used, so you don\u2019t need to create new layers if the only libraries you need are one of these two.", "After selecting our Pandas Layer all we need to do is import it on your Lambda code as it was an installed library.", "Now that we have our environment and our Pandas Layer ready, we can start working on our code. As mentioned before, our goal is to create a Python3 local script (1) that can invoke a Lambda function using defined parameters (2) to perform a simple data analysis using Pandas on a CSV located on a S3 (3) and save the results back to the same bucket (4) (Figure 7).", "To give Amazon Lambda access to our S3 buckets we can simply add a role to our function by going to the session Execution role on your console. Although AWS offers you some role templates, my advise is to create a new role on the IAM console to specify exactly the permission need for your Lambda function (Left panel on Figure 8).", "We also changed the amount of memory available from 128MB to 1024MB, and the timeout to 5 minutes instead of just 3 seconds (Right panel on figure 8), to avoid running out of memory and timeout error. Amazon Lambda limits the total amount of RAM memory to 3GB and timeout to 15 minutes. So if you need to perform highly intensive tasks, you might find problems. One solution is to chain multiple Lambdas to other AWS services to perform steps of an analysis pipeline. Our idea is not to provide an exhaustive introduction to Amazon Lambda, so if you want to know more about it, please check out this article from Yi Ai.", "Before showing the code, it\u2019s important to describe the dataset we are going to use on our small project. I chose the Fifa19 player dataset from Kaggle, which is a CSV file describing all the skills from the players present on the game (Table 1). It has 18.207 rows and 88 columns and you can get information about the nationality, clubs, salary, skill level and many more feature from each player. We downloaded the CSV file and uploaded it to our S3 bucket (renamed it fifa19_kaggle.csv).", "So now we can focus on our code!", "As we can see in the script above, the first 5 lines are just importing libraries. With exception to Pandas, all the other libraries are available for use, without having to use Layers.", "Next, we have an accessory function called write_dataframe_to_csv_on_s3 (lines 8 to 22) used to save a Pandas Dataframe to a specific S3 bucket. We are going to use it to save our output Dataframe created during the analysis.", "The other function we have on our code is the main lambda_handler,the one that is going to be called when we invoke the Lambda. We can see that the first 5 assignments on lambda_handler (lines 28 to 32) are variables passed to the eventobject.", "From the lines 35 to 41 we use boto3 to download the CSV file on the S3 bucket and load it as a Pandas Dataframe.", "Next, on line 44 we use the group by method on the Dataframe to aggregate the GROUP column and get the mean of the COLUMN variable.", "Finally, we use the function write_dataframe_to_csv_on_s3 to save df_groupby on the specified S3 bucket, and return a dictionary with statusCode and body as keys.", "As described before in the Amazon Lambda Basic Structure session, the event parameter is an object that carries variables available to lambda_handler function and we can define these variables when configuring the test event (Figure 9).", "If we run this the test, using the correct values related to the 5 keys of test JSON, our Lambda function should process the CSV file from S3 and write down the resulted CSV back to the bucket.", "Although using the variables hardcoded on test event can show the concept of our Lambda code, it\u2019s not a practical way to invoke the function. In order to solve it, we are going to create a Python script (invoke_lambda.py) to invoke our Lambda function using boto3.", "We are going to use only three libraries: boto3, json and sys. From lines 5 to 10 we use sys.argv to access the parameter when running the script through the command line.", "The last parameter (aws_credentials) we provide to invoke_lambda.py is a JSON file with our credentials to access AWS services. You may configure your credentials by using the awscli or generate a secret key using IAM.", "On our main function, invoke_lambda we use boto3 client to define access to Amazon Lambda (line 38). The next object called payload is a dictionary with all the variables we want to use inside our Lambda function. These are the Lambda variables that can be accessed using the event.get('variable').", "Finally, we simply call client.invoke() with the target Lambda function name, Invocation type, and payload carrying the variables (line 54). The Invocation type can be of three types: RequestResponse (default), to\u201cinvoke the function synchronously. Keep the connection open until the function returns a response or times out\u201d; Event, to asynchronously call Lambda; or DryRun when you need to validate user information. For our main purpose, we are going to use the default RequestResponse option to invoke our Lambda, as it waits for the Lambda process to return a response. As we defined a try/except structure on our Lambda Function, if the process runs without errors, it would return a status code 200 with the message \u201cSuccess!\u201d, otherwise it would return status code 400 and the message \u201cError, bad request!\u201d.", "Our local script invoke_lambda.pywhen run with the right parameters takes a few seconds to return a response. If the response is positive with status code 200, you might check your S3 bucket to search for the report file generated by the Lambda function (Table 2). As we used the columns \u201cClub\u201d to group by and \u201cOverall\u201d to get the mean, we are showing the 20 clubs with the highest average player overall skill level.", "I hope this quick introduction (not so quick!) to Amazon Lambda helped you understand better the nuts and bolts of this serverless service. And that it can help you somehow try different approaches on your Data Science projects. For more information about serverless architecture using AWS please check this great article from Eduardo Romero.", "And if you feel you need a deeper understanding of AWS Lambda, I recently published an article that describes the infrastructure behind Lambda and a few other functionalities for it.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F39bd390add17&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----39bd390add17--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----39bd390add17--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@gabrielsgoncalves?source=post_page-----39bd390add17--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@gabrielsgoncalves?source=post_page-----39bd390add17--------------------------------", "anchor_text": "Gabriel dos Santos Gon\u00e7alves"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F28d0c7765c4e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&user=Gabriel+dos+Santos+Gon%C3%A7alves&userId=28d0c7765c4e&source=post_page-28d0c7765c4e----39bd390add17---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F39bd390add17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F39bd390add17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@pixtolero2?utm_source=medium&utm_medium=referral", "anchor_text": "Daniel Eledut"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://aws.amazon.com/cli/?nc1=f_ls", "anchor_text": "AWS Command Line Interface"}, {"url": "https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html", "anchor_text": "conda"}, {"url": "https://pypi.org/project/pipenv/", "anchor_text": "pipenv"}, {"url": "https://gist.github.com/gene1wood/4a052f39490fae00e0c3", "anchor_text": "list of available Python libraries already built on Amazon Lambda"}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html", "anchor_text": "Lambda Layers"}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/python-programming-model-handler-types.html", "anchor_text": "main function"}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/invoking-lambda-functions.html", "anchor_text": "Triggers"}, {"url": "https://boto3.amazonaws.com/v1/documentation/api/latest/index.html", "anchor_text": "boto3"}, {"url": "https://aws.amazon.com/lambda/pricing/?nc1=f_ls", "anchor_text": "Amazon Lambda pricing"}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/resource-model.html", "anchor_text": "Lambda allocates CPU power linearly in proportion to the amount of memory configured"}, {"url": "https://aws.amazon.com/cloudwatch/?nc1=f_ls", "anchor_text": "Amazon CloudWatch"}, {"url": "https://stackify.com/aws-lambda-with-python-a-complete-getting-started-guide/", "anchor_text": "Casey Dunham great Lambda Article"}, {"url": "https://gist.github.com/gene1wood/4a052f39490fae00e0c3", "anchor_text": "list of Python libraries"}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/lambda-intro-execution-role.html", "anchor_text": "Execution role"}, {"url": "https://docs.aws.amazon.com/lambda/latest/dg/limits.html", "anchor_text": "Amazon Lambda limits"}, {"url": "https://medium.com/hackernoon/build-a-serverless-data-pipeline-with-aws-s3-lamba-and-dynamodb-5ecb8c3ed23e", "anchor_text": "please check out this article from Yi Ai."}, {"url": "https://www.kaggle.com/karangadiya/fifa19", "anchor_text": "Fifa19 player dataset from Kaggle"}, {"url": "https://medium-lambda-tutorial-bucket.s3.amazonaws.com/fifa19_kaggle.csv", "anchor_text": "fifa19_kaggle.csv"}, {"url": "https://aws.amazon.com/cli/?nc1=h_ls", "anchor_text": "awscli"}, {"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html", "anchor_text": "IAM"}, {"url": "https://boto3.amazonaws.com/v1/documentation/api/latest/guide/configuration.html", "anchor_text": "boto3 client"}, {"url": "https://boto3.amazonaws.com/v1/documentation/api/1.9.42/reference/services/lambda.html#Lambda.Client.invoke", "anchor_text": "The Invocation type can be of three types"}, {"url": "https://medium.com/@eduardoromero/serverless-architectural-patterns-261d8743020", "anchor_text": "Eduardo Romero"}, {"url": "https://towardsdatascience.com/diving-deeper-into-aws-lambda-a52b22866767", "anchor_text": "recently published an article"}, {"url": "https://medium.com/@gabrielsgoncalves", "anchor_text": "profile page"}, {"url": "https://medium.com/@gabrielsgoncalves/membership", "anchor_text": "referral link"}, {"url": "https://medium.com/@gergoszerovay/why-you-need-python-environments-and-how-to-manage-them-with-conda-protostar-space-cf823c510f5d", "anchor_text": "Why you need Python environments and how to manage them with Conda \u2014 protostar.spaceShouldn\u2019t I just install the latest Python version?medium.com"}, {"url": "https://stackify.com/aws-lambda-with-python-a-complete-getting-started-guide/", "anchor_text": "AWS Lambda with Python: A Complete Getting Started GuideIn this post, we'll learn what Amazon Web Services (AWS) Lambda is, and why it might be a good idea to use for your\u2026stackify.com"}, {"url": "https://medium.com/hackernoon/build-a-serverless-data-pipeline-with-aws-s3-lamba-and-dynamodb-5ecb8c3ed23e", "anchor_text": "Building a Serverless Data Pipeline with AWS S3 Lamba and DynamoDBAWS Lambda plus Layers is one of the best solutions for managing a data pipeline and for implementing a serverless\u2026medium.com"}, {"url": "https://medium.com/@eduardoromero/serverless-architectural-patterns-261d8743020", "anchor_text": "Serverless Architectural PatternsCloud Architectural Patterns built on top of the AWS Serverless Stack.medium.com"}, {"url": "https://towardsdatascience.com/diving-deeper-into-aws-lambda-a52b22866767", "anchor_text": "Diving deeper into AWS LambdaUnderstand Lambda's basic infrastructure, how to run executables and parse CloudWatch logstowardsdatascience.com"}, {"url": "https://medium.com/tag/aws?source=post_page-----39bd390add17---------------aws-----------------", "anchor_text": "AWS"}, {"url": "https://medium.com/tag/amazon-lambda?source=post_page-----39bd390add17---------------amazon_lambda-----------------", "anchor_text": "Amazon Lambda"}, {"url": "https://medium.com/tag/boto3?source=post_page-----39bd390add17---------------boto3-----------------", "anchor_text": "Boto3"}, {"url": "https://medium.com/tag/python?source=post_page-----39bd390add17---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/serverless?source=post_page-----39bd390add17---------------serverless-----------------", "anchor_text": "Serverless"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F39bd390add17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&user=Gabriel+dos+Santos+Gon%C3%A7alves&userId=28d0c7765c4e&source=-----39bd390add17---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F39bd390add17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&user=Gabriel+dos+Santos+Gon%C3%A7alves&userId=28d0c7765c4e&source=-----39bd390add17---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F39bd390add17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----39bd390add17--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F39bd390add17&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----39bd390add17---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----39bd390add17--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----39bd390add17--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----39bd390add17--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----39bd390add17--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----39bd390add17--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----39bd390add17--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----39bd390add17--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----39bd390add17--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@gabrielsgoncalves?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@gabrielsgoncalves?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Gabriel dos Santos Gon\u00e7alves"}, {"url": "https://medium.com/@gabrielsgoncalves/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "442 Followers"}, {"url": "http://bigdata.com.br", "anchor_text": "bigdata.com.br"}, {"url": "http://www.linkedin.com/in/gabrielsantosgoncalves", "anchor_text": "www.linkedin.com/in/gabrielsantosgoncalves"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F28d0c7765c4e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&user=Gabriel+dos+Santos+Gon%C3%A7alves&userId=28d0c7765c4e&source=post_page-28d0c7765c4e--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F939f1ba5dbc6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-amazon-lambda-layers-and-boto3-using-python3-39bd390add17&newsletterV3=28d0c7765c4e&newsletterV3Id=939f1ba5dbc6&user=Gabriel+dos+Santos+Gon%C3%A7alves&userId=28d0c7765c4e&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}