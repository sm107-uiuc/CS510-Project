{"url": "https://towardsdatascience.com/speeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f", "time": 1683000558.698245, "path": "towardsdatascience.com/speeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f/", "webpage": {"metadata": {"title": "Speeding up Python Code: Fast Filtering and Slow Loops | by Maximilian Strauss | Towards Data Science", "h1": "Speeding up Python Code: Fast Filtering and Slow Loops", "description": "When exploring a new dataset and wanting to do some quick checks or calculations, one is tempted to lazily write code without giving much thought about optimization. While this might be useful in the\u2026"}, "outgoing_paragraph_urls": [{"url": "https://numba.pydata.org/numba-doc/dev/reference/numpysupported.html", "anchor_text": "Numba", "paragraph_index": 13}, {"url": "https://en.wikipedia.org/wiki/K-d_tree", "anchor_text": "Wikipedia", "paragraph_index": 28}, {"url": "https://docs.scipy.org/doc/scipy-0.15.1/reference/generated/scipy.spatial.KDTree.query_ball_tree.html", "anchor_text": "query_ball_tree", "paragraph_index": 30}], "all_paragraphs": ["When exploring a new dataset and wanting to do some quick checks or calculations, one is tempted to lazily write code without giving much thought about optimization. While this might be useful in the beginning, it can easily happen that the time waiting for code execution overcomes the time that it would have taken to write everything properly.", "This article shows some basic ways on how to speed up computation time in Python. With the example of filtering data, we will discuss several approaches using pure Python, numpy, numba, pandas as well as k-d-trees.", "As an example task, we will tackle the problem of efficiently filtering datasets. For this, we will use points in a two-dimensional space, but this could be anything in an n-dimensional space, whether this is customer data or the measurements of an experiment.", "Let\u2019s suppose we would like to extract all the points that are in a rectangle with between [0.2, 0.4] and [0.4, 0.6]. The naive way to do this would be to loop for each point and to check whether it fulfills this criterion. Codewise, this could look like as follows: First, we create a function to randomly distribute points in n-dimensional space with numpy, then a function to loop over the entries. To measure computation time we use timeit and visualize the filtering results using matplotlib.", "As we can see, for the tested machine it took approx. 70 ms to extract the points within a rectangle from a dataset of 100.000 points.", "Note that when combining expressions you want to use a logical and (and) not a bitwise and (&). When the first condition is False, it stops evaluating.", "Although numpy is nice to interact with large n-dimensional arrays we should also consider the additional overhead that we get by using numpy objects. In this particular example, we do not use any mathematical operations where we could benefit from numpy\u2019s vectorization.", "So now let\u2019s benchmark this loop against a pure Python implementation of the loop. Here the difference is to use a list of tuples instead of a numpy array.", "The execution now only took approx. 28 ms, so less than half of the previous execution time. This highlights the potential performance decrease that could occur when using highly optimized packages for rather simple tasks.", "To make a more broad comparison we will also benchmark against three built-in methods in Python: List comprehensions, Map and Filter.", "The list comprehension method is slightly faster. This is, as we expected, from saving time not calling the append function. The map and filter function do not show a significant speed increase compared to the pure Python loop.", "Thinking about the first implementation of more than 70 ms why should one use numpy in the first place? One thing we can do is to use boolean indexing. Here we perform the check for each criterium column-wise. We can then combine them to a boolean index and directly access the values that are within the range.", "The solution using a boolean index only takes approx. 640 \u00b5s, so a 50-fold improvement in speed compared to the fastest implementation we tested so far.", "Can we even push this further? Yes, we can. One way is to use Numba:", "Numba translates Python functions to optimized machine code at runtime using the industry-standard LLVM compiler library. Numba-compiled numerical algorithms in Python can approach the speeds of C or FORTRAN.", "The implementation of numba is quite easy if one uses numpy and is particularly performant if the code has a lot of loops. If the functions are correctly set up, i.e. using loops and basic numpy functions, a simple addition of the @njit decorator will flag the function to be compiled in numba and will be rewarded with an increase in speed. Feel free to check out numbas documentation to learn about the details in setting up numba-compatible functions.", "Note that we are using the most recent version of Numba (0.45) that introduced the typed list. Additionally, note that we are executing the functions once before timing to not account for compilation time. Now let\u2019s see how the functions perform when being compiled with Numba:", "After compiling the function with LLVM, even the execution time for the fast boolean filter is half and only takes approx. 340 \u00b5s. More interestingly, even the inefficient loop from the beginning is now sped up from 72 ms to less than 1 ms, highlighting the potential of numba for even poorly optimized code.", "Previously, we had seen that data types can affect the datatype. One has to carefully decide between code performance, easy interfacing and readable code. Pandas, for example, is very useful in manipulating tabular data. However, the data structure can decrease performance. To put this in perspective we will also compare pandas onboard functions for filtering such as query and eval and also boolean indexing.", "Arguably, the execution time is much faster than our initial loop that was not optimized. However, it is significantly slower than the optimized versions. It is, therefore, suitable for initial exploration but should then be optimized.", "To compare the approaches in a more quantitative way we can benchmark them against each other. For this, we use the perfplot package which provides an excellent way to do so.", "Note that the execution times, as well as the data sizes, are on a logarithmic scale", "Lastly, we will discuss strategies that we can use for larger datasets and when using more queries. So far we considered timings when always checking for a fixed reference point. Suppose instead of one point we have a list of points and want to filter data multiple times. Clearly, it would be beneficial if we could use some order within the data, e.g. when having a point in the upper left corner to only query points in that specific corner.", "We can do so by sorting the data first and then being able to select a subsection using an index. The idea here is that the time to sort the array should be compensated by the time saved of repeatedly searching only a smaller array.", "To further increase complexity, we now also search in the third dimension, effectively slicing out a voxel in space. As we are just interested in timings, for now, we just report the lengths of the filtered arrays.", "We rewrite the boolean_index_numba function to accept arbitrary reference volumes in the form [xmin, xmax], [ymin, ymax] and [zmin, zmax]. We define a wrapper named multiple_queries that repeatedly executes this function. The comparison will be against the function multiple_queries_index that sorts the data first and only passes a subset to boolean_index_numba_multiple.", "For this example, the execution time is now reduced to only a quarter. The speed gain scales with the number of query points. As an additional note, the extraction of the minimum and maximum index is comparatively fast.", "The idea to pre-structure the data to increase access times can be further expanded, e.g. one could think of sorting again on the subsetted data. One could think of creating n-dimensional bins to efficiently subset data.", "One approach that extends this idea and uses a tree structure to index the data is the k-d-Tree that allows the rapid lookup of neighbors for a given point. Below a short definition from Wikipedia:", "In computer science, a k-d tree is a space-partitioning data structure for organizing points in a k-dimensional space. k-d trees are a useful data structure for several applications, such as searches involving a multidimensional search key.", "Luckily, we don\u2019t need to implement the k-d-tree ourselves but can use an existing implementation from scipy. It not only has a pure Python implementation but also a C-optimized version that we can use for this approach. It comes with a built-in function called query_ball_tree that allows searching all neighbors within a certain radius. As we are searching for points within a square around a given point we only need to set the Minkowski norm to Chebyshev (p=\u2019inf\u2019).", "From the timings we can see that it took some 40 ms to construct the tree, however, the querying step only takes in the range of 100 \u00b5s, which is therefore even faster than the numba-optimized boolean indexing.", "Note that the k-d-tree uses only a single distance so if one is interested in searching in a rectangle and not a square one would need to scale the axis. It is also possible to change the Minkowski norm to e.g. search within a circle instead of a square. Accordingly, searching with a relative window can be achieved by log-transforming the axis.", "Again we will use perfplot to give a more quantitative comparison. For this, we will query one million points against a growing number of points.", "Note that we test data in a large range, execution time of perfplot could, therefore, be very slow", "For this data range, the comparison between kdtree, multiple_queries and the indexed version of multiple queries shows the expected behavior: The initial overhead of constructing the tree or the sorting of the data overweighs when searching against larger datasets. The kdtree is expected to outperform the indexed version of multiple queries for larger datasets.", "It is to emphasize that as the scipy implementation easily accepts n-dimensional data it is very straightforward to extend for even more dimensions.", "Testing filtering speed for different approaches highlights how code can be effectively optimized. Execution times range from more than 70 ms for a slow implementation to approx. 300 \u00b5s for an optimized version using boolean indexing, displaying more than 200x improvement. The main findings can be summarized as follows:", "Execution times could be further speed up when thinking of parallelization, either on CPU or GPU. Note that the memory footprint of the approaches was not considered for these examples. When having files that are too large to load in memory, chunking the data or generator expressions can be handy. If you find that any approach is missing or potentially provides better results let me know. I am curious to see what other ways exist to perform fast filtering.", "Data Science | Artificial Intelligence | Engineer"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F8e11a09a9c2f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/@straussmaximilian?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@straussmaximilian?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "Maximilian Strauss"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fac654ab22e75&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&user=Maximilian+Strauss&userId=ac654ab22e75&source=post_page-ac654ab22e75----8e11a09a9c2f---------------------post_header-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8e11a09a9c2f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&user=Maximilian+Strauss&userId=ac654ab22e75&source=-----8e11a09a9c2f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8e11a09a9c2f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&source=-----8e11a09a9c2f---------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://unsplash.com/@jmsdono?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "James Donovan"}, {"url": "https://unsplash.com/s/photos/speed?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://stackoverflow.com/questions/30245397/why-is-a-list-comprehension-so-much-faster-than-appending-to-a-list", "anchor_text": "iteration"}, {"url": "https://book.pythontips.com/en/latest/map_filter.html", "anchor_text": "list"}, {"url": "https://book.pythontips.com/en/latest/map_filter.html", "anchor_text": "True"}, {"url": "https://numba.pydata.org/numba-doc/dev/reference/numpysupported.html", "anchor_text": "Numba"}, {"url": "https://en.wikipedia.org/wiki/K-d_tree", "anchor_text": "Wikipedia"}, {"url": "https://docs.scipy.org/doc/scipy-0.15.1/reference/generated/scipy.spatial.KDTree.query_ball_tree.html", "anchor_text": "query_ball_tree"}, {"url": "https://medium.com/tag/python?source=post_page-----8e11a09a9c2f---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/pandas?source=post_page-----8e11a09a9c2f---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/numba?source=post_page-----8e11a09a9c2f---------------numba-----------------", "anchor_text": "Numba"}, {"url": "https://medium.com/tag/lists?source=post_page-----8e11a09a9c2f---------------lists-----------------", "anchor_text": "Lists"}, {"url": "https://medium.com/tag/filters?source=post_page-----8e11a09a9c2f---------------filters-----------------", "anchor_text": "Filters"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8e11a09a9c2f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&user=Maximilian+Strauss&userId=ac654ab22e75&source=-----8e11a09a9c2f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F8e11a09a9c2f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&user=Maximilian+Strauss&userId=ac654ab22e75&source=-----8e11a09a9c2f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F8e11a09a9c2f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/@straussmaximilian?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fac654ab22e75&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&user=Maximilian+Strauss&userId=ac654ab22e75&source=post_page-ac654ab22e75----8e11a09a9c2f---------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F3f20ab44a225&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&newsletterV3=ac654ab22e75&newsletterV3Id=3f20ab44a225&user=Maximilian+Strauss&userId=ac654ab22e75&source=-----8e11a09a9c2f---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://medium.com/@straussmaximilian?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "Written by Maximilian Strauss"}, {"url": "https://medium.com/@straussmaximilian/followers?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "941 Followers"}, {"url": "https://towardsdatascience.com/?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fac654ab22e75&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&user=Maximilian+Strauss&userId=ac654ab22e75&source=post_page-ac654ab22e75----8e11a09a9c2f---------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F3f20ab44a225&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspeeding-up-python-code-fast-filtering-and-slow-loops-8e11a09a9c2f&newsletterV3=ac654ab22e75&newsletterV3Id=3f20ab44a225&user=Maximilian+Strauss&userId=ac654ab22e75&source=-----8e11a09a9c2f---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://betterprogramming.pub/gpt4all-running-an-open-source-chatgpt-clone-on-your-laptop-71ebe8600c71?source=author_recirc-----8e11a09a9c2f----0---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://medium.com/@straussmaximilian?source=author_recirc-----8e11a09a9c2f----0---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://medium.com/@straussmaximilian?source=author_recirc-----8e11a09a9c2f----0---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "Maximilian Strauss"}, {"url": "https://betterprogramming.pub/?source=author_recirc-----8e11a09a9c2f----0---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "Better Programming"}, {"url": "https://betterprogramming.pub/gpt4all-running-an-open-source-chatgpt-clone-on-your-laptop-71ebe8600c71?source=author_recirc-----8e11a09a9c2f----0---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "GPT4All: Running an Open-source ChatGPT Clone on Your LaptopThe open-source chatbot that was trained on ChatGPT output"}, {"url": "https://betterprogramming.pub/gpt4all-running-an-open-source-chatgpt-clone-on-your-laptop-71ebe8600c71?source=author_recirc-----8e11a09a9c2f----0---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "\u00b76 min read\u00b7Apr 17"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fbetter-programming%2F71ebe8600c71&operation=register&redirect=https%3A%2F%2Fbetterprogramming.pub%2Fgpt4all-running-an-open-source-chatgpt-clone-on-your-laptop-71ebe8600c71&user=Maximilian+Strauss&userId=ac654ab22e75&source=-----71ebe8600c71----0-----------------clap_footer----b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://betterprogramming.pub/gpt4all-running-an-open-source-chatgpt-clone-on-your-laptop-71ebe8600c71?source=author_recirc-----8e11a09a9c2f----0---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "20"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F71ebe8600c71&operation=register&redirect=https%3A%2F%2Fbetterprogramming.pub%2Fgpt4all-running-an-open-source-chatgpt-clone-on-your-laptop-71ebe8600c71&source=-----8e11a09a9c2f----0-----------------bookmark_preview----b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----8e11a09a9c2f----1---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://barrmoses.medium.com/?source=author_recirc-----8e11a09a9c2f----1---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://barrmoses.medium.com/?source=author_recirc-----8e11a09a9c2f----1---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "Barr Moses"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----8e11a09a9c2f----1---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----8e11a09a9c2f----1---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "Zero-ETL, ChatGPT, And The Future of Data EngineeringThe post-modern data stack is coming. Are we ready?"}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----8e11a09a9c2f----1---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "9 min read\u00b7Apr 3"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F71849642ad9c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fzero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c&user=Barr+Moses&userId=2818bac48708&source=-----71849642ad9c----1-----------------clap_footer----b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/zero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c?source=author_recirc-----8e11a09a9c2f----1---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "21"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F71849642ad9c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fzero-etl-chatgpt-and-the-future-of-data-engineering-71849642ad9c&source=-----8e11a09a9c2f----1-----------------bookmark_preview----b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----8e11a09a9c2f----2---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://medium.com/@mattchapmanmsc?source=author_recirc-----8e11a09a9c2f----2---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://medium.com/@mattchapmanmsc?source=author_recirc-----8e11a09a9c2f----2---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "Matt Chapman"}, {"url": "https://towardsdatascience.com/?source=author_recirc-----8e11a09a9c2f----2---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----8e11a09a9c2f----2---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "The Portfolio that Got Me a Data Scientist JobSpoiler alert: It was surprisingly easy (and free) to make"}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----8e11a09a9c2f----2---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "\u00b710 min read\u00b7Mar 24"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F513cc821bfe4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4&user=Matt+Chapman&userId=bf7d13fc53db&source=-----513cc821bfe4----2-----------------clap_footer----b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4?source=author_recirc-----8e11a09a9c2f----2---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "42"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F513cc821bfe4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-portfolio-that-got-me-a-data-scientist-job-513cc821bfe4&source=-----8e11a09a9c2f----2-----------------bookmark_preview----b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://generativeai.pub/gpt4all-j-the-knowledge-of-humankind-that-fits-on-a-usb-stick-415bdab11ab4?source=author_recirc-----8e11a09a9c2f----3---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://medium.com/@straussmaximilian?source=author_recirc-----8e11a09a9c2f----3---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://medium.com/@straussmaximilian?source=author_recirc-----8e11a09a9c2f----3---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "Maximilian Strauss"}, {"url": "https://generativeai.pub/?source=author_recirc-----8e11a09a9c2f----3---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "Generative AI"}, {"url": "https://generativeai.pub/gpt4all-j-the-knowledge-of-humankind-that-fits-on-a-usb-stick-415bdab11ab4?source=author_recirc-----8e11a09a9c2f----3---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "GPT4All-J: The knowledge of humankind that fits on a USB stickThe new update from GPT4All has a graphical user interface and a one-click installer"}, {"url": "https://generativeai.pub/gpt4all-j-the-knowledge-of-humankind-that-fits-on-a-usb-stick-415bdab11ab4?source=author_recirc-----8e11a09a9c2f----3---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": "\u00b74 min read\u00b7Apr 17"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgenerative-ai%2F415bdab11ab4&operation=register&redirect=https%3A%2F%2Fgenerativeai.pub%2Fgpt4all-j-the-knowledge-of-humankind-that-fits-on-a-usb-stick-415bdab11ab4&user=Maximilian+Strauss&userId=ac654ab22e75&source=-----415bdab11ab4----3-----------------clap_footer----b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://generativeai.pub/gpt4all-j-the-knowledge-of-humankind-that-fits-on-a-usb-stick-415bdab11ab4?source=author_recirc-----8e11a09a9c2f----3---------------------b59b2837_fb0b_438c_8e9f_f3102ee0b683-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "4"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F415bdab11ab4&operation=register&redirect=https%3A%2F%2Fgenerativeai.pub%2Fgpt4all-j-the-knowledge-of-humankind-that-fits-on-a-usb-stick-415bdab11ab4&source=-----8e11a09a9c2f----3-----------------bookmark_preview----b59b2837_fb0b_438c_8e9f_f3102ee0b683-------", "anchor_text": ""}, {"url": "https://medium.com/@straussmaximilian?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "See all from Maximilian Strauss"}, {"url": "https://towardsdatascience.com/?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "See all from Towards Data Science"}, {"url": "https://towardsdatascience.com/the-art-of-speeding-up-python-loop-4970715717c?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://casey-cheng.medium.com/?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://casey-cheng.medium.com/?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Casey Cheng"}, {"url": "https://towardsdatascience.com/?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/the-art-of-speeding-up-python-loop-4970715717c?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "The Art of Speeding Up Python LoopThere is no \u201cbest\u201d looping technique in Python, only the most suitable."}, {"url": "https://towardsdatascience.com/the-art-of-speeding-up-python-loop-4970715717c?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "\u00b710 min read\u00b7Oct 31, 2022"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4970715717c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-speeding-up-python-loop-4970715717c&user=Casey+Cheng&userId=514ba843cfe4&source=-----4970715717c----0-----------------clap_footer----53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/the-art-of-speeding-up-python-loop-4970715717c?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "1"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4970715717c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-speeding-up-python-loop-4970715717c&source=-----8e11a09a9c2f----0-----------------bookmark_preview----53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://alexcancode.medium.com/?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://alexcancode.medium.com/?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Alexander Nguyen"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Why I Keep Failing Candidates During Google Interviews\u2026They don\u2019t meet the bar."}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "\u00b74 min read\u00b7Apr 13"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Fdc8f865b2c19&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwhy-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19&user=Alexander+Nguyen&userId=a148fd75c2e9&source=-----dc8f865b2c19----1-----------------clap_footer----53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/why-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "89"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fdc8f865b2c19&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fwhy-i-keep-failing-candidates-during-google-interviews-dc8f865b2c19&source=-----8e11a09a9c2f----1-----------------bookmark_preview----53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/5-python-tricks-that-distinguish-senior-developers-from-juniors-826d57ab3940?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://medium.com/@tomergabay?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://medium.com/@tomergabay?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Tomer Gabay"}, {"url": "https://towardsdatascience.com/?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/5-python-tricks-that-distinguish-senior-developers-from-juniors-826d57ab3940?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "5 Python Tricks That Distinguish Senior Developers From JuniorsIllustrated through differences in approaches to Advent of Code puzzles"}, {"url": "https://towardsdatascience.com/5-python-tricks-that-distinguish-senior-developers-from-juniors-826d57ab3940?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "\u00b76 min read\u00b7Jan 16"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F826d57ab3940&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-python-tricks-that-distinguish-senior-developers-from-juniors-826d57ab3940&user=Tomer+Gabay&userId=c9c352dba00a&source=-----826d57ab3940----0-----------------clap_footer----53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/5-python-tricks-that-distinguish-senior-developers-from-juniors-826d57ab3940?source=read_next_recirc-----8e11a09a9c2f----0---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "18"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F826d57ab3940&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F5-python-tricks-that-distinguish-senior-developers-from-juniors-826d57ab3940&source=-----8e11a09a9c2f----0-----------------bookmark_preview----53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://thepycoach.com/?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://thepycoach.com/?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "The PyCoach"}, {"url": "https://artificialcorner.com/?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Artificial Corner"}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "You\u2019re Using ChatGPT Wrong! Here\u2019s How to Be Ahead of 99% of ChatGPT UsersMaster ChatGPT by learning prompt engineering."}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "\u00b77 min read\u00b7Mar 17"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fartificial-corner%2F886a50dabc54&operation=register&redirect=https%3A%2F%2Fartificialcorner.com%2Fyoure-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54&user=The+PyCoach&userId=fb44e21903f3&source=-----886a50dabc54----1-----------------clap_footer----53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://artificialcorner.com/youre-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54?source=read_next_recirc-----8e11a09a9c2f----1---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "276"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F886a50dabc54&operation=register&redirect=https%3A%2F%2Fartificialcorner.com%2Fyoure-using-chatgpt-wrong-here-s-how-to-be-ahead-of-99-of-chatgpt-users-886a50dabc54&source=-----8e11a09a9c2f----1-----------------bookmark_preview----53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://betterprogramming.pub/how-to-build-your-own-custom-chatgpt-with-custom-knowledge-base-4e61ad82427e?source=read_next_recirc-----8e11a09a9c2f----2---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://medium.com/@timothymugayi?source=read_next_recirc-----8e11a09a9c2f----2---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://medium.com/@timothymugayi?source=read_next_recirc-----8e11a09a9c2f----2---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Timothy Mugayi"}, {"url": "https://betterprogramming.pub/?source=read_next_recirc-----8e11a09a9c2f----2---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Better Programming"}, {"url": "https://betterprogramming.pub/how-to-build-your-own-custom-chatgpt-with-custom-knowledge-base-4e61ad82427e?source=read_next_recirc-----8e11a09a9c2f----2---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "How To Build Your Own Custom ChatGPT With Custom Knowledge BaseFeed your ChatGPT bot with custom data sources"}, {"url": "https://betterprogramming.pub/how-to-build-your-own-custom-chatgpt-with-custom-knowledge-base-4e61ad82427e?source=read_next_recirc-----8e11a09a9c2f----2---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "\u00b711 min read\u00b7Apr 7"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fbetter-programming%2F4e61ad82427e&operation=register&redirect=https%3A%2F%2Fbetterprogramming.pub%2Fhow-to-build-your-own-custom-chatgpt-with-custom-knowledge-base-4e61ad82427e&user=Timothy+Mugayi&userId=34774d6cac27&source=-----4e61ad82427e----2-----------------clap_footer----53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://betterprogramming.pub/how-to-build-your-own-custom-chatgpt-with-custom-knowledge-base-4e61ad82427e?source=read_next_recirc-----8e11a09a9c2f----2---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "83"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4e61ad82427e&operation=register&redirect=https%3A%2F%2Fbetterprogramming.pub%2Fhow-to-build-your-own-custom-chatgpt-with-custom-knowledge-base-4e61ad82427e&source=-----8e11a09a9c2f----2-----------------bookmark_preview----53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----8e11a09a9c2f----3---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://medium.com/@arthurmello_?source=read_next_recirc-----8e11a09a9c2f----3---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://medium.com/@arthurmello_?source=read_next_recirc-----8e11a09a9c2f----3---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Arthur Mello"}, {"url": "https://levelup.gitconnected.com/?source=read_next_recirc-----8e11a09a9c2f----3---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Level Up Coding"}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----8e11a09a9c2f----3---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "Exploratory Data Analysis: The Ultimate WorkflowExplore the true potential of your data with Python"}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----8e11a09a9c2f----3---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": "\u00b716 min read\u00b7Apr 20"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Fgitconnected%2Fa82b1d21f747&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fexploratory-data-analysis-the-ultimate-workflow-a82b1d21f747&user=Arthur+Mello&userId=9d32d5e0ac40&source=-----a82b1d21f747----3-----------------clap_footer----53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://levelup.gitconnected.com/exploratory-data-analysis-the-ultimate-workflow-a82b1d21f747?source=read_next_recirc-----8e11a09a9c2f----3---------------------53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------&responsesOpen=true&sortBy=REVERSE_CHRON", "anchor_text": "5"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa82b1d21f747&operation=register&redirect=https%3A%2F%2Flevelup.gitconnected.com%2Fexploratory-data-analysis-the-ultimate-workflow-a82b1d21f747&source=-----8e11a09a9c2f----3-----------------bookmark_preview----53a85bb8_110c_4c18_b9c5_d3fbf79d5a61-------", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "See more recommendations"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=post_page-----8e11a09a9c2f--------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}