{"url": "https://towardsdatascience.com/space-science-with-python-asteroid-project-part-3-d7dc0941a717", "time": 1683014623.0979688, "path": "towardsdatascience.com/space-science-with-python-asteroid-project-part-3-d7dc0941a717/", "webpage": {"metadata": {"title": "Space Science with Python \u2014 Asteroid Project (Part 3) | by Thomas Albin | Towards Data Science", "h1": "Space Science with Python \u2014 Asteroid Project (Part 3)", "description": "This is the 23rd part of my Python tutorial series \u201cSpace Science with Python\u201d. All codes that are shown in the tutorial sessions are uploaded on GitHub. Enjoy! Last time we discussed the concept of\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/ThomasAlbin/SpaceScienceTutorial", "anchor_text": "GitHub", "paragraph_index": 0}, {"url": "https://www.spyder-ide.org/", "anchor_text": "Spyder", "paragraph_index": 4}, {"url": "https://numpy.org/", "anchor_text": "NumPy", "paragraph_index": 4}, {"url": "https://pandas.pydata.org/", "anchor_text": "Pandas", "paragraph_index": 4}, {"url": "https://matplotlib.org/", "anchor_text": "Matplotlib", "paragraph_index": 4}, {"url": "https://scikit-learn.org/stable/", "anchor_text": "scikit-learn", "paragraph_index": 4}, {"url": "https://docs.python.org/3/library/unittest.html", "anchor_text": "Unittest", "paragraph_index": 5}, {"url": "https://www.spyder-ide.org/blog/introducing-unittest-plugin/", "anchor_text": "Spyder Blog Post", "paragraph_index": 16}, {"url": "https://www.python.org/dev/peps/pep-0008/", "anchor_text": "PEP8", "paragraph_index": 27}, {"url": "https://numpydoc.readthedocs.io/en/latest/format.html", "anchor_text": "Numpy Docstrings", "paragraph_index": 27}], "all_paragraphs": ["This is the 23rd part of my Python tutorial series \u201cSpace Science with Python\u201d. All codes that are shown in the tutorial sessions are uploaded on GitHub. Enjoy!", "Last time we discussed the concept of Test Driven Development, short: TDD. TDD shall help us to develop a Python library for our project that ensures from the beginning on less bugs, a higher reliability (and quality) and maintainability. Of course we will develop new numerical simulations and model a complex \u201ccomputational chain\u201d to determine the detectability of Near-Earth Objects (NEOs). However, basic functions like the conversion of the apparent magnitude of an object to a corresponding irradiance can be easily covered by a TDD approach.", "Providing each time a step-by-step guideline for each function and class would totally exceed the scope of this tutorial series. Therefore, in this session we will go through a single example in detail; for you to reproduce and also to apply to any other coding related problem!", "Please note: Today we are dealing with a rather simple problem, to get an idea of TDD. Any advanced Python user might be bored, but please consider using the concept of TDD and extrapolate it to other problems you may face!", "Before you start with any coding, please ensure that you have a virtual Python environment (at least version 3.8). I recommend also to install an IDE like Spyder, as well as the commonly used packages for scientific working like NumPy, Pandas, Matplotlib, scikit-learn and so on. You may consider my very first article regarding the setup and installation of some important packages:", "Finally, we need a library for testing purposes. Unittest is the standard testing library that is enrolled with the Python installation. For our TDD lesson we will use pytest:", "First of all, we create a Python library folder with a \u201cplaceholder\u201d name called mylib.", "Within this folder we need to create some folders and files to fulfil the minimum requirements for a working Python library.", "First, we create a folder named tests. pytest requires certain folder and file names to automatically identify tests and execute them. Within the tests directory, Python file names have to start with the prefix test_ and within these files the testing routines / functions start also with a test_. This is rather simple to memorise and leads also to a clean testing environment. Of course, one can set also individual names and conventions, but uncommon modifications need to be passed when calling pytest or a configuration file for the testing suite needs to be written.", "A second folder is added called general. Within this directory we will place some production code that could be used for different core functionalities of the library. Now, at this points there is no reason to add this folder since we did not place any test yet. Well, technically TDD asks us to not create code before any unit test has been created. Creating a raw folder structure is totally fine.", "Finally, we need to create __init__.py files in each directory so that Python can identify the content of this library. The init file of mylib contains the information:", "Within general and tests are init files that import / load the files accordingly. Our very first script in general shall contain simple vector operations. The file shall be vec.py. The corresponding testing file in tests shall be named as test_general_vec.py. The overall directory structure looks like this:", "Our first task: We want to create a function that computes the angle p between two vectors a and b:", "We identify several computational steps that are rather easy to comprehend:", "Instead of writing a single unit test for the angle computation, we identified several \u201cmini steps\u201d that can be separated into individual tests. This allows us a larger testing coverage and we have more generic functions that can be used later!", "Let\u2019s start with the norm function. We will call it vec_norm and we will put it in general.vec. A first test covers a vector with the values [1.0, 0.0]. Apparently, the Euclidean norm of this vector is 1:", "We can either perform unit tests in Spyder with a plugin (Spyder Blog Post) or within the terminal. We stay with the terminal in this session. Within mylib we run pytest:", "Apparently, the unit test failed. This is not a surprise since the error message states that there is no \u2018vec_norm\u2019 in mylib.general.vec. Until now, we did not implement anything. So let\u2019s switch to mylib.general.vec and add the function. Further, the computation of the Euclidean norm is quite obvious. No need to fake it:", "Now the pytest succeeds! Perfect! We are done, right? Well \u2026 no. Our implementation covers only 2 dimensional vectors and we did not test less obvious cases. So first, we add some less obvious tests and try to approach the code in a more generic way:", "Please note: After adding a new test, pytest needs to be executed! So in this case, after adding line 9/10 and 12/13 pytest was called.", "Now, we add a three dimensional vector in our test routine:", "Our approach in vec.py was not optimal and was only valid for 2 dimensional vectors. Let\u2019s try a generic approach:", "We changed our function completely! The function iterates now through the vector elements and sums their squared results. But does the new refactored version provide the same results? That\u2019s where TDD shows one of its strengths: We coded already some tests and added also a new one. There is no need to worry. If the tests pass: Nice. If the tests do not pass: Well, we have a working version for 2 dimensional vectors\u2026", "For our use case, we will stay with the Euclidean Norm. But thanks to the TDD approach we can easily extend our function to provide more norm functions like:", "In fact, the P Norm with p=2 corresponds to the Euclidean Norm. So let\u2019s generalise our function even more! We add another test \u2026", "\u2026 that fails, so we edit our function a little bit \u2026", "Note: Since our first tests do not include the parameter norm we need to define a default value (here: p2) in line 3, otherwise the first tests will fail. An if-statement checks now for the requested vector norm. For now, we have only implemented the P Norm. Feel free to add more norm routines like the maximum norm, otherwise a single if-statement appears to be unnecessary. Furthermore, the P Norm cannot be p=0 or negative; and also values larger than 10 become a problem (check the logic in line 6)! Try to improve the function by implementing the logic using the TDD approach.", "Now that we have written our first TDD based function a little clean up helps us to understand the code in the long run. PEP8 and Numpy Docstrings are feasible ways to create understandable and sustainable code. Our function becomes:", "The same clean up procedure applies also for the testing routines. Please take some time to make the Python test scripts PEP8 and Numpdy Docstring \u2014 compliant.", "Our next function shall be the dot product of two vectors. This time we pace up the process a little bit. First, we add a new testing function in line 22 to 26 and create a dot product example. The result is determined by hand.", "Let\u2019s execute the pytest. It fails, since we do not have the function yet:", "We create a new function in general/vec.py called vec_dotprod and implement the obvious solution for this routine (line 46). pytest does not fail and both functions are passed! We validate the function with a second and third test and clean the function up with the mentioned standards.", "Finally, we can define our very last function to compute the enclosed angle between two vectors. We call the function vec_angle we add a test and of course the test fails in the first run. Since we have the equation (see above), we have the obvious solution and can implement it accordingly. However, we decide to return angles in radians!", "An angle computation unit test may look like:", "\u2026 and pytest does not return any error. Feel free to add more tests as an exercise! It appears that our implementation is finally done. We did it, a first TDD approach based coding session.", "But some things may become a problem in the long run. Let\u2019s take a look at our last testing result:", "Per default, pytest tests all functions. All tests pass within 0.02 seconds. However, image more extensive and complex functions that take a few minutes to pass. We do not want to test all functions all over again when we do not add new unit tests to older (already passed) functions. So how can we execute only particular testing routines?", "Thankfully, pytest provides more functionalities (I highly recommend the documentation) that allows us to test individual functions without executing the entire testing directory.", "By setting so called markers we can execute pytest on individual functions and classes. These markers are Python decorators and \u201cdecorate\u201d each testing function. Our testing suite becomes:", "As you can see, we import pytest (line 3) and define decorators / markers in line 5, 24 and 39, respectively. Now we need to register these markers in a configuration file called pytest.ini that is stored in the main directory of our library:", "Without this file the pytest routine would call warnings with the hint to configure individually set markers.", "Now we test only one function. Let\u2019s say: vec_norm. Our pytest command becomes (where -m indicates the usage of markers and vec_norm is the registered marker name):", "Only 1 test passed and 2 have been deselected, as required.", "Test Driven Development \u2026 it appears tedious, right? Well \u2026 yes. In the beginning it requires a lot of discipline to follow this approach. But in the long run one creates functions for one\u2019s project that are a solid fundament. Proved, error-free (at least for the examples and tests) and reliable. One does not need to worry about possible negative effects and impacts on one\u2019s codes. You changed something? Or did you add new functionalities? Did your colleague change something and you are not sure about the results? No problem: just execute the already existing testing routines and your gut feelings become measurable.", "From now on we will develop our NEO Python library. We will start with basic functions (magnitude computation, implementation of telescope settings, download of most recent NEO and model data and so on). We will not cover every project step as extensively as in this TDD example. However, we will use TDD to ensure a certain quality and reliability of the code.", "In the meantime I will think about a library name and set up an additional GitHub repository for it.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist and Engineer. Astrophysicist and Solar System researcher \u2014 Now working in the automotive industry"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd7dc0941a717&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d7dc0941a717--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d7dc0941a717--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://thomas-albin.medium.com/?source=post_page-----d7dc0941a717--------------------------------", "anchor_text": ""}, {"url": "https://thomas-albin.medium.com/?source=post_page-----d7dc0941a717--------------------------------", "anchor_text": "Thomas Albin"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe5af1ec51465&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&user=Thomas+Albin&userId=e5af1ec51465&source=post_page-e5af1ec51465----d7dc0941a717---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd7dc0941a717&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd7dc0941a717&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/tagged/space-science-with-python", "anchor_text": "Space Science with Python"}, {"url": "https://towardsdatascience.com/tagged/space-science-with-python", "anchor_text": "tutorial series"}, {"url": "https://unsplash.com/@davidclode?utm_source=medium&utm_medium=referral", "anchor_text": "David Clode"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/ThomasAlbin/SpaceScienceTutorial", "anchor_text": "GitHub"}, {"url": "https://towardsdatascience.com/asteroid-project-part-2-test-driven-development-ed7af6c1820e", "anchor_text": "Asteroid Project (Part 2) \u2014 Test Driven DevelopmentPart 22 of the tutorial series continues with the second part of our science project. Before we dive deeper into Python\u2026towardsdatascience.com"}, {"url": "https://www.spyder-ide.org/", "anchor_text": "Spyder"}, {"url": "https://numpy.org/", "anchor_text": "NumPy"}, {"url": "https://pandas.pydata.org/", "anchor_text": "Pandas"}, {"url": "https://matplotlib.org/", "anchor_text": "Matplotlib"}, {"url": "https://scikit-learn.org/stable/", "anchor_text": "scikit-learn"}, {"url": "https://towardsdatascience.com/space-science-with-python-setup-and-first-steps-1-8551334118f6", "anchor_text": "Space Science with Python \u2014 Setup and first stepsA starting guide to became a Citizen Space Scientisttowardsdatascience.com"}, {"url": "https://docs.python.org/3/library/unittest.html", "anchor_text": "Unittest"}, {"url": "https://docs.pytest.org/en/stable/", "anchor_text": "pytest: helps you write better programs - pytest documentationThe maintainers of pytest and thousands of other packages are working with Tidelift to deliver commercial support and\u2026docs.pytest.org"}, {"url": "https://www.spyder-ide.org/blog/introducing-unittest-plugin/", "anchor_text": "Spyder Blog Post"}, {"url": "https://www.python.org/dev/peps/pep-0008/", "anchor_text": "PEP8"}, {"url": "https://numpydoc.readthedocs.io/en/latest/format.html", "anchor_text": "Numpy Docstrings"}, {"url": "https://docs.pytest.org/en/stable/contents.html", "anchor_text": "Full pytest documentation - pytest documentationThe writing and reporting of assertions in testsdocs.pytest.org"}, {"url": "https://medium.com/tag/science?source=post_page-----d7dc0941a717---------------science-----------------", "anchor_text": "Science"}, {"url": "https://medium.com/tag/python?source=post_page-----d7dc0941a717---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/software-development?source=post_page-----d7dc0941a717---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d7dc0941a717---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----d7dc0941a717---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd7dc0941a717&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&user=Thomas+Albin&userId=e5af1ec51465&source=-----d7dc0941a717---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd7dc0941a717&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&user=Thomas+Albin&userId=e5af1ec51465&source=-----d7dc0941a717---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd7dc0941a717&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d7dc0941a717--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd7dc0941a717&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d7dc0941a717---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d7dc0941a717--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d7dc0941a717--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d7dc0941a717--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d7dc0941a717--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d7dc0941a717--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d7dc0941a717--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d7dc0941a717--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d7dc0941a717--------------------------------", "anchor_text": ""}, {"url": "https://thomas-albin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://thomas-albin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Thomas Albin"}, {"url": "https://thomas-albin.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "432 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fe5af1ec51465&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&user=Thomas+Albin&userId=e5af1ec51465&source=post_page-e5af1ec51465--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe56e0e06b404&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fspace-science-with-python-asteroid-project-part-3-d7dc0941a717&newsletterV3=e5af1ec51465&newsletterV3Id=e56e0e06b404&user=Thomas+Albin&userId=e5af1ec51465&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}