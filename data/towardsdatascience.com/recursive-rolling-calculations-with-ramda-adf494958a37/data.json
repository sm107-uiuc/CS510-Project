{"url": "https://towardsdatascience.com/recursive-rolling-calculations-with-ramda-adf494958a37", "time": 1682993758.827577, "path": "towardsdatascience.com/recursive-rolling-calculations-with-ramda-adf494958a37/", "webpage": {"metadata": {"title": "Recursive Rolling Calculations with Ramda | by John Cothran | Towards Data Science", "h1": "Recursive Rolling Calculations with Ramda", "description": "The rolling average, or moving average, is among the most popular trend indicators for anyone who has an interest in datasets that fluctuate over time. This is especially true for traders, who are\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/ventre-tech/recursion-made-simple-with-roman-numerals-4ae3cab27755", "anchor_text": "this article", "paragraph_index": 3}, {"url": "https://medium.com/ventre-tech/haskells-triangle-or-more-fun-with-recursion-9350155689ac", "anchor_text": "this article", "paragraph_index": 3}, {"url": "https://ramdajs.com/", "anchor_text": "Ramda.js", "paragraph_index": 12}, {"url": "https://www.coursera.org/lecture/deep-neural-network/exponentially-weighted-averages-duStO", "anchor_text": "Andrew Ng presents here.", "paragraph_index": 24}, {"url": "https://beta.observablehq.com/@johnwcothran/a-recursive-rolling-average-function-with-ramdajs", "anchor_text": "Observable notebook", "paragraph_index": 29}], "all_paragraphs": ["The rolling average, or moving average, is among the most popular trend indicators for anyone who has an interest in datasets that fluctuate over time. This is especially true for traders, who are constantly striving to decipher trend signals in the constant flux of the financial markets.", "This article is for people who have a background in data science, and who are interested in learning more about the functional approach to programming. Recursion is a concept that may take some time and thought to comprehend, and so I would like to show a practical approach to using recursion in a real-world setting.", "My primary goal is to calculate moving averages (specifically exponential moving averages) using the functional approach of recursion rather than \u2018for loops\u2019. I will be leaning heavily on Ramda.js, an incredibly useful functional Javascript library.", "I\u2019m going to assume the reader of this article is familiar with moving averages, so let\u2019s jump straight to recursion. Inspiration of this post comes directly from this article and this article. Typing \u201crecursion\u201d into Google yields the following definition:", "The repeated application of a recursive procedure or definition", "It\u2019s a recursive definition \u2014 cool!", "A recursive function is a function that is defined in terms of itself. Another way to think about a recursive function is that it invokes itself \u2014 until it doesn\u2019t. Running const squareMe = n => squareMe(n*n) will run over and over again and quickly blow your call stack.", "This is why we need a \u201cbase case,\u201d which is a condition that defines when the function will terminate.", "Additionally, a recursive function actually needs to call itself, which is called a \u2018recursion.\u2019", "Lastly, in order to do anything useful, a recursive function needs to have an \u2018action.\u2019", "To demonstrate these three components of a recursive function, let\u2019s write a function that counts by one to a given number:", "Recursion is an alternative to for loops, and a more functional way of iterating through a dataset to achieve the desired result.", "Ramda.js is a lightweight, functional Javascript library that is designed for people who want to keep their code pure and functional, and their functions immutable and free of side-effects. Oh, and data comes last \u2014 it\u2019s just better.", "Let\u2019s start with taking the simple moving average of a list of numbers:", "There are three parts to this function.", "The first if statement simply returns the arr as soon as the length of the data argument reaches 0. This is the \u2018base case\u2019.", "The second if statement recursively calls sma when the length of the data argument reaches less than the num argument, using Ramda\u2019s prepend to add the \u2018not yet!\u2019 string to the front of arr.", "The final return statement is the meat of this function. It applies Ramda\u2019s mean function to the appropriate elements of the newData, returning a new arr with the appended mean each time.", "The last thing to emphasize here is how each time the function invokes itself, it is doing so on newData, which simply returns data without the first element (R.tail). Let\u2019s add a console.log statement before each return statement so we can see exactly what is going on inside sma:", "This shows exactly what is going on when you call sma. After the function runs the first time, it returns a copy of arr with the mean of the first three numbers of the initial data. The second time the function runs, it returns a copy of the copy of arr with the mean of the first three numbers of the copy of data that has had its first element sliced off.", "Notice that the 'not yet' strings have to be prepended to arr at the end of the recursion process. Also, since these are placeholders, we don\u2019t get actual values, which leads to the next step in this article: the exponential moving average.", "So far, we\u2019ve covered the basics of recursion, applying them to creating a simple moving average on a list with some help from Ramda.", "Let\u2019s tackle this concept in a different way, applying it to a real-world situation. We\u2019ll use the IEX API to pull in some longitudinal data from the stock exchange:", "This function fetches AAPL data from the IEX trading API and returns a list of objects with a date and value. Charting this dataset will look something like this:", "Now we need to write a function that gives us the exponentially weighted moving average of this dataset, and for this we\u2019ll use the exponentially weighted moving average that Andrew Ng presents here. Writing it into a javascript function looks like this [line 8]:", "First, ewa takes two arguments - decay is simply the number of days you want to weight over, while data is your list of objects you want to operate on. Next, ewa defines beta, which is calculated from decay using a bit of exponential algebra, and essentially controls the smoothing of the algorithm.", "The function checkArr is where the magic of the algorithm happens. On the first iteration of ewa, the arr is empty \u2014 therefore checkArr just sets the value of the first element of the new arr to the first value in data [line 7]. There is no previous data point to exponentially weight! On the rest of the ewa recursive calls, checkArr returns the weighted value controlled by beta in the algorithm since arr is no longer empty.", "In functional programming, a \u2018curried\u2019 function is one that, if provided less arguments than it takes, returns a new function which takes the remaining arguments. This technique is extremely helpful when you need to compose new functions. Let\u2019s use Ramda\u2019s curry function to create a bunch of different ewa functions:", "Now, charting ewaTwenty, ewaFifty, and ewaHundred gives us this:", "There is a lot going on here, and my hope is that I have helped to show how useful recursion and Ramda can be. If you aren\u2019t familiar with these concepts already, it can take a while to get your head around them (at least it did for me). However, I\u2019ve set up an Observable notebook where you can explore in depth the code in this post.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Sports Tech & Analysis @ Philadelphia Union | Functional Programming | Data Science"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fadf494958a37&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----adf494958a37--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----adf494958a37--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@johnwcothran?source=post_page-----adf494958a37--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@johnwcothran?source=post_page-----adf494958a37--------------------------------", "anchor_text": "John Cothran"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F861146b2a610&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&user=John+Cothran&userId=861146b2a610&source=post_page-861146b2a610----adf494958a37---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fadf494958a37&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fadf494958a37&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://medium.com/ventre-tech/recursion-made-simple-with-roman-numerals-4ae3cab27755", "anchor_text": "this article"}, {"url": "https://medium.com/ventre-tech/haskells-triangle-or-more-fun-with-recursion-9350155689ac", "anchor_text": "this article"}, {"url": "https://ramdajs.com/", "anchor_text": "Ramda.js"}, {"url": "https://www.coursera.org/lecture/deep-neural-network/exponentially-weighted-averages-duStO", "anchor_text": "Andrew Ng presents here."}, {"url": "https://beta.observablehq.com/@johnwcothran/a-recursive-rolling-average-function-with-ramdajs", "anchor_text": "Observable notebook"}, {"url": "https://medium.com/tag/javascript?source=post_page-----adf494958a37---------------javascript-----------------", "anchor_text": "JavaScript"}, {"url": "https://medium.com/tag/functional-programming?source=post_page-----adf494958a37---------------functional_programming-----------------", "anchor_text": "Functional Programming"}, {"url": "https://medium.com/tag/statistics?source=post_page-----adf494958a37---------------statistics-----------------", "anchor_text": "Statistics"}, {"url": "https://medium.com/tag/recursion?source=post_page-----adf494958a37---------------recursion-----------------", "anchor_text": "Recursion"}, {"url": "https://medium.com/tag/ramda?source=post_page-----adf494958a37---------------ramda-----------------", "anchor_text": "Ramda"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fadf494958a37&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&user=John+Cothran&userId=861146b2a610&source=-----adf494958a37---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fadf494958a37&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&user=John+Cothran&userId=861146b2a610&source=-----adf494958a37---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fadf494958a37&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----adf494958a37--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fadf494958a37&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----adf494958a37---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----adf494958a37--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----adf494958a37--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----adf494958a37--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----adf494958a37--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----adf494958a37--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----adf494958a37--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----adf494958a37--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----adf494958a37--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@johnwcothran?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@johnwcothran?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "John Cothran"}, {"url": "https://medium.com/@johnwcothran/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "130 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F861146b2a610&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&user=John+Cothran&userId=861146b2a610&source=post_page-861146b2a610--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F861146b2a610%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Frecursive-rolling-calculations-with-ramda-adf494958a37&user=John+Cothran&userId=861146b2a610&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}