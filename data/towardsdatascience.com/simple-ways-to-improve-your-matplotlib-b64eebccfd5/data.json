{"url": "https://towardsdatascience.com/simple-ways-to-improve-your-matplotlib-b64eebccfd5", "time": 1682997685.014358, "path": "towardsdatascience.com/simple-ways-to-improve-your-matplotlib-b64eebccfd5/", "webpage": {"metadata": {"title": "Simple Ways to Improve Your Matplotlib | by Kimberly Fessel | Towards Data Science", "h1": "Simple Ways to Improve Your Matplotlib", "description": "Matplotlib is typically the first data visualization package that Python programmers learn. While its users can create basic figures with just a few lines of code, these resulting default plots often\u2026"}, "outgoing_paragraph_urls": [{"url": "https://matplotlib.org/", "anchor_text": "Matplotlib", "paragraph_index": 0}, {"url": "https://www.kaggle.com/crawford/80-cereals", "anchor_text": "this Kaggle dataset about cereals", "paragraph_index": 1}, {"url": "https://github.com/kimfetti/Blog/blob/master/matplotlib_improvements.ipynb", "anchor_text": "GitHub", "paragraph_index": 1}, {"url": "https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.gca.html", "anchor_text": "get our figure\u2019s axes", "paragraph_index": 2}, {"url": "https://matplotlib.org/3.1.1/users/dflt_style_changes.html#colors-color-cycles-and-color-maps", "anchor_text": "default colors just got an upgrade", "paragraph_index": 6}, {"url": "https://htmlcolorcodes.com/", "anchor_text": "hex codes", "paragraph_index": 7}, {"url": "https://www.w3schools.com/colors/colors_picker.asp", "anchor_text": "This handy tool", "paragraph_index": 8}, {"url": "http://vrl.cs.brown.edu/color", "anchor_text": "Colorgorical", "paragraph_index": 8}, {"url": "https://xkcd.com/color/rgb/", "anchor_text": "xkcd color library", "paragraph_index": 9}, {"url": "https://blog.xkcd.com/2010/05/03/color-survey-results/", "anchor_text": "xkcd color name survey", "paragraph_index": 9}, {"url": "https://matplotlib.org/3.1.1/api/patches_api.html#module-matplotlib.patches", "anchor_text": "patches module", "paragraph_index": 19}, {"url": "https://matplotlib.org/3.1.1/gallery/shapes_and_collections/dolphin.html#sphx-glr-gallery-shapes-and-collections-dolphin-py", "anchor_text": "dolphin", "paragraph_index": 19}, {"url": "https://matplotlib.org/api/_as_gen/matplotlib.pyplot.fill_between.html", "anchor_text": "shade between two user-defined lines", "paragraph_index": 25}, {"url": "https://seaborn.pydata.org/", "anchor_text": "Seaborn", "paragraph_index": 27}, {"url": "https://odsc.com/training/portfolio/custom-data-visualizations-with-python/", "anchor_text": "ODSC NYC", "paragraph_index": 29}, {"url": "http://bit.ly/odscNyc19_dataviz", "anchor_text": "here", "paragraph_index": 29}, {"url": "https://github.com/kimfetti/Blog/blob/master/matplotlib_improvements.ipynb", "anchor_text": "here", "paragraph_index": 29}, {"url": "http://vrl.cs.brown.edu/color", "anchor_text": "Colorgorical: creating discriminable and preferable color palettes for information visualization", "paragraph_index": 30}], "all_paragraphs": ["Matplotlib is typically the first data visualization package that Python programmers learn. While its users can create basic figures with just a few lines of code, these resulting default plots often prove insufficient in both design aesthetics and communicative power. Simple adjustments can lead to dramatic improvements, however, and in this post, I will share several tips on how to upgrade your Matplotlib figures.", "In the examples that follow, I will be using information found in this Kaggle dataset about cereals. I have normalized three features (calories, fat, and sugar) by serving size to better compare cereal nutrition and ratings. Details about these data transformations and the code used to generate each example figure can be found on my GitHub.", "The first Matplotlib default to update is that black box surrounding each plot, comprised of four so-called \u201cspines.\u201d To adjust them we first get our figure\u2019s axes via pyplot and then change the visibility of each individual spine as desired.", "Let\u2019s say, for example, we want to remove the top and right spines. If we have imported Matplotlib\u2019s pyplot submodule with:", "we just need to add the following to our code:", "and the top and right spines will no longer appear. Removing these distracting lines allows more focus to be directed toward your data.", "Matplotlib\u2019s default colors just got an upgrade but you can still easily change them to make your plots more attractive or even to reflect your company\u2019s brand colors.", "One of my favorite methods for updating Matplotlib\u2019s colors is directly passing hex codes into the color argument because it allows me to be extremely specific about my color choices.", "This handy tool can help you select an appropriate hex color by testing it against white and black text as well as comparing several lighter and darker shades. Alternatively, you can take a more scientific approach when choosing your palette by checking out Colorgorical by Connor Gramazio from the Brown Visualization Research Lab. The Colorgorical tool allows you to build a color palette by balancing various preferences like human perceptual difference and aesthetic pleasure.", "The xkcd color library provides another great way to update Matplotlib\u2019s default colors. These 954 colors were specifically curated and named by several hundred thousand participants of the xkcd color name survey. You can use them in Matplotlib by prefixing their names with \u201cxkcd:\u201d.", "Matplotlib allows users to layer multiple graphics on top of each other, which proves convenient when comparing results or setting baselines. Two useful properties should be utilized while layering: 1) alpha for controlling each component\u2019s opacity and 2) zorder for moving objects to the foreground or background.", "The alpha property in Matplotlib adjusts an object\u2019s opacity. This value ranges from zero to one with zero being fully transparent (invisible \ud83d\udc40) and one being entirely opaque. Reducing alpha will make your plot objects see-through, allowing multiple layers to be seen at once as well as allowing overlapping points to be distinguished, say, in a scatter plot.", "Matplotlib\u2019s zorder property determines how close objects are to the foreground. Objects with smaller zorder values appear closer to the background, while those with larger values present closer to the front. If I\u2019m making a scatter plot with an accompanying line plot, for example, I can bring the line forward by increasing its zorder.", "Many visuals can benefit from the annotation of main points or specific, illustrative examples because these directly convey ideas and boost the validity of results. To add text to a Matplotlib figure, just include annotation code specifying the desired text and its location.", "The cereal dataset used to produced this blog\u2019s visuals contains nutritional information about several brand name cereals along with a feature labeled as \u201crating.\u201d One might firstly assume that \u201crating\u201d is a score indicating cereals that consumers prefer. In the zorder figure above, however, I built a quick linear regression model showing that the correlation between calories per cup and rating is practically non-existent. It seems unlikely that calories would not factor into consumer preference, so we may already be skeptical about our initial assumption about \u201crating.\u201d", "This misconception becomes even more obvious when examining the extremes: Cap\u2019n Crunch is the lowest rated cereal while All-Bran with Extra Fiber rates the highest. Annotating the figure with these representative examples immediately dispels false assumptions about \u201crating.\u201d This rating information more likely indicates a cereal\u2019s nutritional value. (I have also annotated the cereal with the most calories per cup; Grape Nuts is likely not meant to be consumed in such large quantities! \ud83d\ude06)", "Adding a baseline to your visuals helps set expectations. A simple horizontal or vertical line provides others with appropriate context and often speeds along their understanding of your results. Highlighting a specific region of interest, meanwhile, can further emphasize your conclusions and also facilitates communication with your audience. Matplotlib offers several options for baselining and highlighting, including horizontal and vertical lines, shapes such as rectangles, horizontal and vertical span shading, and filling between two lines.", "Let\u2019s now consider the interplay between fat and sugar in our cereal dataset. A basic scatter plot of this relationship doesn\u2019t appear interesting at first, but after exploring further, we find the median fat per cup of cereal is just one gram because so many cereals contain no fat at all. Adding this baseline helps people arrive at this finding much more quickly.", "In other cases you may want to completely remove the default x- and y-axes that Matplotlib provides and create your own axes based on some data aggregate. This process requires three key steps: 1) remove all default spines, 2) remove tick marks, and 3) add new axes as horizontal and vertical lines.", "Now that we have plotted the cereals\u2019 fat and sugar contents on new axes, it appears that very few cereals are low in sugar but high in fat. That is, the upper-left quadrant is nearly empty. This seems reasonable because cereals typically are not savory. To make this point abundantly clear, we could direct attention to this low-sugar, high-fat area by drawing a rectangle around it and annotating. Matplotlib provides access to several shapes through its patches module, including a rectangle or even a dolphin. Begin by importing code for the rectangle:", "Then to create a rectangle on the figure, grab the current axes and add a rectangular patch with its location, width, and height:", "Here, the x- and y-positions refer to the placement of the lower-left corner of the rectangle.", "Shading provides an alternative option for drawing attention to a particular region of your figure, and there are a few ways to add shading with Matplotlib.", "If you intend to highlight an entire horizontal or vertical area, just layer a span into your visual:", "Previously discussed properties like alpha and zorder are critical here because you will likely want to make your shading transparent and/or move it to the background.", "If the area you would like to shade follows more complicated logic, however, you may instead shade between two user-defined lines. This approach takes a set of x-values, two sets of y-values for the first and second lines, and an optional where argument that allows you to use logic to filter down to your region of interest.", "To shade the same area that was previously highlighted with a rectangle, simply define an array of equally spaced sugar values for the x-axis, fill between the median and max fat values on the y-axis (high fat), and filter down to sugar values less than the median (low sugar).", "Matplotlib gets a bad reputation because of its poor defaults and the shear amount of code needed to produce decent looking visuals. Hopefully, the tips provided in this blog will help you address the first issue, though I\u2019ll admit that the final few example figures required many updates and subsequently a sizable amount of code. If the required bulk of code bothers you, the Seaborn visualization library is an excellent alternative to Matplotlib. It comes with better defaults overall, demands fewer lines of code, and supports customization via traditional Matplotlib syntax if needed.", "The main thing to keep in mind when you visualize data\u2013no matter which package you choose\u2013is your audience. The suggestions I\u2019ve offered here aim to smooth out the data communication process by 1) removing extraneous bits like unnecessary spines or tick marks, 2) telling the data story quicker by setting expectations with layering and baselines, and 3) highlighting main conclusions with shading and annotations. The resulting aesthetics also improve, but the primary goal is stronger and more seamless data communication.", "I recently shared content similar to this in a data visualization talk at ODSC NYC. You can access my original conference materials here as well as the code that powers each example figure on my GitHub here.", "[3] C.C. Gramazio, D.H. Laidlaw and K.B. Schloss, Colorgorical: creating discriminable and preferable color palettes for information visualization (2017), IEEE Transactions on Visualization and Computer Graphics.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Science Educator. Applied Math PhD. Enthusiastic about data storytelling, data visualization, and NLP.."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb64eebccfd5&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b64eebccfd5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b64eebccfd5--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@kimberlyfessel?source=post_page-----b64eebccfd5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@kimberlyfessel?source=post_page-----b64eebccfd5--------------------------------", "anchor_text": "Kimberly Fessel"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fad4dcae70eec&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&user=Kimberly+Fessel&userId=ad4dcae70eec&source=post_page-ad4dcae70eec----b64eebccfd5---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb64eebccfd5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb64eebccfd5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://bit.ly/31rt1Zq", "anchor_text": "Photo by Alice Bartlett."}, {"url": "https://matplotlib.org/", "anchor_text": "Matplotlib"}, {"url": "https://www.kaggle.com/crawford/80-cereals", "anchor_text": "this Kaggle dataset about cereals"}, {"url": "https://github.com/kimfetti/Blog/blob/master/matplotlib_improvements.ipynb", "anchor_text": "GitHub"}, {"url": "https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.gca.html", "anchor_text": "get our figure\u2019s axes"}, {"url": "https://matplotlib.org/3.1.1/users/dflt_style_changes.html#colors-color-cycles-and-color-maps", "anchor_text": "default colors just got an upgrade"}, {"url": "https://htmlcolorcodes.com/", "anchor_text": "hex codes"}, {"url": "https://www.w3schools.com/colors/colors_picker.asp", "anchor_text": "This handy tool"}, {"url": "http://vrl.cs.brown.edu/color", "anchor_text": "Colorgorical"}, {"url": "https://xkcd.com/color/rgb/", "anchor_text": "xkcd color library"}, {"url": "https://blog.xkcd.com/2010/05/03/color-survey-results/", "anchor_text": "xkcd color name survey"}, {"url": "https://matplotlib.org/3.1.1/api/patches_api.html#module-matplotlib.patches", "anchor_text": "patches module"}, {"url": "https://matplotlib.org/3.1.1/gallery/shapes_and_collections/dolphin.html#sphx-glr-gallery-shapes-and-collections-dolphin-py", "anchor_text": "dolphin"}, {"url": "https://matplotlib.org/api/_as_gen/matplotlib.pyplot.fill_between.html", "anchor_text": "shade between two user-defined lines"}, {"url": "https://seaborn.pydata.org/", "anchor_text": "Seaborn"}, {"url": "https://odsc.com/training/portfolio/custom-data-visualizations-with-python/", "anchor_text": "ODSC NYC"}, {"url": "http://bit.ly/odscNyc19_dataviz", "anchor_text": "here"}, {"url": "https://github.com/kimfetti/Blog/blob/master/matplotlib_improvements.ipynb", "anchor_text": "here"}, {"url": "https://matplotlib.org/", "anchor_text": "Matplotlib: A 2D Graphics Environment"}, {"url": "https://www.kaggle.com/crawford/80-cereals", "anchor_text": "80 Cereals"}, {"url": "http://vrl.cs.brown.edu/color", "anchor_text": "Colorgorical: creating discriminable and preferable color palettes for information visualization"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----b64eebccfd5---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/data-science?source=post_page-----b64eebccfd5---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/visualization?source=post_page-----b64eebccfd5---------------visualization-----------------", "anchor_text": "Visualization"}, {"url": "https://medium.com/tag/programming?source=post_page-----b64eebccfd5---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb64eebccfd5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&user=Kimberly+Fessel&userId=ad4dcae70eec&source=-----b64eebccfd5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb64eebccfd5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&user=Kimberly+Fessel&userId=ad4dcae70eec&source=-----b64eebccfd5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb64eebccfd5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b64eebccfd5--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb64eebccfd5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b64eebccfd5---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b64eebccfd5--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b64eebccfd5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b64eebccfd5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b64eebccfd5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b64eebccfd5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b64eebccfd5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b64eebccfd5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b64eebccfd5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@kimberlyfessel?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@kimberlyfessel?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Kimberly Fessel"}, {"url": "https://medium.com/@kimberlyfessel/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "243 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fad4dcae70eec&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&user=Kimberly+Fessel&userId=ad4dcae70eec&source=post_page-ad4dcae70eec--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fc2620b9f107f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsimple-ways-to-improve-your-matplotlib-b64eebccfd5&newsletterV3=ad4dcae70eec&newsletterV3Id=c2620b9f107f&user=Kimberly+Fessel&userId=ad4dcae70eec&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}