{"url": "https://towardsdatascience.com/the-hero-rises-build-your-own-ssd-febfbdd3bd03", "time": 1683006088.662226, "path": "towardsdatascience.com/the-hero-rises-build-your-own-ssd-febfbdd3bd03/", "webpage": {"metadata": {"title": "The Hero Rises: Build Your Own SSD | by Dan Malowany | Towards Data Science", "h1": "The Hero Rises: Build Your Own SSD", "description": "As the state-of-the-art models keep changing, one needs to effectively write a modular machine learning codebase to support and sustain R&D machine and deep learning efforts for years. In our first\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.linkedin.com/in/dan-malowany-78b2b21/", "anchor_text": "Dan Malowany", "paragraph_index": 0}, {"url": "https://www.linkedin.com/in/gal-hyams-2146a662/", "anchor_text": "Gal Hyams", "paragraph_index": 0}, {"url": "https://medium.com/u/7743e9a45144?source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": "Allegro AI Team", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/once-upon-a-repository-how-to-write-readable-maintainable-code-with-pytorch-951f03f6a829", "anchor_text": "first blog of this series", "paragraph_index": 1}, {"url": "https://github.com/pytorch/ignite", "anchor_text": "Ignite", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/the-battle-of-speed-vs-23b61eb4225d", "anchor_text": "second post (part IIA)", "paragraph_index": 1}, {"url": "https://pytorch.org/docs/stable/torchvision/index.html", "anchor_text": "Torchvision", "paragraph_index": 2}, {"url": "https://pytorch.org/", "anchor_text": "PyTorch", "paragraph_index": 2}, {"url": "https://link.springer.com/chapter/10.1007/978-3-319-46448-0_2", "anchor_text": "SSD", "paragraph_index": 3}, {"url": "https://github.com/allegroai/trains-blogs/tree/master/the_hero_rises", "anchor_text": "Github", "paragraph_index": 3}, {"url": "https://github.com/allegroai/trains-blogs/blob/fd92c462cbbceb8d4027aec2cf9acd5579117fe1/the_hero_rises/SSD/ssd_model.py#L113", "anchor_text": "SSD class constructor", "paragraph_index": 4}, {"url": "https://github.com/allegroai/trains-blogs/blob/fd92c462cbbceb8d4027aec2cf9acd5579117fe1/the_hero_rises/SSD/ssd_model.py#L17", "anchor_text": "lists", "paragraph_index": 5}, {"url": "https://github.com/allegroai/trains-blogs/blob/fd92c462cbbceb8d4027aec2cf9acd5579117fe1/the_hero_rises/SSD/box_coder.py#L13", "anchor_text": "computation", "paragraph_index": 5}, {"url": "https://github.com/allegroai/trains-blogs/blob/master/once_upon_a_repository/train_model.py", "anchor_text": "MaskRCNN codebase", "paragraph_index": 15}, {"url": "https://github.com/allegroai/trains-server", "anchor_text": "Trains Server", "paragraph_index": 15}, {"url": "https://github.com/allegroai/trains-blogs/tree/master/once_upon_a_repository", "anchor_text": "original codebase", "paragraph_index": 18}, {"url": "https://github.com/allegroai/trains", "anchor_text": "Allegro Trains", "paragraph_index": 18}, {"url": "https://github.com/allegroai/trains-server", "anchor_text": "Trains Server", "paragraph_index": 19}, {"url": "https://allegro.ai/blog/the-battle-of-speed-accuracy-single-shot-vs-two-shot-detection/", "anchor_text": "previous post (IIA)", "paragraph_index": 20}, {"url": "https://github.com/allegroai/trains-blogs/tree/master/the_hero_rises", "anchor_text": "Github", "paragraph_index": 21}, {"url": "https://github.com/kuangliu/torchcv/tree/master/examples/ssd", "anchor_text": "this", "paragraph_index": 21}], "all_paragraphs": ["Written by Dan Malowany and Gal Hyams Allegro AI Team", "As the state-of-the-art models keep changing, one needs to effectively write a modular machine learning codebase to support and sustain R&D machine and deep learning efforts for years. In our first blog of this series, we demonstrated how to write a readable and maintainable code that trains a Torchvision MaskRCNN model, harnessing Ignite\u2019s framework. In our second post (part IIA), we detailed the fundamental differences between single-shot and two-shot detectors and why the single-shot approach is in the sweet spot of the speed/accuracy trade-off. So it\u2019s only natural that in this post we glean how to leverage the modular nature of the MaskRCNN codebase and enable it to train both MaskRCNN and SSD models. Thanks to the modular nature of the codebase, only minimal changes are needed in the code.", "Torchvision is a package that consists of popular datasets, model architectures, and common image transformations for computer vision. It contains, among others, a model-zoo of pre-trained models for image classification, object detection, person keypoint detection, semantic segmentation and instance segmentation models, ready for out-of-the-box use. This makes a PyTorch user\u2019s life significantly easier as it shortens the time between an idea and a product. Or a research paper. Or a blog post.", "Torchvision does not contain implementations of single-shot object detection models, such as this popular SSD. So, we added one: an SSD implementation based on a Torchvision model as a backbone for feature extraction. Since its release, many improvements have been constructed on the original SSD. However, we have focused on the original SSD meta-architecture for clarity and simplicity. Let\u2019s deep dive into the logic and methods of the implementation. The full code is available on Github.", "First, we put our flashlight on the code constants, which are the default input arguments to the SSD class constructor. These are the common values for a 512\u00d7512 input image, tailored to the PASCAL-VOC dataset. (In part III of this series, we will demonstrate how to adjust these values to your own dataset)", "Each of these lists contains 7 entries \u2014 one entry per feature map from which object detection is done (see figure 1 above). Note that one of the lists, BOX_SIZES, has 8 entries and the actual box sizes computation is performed based on these values.", "As illustrated in figure 2 (above), rectangle and square anchors tile the feature maps. The aspect_ratio list contains a list of rectangular aspect ratios for each feature map. Each number on this list defines two rectangles per prior center: one with the mentioned aspect ratio and one with it reversed. I.e, for each 2:1 \u2018laying\u2019 rectangle anchor, we have a 1:2 \u2018standing\u2019 rectangle anchor as well. In addition to the rectangular anchors, two sizes of square anchors are set over each prior center.", "This SSD class produces an SSD object detection model based on Torchvision feature extractor, with the parameters described above.", "Below, we first separate the feature maps\u2019 decomposition from the SSD model in a way that lets you easily adapt the SSD to an adjusted feature maps\u2019 extractor. If you do adapt the SSD, don\u2019t forget to adapt the relevant parameters when calling the SSD constructor.", "The SSD model shares all of the classification and localization computations, up until the final content classifier and spatial regressor. The create_heads method creates the SSD classification and localization heads on top of each feature map yielding per-anchor prediction. For each anchor, the localization head predicts a vector shifting and stretching (cx, xy, w, h), while the classification head predicts a vector of per-class probability.", "The SSD model lays a hierarchy of feature maps, from the highest to the lowest resolution, and detects objects on each. The HeadsExtractor Class lays feature maps and makes them available for the detector. Its nomenclature is based on VGG-16 feature extractor (where conv4_3 is the name of the highest-resolution layer used as a feature map for the SSD model).", "Different datasets and image sizes work best with an adjusted feature maps hierarchy; small images do not need as many different feature maps as large images do. Similarly, datasets without small objects can avoid high-resolution feature maps (accelerating the model computation time).", "In the following method, a forward pass of an image batch on the SSD model is calculated and its result is returned.", "If the model is on evaluation mode, the forward pass returns the model prediction over the input image. However, if the forward pass is done in training mode, only the losses are returned. This is a common design that returns only the losses \u2014 which is more computationally efficient than returning all the detections.", "With this method, the extracted_batch parameter holds the laid-out feature maps of the image batch, and then the prediction across each feature map is calculated separately.", "To adapt the train & evaluation scripts of the MaskRCNN codebase and enable it to train both MaskRCNN and SSD models, we add the following entries to the configuration data (manually or via Trains Server web app).", "If you take a look at the train script you will see that besides the above configuration data changes, the only difference between the original MaskRCNN script and the new one, which support also SSD, is the model object definition section:", "That means that all the rest of the assets in this codebase are kept unchanged. This is an enormous advantage from an R&D resources point of view.", "As with the original codebase, using Allegro Trains, an open-source experiment & autoML manager, lets us monitor in real-time the training process, including: learning rate, loss, mAP on val dataset, etc. In addition, Allegro Trains automatically monitors CPU, GPU and computer information along the course of the training. This important tool helps to identify problems such as memory leaks, lack of hard drive space, low GPU utilization, and more.", "As all this information, including the script parameters, are logged into the Trains Server, it enables comparing different training sessions and identifying the hyperparameters that causes superior results.", "In the previous post (IIA), we reviewed in depth the advantages of single-shot detectors compared to two-shot. Here, we put this knowledge to code and create an SSD model on top of Torchvision pre-trained backbone, which you can use for your own purposes. In addition, we demonstrate the advantage of following this series\u2019 guidelines of writing a maintainable and modular codebase.", "The full code is available on Github. Parts of the SSD class presented here are based on this nicely written implementation of SSD. Thank you kuangliu \ud83d\ude09", "In the next post, we show you how to optimize the SSD model and adjust it to your data. Stay tuned!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ffebfbdd3bd03&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@dan_41998?source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@dan_41998?source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": "Dan Malowany"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F679430f47f06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&user=Dan+Malowany&userId=679430f47f06&source=post_page-679430f47f06----febfbdd3bd03---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffebfbdd3bd03&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffebfbdd3bd03&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.linkedin.com/in/dan-malowany-78b2b21/", "anchor_text": "Dan Malowany"}, {"url": "https://www.linkedin.com/in/gal-hyams-2146a662/", "anchor_text": "Gal Hyams"}, {"url": "https://medium.com/u/7743e9a45144?source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": "Allegro AI Team"}, {"url": "https://towardsdatascience.com/once-upon-a-repository-how-to-write-readable-maintainable-code-with-pytorch-951f03f6a829", "anchor_text": "first blog of this series"}, {"url": "https://github.com/pytorch/ignite", "anchor_text": "Ignite"}, {"url": "https://towardsdatascience.com/the-battle-of-speed-vs-23b61eb4225d", "anchor_text": "second post (part IIA)"}, {"url": "https://pytorch.org/docs/stable/torchvision/index.html", "anchor_text": "Torchvision"}, {"url": "https://pytorch.org/", "anchor_text": "PyTorch"}, {"url": "https://link.springer.com/chapter/10.1007/978-3-319-46448-0_2", "anchor_text": "SSD"}, {"url": "https://github.com/allegroai/trains-blogs/tree/master/the_hero_rises", "anchor_text": "Github"}, {"url": "https://github.com/allegroai/trains-blogs/blob/fd92c462cbbceb8d4027aec2cf9acd5579117fe1/the_hero_rises/SSD/ssd_model.py#L113", "anchor_text": "SSD class constructor"}, {"url": "https://link.springer.com/chapter/10.1007/978-3-319-46448-0_2", "anchor_text": "SSD paper"}, {"url": "https://github.com/allegroai/trains-blogs/blob/fd92c462cbbceb8d4027aec2cf9acd5579117fe1/the_hero_rises/SSD/ssd_model.py#L17", "anchor_text": "lists"}, {"url": "https://github.com/allegroai/trains-blogs/blob/fd92c462cbbceb8d4027aec2cf9acd5579117fe1/the_hero_rises/SSD/box_coder.py#L13", "anchor_text": "computation"}, {"url": "https://github.com/allegroai/trains-blogs/blob/master/once_upon_a_repository/train_model.py", "anchor_text": "MaskRCNN codebase"}, {"url": "https://github.com/allegroai/trains-server", "anchor_text": "Trains Server"}, {"url": "https://towardsdatascience.com/once-upon-a-repository-how-to-write-readable-maintainable-code-with-pytorch-951f03f6a829", "anchor_text": "part I of this series"}, {"url": "https://github.com/allegroai/trains-blogs/tree/master/once_upon_a_repository", "anchor_text": "original codebase"}, {"url": "https://github.com/allegroai/trains", "anchor_text": "Allegro Trains"}, {"url": "https://github.com/allegroai/trains-server", "anchor_text": "Trains Server"}, {"url": "https://allegro.ai/blog/the-battle-of-speed-accuracy-single-shot-vs-two-shot-detection/", "anchor_text": "previous post (IIA)"}, {"url": "https://github.com/allegroai/trains-blogs/tree/master/the_hero_rises", "anchor_text": "Github"}, {"url": "https://github.com/kuangliu/torchcv/tree/master/examples/ssd", "anchor_text": "this"}, {"url": "https://allegro.ai/blog/the-hero-rises-build-your-own-ssd/", "anchor_text": "https://allegro.ai"}, {"url": "https://medium.com/tag/ds-in-the-real-world?source=post_page-----febfbdd3bd03---------------ds_in_the_real_world-----------------", "anchor_text": "Ds In The Real World"}, {"url": "https://medium.com/tag/deep-learning-codebase?source=post_page-----febfbdd3bd03---------------deep_learning_codebase-----------------", "anchor_text": "Deep Learning Codebase"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----febfbdd3bd03---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----febfbdd3bd03---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----febfbdd3bd03---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffebfbdd3bd03&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&user=Dan+Malowany&userId=679430f47f06&source=-----febfbdd3bd03---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffebfbdd3bd03&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&user=Dan+Malowany&userId=679430f47f06&source=-----febfbdd3bd03---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffebfbdd3bd03&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ffebfbdd3bd03&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----febfbdd3bd03---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----febfbdd3bd03--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@dan_41998?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@dan_41998?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Dan Malowany"}, {"url": "https://medium.com/@dan_41998/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "54 Followers"}, {"url": "https://il.linkedin.com/in/dan-malowany-78b2b21", "anchor_text": "https://il.linkedin.com/in/dan-malowany-78b2b21"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F679430f47f06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&user=Dan+Malowany&userId=679430f47f06&source=post_page-679430f47f06--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fee078f7a2215&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-hero-rises-build-your-own-ssd-febfbdd3bd03&newsletterV3=679430f47f06&newsletterV3Id=ee078f7a2215&user=Dan+Malowany&userId=679430f47f06&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}