{"url": "https://towardsdatascience.com/tweets-data-visualization-with-circles-and-user-interaction-485cad7ff248", "time": 1682994842.6716669, "path": "towardsdatascience.com/tweets-data-visualization-with-circles-and-user-interaction-485cad7ff248/", "webpage": {"metadata": {"title": "Tweets Data Visualization with Circles and User Interaction | by Arief Anbiya | Towards Data Science", "h1": "Tweets Data Visualization with Circles and User Interaction", "description": "Here, we will talk about how circles can be utilized to create an interesting, beautiful, and explorable visualization from a set of tweets. The idea is, each circle will correspond to a tweet, and\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Circle_packing", "anchor_text": "example", "paragraph_index": 3}, {"url": "http://www.codeplastic.com/2017/09/09/controlled-circle-packing-with-processing", "anchor_text": "example", "paragraph_index": 3}, {"url": "http://www.tweepy.org/", "anchor_text": "Tweepy", "paragraph_index": 7}, {"url": "https://matplotlib.org/api/_as_gen/matplotlib.patches.Circle.html", "anchor_text": "matplotlib.patches.Circle", "paragraph_index": 8}, {"url": "http://www.codeplastic.com/2017/09/09/controlled-circle-packing-with-processing/", "anchor_text": "article", "paragraph_index": 13}, {"url": "https://matplotlib.org/users/event_handling.html", "anchor_text": "fig.canvas.mpl_connect", "paragraph_index": 14}], "all_paragraphs": ["Here, we will talk about how circles can be utilized to create an interesting, beautiful, and explorable visualization from a set of tweets. The idea is, each circle will correspond to a tweet, and we will organize all circles so that it will become an interesting static image of data visualization. Moreover, the visualization can be designed such that we can explore a tweet by clicking the corresponding circle on the static image. We will see that we can actually do this without even changing a piece of the static image. The implementation discussed here will be done using Matplotlib.", "A circle will be used to represent a tweet. The color transparency of the circle will reflect the number of retweets of the tweet (could also be the number of likes, depending on your interest). Circles with strong color represent tweets with high number of retweets. Circles with high transparency are tweets with low number of retweets. Among all the tweets in the dataset, there must be a tweet that has the highest number of retweets, that tweet will be represented by a circle without transparency. So only tweets that have the highest number of retweets will have color with no transparency. All the other tweets in the dataset will have more transparency.", "So far, we have only added one measurement to the visualization: the number of retweets (or number of likes). But we can utilize another property of a circle, that is the size (radius). Now what will the size represents? there are many options..but let us pick one. By default, all circles will have radius 1, but if a tweet has more likes than retweets, then we will set the circle to have radius 2. This way, our eyes can easily differentiate which tweets that have more likes than retweets.", "Now how should we organize the circles? we could just scattered the circles in the plot, but that would look messy and circles may overlap each other. We could just put the circles in scatter plot (with x and y axis represent two additional measurements), but circles may also overlap each other. So, what we want is that no two circles overlapping each other. This needs us to write our own algorithm. For our case, we will use an algorithm similar to the circle packing algorithm (general example & specific example). The position of the circles will be random but centered and will be made as compact as possible.", "Here is an example with very low samples (for simplicity):", "The above image is an example of the visualization using small samples (5 tweets) from Sadiq Khan (Mayor of London), Donald Trump (President of USA), Prabowo Subianto (Indonesian Presidential Candidate), and Joko Widodo (President of Indonesia) twitter accounts. The tweets from Khan and Trump are collected on 25 Nov 2018, and the tweets from Prabowo and Jokowi are collected on 22 Nov 2018. We can easily see that tweets from Donald Trump have more reactions than the others. There is only one tweet that has more retweets than likes, and it is from Sadiq Khan. Here are the snapshots of the 2 tweets (one from Trump, and the other from Sadiq Khan):", "The 5 tweets from each of Sadiq Khan and Prabowo Subianto are not famous, since the color of the circles are very close to white (very transparent).", "The dataset used for the visualization consists of tweet objects, each tweet object is represented by the class tweepy.models.Status (more about this in Tweepy package). The class stores many information such as tweet text, posting time, author\u2019s information, number of retweets, number of likes, and many others.", "In this section, we will discuss about the algorithm and the mathematics behind it. To show a circle in a plot, we can use the matplotlib.patches.Circleclass. We can create an instance of that class, and then we can plot the circle by adding that circle patch (the instance) to the axis. For example, the code below will plot a blue circle:", "We can also set the blue color another way, using RGB color sequence with transparency number:", "Now, our data visualization will not just plotting circles, but it will also organize them as neatly as possible. We would like no two circles collide each other, but how to realize this using Matplotlib? To answer this question, let us analyze some behavior of circles. Here is an image of two adjacent circles that \u201calmost\u201d overlap each other:", "The image above is the case where two circles touching each other. Notice that we also get a small mathematical insight from the image: When two circles touch each other, the sum of their radius is equal to the distance between the two centers. This is the key to answer the question of colliding circles. You may continue to solve the problem yourself. This is not difficult, let me give a hint: imagine the other two cases (where two circles overlap each other, and where two circles not touching each other)", "By now, we should have known how to plot circles and how to design the plot such that no two circles collide. The next concept we need to consider is the \u201clocation distribution of the circles\u201d. We need to distribute (or pack) all the circles such that no two of them collide, but there should not be large gaps between the circles. This part is tricky, here is an obvious algorithm (but time consuming):", "The visualization in our discussion does not adopt the above algorithm. It adopts and improvise an approach from this article. Our algorithm looks similar with a way we can order things. For example, let there be 10 overlapping circles (made of a sheet of paper) on the floor, they are all positioned very close to a point P. To organize them like the circle packing we may swipe each circle that overlaps with another circle (the swipping is such that the two circles repel each other and the displacement is small). After a number of repetition, all the circles will be packed with P is approximately at the center of the pack. This algorithm looks more alive, it makes the obvious \u201c3-steps\u201d algorithm above looks very stiff.", "Additionally, to make our data visualization more interesting, we can add interactive element to it. The visualization can be designed such that we have two figures, one for the circles (main data viz) and the other one to show more detailed information about one tweet (textual). To be more specific: if we click on a circle, then some information about the corresponding tweet (text, number of retweets, number of likes, and posting date) will show up in the 2nd figure. This can be done by using a Matplotlib\u2019s feature, fig.canvas.mpl_connect function.", "After plotting and packing all the circles, we can make each circle to work like a button. To achieve this, we can include help from the function fig.canvas.mpl_connect. The function can take two arguments, the first one is a string that corresponds to the type of interaction (in our case this has to be \"button_press_event\" ), and the second one is a function that will be called if an event of that type is triggered. Example:", "The above line will add interactivity to the figure fig , but limited to button press event (if you want another type of interaction: for mouse movement on the figure, use \"motion_notify_event\" ). The function in the second argument must be designed to have one input called event. In our case, we will name the function on_click.", "Now, we must design the function on_click so that every time we choose and click a circle in the main figure, the other figure will show some details of the tweet corresponding to the circle. The presentation of information must be neatly designed. Here is an example that is currently being used for the visualization:", "scattered is a list containing many CircleObj objects. CircleObj is a user defined class that inherits from the Circle class of Matplotlib. Here is a glimpse of the design:", "The code has circles, which is a global variable and a list of all the CircleObj objects before their order are randomized as in the scattered list. The self.tweet attribute is for the tweet object by tweepy.models.Status. The collide method is intended to return all CircleObj objects that collide with self . The full code that distribute and pack the circles with the algorithm described in the previous section is not given here. But obviously..it contains a block of code that updates the location of the circles repeatedly until they are all packed with no overlapping.", "A tweet information will be plotted in textual form when the conditions: abs(x-i.center[0]) <= i.radius and lower_circle(x, i.radius, i.center) <= y <= upper_circle(x, i.radius, i.center) are both true. The lower_circle and upper_circle are functions for the equation of a circle ( given x then they will return the y value of the point ( x,y) on the curve of the circle).", "The on_click function will always be triggered when we press the mouse button anywhere on the figure, but it will only plot a tweet information when we click inside a plotted circle. Here is an example of the plotted information:", "Notice that the font is not the default font in Matplotlib. You may learn about using new fonts in Matplotlib by implementing the matplotlib.font_manager. Also, notice that there is another user defined function to decorate the tweet text inside the rounded bounding box, the squeeze_text . It makes the text to have a maximum of 7 words per line and a maximum of 8 rows/lines.", "Implementation using 400 tweets usually take around about 400\u2013500 iterations of checking all the circles, with one iteration usually take up half a second. If the number of tweets are larger, then the time it takes for one iteration to finish will be longer. At first iteration: all circles are very close to the origin, point (0,0), with a maximum deviation of 0.01 radius from it. Then, for each iteration after that, we give a very small swipe two each of every two overlapping circles by applying a repelling movement, two circles pushing each other away, without necessarily making them non-overlapping circles in one step. In this section, we will view two example results of the data visualization:", "We can make some conclusions from this result:", "\u2014 There are 2 tweets (2 green circles) from CNN Indonesia that have very high number of retweets compared to all the others. There is not seem to be any tweet from Metro TV that has the same level of popularity as those tweets.", "\u2014 We can\u2019t say that there are more tweets with retweets > likes, or the otherwise", "Although there is not much insights from the static image, we can clearly perform exploration by simply clicking circles. Moreover, the visualization is also quite beautiful.", "Okay, so our 1st data analysis does not really satisfying. Next, things can get more interesting if we use a dataset with 4 different accounts.", "Besides the video, here is the static image (*slightly different with the one in the video: both provide same information, but they are different in the positioning due to different calculations)", "I won\u2019t write some conclusions about the above visualization, but one clear thing is that Trump\u2019s tweets are very popular compared to all the other 3 politicians. Also, tweets that standout are usually controversial, here are some examples:", "We have seen that simple shape such as circle can be used to represent tweets in a data visualization. We can also make the visualization interactive (although still very simple). The implementation is not that difficult using Matplotlib.", "This method of visualization can be extended:", "This writing is still far from expert level. There are many more types of complex data and mathematical visualizations that can give more insights and have more applications. I appreciate constructive comments.", "(*The full code is expected to be available on Github)", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F485cad7ff248&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----485cad7ff248--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----485cad7ff248--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@anbarief?source=post_page-----485cad7ff248--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@anbarief?source=post_page-----485cad7ff248--------------------------------", "anchor_text": "Arief Anbiya"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F755495660a1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&user=Arief+Anbiya&userId=755495660a1&source=post_page-755495660a1----485cad7ff248---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F485cad7ff248&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F485cad7ff248&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://m.yourshot.nationalgeographic.com/photos/8981395/", "anchor_text": "https://m.yourshot.nationalgeographic.com/photos/8981395/"}, {"url": "https://en.wikipedia.org/wiki/Circle_packing", "anchor_text": "example"}, {"url": "http://www.codeplastic.com/2017/09/09/controlled-circle-packing-with-processing", "anchor_text": "example"}, {"url": "http://www.tweepy.org/", "anchor_text": "Tweepy"}, {"url": "https://matplotlib.org/api/_as_gen/matplotlib.patches.Circle.html", "anchor_text": "matplotlib.patches.Circle"}, {"url": "http://www.codeplastic.com/2017/09/09/controlled-circle-packing-with-processing/", "anchor_text": "article"}, {"url": "https://matplotlib.org/users/event_handling.html", "anchor_text": "fig.canvas.mpl_connect"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----485cad7ff248---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/geometry?source=post_page-----485cad7ff248---------------geometry-----------------", "anchor_text": "Geometry"}, {"url": "https://medium.com/tag/statistics?source=post_page-----485cad7ff248---------------statistics-----------------", "anchor_text": "Statistics"}, {"url": "https://medium.com/tag/science?source=post_page-----485cad7ff248---------------science-----------------", "anchor_text": "Science"}, {"url": "https://medium.com/tag/matplotlib?source=post_page-----485cad7ff248---------------matplotlib-----------------", "anchor_text": "Matplotlib"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F485cad7ff248&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&user=Arief+Anbiya&userId=755495660a1&source=-----485cad7ff248---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F485cad7ff248&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&user=Arief+Anbiya&userId=755495660a1&source=-----485cad7ff248---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F485cad7ff248&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----485cad7ff248--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F485cad7ff248&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----485cad7ff248---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----485cad7ff248--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----485cad7ff248--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----485cad7ff248--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----485cad7ff248--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----485cad7ff248--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----485cad7ff248--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----485cad7ff248--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----485cad7ff248--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@anbarief?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@anbarief?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Arief Anbiya"}, {"url": "https://medium.com/@anbarief/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "54 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F755495660a1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&user=Arief+Anbiya&userId=755495660a1&source=post_page-755495660a1--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F755495660a1%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftweets-data-visualization-with-circles-and-user-interaction-485cad7ff248&user=Arief+Anbiya&userId=755495660a1&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}