{"url": "https://towardsdatascience.com/tensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b", "time": 1683000750.527296, "path": "towardsdatascience.com/tensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b/", "webpage": {"metadata": {"title": "Tensorflow 2.0 \u2014 Create and Train a Vanilla CNN on Google Colab | by Rohith Gandhi | Towards Data Science", "h1": "Tensorflow 2.0 \u2014 Create and Train a Vanilla CNN on Google Colab", "description": "Tensorflow 2.0 came out less than a week ago and it has been the most discussed topic on my twitter TL, so I decided to join the buzz and write this article. There have been some major improvements\u2026"}, "outgoing_paragraph_urls": [{"url": "http://benchmark.ini.rub.de/?section=gtsrb&subsection=news", "anchor_text": "German Traffic Sign Recognition Benchmark", "paragraph_index": 3}, {"url": "https://machinelearningmastery.com/why-one-hot-encode-data-in-machine-learning/", "anchor_text": "here", "paragraph_index": 9}, {"url": "https://towardsdatascience.com/build-your-own-convolution-neural-network-in-5-mins-4217c2cf964f", "anchor_text": "click here", "paragraph_index": 18}, {"url": "https://peltarion.com/knowledge-center/documentation/modeling-view/build-an-ai-model/loss-functions/categorical-crossentropy", "anchor_text": "categorical cross-entropy", "paragraph_index": 19}, {"url": "https://machinelearningmastery.com/adam-optimization-algorithm-for-deep-learning/", "anchor_text": "Adam", "paragraph_index": 19}, {"url": "http://www.linkedin.com/in/grohith327", "anchor_text": "www.linkedin.com/in/grohith327", "paragraph_index": 27}], "all_paragraphs": ["Tensorflow 2.0 came out less than a week ago and it has been the most discussed topic on my twitter TL, so I decided to join the buzz and write this article. There have been some major improvements to Tensorflow and at the same time making it easy for anyone to start with it. Tensorflow 2.0 is now highly integrated with Keras which makes it easier to build and test simple models with least expertise. Google has also decided to emphasize on \u201cEager execution\u201d instead of building session-based models. Eager execution allows your python operations to be evaluated immediately instead of building a computation graph. This article will be a step by step tutorial on how to use Google Colab and build a CNN model in Tensorflow 2.0", "For those of you who are not aware of what Google Colab is(if you are, you can skip the next few lines), it is an online Jupyter Notebook that lets you write and share code. The best part is that the code executes on servers of Google. You can even choose to train your models on Google\u2019s cloud GPU or TPU.", "To train your model on GPU or TPU, go to Runtime \u2192 Change Runtime Type \u2192 Hardware Accelerator", "The dataset we will be working with is the German Traffic Sign Recognition Benchmark. The dataset has over 50K images with over 40 classes of traffic signs.", "The first part is importing your dataset into Google Colab. You can do this by uploading your data into your google drive and mounting the drive in your Colab notebook. After uploading your dataset as a .zip file into your drive, type the code below in your Colab notebook to mount the drive.", "You can unzip the file using the shell command unzip. Shell commands can be invoked in the notebook cells by preceding the command with a \u2018!\u2019. Take a look at the example below.", "The dataset is already split into training and testing images with 75% of images used for training and rest for testing our model. Since we have mounted our drive, we can now access the dataset by referencing the path in the drive. Have a look at the code below to load training and testing data.", "We use PIL to load the images from the directory and since the images are of different dimensions, we use im.resize() to resize each image to a standard dimension of 100x100. We now convert train_images, train_labels and test_images from lists to numpy arrays. The numpy array \u2018train_labels\u2019 has only a single entry in each row so we reshape it using the code below.", "Note: \u2018-1\u2019 represents an unknown dimension", "Now that we have reshaped our training labels, we can convert them into a one-hot encoding. To understand what one-hot encoding is and why we do it, click here.", "Scikit-learn has a pre-defined function which we can import directly to create our one-hot encoded labels. We now normalize our images by dividing them with 255.", "Dividing the images by 255.0 reduces the range of pixel values in each image to 0.0\u20131.0, this provides better results from our model.", "Before we start coding out our model, check whether our Colab is using Tensorflow 2.0 as the backend, we can do that by typing out the following command.", "If an earlier version of Tensorflow is being used as the backend, we can upgrade it by typing out the following command in the notebook", "We can now start out by doing necessary imports and creating batches of tensors from our training data.", "Tensorflow\u2019s dataset library(tf.data) has been expanded in version 2.0 and has grown more sophisticated with new additions.", "Remember that Tensorflow 2.0 has more emphasis on \u201cEager execution\u201d, avoiding computation graphs. Therefore the operation is evaluated once the cell is executed. Hence, train_ds has two tensors that are randomly sampled and batched. These tensors represent the training images and labels.", "Let us start coding architecture of the model.", "We create our model class(MyModel) as a derived class from Model. This saves us a lot of time from writing our own Model class. The architecture we will be using is a simple CNN with dense layers for class prediction. To know more about CNNs kindly click here. After defining our model architecture we create an object for our model and move on to define our loss functions, optimizer and metrics.", "We use categorical cross-entropy as our loss function and Adam as our optimizer.", "The above function is used to train our model. It takes in the images and respective labels, computes the loss and gradients.", "Now that we have done all the necessary steps to build our model, we start training it but executing the code below.", "We training our model for 5 epochs and save the weights of our model after each epoch. Note that the model weights will be saved in the Google drive. We also reset our training loss and accuracy values for each epoch.", "To load the weights of the model, create an instance of the MyModel class and use load_weights(path) function.", "We can obtain the model predictions by providing the test_images as a parameter and since the model returns a probability distribution we use np.argmax() to get the highest value.", "By following the above steps you have successfully trained a CNN on Colab using Tensorflow 2.0. Kindly reach out to me if you have any doubts :)", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "What I cannot create, I do not understand - Richard Feynman. LinkedIn: www.linkedin.com/in/grohith327"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fc7a0ac86d61b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@grohith327?source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@grohith327?source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": "Rohith Gandhi"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8f4e7f7a57e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&user=Rohith+Gandhi&userId=8f4e7f7a57e3&source=post_page-8f4e7f7a57e3----c7a0ac86d61b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc7a0ac86d61b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc7a0ac86d61b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "http://benchmark.ini.rub.de/?section=gtsrb&subsection=news", "anchor_text": "German Traffic Sign Recognition Benchmark"}, {"url": "https://machinelearningmastery.com/why-one-hot-encode-data-in-machine-learning/", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/build-your-own-convolution-neural-network-in-5-mins-4217c2cf964f", "anchor_text": "click here"}, {"url": "https://peltarion.com/knowledge-center/documentation/modeling-view/build-an-ai-model/loss-functions/categorical-crossentropy", "anchor_text": "categorical cross-entropy"}, {"url": "https://machinelearningmastery.com/adam-optimization-algorithm-for-deep-learning/", "anchor_text": "Adam"}, {"url": "https://github.com/grohith327/traffic_sign_detection", "anchor_text": "https://github.com/grohith327/traffic_sign_detection"}, {"url": "https://www.tensorflow.org/guide/effective_tf2", "anchor_text": "Effective TensorFlow 2 | TensorFlow CoreThere are multiple changes in TensorFlow 2.0 to make TensorFlow users more productive. TensorFlow 2.0 removes redundant\u2026www.tensorflow.org"}, {"url": "https://www.tensorflow.org/tutorials/quickstart/advanced", "anchor_text": "TensorFlow 2 quickstart for experts | TensorFlow CoreThis is a Google Colaboratory notebook file. Python programs are run directly in the browser-a great way to learn and\u2026www.tensorflow.org"}, {"url": "https://medium.com/tag/tensorflow2?source=post_page-----c7a0ac86d61b---------------tensorflow2-----------------", "anchor_text": "Tensorflow2"}, {"url": "https://medium.com/tag/colab?source=post_page-----c7a0ac86d61b---------------colab-----------------", "anchor_text": "Colab"}, {"url": "https://medium.com/tag/google?source=post_page-----c7a0ac86d61b---------------google-----------------", "anchor_text": "Google"}, {"url": "https://medium.com/tag/cnn?source=post_page-----c7a0ac86d61b---------------cnn-----------------", "anchor_text": "Cnn"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----c7a0ac86d61b---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc7a0ac86d61b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&user=Rohith+Gandhi&userId=8f4e7f7a57e3&source=-----c7a0ac86d61b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fc7a0ac86d61b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&user=Rohith+Gandhi&userId=8f4e7f7a57e3&source=-----c7a0ac86d61b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fc7a0ac86d61b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fc7a0ac86d61b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----c7a0ac86d61b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----c7a0ac86d61b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@grohith327?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@grohith327?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Rohith Gandhi"}, {"url": "https://medium.com/@grohith327/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3K Followers"}, {"url": "http://www.linkedin.com/in/grohith327", "anchor_text": "www.linkedin.com/in/grohith327"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F8f4e7f7a57e3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&user=Rohith+Gandhi&userId=8f4e7f7a57e3&source=post_page-8f4e7f7a57e3--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F3c50a635a47c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftensorflow-2-0-create-and-train-a-vanilla-cnn-on-google-colab-c7a0ac86d61b&newsletterV3=8f4e7f7a57e3&newsletterV3Id=3c50a635a47c&user=Rohith+Gandhi&userId=8f4e7f7a57e3&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}