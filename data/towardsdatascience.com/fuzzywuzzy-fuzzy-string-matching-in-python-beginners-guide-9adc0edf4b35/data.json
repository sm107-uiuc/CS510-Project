{"url": "https://towardsdatascience.com/fuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35", "time": 1683016393.920809, "path": "towardsdatascience.com/fuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35/", "webpage": {"metadata": {"title": "FuzzyWuzzy: Fuzzy String Matching in Python | Towards Data Science", "h1": "FuzzyWuzzy: Fuzzy String Matching in Python, Beginner\u2019s Guide", "description": "Learn how to calculate string similarity with fuzzwuzzy. Minimum edit distance, fuzz.WRatio, fuzz.partial_ration, etc. functions are covered and practice on a real-world data"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/master-the-most-hated-task-in-ds-ml-3b9779276d7c?source=your_stories_page-------------------------------------", "anchor_text": "previous", "paragraph_index": 0}, {"url": "https://www.kaggle.com/bextuychiev/fuzzywuzzy-fuzzy-string-matching-in-python", "anchor_text": "this", "paragraph_index": 5}, {"url": "https://github.com/BexTuychiev/medium_stories/tree/master/november_2020/string_matching_w_fuzzy_wuzzy", "anchor_text": "this", "paragraph_index": 5}, {"url": "https://visualstudio.microsoft.com/downloads/", "anchor_text": "here", "paragraph_index": 15}, {"url": "https://chairnerd.seatgeek.com/fuzzywuzzy-fuzzy-string-matching-in-python/", "anchor_text": "article", "paragraph_index": 26}, {"url": "https://www.linkedin.com/in/bextuychiev/", "anchor_text": "https://www.linkedin.com/in/bextuychiev/", "paragraph_index": 48}], "all_paragraphs": ["If you have dealt with text data before, you know that its issues are the hardest to deal with. There is just no one-size-fits-all solution to text problems and for each dataset, you have to come up with new ways to clean your data. In one of my previous articles, I talked about the worst-case scenario of such problems:", "For example, consider this worst-case scenario: you are working on a survey data conducted across the USA and there is a state column for the state of each observation in the dataset. There are 50 states in the USA and imagine all the damn variations of state names people can come up with. You are in even bigger problem if data collectors decide to use abbreviations: CA, ca, Ca, Caliphornia, Californa, Calfornia, calipornia, CAL, CALI, \u2026 Such columns will always be filled with typos, errors, inconsistencies.", "The problems related to text often arise because of free-text during data collection. They will be full of typos, inconsistencies, whatever you can name. Of course, the most basic problems can be solved using simple regular expressions or built-in Python functions but for cases like above, which occur very often, you have to arm yourself with more complex tools.", "Today\u2019s special is fuzzywuzzy, a package with a very simple API which helps us to calculate string similarity.", "Get the best and latest ML and AI papers chosen and summarized by a powerful AI \u2014 Alpha Signal:", "Get the notebook and data used in this article from this Kaggle notebook or from this GitHub repo.", "To understand string matching, let\u2019s get you up to speed with Minimum Edit Distance. As humans, we have no trouble at all if two or more strings are similar or not. To create this ability in computers, many algorithms were created and almost all of them depend on Minimum Edit Distance.", "Minimum Edit Distance (MED) is the least possible amount of steps needed to transition from one string to another. MED is calculated using only 4 operations:", "Consider these two words: Program and Sonogram:", "To get from Program to Sonogram, we need 3 steps:", "As I said, there are many algorithms to calculate MED:", "Also, there are packages that use these algorithms: nltk, fuzzywuzzy, textdistance, difflib, ...", "In this article, we will only cover fuzzywuzzy.", "Even though the basic installation can be done easily with pip, there are some other options or caveats to fuzzwuzzy's installation:", "The above method installs the default up-to-date version of the package. At first, I installed it using this method. But whenever I imported it, it started giving a warning saying that the package itself is very slow and I should install python-Levenshtein package for more speed. If you hate warnings in your Jupyter Notebook like me, here is how you can install extra dependencies:", "Warning for Windows users: if you don\u2019t have Microsoft Visual Studio build tools installed, installing python-Levenshtein fails. You can download MVS Build Tools from here.", "To get started with fuzzywuzzy, we first import fuzz sub-module:", "In this sub-module, there are 5 functions for different methods of comparison between 2 strings. The most flexible and best one for everyday use is WRatio (Weighted Ratio) function:", "Here, we are comparing \u2018Python\u2019 to \u2018Cython\u2019. The output returns a percentage between 0 and 100, 0 being not similar at all and 100 being identical:", "All the functions of fuzzywuzzy are case-insensitive:", "WRatio is also very good for partial strings with different orderings:", "Apart from WRatio, there are 4 other functions to compute string similarity:", "fuzz.ratio is perfect for strings with similar lengths and order:", "For strings with differing lengths, it is better to use `fuzz.patial_ratio\u2019:", "If the strings have the same meaning but their order is different, use fuzz.token_sort_ratio:", "For more edge cases, there is fuzz.token_set_ratio:", "As you see, these 5 functions are full of caveats. Their comparison is a whole another topic so I am leaving you a link to the article written by the package creators which explains their difference beautifully.", "I think you already saw that WRatio function gives the middle ground for all the functions of fuzzywuzzy. For many edge cases and different issues, it is best to use WRatio for best results.", "Now we have some understanding fuzzywuzzy's different functions, we can move on to more complex problems. With real-life data, most of the time you have to find the most similar value to your string from a list of options. Consider this example:", "We have to find the best matches to Mercedez-Benz to replace them with the correct spelling of the cars. We can loop over each value but such a process could take too long if there are millions of options to choose from. Since this operation is so commonly used, fuzzywuzzy provides us with a helpful sub-module:", "With this sub-module, you can extract the best matches to your string from a sequence of strings. Let\u2019s solve our initial problem:", "The parameters of interest in process.extract are query, choices and limit. This function computes the similarity of strings given in query from a sequence of options given in choices and returns a list of tuples. limit controls the number of tuples to return. Each of these tuples contains two elements, the first one is the matching string and the second one is the similarity score.", "Under the hood, process.extract uses the default WRatio function. However, depending on your case and knowing the differences between the 5 functions you can change the scoring function with scorer:", "If you have many options, it is best to stick with WRatio because it is the most flexible.", "In the process module, there are other functions that perform a similar operation. process.extractOne returns only one output which contains the string with the highest matching score:", "Now we are ready to tackle a real-world problem. I will load the raw data to practice:", "I used this dataset in one of my personal projects and the task was to correct the spelling of each vehicle make and model according to the correct values given in another file:", "After loading the pickle file, make_model is now a dictionary containing the correct spelling of each car make as keys and the correct spelling of models under each key.", "For example, let\u2019s see the spellings of makes and models of Toyota cars:", "Now, let\u2019s subset the raw data for Toyota cars:", "The dataset contains up to a hundred unique car makes like Audi, Bentley, BMW and each one contains several models that are full of edge cases. We cannot just convert each one to title case or lower case. We also don\u2019t know if these contain any spelling errors or inconsistencies and visual search is not an option for such big datasets. There are also some cases where make labels with more than one word divide the name with a space while others with a dash. If you have this many inconsistencies and there is not a clear pattern, use string matching.", "Let\u2019s start by cleaning up make labels. For comparison, here are the make labels in both datasets:", "I think the differences are obvious. We will use process.extract to match each makes with the correct spelling:", "As you see, the make labels which exist in the make_model got converted into their correct spelling. Now, it is time for model labels:", "The last two code snippets were a little hairy. To fully understand how they are working, you should get some practice on process.extract.", "There you go! If you did not know string matching, the task would have been impossible and even Regular Expressions would not have been able to help you.", "Read more articles related to the topic:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "BEXGBoost | DataCamp Instructor |\ud83e\udd47Top 10 AI/ML Writer on Medium | Kaggle Master | https://www.linkedin.com/in/bextuychiev/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F9adc0edf4b35&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://ibexorigin.medium.com/?source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": ""}, {"url": "https://ibexorigin.medium.com/?source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": "Bex T."}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F39db050c2ac2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&user=Bex+T.&userId=39db050c2ac2&source=post_page-39db050c2ac2----9adc0edf4b35---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9adc0edf4b35&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9adc0edf4b35&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://pixabay.com/users/stephennorris-7555778/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=3052477", "anchor_text": "Steve Norris"}, {"url": "https://pixabay.com/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=3052477", "anchor_text": "Pixabay"}, {"url": "https://towardsdatascience.com/master-the-most-hated-task-in-ds-ml-3b9779276d7c?source=your_stories_page-------------------------------------", "anchor_text": "previous"}, {"url": "https://ibexorigin.medium.com/membership", "anchor_text": "Join Medium with my referral link - BEXGBoostGet exclusive access to all my \u26a1premium\u26a1 content and all over Medium without limits. Support my work by buying me a\u2026ibexorigin.medium.com"}, {"url": "https://alphasignal.ai/?referrer=Bex", "anchor_text": "Alpha Signal | The Best of Machine Learning. Summarized by AI.Stay in the loop without spending countless hours browsing for the next breakthrough; our algorithm identifies the\u2026alphasignal.ai"}, {"url": "https://www.kaggle.com/bextuychiev/fuzzywuzzy-fuzzy-string-matching-in-python", "anchor_text": "this"}, {"url": "https://github.com/BexTuychiev/medium_stories/tree/master/november_2020/string_matching_w_fuzzy_wuzzy", "anchor_text": "this"}, {"url": "https://medium.com/@ibexorigin", "anchor_text": "author"}, {"url": "https://medium.com/@ibexorigin", "anchor_text": "author"}, {"url": "https://visualstudio.microsoft.com/downloads/", "anchor_text": "here"}, {"url": "https://chairnerd.seatgeek.com/fuzzywuzzy-fuzzy-string-matching-in-python/", "anchor_text": "article"}, {"url": "https://towardsdatascience.com/data-type-constraints-data-range-constraints-duplicate-data-with-pandas-44897a350b1e?source=your_stories_page-------------------------------------", "anchor_text": "https://towardsdatascience.com/data-type-constraints-data-range-constraints-duplicate-data-with-pandas-44897a350b1e?source=your_stories_page-------------------------------------"}, {"url": "https://towardsdatascience.com/master-the-most-hated-task-in-ds-ml-3b9779276d7c", "anchor_text": "Master the Most Hated Task in DS/MLCategorical data cleaning with Pandastowardsdatascience.com"}, {"url": "https://towardsdatascience.com/meet-the-hardest-functions-of-pandas-part-i-7d1f74597e92", "anchor_text": "Meet the hardest functions of Pandas, Part IMaster the when and how of pivot_table(), stack(), unstack()towardsdatascience.com"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----9adc0edf4b35---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----9adc0edf4b35---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----9adc0edf4b35---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/software-development?source=post_page-----9adc0edf4b35---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/programming?source=post_page-----9adc0edf4b35---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9adc0edf4b35&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&user=Bex+T.&userId=39db050c2ac2&source=-----9adc0edf4b35---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9adc0edf4b35&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&user=Bex+T.&userId=39db050c2ac2&source=-----9adc0edf4b35---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9adc0edf4b35&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F9adc0edf4b35&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----9adc0edf4b35---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----9adc0edf4b35--------------------------------", "anchor_text": ""}, {"url": "https://ibexorigin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://ibexorigin.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Bex T."}, {"url": "https://ibexorigin.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "16.4K Followers"}, {"url": "https://www.linkedin.com/in/bextuychiev/", "anchor_text": "https://www.linkedin.com/in/bextuychiev/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F39db050c2ac2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&user=Bex+T.&userId=39db050c2ac2&source=post_page-39db050c2ac2--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F22cea38b90f3&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ffuzzywuzzy-fuzzy-string-matching-in-python-beginners-guide-9adc0edf4b35&newsletterV3=39db050c2ac2&newsletterV3Id=22cea38b90f3&user=Bex+T.&userId=39db050c2ac2&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}