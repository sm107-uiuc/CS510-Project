{"url": "https://towardsdatascience.com/eager-execution-vs-graph-execution-which-is-better-38162ea4dbf6", "time": 1683015561.501166, "path": "towardsdatascience.com/eager-execution-vs-graph-execution-which-is-better-38162ea4dbf6/", "webpage": {"metadata": {"title": "Eager Execution vs. Graph Execution in TensorFlow: Which is Better? | by Orhan G. Yal\u00e7\u0131n | Towards Data Science", "h1": "Eager Execution vs. Graph Execution in TensorFlow: Which is Better?", "description": "Comparing Eager Execution and Graph Execution using Code Examples, Understanding When to Use Each and why TensorFlow switched to Eager Execution"}, "outgoing_paragraph_urls": [{"url": "https://www.tensorflow.org/guide/graph_optimization", "anchor_text": "Grappler", "paragraph_index": 9}, {"url": "http://pytorch.org", "anchor_text": "PyTorch", "paragraph_index": 14}, {"url": "https://linkedin.com/in/orhangaziyalcin/", "anchor_text": "Linkedin", "paragraph_index": 39}, {"url": "https://linkedin.com/in/orhangaziyalcin/", "anchor_text": "Orhan G. Yal\u00e7\u0131n \u2014 Linkedin", "paragraph_index": 39}, {"url": "https://towardsdatascience.com/beginners-guide-to-tensorflow-2-x-for-deep-learning-applications-c7ebd0dcfbee", "anchor_text": "Part 1 of this tutorial series", "paragraph_index": 40}, {"url": "http://Vizio.ai", "anchor_text": "Vizio.ai", "paragraph_index": 42}], "all_paragraphs": ["This is Part 4 of the Deep Learning with TensorFlow 2.x Series, and we will compare two execution options available in TensorFlow:", "You may not have noticed that you can actually choose between one of these two. Well, the reason is that TensorFlow sets the eager execution as the default option and does not bother you unless you are looking for trouble\ud83d\ude00. But, this was not the case in TensorFlow 1.x versions. Let\u2019s see what eager execution is and why TensorFlow made a major shift with TensorFlow 2.0 from graph execution.", "Eager execution is a powerful execution environment that evaluates operations immediately. It does not build graphs, and the operations return actual values instead of computational graphs to run later. With Eager execution, TensorFlow calculates the values of tensors as they occur in your code.", "Eager execution simplifies the model building experience in TensorFlow, and you can see the result of a TensorFlow operation instantly. Since the eager execution is intuitive and easy to test, it is an excellent option for beginners. Not only is debugging easier with eager execution, but it also reduces the need for repetitive boilerplate codes. Eager execution is also a flexible option for research and experimentation. It provides:", "In eager execution, TensorFlow operations are executed by the native Python environment with one operation after another. This is what makes eager execution (i) easy-to-debug, (ii) intuitive, (iii) easy-to-prototype, and (iv) beginner-friendly. For these reasons, the TensorFlow team adopted eager execution as the default option with TensorFlow 2.0. But, more on that in the next sections\u2026", "Let\u2019s take a look at the Graph Execution.", "We covered how useful and beneficial eager execution is in the previous section, but there is a catch:", "Eager execution is slower than graph execution!", "Since eager execution runs all operations one-by-one in Python, it cannot take advantage of potential acceleration opportunities. Graph execution extracts tensor computations from Python and builds an efficient graph before evaluation. Graphs, or tf.Graph objects, are special data structures with tf.Operation and tf.Tensor objects. Whiletf.Operation objects represent computational units,tf.Tensor objects represent data units. Graphs can be saved, run, and restored without original Python code, which provides extra flexibility for cross-platform applications. With a graph, you can take advantage of your model in mobile, embedded, and backend environment where Python is unavailable. In a later stage of this series, we will see that trained models are saved as graphs no matter which execution option you choose.", "Graphs are easy-to-optimize. They allow compiler level transformations such as statistical inference of tensor values with constant folding, distribute sub-parts of operations between threads and devices (an advanced level distribution), and simplify arithmetic operations. Grappler performs these whole optimization operations. In graph execution, evaluation of all the operations happens only after we\u2019ve called our program entirely. So, in summary, graph execution is:", "Therefore, despite being difficult-to-learn, difficult-to-test, and non-intuitive, graph execution is ideal for large model training. For small model training, beginners, and average developers, eager execution is better suited.", "Well, considering that eager execution is easy-to-build&test, and graph execution is efficient and fast, you would want to build with eager execution and run with graph execution, right? Well, we will get to that\u2026", "Looking for the best of two worlds? A fast but easy-to-build option? Keep reading :)", "Before we dive into the code examples, let\u2019s discuss why TensorFlow switched from graph execution to eager execution in TensorFlow 2.0.", "Before version 2.0, TensorFlow prioritized graph execution because it was fast, efficient, and flexible. The difficulty of implementation was just a trade-off for the seasoned programmers. On the other hand, PyTorch adopted a different approach and prioritized dynamic computation graphs, which is a similar concept to eager execution. Although dynamic computation graphs are not as efficient as TensorFlow Graph execution, they provided an easy and intuitive interface for the new wave of researchers and AI programmers. This difference in the default execution strategy made PyTorch more attractive for the newcomers. Soon enough, PyTorch, although a latecomer, started to catch up with TensorFlow.", "After seeing PyTorch's increasing popularity, the TensorFlow team soon realized that they have to prioritize eager execution. Therefore, they adopted eager execution as the default execution method, and graph execution is optional. This is just like, PyTorch sets dynamic computation graphs as the default execution method, and you can opt to use static computation graphs for efficiency.", "Since, now, both TensorFlow and PyTorch adopted the beginner-friendly execution methods, PyTorch lost its competitive advantage over the beginners. Currently, due to its maturity, TensorFlow has the upper hand. However, there is no doubt that PyTorch is also a good alternative to build and train deep learning models. The choice is yours\u2026", "In this section, we will compare the eager execution with the graph execution using basic code examples. For the sake of simplicity, we will deliberately avoid building complex models. But, in the upcoming parts of this series, we can also compare these execution methods using more complex models.", "We have mentioned that TensorFlow prioritizes eager execution. But that\u2019s not all. Now, you can actually build models just like eager execution and then run it with graph execution. TensorFlow 1.x requires users to create graphs manually. These graphs would then manually be compiled by passing a set of output tensors and input tensors to a session.run() call. But, with TensorFlow 2.0, graph building and session calls are reduced to an implementation detail. This simplification is achieved by replacing session.run() with tf.function() decorators. In TensorFlow 2.0, you can decorate a Python function using tf.function() to run it as a single graph object. With this new method, you can easily build models and gain all the graph execution benefits.", "This post will test eager and graph execution with a few basic examples and a full dummy model. Please note that since this is an introductory post, we will not dive deep into a full benchmark analysis for now.", "We will start with two initial imports:", "To run a code with eager execution, we don\u2019t have to do anything special; we create a function, pass a tf.Tensor object, and run the code. In the code below, we create a function called eager_function to calculate the square of Tensor values. Then, we create a tf.Tensor object and finally call the function we created. Our code is executed with eager execution:", "Let\u2019s first see how we can run the same function with graph execution.", "By wrapping our eager_function with tf.function() function, we are capable of running our code with graph execution. We can compare the execution times of these two methods with timeit as shown below:", "As you can see, graph execution took more time. But why? Well, for simple operations, graph execution does not perform well because it has to spend the initial computing power to build a graph. We see the power of graph execution in complex calculations. If I run the code 100 times (by changing the number parameter), the results change dramatically (mainly due to the print statement in this example):", "Now that you covered the basic code examples, let\u2019s build a dummy neural network to compare the performances of eager and graph executions. We will:", "1 \u2014 Make TensorFlow imports to use the required modules;", "2 \u2014 Build a basic feedforward neural network;", "3 \u2014 Create a random Input object;", "4 \u2014 Run the model with eager execution;", "5 \u2014 Wrap the model with tf.function() to run it with graph execution.", "The following lines do all of these operations:", "As you can see, our graph execution outperformed eager execution with a margin of around 40%. In more complex model training operations, this margin is much larger.", "In this post, we compared eager execution with graph execution. While eager execution is easy-to-use and intuitive, graph execution is faster, more flexible, and robust. Therefore, it is no brainer to use the default option, eager execution, for beginners. However, if you want to take advantage of the flexibility and speed and are a seasoned programmer, then graph execution is for you. On the other hand, thanks to the latest improvements in TensorFlow, using graph execution is much simpler. Therefore, you can even push your limits to try out graph execution. But, make sure you know that debugging is also more difficult in graph execution.", "The code examples above showed us that it is easy to apply graph execution for simple examples. For more complex models, there is some added workload that comes with graph execution.", "We have successfully compared Eager Execution with Graph Execution.", "Give yourself a pat on the back!", "This should give you a lot of confidence since you are now much more informed about Eager Execution, Graph Execution, and the pros-and-cons of using these execution methods.", "If you would like to have access to full code on Google Colab and the rest of my latest content, consider subscribing to the mailing list.", "If you are reading this article, I am sure that we share similar interests and are/will be in similar industries. So let\u2019s connect via Linkedin! Please do not hesitate to send a contact request! Orhan G. Yal\u00e7\u0131n \u2014 Linkedin", "If you are just starting out with TensorFlow, consider starting from Part 1 of this tutorial series:", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I write about AI and data apps here building them at Vizio.ai with my team. Feel free to get in touch!"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F38162ea4dbf6&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://blog.orhangaziyalcin.com/?source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": ""}, {"url": "https://blog.orhangaziyalcin.com/?source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": "Orhan G. Yal\u00e7\u0131n"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fff47ab81282a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&user=Orhan+G.+Yal%C3%A7%C4%B1n&userId=ff47ab81282a&source=post_page-ff47ab81282a----38162ea4dbf6---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F38162ea4dbf6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F38162ea4dbf6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/beginners-guide-to-tensorflow-2-x-for-deep-learning-applications-c7ebd0dcfbee", "anchor_text": "\u2190\u2190\u2190 Part 1"}, {"url": "https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86", "anchor_text": "\u2190\u2190 Part 2"}, {"url": "https://towardsdatascience.com/mastering-tensorflow-variables-in-5-easy-step-5ba8062a1756", "anchor_text": "\u2190 Part 3"}, {"url": "https://unsplash.com/@jamesponddotco", "anchor_text": "James Pond"}, {"url": "https://unsplash.com/?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://unsplash.com/@tvbeats?utm_source=medium&utm_medium=referral", "anchor_text": "TVBEATS"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.tensorflow.org/tensorboard", "anchor_text": "Tensorboard"}, {"url": "https://www.tensorflow.org/guide/graph_optimization", "anchor_text": "Grappler"}, {"url": "http://pytorch.org", "anchor_text": "PyTorch"}, {"url": "https://trends.google.com/trends/explore?date=today%205-y&q=%2Fg%2F11bwp1s2k3,%2Fg%2F11gd3905v1", "anchor_text": "Google Trends"}, {"url": "https://docs.python.org/2/library/timeit.html", "anchor_text": "timeit"}, {"url": "http://eepurl.com/hd6Xfv", "anchor_text": "Subscribe Now"}, {"url": "https://linkedin.com/in/orhangaziyalcin/", "anchor_text": "Linkedin"}, {"url": "https://linkedin.com/in/orhangaziyalcin/", "anchor_text": "Orhan G. Yal\u00e7\u0131n \u2014 Linkedin"}, {"url": "https://towardsdatascience.com/beginners-guide-to-tensorflow-2-x-for-deep-learning-applications-c7ebd0dcfbee", "anchor_text": "Part 1 of this tutorial series"}, {"url": "https://towardsdatascience.com/beginners-guide-to-tensorflow-2-x-for-deep-learning-applications-c7ebd0dcfbee", "anchor_text": "Beginner\u2019s Guide to TensorFlow 2.x for Deep Learning ApplicationsUnderstanding the TensorFlow Platform and What it has to Offer to a Machine Learning Experttowardsdatascience.com"}, {"url": "https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86", "anchor_text": "check out Part 2"}, {"url": "https://towardsdatascience.com/mastering-tensorflow-tensors-in-5-easy-steps-35f21998bb86", "anchor_text": "Mastering TensorFlow Tensors in 5 Easy StepsDiscover how the building blocks of TensorFlow works at the lower level and learn how to make the most of Tensor\u2026towardsdatascience.com"}, {"url": "https://towardsdatascience.com/mastering-tensorflow-variables-in-5-easy-step-5ba8062a1756", "anchor_text": "check out Part 3"}, {"url": "https://towardsdatascience.com/mastering-tensorflow-variables-in-5-easy-step-5ba8062a1756", "anchor_text": "Mastering TensorFlow \u201cVariables\u201d in 5 Easy StepLearn how to use TensorFlow Variables, their differences from plain Tensor objects, and when they are preferred over\u2026towardsdatascience.com"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----38162ea4dbf6---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----38162ea4dbf6---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----38162ea4dbf6---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----38162ea4dbf6---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----38162ea4dbf6---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F38162ea4dbf6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&user=Orhan+G.+Yal%C3%A7%C4%B1n&userId=ff47ab81282a&source=-----38162ea4dbf6---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F38162ea4dbf6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&user=Orhan+G.+Yal%C3%A7%C4%B1n&userId=ff47ab81282a&source=-----38162ea4dbf6---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F38162ea4dbf6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F38162ea4dbf6&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----38162ea4dbf6---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----38162ea4dbf6--------------------------------", "anchor_text": ""}, {"url": "https://blog.orhangaziyalcin.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://blog.orhangaziyalcin.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Orhan G. Yal\u00e7\u0131n"}, {"url": "https://blog.orhangaziyalcin.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.7K Followers"}, {"url": "http://Vizio.ai", "anchor_text": "Vizio.ai"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fff47ab81282a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&user=Orhan+G.+Yal%C3%A7%C4%B1n&userId=ff47ab81282a&source=post_page-ff47ab81282a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F6340e0deb03&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Feager-execution-vs-graph-execution-which-is-better-38162ea4dbf6&newsletterV3=ff47ab81282a&newsletterV3Id=6340e0deb03&user=Orhan+G.+Yal%C3%A7%C4%B1n&userId=ff47ab81282a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}