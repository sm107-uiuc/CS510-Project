{"url": "https://towardsdatascience.com/quantum-programming-for-non-mathematicians-bd6956d63b7c", "time": 1683017781.4113421, "path": "towardsdatascience.com/quantum-programming-for-non-mathematicians-bd6956d63b7c/", "webpage": {"metadata": {"title": "Quantum Programming \u2014 For Non-Mathematicians | by Frank Zickert | Quantum Machine Learning | Towards Data Science", "h1": "Quantum Programming \u2014 For Non-Mathematicians", "description": "Most tutorials, posts, and books about quantum computing are loaded with math. Lots of math. Of course, math is an important aspect of the underlying concepts. But, I meant it when I said you don\u2019t\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.pyqml.com/page?ref=medium_programming&dest=/", "anchor_text": "Hands-On Quantum Machine Learning With Python", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/you-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878", "anchor_text": "you don\u2019t need to be a mathematician to master quantum computing", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/how-to-setup-jupyterlab-for-quantum-computing-on-windows-6171c0a62e62", "anchor_text": "here\u2019s a tutorial on how to setup JupyterLab for quantum computing", "paragraph_index": 5}, {"url": "https://medium.com/better-programming/if-you-want-to-gamble-with-quantum-computing-e327c11f97e5", "anchor_text": "this post", "paragraph_index": 19}, {"url": "https://towardsdatascience.com/do-you-struggle-with-the-quantum-superposition-86d0f2147bfb", "anchor_text": "this post", "paragraph_index": 29}, {"url": "https://www.pyqml.com/page?ref=medium_programming&dest=/", "anchor_text": "Hands-On Quantum Machine Learning With Python", "paragraph_index": 54}, {"url": "https://www.pyqml.com/page?ref=medium_programming&dest=/", "anchor_text": "here", "paragraph_index": 55}], "all_paragraphs": ["This post is part of the book: Hands-On Quantum Machine Learning With Python.", "Most tutorials, posts, and books about quantum computing are loaded with math. Lots of math. Of course, math is an important aspect of the underlying concepts. But, I meant it when I said you don\u2019t need to be a mathematician to master quantum computing.", "In this post, we look at quantum computing from the programmer's perspective and work with qubits in a practical way. We leave aside all the theory and math. Ok, we still need a little math to calculate probabilities. But that\u2019s it.", "The only thing to understand is the different types of probabilities.", "In this post, we calculate a joint probability with a quantum circuit.", "Start your Jupyter Notebook and import Qiskit. If you haven\u2019t set up your machine yet, here\u2019s a tutorial on how to setup JupyterLab for quantum computing.", "We will create and run quite a few circuits in this post. Therefore, here\u2019s a helper function that takes a configured QuantumCircuit instance, runs it, and returns the histogram.", "We specify a rather broad figure size (figsize=(18,4)) of the histogram (line 13) to get some space in it to display all the different states. Further, while we work with the default statevector_simulator (line 5), we also allow specifying another simulator to use as our backend (line 7). We also take the number of shots (how many times should the simulator run the circuit to obtain precise results) as a parameter (line 5).", "Before we start calculating a probability, let\u2019s have a look at the structure of the histogram Qiskit creates for us. In the following example, we create a QuantumCircuit with four qubits (line 1). We apply the Hadamard-gate to each qubit (by providing a list of the qubit positions) (line 2) before we run the circuit (line 3).", "The following figure depicts the resulting histogram", "Each column in the histogram represents a state. A state is a combination of the qubits\u2019 values. In our case, a state is made up of four qubits. We can measure each of these qubits as either 0 or 1. The bar and the number above the bar indicate the measurement probability of this state.", "In our case, there are 16 states and they all have the same probability of 0.062, respectively 1/16.", "The numbers below the bar indicate the values of the four qubits in the given state. They are read from the top (qubit at position 0) to the bottom (qubit at position 3). If you rotated the numbers clockwise to better read them, you would need to read them from the right (qubit 0) to the left (qubit 3).", "Further, the states are ordered. As if the four qubits made up a binary digit, qubit 0 is the lower bit at the right-hand side and qubit 3 is the upper bit at the left-hand side. As a result, all the states where qubit 3 is measured as 1 reside at the right half of the histogram. Thus, if you want states to be next to each other, make sure their value for the highest qubit is the same.", "For better readability, let\u2019s consider a circuit with a single Hadamard-gate.", "Qiskit initializes qubits in the state |0\u27e9 (with a chance of 1.0 of measuring it as 0). When we apply the Hadamard-gate on a qubit in this state, it cuts the total probability of 1.0 into two equal halves. We get two states that differ in the value for qubit 0. Each of these states has a probability of 0.5. For the binary value of 0001 is greater than 0000, the state 0001 is on the right-hand side.", "We start with letting a qubit represent the marginal probability of one event. A marginal probability is the absolute probability of the event irrespective of any further information. If we have multiple states where the event occurs, then the marginal probability is the sum of all the corresponding probabilities.", "In the figure with one Hadamard-gate, there is only one state where qubit 0 is 1. The marginal probability is 0.5. In the figure with four Hadamard gates, there are eight states where qubit 0 is 1. The marginal probability of qubit 0 being 1 is the sum of all these states' probabilities. It is 0.5, too.", "The Hadamard-gate splits the overall probability into equal halves. But the probability of the event can be any value between 0.0 and 1.0.", "In this post, we introduced the RY-gate. It takes a parameter we can use to specify the exact probability. For the RY-gate takes an angle \u03b8 as its parameter, not a probability, we need to convert the probability into an angle before we pass it to the gate. This is what the function prob_to_angle does for us.", "Now, we can create and run a circuit with an arbitrary marginal probability between 0 and 1. Let\u2019s start with a probability of 0.4 of measuring 1.", "We apply the RY-gate on the qubit and pass as the first parameter the result of calling prob_to_angle with the probability value of 0.4 (line 2).", "Similar to the Hadamard-gate, the RY-gate cuts the probability into two parts. But it provides us with a tool to control the size of the two parts.", "In the next step, we want to apply the modifier. In the first case, the modifier has a value between 0.0 and 1.0. Just like another probability. Then, the resulting posterior probability equals the joint probability of these two probabilities.", "The following figure depicts the joint probability of two variables.", "Mathematically, we can calculate the joint probability by multiplying both marginal probabilities. Let\u2019s say the modifier is 0.8. We expect a probability of 0.4\u22170.8=0.32.", "Apparently, this didn\u2019t work. We\u2019re not even close to the target probability. Instead, we get a probability of 0.952.", "The problem is the calculation of the angle \u03b8 inside the prob_to_angle-function. We calculate the angle as the arcsine of the target probability's square root. Let's have a closer look at this function. The following figure depicts the shape of f(x)=arcsin(sqrt(x))", "The first thing to note is the function is defined in the interval between 0 and 1. For negative values, the square root is not defined. For values above 1, the arcsine is not defined.", "The second thing to note is the curve of the function. The prob_to_angle-function assumes the qubit to be in the basis state |0\u27e9. \u03b8 - the angle we calculate - is the angle between the vector |\u03c8\u27e9 - that is the target state - and the basis state vector |0\u27e9 - that is the state we start from. If we started from another state, we would need to incorporate this state in the calculation of \u03b8. We would need to start at the respective point on the curve. It makes a difference if you calculate a step at the very beginning of the curve (there is a high gradient) and if you calculate a step in the middle of the curve. If you want to know more about the graphical representation of qubit states, have a look at this post.", "But if we incorporated the current point (that represents the one event) on the curve into the calculation, we would do the whole calculation of the joint probability outside of our quantum circuit. This is not what we aim at.", "Let\u2019s give it another try. If the prob_to_angle-function assumes the qubit to be in the basis state |0\u27e9, why don't we apply the modifier on a fresh qubit? The difference is in line 11, where we apply the rotation about the modifier on the qubit 1 instead of the qubit 0.", "We see that the state 0011 (qubit 0 is 1 and qubit 1 is 1) denotes the correct probability of 0.32. The underlying rationale is quite simple.", "All the states where qubit 0 is 1, (0001 and 0011) add up to 0.4 - the marginal probability of event A. The states where qubit 1 is 1 (0010 and 0011) add up to 0.8 - the marginal probability of event B. Since both rotations are independent of each other, the state 0011 represents the overlap of both probabilities, with 0.4\u22170.8=0.32.", "For completion, the probabilities of the other states are:", "In order to get the joint probability, we need to measure both qubits and count the portion where both qubits are 1.", "We\u2019re interested in a single one probability. Wouldn\u2019t it be good, if a single one qubit represented it?", "This is where entanglement comes in handy. Do you remember the CNOT-gate? It is a two-qubit gate. The first qubit is the control qubit. If that is 1, then the gate applies the X-gate (NOT-gate) on the second qubit. If the control qubit is 0, then the second qubit remains unchanged.", "Let\u2019s first look at the code.", "The result shows a probability of 0.32 for measuring qubit 1 as 1. We only have to measure a single qubit to get the joint probability we are looking for.", "As before, we apply the marginal probability of event A (line 8). Next, we apply half of the marginal probability of event B. The following figure depicts the state if we stopped here.", "The resulting probabilities are quite a mess. But what we can see is that we split the states where qubit 0 is 0 into two parts: the states 0000 and 0010. And we did the same for the states where qubit 0 is 1.", "Next, we apply the CNOT-gate (line 14). Let\u2019s see what it does.", "The CNOT-gate does not change the probability values. But it switches the states that have these probabilities.", "The states 0000 and 0010 keep their probabilities because the CNOT-gate does not do anything if the control qubit (here qubit 0) is 0. By contrast, the states 0001 and 0011 switch their probabilities. Just like we said. If the control qubit is 1 the CNOT-gate acts like an X-gate on the controlled qubit (here qubit 1).", "Essentially, what we did is we say the state where the P(A) and P(B)/2 overlap should switch its probability with the state where the P(A) overlaps with 1\u2212P(B)/2.", "Now, we apply the second half of the modifier but with a minus sign (line 17). Here\u2019s the effect.", "The correct value of the joint probability appears. Since we apply the negative half of P(B), we undo the split of the probabilities when qubit 0 is 0 that we did with the first application of the RY-gate. The state of 0010 disappears. It is now part of the state 0000 again.", "For the states when qubit 0 is 1, we move half of P(B) from state 0011 back to state 0001. But remember, these two states switched their probabilities before. That means, instead of undoing the effect of the first RYRY-gate, we add the second half of the modifier.", "In the last step, we apply the CNOT-gate again. This leaves the state 0000 untouched for the control qubit 0 is 0. But when qubit 0 is 1 it switches the value of qubit 1. Thus, the states 0001 and 0011 switch their probabilities again.", "As a result, the state 0011 has the resulting joint probability of 0.32. Since this state is the only state where qubit 1 is 1, we get the joint probability by measuring a single qubit.", "This part of the circuit is also known as the controlled RY-gate. Actually, Qiskit provides a function for this out of the box. Let's have a look. It has the same effect.", "In summary, the controlled RY-gate works similarly to the CNOT-gate. But it applies an RY-gate on the controlled qubit if the control qubit is 1, rather than applying the X-gate. If the control qubit is 0, nothing happens.", "From the perspective of the resulting states, the controlled RY-gate splits the state(s) where the control qubit is 1 into two parts. But it leaves untouched the state(s) where the control qubit is 0. In contrast to applying the RY-gate on a fresh qubit that splits all states, the controlled RY-gate provides fine control over the states you want to work with. Consequently, you transform the controlled qubit only in the cases that matter.", "This post is part of the book: Hands-On Quantum Machine Learning With Python.", "Get the first three chapters for free here.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "You're interested in quantum computing and machine learning. But you don't know how to get started? Let me help"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fbd6956d63b7c&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://pyqml.medium.com/?source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": ""}, {"url": "https://pyqml.medium.com/?source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": "Frank Zickert | Quantum Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feebfab42a2c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=post_page-eebfab42a2c4----bd6956d63b7c---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbd6956d63b7c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbd6956d63b7c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.pyqml.com/page?ref=medium_programming&dest=/", "anchor_text": "Hands-On Quantum Machine Learning With Python"}, {"url": "https://towardsdatascience.com/you-dont-need-to-be-a-mathematician-to-master-quantum-computing-161026af8878", "anchor_text": "you don\u2019t need to be a mathematician to master quantum computing"}, {"url": "https://towardsdatascience.com/how-to-setup-jupyterlab-for-quantum-computing-on-windows-6171c0a62e62", "anchor_text": "here\u2019s a tutorial on how to setup JupyterLab for quantum computing"}, {"url": "https://medium.com/better-programming/if-you-want-to-gamble-with-quantum-computing-e327c11f97e5", "anchor_text": "this post"}, {"url": "https://towardsdatascience.com/do-you-struggle-with-the-quantum-superposition-86d0f2147bfb", "anchor_text": "this post"}, {"url": "https://www.pyqml.com/page?ref=medium_programming&dest=/", "anchor_text": "Hands-On Quantum Machine Learning With Python"}, {"url": "https://www.pyqml.com/page?ref=medium_programming&dest=/", "anchor_text": "here"}, {"url": "https://medium.com/tag/quantum-computing?source=post_page-----bd6956d63b7c---------------quantum_computing-----------------", "anchor_text": "Quantum Computing"}, {"url": "https://medium.com/tag/programming?source=post_page-----bd6956d63b7c---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----bd6956d63b7c---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/tag/python?source=post_page-----bd6956d63b7c---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/qiskit?source=post_page-----bd6956d63b7c---------------qiskit-----------------", "anchor_text": "Qiskit"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbd6956d63b7c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=-----bd6956d63b7c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbd6956d63b7c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=-----bd6956d63b7c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbd6956d63b7c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fbd6956d63b7c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----bd6956d63b7c---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----bd6956d63b7c--------------------------------", "anchor_text": ""}, {"url": "https://pyqml.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://pyqml.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Frank Zickert | Quantum Machine Learning"}, {"url": "https://pyqml.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "7.9K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Feebfab42a2c4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=post_page-eebfab42a2c4--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F2d21069992f0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fquantum-programming-for-non-mathematicians-bd6956d63b7c&newsletterV3=eebfab42a2c4&newsletterV3Id=2d21069992f0&user=Frank+Zickert+%7C+Quantum+Machine+Learning&userId=eebfab42a2c4&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}