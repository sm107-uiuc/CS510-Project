{"url": "https://towardsdatascience.com/performance-of-numpy-and-pandas-comparison-7b3e0bea69bb", "time": 1683002864.194411, "path": "towardsdatascience.com/performance-of-numpy-and-pandas-comparison-7b3e0bea69bb/", "webpage": {"metadata": {"title": "Performance of numpy and pandas \u2014 comparison | by Oleg \u017bero | Towards Data Science", "h1": "Performance of numpy and pandas \u2014 comparison", "description": "There seems to be no data science in Python without numpy and pandas. (This is also one of the reasons why Python has become so popular in Data Science). However, dumping the libraries on the data is\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Locality_of_reference", "anchor_text": "here", "paragraph_index": 4}, {"url": "https://en.wikipedia.org/wiki/Seppuku", "anchor_text": "hara-kiri", "paragraph_index": 18}, {"url": "https://landing.mailerlite.com/webforms/landing/j5y2q1", "anchor_text": "newsletter", "paragraph_index": 20}, {"url": "https://forms.gle/bNpf9aqZJGLgaU589", "anchor_text": "form", "paragraph_index": 20}, {"url": "https://zerowithdot.com", "anchor_text": "https://zerowithdot.com", "paragraph_index": 22}], "all_paragraphs": ["There seems to be no data science in Python without numpy and pandas. (This is also one of the reasons why Python has become so popular in Data Science). However, dumping the libraries on the data is rarely going to guarantee the performance. So what\u2019s wrong?", "Let\u2019s begin with the underlying problem. When crafting an algorithm, many of the tasks that involve computation can be reduced into one of the following categories:", "In this post, we will try to shed more light on these three most common operations and try to understand what happens. For all the evaluation of performance, we have used:", "As for the first case, we select a subset of positive values from a uniformly randomly generated data. Furthermore, we organize the data in the form of a numpy array and pandas data frame as either 1-dimensional object of the size of 1 x N or 2-dimensional array with size of sqrt(N) x sqrt(N), where N is the number of elements. For every N, we test the following operations:", "First of all, numpy is, by all means, the fastest. The reason for that it is C-compiled and stores numbers of the same type (see here), and in contrast to the explicit loop, it does not operate on pointers to objects. The np.where function is a common way of implementing element-wise condition on a numpy array. It often comes in handy, but it does come with a small performance price that is related to an overhead of a function call.", "When it comes to the pandas dataframes, their main advantage is the ability to store associated data of different types, which improves both the process of data analysis and code readability. At the same time, this flexibility is also the main disadvantage of the dataframes when it comes to performance. Looking at the figure 1, we can see that irrespectively of the array size, there is an initial price of 1ms to pay just invoke the calculations. Then, the rest only depends on the array size and\u2026 arrangement of its elements!", "The x > 0 is a very simple condition that can be applied to any numerical data. Since all our date elements are numbers, it is possible to apply it on all rows ( df.apply(..., axis=0), columns ( df.apply(..., axis=1)), element-wise ( df.applymap) or over the entire dataframe ( df.pipe), and so it gives us a good way of testing. Comparing 1-dimensional array with 2-dimensional one, we can instantly spot the importance of the axis argument in apply method. Although our data may not always allow us to choose between these methods, we should try to vectorize along the shortest axis (columns in this case). If the number of columns and rows are comparable, then df.applymap or df.pipe are better choices.", "Last, but not least, it can be noticed that the shape of the array also influences the scaling. Except for numpy (after the initial constant), the execution time on the dataframes is not linear. Still, the possible cross-over between the execution time related to numpy and pandas methods seems to occur in the region of at least 1e15elements, which is where cloud computing comes in.", "Now, let\u2019s see what it takes to apply a simple atomic calculation: taking a square root of every number. In order to avoid getting into complex numbers, let us use only positive numbers. Furthermore, we introduce vsqrt - a vectorized version of the sqrt function (but not equivalent to np.sqrt) in order to account for the case of bringing a foreign function into numpy. Finally, let's see the difference between calling sqrt through .apply directly, or through a lambda.", "Again, bare-bones numpy beats all the other methods. We can also see the similar behavior of pandas dataframe objects, as compared with the previous case.", "Interestingly, however, the vectorized form of the square root function seems to underperform compared to the explicit loop. While nearly the same for the 1-dimensional array, for the 2-dimensional case it performs far worse than the loop and even worse than pandas. Perhaps it does make sense, if the original function is relatively more complex, containing multiple loops and conditions? Anyway, it seems to be more efficient to just construct function that can be applied directly on the numpy arrays.", "Finally, figure 2. shows there is no practical difference between calling df.apply method using lambda or directly. The anonymous function does offer more flexibility (when x becomes row or column), but there is no penalty here.", "Finally, the last case in this post touches one of the most common numerical operations: calculating a dot-product between a vector and a matrix. Mathematically, this operation can be defined as y = A x, where every element of yis calculated by taking", "Mtimes, which for N x M array, gives rise to NM multiplications and N(M \u2014 1) additions.", "Taking pandas aside for now, numpy already offers a bunch of functions that can do quite the same.", "For simplicity, we use a square matrix and compute the product of the following dimensionality (N x M) x (N x 1), yielding N(2N \u2014 1)operations.", "From figure 3, it is evident that custom-made loop-based implementation performs worse by even three orders of magnitude. At the same time, there is no real difference between the different variants of the dot-product as listed above. The initial flat characteristics can be explained with a penalty associated with a function call itself. The more complicated the function (e.g. np.tensordot), the higher it becomes. However, as soon as the numbers are relatively larger, the execution time is dominated by the actual computation time, which becomes agnostic to the initial function.", "Having studied the three cases, the following pieces of advice make sense:", "So\u2026 is your code still running slowly? Look it up again! Maybe it\u2019s not time to move from python to C just yet? Perhaps there is still a method or two that slow the whole thing down, or you have even made computation hara-kiri?", "I am planning to bring the articles to next level and offer short screencast video \u00b5-tutorials.", "If you want to be updated concerning the videos and future articles, subscribe to my newsletter. You can also let me know of your expectations by filling out the form. See you soon!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist | https://zerowithdot.com | makes data make sense"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F7b3e0bea69bb&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://oleg-zero13.medium.com/?source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": ""}, {"url": "https://oleg-zero13.medium.com/?source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": "Oleg \u017bero"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb15e8d374ce1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&user=Oleg+%C5%BBero&userId=b15e8d374ce1&source=post_page-b15e8d374ce1----7b3e0bea69bb---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7b3e0bea69bb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7b3e0bea69bb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://en.wikipedia.org/wiki/Locality_of_reference", "anchor_text": "here"}, {"url": "https://docs.scipy.org/doc/numpy/reference/generated/numpy.dot.html", "anchor_text": "np.dot"}, {"url": "https://docs.scipy.org/doc/numpy/reference/generated/numpy.dot.html", "anchor_text": "np.matmul"}, {"url": "https://docs.scipy.org/doc/numpy/reference/generated/numpy.dot.html", "anchor_text": "np.inner"}, {"url": "https://docs.scipy.org/doc/numpy/reference/generated/numpy.tensordot.html", "anchor_text": "np.tensordot"}, {"url": "https://en.wikipedia.org/wiki/Seppuku", "anchor_text": "hara-kiri"}, {"url": "https://landing.mailerlite.com/webforms/landing/j5y2q1", "anchor_text": "newsletter"}, {"url": "https://forms.gle/bNpf9aqZJGLgaU589", "anchor_text": "form"}, {"url": "https://zerowithdot.com/python-numpy-and-pandas-performance/", "anchor_text": "https://zerowithdot.com"}, {"url": "https://medium.com/tag/data-science?source=post_page-----7b3e0bea69bb---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----7b3e0bea69bb---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python?source=post_page-----7b3e0bea69bb---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data-analysis?source=post_page-----7b3e0bea69bb---------------data_analysis-----------------", "anchor_text": "Data Analysis"}, {"url": "https://medium.com/tag/pandas?source=post_page-----7b3e0bea69bb---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7b3e0bea69bb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&user=Oleg+%C5%BBero&userId=b15e8d374ce1&source=-----7b3e0bea69bb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7b3e0bea69bb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&user=Oleg+%C5%BBero&userId=b15e8d374ce1&source=-----7b3e0bea69bb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7b3e0bea69bb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F7b3e0bea69bb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----7b3e0bea69bb---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----7b3e0bea69bb--------------------------------", "anchor_text": ""}, {"url": "https://oleg-zero13.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://oleg-zero13.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Oleg \u017bero"}, {"url": "https://oleg-zero13.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "387 Followers"}, {"url": "https://zerowithdot.com", "anchor_text": "https://zerowithdot.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fb15e8d374ce1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&user=Oleg+%C5%BBero&userId=b15e8d374ce1&source=post_page-b15e8d374ce1--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F6b4620dc0d74&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fperformance-of-numpy-and-pandas-comparison-7b3e0bea69bb&newsletterV3=b15e8d374ce1&newsletterV3Id=6b4620dc0d74&user=Oleg+%C5%BBero&userId=b15e8d374ce1&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}