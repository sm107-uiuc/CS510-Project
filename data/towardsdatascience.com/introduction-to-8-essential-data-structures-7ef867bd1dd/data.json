{"url": "https://towardsdatascience.com/introduction-to-8-essential-data-structures-7ef867bd1dd", "time": 1683009371.570862, "path": "towardsdatascience.com/introduction-to-8-essential-data-structures-7ef867bd1dd/", "webpage": {"metadata": {"title": "Introduction to 8 Essential Data Structures | by Juan Cruz Martinez | Towards Data Science", "h1": "Introduction to 8 Essential Data Structures", "description": "Our understanding of data structures as programmers is mostly limited to using them at a higher level of abstraction with a programming language. Though we know how to store and retrieve data from\u2026"}, "outgoing_paragraph_urls": [{"url": "https://livecodestream.dev", "anchor_text": "https://livecodestream.dev", "paragraph_index": 38}], "all_paragraphs": ["Our understanding of data structures as programmers is mostly limited to using them at a higher level of abstraction with a programming language. Though we know how to store and retrieve data from different data structures using a particular programming language, most of us don\u2019t try to unravel what goes on in the lower level implementation of these data structures.", "Surface level knowledge of data structures is enough to somehow get our work done in most cases. But understanding how different data structures behave at the lower levels is crucial when it comes to selecting the optimal data structure for a given task. In this article, we will look under the wraps of 8 different data structures and see how they handle data.", "Array data structure stores a fixed number of data of a single data type. Elements (items) in an array are stored in a block of contiguous memory slots. Due to this, elements in an array are assigned consecutive numbers, starting from 0 or 1, as their \u201cindexes\u201d.", "One can access a single element stored in an array at random using its unique index. Accessing an element using the index has a time complexity of \u0398(1). Reading or updating array elements can be easily achieved in this manner. Because of the contiguous location of array elements, arrays traversal is faster compared to most of the other data structures.", "Inserting to or deleting from an array is a rather complex and time-consuming task. When inserting, all the elements in the current array are copied to a newly created array with increased size, and the new element is added to the end of the new array. Deleting is also implemented in a similar manner to reduce the array size.", "Arrays can be multi-dimensional (array of arrays). This makes arrays a good choice for storing matrices and vectors. Arrays are frequently used to implement other data structures like lists, heaps, stacks, and queues.", "The queue data structure is similar to the queue we see in our daily life: the first person to enter the queue is the first person to get the next chance to exit the queue. In the programming world\u2019s version of the queue, every new data element added to the queue is stored at the rear end and every element removed from the queue is taken from the front end \u2014 on the First In First Out basis.", "Queues are used to implement buffers. Multithreading uses queues to manage tasks waiting to be implemented by threads.", "Stacks are quite similar to queues, but they are implemented on the Last In First Out basis instead of the First In First Out basis. Think of a stack of dishes where the last dish to add is the first dish that is going to be removed.", "Stacks are used to handling and evaluating mathematical expressions. They are also used in algorithms that use a backtracking procedure. Handling recursive function calls in recursive programming is another application.", "A linked list is a dynamic data structure. This means the number of data items stored in a linked list can easily expand or shrink. This gives linked lists more flexibility compared to arrays that have a fixed size. Linked lists achieve this dynamic quality by storing each item as a separate object.", "Elements in a linked list don\u2019t have to be stored in contiguous memory slots, instead, each element (called a node) stores a pointer to the location of the next node. These pointers maintain the connection with separate nodes in the linked list. Other than the pointer to the next node, a node also stores a data field.", "There are two important nodes in a linked list: head and tail.", "When inserting a new element to a linked list, the new data field is stored at a particular location in memory and the pointer in the preceding node is updated to point to the new node. The new node stores the pointer previously stored in the preceding node.", "When deleting a node, the node preceding the deleted node is given the pointer previously stored in the deleted node.", "However, with linked lists, you cannot directly access a single data item without traversing through the list starting from the head. This gives the access operation a time complexity of \u0398(n).", "Linked lists are used to implement data structures like stacks, queues, and graphs. When performing polynomial algebra operations, linked lists are used to store the constants.", "A graph consists of a finite number of data items called vertices (V). Some pairs of these vertices are linked to each other through edges (E). Two vertices connected by an edge are adjacent to each other.", "Graphs can be categorized using different attributes. One of such categorization is directed graphs and undirected graphs.", "Social media applications like Facebook uses graphs to represent its users as vertices and their friendships as edges. Google Page Ranking Algorithm used graphs to represent web pages and links connecting them. Google Maps uses graphs to represent the road network in its transportation systems.", "A binary tree shares some resemblance to a directed graph. The difference between the two is that, in a binary tree, data is stored in a hierarchical structure, where upper-level nodes are called parents and the lower level nodes are called children. A node in a binary tree can have only one parent and a maximum of two children.", "Let\u2019s look at a few terms associated with binary trees.", "There are numerous special binary trees like Binary Search Tree, Treap, Binary Tries, and Heap.", "Binary search tree stores data values in sorted order. The left child of a node in a binary search tree must have a value less than the parent and the right child must have a value greater than the parent.", "The main advantage of a BST, as the name suggests, is being able to search for stored data fast. The time complexity of searching for a stored element in a BST is O(log n).", "Heap is another special case of binary trees. In heaps, the key of the root is compared with the key of its children to arrange them in a specific way. There are two types of heaps.", "Inserting, deleting, and extracting the maximum (or minimum) functions in a heap has a time complexity of O(log n). But finding the maximum (or minimum) has only a time complexity of O(1).", "Heaps are used in implementing the heapsort algorithm. Heaps are also used to implement priority queues because the first element of the heap is always storing the value with the maximum (or minimum) priority.", "Hash table is one of the most efficient data structures we can use when we want to maintain the speed of searching and insertion operations on a large dataset. Every data value stored in a hash table is associated with a key that gives fast access to the stored value if we know the key. Think of a student registration system where each student has a unique student ID which can be used as a key to store their data in a hash table.", "Hash tables use arrays to store data values. The key is used to finding the index within the array where the value is stored. But how does hash tables map these keys with their values?", "One of the methods that can be used is direct addressing. It uses one to one mapping: each key points to the exact location its data is stored at. But this approach does not use memory efficiently, especially as the number of key-value pairs grows and the keys become larger in size. So instead, hash tables use hash functions.", "Hash tables use a hash function to map data values to their keys. It converts a range of key values to a range of array indexes. The index or the value generated by passing the key to the hash function is called the hash value. Here is an example hash function.", "Let\u2019s consider the hash values of several keys. Consider m=20.", "Consider the hash value of the key 2021, which is 1. We previously saw that the value associated to the key 1001 is stored at index 1 in the hash table. When the hash values generated by two keys are similar, we call it a collision. Hash tables use techniques like chaining and open addressing to address this problem of collision.", "Hash tables have searching and insertion time complexity of O(1).", "Hash tables are used to implement database indexes. Compilers use hash tables to identify keyword in a programming language. Computers use hash tables to link file names with their paths.", "This article provided a basic introduction to the underlying logic of 8 data structures we interact with daily as programmers. With this knowledge of the unique properties of different data structures, from today onwards you can be more mindful when choosing the most appropriate data structure for your programming task. But remember, this is only a basic introduction. There is a lot more you can and you should learn about data structures.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I help people learn tech skills so they can level up their life. Founder of https://livecodestream.dev, content creator, and Oktanaut!"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F7ef867bd1dd&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://bajcmartinez.medium.com/?source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": ""}, {"url": "https://bajcmartinez.medium.com/?source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": "Juan Cruz Martinez"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F46b6f430560f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&user=Juan+Cruz+Martinez&userId=46b6f430560f&source=post_page-46b6f430560f----7ef867bd1dd---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7ef867bd1dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7ef867bd1dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@teapowered?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Patrick Robert Doyle"}, {"url": "https://towardsdatascience.com/s/photos/blocks?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://medium.com/tag/programming?source=post_page-----7ef867bd1dd---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----7ef867bd1dd---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----7ef867bd1dd---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/tag/data-science?source=post_page-----7ef867bd1dd---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/algorithms?source=post_page-----7ef867bd1dd---------------algorithms-----------------", "anchor_text": "Algorithms"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7ef867bd1dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&user=Juan+Cruz+Martinez&userId=46b6f430560f&source=-----7ef867bd1dd---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F7ef867bd1dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&user=Juan+Cruz+Martinez&userId=46b6f430560f&source=-----7ef867bd1dd---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F7ef867bd1dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F7ef867bd1dd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----7ef867bd1dd---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----7ef867bd1dd--------------------------------", "anchor_text": ""}, {"url": "https://bajcmartinez.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://bajcmartinez.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Juan Cruz Martinez"}, {"url": "https://bajcmartinez.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2.7K Followers"}, {"url": "https://livecodestream.dev", "anchor_text": "https://livecodestream.dev"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F46b6f430560f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&user=Juan+Cruz+Martinez&userId=46b6f430560f&source=post_page-46b6f430560f--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F22c096860c66&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-8-essential-data-structures-7ef867bd1dd&newsletterV3=46b6f430560f&newsletterV3Id=22c096860c66&user=Juan+Cruz+Martinez&userId=46b6f430560f&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}