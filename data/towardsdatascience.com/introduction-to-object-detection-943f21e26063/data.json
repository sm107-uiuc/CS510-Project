{"url": "https://towardsdatascience.com/introduction-to-object-detection-943f21e26063", "time": 1683007221.8370402, "path": "towardsdatascience.com/introduction-to-object-detection-943f21e26063/", "webpage": {"metadata": {"title": "Introduction to Object Detection. From Image Classification to Object\u2026 | by Mahendran Venkatachalam | Towards Data Science", "h1": "Introduction to Object Detection", "description": "Object Detection deals with identifying the \"what\" & \"where\" of the objects in an image. Image classification identifies which class a given image belongs to. But how do we build on top of image classification and not only determine the position of the object in the image, but also identify multiple objects with their positions?"}, "outgoing_paragraph_urls": [{"url": "https://arxiv.org/pdf/1506.02640.pdf", "anchor_text": "paper link", "paragraph_index": 11}, {"url": "https://en.wikipedia.org/wiki/Jaccard_index", "anchor_text": "IOU", "paragraph_index": 13}, {"url": "https://arxiv.org/pdf/1512.02325.pdf", "anchor_text": "paper link", "paragraph_index": 15}, {"url": "https://en.wikipedia.org/wiki/Jaccard_index", "anchor_text": "IOU", "paragraph_index": 16}, {"url": "https://arxiv.org/pdf/1506.01497.pdf", "anchor_text": "paper link", "paragraph_index": 17}, {"url": "https://en.wikipedia.org/wiki/Jaccard_index", "anchor_text": "IOU", "paragraph_index": 18}, {"url": "https://en.wikipedia.org/wiki/Jaccard_index", "anchor_text": "IOU", "paragraph_index": 18}, {"url": "https://pytorch.org/docs/stable/torchvision/models.html#object-detection-instance-segmentation-and-person-keypoint-detection", "anchor_text": "torchvision models", "paragraph_index": 20}, {"url": "https://github.com/tensorflow/models/tree/master/research/object_detection", "anchor_text": "Tensorflow Object Detection API", "paragraph_index": 20}, {"url": "https://github.com/facebookresearch/detectron2", "anchor_text": "Detectron 2", "paragraph_index": 20}], "all_paragraphs": ["Basic image classification models are relatively straight forward. Given an image as input, the goal is to classify it as one of the many possible output classes. The architecture is typically, but not necessarily, a series of Convolution and Pooling layers flattened at the end with one or more linear layers with the final output layer having the same number of nodes/neurons as the number of classes. Each node in the output layer represents a class and the model will be trained for this final layer to give the probabilities that a given input image belongs to the corresponding class.", "The illustration above is of a multi class image classification example where the outputs are mutually exclusive, i.e. all the output probabilities sum-up to 1. Another variation is multi label classification where each probability is independent of the other and an image could be tagged to more than one class, like associating genres to movie posters.", "While such image classification capabilities have many applications, most real world applications require more than such classification of singleton images. If you think of self driving cars as an example (NOTE: the real self driving solutions are likely more sophisticated with nuances, but go with this example for illustrative purposes), it requires us to:", "Accomplishing all this requires a little more to be done than the image classification models. In this post, we will look at accomplishing the first two goals.", "So how do we determine the position, defined by bounding box coordinates, of the object(s) in addition to classification? And how do we determine multiple objects when present?", "The way we want to determine the position is by identifying the coordinates of the bounding box of the objects. Our goal will be to get the coordinates of the bounding boxes, typically by identifying the coordinates of the corner or center along with the height and width of the bounding box.", "Side Note: Another alternative is to get the masks of the identified object instances. For the identified object, the mask gives us all the pixels that are part of identified instance. Fig 1 illustrates both of these output options (a multi object detection illustration is used for ease understanding). The dotted lines represent the bounding box output whereas the colored objects represents the mask output we want to get given an input image.", "Let\u2019s do a simple thought exercise starting with a couple of constraints that will simplify the thinking and come back to remove them later. One, let\u2019s assume all objects are of a fixed width and height (say 20px * 20px). Two, let\u2019s assume these objects will start at 0 or multiples of 20. i.e. their top and left coordinates will be either 0 or multiples of 20 (i.e. top left will be 0,0 or 0,20 or 20,40 or 40,40 etc).", "With these two constraints in place, one way to determine the exact position of the object would be to imagine a grid across the image such that each cell is of size 20*20. Now, all we have to do is for each cell in the grid evaluate the class probabilities like in image classification. And all cells that have a class probability higher than a threshold, are where the objects are!", "Now when we remove the two constraints of predetermined size and position, it should become evident that somehow we have to have a grid system that helps us determine boxes of various sizes, aspect ratios and positions. These boxes are sometimes called the anchor boxes. There are different approaches on how to address this problem of generating varying sized/positioned anchor boxes, and we will look at how some of the well known approaches.", "It is also important to note that in this simple thought exercise, we imagined the grid system and anchor boxes directly over an image, but technically we will do this on a feature map representing the image like the last layer of a base network through which the image is passed.", "Yolo (paper link) for example divides the input image into an S \u00d7 S grid. Each grid cell is evaluated for not only the class probabilities as we did above, but a set of \u201cB\u201d bounding boxes and confidence scores for those boxes are also predicted alongside.", "In other words, the boxes are not predetermined like in our simple thought exercise, but are predicted along with the class probabilities with the cell. Each bounding box consists of 5 predictions: x, y, w, h, and confidence. The first four pertains to coordinates, the last one, confidence reflects how confident the model is that the box contains an object and how accurate the box coordinates are.", "In addition, the responsibility of determining the box coordinates of an object belongs to the grid cell in which the center of the object falls into. This helps prevent multiple cells determining boxes around the same object. But each cell still predicts multiple bounding boxes. One of these boxes is deemed \u201cresponsible\u201d for predicting an object based on which prediction has the highest current IOU with the ground truth during training. This during the course of training results in the different bounding boxes in each cell specializing at predicting certain sizes, aspect ratios, or classes of object, improving overall recall.", "These predictions are encoded as an S \u00d7 S \u00d7 (B \u2217 5 + C) tensor (S x S is the grid dimension, B is the boxes each cell in the grid will determine, 5 is the predictions made per box namely x, y, w, h and confidence, C is the probabilities for the C classes of objects the model can identify).", "Single Shot MultiBox Detector (SSD) (paper link), doesn\u2019t predict the boxes out of nothing, but starts with a set of default boxes. It uses several feature maps of different scales (i.e. several grids of different sizes like 4 x 4, 8 x 8 etc as seen in Fig 4) and a fixed set of default boxes of different aspect ratios per cell in each of those grids/feature maps. For each default box, the model then computes the \u201coffsets\u201d along with the class probabilities. The offsets are set of 4 numbers cx, cy, w and h \u2014 giving the offset of the center coordinates and width and height of the real box with respect to the default box.", "SSD also differs in its strategy to match the object ground truth boxes to the default boxes. There is no single default box held responsible for and matched to an object. Instead default boxes are matched to any ground truth with IOU higher than a threshold (0.5). This means high scores will be predicted for multiple default boxes overlapping with the object, rather than requiring holding just one of those boxes responsible.", "Unlike Yolo and SSD, Faster RCNN (paper link) and its predecessors take a two step approach. Faster RCNN deploys a separate Region Proposal Network dedicated to determining the anchor boxes first. Next is a Fast R-CNN detector that uses the proposed regions.", "In the Region Proposal Network (RPN), a small sliding window (a convolution) is applied over the output of the the base network. If the output of the base network is n*m*channels, n*m becomes the equivalent of our grid, with every position in the n*m feature map (i.e. the cells) is evaluated. Each location is evaluated against \u201ck\u201d anchor boxes of different sizes and aspect ratios. For each anchor box, 2 class predictions and 4 box coordinates are determined. The 2 class predictions tell whether the object in the box is background or foreground (i.e. does or does not have an object). The 4 box coordinates are the typical center x, y and width and height. For training RPNs, we assign a binary class label (of being an object or not) to each anchor. Anchors with the highest IOU with ground-truth boxes and anchors that have an IOU overlap higher than 0.7 with any ground-truth box are retained.", "The portions of the feature map that falls within the boxes are the regions of interest, which after a layer of ROI pooling is fed to a classifier.", "We have looked at how some of these popular models approach the problem of object detection. For each of the models, there are additional nuances which we have not covered in here, but hopefully this post still gives a general sense on how the problem is addressed. While knowing this is good, if you are more inclined towards using object detection in your applications, then checkout some of the available options: torchvision models, Tensorflow Object Detection API and PyTorch powered Detectron 2.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F943f21e26063&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----943f21e26063--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----943f21e26063--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@mahendran.venkatachalam?source=post_page-----943f21e26063--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@mahendran.venkatachalam?source=post_page-----943f21e26063--------------------------------", "anchor_text": "Mahendran Venkatachalam"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4d2735a047ae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&user=Mahendran+Venkatachalam&userId=4d2735a047ae&source=post_page-4d2735a047ae----943f21e26063---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F943f21e26063&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F943f21e26063&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://arxiv.org/pdf/1506.02640.pdf", "anchor_text": "paper link"}, {"url": "https://en.wikipedia.org/wiki/Jaccard_index", "anchor_text": "IOU"}, {"url": "https://arxiv.org/pdf/1506.02640.pdf", "anchor_text": "original paper here"}, {"url": "https://arxiv.org/pdf/1512.02325.pdf", "anchor_text": "paper link"}, {"url": "https://en.wikipedia.org/wiki/Jaccard_index", "anchor_text": "IOU"}, {"url": "https://arxiv.org/pdf/1512.02325.pdf", "anchor_text": "original paper here"}, {"url": "https://arxiv.org/pdf/1506.01497.pdf", "anchor_text": "paper link"}, {"url": "https://en.wikipedia.org/wiki/Jaccard_index", "anchor_text": "IOU"}, {"url": "https://en.wikipedia.org/wiki/Jaccard_index", "anchor_text": "IOU"}, {"url": "https://arxiv.org/pdf/1506.01497.pdf", "anchor_text": "original paper here"}, {"url": "https://pytorch.org/docs/stable/torchvision/models.html#object-detection-instance-segmentation-and-person-keypoint-detection", "anchor_text": "torchvision models"}, {"url": "https://github.com/tensorflow/models/tree/master/research/object_detection", "anchor_text": "Tensorflow Object Detection API"}, {"url": "https://github.com/facebookresearch/detectron2", "anchor_text": "Detectron 2"}, {"url": "https://medium.com/tag/object-detection?source=post_page-----943f21e26063---------------object_detection-----------------", "anchor_text": "Object Detection"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----943f21e26063---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----943f21e26063---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----943f21e26063---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----943f21e26063---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F943f21e26063&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&user=Mahendran+Venkatachalam&userId=4d2735a047ae&source=-----943f21e26063---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F943f21e26063&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&user=Mahendran+Venkatachalam&userId=4d2735a047ae&source=-----943f21e26063---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F943f21e26063&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----943f21e26063--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F943f21e26063&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----943f21e26063---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----943f21e26063--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----943f21e26063--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----943f21e26063--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----943f21e26063--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----943f21e26063--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----943f21e26063--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----943f21e26063--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----943f21e26063--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@mahendran.venkatachalam?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@mahendran.venkatachalam?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Mahendran Venkatachalam"}, {"url": "https://medium.com/@mahendran.venkatachalam/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "296 Followers"}, {"url": "https://gotensor.com/", "anchor_text": "https://gotensor.com/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4d2735a047ae&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&user=Mahendran+Venkatachalam&userId=4d2735a047ae&source=post_page-4d2735a047ae--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fb8b9125d53ec&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fintroduction-to-object-detection-943f21e26063&newsletterV3=4d2735a047ae&newsletterV3Id=b8b9125d53ec&user=Mahendran+Venkatachalam&userId=4d2735a047ae&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}