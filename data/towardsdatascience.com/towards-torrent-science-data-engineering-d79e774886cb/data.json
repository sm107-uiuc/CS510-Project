{"url": "https://towardsdatascience.com/towards-torrent-science-data-engineering-d79e774886cb", "time": 1683010579.468925, "path": "towardsdatascience.com/towards-torrent-science-data-engineering-d79e774886cb/", "webpage": {"metadata": {"title": "Towards Torrent Science: Data Engineering | by Deepak Karunakaran | Towards Data Science", "h1": "Towards Torrent Science: Data Engineering", "description": "Data Engineering methodologies for mining BitTorrent networks. A complete tutorial on extracting data from torrent sites and distributed hash table based p2p networks."}, "outgoing_paragraph_urls": [{"url": "https://variety.com/2013/digital/news/how-netflix-uses-piracy-to-pick-its-programming-1200611539/", "anchor_text": "article", "paragraph_index": 0}, {"url": "https://torrentfreak.com/torrent-traffic-surpasses-netflix-in-europe-middle-east-and-africa-200508/", "anchor_text": "article", "paragraph_index": 0}, {"url": "https://www.vice.com/en_nz/article/d3q45v/bittorrent-usage-increases-netflix-streaming-sites", "anchor_text": "article", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/BitTorrent", "anchor_text": "Wikipedia", "paragraph_index": 5}, {"url": "https://www.dataquest.io/blog/web-scraping-tutorial-python/", "anchor_text": "article", "paragraph_index": 14}, {"url": "https://towardsdatascience.com/overview-of-text-similarity-metrics-3397c4601f50#:~:text=Differences%20between%20Jaccard%20Similarity%20and,term%20frequency%20or%20tf%2Didf)", "anchor_text": "article", "paragraph_index": 17}, {"url": "https://en.wikipedia.org/wiki/Sequence_alignment", "anchor_text": "sequence alignment", "paragraph_index": 18}, {"url": "https://en.wikipedia.org/wiki/Nucleic_acid_sequence", "anchor_text": "nucleic acid sequences", "paragraph_index": 18}, {"url": "https://en.wikipedia.org/wiki/Protein_sequence", "anchor_text": "protein sequences", "paragraph_index": 18}, {"url": "https://en.wikipedia.org/wiki/Needleman%E2%80%93Wunsch_algorithm", "anchor_text": "entire", "paragraph_index": 18}, {"url": "https://en.wikipedia.org/wiki/Mathematical_optimization", "anchor_text": "optimizes", "paragraph_index": 18}, {"url": "https://en.wikipedia.org/wiki/Similarity_measure", "anchor_text": "similarity measure", "paragraph_index": 18}, {"url": "https://github.com/nitmir/btdht", "anchor_text": "Github", "paragraph_index": 26}, {"url": "https://github.com/rr2do2/maxminddb-geolite2", "anchor_text": "package", "paragraph_index": 29}], "all_paragraphs": ["Recently I stumbled upon an old article on Variety titled \u201cHow Netflix Uses Piracy to Pick Its Programming\u201d. It talks about how Netflix mines BitTorrent networks to determine which programs must be selected for its platform. A recent article (\u201cTorrent Traffic Surpasses Netflix in Europe, the Middle East and Africa\u201d) highlights that over the years BitTorrent traffic has seen a gradual decline with its usage still prominent in Europe, Africa and the Asia Pacific. Apparently the rise of a large number of streaming platforms is responsible for the resurgence of BitTorrent traffic (check this article). By the way, it must be noted that widespread usage of VPN has made it difficult to identify the source of traffic and therefore these statistics must be analyzed with a grain of salt.", "The idea that someone would share their bandwidth for the greater good of society goes against the theory of the \u201cTragedy of the Commons\u201d is surprising.", "BitTorrent networks have fascinated me for two primary reasons. Firstly, from the point of innovation, credit to Bram Cohen, this was amazing. The idea of a single file being simultaneously downloaded and assembled while getting uploaded using the simple CS principles which I was newly getting acquainted with was inspiring. The second point was the economics of its working. The idea that someone would share their bandwidth for the greater good of society goes against the theory of the tragedy of the commons is surprising.", "To put it simply it is a peer-to-peer sharing protocol which attempts to solve three main problems. Firstly, it provides an algorithm to split a large file into chunks, determines which peer has which chunk and which chunk should be sent where without major overhead. Secondly, it tries to address that issue of peers churning out of the network frequently once they download their file. And finally, the problem of fairness which deals with maintaining the correlation between upload and download rates.", "To use BitTorrent network, one needs a client which can connect a peer to the network. Every file which is shared on the network is associated with a torrent file which contains the information which is required by the client. A peer who shares the completed file is called a seeder and the peers which are downloading the file are called leechers on the network. It is desirable that seeders seed the file for a long period for the health of the network.", "More technical details of the protocol are out of the scope of this article. Check out Wikipedia for more information.", "BitTorrent network consists of data pertaining to the files in the network and the characteristics of the peers in the network. Netflix, for example, is interested in determining which are the popular programs which its consumers would like to watch. BitTorrent is a worldwide network and determining the geolocation of its peers could help in mining a number of interesting patterns. For example, what is the correlation between the socio-political metrics of a country and its movie-watching habits? What is the genre of music which a particular country likes? Which country consumes the highest amount of pornography?", "These and a number of other questions could be explored only when we have a framework to acquire data from the BitTorrent network. This is the main focus of this article. In subsequent articles of this series, named Torrent Science, I will report the different techniques employed to perform this analysis and share the results obtained from such investigation.", "There are two parts to the process of acquiring BitTorrent data. Firstly, scraping the torrent websites to find popular files (mostly pirated videos) along with the number of peers (seeders and leechers) associated with each file. Many popular files are uploaded multiple times, making the need for similarity matching of the file names and combining the information pertaining to the same content.", "Secondly, determining the geolocation of the peers for each file. Note that this information is not readily available on the torrent website. It would require some understanding of how the BitTorrent protocol works.", "This whole process must be repeated periodically to collect time-series data.", "Let's get started with the first part. This requires scraping of popular torrent websites like the pirate bay, 1337x, etc. This article only focuses on 1337x.to. This website periodically updates the list of trending torrents grouped by week and day across categories like TV, Movies, Applications, Games, etc.", "For each of the trending sections, e.g. trending documentaries, one can extract the names of the torrents. Check the snapshot below. For each of these torrents we need to extract the number of seeders and leechers, upload size, time etc. and the geolocation of the seeders and leechers.", "This is fairly straightforward. One needs a custom code for each website. The following code snippet does the job for 1337x.to", "For more information on using Beautiful Soup check this article.", "The following is an example of typical output. Notice the duplicates arising due to upload of the same content from multiple sources leading to multiple torrent files. Take, for example, \u2018Artemis Fowl\u2019 which has been uploaded twice (2 and 3 in the output), probably with variations in their file formats and other specifications. But when it comes to data mining and extracting patterns, both must be considered as the same file because they correspond to the same movie. Same applies for the Hindi movie named \u2018Gulabo Sitabo\u2019 (1 and 4 in the output).", "In the next section, I discuss finding these duplicates with high accuracy.", "This problem is about finding the similarity between a pair of text strings. Consider a function which can return a metric or a score indicating the similarity between the two. The first set of ideas might hover around similarity measures like Jaccard distance or cosine distance (check this article). But this is actually a much simpler problem and something like Smith-Waterman algorithm is apt for this purpose.", "\u201cThe Smith-Waterman algorithm performs local sequence alignment; that is, for determining similar regions between two strings of nucleic acid sequences or protein sequences. Instead of looking at the entire sequence, the Smith-Waterman algorithm compares segments of all possible lengths and optimizes the similarity measure.\u201d- says Wikipedia.", "swalign is a python package which implements this algorithm which uses dynamic programming under the hood. Check the code snippet below which shows the algorithm in action.", "The match and mismatch values could be changed to suit the application in hand. The usual values are 2 and -1 which work nicely for our purpose as well. As one can see, when name1 and name2 are compared the score is 14, while name1 and name3, which belongs to the same Bollywood movie titled Gulabo Sitabo have a high score of 88.", "Note that for TV shows which have the same names but different episodes or seasons, this similarity measure will fail. Though it will depend on the kind of analysis one wishes to do. If one wishes to compare the popularity of different seasons or episodes of a TV series, this might not work. But if one wishes to compare broadly across TV shows then this would still work.", "By considering the heuristic that only the initial part of the string pertains to the name and the latter part is just the metadata and also removing the dots, spaces and hyphens, we can get more accurate scores. This is achieved using the code snippet below.", "This is an interesting part as it requires a slightly deeper understanding of how the BitTorrent protocol works. As mentioned earlier, in order to download files using BitTorrent one needs a client e.g. Deluge. The client is provided with information about the required data which is necessary to find a list of peers who possess the files which need to be downloaded. This information is available in the form of pointers to tracker websites which store the list of peers.", "It is also possible to perform the above task without a tracker by using distributed hash tables. This is more useful as tracker websites are overloaded with requests from peers as the client needs to periodically refresh the peer list. Under the hood, an independent router table is maintained at each node which is updated as the node communicates with other nodes in the network. Note that even for trackerless torrents, at least one node is required for bootstrapping into the network.", "If this is all confusing or you intend to learn more, check the video below.", "Let us have a look at the code snippet which gets this done. I have used a python implementation of the BitTorrent DHT (Github link) \u2014 btdht.", "Let us try to identify the geolocation of peers who are downloading the popular open-source image editing software called GIMP. This would require the infohash which is obtained from the website 1337x.to as shown in the snapshot below.", "The following code uses dtdht package to extract the peer list from the network. The output shows a list of IP addresses of the peers in the network which are currently associated with this torrent.", "Once the list of the of IPs is obtained then we can use the geoIP2 database to determine the geolocations. It is actually quite straightforward when you install the package, maxminddb-geolite2.", "Check the code snippet below showing the countries to which the IP addresses shown above belong to.", "Apparently, GIMP is being downloaded the world over, with 145 peers in the list. The United States has 29 peers, closely followed by Russia with 24 peers.", "The following plot shows the frequency of peers in various countries for this specific software.", "I have currently run a cronjob to collect data from the torrent website every 6 hours. Over the next few weeks/months I would have collected sufficient data to try out data mining algorithms and look for patterns and relationships.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "computer scientist \u2014 cinephile \u2014 writer \u2014 runner"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd79e774886cb&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d79e774886cb--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d79e774886cb--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://dyaus.medium.com/?source=post_page-----d79e774886cb--------------------------------", "anchor_text": ""}, {"url": "https://dyaus.medium.com/?source=post_page-----d79e774886cb--------------------------------", "anchor_text": "Deepak Karunakaran"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4fa37edf338d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&user=Deepak+Karunakaran&userId=4fa37edf338d&source=post_page-4fa37edf338d----d79e774886cb---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd79e774886cb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd79e774886cb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@alinnnaaaa?utm_source=medium&utm_medium=referral", "anchor_text": "Alina Grubnyak"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://variety.com/2013/digital/news/how-netflix-uses-piracy-to-pick-its-programming-1200611539/", "anchor_text": "article"}, {"url": "https://torrentfreak.com/torrent-traffic-surpasses-netflix-in-europe-middle-east-and-africa-200508/", "anchor_text": "article"}, {"url": "https://www.vice.com/en_nz/article/d3q45v/bittorrent-usage-increases-netflix-streaming-sites", "anchor_text": "article"}, {"url": "https://en.wikipedia.org/wiki/BitTorrent", "anchor_text": "Wikipedia"}, {"url": "https://www.dataquest.io/blog/web-scraping-tutorial-python/", "anchor_text": "article"}, {"url": "https://towardsdatascience.com/overview-of-text-similarity-metrics-3397c4601f50#:~:text=Differences%20between%20Jaccard%20Similarity%20and,term%20frequency%20or%20tf%2Didf)", "anchor_text": "article"}, {"url": "https://en.wikipedia.org/wiki/Sequence_alignment", "anchor_text": "sequence alignment"}, {"url": "https://en.wikipedia.org/wiki/Nucleic_acid_sequence", "anchor_text": "nucleic acid sequences"}, {"url": "https://en.wikipedia.org/wiki/Protein_sequence", "anchor_text": "protein sequences"}, {"url": "https://en.wikipedia.org/wiki/Needleman%E2%80%93Wunsch_algorithm", "anchor_text": "entire"}, {"url": "https://en.wikipedia.org/wiki/Mathematical_optimization", "anchor_text": "optimizes"}, {"url": "https://en.wikipedia.org/wiki/Similarity_measure", "anchor_text": "similarity measure"}, {"url": "https://github.com/nitmir/btdht", "anchor_text": "Github"}, {"url": "https://github.com/rr2do2/maxminddb-geolite2", "anchor_text": "package"}, {"url": "https://medium.com/tag/torrent?source=post_page-----d79e774886cb---------------torrent-----------------", "anchor_text": "Torrent"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d79e774886cb---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----d79e774886cb---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/data?source=post_page-----d79e774886cb---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/tag/p2p?source=post_page-----d79e774886cb---------------p2p-----------------", "anchor_text": "P2p"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd79e774886cb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&user=Deepak+Karunakaran&userId=4fa37edf338d&source=-----d79e774886cb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd79e774886cb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&user=Deepak+Karunakaran&userId=4fa37edf338d&source=-----d79e774886cb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd79e774886cb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d79e774886cb--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd79e774886cb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d79e774886cb---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d79e774886cb--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d79e774886cb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d79e774886cb--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d79e774886cb--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d79e774886cb--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d79e774886cb--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d79e774886cb--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d79e774886cb--------------------------------", "anchor_text": ""}, {"url": "https://dyaus.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://dyaus.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Deepak Karunakaran"}, {"url": "https://dyaus.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "110 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F4fa37edf338d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&user=Deepak+Karunakaran&userId=4fa37edf338d&source=post_page-4fa37edf338d--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fca5e297fe818&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Ftowards-torrent-science-data-engineering-d79e774886cb&newsletterV3=4fa37edf338d&newsletterV3Id=ca5e297fe818&user=Deepak+Karunakaran&userId=4fa37edf338d&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}