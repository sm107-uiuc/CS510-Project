{"url": "https://towardsdatascience.com/15-things-you-should-know-about-dictionaries-in-python-44c55e75405c", "time": 1683004171.850402, "path": "towardsdatascience.com/15-things-you-should-know-about-dictionaries-in-python-44c55e75405c/", "webpage": {"metadata": {"title": "15 things you should know about Dictionaries in Python | by Amanda Iglesias Moreno | Towards Data Science", "h1": "15 things you should know about Dictionaries in Python", "description": "A dictionary is an unordered and mutable Python container that stores mappings of unique keys to values. Dictionaries are written with curly brackets ({}), including key-value pairs separated by\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["A dictionary is an unordered and mutable Python container that stores mappings of unique keys to values. Dictionaries are written with curly brackets ({}), including key-value pairs separated by commas (,). A colon (:) separates each key from its value.", "Three dictionaries are shown below, containing the population of the 5 largest German cities, list of products, and student\u2019s grades.", "Dictionaries can also be created with the built-in function dict(**kwarg). This function takes an arbitrary number of keywords arguments (arguments preceded by an identifier kwarg=value) as input.", "We can also create a dictionary using another dictionary in combination with keyword arguments (dict(mapping, **kwarg)) as follows:", "Alternatively, we can construct a dictionary using an iterable (e.g. list of tuples). Each tuple must contain two objects. The first object becomes the key and the second becomes the value of the dictionary.", "Lastly, we can create a dictionary using two lists. First, we have to build an iterator of tuples using zip(*iterables) function. Then, we employ the dict([iterable, **kwarg]) function to construct the dictionary, as we did previously.", "To access dictionary values, we cannot use a numeric index (as we do with lists or tuples), since the dictionaries are unordered containers. Instead, we enclose the key using square brackets([]). If we try to access a value using an undefined key, a KeyError is raised.", "To avoid getting an exception with undefined keys, we can use the method dict.get(key[, default]). This method returns the value for key if key is in the dictionary, else returns default. If default is not provided, it returns None (but never raises an exception).", "To insert an element in a dictionary, we can use square brackets as follows:", "To insert multiple items at once, we can use the method dict.update([other]). This method updates the dictionary with the key/value pairs from other, overwriting existing keys.", "As shown above, the .update() method accepts as an argument not only another dictionary, but also a list of tuples or keyword arguments. This method modifies the dictionary in-place, returning None.", "We can change the value of an item by accessing the key using square brackets ([]). To modify multiple values at once, we can use the .update() method, since this function overwrites existing keys.", "Subsequently, we increase the price of a sofa 100 units, and we modify the grades of two students.", "To remove an element in a dictionary, we can use either the del dict[key] keyword or the dict.pop(key[, default]) method.", "The del dict[key] keyword removes the given element from the dictionary, raising a KeyError if key does not exists.", "If key exists in the dictionary, the dict.pop(key[, default]) method removes the item with the given key from the dictionary and returns its value. On the contrary, if key does not exist in the dictionary, the method returns the default value. If no default value is provided and key does not exist, the .pop() method will raise an exception (KeyError).", "To check whether a key exists in a dictionary, we have to use a membership operator. Membership operators are used to test whether a value is found in a sequence (e.g. strings, lists, tuples, sets, or dictionaries). There are two membership operators, as explained below.", "As shown above, membership operators (in and not in) can be used to check whether a key exists in a dictionary, but they can also be used with other sequences in the following manner.", "To copy a dictionary, we can simply use the dict.copy() method. This method returns a shallow copy of the dictionary. We have to be careful with shallow copies, since if your dictionary contains another container-objects like lists, tuples, or sets, they will be referenced again and not duplicated.", "To avoid this problem, we can create a deep copy using copy.deepcopy(x) function (defined in the copy module) as follows:", "The difference between shallow copies and deep copies is only relevant when the dictionary contains other objects like lists, since those objects will be referenced instead of duplicated (shallow copy). To create a fully independent clone of the original dictionary, we have to make a deep copy.", "If you want to know more about how to copy a dictionary, you can read the following article where the differences between shallow copies and deep copies are explained in detail.", "It is important to bear in mind that the = operator does not make a copy of the dictionary. It is just another name to refer to the same dictionary, meaning any modification to the new dictionary is reflected in the original one.", "To determine how many key-value pairs the dictionary contains, we can use the len() function. This function returns the number of items of an object. The input of the function can be a dictionary, but also another type of sequence such as a string, list, tuple, or set.", "To iterate over the keys, we can use the dictionary directly in a for loop as follows:", "Alternatively, we can use the dict.keys() method. This method returns a view object, containing the keys of the dictionary.", "If you just need to work with the values of a dictionary, then you can use the dict.values() method in a for loop. This method returns a view object that contains the values of the dictionary.", "We can compute how many people live in the 5 largest German cities using dict.values() method as follows:", "As we can observe, almost 9 million people live in the 5 largest German cities.", "When you\u2019re working with dictionaries, it\u2019s likely that you need to use the keys and the values. To loop through both, you can use the dict.items() method. This method returns a view object, containing key-value pairs as a list of tuples.", "We can determine the student with the lowest test score using the dict.items() method in combination with a for loop as follows:", "As shown above, Normando is the student with the lowest test score (2.5).", "Python for-loops are very handy in dealing with repetitive programming tasks; however, there is another alternative to achieve the same results in a more efficient way: dictionary comprehensions.", "Dictionary comprehensions allow the creation of a dictionary using an elegant and simple syntax: {key: value for vars in iterable}. In addition, they are faster than traditional for-loops.", "We can filter the products with a price lower than 100 euros using both a traditional for-loop and a dictionary comprehension.", "As we can observe, dictionary comprehensions provide the same results as traditional for-loops in a more elegant way.", "Nested dictionaries are dictionaries that contain other dictionaries. We can create a nested dictionary in the same way we create a normal dictionary using curly brackets ({}).", "The following nested dictionary contains information about 5 famous works of art. As we can observe, the values of the dictionary are other dictionaries as well.", "We can also create the prior nested dictionary using the dict() constructor, passing the key: value pairs as keyword arguments.", "To access elements in a nested dictionary, we specify the keys using multiple square brackets ([]).", "If you want to know more about nested dictionaries, you can read the following article where, how to work with nested dictionaries (e.g. update items, change elements, and loop though) is explained in detail.", "The collections module provides alternative container datatypes to built-in Python containers. Three dictionary subclasses contained in the collections module that are pretty handy when working with Python are: (1)OrderedDict, (2)defaultdict, and (3)Counter.", "OrderedDict consists of a dictionary that remembers the order in which its contents are added. In Python 3.6+ dictionaries are also insertion ordered, meaning they remember the order of items inserted. However, to guarantee element order across other Python versions, we have to use OrderedDict containers.", "As shown above, OrderedDict accepts dictionary methods and functions. Moreover, elements can be inserted, changed, or deleted in the same way as with normal dictionaries.", "Defaultdicts are a dictionary subclass that assign a default value when a key is missing (it has not been set yet). They never raise a KeyError, if we try to access an item that is not available in the dictionary, instead a new entry is created.", "Defaultdicts take a function as an argument, and initialize the missing key with the value returned by the function. In the example below, the keys are initialized with different values, depending on the function employed as first argument.", "As we can observe, we can pass a dictionary or keywords as second argument (optional) to initialize the defaultdict container.", "A Counter is a dictionary subclass for counting hastable objects. The function returns a Counter object, where elements are stored as keys and their counts are stored as values. Using this function, we can easily count the elements of a list, as shown below.", "As shown above, we can easily obtain the most frequent elements with the .most_common([n]) method. This method returns a list of the n most common elements and their counts.", "A Pandas DataFrame is a two-dimensional tabular data where each row represents an observation and each column a variable. A Pandas DataFrame can be created using the pandas.DataFrame constructor. This function accepts as input various python containers (e.g. lists, dictionaries, or numpy arrays). However, in this article, we explain only the ways to create a DataFrame that involve the use of dictionaries.", "We can create a DataFrame from a dictionary, where the keys represent column names, and the values represent column data in the following manner:", "As we can observe, the default index is just the row number (an integer index beginning at 0). We can modify these indexes by passing the index list to the DataFrame constructor.", "A list of dictionaries can also be used to create a DataFrame, where the keys represent column names. As before, we can change indexes by passing the index list to the DataFrame function.", "There are several functions in Pandas that use dictionaries as input values, for example, pandas.DataFrame.rename and pandas.DataFrame.replace.", "This function returns a DataFrame with renamed axis labels. We can use a dictionary as input where keys refer to the old names and values to the new ones. Labels not contained in the dictionary remain unchanged.", "As shown above, we can change index labels, providing a dictionary to the index parameter. Alternatively, we can modify column names providing the dictionary to the column parameter.", "This function replaces values of the DataFrame with other values dynamically. We can use a dictionary with the replace function to modify the DataFrame where keys represent existing entries, and values replacement entries.", "Article finished! \ud83c\udf40 As you can see, dictionaries are a really useful tool in Python. I hope this article serves you as a guideline for taking full advantage of them when coding in Python. \ud83d\udcaa", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist at Statista \u2014 Based in Hamburg \ud83d\udccd"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F44c55e75405c&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----44c55e75405c--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----44c55e75405c--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://amandaiglesiasmoreno.medium.com/?source=post_page-----44c55e75405c--------------------------------", "anchor_text": ""}, {"url": "https://amandaiglesiasmoreno.medium.com/?source=post_page-----44c55e75405c--------------------------------", "anchor_text": "Amanda Iglesias Moreno"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1bace2932c65&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&user=Amanda+Iglesias+Moreno&userId=1bace2932c65&source=post_page-1bace2932c65----44c55e75405c---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F44c55e75405c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F44c55e75405c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://thispointer.com/python-how-to-copy-a-dictionary-shallow-copy-vs-deep-copy/", "anchor_text": "Python : How to copy a dictionary | Shallow Copy vs Deep CopyIn this article we will discuss how to create a shallow and deep copy of dictionary in Python. Python's dictionary\u2026thispointer.com"}, {"url": "https://www.learnbyexample.org/python-nested-dictionary/", "anchor_text": "Python Nested Dictionary - Learn By ExampleA dictionary can contain another dictionary, which in turn can contain dictionaries themselves, and so on to arbitrary\u2026www.learnbyexample.org"}, {"url": "https://medium.com/tag/python?source=post_page-----44c55e75405c---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----44c55e75405c---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/python-dictionaries?source=post_page-----44c55e75405c---------------python_dictionaries-----------------", "anchor_text": "Python Dictionaries"}, {"url": "https://medium.com/tag/pandas?source=post_page-----44c55e75405c---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/data-science?source=post_page-----44c55e75405c---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F44c55e75405c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&user=Amanda+Iglesias+Moreno&userId=1bace2932c65&source=-----44c55e75405c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F44c55e75405c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&user=Amanda+Iglesias+Moreno&userId=1bace2932c65&source=-----44c55e75405c---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F44c55e75405c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----44c55e75405c--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F44c55e75405c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----44c55e75405c---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----44c55e75405c--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----44c55e75405c--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----44c55e75405c--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----44c55e75405c--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----44c55e75405c--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----44c55e75405c--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----44c55e75405c--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----44c55e75405c--------------------------------", "anchor_text": ""}, {"url": "https://amandaiglesiasmoreno.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://amandaiglesiasmoreno.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Amanda Iglesias Moreno"}, {"url": "https://amandaiglesiasmoreno.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "2.1K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F1bace2932c65&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&user=Amanda+Iglesias+Moreno&userId=1bace2932c65&source=post_page-1bace2932c65--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fbac71cd4d351&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2F15-things-you-should-know-about-dictionaries-in-python-44c55e75405c&newsletterV3=1bace2932c65&newsletterV3Id=bac71cd4d351&user=Amanda+Iglesias+Moreno&userId=1bace2932c65&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}