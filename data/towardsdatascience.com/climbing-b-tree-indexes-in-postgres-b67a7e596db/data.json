{"url": "https://towardsdatascience.com/climbing-b-tree-indexes-in-postgres-b67a7e596db", "time": 1683005420.971794, "path": "towardsdatascience.com/climbing-b-tree-indexes-in-postgres-b67a7e596db/", "webpage": {"metadata": {"title": "Climbing B-tree Indexes in Postgres | by GreekDataGuy | Towards Data Science", "h1": "Climbing B-tree Indexes in Postgres", "description": "Your query was slow so you decided to speed it up by adding an index. What type of index was it? Probably a B-tree. Postgres has a few index types but B-trees are by far the most common. They\u2019re good\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.postgresql.org/docs/9.1/indexes-types.html", "anchor_text": "a few index types", "paragraph_index": 1}, {"url": "https://en.wikipedia.org/wiki/Binary_tree", "anchor_text": "binary tree", "paragraph_index": 4}, {"url": "https://en.wikipedia.org/wiki/Computer_science", "anchor_text": "computer science", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Tree_data_structure", "anchor_text": "tree data structure", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Logarithmic_time", "anchor_text": "logarithmic time", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Binary_search_tree", "anchor_text": "binary search tree", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/B-tree#cite_note-Comer-2", "anchor_text": "[2]", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree", "anchor_text": "self-balancing binary search trees", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Database", "anchor_text": "databases", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/File_system", "anchor_text": "file systems", "paragraph_index": 5}, {"url": "https://www.csd.uoc.gr/~hy460/pdf/p650-lehman.pdf", "anchor_text": "this paper", "paragraph_index": 6}, {"url": "http://gmail.com", "anchor_text": "gmail.com", "paragraph_index": 35}], "all_paragraphs": ["Your query was slow so you decided to speed it up by adding an index. What type of index was it? Probably a B-tree.", "Postgres has a few index types but B-trees are by far the most common. They\u2019re good for sorting and matching; and once you understand what they look like under the hood, it\u2019s immediately apparent why.", "We\u2019re going to take a dive into the internals of B-tree\u2019s implementation in Postgres, then do some SQL examples to show their effect. I\u2019ve provided queries so you can run the same experiments yourself.", "This post assumes you already have a general idea what an index is and does. If not, the often provided abstraction is the glossary in a textbook. Rather than reading every line in the book to find a word/topic, you can look it up alphabetically in the glossary, then jump to the page it\u2019s on. We\u2019ll see shortly the reality is slightly more complicated.", "It\u2019s NOT a binary tree, which allows a max of 2 child nodes per parent and was designed for in-memory search.", "In computer science, a B-tree is a self-balancing tree data structure that maintains sorted data and allows searches, sequential access, insertions, and deletions in logarithmic time. The B-tree generalizes the binary search tree, allowing for nodes with more than two children.[2] Unlike other self-balancing binary search trees, the B-tree is well suited for storage systems that read and write relatively large blocks of data, such as discs. It is commonly used in databases and file systems.", "That\u2019s a pretty good non-technical introduction. For a really technical explanation, see this paper by Lehman and Yao, on which the Postgres implementation is based.", "B-trees are \u201cbalanced\u201d because the distance from the root to any leaf node is the same. A leaf node is a node without children. The root node is the node at the top.", "A node has keys. In our root node below, [10,15,20] are keys. Keys map to values in the database but also bound keys in child nodes.", "The first child node, [2, 9], has values less than 10, hence the pointer on the left side of 10.", "The 2nd child node, [12], has a value between 10 and 15, hence the pointer from there.", "The 3rd child node, [22] is greater than 20, hence the pointer on the right side of 20.", "Now if we wanted to look up the key, 12, we\u2019d compare 12 to values in the root node and see that it\u2019s between 10 and 15. So we\u2019d use the pointer between 10 and 15 to find the node containing 12.", "This is an abstraction over Postgres\u2019 implementation but you can already imagine why this is faster than iterating over every number in a table and checking if it equals 12.", "This is why B-trees can search, insert and delete in O(logN) time.", "B-trees also have a minimum and maximum number of keys per node. Nodes are joined and split on inserts and deletes to keep nodes in range.", "We\u2019re going to work through 3 examples where B-trees can have a huge impact: numbers, text and dates.", "Create a table for each datatype. Each table has 2 columns but we\u2019ll only index one of them.", "Let\u2019s generate 1M random integers between 1 and ~1M.", "We\u2019ll repeatedly run the below queries, record query time, then add an additional 1M additional records.", "What we see is a massive difference in query time in ordering the indexed vs non-indexed column.", "5 million records is small potatoes for Postgres but we can already see a huge difference in efficiency.", "Why the difference? Let\u2019s use the explain function in Postgres to dig into it.", "We see the non-indexed search using a sequential scan, while the indexed search using an index scan. Given the above discussed structure of a B-tree, it\u2019s easy to see why searching the index would be much faster than searching the table.", "Let\u2019s do the same comparison but with strings. Though this time we\u2019ll incrementally add 100k rows at a time.", "What do we see? The exact same pattern where the indexed search blows non-indexed search out of the water.", "Peeking at explain , we see the same cause.", "Let\u2019s do this one more time with dates. Again, we\u2019ll only generate 100k rows at a time.", "Query the dates and record query times.", "We can already guess what explain is going to show but let\u2019s take a look anyway.", "Once again, ordering rows via index scans is orders of magnitude faster than sequence scans.", "My aim was to give you a general sense of how indexes are structured so you can intuitively understand why they improve query times.", "Then we covered some examples where adding an index made a night-and-day difference.", "We only covered ordering rows, but it would be interesting to investigate query times and look at explain for other types of queries like where or exists.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Just a developer. Contact: greek.data.guy \u201cat\u201d gmail.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fb67a7e596db&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----b67a7e596db--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b67a7e596db--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://greekdataguy.medium.com/?source=post_page-----b67a7e596db--------------------------------", "anchor_text": ""}, {"url": "https://greekdataguy.medium.com/?source=post_page-----b67a7e596db--------------------------------", "anchor_text": "GreekDataGuy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd67bf018ae6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&user=GreekDataGuy&userId=d67bf018ae6d&source=post_page-d67bf018ae6d----b67a7e596db---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb67a7e596db&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb67a7e596db&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.postgresql.org/docs/9.1/indexes-types.html", "anchor_text": "a few index types"}, {"url": "https://en.wikipedia.org/wiki/Binary_tree", "anchor_text": "binary tree"}, {"url": "https://en.wikipedia.org/wiki/B-tree", "anchor_text": "Wikipedia"}, {"url": "https://en.wikipedia.org/wiki/Computer_science", "anchor_text": "computer science"}, {"url": "https://en.wikipedia.org/wiki/Tree_data_structure", "anchor_text": "tree data structure"}, {"url": "https://en.wikipedia.org/wiki/Logarithmic_time", "anchor_text": "logarithmic time"}, {"url": "https://en.wikipedia.org/wiki/Binary_search_tree", "anchor_text": "binary search tree"}, {"url": "https://en.wikipedia.org/wiki/B-tree#cite_note-Comer-2", "anchor_text": "[2]"}, {"url": "https://en.wikipedia.org/wiki/Self-balancing_binary_search_tree", "anchor_text": "self-balancing binary search trees"}, {"url": "https://en.wikipedia.org/wiki/Database", "anchor_text": "databases"}, {"url": "https://en.wikipedia.org/wiki/File_system", "anchor_text": "file systems"}, {"url": "https://www.csd.uoc.gr/~hy460/pdf/p650-lehman.pdf", "anchor_text": "this paper"}, {"url": "https://medium.com/tag/database?source=post_page-----b67a7e596db---------------database-----------------", "anchor_text": "Database"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----b67a7e596db---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/postgres?source=post_page-----b67a7e596db---------------postgres-----------------", "anchor_text": "Postgres"}, {"url": "https://medium.com/tag/data?source=post_page-----b67a7e596db---------------data-----------------", "anchor_text": "Data"}, {"url": "https://medium.com/tag/sql?source=post_page-----b67a7e596db---------------sql-----------------", "anchor_text": "Sql"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb67a7e596db&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&user=GreekDataGuy&userId=d67bf018ae6d&source=-----b67a7e596db---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fb67a7e596db&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&user=GreekDataGuy&userId=d67bf018ae6d&source=-----b67a7e596db---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fb67a7e596db&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----b67a7e596db--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fb67a7e596db&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----b67a7e596db---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----b67a7e596db--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----b67a7e596db--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----b67a7e596db--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----b67a7e596db--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----b67a7e596db--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----b67a7e596db--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----b67a7e596db--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----b67a7e596db--------------------------------", "anchor_text": ""}, {"url": "https://greekdataguy.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://greekdataguy.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "GreekDataGuy"}, {"url": "https://greekdataguy.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "9.97K Followers"}, {"url": "http://gmail.com", "anchor_text": "gmail.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd67bf018ae6d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&user=GreekDataGuy&userId=d67bf018ae6d&source=post_page-d67bf018ae6d--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F26b33036e2a7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fclimbing-b-tree-indexes-in-postgres-b67a7e596db&newsletterV3=d67bf018ae6d&newsletterV3Id=26b33036e2a7&user=GreekDataGuy&userId=d67bf018ae6d&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}