{"url": "https://towardsdatascience.com/packaging-in-python-tools-and-formats-743ead5f39ee", "time": 1683016113.12415, "path": "towardsdatascience.com/packaging-in-python-tools-and-formats-743ead5f39ee/", "webpage": {"metadata": {"title": "Packaging in Python: Tools and Formats | by Martin Thoma | Towards Data Science", "h1": "Packaging in Python: Tools and Formats", "description": "A virtual environment is an isolated Python environment. It has it\u2019s own installed site-packages which can be different from the systems site-packages. Don\u2019t worry, we will go into more detail later\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/pyenv/pyenv", "anchor_text": "Pyenv", "paragraph_index": 11}, {"url": "https://medium.com/python-in-plain-english/a-beginners-guide-to-python-development-on-windows-10-e9d80601f483", "anchor_text": "A Beginner\u2019s Guide to Python Development", "paragraph_index": 12}, {"url": "https://github.com/pyenv/pyenv", "anchor_text": "the official pyenv website", "paragraph_index": 12}, {"url": "https://www.python.org/dev/peps/pep-0440/#version-specifiers", "anchor_text": "version specifiers", "paragraph_index": 18}, {"url": "https://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files", "anchor_text": "setup.cfg", "paragraph_index": 21}, {"url": "https://pypi.org/project/twine/", "anchor_text": "twine", "paragraph_index": 23}, {"url": "https://docs.python.org/3/library/venv.html", "anchor_text": "venv module", "paragraph_index": 27}, {"url": "https://realpython.com/python-virtual-environments-a-primer/", "anchor_text": "Python Virtual Environments: A Primer", "paragraph_index": 29}, {"url": "https://github.com/pipxproject/pipx", "anchor_text": "pipx", "paragraph_index": 31}, {"url": "https://www.python.org/dev/peps/pep-0440/", "anchor_text": "PEP 440", "paragraph_index": 39}, {"url": "https://pypi.org/project/pip-tools/", "anchor_text": "pip-tools", "paragraph_index": 45}, {"url": "https://pypi.org/project/cryptography/", "anchor_text": "cryptography", "paragraph_index": 47}, {"url": "https://www.python.org/dev/peps/pep-0517/", "anchor_text": "PEP 517", "paragraph_index": 50}, {"url": "https://www.python.org/dev/peps/pep-0518", "anchor_text": "PEP 518", "paragraph_index": 50}, {"url": "https://pypi.org/project/virtualenv/", "anchor_text": "virtualenv", "paragraph_index": 54}, {"url": "https://docs.python.org/3/library/venv.html", "anchor_text": "venv", "paragraph_index": 54}, {"url": "https://pypi.org/project/pipenv/", "anchor_text": "Pipenv", "paragraph_index": 55}, {"url": "https://github.com/pypa/pipfile", "anchor_text": "two new files", "paragraph_index": 55}, {"url": "https://pypi.org/project/poetry/", "anchor_text": "Poetry", "paragraph_index": 56}, {"url": "https://frostming.com/2019/01-04/pipenv-poetry", "anchor_text": "detailed comparison between poetry and pipenv", "paragraph_index": 56}, {"url": "https://medium.com/u/8a7cdd475d09?source=post_page-----743ead5f39ee--------------------------------", "anchor_text": "Frost Ming", "paragraph_index": 56}, {"url": "https://www.python.org/dev/peps/pep-0621/", "anchor_text": "PEP 621", "paragraph_index": 59}, {"url": "https://www.python.org/dev/peps/pep-0631/", "anchor_text": "PEP 631", "paragraph_index": 59}, {"url": "https://github.com/python-poetry/poetry/issues/3332", "anchor_text": "maybe they change that", "paragraph_index": 59}, {"url": "https://en.wikipedia.org/wiki/Unix_philosophy", "anchor_text": "Unix philosophy", "paragraph_index": 60}, {"url": "https://pypi.org/project/hatch/", "anchor_text": "Hatch", "paragraph_index": 64}, {"url": "https://martinthoma.medium.com/membership", "anchor_text": "https://martinthoma.medium.com/membership", "paragraph_index": 69}], "all_paragraphs": ["A virtual environment is an isolated Python environment. It has it\u2019s own installed site-packages which can be different from the systems site-packages. Don\u2019t worry, we will go into more detail later.", "After reading this article, you will understand what the following tools are and which problems they solve: pip, pyenv, venv, virtualenv, pipx, pipenv, pip-tools, setup.py, requirements.txt, requirementst.in, Pipfile, Pipfile.lock, twine, poetry, flint, and hatch.", "For this article, you need to distinguish two types of (packaged) code:", "You can further distinguish those, e.g. libraries and frameworks. Or command line applications, applications with graphical user interfaces, services, and many more. But for this article, we only need to distinguish between libraries and applications.", "Please note that some applications also contain code that can be imported or some libraries have a part of the functionality shipped as an application. In those cases, you can either use them as a library (including their code in your project) or as an application (just executing them). You are in command.", "Python has pip as a default package manager. You use it like this:", "When you run it, you should see this message:", "In order to be able to show you both, the output and what I\u2019ve inserted, I start the line which contains the command I\u2019ve entered with $ :", "This $ is called the prompt. Within Python, the prompt is >>> :", "This command shows you where the package mpu was installed to. By default, this is the systems Python location. This means that all Python packages share the same set of installed libraries.", "We have Python 3.6 installed, but the application requires Python 3.8. We cannot upgrade our systems Python version, e.g. because we\u2019re missing administrator privileges or because other things would break.", "Pyenv allows you to install any Python version you want. You can also easily switch between Python environments with pyenv :", "For more information, read my article A Beginner\u2019s Guide to Python Development. For detailed installation instructions, go directly to the official pyenv website.", "You typically don\u2019t only use bare Python. As developers, we stand on the shoulders of giants \u2014 the whole ecosystem of freely available software. In the beginning of Python, people just copied files. A Python file, when imported, is also called a module. If we have multiple Python files in one folder with an __init__.py , they can import each other. This folder is then called a package. Packages can contain other packages \u2014 subfolders which also have an __init__.py and are then called sub-packages.", "Copying files and folders is inconvenient. If the author of that code makes an update, I might need to update dozens of files. I need to know that there is an update in the first place. I might need to install hundreds of dependencies as well. Doing that by copy-and-paste would be hell.", "We need a more convenient way to distribute the packages.", "A packaging system needs three core components:", "As mentioned, we need a way to specify metadata and dependencies. This is done with the setup.py file. It typically looks like this:", "There are many more version specifiers you can use, for example:", "In order to create the source distribution, we run", "I don\u2019t like the setup.py file so much, because it is code. For metadata, I prefer to use a configuration file. Setuptools allows to use a setup.cfg file. You still need a setup.py, but it can be reduced to:", "And then you have the setup.cfg file as follows. There is documentation about the setup.cfg format.", "You want to upload packages securely to PyPI. You need to authenticate and you want to be certain that nobody tampers with your package.", "Install twine via pip install twine and you can upload your distribution files:", "You want to install youtube-downloader which needs the library requests in version 1.2.3 and vimeo-downloader which needs the library requests in version 3.2.1 . Hence the library requests is a dependency of both applications. Both applications need to be executed with Python 3.8. That is a problem as both applications store requests in the same site-packages directory. Once you install one version, the other one is gone. You need two different environments to run those two applications.", "A Python environment is the python executable, pip, and the set of installed packages. Different environments are isolated from each other and thus don\u2019t influence each other.", "We solve this dependency conflict by creating a virtual environment. We call it virtual because they actually share the Python executable and other things like the shells' environment variables.", "Python has the venv module which happens to be executable as well. You can create and use a fresh virtual environment like this:", "The environment is called \u201cfresh\u201d because there is nothing in it. Everything you install after source-ing the activate script will be installed in this local directory. This means when you install youtube-downloader in one such virtual environment and vimeo-downloader in another, you can have both. You can go out of a virtual environment by executing deactivate .", "If you want more details, I recommend to read Python Virtual Environments: A Primer.", "You would still need to switch between the virtual environments all the time which is inconvenient.", "pipx automatically installs packages into their own virtual environment. It also automatically executes the applications within that environment \ud83d\ude0d", "Note: This only makes sense for applications! You need libraries within the same environment as your application. So don\u2019t ever install libraries with pipx. Install applications (and indirectly the libraries) with pipx.", "As an application developer, I want to be certain that my application keeps working. I want to be independent of potential breaking changes of third party software I use.", "For example, think about the youtube-downloader which needed requests in version 1.2.3. At some point, probably during development, that version of requests was likely the latest version. Then the development of the youtube-downloader was stopped, but requests kept changing.", "Give the exact version you want to install:", "However, this has a problem of its own if you do it in setup.py . You will force this version upon other packages in the same environment. Python is pretty messy here: Once another package installs one of your dependencies in another version in the same environment, it\u2019s simply overwritten. Your dependencies might still work, but you don\u2019t get the expected version.", "For applications, you can pin the dependencies like this in the setup.py and tell your users to use pipx to install them. This way you and your users can be happy \ud83d\udc95", "For libraries, you cannot do this. By definition, libraries are included by other code. Code that potentially includes a lot of libraries. If all of them pinned their dependencies, it would be very likely to get a dependency conflict. This makes library development hard if the developed library itself has several dependencies.", "It\u2019s common practice to NOT pin dependencies in the setup.py file, but instead create a flat text file with pinned dependencies. PEP 440 defined the format or requirements files in 2013. It\u2019s usually called requirements.txt or requirements-dev.txt and typically looks like this:", "You can also specify locations where the packages can be downloaded (e.g. not only the name but a git repository) according to PEP 440.", "Packages within a requirements.txt (including their dependencies) can be installed with", "Imagine you write code which depends on the packages foo and bar . Those two packages might themselves have dependencies as well. Those dependencies are called transitive dependencies of your code. They are indirect dependencies. The reason why you need to care is the following.", "Assume there are multiple versions of foo and bar published. foo and bar happened to both have exactly one dependency: fizz", "You need to figure out the transitive dependencies as well and tell pip exactly what to install. To do so, I start either with a setup.py or a requirements.in file. The requirements.in file contains what I know must be fulfilled \u2014 it\u2019s pretty similar to the setup.py file. In contrast to the setup.py file it is a flat text file.", "Then I use pip-compile from pip-tools to find the transitive dependencies. It will generate a requirements.txt file which looks like this:", "You can also add --generate-hashes if you want to be certain it\u2019s exactly the same.", "Packages like cryptography have code written in C. If you install the source distribution of cryptography, you need to be able to compile that code. You might not have a compile like gcc installed and compiling takes quite a bit of time.", "Package creators can also upload built distributions, e.g. as wheels files. This prevents you from having to compile stuff yourself. It is done like this:", "The Python ecosystem is very strongly attached to setuptools. No matter how good setuptools are, there will always be features people are missing. But we couldn\u2019t change the build system for quite a while.", "PEP 517 and PEP 518 specified thepyproject.toml file format. It looks like this:", "Yes, it\u2019s not much. It tells pip what is necessary to build your package. But it was a good step towards more flexibility.", "Other tools, like poetry and black, used this file for their configuration to the pyproject.toml , similar as flake8 , pytest , pylint and many more allow you to add configuration to the setup.cfg .", "The tools in this section are relatively wide-spread, but as of today, they don\u2019t really solve any issue that one of the tools from above doesn\u2019t solve. They might be more convenient to use than others.", "The 3rd party tool virtualenv existed before the core module venv. They are not completely identical, but for me, venv was always good enough. I\u2019m happy if somebody can show me a problem to which virtualenv (and not venv) is the solution \ud83d\ude42", "Pipenv is a tool for dependency management and packaging. It introduces two new files:", "Poetry is a tool for dependency management and packaging. It combines a lot of tools, but it\u2019s core functionality is identical to pipenv. The main difference is that it uses pyproject.toml and poetry.lock instead of Pipfile and Pipfile.lock . A detailed comparison between poetry and pipenv was written by Frost Ming.", "The projects poetry wraps or replaces are:", "It goes away from the de-facto standard setup.py / setup.cfg for specifying dependencies. Instead, poetry expects dependencies to be within it\u2019s configuration:", "I hope that they will also implement PEP 621 and PEP 631 which gives metadata and dependencies an official place under the [project] section. Let\u2019s see, maybe they change that.", "Some people like to have one tool which does everything. I rather go with the Unix philosophy:", "Make each program do one thing well. To do a new job, build afresh rather than complicate old programs by adding new \u201cfeatures\u201d.", "As poetry combines a lot of tools, it\u2019s also important what it doesn\u2019t do:", "I should also point out that poetry has a super nice CLI and a visually pleasing website.", "Hatch also aims to replace quite a lot of tools:", "I had a couple of errors when I tried hatch.", "Flit is a way to put Python packages and modules on PyPI. It is a 3rd party replacement for setuptools. In that sense, it\u2019s similar to setuptools + twine or a part of poetry.", "Conda is the package manager of Anaconda. It is way more powerful than pip and can build/install code of arbitrary languages. With the pyproject.toml , I wonder if conda will be necessary in future \ud83e\udd14", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I\u2019m a Software Engineer with over 10 years of Python experience (Backend/ML/AI). Support me via https://martinthoma.medium.com/membership"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F743ead5f39ee&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----743ead5f39ee--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----743ead5f39ee--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://martinthoma.medium.com/?source=post_page-----743ead5f39ee--------------------------------", "anchor_text": ""}, {"url": "https://martinthoma.medium.com/?source=post_page-----743ead5f39ee--------------------------------", "anchor_text": "Martin Thoma"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F287aa3cfe747&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&user=Martin+Thoma&userId=287aa3cfe747&source=post_page-287aa3cfe747----743ead5f39ee---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F743ead5f39ee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F743ead5f39ee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://pypi.org/project/click/", "anchor_text": "click"}, {"url": "https://pypi.org/project/awscli/", "anchor_text": "awscli"}, {"url": "https://pypi.org/project/jupyter/", "anchor_text": "Jupyter"}, {"url": "https://pypi.org/project/Flask/", "anchor_text": "Flask"}, {"url": "https://pypi.org/project/Django/", "anchor_text": "Django"}, {"url": "https://files.pythonhosted.org/packages/a6/3a/c4c04201c9cd8c5845f85915d644cb14b16200680e5fa424af01c411e140/mpu-0.23.1-py3-none-any.whl", "anchor_text": "https://files.pythonhosted.org/packages/a6/3a/c4c04201c9cd8c5845f85915d644cb14b16200680e5fa424af01c411e140/mpu-0.23.1-py3-none-any.whl"}, {"url": "https://files.pythonhosted.org/packages/a6/3a/c4c04201c9cd8c5845f85915d644cb14b16200680e5fa424af01c411e140/mpu-0.23.1-py3-none-any.whl", "anchor_text": "https://files.pythonhosted.org/packages/a6/3a/c4c04201c9cd8c5845f85915d644cb14b16200680e5fa424af01c411e140/mpu-0.23.1-py3-none-any.whl"}, {"url": "https://github.com/pyenv/pyenv", "anchor_text": "Pyenv"}, {"url": "https://medium.com/python-in-plain-english/a-beginners-guide-to-python-development-on-windows-10-e9d80601f483", "anchor_text": "A Beginner\u2019s Guide to Python Development"}, {"url": "https://github.com/pyenv/pyenv", "anchor_text": "the official pyenv website"}, {"url": "https://pypi.org/", "anchor_text": "pypi.org"}, {"url": "https://www.python.org/dev/peps/pep-0440/#version-specifiers", "anchor_text": "version specifiers"}, {"url": "https://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files", "anchor_text": "setup.cfg"}, {"url": "https://github.com/MartinThoma/mpu", "anchor_text": "https://github.com/MartinThoma/mpu"}, {"url": "https://github.com/MartinThoma/mpu", "anchor_text": "https://github.com/MartinThoma/mpu"}, {"url": "https://pypi.org/pypi?%3Aaction=list_classifiers", "anchor_text": "https://pypi.org/pypi?%3Aaction=list_classifiers"}, {"url": "https://pypi.org/project/twine/", "anchor_text": "twine"}, {"url": "https://docs.python.org/3/library/venv.html", "anchor_text": "venv module"}, {"url": "https://realpython.com/python-virtual-environments-a-primer/", "anchor_text": "Python Virtual Environments: A Primer"}, {"url": "https://github.com/pipxproject/pipx", "anchor_text": "pipx"}, {"url": "https://www.python.org/dev/peps/pep-0440/", "anchor_text": "PEP 440"}, {"url": "https://github.com/python-poetry/poetry/issues/2094", "anchor_text": "example discussion"}, {"url": "https://pypi.org/project/pip-tools/", "anchor_text": "pip-tools"}, {"url": "https://blog.codinghorror.com/the-works-on-my-machine-certification-program/", "anchor_text": "works on my machine"}, {"url": "https://towardsdatascience.com/static-code-analysis-for-python-bdce10b8d287", "anchor_text": "static code analysis post"}, {"url": "https://levelup.gitconnected.com/ci-pipelines-for-python-projects-9ac2830d2e38", "anchor_text": "CI pipeline"}, {"url": "https://pypi.org/project/cryptography/", "anchor_text": "cryptography"}, {"url": "https://pypi.org/project/numpy/#files", "anchor_text": "NumPy"}, {"url": "https://www.python.org/dev/peps/pep-0517/", "anchor_text": "PEP 517"}, {"url": "https://www.python.org/dev/peps/pep-0518", "anchor_text": "PEP 518"}, {"url": "https://unsplash.com/@giorgiotrovato?utm_source=medium&utm_medium=referral", "anchor_text": "Giorgio Trovato"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://pypi.org/project/virtualenv/", "anchor_text": "virtualenv"}, {"url": "https://docs.python.org/3/library/venv.html", "anchor_text": "venv"}, {"url": "https://virtualenvwrapper.readthedocs.io/en/latest/", "anchor_text": "virtualenvwrapper"}, {"url": "https://pypi.org/project/pipenv/", "anchor_text": "Pipenv"}, {"url": "https://github.com/pypa/pipfile", "anchor_text": "two new files"}, {"url": "https://pypi.org/project/poetry/", "anchor_text": "Poetry"}, {"url": "https://frostming.com/2019/01-04/pipenv-poetry", "anchor_text": "detailed comparison between poetry and pipenv"}, {"url": "https://medium.com/u/8a7cdd475d09?source=post_page-----743ead5f39ee--------------------------------", "anchor_text": "Frost Ming"}, {"url": "https://github.com/MartinThoma/cookiecutter-python-package", "anchor_text": "cookie-cutter"}, {"url": "https://github.com/python-poetry/poetry/issues/3332", "anchor_text": "issue"}, {"url": "https://pypi.org/project/bumpversion/", "anchor_text": "bumpversion"}, {"url": "https://www.python.org/dev/peps/pep-0621/", "anchor_text": "PEP 621"}, {"url": "https://www.python.org/dev/peps/pep-0631/", "anchor_text": "PEP 631"}, {"url": "https://github.com/python-poetry/poetry/issues/3332", "anchor_text": "maybe they change that"}, {"url": "https://en.wikipedia.org/wiki/Unix_philosophy", "anchor_text": "Unix philosophy"}, {"url": "https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support", "anchor_text": "pyproject.toml"}, {"url": "https://github.com/MartinThoma/cookiecutter-python-package", "anchor_text": "typical Python projects"}, {"url": "https://github.com/MartinThoma/cookiecutter-flake8-plugin", "anchor_text": "Flake8 plugins"}, {"url": "https://pypi.org/project/hatch/", "anchor_text": "Hatch"}, {"url": "https://github.com/MartinThoma/cookiecutter-python-package", "anchor_text": "cookie-cutter"}, {"url": "https://pypi.org/project/bumpversion/", "anchor_text": "bumpversion"}, {"url": "https://medium.com/tag/programming?source=post_page-----743ead5f39ee---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/software-development?source=post_page-----743ead5f39ee---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----743ead5f39ee---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/tag/python?source=post_page-----743ead5f39ee---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/packaging?source=post_page-----743ead5f39ee---------------packaging-----------------", "anchor_text": "Packaging"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F743ead5f39ee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&user=Martin+Thoma&userId=287aa3cfe747&source=-----743ead5f39ee---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F743ead5f39ee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&user=Martin+Thoma&userId=287aa3cfe747&source=-----743ead5f39ee---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F743ead5f39ee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----743ead5f39ee--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F743ead5f39ee&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----743ead5f39ee---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----743ead5f39ee--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----743ead5f39ee--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----743ead5f39ee--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----743ead5f39ee--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----743ead5f39ee--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----743ead5f39ee--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----743ead5f39ee--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----743ead5f39ee--------------------------------", "anchor_text": ""}, {"url": "https://martinthoma.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://martinthoma.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Martin Thoma"}, {"url": "https://martinthoma.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "6.2K Followers"}, {"url": "https://martinthoma.medium.com/membership", "anchor_text": "https://martinthoma.medium.com/membership"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F287aa3cfe747&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&user=Martin+Thoma&userId=287aa3cfe747&source=post_page-287aa3cfe747--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F7f2b4a3f3c8f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fpackaging-in-python-tools-and-formats-743ead5f39ee&newsletterV3=287aa3cfe747&newsletterV3Id=7f2b4a3f3c8f&user=Martin+Thoma&userId=287aa3cfe747&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}