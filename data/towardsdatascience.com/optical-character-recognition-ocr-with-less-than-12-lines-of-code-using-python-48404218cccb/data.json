{"url": "https://towardsdatascience.com/optical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb", "time": 1683005567.116975, "path": "towardsdatascience.com/optical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb/", "webpage": {"metadata": {"title": "Optical Character Recognition (OCR) with less than 10 Lines of Code using Python | by Hucker Marius | Towards Data Science", "h1": "Optical Character Recognition (OCR) with less than 10 Lines of Code using Python", "description": "Some of the things which have to be considered are what kind of document or image you have, what its quality is and if the written content is handwritten or a computer font. (Obviously, a computer\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/@hucker.marius/understanding-the-basics-of-digital-image-processing-and-computer-vision-using-opencv-8bc0e67243c8", "anchor_text": "click here", "paragraph_index": 7}, {"url": "https://medium.com/@hucker.marius/understanding-the-basics-of-digital-image-processing-and-computer-vision-using-opencv-8bc0e67243c8", "anchor_text": "Understanding the Basics of Digital Image Processing and Computer Vision.", "paragraph_index": 11}, {"url": "https://medium.com/@hucker.marius/membership", "anchor_text": "https://medium.com/@hucker.marius/membership", "paragraph_index": 13}], "all_paragraphs": ["Let\u2019s say you have a document and want to extract its text instead of typing the whole thing by yourself.", "The few lines of code in this article will speed up the process and can really save time.", "Some of the things which have to be considered are what kind of document or image you have, what its quality is and if the written content is handwritten or a computer font. (Obviously, a computer font is more likely to achieve a higher accuracy than handwritten text.)", "The following points may also influence the accuracy:", "What you need are just a couple of installs, your document and you are good to go. Let\u2019s see what we need to import (make sure you pip install before):", "After installing, we need to load the image using openCV, which is installed under the name cv2. The image needs then to be converted to a binary image if it is not already an image consisting only of black and white pixels (For the case it is a binary image, you can skip the two lines of code that store in the gray-variable). The binary image is reached by grayscaling it first and executing then an arithmetic operation, which is, in this case, the bitwise-not operation. Grayscaling takes the three RGB values of an image and transforms it with the following formula", "to a single value which represents a shade of grey. Every pixel has then a value within the range of 0 to 255, with 255 being the brightest shade of grey (white) and 0 being the darkest shade of grey (black). Afterwards thresholding is usedfor deciding whether the value of the pixel is below or above a certain threshold. All pixels below are turned to a white pixel, all pixels above are turned to a black pixel and the result is a binary image. Since the binary image has a white background and black foreground, which are the letters or signs, the image needs to be inverted. This is done by the bitwise_not operation. Every pixel being 1 and thus white is turned to a black pixel and every pixel being 0 and thus black, is turned to a white pixel.", "To read more about greyscaling, RGB & digital image processing click here.", "Then we need to do a couple of morphological operations to remove noise around the characters. The two operations we use are erosion and dilation. First, we define a kernel of 2x1 pixel which slides over the image and executes the operation. Erosion is used to detect whether the kernel contains white foreground pixels or black background pixels. If the kernel is filled with white pixels the pixel in the original image will be considered 1 and hence, white. If the kernel contains black pixels the original pixel will be considered black. Consequently, the white lines are eroded. The morphological counterpart to erosion is dilation. If at least one pixel under the kernel is white, the contemplated pixel of the original image will be considered white. Consequently, the white areas are enlarged. In image preprocessing, erosion and dilation are often combined in the presented order to remove noise.", "The result is the following text. Please regard that tesseract has several detecting options, including varying languages. So if you want to change it to a different language than English, you have to adapt it slightly.", "Thanks for reading and I hope you learned something about OCR!I appreciate feedback.", "Also read Understanding the Basics of Digital Image Processing and Computer Vision.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data Scientist @Atruvia | Tech & Marketing Enthusiast from Karlsruhe, Germany https://medium.com/@hucker.marius/membership"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F48404218cccb&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----48404218cccb--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----48404218cccb--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@hucker.marius?source=post_page-----48404218cccb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@hucker.marius?source=post_page-----48404218cccb--------------------------------", "anchor_text": "Hucker Marius"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F979676b8abe8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&user=Hucker+Marius&userId=979676b8abe8&source=post_page-979676b8abe8----48404218cccb---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F48404218cccb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F48404218cccb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://medium.com/@hucker.marius/membership", "anchor_text": "Get started"}, {"url": "https://medium.com/@hucker.marius/understanding-the-basics-of-digital-image-processing-and-computer-vision-using-opencv-8bc0e67243c8", "anchor_text": "click here"}, {"url": "https://medium.com/@hucker.marius/understanding-the-basics-of-digital-image-processing-and-computer-vision-using-opencv-8bc0e67243c8", "anchor_text": "Understanding the Basics of Digital Image Processing and Computer Vision."}, {"url": "https://medium.com/subscribe/@hucker.marius", "anchor_text": "Stay tuned on new articles of Marius HuckerStay tuned on new articles of Marius Hucker By signing up, you will create a Medium account if you don't already have\u2026medium.com"}, {"url": "https://medium.com/tag/image-processing?source=post_page-----48404218cccb---------------image_processing-----------------", "anchor_text": "Image Processing"}, {"url": "https://medium.com/tag/opencv?source=post_page-----48404218cccb---------------opencv-----------------", "anchor_text": "Opencv"}, {"url": "https://medium.com/tag/python?source=post_page-----48404218cccb---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/ocr?source=post_page-----48404218cccb---------------ocr-----------------", "anchor_text": "Ocr"}, {"url": "https://medium.com/tag/text-recognition?source=post_page-----48404218cccb---------------text_recognition-----------------", "anchor_text": "Text Recognition"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F48404218cccb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&user=Hucker+Marius&userId=979676b8abe8&source=-----48404218cccb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F48404218cccb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&user=Hucker+Marius&userId=979676b8abe8&source=-----48404218cccb---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F48404218cccb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----48404218cccb--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F48404218cccb&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----48404218cccb---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----48404218cccb--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----48404218cccb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----48404218cccb--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----48404218cccb--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----48404218cccb--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----48404218cccb--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----48404218cccb--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----48404218cccb--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@hucker.marius?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@hucker.marius?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Hucker Marius"}, {"url": "https://medium.com/@hucker.marius/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.6K Followers"}, {"url": "https://medium.com/@hucker.marius/membership", "anchor_text": "https://medium.com/@hucker.marius/membership"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F979676b8abe8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&user=Hucker+Marius&userId=979676b8abe8&source=post_page-979676b8abe8--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fa76517c2b81d&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Foptical-character-recognition-ocr-with-less-than-12-lines-of-code-using-python-48404218cccb&newsletterV3=979676b8abe8&newsletterV3Id=a76517c2b81d&user=Hucker+Marius&userId=979676b8abe8&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}