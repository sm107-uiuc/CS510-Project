{"url": "https://towardsdatascience.com/distributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30", "time": 1683013015.157115, "path": "towardsdatascience.com/distributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30/", "webpage": {"metadata": {"title": "Distributed data pipelines made easy with AWS EKS and Prefect | by Anna Geller | Towards Data Science", "h1": "Distributed data pipelines made easy with AWS EKS and Prefect", "description": "Building distributed systems for ETL & ML data pipelines is hard. If you tried implementing one yourself, you might have experienced that tying together a workflow orchestration solution with\u2026"}, "outgoing_paragraph_urls": [{"url": "https://docs.prefect.io/", "anchor_text": "docs", "paragraph_index": 3}, {"url": "https://aws.amazon.com/de/blogs/aws/amazon-eks-on-aws-fargate-now-generally-available/", "anchor_text": "EKS", "paragraph_index": 4}, {"url": "https://medium.com/the-prefect-blog/seamless-move-from-local-to-aws-kubernetes-cluster-with-prefect-f263a4573c56", "anchor_text": "this blog post", "paragraph_index": 10}, {"url": "https://www.youtube.com/watch?v=m-3tMXmWWQw", "anchor_text": "this video", "paragraph_index": 12}, {"url": "https://www.notion.so/Distributed-data-pipelines-made-easy-with-AWS-and-Prefect-82c31104b9bd4009af527f3392fbb2fb", "anchor_text": "AWS CLI", "paragraph_index": 13}, {"url": "https://docs.aws.amazon.com/eks/latest/userguide/getting-started-eksctl.html", "anchor_text": "AWS docs", "paragraph_index": 13}, {"url": "https://cloud.prefect.io/", "anchor_text": "https://cloud.prefect.io/", "paragraph_index": 25}, {"url": "https://docs.prefect.io/core/concepts/tasks.html#overview", "anchor_text": "Prefect Docs", "paragraph_index": 41}, {"url": "https://docs.prefect.io/orchestration/execution/storage_options.html#non-docker-storage-for-containerized-environments", "anchor_text": "several options", "paragraph_index": 47}, {"url": "https://distributed.dask.org/en/latest/", "anchor_text": "Dask Distributed", "paragraph_index": 59}, {"url": "https://docs.prefect.io/core/advanced_tutorials/dask-cluster.html", "anchor_text": "Prefect Docs", "paragraph_index": 60}, {"url": "http://www.annageller.com", "anchor_text": "www.annageller.com", "paragraph_index": 73}, {"url": "https://annageller.medium.com/subscribe", "anchor_text": "https://annageller.medium.com/subscribe", "paragraph_index": 73}], "all_paragraphs": ["Building distributed systems for ETL & ML data pipelines is hard. If you tried implementing one yourself, you might have experienced that tying together a workflow orchestration solution with distributed multi-node compute clusters such as Spark or Dask may prove difficult to properly set up and manage. In this article, you\u2019ll learn how to obtain a highly available, scalable, distributed system that will make the orchestration of your data pipelines for ETL & ML much more enjoyable and will free up your time to work with data and generate value out of it rather than spend time on maintaining clusters.", "The entire setup is, to a large extent, automated by AWS and Prefect. Plus, it will cost you almost nothing in the beginning. Why? Because we\u2019ll use a workflow orchestration system with a serverless Kubernetes cluster as your distributed, fault-tolerant, highly available, self-healing & automatically scalable execution layer.", "All that you need to do is:", "Note: this article uses code for Prefect 1, which is deprecated. Check the docs for the most recent version.", "In December 2019, AWS launched a new Fargate feature which, to many, was considered a game-changer \u2014 they introduced an option to use AWS EKS on ECS Fargate, which is a way of saying: AWS made the Fargate service an orchestrator not only for the ECS but also for the EKS. Up to that point, AWS Fargate was a serverless way of running containers only on AWS ECS.", "EKS and Fargate make it straightforward to run Kubernetes-based applications on AWS by removing the need to provision and manage infrastructure for pods.", "What does it mean for you? You can now have a serverless Kubernetes cluster on EKS, which is only charging for running pods rather than their underlying EC2 instances. It also means, among other benefits:", "All that you need to do is to write YAML files for your deployments and interact with the EKS via kubectl. In short: your only task now is to write your ETL & ML code that adds value to your business, and AWS takes care of the Ops, i.e., operating, maintaining, and scaling your Kubernetes cluster.", "Considering that we are charged only for the actual vCPU and memory of running pods, this provides a great foundation for a modern data platform.", "One possible disadvantage of using almost any serverless option is the issue of cold start when the container orchestration system needs to first allocate and prepare the compute resources (a.o. pulling the latest version of the image from the docker registry to the allocated worker node and building the image) which may add some additional latency before the container (or your K8s pod) will turn into a running state.", "If your data workloads require a very low level of latency, you may opt for the AWS EKS cluster with the traditional data plane and follow the instructions from this blog post to set up a non-serverless cluster on AWS EKS and connect it to your Prefect Cloud environment.", "However, you can have both! AWS allows you to mix the two:", "As you can see, AWS designed EKS on Fargate with a lot of foresight which allows you to mix the serverless and non-serverless options to save your time, money, and maintenance efforts. You can find out more about that in this video in which AWS introduced the service.", "You need to have an AWS account with either admin access or at least a user with IAM permissions for creating ECR, EKS and ECS resources. Then, you must have AWS CLI configured for this account and eksctl installed, as described in this AWS docs.", "Kubernetes on AWS works well with AWS ECR, which is a registry for your Docker images. To authenticate your terminal with your ECR account, run:", "If you get Login Succeeded message, you can create your ECR repositories for your data pipelines. We will create two data pipelines: dask-k8 and basic-etl-prefect-flow \u2014 use the same names to follow this walkthrough, but in general, it\u2019s easiest to give your ECR repository the same name as your Prefect flow to avoid confusion.", "Then, all you need to do is to run the following command, which will deploy Kubernetes control plane and Fargate Profile in your VPC:", "I picked the name fargate-eks for the cluster, but feel free to change it. The --fargate flag ensures that we create a new Fargate profile for use with this cluster. EKS allows you to create a custom Fargate profile if needed.", "The provision of all resources may take several minutes. When finished, you should see output similar to this one:", "Then, if you check your context:", "You should get output similar to this one:", "This way you can see that you are connected to a serverless Kubernetes cluster running on AWS Fargate! To prove it further, run:", "In the output, you should see at least 1 Fargate node waiting for your pod deployments.", "Note: those nodes are running inside of your VPC but they are not visible within your EC2 dashboard. You cannot SSH to those nodes either, as they are fully managed and deployed by Fargate in a serverless fashion.", "The advantage of combining this AWS EKS cluster with Prefect is that the entire Kubernetes pod deployment and scheduling is abstracted away from you by Prefect. This means that you don\u2019t even need to know much about Kubernetes in order to derive value from it. In the next section, we will connect this cluster to our Prefect Cloud account and start building distributed ETL & ML data pipelines.", "Let\u2019s first sign up for a free Developer account on https://cloud.prefect.io/.", "At first, you will be welcomed by a clean UI showing you your flows, agents, and the general overview of the recent flow runs and the next scheduled jobs. The flows themselves can be organized into several projects. When you start building your data pipelines, this main dashboard lets you quickly identify the current status of all your data pipelines.", "You can see that I currently have a Fargate agent ready to deploy the flows on AWS ECS. For now, we\u2019ll focus only on AWS EKS.", "Let\u2019s continue with the setup and install prefect on your machine. The following command will install Prefect with AWS and Kubernetes extras (instead of [kubernetes,aws] you could use [all_extras] if you want to install all Prefect extensions to external systems):", "Now to make sure that you use Prefect Cloud and not the open-source version Prefect Core, switch the context to Cloud:", "After you register for a free account, you need to create a Personal Access Token to authenticate your local terminal with Prefect Cloud. This will allow to register your flows (i.e. your ETL & ML data pipelines) to the Prefect Cloud directly from your computer. Go to the sidebar: User \u2192 Personal Access Token \u2192 + CREATE TOKEN button.", "Choose some meaningful name ex. MyTokenToRegisterFlows.", "Then copy the token and within your terminal run the following commands:", "Now you can register your flows to be orchestrated from Prefect Cloud!", "The last part is to create a RunnerToken for your Kubernetes Agent and to register the agent. Go to the sidebar: Team \u2192 API Tokens \u2192 + CREATE TOKEN button.", "Alternatively, you could do the same from your terminal:", "It\u2019s very important to select the RUNNER scope, otherwise your agent will not be able to execute the flows on your behalf.", "Click on CREATE and copy the generated API token.", "Now we are reaching the most exciting part: with the command below, you will be able to set your serverless AWS Kubernetes cluster as your execution layer (i.e. agent) for your Prefect data pipelines:", "Now you should be able to see a new Kubernetes Agent in your Prefect Cloud account:", "We can also see a new pod corresponding to the Prefect agent:", "Now everything is set up and we can start creating our flows. Prefect Docs include a variety of useful tutorials that will quickly show you how to adapt your Python ETL & ML code to make it run on Prefect. In a nutshell, you just need to decorate your Python functions with @task decorator, add the task and flow imports and create a flow object:", "Note: adding log_stdout=True ensures that the printed output will appear in the Prefect Cloud flow logs.", "Now we can create a project to organize our flows either from the UI or by using the terminal:", "If we now run this script, we should get a link to the Prefect Cloud UI from which we can trigger or schedule the flow:", "When we trigger the flow, we will see that it stays in the scheduled state and doesn\u2019t run.", "This is because to run your flows on the AWS EKS cluster, your flow must include information on where your code is stored.", "There are several options for how you can store your code: EKS could pull it from ECR, S3, or Github.", "The easiest option is to dockerize your flow and push the image to ECR. Luckily, Prefect team made it really easy \u2014 we only need to:", "If you remember the AWS Setup section, we already created two ECR respositories: dask-k8 and basic-etl-prefect-flow. Therefore, we only need to add storage=Docker() argument to our flow code so that it can be executed by our serverless Kubernetes Agent:", "Some important notes to the code above:", "Last note: the extra argument python_dependencies=[\"pandas==1.1.0\"] allows to define a list of Python packages that needs to be installed within the container. If you need a more finegrained control over your image, you can provide a path to a custom Dockerfile, ex: dockerfile='/Users/anna/my_flows/aws/Dockerfile'", "We can now mark the previous flow run as Finished or Failed:", "Finally, we can register a new version of the flow by simply rerunning the modified script, as shown in the second Gist:", "If we visit the link from the output, we can see that a Version 2 has been created and if we run it, we can see that the flow will transfer to the state Submitted for execution (yellow), then Runnning (blue), and finally All reference tasks succeeded (green):", "We can also inspect the pods by using kubectl:", "To summarize what we have done so far:", "If you came that far, congratulations! \ud83d\udc4f\ud83c\udffb", "In the next section, we will create a second flow that will make use of a distributed Dask cluster.", "Prefect Cloud works great with Dask Distributed. In order to run your Python code on Dask in a distributed fashion, you would typically have to deploy a Dask cluster with several worker nodes and maintain it. Prefect provides a great abstraction DaskKubernetesEnvironment which:", "Here is an example flow based on the Prefect Docs that you can use to test your Dask setup. I saved this flow as dask-k8.py and provided the same name dask-k8 as the flow name and as the name of ECR repository:", "We now register the flow and trigger it from the UI again:", "Now we can observe the pods that are being created to distribute work across Dask workers:", "We can now see several pods related to Dask. The UI shows the current progress of all tasks, running in parallel, and the final runtime:", "If we analyze the logs, we can see that:", "This means that it took around 3 minutes until the flow was picked up by the Kubernetes agent and the Dask cluster was provisioned on our serverless AWS EKS cluster together with pulling all necessary images. After that, the flow needed 4 minutes to successfully run the flow.", "If the latency related to a Dask cluster being created on-demand is not acceptable by your workloads, you can create and maintain your own Dask cluster and adapt the code as follows:", "This way, you would use Executor rather than Environment abstraction. Also, you would have to adapt 255.255.255.255 to your Dask scheduler address and change port 8786 accordingly, if needed.", "Before we wrap up, make sure to delete the AWS EKS cluster and the ECR repositories to avoid any charges:", "In this article, we used AWS EKS on Fargate to create a serverless Kubernetes cluster on AWS. We connected it in a secure way as our execution layer with Prefect Cloud. Then, we dockerized our Prefect flows and pushed the images to ECR by using DockerStorage abstraction. Finally, we deployed both a simple data pipeline running within a single pod, as well as distributed Dask flow, allowing for high-level parallelism of your ETL & ML code.", "Along the way, we identified the differences, as well as the pros and cons of running data pipelines on already available resources that we need to maintain vs. running your containerized flows in a serverless way.", "Hopefully, this setup will make it easier to start orchestrating your ETL & Data Science workflows. Regardless of whether you are a start-up, a large enterprise or a student running code for a thesis, the combination of Prefect & AWS EKS on Fargate allows you to easily move your data projects to production.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "DevRel, Data Professional, Cloud & .py fan. www.annageller.com. Get my articles via email: https://annageller.medium.com/subscribe"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F106984923b30&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----106984923b30--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----106984923b30--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://annageller.medium.com/?source=post_page-----106984923b30--------------------------------", "anchor_text": ""}, {"url": "https://annageller.medium.com/?source=post_page-----106984923b30--------------------------------", "anchor_text": "Anna Geller"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5bdf5a3385cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&user=Anna+Geller&userId=5bdf5a3385cd&source=post_page-5bdf5a3385cd----106984923b30---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F106984923b30&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F106984923b30&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@lukechesser?utm_source=medium&utm_medium=referral", "anchor_text": "Luke Chesser"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://aws.amazon.com/de/premiumsupport/knowledge-center/create-and-activate-aws-account/", "anchor_text": "AWS account"}, {"url": "https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html", "anchor_text": "IAM user"}, {"url": "https://aws.amazon.com/about-aws/whats-new/2020/01/amazon-eks-announces-price-reduction/?nc1=h_ls", "anchor_text": "AWS halved the price"}, {"url": "https://cloud.prefect.io/", "anchor_text": "Prefect Cloud account"}, {"url": "https://docs.prefect.io/", "anchor_text": "docs"}, {"url": "https://aws.amazon.com/de/blogs/aws/amazon-eks-on-aws-fargate-now-generally-available/", "anchor_text": "EKS"}, {"url": "https://medium.com/the-prefect-blog/seamless-move-from-local-to-aws-kubernetes-cluster-with-prefect-f263a4573c56", "anchor_text": "this blog post"}, {"url": "https://www.youtube.com/watch?v=m-3tMXmWWQw", "anchor_text": "this video"}, {"url": "https://www.notion.so/Distributed-data-pipelines-made-easy-with-AWS-and-Prefect-82c31104b9bd4009af527f3392fbb2fb", "anchor_text": "AWS CLI"}, {"url": "https://docs.aws.amazon.com/eks/latest/userguide/getting-started-eksctl.html", "anchor_text": "AWS docs"}, {"url": "https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.RegionsAndAvailabilityZones.html", "anchor_text": "more"}, {"url": "https://cloud.prefect.io/", "anchor_text": "https://cloud.prefect.io/"}, {"url": "https://docs.prefect.io/core/concepts/tasks.html#overview", "anchor_text": "Prefect Docs"}, {"url": "https://cloud.prefect.io/anna/flow/888046e6-f366-466a-b9b5-4113cd437e4d", "anchor_text": "https://cloud.prefect.io/anna/flow/888046e6-f366-466a-b9b5-4113cd437e4d"}, {"url": "https://docs.prefect.io/orchestration/execution/storage_options.html#non-docker-storage-for-containerized-environments", "anchor_text": "several options"}, {"url": "https://hub.docker.com/r/prefecthq/prefect", "anchor_text": "Prefect Docker image"}, {"url": "https://distributed.dask.org/en/latest/", "anchor_text": "Dask Distributed"}, {"url": "https://docs.prefect.io/core/advanced_tutorials/dask-cluster.html", "anchor_text": "Prefect Docs"}, {"url": "https://medium.com/tag/aws?source=post_page-----106984923b30---------------aws-----------------", "anchor_text": "AWS"}, {"url": "https://medium.com/tag/serverless?source=post_page-----106984923b30---------------serverless-----------------", "anchor_text": "Serverless"}, {"url": "https://medium.com/tag/kubernetes?source=post_page-----106984923b30---------------kubernetes-----------------", "anchor_text": "Kubernetes"}, {"url": "https://medium.com/tag/docker?source=post_page-----106984923b30---------------docker-----------------", "anchor_text": "Docker"}, {"url": "https://medium.com/tag/data-engineering?source=post_page-----106984923b30---------------data_engineering-----------------", "anchor_text": "Data Engineering"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F106984923b30&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&user=Anna+Geller&userId=5bdf5a3385cd&source=-----106984923b30---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F106984923b30&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&user=Anna+Geller&userId=5bdf5a3385cd&source=-----106984923b30---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F106984923b30&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----106984923b30--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F106984923b30&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----106984923b30---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----106984923b30--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----106984923b30--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----106984923b30--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----106984923b30--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----106984923b30--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----106984923b30--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----106984923b30--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----106984923b30--------------------------------", "anchor_text": ""}, {"url": "https://annageller.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://annageller.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Anna Geller"}, {"url": "https://annageller.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "5.4K Followers"}, {"url": "http://www.annageller.com", "anchor_text": "www.annageller.com"}, {"url": "https://annageller.medium.com/subscribe", "anchor_text": "https://annageller.medium.com/subscribe"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5bdf5a3385cd&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&user=Anna+Geller&userId=5bdf5a3385cd&source=post_page-5bdf5a3385cd--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F908ff40c4340&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdistributed-data-pipelines-made-easy-with-aws-eks-and-prefect-106984923b30&newsletterV3=5bdf5a3385cd&newsletterV3Id=908ff40c4340&user=Anna+Geller&userId=5bdf5a3385cd&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}