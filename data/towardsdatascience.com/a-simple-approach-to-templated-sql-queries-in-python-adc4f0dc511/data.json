{"url": "https://towardsdatascience.com/a-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511", "time": 1682995715.8135512, "path": "towardsdatascience.com/a-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511/", "webpage": {"metadata": {"title": "A Simple Approach To Templated SQL Queries In Python | by Sergei Izrailev | Towards Data Science", "h1": "A Simple Approach To Templated SQL Queries In Python", "description": "There are numerous situations in which one would want to insert parameters in a SQL query, and there are many ways to implement templated SQL queries in python. Without going into comparing different\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/hashedin/jinjasql", "anchor_text": "JinjaSql", "paragraph_index": 0}, {"url": "http://jinja.pocoo.org/", "anchor_text": "Jinja2", "paragraph_index": 0}, {"url": "https://github.com/hashedin/jinjasql", "anchor_text": "JinjaSql docs", "paragraph_index": 9}, {"url": "https://towardsdatascience.com/advanced-sql-templates-in-python-with-jinjasql-b996eadd761d", "anchor_text": "Advanced SQL Templates In Python with JinjaSql", "paragraph_index": 25}, {"url": "https://github.com/sizrailev/life-around-data-code/blob/master/pylad/sql_templates_base.py", "anchor_text": "code in this post", "paragraph_index": 26}, {"url": "https://opensource.org/licenses/MIT", "anchor_text": "MIT License", "paragraph_index": 26}, {"url": "http://www.lifearounddata.com/templated-sql-queries-in-python/", "anchor_text": "Life Around Data", "paragraph_index": 26}], "all_paragraphs": ["There are numerous situations in which one would want to insert parameters in a SQL query, and there are many ways to implement templated SQL queries in python. Without going into comparing different approaches, this post explains a simple and effective method for parameterizing SQL using JinjaSql. Besides many powerful features of Jinja2, such as conditional statements and loops, JinjaSql offers a clean and straightforward way to parameterize not only the values substituted into the where and in clauses, but also SQL statements themselves, including parameterizing table and column names and composing queries by combining whole code blocks.", "Let\u2019s assume we have a table transactions holding records about financial transactions. The columns in this table could be transaction_id, user_id, transaction_date, and amount. To compute the number of transactions and the total amount for a given user on a given day, a query directly to the database may look something like", "Here, we assume that the database will automatically convert the YYYY-MM-DD format of the string representation of the date into a proper date type.", "If we want to run the query above for an arbitrary user and date, we need to parameterize the user_id and the transaction_date values. In JinjaSql, the corresponding template would simply become", "Here, the values were replaced by placeholders with python variable names enclosed in double curly braces {{ }}. Note that the variable names uid and tdate were picked only to demonstrate that they are variable names and don't have anything to do with the column names themselves. A more readable version of the same template stored in a python variable is", "Next, we need to set the parameters for the query.", "Now, generating a SQL query from this template is straightforward.", "If we print query and bind_params, we find that the former is a parameterized string, and the latter is an OrderedDict of parameters:", "Many database connections have an option to pass bind_params as an argument to the method executing the SQL query on a connection. For a data scientist, it may be natural to get results of the query in a Pandas data frame. Once we have a connection conn, it is as easy as running read_sql:", "See the JinjaSql docs for other examples.", "It is often desired to fully expand the query with all parameters before running it. For example, logging the full query is invaluable for debugging batch processes because one can copy-paste the query from the logs directly into an interactive SQL interface. It is tempting to substitute bind_params into the query using python built-in string substitution. However, we quickly find that string parameters need to be quoted to result in proper SQL. For example, in the template above, the date value must be enclosed in single quotes.", "To deal with this, we need a helper function to correctly quote parameters that are strings. We detect whether a parameter is a string, by calling", "This works for both python 3 and 2.7. The string parameters are converted to the str type, single quotes in the names are escaped by another single quote, and finally, the whole value is enclosed in single quotes.", "Finally, to convert the template to proper SQL, we loop over bind_params, quote the strings, and then perform string substitution.", "Now we can easily get the final query that we can log or run interactively:", "Putting it all together, another helper function wraps the JinjaSql calls and simply takes the template and a dict of parameters, and returns the full SQL.", "Computing statistics on the values stored in a particular database column is handy both when first exploring the data and for data validation in production. Since we only want to demonstrate some features of the templates, for simplicity, let\u2019s just work with integer columns, such as the column user_id in the table transactions above. For integer columns, we are interested in the number of unique values, min and max values, and the number of nulls. Some columns may have a default of say, -1, the drawbacks of which are beyond the scope of this post, however, we do want to capture that by reporting the number of default values.", "Consider the following template and function. The function takes the table name, the column name and the default value as arguments, and returns the SQL for computing the statistics.", "This function is straightforward and very powerful because it applies to any column in any table. Note the {% if default_value %} syntax in the template. If the default value that is passed to the function is None, the SQL returns zero in the num_default field.", "The function and template above will also work with strings, dates, and other data types if the default_value is set to None. However, to handle different data types more intelligently, it is necessary to extend the function to also take the data type as an argument and build the logic specific to different data types. For example, one might want to know the min and max of the string length instead of the min and max of the value itself.", "Let\u2019s look at the output for the transactions.user_id column.", "Note that blank lines appear in place of the {% %} clauses and could be removed.", "With the helper functions above, creating and running templated SQL queries in python is very easy. Because the details of parameter substitution are hidden, one can focus on building the template and the set of parameters and then call a single function to get the final SQL.", "One important caveat is the risk of code injection. For batch processes, it should not be an issue, but using the sqlsafe construct in web applications could be dangerous. The sqlsafe keyword indicates that the user (you) is confident that no code injection is possible and takes responsibility for simply putting whatever string is passed in the parameters directly into the query.", "On the other hand, the ability to put an arbitrary string in the query allows one to pass whole code blocks into a template. For example, instead of passing table_name='transactions' above, one could pass '(select * from transactions where transaction_date = 2018-03-01) t', and the query would still work.", "To explore even more powerful features of SQL templates, also see a tutorial on Advanced SQL Templates In Python with JinjaSql.", "The code in this post is licensed under the MIT License. This post first appeared on the Life Around Data blog.", "Photo and image by Sergei Izrailev", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "A former quant/trader and Pharma drug discovery scientist, I now tackle challenging data science and engineering problems in digital advertising."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fadc4f0dc511&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----adc4f0dc511--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----adc4f0dc511--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@sergei.izrailev?source=post_page-----adc4f0dc511--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sergei.izrailev?source=post_page-----adc4f0dc511--------------------------------", "anchor_text": "Sergei Izrailev"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F17fad401feaa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&user=Sergei+Izrailev&userId=17fad401feaa&source=post_page-17fad401feaa----adc4f0dc511---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fadc4f0dc511&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fadc4f0dc511&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/hashedin/jinjasql", "anchor_text": "JinjaSql"}, {"url": "http://jinja.pocoo.org/", "anchor_text": "Jinja2"}, {"url": "https://github.com/hashedin/jinjasql", "anchor_text": "JinjaSql docs"}, {"url": "https://towardsdatascience.com/advanced-sql-templates-in-python-with-jinjasql-b996eadd761d", "anchor_text": "Advanced SQL Templates In Python with JinjaSql"}, {"url": "https://github.com/sizrailev/life-around-data-code/blob/master/pylad/sql_templates_base.py", "anchor_text": "code in this post"}, {"url": "https://opensource.org/licenses/MIT", "anchor_text": "MIT License"}, {"url": "http://www.lifearounddata.com/templated-sql-queries-in-python/", "anchor_text": "Life Around Data"}, {"url": "https://medium.com/tag/sql?source=post_page-----adc4f0dc511---------------sql-----------------", "anchor_text": "Sql"}, {"url": "https://medium.com/tag/data-science?source=post_page-----adc4f0dc511---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/analytics?source=post_page-----adc4f0dc511---------------analytics-----------------", "anchor_text": "Analytics"}, {"url": "https://medium.com/tag/python?source=post_page-----adc4f0dc511---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fadc4f0dc511&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&user=Sergei+Izrailev&userId=17fad401feaa&source=-----adc4f0dc511---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fadc4f0dc511&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&user=Sergei+Izrailev&userId=17fad401feaa&source=-----adc4f0dc511---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fadc4f0dc511&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----adc4f0dc511--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fadc4f0dc511&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----adc4f0dc511---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----adc4f0dc511--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----adc4f0dc511--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----adc4f0dc511--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----adc4f0dc511--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----adc4f0dc511--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----adc4f0dc511--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----adc4f0dc511--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----adc4f0dc511--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sergei.izrailev?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@sergei.izrailev?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Sergei Izrailev"}, {"url": "https://medium.com/@sergei.izrailev/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "145 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F17fad401feaa&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&user=Sergei+Izrailev&userId=17fad401feaa&source=post_page-17fad401feaa--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F7a1ece580bc0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-simple-approach-to-templated-sql-queries-in-python-adc4f0dc511&newsletterV3=17fad401feaa&newsletterV3Id=7a1ece580bc0&user=Sergei+Izrailev&userId=17fad401feaa&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}