{"url": "https://towardsdatascience.com/reinforcement-learning-solving-blackjack-5e31a7fb371f", "time": 1682996680.699539, "path": "towardsdatascience.com/reinforcement-learning-solving-blackjack-5e31a7fb371f/", "webpage": {"metadata": {"title": "Reinforcement Learning \u2014 Solving Blackjack | by Jeremy Zhang | Towards Data Science", "h1": "Reinforcement Learning \u2014 Solving Blackjack", "description": "We have talked about how to use Monte Carlo methods to evaluate a policy in reinforcement learning here, where we took the example of blackjack and set a fixed policy, and by repetitively sampling\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/monte-carlo-methods-estimate-blackjack-policy-fcc89df7f029", "anchor_text": "here", "paragraph_index": 0}, {"url": "https://towardsdatascience.com/reinforcement-learning-implement-tictactoe-189582bea542", "anchor_text": "tic-tac-toe implementation", "paragraph_index": 1}, {"url": "https://en.wikipedia.org/wiki/Blackjack", "anchor_text": "blackjack", "paragraph_index": 2}, {"url": "https://github.com/MJeremy2017/RL/blob/master/BlackJack/blackjack_solution.py", "anchor_text": "full code", "paragraph_index": 5}, {"url": "https://towardsdatascience.com/implement-grid-world-with-q-learning-51151747b455", "anchor_text": "grid world Q-learning", "paragraph_index": 14}, {"url": "https://github.com/MJeremy2017/RL/blob/master/BlackJack/blackjack_solution.py", "anchor_text": "full code here", "paragraph_index": 21}], "all_paragraphs": ["We have talked about how to use Monte Carlo methods to evaluate a policy in reinforcement learning here, where we took the example of blackjack and set a fixed policy, and by repetitively sampling, we are able to get an unbiased estimates of the policy and the state, value pairs along the way. The next direct thought would be that are we able to solve the blackjack problem by using value iteration which we\u2019ve been introduced in previous passages?", "The answer is a sounded yes, as we can clearly define the three main components(state, action, reward of blackjack, and we also know the policy of the opponent, which will also be treated as part of the environment, so the process will be similar to what we have discussed in tic-tac-toe implementation, where we took the standpoint of 1 player, and the corresponding action from the opponent will be taken as the feedback from the environment(in this way we don\u2019t need any model of our opponent, which is one of the advantages of reinforcement learning).", "Just a quick review of the blackjack rules and the general policy that a dealer takes:", "The game begins with two cards dealt to both dealer and player. One of the dealer\u2019s cards is face up and the other is face down. If the player has 21 immediately (an ace and a 10-card), it is called a natural. He then wins unless the dealer also has a natural, in which case the game is a draw. If the player does not have a natural, then he can request additional cards, one by one (hits), until he either stops (sticks) or exceeds 21 (goes bust). If he goes bust, he loses; if he sticks, then it becomes the dealer\u2019s turn. The dealer hits or sticks according to a fixed strategy without choice: he sticks on any sum of 17 or greater, and hits otherwise. If the dealer goes bust, then the player wins; otherwise, the outcome \u2014 win, lose, or draw \u2014 is determined by whose final sum is closer to 21.If the player holds an ace that he could count as 11 without going bust, then the ace is said to be usable.", "Let\u2019s first be clear about the state, action and reward. The state of the game is the components that matter and affect the winning chance. Firstly, the most important is card sum, the current value on hand. Secondly, there are two more factors that contribute to game wining, which we described above in the rule introduction, are the usable ace and dealer\u2019s showing card. So the state would has 3 components player\u2019s current card sum, usable ace and dealer\u2019s showing card. Actions are clear as one can has only 2 actions in blackjack, either HIT or STAND. Reward would be based on the result of the game, where we give 1 to a win, 0 to a draw and -1 to a lose.", "As I have talked about MC method on blackjack, in the following sections, I will introduce the major differences of implementation of the two and try to make the code more concise. (full code)", "In the init function, we define the global values that will be frequently used or updated in the following functions. And as opposed to MC implementation where our player follows a fixed policy, here the player we control does not use a fixed policy, thus we need more components to update its Q-value estimates.", "Components defined inside this init function are generally used in most cases of reinforcement learning problem. The added parts compared to the init function in MC method include self.player_Q_Values , which is the initialised estimation of (state, action) that will be updated after each episode, self.lr , which is used to control updating speed and self.exp , which is used for action taking.", "The giveCard and dealerPolicy function is exactly the same. As our opponent, the dealer, still holds the same strategy in this game, and we are exploring a strategy that could be as competitive or even better than dealer\u2019s policy.", "This time our player no longer follows a fixed policy, so it needs to think about which action to take in terms of balancing the exploration and exploitation.", "Our player has two actions to take, of which 0 stands for stand and 1 stands for hit. When the current card sum is equal or less than 11, one would always hit as there is no harm in hitting a another card. When the card sum exceeds 11, our player would take a \u03f5-greedy policy, where exp_rate percentage of time, it takes random action, otherwise takes a greedy action which is the action that gains the most reward based on the current estimates of Q-value.", "By taking an action, our player moves from the current state to the next state, so the playerNxtState function will take in an action and output the next state and judge if it is the end of game.", "In order to move to next state, the function needs to know what is the current state. It does this at the beginning by assigning the current state to fixed variables. The following logic is if our action is 1, which stands for HIT, our player will draw another card, and the current card sum will be added accordingly based on whether the drawing card is ace or not. On the other hand, if the action is STAND, the game ends right away and the current state will be returned. It is worth noting that at the end of the function we add another section to judge if the game ends according to whether the player has an usable ace on hand.", "Like all reinforcement learning updates, at the end of the game, which is considered one episode, our player receives a reward based on card value of itself and dealer\u2019s and propagate this value backward to update the estimates of (state, action) .", "These 2 functions could be merged into 1, and I separate them to make it clearer in structure. The winner function judges the winner of the game and returns reward correspondingly, and the _giveCredit function updates reward according to the formula above, which is exactly the same as we introduced in grid world Q-learning, the Q-values is updated in a reversed fashion, whereas the last updated value will be used to update the current Q value.", "In the training phase, we will simulate many games and let our player to play against the dealer in order to update the Q-values.", "Different from MC method of blackjack, at the beginning I added a function deal2cards which just simply deal 2 cards in a row to a player. The reason is to follow the rule that if either of the player gets 21 points with the first 2 cards, the game ends directly rather than continuing to wait the next player reaching its end. This avoids cases that one player gets 21 points with the first 2 cards while the other also gets 21 points with more than 2 cards, but the game ends with a draw.", "With our agent equipped with intelligence, we are good to let it play against a dealer(The save and load policy function is same as that in MC blackjack, and the playWithDealer function has similar structure with the training process, only to tune the exp_rate to 0).", "After training 10,000 rounds with exp_rate=0.2 and lr=0.1 , I saved the policy and let it play against dealer with 10,000 rounds and got the result:", "which was a policy that not able to overtake dealer\u2019s. There surly exists a policy that performs better than HIT17(in fact, this is an open secret), the reason that our agent did not learn the optimal policy and perform as well is that, I believe,", "I strongly suggest you to try more based on the current implementation, which is both interesting and good for yourself in terms of deepen your understanding of reinforcement learning. You can try:", "Please check out the full code here. You are welcomed to contribute, and if you have any questions or suggestions, please raise comment below!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Hmm\u2026I am a data scientist looking to catch up the tide\u2026"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F5e31a7fb371f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://meatba11.medium.com/?source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": ""}, {"url": "https://meatba11.medium.com/?source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": "Jeremy Zhang"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff37783fc8c26&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&user=Jeremy+Zhang&userId=f37783fc8c26&source=post_page-f37783fc8c26----5e31a7fb371f---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5e31a7fb371f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5e31a7fb371f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/monte-carlo-methods-estimate-blackjack-policy-fcc89df7f029", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/reinforcement-learning-implement-tictactoe-189582bea542", "anchor_text": "tic-tac-toe implementation"}, {"url": "https://en.wikipedia.org/wiki/Blackjack", "anchor_text": "blackjack"}, {"url": "https://github.com/MJeremy2017/RL/blob/master/BlackJack/blackjack_solution.py", "anchor_text": "full code"}, {"url": "https://towardsdatascience.com/implement-grid-world-with-q-learning-51151747b455", "anchor_text": "grid world Q-learning"}, {"url": "https://github.com/MJeremy2017/RL/blob/master/BlackJack/blackjack_solution.py", "anchor_text": "full code here"}, {"url": "http://incompleteideas.net/book/the-book-2nd.html", "anchor_text": "http://incompleteideas.net/book/the-book-2nd.html"}, {"url": "https://medium.com/tag/reinforcement-learning?source=post_page-----5e31a7fb371f---------------reinforcement_learning-----------------", "anchor_text": "Reinforcement Learning"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----5e31a7fb371f---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/python3?source=post_page-----5e31a7fb371f---------------python3-----------------", "anchor_text": "Python3"}, {"url": "https://medium.com/tag/programming?source=post_page-----5e31a7fb371f---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----5e31a7fb371f---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5e31a7fb371f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&user=Jeremy+Zhang&userId=f37783fc8c26&source=-----5e31a7fb371f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F5e31a7fb371f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&user=Jeremy+Zhang&userId=f37783fc8c26&source=-----5e31a7fb371f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F5e31a7fb371f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F5e31a7fb371f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----5e31a7fb371f---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----5e31a7fb371f--------------------------------", "anchor_text": ""}, {"url": "https://meatba11.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://meatba11.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Jeremy Zhang"}, {"url": "https://meatba11.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1.1K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff37783fc8c26&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&user=Jeremy+Zhang&userId=f37783fc8c26&source=post_page-f37783fc8c26--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fcdbd8b83c584&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Freinforcement-learning-solving-blackjack-5e31a7fb371f&newsletterV3=f37783fc8c26&newsletterV3Id=cdbd8b83c584&user=Jeremy+Zhang&userId=f37783fc8c26&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}