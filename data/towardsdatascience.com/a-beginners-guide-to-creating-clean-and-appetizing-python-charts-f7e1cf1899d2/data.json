{"url": "https://towardsdatascience.com/a-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2", "time": 1683008552.664556, "path": "towardsdatascience.com/a-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2/", "webpage": {"metadata": {"title": "A Beginners Guide to Creating Clean and Appetizing Python Charts | by Andrew Hong | Towards Data Science", "h1": "A Beginners Guide to Creating Clean and Appetizing Python Charts", "description": "It\u2019s confusing the first time you try and figure out how to make your plot look exactly how you want, especially because it seems that everyone on StackOverflow has their own way of plotting and\u2026"}, "outgoing_paragraph_urls": [{"url": "https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.plot.html", "anchor_text": "here", "paragraph_index": 8}, {"url": "https://ux.stackexchange.com/questions/94696/color-palette-for-all-types-of-color-blindness", "anchor_text": "this thread", "paragraph_index": 10}, {"url": "https://matplotlib.org/3.2.1/gallery/style_sheets/style_sheets_reference.html", "anchor_text": "look here", "paragraph_index": 18}, {"url": "https://realpython.com/python-dicts/", "anchor_text": "dictionary", "paragraph_index": 19}, {"url": "https://towardsdatascience.com/a-primer-on-args-kwargs-decorators-for-data-scientists-bb8129e756a7", "anchor_text": "This is a great article", "paragraph_index": 19}, {"url": "https://matplotlib.org/3.2.1/tutorials/intermediate/gridspec.html", "anchor_text": "you should definitely know", "paragraph_index": 20}, {"url": "https://towardsdatascience.com/animate-your-graphs-in-python-in-4-easy-steps-243dccad9a7", "anchor_text": "use this method", "paragraph_index": 21}, {"url": "https://gifcompressor.com/", "anchor_text": "use this", "paragraph_index": 21}, {"url": "https://matplotlib.org/2.0.0/users/annotations.html", "anchor_text": "like arrows", "paragraph_index": 23}, {"url": "https://matplotlib.org/3.2.1/tutorials/intermediate/gridspec.html", "anchor_text": "knowing the", "paragraph_index": 25}, {"url": "https://matplotlib.org/3.2.1/tutorials/intermediate/gridspec.html", "anchor_text": "gridspec", "paragraph_index": 25}, {"url": "https://matplotlib.org/3.2.1/tutorials/intermediate/gridspec.html", "anchor_text": "kwarg", "paragraph_index": 25}, {"url": "https://en.wikipedia.org/wiki/D3.js", "anchor_text": "D3.js", "paragraph_index": 27}, {"url": "https://en.wikipedia.org/wiki/HTML", "anchor_text": "HTML", "paragraph_index": 27}, {"url": "https://en.wikipedia.org/wiki/CSS", "anchor_text": "CSS", "paragraph_index": 27}, {"url": "https://plotly.com/python/webgl-vs-svg/", "anchor_text": "this method", "paragraph_index": 28}], "all_paragraphs": ["It\u2019s confusing the first time you try and figure out how to make your plot look exactly how you want, especially because it seems that everyone on StackOverflow has their own way of plotting and customizing a chart. This becomes more frustrating when you realize that you can\u2019t just apply the exact same code from Matplotlib to customize powerful out-of-the-box plots from Seaborn.", "This article will focus on the main problems you\u2019ll tackle when trying to create a clean chart in Matplotlib, and then go into how those tools translate into Seaborn and Plotly.", "\u201cHow do I set my title, axis labels, axis limit, etc?\u201d is probably one of the most commonly searched questions about Matplotlib. I like to just use set() to have everything on one line.", "Subplots: There are already many great articles about customizing subplots, so I\u2019ll be brief. Below is all you really need to know to start:", "Sometimes your plot and labels will look squished after you add a second axis or a few subplots, so use fig.tight_layout() to fix the spacing.", "If you\u2019re plotting a pivot table like this pivot.plot(kind=\u2019line\u2019), then a cool trick you can do is pivot.plot(kind = 'line\u2019, subplots = True) to quickly create subplots for each column of the pivot table. Plotting pivots using plot() will become your best friend, the index will always be the x-axis and columns will be y-axis.", "Tick Management: Let\u2019s say you want to plot some \u2018object\u2019 type data in a line chart, but the axis doesn\u2019t allow you to do so because it needs to be an int! First save a list of the categorical variable names, then convert the categorical column into integers (1,2,3,4\u2026).", "Choose the frequency (1,5,10,\u2026) and save that in another list. Now set your tick frequency, then replace the labels with your categorical variable list indexed by tick frequency. The code should look like this:", "Line Customization: Line width, marker, color, and type can be found here if you scroll down to format strings. You can create custom patterns using set_dashes() if you want to.", "If we plot a line then a scatter on the same figure, the scatter would cover the line. Now one way to solve this problem is the plot the line last, but its easier to keep track using zorder . Higher zorder values will cover lower ones, think of it like a z-axis coming towards you.", "I don\u2019t think enough people use different line patterns (I\u2019m guilty of this as well), but data visualization needs to be about accessibility as well. Consider the case your audience is colorblind, and use either different line patterns or a color map that is colorblind friendly. To learn more follow this thread, but in general you want to avoid the following combinations: green & brown, blue & purple, green & blue, light green & yellow, blue & grey, green & grey, green & black.", "Managing Colors: So you have 20 different columns you\u2019re trying to plot (if you have more please consider filtering or creating different charts), but the colors are repeating after the first 10!", "For Matplotlib, you set color = palette , for Seaborn you set palette = palette in the argument of your plot function.", "You can also pass in categorical variables to \u2018hue\u2019 for automatic color assigning in Seaborn, or \u2018c\u2019 for matplotlib like below.", "Legends: You\u2019ve gotten your multiple plots on the same chart, through subplots and loops, but now your legend is an absolute mess. Let\u2019s walk through creating a custom legend. Let\u2019s say you\u2019re plotting a second y-axis, but don\u2019t want two legends.", "You can set the legend markers however you want and assign labels like this:", "If you\u2019re plotting through a loop, the following is useful", "You can set a legend\u2019s loc to one of 9 positions (a 3x3 grid), set it to \u2018best\u2019, or move it outside the plot by altering the values of bbox_to_anchor=(1, 1.1)). ncols will allow you to condense your legend horizontally by specifying how many labels to put on each row.", "You still don\u2019t like the way your charts look? Then change the style sheet using plt.style.use('ggplot2') . For a full list of styles, look here.", "Kwargs: Now things are gonna get a bit dense. If you type help(fig.plot), you\u2019ll see **kwargs at the end. **kwargs are a dictionary of settings to help you customize to a tee. This is a great article explaining *args and **kwargs in general, but in short because Seaborn methods are built upon Matplotlib you can pass any Matplotlib argument into the **kwargs of Seaborn (and do customization like fonts). I talk about an easier way than that for what you\u2019ve learned so far below.", "The one Kwarg you should definitely know is gridspec, as it allows you to change proportions of your subplots (i.e. make the top one smaller and bottom one larger).", "Animations: I find it easiest to use this method, rather than messing with different writers and issues with matplotlib.animation. If your animations are too large use this to shrink their size.", "Annotations: This one is simple for just text, where the first two values are x and y coordinates:", "For things like arrows with text it\u2019s similar:", "For horizontal or vertical lines on your figure, you can plot either:", "Seaborn: This package is fully built off of Matplotlib. Because of the complexity of their one-line charts, you\u2019ll need to pay a lot more attention to the args to figure out what you have to change. The easiest way to deal with all your customization problems is to create a fig, ax = plt.subplots(), pass the ax into the argument ax=ax, then customized the axes using ax.set() . Some plots won\u2019t have an \u201cax\u201d argument, but will have a \u201cheight\u201d you can set. Other plots will allow you to change the type of plot, but you won\u2019t be able to change the grid/subplot layout easily. However, knowing the gridspec kwarg will allow you to recreate many of the plots with relative ease.", "This isn\u2019t an article about most useful plots, but definitely be familiar with pairplot() and creating correlograms by inserting a df.corr() into sns.heatmap() . Those are quick ways to wow anyone.", "Plotly: They have gone through many iterations, and have sub-classes such as Express, Graph Objects, and Dash. It\u2019s mainly built at the frontend with Javascript (D3.js, HTML and CSS), and that\u2019s why you can interact with it in HTML files (or embeddings). It can be confusing at first, but think of it as:", "A big thing to remember for Plotly is that depending on how much data you are graphing, there may be significant slowdown in interactions. One way around that using this method.", "If this is all a lot and confusing, don\u2019t worry because data visualization isn\u2019t meant to be easy. Just like building machine learning models, most of your time isn\u2019t spent on the fun stuff \u2014 it\u2019s spent instead of wrangling and cleaning the data so it can be visualized. There are a lot of changes you can make that may feel tiny and unnecessary, but when you add it up it\u2019s the difference between a stellar chart versus a confusing mess.", "Here are a few questions to ask yourself before you send off any chart:", "Anytime you\u2019re confused, just remember your chart is trying to convey a story from the data and if it doesn\u2019t do that, you need to go through it again and add or remove elements. Most of the time, people won\u2019t be patient enough to sit through your lengthy explanation of what you\u2019re trying to show.", "Good luck and I hope you all dish out some amazing visualizations!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Follow me on @andrewhong5297 on twitter for more data insights"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff7e1cf1899d2&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://andrew-hong.medium.com/?source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": ""}, {"url": "https://andrew-hong.medium.com/?source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": "Andrew Hong"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fad1e6939064c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&user=Andrew+Hong&userId=ad1e6939064c&source=post_page-ad1e6939064c----f7e1cf1899d2---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff7e1cf1899d2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff7e1cf1899d2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@vladington?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Stefan Vladimirov"}, {"url": "https://unsplash.com/s/photos/dinner?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.plot.html", "anchor_text": "here"}, {"url": "https://ux.stackexchange.com/questions/94696/color-palette-for-all-types-of-color-blindness", "anchor_text": "this thread"}, {"url": "https://matplotlib.org/3.2.1/gallery/style_sheets/style_sheets_reference.html", "anchor_text": "look here"}, {"url": "https://realpython.com/python-dicts/", "anchor_text": "dictionary"}, {"url": "https://towardsdatascience.com/a-primer-on-args-kwargs-decorators-for-data-scientists-bb8129e756a7", "anchor_text": "This is a great article"}, {"url": "https://matplotlib.org/3.2.1/tutorials/intermediate/gridspec.html", "anchor_text": "you should definitely know"}, {"url": "https://towardsdatascience.com/animate-your-graphs-in-python-in-4-easy-steps-243dccad9a7", "anchor_text": "use this method"}, {"url": "https://gifcompressor.com/", "anchor_text": "use this"}, {"url": "https://matplotlib.org/2.0.0/users/annotations.html", "anchor_text": "like arrows"}, {"url": "https://matplotlib.org/3.2.1/tutorials/intermediate/gridspec.html", "anchor_text": "knowing the"}, {"url": "https://matplotlib.org/3.2.1/tutorials/intermediate/gridspec.html", "anchor_text": "gridspec"}, {"url": "https://matplotlib.org/3.2.1/tutorials/intermediate/gridspec.html", "anchor_text": "kwarg"}, {"url": "https://en.wikipedia.org/wiki/D3.js", "anchor_text": "D3.js"}, {"url": "https://en.wikipedia.org/wiki/HTML", "anchor_text": "HTML"}, {"url": "https://en.wikipedia.org/wiki/CSS", "anchor_text": "CSS"}, {"url": "https://plotly.com/python/plotly-express/", "anchor_text": "plotly.express"}, {"url": "https://plotly.com/python/reference/", "anchor_text": "plotly.go"}, {"url": "https://plotly.com/python/reference/", "anchor_text": "this link"}, {"url": "https://plotly.com/python/webgl-vs-svg/", "anchor_text": "this method"}, {"url": "https://plotly.com/python/sankey-diagram/", "anchor_text": "Sankey Chart"}, {"url": "https://medium.com/tag/data-visualization?source=post_page-----f7e1cf1899d2---------------data_visualization-----------------", "anchor_text": "Data Visualization"}, {"url": "https://medium.com/tag/data-science?source=post_page-----f7e1cf1899d2---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----f7e1cf1899d2---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/visualization?source=post_page-----f7e1cf1899d2---------------visualization-----------------", "anchor_text": "Visualization"}, {"url": "https://medium.com/tag/towards-data-science?source=post_page-----f7e1cf1899d2---------------towards_data_science-----------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff7e1cf1899d2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&user=Andrew+Hong&userId=ad1e6939064c&source=-----f7e1cf1899d2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff7e1cf1899d2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&user=Andrew+Hong&userId=ad1e6939064c&source=-----f7e1cf1899d2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff7e1cf1899d2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff7e1cf1899d2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f7e1cf1899d2---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f7e1cf1899d2--------------------------------", "anchor_text": ""}, {"url": "https://andrew-hong.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://andrew-hong.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Andrew Hong"}, {"url": "https://andrew-hong.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "717 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fad1e6939064c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&user=Andrew+Hong&userId=ad1e6939064c&source=post_page-ad1e6939064c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F38f8eb637a1c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fa-beginners-guide-to-creating-clean-and-appetizing-python-charts-f7e1cf1899d2&newsletterV3=ad1e6939064c&newsletterV3Id=38f8eb637a1c&user=Andrew+Hong&userId=ad1e6939064c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}