{"url": "https://towardsdatascience.com/what-is-lazy-evaluation-in-python-9efb1d3bfed0", "time": 1683013848.446938, "path": "towardsdatascience.com/what-is-lazy-evaluation-in-python-9efb1d3bfed0/", "webpage": {"metadata": {"title": "What is Lazy Evaluation in Python? | by Xiaoxu Gao | Towards Data Science", "h1": "What is Lazy Evaluation in Python?", "description": "If you\u2019ve never heard of Lazy Evaluation before, Lazy Evaluation is an evaluation strategy which delays the evaluation of an expression until its value is needed and which also avoids repeated\u2026"}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Lazy_evaluation", "anchor_text": "Lazy Evaluation", "paragraph_index": 0}, {"url": "https://stevenloria.com/lazy-properties/", "anchor_text": "this blog", "paragraph_index": 27}, {"url": "http://linkedin.com/in/xiaoxugao/", "anchor_text": "linkedin.com/in/xiaoxugao/", "paragraph_index": 30}], "all_paragraphs": ["If you\u2019ve never heard of Lazy Evaluation before, Lazy Evaluation is an evaluation strategy which delays the evaluation of an expression until its value is needed and which also avoids repeated evaluations (From Wikipedia). It\u2019s usually being considered as a strategy to optimize your code.", "Let\u2019s turn this theory into an example. For example, you have a simple expression sum = 1 + 2, Python would try to understand the real meaning of this expression and get the conclusion that sum = 3. This process is called Evaluation and it needs some sort of computation power. In this case, the evaluation is done immediately, therefore it has another name: Strict Evaluation.", "On the other hand, we have a non-strict evaluation which is called Lazy Evaluation. The difference is that Lazy Evaluation will not immediately evaluate the expression but only does it when the outcome is needed. It\u2019s a bit like a lazy student who only does the homework when it needs to be submitted to the teacher.", "But being lazy here is not necessarily a bad thing, it can improve the efficiency of your code and save plenty of resources. Luckily, Python has silently applied Lazy Evaluation to many built-in functions in order to optimize your code. And I\u2019m sure that you must be familiar with those functions even without being aware of Lazy Evaluation.", "In this article, I will explain how Lazy Evaluation works in Python, which functions benefit from it, and the reason behind it. In the end, I will show you how you can write your own Lazy functions/classes. Let\u2019s get started!", "Most of the time, Python still evaluates expression immediately. Let\u2019s look at this example. How long do you think it\u2019s gonna take?", "The answer is 3 seconds. This is because when you create a list, Python will immediately evaluate every item inside the list, even though you only need the first element.", "Since Python3, there has been a big improvement in making such list traversal more memory-efficient and time-efficient, which is range() function. I bet every Python developer has used this function at lease once in their life. In Python2, range(5) would return a list of 5 elements. As the size of the list increases, more memory is used.", "However in Python 3, range(5) returns a range type. This object can be iterated over to yield a sequence of numbers. No matter how big the range is, the object always has the same size. This is due to the fact that range(5) only stores the start, stop, step values, and calculates each item when it\u2019s needed.", "If you are not familiar with generator, iterator and their benefits, please continue reading this section. Otherwise, feel free to skip this section.", "To make it simple, iterator is a bigger concept than generator. Iterator is an object whose class has a __next__ and __iter__ method. Every time you do next() call to the iterator object, you would get the next item in the sequence until the iterator object is exhausted and raise StopIteration. However, generator is a function that returns an iterator. It looks like a normal function except that it uses yield instead of return.", "When the yield statement is executed, the program would suspend the current function execution and returns the yielded value to the caller. This is the key idea of Lazy Evaluation where the value is calculated and returned when the caller is needed and the next value will still be quiet and doing nothing in the program.", "To create a generator, there can be 2 ways:", "Then, let\u2019s improve the first example using range(). Before we get to the final result, there is another \u201ctrap\u201d. The following example has 2 functions: use_generator() and use_list(). They look almost the same except use_generator() uses () in islice() function, while use_list() uses []. Such small difference can, however, make a huge impact on the running time.", "The answer to this behaviour is already present in the function name. (time.sleep(x) for x in range(3)) is a generator while [time.sleep(x) for x in range(3)] is a list even though it uses range(). Because of that, the function that uses list takes way more time than the other one.", "If you understand this part, then congratulations, you\u2019ve already known 50% about Lazy Evaluation.", "A very similar use case is zip() which merges 2 iterables to produce a sequence of tuples. In Python2, zip(*iterables) would return a list of tuples.", "While since Python3, it has been improved to return a zip object which is similar to range object that can be iterated over.", "I will not repeat the reason again because it has the same idea of range(). But if you want to know other aspects of zip, feel free to read my another article.", "This is another built-in function that we probably use everyday and take it for granted. When we open a file, we normally do:", "with open(...) doesn\u2019t read the entire file and store it in memory, instead it returns a file object that can be iterated over. Because of that, it\u2019s able to efficiently read huge files and not hurt the memory.", "A couple of weeks ago, I received a question from a reader about Lambda expression which actually triggered me to write this article. His question is:", "Why does a lambda map object like x = map(lambda x: x*2, [1,2,3,4,5]) doesn\u2019t take any space? But if you do list(x), it will print all the values and take space in the memory?", "I hope by far, you should have a clue on what\u2019s going on here. The map object is also a lazy object that can be iterated over. The computation x*2 will be done for only 1 item in each loop. When you do list(x), you basically compute all the values at one time. If you just want to iterate over the map object, you don\u2019t have to do list(x).", "In the last part of the article, I want to bring us to the next level where we write our own Lazy Evaluation function/class. This helps us to extend the capability beyond the built-in functions.", "As we have understood that a key part of Lazy Evaluation is nothing more than a generator. Therefore, we can simply write our function as a generator.", "Another common use case of customized Lazy Evaluation is the initialization of class properties. When we initialize a class, certain properties might take long time to calculate. In the following example, the property cities takes longer time because it needs to invoke an API to get a list of city names. Therefore, it would be a waste of time if we don\u2019t actually need this value for some country objects.", "A nice solution present in this blog is to create a decorator for such lazy properties, so that the expensive operation will be done only if this property is needed. As you can see from the console output, cities property is called is printed out after we print out china.cities.", "I hope this article can inspire you to have a new view on code optimization.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I\u2019m a Developer with a focus on Python and Data Engineering. I write stuff to talk to myself and the world. You can find me on linkedin.com/in/xiaoxugao/."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F9efb1d3bfed0&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@xiaoxugao?source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@xiaoxugao?source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": "Xiaoxu Gao"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2adc5a07e772&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&user=Xiaoxu+Gao&userId=2adc5a07e772&source=post_page-2adc5a07e772----9efb1d3bfed0---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9efb1d3bfed0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9efb1d3bfed0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@hollymandarich", "anchor_text": "Holly Mandarich"}, {"url": "https://unsplash.com/", "anchor_text": "Unsplash"}, {"url": "https://en.wikipedia.org/wiki/Lazy_evaluation", "anchor_text": "Lazy Evaluation"}, {"url": "https://towardsdatascience.com/understand-zip-a-hidden-gem-in-python-9488a255f45d", "anchor_text": "Understand zip() \u2014 A Hidden Gem in PythonEffectively merge an unknown number of liststowardsdatascience.com"}, {"url": "https://stevenloria.com/lazy-properties/", "anchor_text": "this blog"}, {"url": "https://stevenloria.com/lazy-properties/", "anchor_text": "Lazily-evaluated Property Pattern in PythonLazy evaluation is a useful pattern that can improve your code's efficiency in many situations. One example of this is\u2026stevenloria.com"}, {"url": "https://sanjayasubedi.com.np/python/python-tips-lazy-evaluation-in-python/", "anchor_text": "Python tips: Lazy evaluation in PythonWhile small dataset might fit in your main memory, not all dataset will. Sometimes you cannot read the entire dataset\u2026sanjayasubedi.com.np"}, {"url": "https://medium.com/tag/programming?source=post_page-----9efb1d3bfed0---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----9efb1d3bfed0---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/software-development?source=post_page-----9efb1d3bfed0---------------software_development-----------------", "anchor_text": "Software Development"}, {"url": "https://medium.com/tag/python?source=post_page-----9efb1d3bfed0---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----9efb1d3bfed0---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9efb1d3bfed0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&user=Xiaoxu+Gao&userId=2adc5a07e772&source=-----9efb1d3bfed0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F9efb1d3bfed0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&user=Xiaoxu+Gao&userId=2adc5a07e772&source=-----9efb1d3bfed0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F9efb1d3bfed0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F9efb1d3bfed0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----9efb1d3bfed0---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----9efb1d3bfed0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@xiaoxugao?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@xiaoxugao?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Xiaoxu Gao"}, {"url": "https://medium.com/@xiaoxugao/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "9.6K Followers"}, {"url": "http://linkedin.com/in/xiaoxugao/", "anchor_text": "linkedin.com/in/xiaoxugao/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F2adc5a07e772&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&user=Xiaoxu+Gao&userId=2adc5a07e772&source=post_page-2adc5a07e772--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F45d7754eac8c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fwhat-is-lazy-evaluation-in-python-9efb1d3bfed0&newsletterV3=2adc5a07e772&newsletterV3Id=45d7754eac8c&user=Xiaoxu+Gao&userId=2adc5a07e772&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}