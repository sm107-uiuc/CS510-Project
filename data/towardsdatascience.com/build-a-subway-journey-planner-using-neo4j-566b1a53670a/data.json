{"url": "https://towardsdatascience.com/build-a-subway-journey-planner-using-neo4j-566b1a53670a", "time": 1683013566.907397, "path": "towardsdatascience.com/build-a-subway-journey-planner-using-neo4j-566b1a53670a/", "webpage": {"metadata": {"title": "Build a Subway Journey Planner Using Neo4j | by Ng Wai Foong | Towards Data Science", "h1": "Build a Subway Journey Planner Using Neo4j", "description": "In my previous tutorial, I have covered on Build a Restaurant Recommendation Engine Using Neo4j. In this tutorial, we are going to explore a little more on the user-defined procedures and functions\u2026"}, "outgoing_paragraph_urls": [{"url": "https://medium.com/better-programming/build-a-restaurant-recommendation-engine-using-neo4j-9d13ebdd4736", "anchor_text": "Build a Restaurant Recommendation Engine Using Neo4j", "paragraph_index": 0}, {"url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures", "anchor_text": "APOC (Awesome Procedure On Cypher) Library", "paragraph_index": 1}, {"url": "https://neo4j.com/graph-data-science-library/", "anchor_text": "GDSL (Graph Data Science Library)", "paragraph_index": 2}, {"url": "https://medium.com/better-programming/the-beginners-guide-to-the-neo4j-graph-platform-a39858ccdeaa", "anchor_text": "The Beginner\u2019s Guide to the Neo4j Graph Platform", "paragraph_index": 5}, {"url": "https://neo4j.com/docs/driver-manual/current/get-started/#driver-get-started-installation", "anchor_text": "following link", "paragraph_index": 12}, {"url": "https://medium.com/better-programming/migrate-from-flask-to-fastapi-smoothly-cc4c6c255397", "anchor_text": "migrate it from Flask to FastAPI", "paragraph_index": 14}, {"url": "http://SMRT Corporation website", "anchor_text": "public transport operator in Singapore", "paragraph_index": 16}, {"url": "https://gist.github.com/wfng92/fb08e2aee22f7dd79150fc99bef50b7d", "anchor_text": "following gist", "paragraph_index": 31}, {"url": "https://neo4j.com/labs/apoc/4.1/overview/apoc.algo/apoc.algo.dijkstra/", "anchor_text": "official documentation", "paragraph_index": 35}, {"url": "https://medium.com/better-programming/create-exit-handlers-for-your-python-appl-bc279e796b6b", "anchor_text": "How to Create Exit Handlers for Your Python App", "paragraph_index": 51}, {"url": "http://journey.smrt.com.sg/", "anchor_text": "following website", "paragraph_index": 66}], "all_paragraphs": ["In my previous tutorial, I have covered on Build a Restaurant Recommendation Engine Using Neo4j. In this tutorial, we are going to explore a little more on the user-defined procedures and functions. Such implementations are usually implemented in Java and can be called directly via Cypher. This provides a convenient way for you to create a custom implementation of any graph algorithms that you preferred and use it when querying the dataset in Neo4j.", "Since version 4.1.1, Neo4j comes with its own APOC (Awesome Procedure On Cypher) Library. There are two versions available:", "Moreover, Neo4j also provides its own GDSL (Graph Data Science Library) for developers working on machine learning workflows. Some of the algorithms inside this library are still in alpha phase at the time of this writing.", "Our example project will be about a journey planner for metro/subway/mass rapid transit. Behind the scene, it will use a path-finding algorithm provided by APOC Core later on to find the shortest path from a starting station to the end destination.", "Let\u2019s proceed to the next section and start installing the necessary modules.", "Before you continue, it is highly recommended to go through the following guide on The Beginner\u2019s Guide to the Neo4j Graph Platform if you are new to Neo4j.", "By default, the installation of Neo4j comes with the APOC Core jar file. You can easily find the jar file in the following directory. NEO4J_HOME refers to the main directory of Neo4j in your local machine.", "All you need to do is to copy and paste the jar file into the following directory", "Remember to restart Neo4j afterwards via the following command for it to take effect.", "Use the following command if you are starting it as a background service.", "You can access Neo4j Browser via the following URL", "In order to connect your web application to Neo4j graph database, you need to install one of the following drivers based on the programming languages that you use:", "For this tutorial, I am going to use the Python driver for our web application in FastAPI. You can find the full installation steps for the rest of the drivers via the following link.", "It is highly recommended to create a virtual environment before you install the package. Run the following command in the terminal.", "Our back-end server will be built on top of FastAPI. If you are a Flask user, feel free to modify it accordingly as you can always migrate it from Flask to FastAPI later on. Install it via pip install as follows:", "Besides, you will need an ASGI server as well. I am going to use the recommended ASGI server called Uvicorn. In the same terminal, run the following command to install it", "I am going to use the following network map as the dataset for my use case. It is based on the actual network map by one of the the public transport operator in Singapore.", "In order to simplify our project, our dataset will only contain a strip-down version of the map above. Hence, I am going to ignore the rest of the lines and keep only the following 5 MRT lines.", "In this section, we will be executing the graph query language (Cypher) for inserting data to and querying data from Neo4j graph database. You can use an existing or a new database for it.", "Before we continue, let\u2019s list down all of the nodes and relationships for our use case. We are going to use it to model our domain and create the Cypher query later on.", "To keep things simple and short, I am going to make the following assumptions for our use case.", "Feel free to modify and model the domain based on your own use cases.", "Each station represent a single Node with the following properties:", "The relationship between two Station is denoted by TRAVEL_TO with the following property:", "You can run the following Cypher to clean up the database. Any existing nodes and their relationships will be removed completely from your database.", "You can create two Station nodes and link them up with a relationship as follows. I am using lower-case as the name to standardize the input parameters for the API call later on.", "It will create two independent Nodes with the Station label and build TRAVEL_TO relationship between both of them. By now, you should notice that the relationship is created as one-direction. This is the default behaviour as Neo4j only allows you to create one-direction relationship between nodes. However, you can specify to ignore the direction when querying to get the desired bi-directional results.", "Subsequently, you can reuse the old Station node via the declared name and link it to a new Station node as follow.", "You need to be careful when linking the nodes as it will cause duplication in the result if there exist two different relationships from Station A to Station B. For example, you can connect from Raffles Place to City Hall via both East-West Line and North-South Line. Once you have declared the following Cypher for East-West Line.", "You must not declare it again for North-South Line.", "If you intend to model both stations as different entities, simply create two different Nodes for the same station and link them properly.", "Let\u2019s combine all of our dataset into a single query. The following gist contains the complete Cypher query for this project. You can run it directly in Neo4j console.", "Once you execute the Cypher query, you should see the following user interface", "In fact, you can run the following query to get all of the Nodes and their relationships", "You should get the following result in your Neo4j Browser.", "APOC Core comes with a few useful path-finding algorithms such as dijkstra and astar. In this tutorial, I am going to use dijkstra since we only have one cost function. Based on the official documentation, it accepts the following input parameters", "You can ignore both the defaultWeight and numberOfWantedPaths parameters if you are looking for just the best path from the algorithm.", "The following example illustrates the Cypher to get the best path from Jurong East to Dhoby Ghaut.", "You should get the following output", "Let\u2019s say you wanted to get the top 3 best paths from the algorithm. You should use the following Cypher", "Upon execution, Neo4j Browser will display the following result", "In this section, we are going to create a simple FastAPI back-end that connects to Neo4j database via its Python driver. In your working directory, create a new Python file. I am going to call it journey.py.", "Add the following import declaration at the top of your Python file.", "Next, create a new class and initialize the following functions inside it", "This class is responsible for the following functionalities:", "Continue by appending the following code inside the Journey class. The first function initialize a session via context manager. Inside the function, we are going to call the read_transaction() method and pass in the second function which will return a dictionary as result.", "As for the second function, it is mainly responsible for executing the query string via run() function. I am using dict comprehension and title() function to return the names as Title case. It is recommended to declare this function as staticmethod based on the official documentation.", "Let\u2019s create two more functions for getting the best paths using dijkstra algorithm. It accepts the following parameters:", "As I have mentioned earlier, our back-end server is based on FastAPI. Create a new Python file called myapp.py in the same directory as journey.py.", "At the top of the file, add the following import statements.", "journey is the name of the module that we have created earlier. If both of the files are not in the same directory, kindly modify it accordingly.", "I am using atexit to execute the close() function when quitting the web server. For more information, have a look at the following tutorial on How to Create Exit Handlers for Your Python App.", "CORSMiddleware is required to prevent issue when you are making an AJAX or fetch call from any front-end applications.", "Initialize the following variables which are the credentials for authenticating to Neo4j database.", "After that, add the following code that serves to close the connection to our Neo4j database.", "Once you are done with it, create a new instance of FastAPI. Besides that, let\u2019s specify a variable for origins and pass it as input prameters when calling the add_middleware() function.", "origins consists of a list of URLs that will call your FastAPI server. Let\u2019s say you have a React application that run locally on port 3000. You should add the following URL to the list", "Create a new GET route which returns all of the Stations\u2019 name.", "After that, create another GET route for getting the best path. We are going to link it up with the find_journey() function which accepts three parameters. Each row consists of a dictionary object which contains path and weight parameter. One thing to note is that the nodes inside path are not in order and you can link them via id. The first node can be the starting point or the end destination.", "Run the following code to start your FastAPI server:", "It should start in a few seconds time. Let\u2019s test our API for getting the best paths from Jurong East to Dhoby Ghaut. Head over to the following URL in your browser.", "You should get the following result.", "The first recommendation suggest us to go from Jurong East to Bouna Vista and take the Circle Line all the way to Botanic Gardens. After that, follow Downtown Line until you reach Little India and make an interchange to Dhoby Ghaut.", "The second path leads us from Jurong East to Outram Park. Then, make an interchange to North East Line and go all the way to Dhoby Ghaut.", "Furthermore, our third suggestion direct us to make interchange at Bouna Vista to reach Botanic Gardens. After that, continue to Newton via Downtown Line. Unlike the first journey, it recommends us to make interchange to North South Line go from Orchard to Dhoby Ghaut.", "All you need to do now is to connect it to any front-end application. You can use any frameworks or computer language based on your own preferences. For this tutorial, I am going to just provide a brief run-down on how to integrate React with FastAPI server. I will not cover the user interface to prevent it from being too lengthy.", "If you are looking for inspiration, have a look at the functionalities provided by the following website. The following example shows the example output going from Jurong East to Dhoby Ghaut.", "As you can see, it only offers two options compared to our results. The first option is exactly the same path as the second recommendation made by our path-finding algorithms.", "You can create a React app with the following features:", "The final React app might look something like this. This user interface is based on React Material UI.", "For integration, you can easily implement it via AJAX or fetch call. In this tutorial, I am going to show how you can make an AJAX call to your FastAPI server.", "Let\u2019s recap what you have learned today. We started off with a brief explanation on the Awesome Procedure on Cypher Library.", "After that, we moved on with installing the necessary modules ranging from Neo4j Python driver to FastAPI. Besides, we crafted and modeled our domain for our journey planner application.", "Once we are done with it, we started Neo4j as console application and played around with the Cypher. We cleaned the database, created new records and attempted to run djikstra path-finding algorithm to get the best paths.", "Subsequently, we built a new Journey class that serves as a module to connect to Neo4j database via the Python driver. We have created a FastAPI server as well which acts as the back-end server.", "Lastly, we explored a little further on how to integrate it with React application via AJAX call.", "Thanks for reading this piece. Hope to see you again in the next article!", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F566b1a53670a&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----566b1a53670a--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----566b1a53670a--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://ngwaifoong92.medium.com/?source=post_page-----566b1a53670a--------------------------------", "anchor_text": ""}, {"url": "https://ngwaifoong92.medium.com/?source=post_page-----566b1a53670a--------------------------------", "anchor_text": "Ng Wai Foong"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9d91b858f6e4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&user=Ng+Wai+Foong&userId=9d91b858f6e4&source=post_page-9d91b858f6e4----566b1a53670a---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F566b1a53670a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F566b1a53670a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@lucabravo?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Luca Bravo"}, {"url": "https://unsplash.com/s/photos/subway?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText", "anchor_text": "Unsplash"}, {"url": "https://medium.com/better-programming/build-a-restaurant-recommendation-engine-using-neo4j-9d13ebdd4736", "anchor_text": "Build a Restaurant Recommendation Engine Using Neo4j"}, {"url": "https://github.com/neo4j-contrib/neo4j-apoc-procedures", "anchor_text": "APOC (Awesome Procedure On Cypher) Library"}, {"url": "https://neo4j.com/graph-data-science-library/", "anchor_text": "GDSL (Graph Data Science Library)"}, {"url": "https://medium.com/better-programming/the-beginners-guide-to-the-neo4j-graph-platform-a39858ccdeaa", "anchor_text": "The Beginner\u2019s Guide to the Neo4j Graph Platform"}, {"url": "http://localhost:7474/browser/", "anchor_text": "http://localhost:7474/browser/"}, {"url": "https://github.com/nodejs/LTS", "anchor_text": "LTS versions of Node.JS"}, {"url": "https://neo4j.com/docs/driver-manual/current/get-started/#driver-get-started-installation", "anchor_text": "following link"}, {"url": "https://medium.com/better-programming/migrate-from-flask-to-fastapi-smoothly-cc4c6c255397", "anchor_text": "migrate it from Flask to FastAPI"}, {"url": "http://SMRT Corporation website", "anchor_text": "public transport operator in Singapore"}, {"url": "https://www.transitlink.com.sg/eservice/eguide/rail_idx.php", "anchor_text": "TransitLink"}, {"url": "https://gist.github.com/wfng92/fb08e2aee22f7dd79150fc99bef50b7d", "anchor_text": "following gist"}, {"url": "https://neo4j.com/labs/apoc/4.1/overview/apoc.algo/apoc.algo.dijkstra/", "anchor_text": "official documentation"}, {"url": "https://medium.com/better-programming/create-exit-handlers-for-your-python-appl-bc279e796b6b", "anchor_text": "How to Create Exit Handlers for Your Python App"}, {"url": "http://localhost:3000", "anchor_text": "http://localhost:3000"}, {"url": "http://localhost:3000", "anchor_text": "http://localhost:3000"}, {"url": "http://localhost:8000/get-journey?start=jurong%20east&end=dhoby%20ghaut&count=3", "anchor_text": "http://localhost:8000/get-journey?start=jurong%20east&end=dhoby%20ghaut&count=3"}, {"url": "http://journey.smrt.com.sg/", "anchor_text": "following website"}, {"url": "http://journey.smrt.com.sg/", "anchor_text": "SMRT Journey Planner"}, {"url": "https://neo4j.com/", "anchor_text": "Neo4j Website"}, {"url": "https://neo4j.com/docs/api/python-driver/4.1/", "anchor_text": "Neo4j Python Driver"}, {"url": "https://material-ui.com/", "anchor_text": "React Material UI"}, {"url": "https://medium.com/tag/programming?source=post_page-----566b1a53670a---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/big-data?source=post_page-----566b1a53670a---------------big_data-----------------", "anchor_text": "Big Data"}, {"url": "https://medium.com/tag/data-science?source=post_page-----566b1a53670a---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/neo4j?source=post_page-----566b1a53670a---------------neo4j-----------------", "anchor_text": "Neo4j"}, {"url": "https://medium.com/tag/database?source=post_page-----566b1a53670a---------------database-----------------", "anchor_text": "Database"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F566b1a53670a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&user=Ng+Wai+Foong&userId=9d91b858f6e4&source=-----566b1a53670a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F566b1a53670a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&user=Ng+Wai+Foong&userId=9d91b858f6e4&source=-----566b1a53670a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F566b1a53670a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----566b1a53670a--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F566b1a53670a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----566b1a53670a---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----566b1a53670a--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----566b1a53670a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----566b1a53670a--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----566b1a53670a--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----566b1a53670a--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----566b1a53670a--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----566b1a53670a--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----566b1a53670a--------------------------------", "anchor_text": ""}, {"url": "https://ngwaifoong92.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://ngwaifoong92.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Ng Wai Foong"}, {"url": "https://ngwaifoong92.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "3.9K Followers"}, {"url": "https://www.linkedin.com/in/wai-foong-ng-694619185/", "anchor_text": "https://www.linkedin.com/in/wai-foong-ng-694619185/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F9d91b858f6e4&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&user=Ng+Wai+Foong&userId=9d91b858f6e4&source=post_page-9d91b858f6e4--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fbd32f6fc28bc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuild-a-subway-journey-planner-using-neo4j-566b1a53670a&newsletterV3=9d91b858f6e4&newsletterV3Id=bd32f6fc28bc&user=Ng+Wai+Foong&userId=9d91b858f6e4&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}