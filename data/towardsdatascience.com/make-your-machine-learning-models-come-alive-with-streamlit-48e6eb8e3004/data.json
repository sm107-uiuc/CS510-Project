{"url": "https://towardsdatascience.com/make-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004", "time": 1683009271.796631, "path": "towardsdatascience.com/make-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004/", "webpage": {"metadata": {"title": "Make your Machine Learning Models Come Alive with Streamlit | by Jeff Hale | Towards Data Science", "h1": "Make your Machine Learning Models Come Alive with Streamlit", "description": "You made a machine learning model. Yippee! \ud83d\ude00 You want folks to be able to use it without firing up a Jupyter notebook. Hmm. \ud83e\udd14 What should you do? You could use Flask to serve your model. Flask is\u2026"}, "outgoing_paragraph_urls": [{"url": "https://flask.palletsprojects.com/", "anchor_text": "Flask", "paragraph_index": 1}, {"url": "https://www.djangoproject.com/", "anchor_text": "Django", "paragraph_index": 1}, {"url": "https://www.streamlit.io/", "anchor_text": "Streamlit", "paragraph_index": 2}, {"url": "https://towardsdatascience.com/coding-ml-tools-like-you-code-ml-models-ddba3357eace", "anchor_text": "paraphrase", "paragraph_index": 4}, {"url": "https://medium.com/u/39dfc90d7a34?source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": "Adrien Treuille", "paragraph_index": 4}, {"url": "https://discuss.streamlit.io/", "anchor_text": "Streamlit community forum", "paragraph_index": 9}, {"url": "https://github.com/streamlit", "anchor_text": "GitHub", "paragraph_index": 9}, {"url": "https://techcrunch.com/2019/10/01/streamlit-launches-open-source-machine-learning-application-development-framework/", "anchor_text": "$6 million USD in seed funding at launch", "paragraph_index": 10}, {"url": "https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller", "anchor_text": "MVC", "paragraph_index": 14}, {"url": "https://altair-viz.github.io/", "anchor_text": "Altair", "paragraph_index": 15}, {"url": "https://matplotlib.org/", "anchor_text": "Matplotlib", "paragraph_index": 15}, {"url": "https://plotly.com/", "anchor_text": "Plotly", "paragraph_index": 15}, {"url": "https://docs.bokeh.org/en/latest/index.html", "anchor_text": "Bokeh", "paragraph_index": 15}, {"url": "https://discuss.streamlit.io/t/plotting-holoviews-plot/215/2?u=discdiver", "anchor_text": "Holoviews", "paragraph_index": 15}, {"url": "https://www.graphviz.org/", "anchor_text": "Graphviz", "paragraph_index": 15}, {"url": "https://deck.gl", "anchor_text": "deck.gl", "paragraph_index": 15}, {"url": "https://docs.streamlit.io/", "anchor_text": "Streamlit docs", "paragraph_index": 28}, {"url": "https://discuss.streamlit.io/", "anchor_text": "here\u2019s", "paragraph_index": 28}, {"url": "https://www.w3schools.com/html/", "anchor_text": "W3 Schools", "paragraph_index": 32}, {"url": "https://altair-viz.github.io/", "anchor_text": "Altair", "paragraph_index": 47}, {"url": "https://docs.mapbox.com/help/glossary/mapbox-gl/", "anchor_text": "Mapbox GL", "paragraph_index": 48}, {"url": "https://getbootstrap.com/", "anchor_text": "Bootstrap", "paragraph_index": 74}, {"url": "https://docs.streamlit.io/en/latest/api.html#streamlit.image", "anchor_text": "st.image()", "paragraph_index": 78}, {"url": "https://docs.streamlit.io/en/latest/api.html#streamlit.video", "anchor_text": "st.video()", "paragraph_index": 80}, {"url": "https://docs.streamlit.io/en/latest/api.html#streamlit.audio", "anchor_text": "st.audio()", "paragraph_index": 82}, {"url": "https://docs.streamlit.io/caching.html", "anchor_text": "caching", "paragraph_index": 84}, {"url": "https://memorablepython.com", "anchor_text": "Python", "paragraph_index": 93}, {"url": "https://memorablesql.com", "anchor_text": "SQL", "paragraph_index": 93}, {"url": "https://dataawesome.com", "anchor_text": "mailing list of awesome data science resources", "paragraph_index": 93}, {"url": "https://medium.com/@jeffhale", "anchor_text": "here", "paragraph_index": 93}, {"url": "https://dataawesome.com", "anchor_text": "https://dataawesome.com", "paragraph_index": 95}], "all_paragraphs": ["You made a machine learning model. Yippee! \ud83d\ude00 You want folks to be able to use it without firing up a Jupyter notebook. Hmm. \ud83e\udd14 What should you do?", "You could use Flask to serve your model. Flask is great lightweight web framework, but it requires knowing about routes and other web things. \ud83d\ude15 Django is a full-service framework, but with a steeper learning curve than Flask. If you just want to serve a model as quickly as possible, what should you use?", "Streamlit to the rescue! With Streamlit you can serve a machine learning model in minutes, without learning a Javascript framework. \ud83d\ude80", "Streamlit is a newish open source library that uses Python and integrates well with common data science libraries. It handles interactivity and visualizations very well.", "To paraphrase co-founder Adrien Treuille, Streamlit apps are Python scripts that treat widgets as variables, can reuse data and computations, and can be developed in a live coding environment. Streamlit is great for rapid development!", "Getting started with Streamlit is as easy as:", "3. Execute streamlit run my_app.py in your terminal.", "Boom! \ud83e\udde8 You\u2019ve created a chart your user can interact with and download!", "Let\u2019s dive into what Streamlit is and isn\u2019t.", "I just have anecdotes here, but read through comments on the Streamlit community forum and issues on GitHub and you\u2019ll see users are really excited about Streamlit. It\u2019s solving a pain point for data scientists. \ud83c\udf89", "Streamlit was officially launched in fall 2019 and has been iterated on quickly. The library is backed by a Silicon Valley venture-funded startup that raised $6 million USD in seed funding at launch.", "Streamlit will give you a single-page app with an optional side bar. You can add one element after another vertically.", "The Streamlit server reruns your script from top to bottom every time. There are no callbacks. Streamlit allows you to cache functions, so that you only re-run code and re-load data when necessary.", "As you saw above, Streamlit comes with batteries included. It plays nicely with the Python data science stack: pandas, NumPy, scikit-learn, TensorFlow, and PyTorch.", "If Javascript frameworks and the Model-view-controller paradigm (MVC) aren\u2019t your things, Streamlit has you covered. You just need Python functions, control flow, and decorators. Sprinkle in some Markdown and HTML/CSS if you want to adjust the formatting.", "Streamlit has uses Altair by default by plotting. It makes it easy to change to other visualization options such as Matplotlib, Plotly, Bokeh, Holoviews, Graphviz, and deck.gl.", "Built-in Streamlit functions make it easy to add checkboxes, dropdown menus, text boxes, and other interactive features. Streamlit treats these widgets as variables, as you\u2019ll see in a moment.", "UPDATED 2021\u201307\u201328: Streamlit will host your app and deploy from GitHub with a few clicks. It\u2019s about the easiest deployment system possible. Streamlit will auto-deploy new versions when you push to the specified GitHub branch. \ud83d\ude0e", "UPDATED 2021\u201307\u201328: Formatting options have improved significantly since this article was written. You can now create multiple columns and control the look and feel of your app far more easily. It\u2019s still not a blank slate, for better and for worse.", "UPDATED 2021\u201307\u201328: Recent Streamlit versions make it far easier to preserve session state. You still don\u2019t have cookie capabilities.", "Now that you\u2019ve seen what Streamlit IS, let\u2019s see what it IS NOT.", "Streamlit is not a fully featured web framework. \ud83d\udd78 There\u2019s no router, so you can\u2019t have multiple pages. There\u2019s no authentication. You can\u2019t add javascript, so popups aren\u2019t happening.", "Streamlit has a fast, coherent release cycle and a history of adding features requested by the community. \ud83c\udf89", "Alright, now that you have the lay of the land, let\u2019s see how to use Streamlit! \u26a1\ufe0f", "To run the code below, install Streamlit into a virtual environment with Python, pandas, NumPy, and Plotly. As of this writing, Streamlit is only on PyPI so you need to pip install it.", "I suggest you set up your web browser and your code editor side-by-side for the best development experience. \ud83d\ude00", "You can rerun your code manually on each update by clicking Rerun in the web app after you change your code. I suggest you set your app to rerun automatically by clicking Always rerun.", "You might need to refresh your webpage or restart your Streamlit server occasionally if the wires really get twisted, but generally, things should just work. \ud83d\udc4d", "If you get stuck, the Streamlit docs are unusually clear. And here\u2019s the community forum.", "Let\u2019s take the 10 key Streamlit functions for a spin.", "With Streamilt installed and a Streamlit server serving your file (streamlit run my_app.py), enter the following code in your text editor and watch the magic happen in your web browser. \ud83d\udc07", "If you don\u2019t see anything, copy the Network URL from the terminal to a web browser window. Or click the Rerun button at the top of your browser window if your Streamlit server is already running. \ud83d\ude09", "Using your browser inspection tool, you can verify that these functions create h1, h2, and h3 HTML tags, respectively. If you need an HTML primer, I suggest heading to W3 Schools. \ud83d\udc4d", "Or skip st.write() if you don\u2019t need special functionality and just type the string alone.", "Like Jupyter notebooks, a value or a variable name by itself will output to the screen. Unlike a Jupyter notebook, the result of a method call will not output anything. You have to save the return value as a variable to display it. \u261d\ufe0f", "For example, the following won\u2019t display anything:", "It bears repeating that Streamlit reruns your code from top to bottom every time you make a change. As you explore Streamlit you will find you don\u2019t want to display everything all the time. Comment out blocks of code to save time and screen real estate. \ud83d\udc4d", "You can use markdown to format your text and add emoji like this:", "You can also add links using Markdown like this:", "We\u2019ll explore other Markdown use cases in a moment.", "Streamlit was built with data scientists in mind. You can output the contents of a pandas DataFrame directly like this:", "The columns are automatically sortable by the user. \ud83c\udf89", "If you want styling enhancements, use st.dataframe() explicitly. For example, you can highlight the minimum value in each column like this:", "Alternatively, you can use st.write() to achieve the same outcome like this:", "st.write() detects the type of object passed to it and adjusts accordingly.", "Now let\u2019s see what Streamlit can do with plots.", "Streamlit makes visualizations a breeze. \ud83d\udca8", "It provides default functions for interactive line, area, and bar, charts. You saw st.line_chart() above. st.bar_chart() and st.area_chart() are similar. They all use the Altair plotting library under the hood.", "There are a number of other top-level functions that wrap plotting libraries, such as st.pyplot() for Matplotlib and st.map() for Mapbox GL. Here\u2019s the code to create a map adopted from the docs:", "Alternatively, you can use your favorite Python plotting library. For example, here\u2019s a geo-visualization adopted from the Plotly docs.", "Note that we added a st.spinner() context block to display a message while our content was loading. \ud83d\udc4d", "Now let\u2019s look at the interactive features that are at the heart of Streamlit.", "Streamlit uses pre-defined functions to create interactive widgets.", "The code to create the widget and variable is just one line!", "Here are seven Streamlit functions you can use to have a user to select something. I include the required arguments and a description for each widget.", "Here are six functions for a user to input or upload something.", "Just pass the interactive function a label that the user will see. Save the return value as a variable and do something with it. It\u2019s that easy! \ud83d\ude00", "Let\u2019s see more about how to use these widgets.", "The widgets are customizable and come with sensible defaults. For example, here\u2019s the st.date_input() widget code:", "You can pass date_input a default value, a minimum value, or a maximum value. Right now, the respective defaults for date_input are today, January 1, 2021, and today plus 10 years.", "Note that no duplicate widgets are allowed. Each widget must be differentiated by the arguments you pass it or else you will get an error. If needed, you can pass a key argument to ensure uniqueness. \ud83d\udc46", "I won\u2019t demo all the widget types here, but let\u2019s look at a few common patterns.", "You\u2019ll often use a checkbox with an if statement. Here\u2019s how to display or hide a DataFrame depending upon whether a user has checked a box.", "Here\u2019s what the output looks like:", "Add any of the widgets to the sidebar with st.sidebar like this:", "Now an expandable sidebar will hold the widget. \ud83d\udc4d", "While most of the widgets have been around for a while, the color picker widget is in beta, and subject to change. Here\u2019s the code:", "Streamlit widgets are a big part of what makes the library so powerful. I encourage you to play with them to see just how cool they are! \ud83d\ude00", "Modifying CSS in Streamlit is possible, but not elegant. You can modify the CSS through use of st.markdown(\"<style> some css goes here </style>\").", "Here\u2019s a basic example to change the color of the text on a section of a page.", "Note the use of triple quotes for multiline CSS. \u261d\ufe0f", "You must use st.markdown() with the keyword argument unsafe_allow_html=True to access the underlying CSS.", "Let\u2019s see how the color picker widget could allow a user to change the background on the page. Here\u2019s the code.", "Note double curly braces {{ }} are needed to escape because of string interpolation. Here\u2019s the color picker in action:", "Streamlit uses Bootstrap for styling, so you have access to Bootstrap classes such as buttons and warnings. For example, here\u2019s how to display a success badge:", "You can try to make a grid layout with Bootstrap, but Streamlit widgets won\u2019t respect the layout, so it\u2019s not a good option. \u2639 \ufe0fA grid layout solution is in the works. \ud83d\ude42", "Here\u2019s the code to remove the remove the hamburger menu and the footer with Made with Streamlit text:", "Let\u2019s see how to display images, videos, and audio files in your Streamlit app.", "You need to import the PIL library to display an image with st.image(). Here\u2019s code you can use to get an image from a user and display it:", "You can specify a width and BGR channel, if necessary.", "Play a video with st.video(). You can play your own video or one on YouTube. Here\u2019s how you play a YouTube video starting at 45 seconds:", "The default video format is mp4, but you can specify another format.", "Play an audio file with st.audio(). You can specify something other than the default wav file type and and pass a start time.", "Caching can save your app users time the second time they load your app. Caching allows your app to avoid reloading the same files and redoing the same calculations.", "Add caching with the @st.cache decorator. Here\u2019s a basic explanation of how Streamlit caching works:", "If this is the first time Streamlit has seen these four components with these exact values and in this exact combination and order, it runs the function and stores the result in a local cache. Then, next time the cached function is called, if none of these components changed, Streamlit will just skip executing the function altogether and, instead, return the output previously stored in the cache.", "Caching can be helpful to speed up the feel of your app, but it can also be tricky and sometimes behaves unexpectedly. \u26a0\ufe0f", "Streamlit makes it easy for users to create a screen recording from the hamburger menu. The Record a screencast option gives users a range of screen options to record. This can be helpful for collaboration. \ud83d\udc4d", "You can easily display the code behind your Streamlit app. Just put the code you want to display within a st.echo() context block like this:", "The output is nicely formatted code that looks like this on the user\u2019s screen:", "Alternatively, if you want to display formatted code but not run it, use st.code() like this:", "Streamlit lets you quickly turn a machine learning model into a basic app. It\u2019s packed with useful features and regularly adds improvements. Streamlit has become a popular self-service tool the data scientist\u2019s toolbox.", "I hope you found this introduction to Streamlit to be helpful. If you did, please share it on your favorite social media so other folks can find it, too. \ud83d\ude00", "I write about Python, SQL, and other tech topics. If any of that\u2019s of interest to you, sign up for my mailing list of awesome data science resources and read more to help you grow your skills here. \ud83d\udc4d", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "I write about data science. Join my Data Awesome mailing list to stay on top of the latest data tools and tips: https://dataawesome.com"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F48e6eb8e3004&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://jeffhale.medium.com/?source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": ""}, {"url": "https://jeffhale.medium.com/?source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": "Jeff Hale"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F451599b1142a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&user=Jeff+Hale&userId=451599b1142a&source=post_page-451599b1142a----48e6eb8e3004---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F48e6eb8e3004&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F48e6eb8e3004&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://flask.palletsprojects.com/", "anchor_text": "Flask"}, {"url": "https://www.djangoproject.com/", "anchor_text": "Django"}, {"url": "https://www.streamlit.io/", "anchor_text": "Streamlit"}, {"url": "https://towardsdatascience.com/coding-ml-tools-like-you-code-ml-models-ddba3357eace", "anchor_text": "paraphrase"}, {"url": "https://medium.com/u/39dfc90d7a34?source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": "Adrien Treuille"}, {"url": "https://discuss.streamlit.io/", "anchor_text": "Streamlit community forum"}, {"url": "https://github.com/streamlit", "anchor_text": "GitHub"}, {"url": "https://techcrunch.com/2019/10/01/streamlit-launches-open-source-machine-learning-application-development-framework/", "anchor_text": "$6 million USD in seed funding at launch"}, {"url": "https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller", "anchor_text": "MVC"}, {"url": "https://altair-viz.github.io/", "anchor_text": "Altair"}, {"url": "https://matplotlib.org/", "anchor_text": "Matplotlib"}, {"url": "https://plotly.com/", "anchor_text": "Plotly"}, {"url": "https://docs.bokeh.org/en/latest/index.html", "anchor_text": "Bokeh"}, {"url": "https://discuss.streamlit.io/t/plotting-holoviews-plot/215/2?u=discdiver", "anchor_text": "Holoviews"}, {"url": "https://www.graphviz.org/", "anchor_text": "Graphviz"}, {"url": "https://deck.gl", "anchor_text": "deck.gl"}, {"url": "https://docs.streamlit.io/", "anchor_text": "Streamlit docs"}, {"url": "https://discuss.streamlit.io/", "anchor_text": "here\u2019s"}, {"url": "https://www.w3schools.com/html/", "anchor_text": "W3 Schools"}, {"url": "https://altair-viz.github.io/", "anchor_text": "Altair"}, {"url": "https://docs.mapbox.com/help/glossary/mapbox-gl/", "anchor_text": "Mapbox GL"}, {"url": "https://getbootstrap.com/", "anchor_text": "Bootstrap"}, {"url": "https://discuss.streamlit.io/t/remove-made-with-streamlit-from-bottom-of-app/1370/3", "anchor_text": "source"}, {"url": "https://docs.streamlit.io/en/latest/api.html#streamlit.image", "anchor_text": "st.image()"}, {"url": "https://docs.streamlit.io/en/latest/api.html#streamlit.video", "anchor_text": "st.video()"}, {"url": "https://docs.streamlit.io/en/latest/api.html#streamlit.audio", "anchor_text": "st.audio()"}, {"url": "https://docs.streamlit.io/caching.html", "anchor_text": "caching"}, {"url": "https://docs.streamlit.io/caching.html", "anchor_text": "docs"}, {"url": "https://memorablepython.com", "anchor_text": "Python"}, {"url": "https://memorablesql.com", "anchor_text": "SQL"}, {"url": "https://dataawesome.com", "anchor_text": "mailing list of awesome data science resources"}, {"url": "https://medium.com/@jeffhale", "anchor_text": "here"}, {"url": "https://dataawesome.com", "anchor_text": ""}, {"url": "https://medium.com/tag/data-science?source=post_page-----48e6eb8e3004---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----48e6eb8e3004---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/technology?source=post_page-----48e6eb8e3004---------------technology-----------------", "anchor_text": "Technology"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----48e6eb8e3004---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/python?source=post_page-----48e6eb8e3004---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F48e6eb8e3004&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&user=Jeff+Hale&userId=451599b1142a&source=-----48e6eb8e3004---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F48e6eb8e3004&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&user=Jeff+Hale&userId=451599b1142a&source=-----48e6eb8e3004---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F48e6eb8e3004&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F48e6eb8e3004&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----48e6eb8e3004---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----48e6eb8e3004--------------------------------", "anchor_text": ""}, {"url": "https://jeffhale.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://jeffhale.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Jeff Hale"}, {"url": "https://jeffhale.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "18K Followers"}, {"url": "https://dataawesome.com", "anchor_text": "https://dataawesome.com"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F451599b1142a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&user=Jeff+Hale&userId=451599b1142a&source=post_page-451599b1142a--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe7ae6804f27a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmake-your-machine-learning-models-come-alive-with-streamlit-48e6eb8e3004&newsletterV3=451599b1142a&newsletterV3Id=e7ae6804f27a&user=Jeff+Hale&userId=451599b1142a&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}