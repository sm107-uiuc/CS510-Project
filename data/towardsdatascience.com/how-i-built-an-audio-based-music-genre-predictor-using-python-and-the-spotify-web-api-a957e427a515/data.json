{"url": "https://towardsdatascience.com/how-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515", "time": 1683002553.451958, "path": "towardsdatascience.com/how-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515/", "webpage": {"metadata": {"title": "How I built an Audio-Based Music Genre Predictor using Python and the Spotify Web API | by Christian Lomboy | Towards Data Science", "h1": "How I built an Audio-Based Music Genre Predictor using Python and the Spotify Web API", "description": "Odds are you\u2019re probably subscribed to some sort of popular music streaming service. Whether it\u2019s Spotify or Apple Music, you\u2019ve likely been exposed to an application of music information retrieval\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/christianlomboy/MIR-Genre-Predictor", "anchor_text": "GitHub", "paragraph_index": 2}, {"url": "https://developer.spotify.com/documentation/web-api/", "anchor_text": "web API", "paragraph_index": 5}, {"url": "https://spotipy.readthedocs.io/en/latest/", "anchor_text": "Spotipy Python library", "paragraph_index": 5}, {"url": "https://en.wikipedia.org/wiki/Decision_tree_learning", "anchor_text": "Decision tree learning Wikipedia article", "paragraph_index": 14}, {"url": "https://scikit-learn.org/stable/index.html", "anchor_text": "scikit-learn", "paragraph_index": 16}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html", "anchor_text": "train-test-split function", "paragraph_index": 16}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html", "anchor_text": "decision tree classifier", "paragraph_index": 16}, {"url": "https://elitedatascience.com/overfitting-in-machine-learning#how-to-prevent", "anchor_text": "how to avoid overfitting", "paragraph_index": 19}, {"url": "https://scikit-learn.org/stable/modules/ensemble.html#bagging", "anchor_text": "bagging", "paragraph_index": 20}], "all_paragraphs": ["Odds are you\u2019re probably subscribed to some sort of popular music streaming service. Whether it\u2019s Spotify or Apple Music, you\u2019ve likely been exposed to an application of music information retrieval. Consider this \u2014 when building a playlist using Spotify, the app will give you song suggestions based on your previously added songs or your playlist title. In Apple Music, you\u2019ll see mixes curated just for you based on your previous listening history. There\u2019s no magic going on behind the scenes here. (well, maybe you, Apple \u2014 we have no idea what goes on in Apple Park\u2019s magical kingdom) These examples are popular applications powered by music information retrieval.", "Music information retrieval is the science of analyzing and categorizing musical data. Some applications of MIR are closely related with the field of data science, while also combining several fields such as psychoacoustics, signal processing, machine learning, and computational intelligence.", "In this article, I\u2019ll be giving a high-level walk-through of one application of MIR: genre prediction. Built in Python, this whole project contains two classifier models that predict a song\u2019s genre. Both models are exposed to various data points gathered from a bunch of songs. The first model predicts a song\u2019s genre based on its lyrics. The second model predicts a song\u2019s genre based on its audio attributes, or how it sounds. We will be focusing on the second audio-based model, but feel free to check out the whole project on GitHub! Let\u2019s get started.", "My work here is heavily inspired by my love for music and the many applications of MIR I\u2019ve been exposed to. I\u2019m always looking for new music, and I\u2019ve discovered a ton of artists thanks to Spotify and Apple Music\u2019s recommendations.", "In order to begin building a classifier, we need data \u2014 and lots of it. For classifiers, it is not only better to teach them how to fish; it is required. We need to feed them a ton of data in order for them to make accurate class label assignments.", "Our classifier will be making predictions based on how songs sound. Luckily, Spotify has a particularly useful web API we can utilize to get the data we need. In this project, we will access Spotify\u2019s song data using the Spotipy Python library. This lightweight Python library supports all of the features of Spotify\u2019s Web API. By using Spotipy, we can retrieve various data points of any given song, as shown below.", "There are quite a few data points we can take into consideration when predicting a song\u2019s genre. Just by looking at the example provided above, we can tell that the hip-hop song by Empire Cast has a higher degree of danceability than the two punk/metal songs above it. The degree of speechiness is higher as well, which isn\u2019t surprising. Punk/metal songs have lyrics that are often screamed or shouted over noisy instruments, making them harder to understand, while hip-hop songs contain lyrics that are sung or rapped alongside rhythmic instrumentals that hardly ever get in the way.", "In order to get a sufficient amount of song data, I started off by importing two data sets from Kaggle and Ranker. Both data sets contain tens of thousands of songs, along with their associated genres. To get the audio attributes for these songs, I created a function that runs through both data sets, stopping at each song to search for the song\u2019s audio attributes. Thanks to Spotipy, I was able to get plenty of data to train these models.", "As shown in the above example, we were able to get one small insight into a handful of gathered songs. However, the songs shown above are not even a fraction of a percentage of the amount of songs in the entire data set, so we must not make any assumptions yet. In order to reach a conclusion regarding the nature of each genre\u2019s audio attributes, we must conduct an exploratory data analysis, or EDA.", "EDAs allow us to summarize a data set\u2019s main characteristics. It is the process that allows data scientists to become acquainted with their data, gathering key understandings regarding the nature of the data being experimented on. It is also used to check the quality of the data; whether or not our experiment will yield any meaningful results.", "Beginning my EDA, I first grouped the songs by genre, then found each audio attribute\u2019s numerical average. Next, I normalized the data set\u2019s attributes to gain a better understanding of the differences between each genre\u2019s audio features. I used a variance threshold function to find the variance between each genre\u2019s audio attribute, then listed the variances in a row to be shown at the bottom of the dataframe. Once added, I sorted the columns in descending order by variance. I ended up with a dataframe that showed me the average audio attribute for each genre, and which attributes had the most similarities and differences between genres.", "Judging by the dataframe shown above, we can now make some key assumptions regarding the data set. Instrumentalness, acousticness, and speechiness have the highest variances between each genre, while time signature, key, and tempo have the lowest variances. Intuitively this makes sense, especially when we consider the example shown in section one of this article. Punk/metal has very high instrumentalness due to the usual presence of screaming guitars, heavy bass, misunderstood lyrics, and thunderous drums. Hip-hop has very low instrumentalness due to the usual presence of electronic beats and synth basses. Country/folk/rock lies somewhere in between.", "What are some other ways you can apply your musical intuition to the results shown above?", "A decision tree, a popular tool in the field of machine learning, uses its tree-like structure to make decisions.", "Above is an image found on the Decision tree learning Wikipedia article. This tree references the movie Titanic to give us an intuitive example of how decision trees work.", "The audio-based classifier will utilize decision trees by making predictions determined by each of the tree\u2019s leaves. For instance, one leaf may have a statement such as \u201cis acousticness > 0.5?\u201d which it will then decide whether the song in question is predicted to be a hip-hop song or a punk/metal song. Now, the songs in our data set surely have more attributes than the people on the Titanic did, so our tree will look much more complex than the tree listed above. Above, we see that there are only three attributes the decision tree is taking into consideration. Our songs have 12 attributes. These attributes are what the decision tree bases its predictions off of, so it makes sense that the tree will be a lot bigger \u2014 not to mention the enormous amount of songs we will be feeding into it.", "I chose to use scikit-learn\u2019s Python tools \u2014 specifically the train-test-split function and the decision tree classifier. When building a classifier, the first step we must take is called fitting the classifier. We can think of fitting as exposing the classifier to data and telling it which classification it belongs to.", "It\u2019s pretty similar to the idea of studying. When studying for tests, you\u2019re exposed to a lot of information that you must remember when it comes time to take the test. The key here (this is important) is that on the test, you will see problems you must solve that you have never seen before \u2014 but these problems have similarities to the ones you studied before taking the test. Using what you know about the problems you\u2019ve studied, you solve these test problems to the best of your ability, hoping that you get a good exam grade in the end.", "When fitting the decision tree classifier, its decision tree leaves are generated by the data its exposed to. After fitting, we can then test the classifier by exposing it to data it has never seen before, hoping it makes accurate predictions.", "I built my decision tree classifier by splitting up the entire data set into 70% training and 30% testing data. I also decided to drop two audio attributes from consideration, as the difference between genres was too little. I made these decisions after researching how to avoid overfitting.", "Before fitting, I utilized a method called bagging to further optimize the classifier. Bagging essentially takes your initial classifier, creates a bunch of copies of it, then trains them on random subsets of the original data set. All their averages are taken after training, resulting in one single averaged classifier. Bagging introduces randomization in the construction of classifiers, making it a great way to improve a single complex tree classifier.", "Now to finally fit and test the classifier. We run a simple scoring function to see how the classifier performs when exposed to data it hasn\u2019t seen before.", "Not bad \u2014 a score of just under 80%. Let\u2019s feed it some songs and see it in action; songs by Paul Mccartney, Drake, and Title Fight.", "All three predictions are correct! Science, baby.", "Data science is a huge field. It\u2019s one of the reasons I love it so much. It allows me to combine my computer science skills with my passion for music, and the MIR field offers a perfect playground for me to gain musical insight while also further developing my skills.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fa957e427a515&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----a957e427a515--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a957e427a515--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@christian.lomboy?source=post_page-----a957e427a515--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@christian.lomboy?source=post_page-----a957e427a515--------------------------------", "anchor_text": "Christian Lomboy"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd366b7a3f9f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&user=Christian+Lomboy&userId=d366b7a3f9f5&source=post_page-d366b7a3f9f5----a957e427a515---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa957e427a515&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa957e427a515&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@agebarros?utm_source=medium&utm_medium=referral", "anchor_text": "Ag\u00ea Barros"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://github.com/christianlomboy/MIR-Genre-Predictor", "anchor_text": "GitHub"}, {"url": "https://developer.spotify.com/documentation/web-api/", "anchor_text": "web API"}, {"url": "https://spotipy.readthedocs.io/en/latest/", "anchor_text": "Spotipy Python library"}, {"url": "https://en.wikipedia.org/wiki/File:CART_tree_titanic_survivors.png", "anchor_text": "Stephen Milborrow on Wikipedia"}, {"url": "https://en.wikipedia.org/wiki/Titanic", "anchor_text": "Titanic"}, {"url": "https://en.wikipedia.org/wiki/Decision_tree_learning", "anchor_text": "Decision tree learning Wikipedia article"}, {"url": "https://scikit-learn.org/stable/index.html", "anchor_text": "scikit-learn"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html", "anchor_text": "train-test-split function"}, {"url": "https://scikit-learn.org/stable/modules/generated/sklearn.tree.DecisionTreeClassifier.html", "anchor_text": "decision tree classifier"}, {"url": "https://elitedatascience.com/overfitting-in-machine-learning#how-to-prevent", "anchor_text": "how to avoid overfitting"}, {"url": "https://scikit-learn.org/stable/modules/ensemble.html#bagging", "anchor_text": "bagging"}, {"url": "https://github.com/christianlomboy/MIR-Genre-Predictor", "anchor_text": "GitHub project link"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----a957e427a515---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----a957e427a515---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----a957e427a515---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/tag/python?source=post_page-----a957e427a515---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/music?source=post_page-----a957e427a515---------------music-----------------", "anchor_text": "Music"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa957e427a515&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&user=Christian+Lomboy&userId=d366b7a3f9f5&source=-----a957e427a515---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa957e427a515&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&user=Christian+Lomboy&userId=d366b7a3f9f5&source=-----a957e427a515---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa957e427a515&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a957e427a515--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fa957e427a515&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----a957e427a515---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----a957e427a515--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----a957e427a515--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----a957e427a515--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----a957e427a515--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----a957e427a515--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----a957e427a515--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----a957e427a515--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----a957e427a515--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@christian.lomboy?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@christian.lomboy?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Christian Lomboy"}, {"url": "https://medium.com/@christian.lomboy/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "13 Followers"}, {"url": "https://www.linkedin.com/in/christianlomboy/", "anchor_text": "https://www.linkedin.com/in/christianlomboy/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd366b7a3f9f5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&user=Christian+Lomboy&userId=d366b7a3f9f5&source=post_page-d366b7a3f9f5--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2Fd366b7a3f9f5%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-i-built-an-audio-based-music-genre-predictor-using-python-and-the-spotify-web-api-a957e427a515&user=Christian+Lomboy&userId=d366b7a3f9f5&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}