{"url": "https://towardsdatascience.com/how-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f", "time": 1683015660.5412102, "path": "towardsdatascience.com/how-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f/", "webpage": {"metadata": {"title": "How to code Logistic Regression from scratch with NumPy | by Dorian Lazar | Towards Data Science", "h1": "How to code Logistic Regression from scratch with NumPy", "description": "There are many ways to define a loss function and then find the optimal parameters for it, among them, here we will implement in our LogisticRegression class the following 3 ways for learning the\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.kaggle.com/ronitf/heart-disease-uci", "anchor_text": "Kaggle", "paragraph_index": 21}, {"url": "https://www.kaggle.com/dorianlazar/predictions-with-logistic-regression-from-scratch", "anchor_text": "Kaggle", "paragraph_index": 24}, {"url": "https://www.nablasquared.com/how-to-implement-logistic-regression-with-numpy/", "anchor_text": "here", "paragraph_index": 26}, {"url": "https://www.nablasquared.com/", "anchor_text": "https://www.nablasquared.com/", "paragraph_index": 28}], "all_paragraphs": ["What\u2019s our plan for implementing Logistic Regression in NumPy?", "Let\u2019s first think of the underlying math that we want to use.", "There are many ways to define a loss function and then find the optimal parameters for it, among them, here we will implement in our LogisticRegression class the following 3 ways for learning the parameters:", "In the above equations, X is the input matrix that contains observations on the row axis and features on the column axis; y is a column vector that contains the classification labels (0 or 1); f is the sum of squared errors loss function; h is the loss function for the MLE method.", "To find out more about the above methods check out this article:", "So, this is our goal: translate the above equations into code. And we\u2019ll use NumPy for that.", "We plan to use an object-oriented approach for implementation. We\u2019ll create a LogisticRegression class with 3 public methods: fit(), predict(), and accuracy().", "Among fit\u2019s parameters, one will determine how our model learns. This parameter is named method (not to be confused with a method as a function of a class) and it can take the following strings as values: \u2018ols_solve\u2019 (OLS stands for Ordinary Least Squares), \u2018ols_sgd\u2019, and \u2018mle_sgd\u2019.", "To not make the fit() method too long, we would like to split the code into 3 different private methods, each one responsible for one way of finding the parameters.", "We will have the __ols_solve() private method for applying the closed-form formula.", "In this method and in the other methods that use the OLS approach, we will use the constant EPS to make sure the labels are not exactly 0 or 1, but something in between. That\u2019s to avoid getting plus or minus infinity for the logarithm in the equations above.", "In __ols_solve() we first check if X has full column rank so that we can apply this method. Then we force y to be between EPS and 1-EPS. The ols_y variable holds the labels of the ordinary least-squares linear regression problem that\u2019s equivalent to our logistic regression problem. Basically, we transform the labels that we have for logistic regression so that they are compliant with the linear regression equations. After that, we apply the closed-form formula using NumPy functions.", "For the 2 SGD-based algorithms, it would be redundant to have them as 2 separate methods since they will have almost all the code the same except for the part where we compute the gradient, as we have 2 different gradient formulas for them.", "What we\u2019ll do is to create a generic __sgd() method that does not rely on a particular way of computing the gradient. Instead, it will expect as a parameter a function responsible for computing the gradient which the __sgd() method will use.", "In this method, we first initialize the weights to a random column vector with values drawn from a normal distribution with mean 0 and a standard deviation of 1/(# of features). The intuition for this std dev is that if we have more features, then we need smaller weights to be able to converge (and not blow up our gradients). Then we go through all the dataset for iterations times. At the start of each such iteration, we randomly shuffle our dataset, then for each batch of data, we compute the gradient and update the weights.", "For \u2018ols_sgd\u2019 and \u2018mle_sgd\u2019 we\u2019ll create 2 private methods: __sse_grad() and __mle_grad() that compute and return the gradient for these 2 different techniques.", "For these 2 methods, we simply apply the formulas for \u2207f and \u2207h using NumPy.", "In predict() we first check if fit() was called previously by looking for the weights attribute (the fit method is the only method that creates it). Then we check if the shapes of the input matrix x and weights vector allow multiplication. Otherwise, return error messages. If everything is OK, we do the multiplication and pass the result through the logistic function.", "In accuracy() we make predictions using the above method. Then check if the shape of the predictions matches that of the true labels, otherwise, we show an error message. After that we make sure that both predictions and the true labels have values of either 0 or 1 by a simple rule: if the value is >= 0.5 consider it a 1, otherwise a 0.", "To compute the accuracy, we check for equality between y and y_hat. This will return a vector of Boolean values. Then cast these Booleans to float (False becomes 0.0, and True becomes 1.0). Then, the accuracy is simply the mean of these values.", "Here is the full code of the LogisticRegression class:", "Now, we would like to test our LogisticRegression class with some real-world data. For that, we will use this heart disease dataset from Kaggle. You can read more about this dataset on Kaggle, but the main idea is to predict the \u201ctarget\u201d column (which is 0 if healthy or 1 if has heart disease) based on the others.", "Below is the code which shows our LogisticRegression class in action (cells 1 & 2 are not shown below to avoid repetition; it was shown in the code snippet above).", "As you can see, we were able to obtain a decent 80%+ accuracy both in training and testing with our from-scratch implementation.", "You can see the full notebook on Kaggle.", "I hope you found this information useful and thanks for reading!", "This article is also posted on my own website here. Feel free to have a look!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Passionate about Data Science, AI, Programming & Math | Owner of \u2207\u00b2 https://www.nablasquared.com/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd33c46d08b7f&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://dorianlazar.medium.com/?source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": ""}, {"url": "https://dorianlazar.medium.com/?source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": "Dorian Lazar"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F79574042e17b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&user=Dorian+Lazar&userId=79574042e17b&source=post_page-79574042e17b----d33c46d08b7f---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd33c46d08b7f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd33c46d08b7f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/understanding-logistic-regression-81779525d5c6", "anchor_text": "Understanding Logistic RegressionThe math of this method explained in detailtowardsdatascience.com"}, {"url": "https://www.kaggle.com/ronitf/heart-disease-uci", "anchor_text": "Kaggle"}, {"url": "https://www.kaggle.com/dorianlazar/predictions-with-logistic-regression-from-scratch", "anchor_text": "Kaggle"}, {"url": "https://www.nablasquared.com/how-to-implement-logistic-regression-with-numpy/", "anchor_text": "here"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----d33c46d08b7f---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----d33c46d08b7f---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d33c46d08b7f---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----d33c46d08b7f---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/logistic-regression?source=post_page-----d33c46d08b7f---------------logistic_regression-----------------", "anchor_text": "Logistic Regression"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd33c46d08b7f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&user=Dorian+Lazar&userId=79574042e17b&source=-----d33c46d08b7f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd33c46d08b7f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&user=Dorian+Lazar&userId=79574042e17b&source=-----d33c46d08b7f---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd33c46d08b7f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd33c46d08b7f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d33c46d08b7f---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d33c46d08b7f--------------------------------", "anchor_text": ""}, {"url": "https://dorianlazar.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://dorianlazar.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Dorian Lazar"}, {"url": "https://dorianlazar.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "593 Followers"}, {"url": "https://www.nablasquared.com/", "anchor_text": "https://www.nablasquared.com/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F79574042e17b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&user=Dorian+Lazar&userId=79574042e17b&source=post_page-79574042e17b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F9fdaa579c06&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fhow-to-code-logistic-regression-from-scratch-with-numpy-d33c46d08b7f&newsletterV3=79574042e17b&newsletterV3Id=9fdaa579c06&user=Dorian+Lazar&userId=79574042e17b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}