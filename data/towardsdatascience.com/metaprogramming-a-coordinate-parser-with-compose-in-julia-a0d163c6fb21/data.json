{"url": "https://towardsdatascience.com/metaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21", "time": 1683005660.753134, "path": "towardsdatascience.com/metaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21/", "webpage": {"metadata": {"title": "Metaprogramming A Coordinate Parser With Compose In Julia | by Emma Boudreau | Towards Data Science", "h1": "Metaprogramming A Coordinate Parser With Compose In Julia", "description": "Inside of the Julia machine-learning package dynasty, there is a particularly large lack of good plotting libraries. Fortunately, I am a short way from releasing the first version of my graphing\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["Inside of the Julia machine-learning package dynasty, there is a particularly large lack of good plotting libraries. Fortunately, I am a short way from releasing the first version of my graphing library for Julia, Hone.jl. Hone is pretty cool because it uses both a unique and functional approach to object-oriented programming and also some really cool meta-programming.", "The vision I have for the outcome of this project is object-oriented graphing in a functional language. The reason I would want to do this is to combine functions with mutable data on a per-object basis. What would be great about this idea is that you could combine objects together in order to make an entirely custom plotting experience. If we were to create all of the objects separately, it would be impossible to combine them into one vector graphic with compose. Instead, I want to use meta-programming to carry metadata from one object to the next so it can be transferred in a string on command.", "In order to bring the object-oriented paradigm into Julia, I used a method that I am familiar with from my work on Lathe.jl, which you can read more about", "In order to have this work, we\u2019ll need to create a function that constructs an unnamed type with both data and functions. In Julia, we can do that by adding this phrase to our function in order to return an object that contains our method as data stored inside of the object.", "And we can simply add this phrase into our function after defining the data we want to put into the type.", "One thing to note about using this method is that type assignment inside of Julia\u2019s evaluation will create a box to contain data, rather than creating an object that contains the data. This is both a blessing and a curse, as we won\u2019t be able to tell the type of the object in any other way but the data that it carries. In order to mitigate this exact issue, I decided to go Meta.", "If there is one thing that is handled absolutely incredibly in Julia, it would have to be meta-programming. Meta-programming is programming using data as syntactical code. In order to do so in Julia, you actually don\u2019t need to import anything like you used to anymore. Now instead of doing,", "you can just simply use the package meta. I like this because it keeps Julia\u2019s segmentation. When meta-programming in Julia, you really only need two methods that are relatively straightforward. Firstly, you will need to run your code through the meta parser in order to turn it into an expression. An expression is a type in Julia that is able to be easily evaluated by the eval method. Julia does this by making expressions in the symbol type and using the code inside of it as data.", "A great way to plan a project is to first outline all of the components that will be working together to create the end result. First and foremost is the object, which for the first incarnation I will be using a standard circle. On top of that, the object is going to need to be able to store metadata, which unfortunately will likely need to be modified so must be mutable. Another core component will be the object that the circle is combined into, the plot itself. This is where another key piece to the puzzle will also reside, the coordinate parser. The coordinate parser will need to take data from a provided array and combine that with metadata contained within our object.", "As I stated prior, I want to make a simple circle for my first object. Here is the code we can use to make a circle using compose:", "In compose, a context is just a centralized node for a composition that all of the objects in that composition adhere to. We can write this composition into the initialization function for our object:", "This will output a new object that only stores the data composition, but with a simple add-in, we can add the ability to show our composition:", "Now we can use Circle.show() in order to show our circle.", "Another cool thing I would like to add is the ability to view a tree of all connected graphics in this composition. To do this, we\u2019ll just use the introspect() method in the same manner as before:", "Here we see our composition, which connects to our context node and then our shape. The composition is labeled with the peach dot in this tree-view. Now that we have the basics done with, we should add the meta side of this project to our new object.", "To understand what we need to accomplish on the meta side of things, I wrote out a string containing precisely what we want after running data through the percentage calculator, which will come into play inside of the parser.", "Ran it through the meta-parser and then evaluated it.", "Our goal is to automate the creation of that string.", "What I decided to do is create a called update() function as a child of our type.", "In order to update the value of x and y with data coming in from the scatterplot's parser, the update function takes an x and y and updates the meta-tag. This might seem like the correct way to do this, but there is a small issue we will run into as a result of this code.", "The easiest, but most important part of our scatter object would have to be the coordinate parser. First, the coordinate parser will have to calculate the percentages of each number based on the highest value inside of the coordinate plane. A lot of graphics APIs actually do this, where the screen is divided into percentage points and scaling is done by dividing a position by the resolution to get an accurate placement on the screen. We can do this by getting the maximum of our two coordinate planes:", "Then we can do a quick iterative loop to scale the values to percentages.", "In the future, it might make more sense to combine this with the parser, as this is an extra iterative loop (that we can\u2019t put on a thread) getting in the way. For the iterative parsing, zip certainly seems like the simplest option.", "Now that we have a general census of all elements involved, we can put them all together. We\u2019ll set up our scatter method with our coordinate parser,", "and the meta tags that go along with each of them. After creating our object and running it through the scatter function, we are greeted with this return:", "So obviously we have an issue, and it does well to describe the problem with keeping immutable data in an unnamed type. If we return to our parser function and comment out the eval() method, we can see the parsed meta-tag that is throwing this error.", "The data stored inside of our \u201c class\u201d is placed into a Julia.Core.Box, which is a pretty big negative given that we want \u201c unboxed data.\u201d However, there is light at the end of the tunnel. When we call the shape.update() method inside of our coordinate parser, the data inside of the object, which can only be mutated privately, is changed and then read in the next line. A way that we could obtain our data using this function without accessing it from the object is to use a return.", "To test this, I first created our standard issue shape like we have before:", "Then went back and modified the object to return a meta-tag. I had to make the variable first because otherwise, we would get a return of a string on the regular function.", "Doing this test revealed that using a return did, in fact, fix the issue, but now there is the issue of the return, and to solve that issue I figured it would be best to use a simple conditional. Here is the improvement I made to the update function:", "\u201c bravo\u201d is a bool-type that keeps track of whether or not we are updating the tag so we can determine whether or not we want to return the tag. A great way to think of this is to think of \u201c bravo\u201d as the \u201c on\u201d light for the function. If bravo is true, then the update() function is running \u2014 which is the only time we need this return.", "And now our expression looks good!", "Well, sort of\u2026 The keen-eyed among us may have noticed that these circles are being multiplied, not added into the context, fortunately, that issue shouldn\u2019t take too long to fix. Unfortunately, however, it will have to wait for a part two! In the next part, I plan to add guidelines for each quartile as an object, as well as text objects. What\u2019s really impressive is how expressive you can be with metaprogramming in Julia.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fa0d163c6fb21&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://emmettgb.medium.com/?source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": "Emma Boudreau"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c----a0d163c6fb21---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa0d163c6fb21&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa0d163c6fb21&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://juliacomputing.com/", "anchor_text": "https://juliacomputing.com/"}, {"url": "https://github.com/emmettgb/Emmetts-DS-NoteBooks/blob/master/Julia/Metaprogramming%20Compose%20Graphics.ipynb", "anchor_text": "(the notebook)"}, {"url": "https://towardsdatascience.com/how-im-using-functional-oop-for-machine-learning-533c1d764628", "anchor_text": "How I\u2019m Using FUNCTIONAL OOP For Machine-LearningHow and why i\u2019m applying the object-oriented paradigm to Julia machine-learning.towardsdatascience.com"}, {"url": "https://www.pikrepo.com/fprqp/brown-piece-of-puzzle", "anchor_text": "https://www.pikrepo.com/fprqp/brown-piece-of-puzzle"}, {"url": "http://twitter.com/threads", "anchor_text": "@threads"}, {"url": "http://twitter.com/threads", "anchor_text": "@threads"}, {"url": "https://medium.com/tag/programming?source=post_page-----a0d163c6fb21---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/julia?source=post_page-----a0d163c6fb21---------------julia-----------------", "anchor_text": "Julia"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----a0d163c6fb21---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----a0d163c6fb21---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa0d163c6fb21&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&user=Emma+Boudreau&userId=ea170050148c&source=-----a0d163c6fb21---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fa0d163c6fb21&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&user=Emma+Boudreau&userId=ea170050148c&source=-----a0d163c6fb21---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fa0d163c6fb21&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fa0d163c6fb21&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----a0d163c6fb21---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----a0d163c6fb21--------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Emma Boudreau"}, {"url": "https://emmettgb.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "4.6K Followers"}, {"url": "https://twitter.com/emmettboudgie", "anchor_text": "https://twitter.com/emmettboudgie"}, {"url": "https://github.com/emmettgb", "anchor_text": "https://github.com/emmettgb"}, {"url": "https://ems.computer/", "anchor_text": "https://ems.computer/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff16bf42bb45f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fmetaprogramming-a-coordinate-parser-with-compose-in-julia-a0d163c6fb21&newsletterV3=ea170050148c&newsletterV3Id=f16bf42bb45f&user=Emma+Boudreau&userId=ea170050148c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}