{"url": "https://towardsdatascience.com/designing-intelligent-python-dictionaries-cc138ac3f197", "time": 1682993164.481075, "path": "towardsdatascience.com/designing-intelligent-python-dictionaries-cc138ac3f197/", "webpage": {"metadata": {"title": "Designing Intelligent Python Dictionaries | by Chaitanya Baweja | Towards Data Science", "h1": "Designing Intelligent Python Dictionaries", "description": "A quick guide for designing smart, user-friendly Python Dictionaries. It provides several ways in which we can deal with key errors in Python Dictionaries."}, "outgoing_paragraph_urls": [{"url": "https://www.w3schools.com/python/python_dictionaries.asp", "anchor_text": "Dictionaries in Python", "paragraph_index": 2}, {"url": "https://wiki.python.org/moin/KeyError", "anchor_text": "key errors", "paragraph_index": 6}, {"url": "https://www.w3schools.com/python/ref_dictionary_get.asp", "anchor_text": "here", "paragraph_index": 9}, {"url": "https://realpython.com/python-conditional-statements/", "anchor_text": "conditional statements", "paragraph_index": 16}, {"url": "https://docs.python.org/3/library/difflib.html", "anchor_text": "difflib", "paragraph_index": 22}, {"url": "https://docs.python.org/3/library/difflib.html#difflib.SequenceMatcher", "anchor_text": "SequenceMatcher", "paragraph_index": 25}, {"url": "https://docs.python.org/3/library/difflib.html#difflib.get_close_matches", "anchor_text": "get_close_matches", "paragraph_index": 25}, {"url": "https://towardsdatascience.com/your-guide-to-natural-language-processing-nlp-48ea2511f6e1", "anchor_text": "NLPs", "paragraph_index": 41}], "all_paragraphs": ["Last week while working on a hobby project, I encountered a very interesting design problem:", "How do you deal with wrong user input?", "Dictionaries in Python represent pairs of keys and values. For example:", "What happens when you try to access a key which is not present?", "KeyError occurs whenever a dict() object is requested value for a key that is not present in the dictionary.", "This error becomes extremely common when you take user input. For example:", "This tutorial provides several ways in which we can deal with key errors in Python Dictionaries.", "We will work our way towards building an intelligent python dictionary that can deal with a variety of typos in user input.", "A very lazy method would be to return a default value whenever the requested key is not present. This can be done using the get() method:", "You can read more about the get() method here.", "Let\u2019s suppose you have a dictionary containing country-specific population data. The code will ask the user for a country name and would print its population.", "But, let\u2019s say the user types input as \u2018france\u2019. Currently, in our dictionary all keys have first letter in Capital. What will be the output?", "As \u2018france\u2019 is not a key in the dictionary, we receive an error.", "A simple workaround: store all country names in lower-case letters.", "Also, convert whatever input the user types to lower-case.", "But, now let\u2019s say the user enters \u2018Frrance\u2019 instead of \u2018France\u2019. How can we deal with this?", "One way would be to use conditional statements.", "We check if the given user_input is available as a key. If it is not available, then we print a message.", "It\u2019s best to put this in a loop and break on a special flag input like exit.", "The loop will run in continuation until the user enters exit .", "While the above method \u2018works\u2019, it\u2019s not the \u2018intelligent method\u2019 that we promised in the intro.", "We want our program to be robust, and to detect simple typos like frrance and chhina (very similar to google search).", "After some research, I was able to find a couple of libraries that could suit our purpose. My favorite is the standard python library: difflib.", "difflib can be used to compare files, strings, lists etc and produce difference information in various formats.", "The module provides a variety of classes and functions for comparing sequences.", "We will use two features from difflib: SequenceMatcher and get_close_matches.", "Let\u2019s take a brief look at both of them. You can skip to the next section if you are only curious about the application.", "SequenceMatcher class is used to compare two sequences. We define its object as follows:", "Let\u2019s use SequenceMatcher to compare two strings chinna and china:", "In the code above, we used the ratio() method.", "ratio returns a measure of the sequences\u2019 similarity as a float in the range [0, 1].", "Now, we have a way of comparing two strings based on similarity.", "But, what happens if we wish to find all the strings(stored in a database) that are similar to a particular string.", "get_close_matches() returns a list containing the best matches from a list of possibilities.", "The best n matches among the possibilities are returned in a list, sorted by similarity score, most similar first.", "Let\u2019s take a look at an example:", "Now that we have the difflib at our disposal, let\u2019s bring everything together and build a typo-proof python dictionary.", "We have to focus on the case when the Country_name given by the user is not present in population_dict.keys() . In this case, we try to find a country with a similar name to user input and output its population.", "The final code will need to account for some other cases. For example, if there is no similar string or confirming from user if this is the string that they require. Take a look:", "The goal of this tutorial was to provide you with a guide towards building dictionaries that are robust to user input.", "We looked at ways to deal with a variety of errors like type-case errors and small typos.", "We can build further on this and look at a variety of other applications. Example: Using NLPs to better understand user input and bring nearby results in search engines.", "Hope you found this tutorial useful!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Machine Learning Engineer | Python | Data Analytics | Economics | Physics"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fcc138ac3f197&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----cc138ac3f197--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----cc138ac3f197--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@chaitanyabaweja1?source=post_page-----cc138ac3f197--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@chaitanyabaweja1?source=post_page-----cc138ac3f197--------------------------------", "anchor_text": "Chaitanya Baweja"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd68a2ae83525&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&user=Chaitanya+Baweja&userId=d68a2ae83525&source=post_page-d68a2ae83525----cc138ac3f197---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcc138ac3f197&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcc138ac3f197&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@aaronburden?utm_source=medium&utm_medium=referral", "anchor_text": "Aaron Burden"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://www.w3schools.com/python/python_dictionaries.asp", "anchor_text": "Dictionaries in Python"}, {"url": "https://wiki.python.org/moin/KeyError", "anchor_text": "KeyError"}, {"url": "https://wiki.python.org/moin/KeyError", "anchor_text": "key errors"}, {"url": "https://imgur.com/gallery/ioHfqHA", "anchor_text": "Imgur"}, {"url": "https://www.w3schools.com/python/ref_dictionary_get.asp", "anchor_text": "here"}, {"url": "https://giphy.com/gifs/hqg-effects-autocorrect-O4EChIxazzrHi", "anchor_text": "Giphy"}, {"url": "https://realpython.com/python-conditional-statements/", "anchor_text": "conditional statements"}, {"url": "https://giphy.com/gifs/dumb-dummy-i-feel-h8HmN0UcEKR0xWnv3R/links", "anchor_text": "Giphy"}, {"url": "https://docs.python.org/3/library/difflib.html", "anchor_text": "difflib"}, {"url": "https://docs.python.org/3/library/difflib.html#difflib.SequenceMatcher", "anchor_text": "SequenceMatcher"}, {"url": "https://docs.python.org/3/library/difflib.html#difflib.get_close_matches", "anchor_text": "get_close_matches"}, {"url": "https://unsplash.com/@ripato?utm_source=medium&utm_medium=referral", "anchor_text": "Ricardo Gomez Angel"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://towardsdatascience.com/your-guide-to-natural-language-processing-nlp-48ea2511f6e1", "anchor_text": "NLPs"}, {"url": "https://www.w3schools.com/python/python_dictionaries.asp", "anchor_text": "Introduction to Python Dictionaries"}, {"url": "https://docs.python.org/3/library/difflib.html", "anchor_text": "difflib"}, {"url": "https://medium.com/tag/programming?source=post_page-----cc138ac3f197---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----cc138ac3f197---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/python?source=post_page-----cc138ac3f197---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----cc138ac3f197---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/software-engineering?source=post_page-----cc138ac3f197---------------software_engineering-----------------", "anchor_text": "Software Engineering"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fcc138ac3f197&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&user=Chaitanya+Baweja&userId=d68a2ae83525&source=-----cc138ac3f197---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fcc138ac3f197&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&user=Chaitanya+Baweja&userId=d68a2ae83525&source=-----cc138ac3f197---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fcc138ac3f197&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----cc138ac3f197--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fcc138ac3f197&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----cc138ac3f197---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----cc138ac3f197--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----cc138ac3f197--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----cc138ac3f197--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----cc138ac3f197--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----cc138ac3f197--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----cc138ac3f197--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----cc138ac3f197--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----cc138ac3f197--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@chaitanyabaweja1?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@chaitanyabaweja1?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Chaitanya Baweja"}, {"url": "https://medium.com/@chaitanyabaweja1/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "1K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fd68a2ae83525&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&user=Chaitanya+Baweja&userId=d68a2ae83525&source=post_page-d68a2ae83525--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fcf48579be93b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdesigning-intelligent-python-dictionaries-cc138ac3f197&newsletterV3=d68a2ae83525&newsletterV3Id=cf48579be93b&user=Chaitanya+Baweja&userId=d68a2ae83525&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}