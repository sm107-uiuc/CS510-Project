{"url": "https://towardsdatascience.com/building-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0", "time": 1683006652.284481, "path": "towardsdatascience.com/building-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0/", "webpage": {"metadata": {"title": "Building an easy GUI (graphical user interface) with Python | by Brunna Torino | Towards Data Science", "h1": "Building an easy GUI (graphical user interface) with Python", "description": "If you are not a software engineer, you may work with people that don\u2019t know any programming. However, your Python solutions can increase the team\u2019s efficiency and reduce workload tenfold. But what\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/chriskiehl/Gooey", "anchor_text": "Gooey", "paragraph_index": 1}, {"url": "https://github.com/chriskiehl/Gooey", "anchor_text": "Gooey", "paragraph_index": 20}, {"url": "https://github.com/chriskiehl/Gooey", "anchor_text": "Gooey", "paragraph_index": 24}, {"url": "https://github.com/chriskiehl/Gooey", "anchor_text": "Gooey repository", "paragraph_index": 26}, {"url": "https://github.com/chriskiehl/Gooey", "anchor_text": "Gooey Github", "paragraph_index": 30}, {"url": "https://www.linkedin.com/in/brunnamvtorino/", "anchor_text": "https://www.linkedin.com/in/brunnamvtorino/", "paragraph_index": 32}], "all_paragraphs": ["If you are not a software engineer, you may work with people that don\u2019t know any programming. However, your Python solutions can increase the team\u2019s efficiency and reduce workload tenfold. But what if you need to teach others how to execute it too? Using the terminal or other user interfaces may look too foreign and complicated for many.", "In this tutorial, I will go through the process of creating a GUI for your Python script. We will use the Python package Gooey, which will make it extremely easy to design beautiful and simple user interfaces that look familiar to anyone with a computer. You will need:", "We will run through an example where I want to open a GUI window where the end user can search for restaurants in his area and get a \u201crecommendation\u201d from the program.", "It\u2019s a simple idea, but it serves well to showcase the cool things Gooey can do. Aside from this, I have also found Gooey extremely useful for uploading files, running them through a script, and automatically downloading them again into a designated folder in your computer. You can do that by adding", "Here\u2019s how my GUI ended up looking:", "Gooey is not designed to work with Jupyter, so I used IDLE for this project. If you have Python installed, you should already have IDLE as well. To install Gooey, you should run in your terminal (OS) /command prompt (Windows):", "Depending on whether you have more Python 2 and 3 installed in your computer, you would need to run:", "We also need to instal the wxPython package so that Gooey can use it to create our interfaces. Learning more about wxPython is a great idea if you want to build an interface from scratch.", "If you haven\u2019t used IDLE before, you should also pip install all the other packages you will use in your script (such as pandas, numpy, xlsxwriter etc\u2026)", "The GUI script looks very much like a normal Python script, but there is some structure to be mindful of. We will start with imports:", "We will start the script by defining a few parameters:", "Our script will be structured in functions, starting with the function that will define how the window looks like and what information we want to collect from the user.", "Our first function will define the parser and pass on the window arguments.", "Our first argument group will be restaurant price category \u2014 \u201chow fancy are we feeling today?\u201d , and give the user five choices from $ to $$$$ and a \u201csurprise me\u201d option that will return a random choice.", "Next, we need to know where they are so we can make recommendations for restaurants nearby. We\u2019re calling that group postcode_group. We are also adding a validator in the end of the argument. The validator will evaluate the user input, and if the length of the postcode given is not 6 digits, it is not going to let the user start the program (very important feature!). It can even output a message in red as to what needs to be fixed.", "Keep in mind that both the metavar and the .add_argument_group name will appear on your GUI window, so keep their titles as simple and explanative as possible.", "The argument .add_argument_group will be shown in bold in the window as a section title i.e. Postcode", "Metavar will appear immediately before the end user input and is used to explain what is wanted as an input i.e. What is your postcode?", "And we end the function specifying what we want it to return:", "In general, the structure of the Gooey GUI will look somewhat like this:", "There are many widgets, customisable elements and actions that are available on Gooey. With the restaurant examples, we\u2019ll be applying a few of them but make sure to check their GitHub for all the endless possibilities!", "As explained before, this is our parse_args function:", "But as of now, it\u2019s not returning anything to the user. In order to do that, we need to create more functions. Let\u2019s start by writing one for matching the postcode given with the postcodes we have on file (we will define these variables and import files on the if __name__ == \u2018__main__\u2019: function)", "The match_postcode function will take in the postcode and a data frame, clean the column \u201czipcode\u201d of the data frame from any whitespaces (in order to avoid any mismatches between user input and postcodes), filter the data frame by only the rows that match the user postcode, and return it so that we can use that dataframe in the next function!", "Remember we had choices for prices? Whenever you pass that argument on Gooey, you will probably need to make an if statement to define the different outcomes of each choice. For this program, we only have to generate a random price if the user picks \u201csurprise me\u201d so for this example, I managed to get away with only one if statement.", "Next, we would like Gooey to show us the recommendations in a pop-up window that will call the end user\u2019s attention. So we define the next two functions: one for when restaurants are found within the parameters, and another for when we can\u2019t recommend anything. Here, we are importing wx locally to avoid it from interfering with Gooey.", "This was a somewhat custom function that uses wxPython to customize Gooey, but it is also available on the Gooey repository.", "And last, but not least, we need to call all these functions into action:", "First, we define the variables prices and postcode that we stored from the user in the start of the script. Next, we read (globally) a data frame which contains data from restaurants in Amsterdam obtained through the Yelp API (check out my other articles for more on that!). After, we have to call the match_ functions and assign their return value to a new data frame.", "And in order to show the recommendations to the user, we transform the column into a list called recommendations (and then to a dictionary to delete any duplicates) and then back into a list. If the list is not empty, we call the show_recommendations function, and if it is, we call the show_error_message function!", "If you have made it to here, thank you for reading! Make sure to check out the Gooey Github to learn more about all its functionalities, which I only touched upon with this tutorial. Hope this GUI can help you and your co-workers!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Economics and Data Science student. Obsessed about automation and data analytics. https://www.linkedin.com/in/brunnamvtorino/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F1c62ce6342e0&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://brunnavillar.medium.com/?source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": ""}, {"url": "https://brunnavillar.medium.com/?source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": "Brunna Torino"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff0271e905ad1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&user=Brunna+Torino&userId=f0271e905ad1&source=post_page-f0271e905ad1----1c62ce6342e0---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1c62ce6342e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1c62ce6342e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/chriskiehl/Gooey", "anchor_text": "Gooey"}, {"url": "http://twitter.com/Gooey", "anchor_text": "@Gooey"}, {"url": "https://github.com/chriskiehl/Gooey", "anchor_text": "Gooey"}, {"url": "http://twitter.com/Gooey", "anchor_text": "@Gooey"}, {"url": "https://github.com/chriskiehl/Gooey", "anchor_text": "Gooey"}, {"url": "https://github.com/chriskiehl/Gooey", "anchor_text": "Gooey repository"}, {"url": "https://github.com/chriskiehl/Gooey", "anchor_text": "Gooey Github"}, {"url": "https://medium.com/tag/gui?source=post_page-----1c62ce6342e0---------------gui-----------------", "anchor_text": "GUI"}, {"url": "https://medium.com/tag/python-programming?source=post_page-----1c62ce6342e0---------------python_programming-----------------", "anchor_text": "Python Programming"}, {"url": "https://medium.com/tag/tutorial?source=post_page-----1c62ce6342e0---------------tutorial-----------------", "anchor_text": "Tutorial"}, {"url": "https://medium.com/tag/python-tutorial?source=post_page-----1c62ce6342e0---------------python_tutorial-----------------", "anchor_text": "Python Tutorial"}, {"url": "https://medium.com/tag/python?source=post_page-----1c62ce6342e0---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1c62ce6342e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&user=Brunna+Torino&userId=f0271e905ad1&source=-----1c62ce6342e0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F1c62ce6342e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&user=Brunna+Torino&userId=f0271e905ad1&source=-----1c62ce6342e0---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F1c62ce6342e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F1c62ce6342e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----1c62ce6342e0---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----1c62ce6342e0--------------------------------", "anchor_text": ""}, {"url": "https://brunnavillar.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://brunnavillar.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Brunna Torino"}, {"url": "https://brunnavillar.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "271 Followers"}, {"url": "https://www.linkedin.com/in/brunnamvtorino/", "anchor_text": "https://www.linkedin.com/in/brunnamvtorino/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Ff0271e905ad1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&user=Brunna+Torino&userId=f0271e905ad1&source=post_page-f0271e905ad1--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fac9fc0dc2e84&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fbuilding-an-easy-gui-graphical-user-interface-with-python-1c62ce6342e0&newsletterV3=f0271e905ad1&newsletterV3Id=ac9fc0dc2e84&user=Brunna+Torino&userId=f0271e905ad1&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}