{"url": "https://towardsdatascience.com/neo4j-vs-grakn-part-ii-semantics-11a0847ae7a2", "time": 1683004182.017369, "path": "towardsdatascience.com/neo4j-vs-grakn-part-ii-semantics-11a0847ae7a2/", "webpage": {"metadata": {"title": "Neo4j vs GRAKN Part II: Semantics | by Duygu ALTINOK | Towards Data Science", "h1": "Neo4j vs GRAKN Part II: Semantics", "description": "Grakn vs Neo4j ontology knowledge graph semantics semantic web"}, "outgoing_paragraph_urls": [{"url": "https://neo4j.com/developer/get-started/", "anchor_text": "documentation,", "paragraph_index": 4}, {"url": "https://neo4j.com/graphacademy/online-training/introduction-to-neo4j/", "anchor_text": "videos tutorials,", "paragraph_index": 4}, {"url": "https://github.com/neo4j", "anchor_text": "a fat Github", "paragraph_index": 4}, {"url": "https://community.neo4j.com/", "anchor_text": "community", "paragraph_index": 4}, {"url": "https://stackoverflow.com/questions/tagged/neo4j", "anchor_text": "Stackoverflow archive", "paragraph_index": 4}, {"url": "https://dev.grakn.ai/docs/general/quickstart", "anchor_text": "documentation", "paragraph_index": 5}, {"url": "https://www.youtube.com/channel/UCwSkFrXPcQT2zo3XVWWFhUw", "anchor_text": "tutorials", "paragraph_index": 5}, {"url": "https://github.com/graknlabs/grakn", "anchor_text": "Github repo full of examples,", "paragraph_index": 5}, {"url": "https://grakn.ai/community", "anchor_text": "a community", "paragraph_index": 5}, {"url": "https://stackoverflow.com/questions/tagged/grakn", "anchor_text": "Stackoverflow space", "paragraph_index": 5}, {"url": "https://discuss.grakn.ai/t/migrating-owl-to-grakn/556", "anchor_text": "https://discuss.grakn.ai/t/migrating-owl-to-grakn/556", "paragraph_index": 7}, {"url": "https://github.com/neo4j-labs/neosemantics", "anchor_text": "contrib", "paragraph_index": 8}, {"url": "https://neo4j.com/docs/labs/nsmntx/current/import/", "anchor_text": "RDF importing", "paragraph_index": 8}, {"url": "https://neo4j.com/docs/labs/nsmntx/current/importing-ontologies/", "anchor_text": "OWL importing", "paragraph_index": 8}, {"url": "https://lju-lazarevic.github.io/ImportingRDFSOWL.html", "anchor_text": "this post", "paragraph_index": 8}, {"url": "https://stackoverflow.com/questions/58802094/how-to-define-a-transitive-relation-in-graql", "anchor_text": "doable", "paragraph_index": 13}, {"url": "https://graphaware.com/neo4j/2013/10/11/neo4j-bidirectional-relationships.html", "anchor_text": "like this", "paragraph_index": 14}, {"url": "https://medium.com/neo4j/graph-data-modeling-all-about-relationships-5060e46820ce", "anchor_text": "visit", "paragraph_index": 15}, {"url": "https://blog.grakn.ai/modelling-data-with-hypergraphs-edff1e12edf0", "anchor_text": "blog", "paragraph_index": 17}, {"url": "https://www.w3.org/TR/swbp-n-aryRelations/", "anchor_text": "OWL ways", "paragraph_index": 17}, {"url": "https://dev.grakn.ai/docs/schema/rules", "anchor_text": "siblings", "paragraph_index": 19}, {"url": "https://blog.grakn.ai/inference-made-simple-f333fd8abce4", "anchor_text": "this post", "paragraph_index": 21}, {"url": "https://github.com/neo4j-labs/neosemantics", "anchor_text": "Neosemantics", "paragraph_index": 22}, {"url": "https://neo4j.com/docs/labs/nsmntx/current/inference/", "anchor_text": "documentation", "paragraph_index": 22}, {"url": "https://neo4j.com/docs/cypher-manual/current/clauses/where/", "anchor_text": "WHERE", "paragraph_index": 33}, {"url": "https://duygua.github.io", "anchor_text": "https://duygua.github.io", "paragraph_index": 37}, {"url": "https://www.youtube.com/c/NLPwithDuygu", "anchor_text": "https://www.youtube.com/c/NLPwithDuygu", "paragraph_index": 39}], "all_paragraphs": ["Dear readers, in this part I will take you to the semantics land. In the first part, we compared Grakn and Neo4j worlds in general to see how the paradigm difference lead to different ways of doing things. In this post Grakn and Neo4j will compete in modeling and representation power, a head to head battle to conquer the semantics world \ud83d\ude04", "Earlier days of my career, I made knowledge engineering (I worked on a search engine Wikification component). What surprises me is, within the last 10 years knowledge graphs improved tremendously in terms of scalability, support for languages, developer/user interfaces, efficient storage; but in terms of semantic expression power \u2026 nothing ever changed that much. Still there are instances, relations, classes and us, the ones who are trying hard to charge meaning. It makes no difference you are a beginner or more advanced we all know the truth: charging any kind of semantics is difficult. That\u2019s a whole another story by itself, I will get into details in graph learning and knowledge base supported chatbot posts (coming soon).", "I won\u2019t keep you waiting too long, let the battle begin:", "Most important thing for any open source project is the documentation and the community support.", "Neo4j offers documentation, videos tutorials, a fat Github, a community and a Stackoverflow archive. This is what I see if I search for Neo4j tutorial and GRAKN tutorial :", "Grakn offers documentation, tutorials, Github repo full of examples, a community and its own Stackoverflow space as well. I see wonderful documentation and community support for both.", "Grakn offers Java, Node.js and Python clients, which covers a decent part of modern development stack. Neo4j offers a much more variety in this aspect; they officially support the drivers for .NET, Java, JavaScript, Go, and Python. Ruby, PHP, Erlang and PERL drivers are provided by the community contributors. I found Grakn\u2019s language support enough and decent for modern development; however Neo4j shines with the variety they offered. Neo4j wins this round with relative ease. I take one point from each for not supporting C++ \ud83d\ude04", "If one works in knowledge representation or linked data, it\u2019s quite possible that they already own an amount of ontology resources in OWL format. Grakn does not have a direct way to import OWL files, one has to parse the file and create own Grakn ontology. More onto this issue from their own mouth: https://discuss.grakn.ai/t/migrating-owl-to-grakn/556 , though they have an XML importer. Loaders are JSON, CSV and XML.", "Coming to Neo4j situation is bit different. Neo4j team seems to put lots of effort to bring more semantics to their graph approach and built neosemantics . This contrib includes comprehensive pages on RDF importing, OWL importing and inference/reasoning on those. I found this effort impressive. Neo4j also support XML, CSV and JSON imports as expected. You can also read this post for more OWL & Neo4j duo, I really enjoyed it.", "Neo4j: 8/10 for the effort, Grakn: 8/10 for providing an ontology language anyway", "OWL supports many property characteristics including reflexive, irreflexive, transitive, symmetric, asymmetric\u2026 If you want to model a friendship network you need symmetry (friendship is mutual, if Carry is friends with Barry of course Barry is friends with Carry); if you need a model on Greek mythology you need transitivity: Odysseus is great-grandson of Hermes, Telegonos is son of Odysseus and Titan Circe, then obviously Telegonos is a Hermes descendant.", "This is the place where OWL brings its full semantic power into the game, distinguishes herself from RDFS and other triplet stores or graph-like information holders. OWL has never been a bare information container, it allows developer to model meaningful real world relations.", "Semantic relations is a must for full semantic power. I played around a bit to see how one can define a symmetric relationship with Grakn:", "Defining a transitive relation is a bit trickier, but doable\ud83d\ude09 Grakn way of thinking is ontology and knowledge representation focused in general (even though underlying storage is a graph), if you\u2019re familiar with OWL, Grakn feels home.", "Coming to Neo4j way of thinking, Neo4j is a knowledge graph and he likes to be a graph. Then at this point, one should look at relations only as edges. I don\u2019t see a direct way of restricting relations on creation time. Neo4j does not allow undirected edges in general, then one creates a relation with an arbitrary direction and during query time discard the edge direction like this:", "Transitive relations and transitivity is a huge deal in Neo4j \ud83d\ude09 We look into this issue in Graph Algorithms post. For more on Neo4j relations, you can visit.", "We already saw that Grakn enjoys being a hypergraph. Hypergraphs provide a relaxed node/edge concept and allow Grakn relations to relate to more than 2 roles, unlike Neo4j.", "You can read more on this subject on Grakn blog. This is a very important feature to model real world data, otherwise one has to go through a lot of unnecessary pain similar to OWL ways.", "Reasoning in Grakn works via inference rules . How to define a rule is fairly easy, one creates the set of inference rules during the schema creation. According the documentation, rules aren\u2019t stored in the graph directly, but the inference is made on the query time. An inference rule looks like", "obvious to read as: if conditions on the Left Hand Side are met, then please infer the Righ Hand Side. Let\u2019s see an example, this is how one naturally defines a being siblings relation:", "RHS can describe an inferred relation, or some property of an entity. For instance in this example of how to infer continent of a city, the RHS is about inference of an entity-attribute relation i.e a has:", "As you see, one can infer entities, attributes and relations aka nodes, properties and edges. I really liked the Grakn way, Graql\u2019s semantical beauty shines at this point. Efficiency is also very good to my observation. If you want to read more, you can jump to this post.", "As you see reasoning is a core part of Graql, where unfortunately Cypher does not come with build-in reasoning. Still Neo4j does not drop the ball and Neosemantics comes into play again for more semantics. One can infer about nodes and relations of imported ontologies within the WHERE clause, as described in the documentation:", "Unfortunately I don\u2019t see an easy and direct way of reasoning over a Neo4j graph. That is not a surprise indeed, because Neo4j likes to be a graph. Here actually a comparison is not applicable at all.", "Neo4j: 4/10 for the effort; Grakn: 10/10 for perfect reasoning. Grakn is the winner here without hesitation.", "As many times I wrote Neo4j likes to be a graph; their official name is a Graph Database. On the other hand Grakn likes to be a Knowledge Graph and more knowledge-oriented; still they do not sacrifice from semantics by providing an ontology language to create and query the graph. I really liked Graql being semantics oriented, it hides the underlying graph and make it all seem like only as ontology writing and reasoning. This is pure beauty. If you are on the semantics side like me, you will love this sort of smoke and mirrors.", "Cypher looks like a bare database query (although it carry lot of semantics and offer path queries). It feels like writing a SQL query for your old logging database, no excitement though it is perfectly correct and efficient.", "In modeling relations category, Grakn wins with supporting n-ary relations. I am honestly surprised why nobody else implemented n-ary relations before and saved us from huge amount of pain.", "Another huge plus is, Grakn offers logical integrity, which NoSQL and graph databases lack in general, so does Neo4j. At the same time, it can scale horizontally like NoSQL, which Neo4j offers as well. I am very impressed by horizontal scaling capabilities of both platforms without compromising from semantics; but Grakn wins my heart here with logical integrity capability.", "I will not make it long, winner here is Grakn. I found Grakn semantically more expressive with Graql in general, ability to express subclass and subrelations in an organic way, power of defining abstract entities, attributes and relations, allowing n-ary relations, having a build-in reasoner\u2026 makes Grakn the winner here.", "This section is added according to my taste because I like text, you know \ud83d\ude09 (sorry geocoding/spatial people, this is my blog \ud83d\ude05)", "Grakn match supports regex and contains . A typical query might look like:", "I\u2019m a bit unhappy that very handy methods startswith and endswith are not implemented at all (don\u2019t say write a regex with ^ , all beauty lies in the name of the methods).", "On the other hand, Neo4j\u2019s WHERE supports regex , contains , startswith and endswith . One can query like this:", "Though methods are really similar, I really like the emphasis put on the string methods in the documentation. Neo4j conquers my heart here.", "Neo4j: 10/10, Grakn: 9/10 ; I may not be very objective in this evaluation due to the above reasons \ud83d\ude04", "Neo4j and Cypher competed hard, but hard not enough semantics to bring Grakn and Graql down.", "Dear readers, we reached the end of the competition; I hope you enjoyed the bloody combat. What is next is the comparison of graph algorithms and guess who is a killer opponent \ud83d\ude04 We will explore the graph algorithms via building 2 recommendation systems, one in Grakn and one in Neo4j. Meanwhile you can visit my other articles or you can also visit me on https://duygua.github.io. Until then stay happy and tuned \ud83d\udc4b", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Senior NLP Engineer from Berlin. Deepgram member, spaCy contributor. Enjoys quality code, in love with grep. Youtube: https://www.youtube.com/c/NLPwithDuygu"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F11a0847ae7a2&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@duygu.altinok12?source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@duygu.altinok12?source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": "Duygu ALTINOK"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5d36e9642444&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&user=Duygu+ALTINOK&userId=5d36e9642444&source=post_page-5d36e9642444----11a0847ae7a2---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F11a0847ae7a2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F11a0847ae7a2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://neo4j.com/developer/get-started/", "anchor_text": "documentation,"}, {"url": "https://neo4j.com/graphacademy/online-training/introduction-to-neo4j/", "anchor_text": "videos tutorials,"}, {"url": "https://github.com/neo4j", "anchor_text": "a fat Github"}, {"url": "https://community.neo4j.com/", "anchor_text": "community"}, {"url": "https://stackoverflow.com/questions/tagged/neo4j", "anchor_text": "Stackoverflow archive"}, {"url": "https://dev.grakn.ai/docs/general/quickstart", "anchor_text": "documentation"}, {"url": "https://www.youtube.com/channel/UCwSkFrXPcQT2zo3XVWWFhUw", "anchor_text": "tutorials"}, {"url": "https://github.com/graknlabs/grakn", "anchor_text": "Github repo full of examples,"}, {"url": "https://grakn.ai/community", "anchor_text": "a community"}, {"url": "https://stackoverflow.com/questions/tagged/grakn", "anchor_text": "Stackoverflow space"}, {"url": "https://discuss.grakn.ai/t/migrating-owl-to-grakn/556", "anchor_text": "https://discuss.grakn.ai/t/migrating-owl-to-grakn/556"}, {"url": "https://github.com/neo4j-labs/neosemantics", "anchor_text": "contrib"}, {"url": "https://neo4j.com/docs/labs/nsmntx/current/import/", "anchor_text": "RDF importing"}, {"url": "https://neo4j.com/docs/labs/nsmntx/current/importing-ontologies/", "anchor_text": "OWL importing"}, {"url": "https://lju-lazarevic.github.io/ImportingRDFSOWL.html", "anchor_text": "this post"}, {"url": "https://stackoverflow.com/questions/58802094/how-to-define-a-transitive-relation-in-graql", "anchor_text": "doable"}, {"url": "https://graphaware.com/neo4j/2013/10/11/neo4j-bidirectional-relationships.html", "anchor_text": "like this"}, {"url": "https://medium.com/neo4j/graph-data-modeling-all-about-relationships-5060e46820ce", "anchor_text": "visit"}, {"url": "https://blog.grakn.ai/modelling-data-with-hypergraphs-edff1e12edf0", "anchor_text": "blog"}, {"url": "https://www.w3.org/TR/swbp-n-aryRelations/", "anchor_text": "OWL ways"}, {"url": "https://dev.grakn.ai/docs/schema/rules", "anchor_text": "siblings"}, {"url": "https://blog.grakn.ai/inference-made-simple-f333fd8abce4", "anchor_text": "this post"}, {"url": "https://github.com/neo4j-labs/neosemantics", "anchor_text": "Neosemantics"}, {"url": "https://neo4j.com/docs/labs/nsmntx/current/inference/", "anchor_text": "documentation"}, {"url": "https://neo4j.com/docs/cypher-manual/current/clauses/where/", "anchor_text": "WHERE"}, {"url": "https://duygua.github.io", "anchor_text": "https://duygua.github.io"}, {"url": "https://medium.com/tag/neo4j?source=post_page-----11a0847ae7a2---------------neo4j-----------------", "anchor_text": "Neo4j"}, {"url": "https://medium.com/tag/grakn?source=post_page-----11a0847ae7a2---------------grakn-----------------", "anchor_text": "Grakn"}, {"url": "https://medium.com/tag/knowledge-graph?source=post_page-----11a0847ae7a2---------------knowledge_graph-----------------", "anchor_text": "Knowledge Graph"}, {"url": "https://medium.com/tag/ontology?source=post_page-----11a0847ae7a2---------------ontology-----------------", "anchor_text": "Ontology"}, {"url": "https://medium.com/tag/semantics?source=post_page-----11a0847ae7a2---------------semantics-----------------", "anchor_text": "Semantics"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F11a0847ae7a2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&user=Duygu+ALTINOK&userId=5d36e9642444&source=-----11a0847ae7a2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F11a0847ae7a2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&user=Duygu+ALTINOK&userId=5d36e9642444&source=-----11a0847ae7a2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F11a0847ae7a2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F11a0847ae7a2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----11a0847ae7a2---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----11a0847ae7a2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@duygu.altinok12?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@duygu.altinok12?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Duygu ALTINOK"}, {"url": "https://medium.com/@duygu.altinok12/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "517 Followers"}, {"url": "https://www.youtube.com/c/NLPwithDuygu", "anchor_text": "https://www.youtube.com/c/NLPwithDuygu"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5d36e9642444&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&user=Duygu+ALTINOK&userId=5d36e9642444&source=post_page-5d36e9642444--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe03b6df6be6a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fneo4j-vs-grakn-part-ii-semantics-11a0847ae7a2&newsletterV3=5d36e9642444&newsletterV3Id=e03b6df6be6a&user=Duygu+ALTINOK&userId=5d36e9642444&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}