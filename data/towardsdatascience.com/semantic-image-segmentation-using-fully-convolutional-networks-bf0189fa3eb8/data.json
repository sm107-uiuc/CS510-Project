{"url": "https://towardsdatascience.com/semantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8", "time": 1683007092.110828, "path": "towardsdatascience.com/semantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8/", "webpage": {"metadata": {"title": "Semantic Image Segmentation using Fully Convolutional Networks | by Arun Kumar | Towards Data Science", "h1": "Semantic Image Segmentation using Fully Convolutional Networks", "description": "Humans have the innate ability to identify the objects that they see in the world around them. The visual cortex present in our brain can distinguish between a cat and a dog effortlessly in almost no\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.severstal.com/eng/", "anchor_text": "Severstal", "paragraph_index": 6}, {"url": "https://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient", "anchor_text": "Read more about Dice Coefficient here", "paragraph_index": 9}, {"url": "https://arxiv.org/abs/1505.04597v1", "anchor_text": "U-Net: Convolutional Networks for Biomedical Image Segmentation", "paragraph_index": 27}, {"url": "https://github.com/aruns2120/Semantic-Segmentation-Severstal/tree/master/U-Net", "anchor_text": "GitHub repository", "paragraph_index": 30}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/Adam", "anchor_text": "Keras Adam optimizer", "paragraph_index": 31}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/ModelCheckpoint", "anchor_text": "Keras model checkpoint", "paragraph_index": 32}, {"url": "https://arxiv.org/abs/1802.02611", "anchor_text": "Encoder-Decoder with Atrous Separable Convolution for Semantic Image Segmentation", "paragraph_index": 35}, {"url": "https://arxiv.org/abs/1610.02357", "anchor_text": "Xception architecture", "paragraph_index": 45}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/Adam", "anchor_text": "Keras Adam optimizer", "paragraph_index": 47}, {"url": "https://github.com/aruns2120/Semantic-Segmentation-Severstal", "anchor_text": "GitHub repository", "paragraph_index": 56}, {"url": "https://www.linkedin.com/in/arunsingh314", "anchor_text": "here\u2019s my profile", "paragraph_index": 57}], "all_paragraphs": ["Humans have the innate ability to identify the objects that they see in the world around them. The visual cortex present in our brain can distinguish between a cat and a dog effortlessly in almost no time. This is true not only with cats and dogs but with almost all the objects that we see. But a computer is not as smart as a human brain to be able to this on its own. Over the past few decades, Deep Learning researchers have tried to bridge this gap between human brain and computer through a special type of artificial neural networks called Convolutional Neural Networks(CNNs).", "After a lot of research to study mammalian brains, researchers found that specific parts of the brain get activated to specific type of stimulus. For example, some parts in the visual cortex get activated when we see vertical edges, some when we see horizontal edges, and some others when we see specific shapes, colors, faces, etc. ML researchers imagined each of these parts as a layer of neural network and considered the idea that a large network of such layers could mimic the human brain.This intuition gave rise to the advent of CNN, which is a type of neural network whose building blocks are convolutional layers. A convolution layer is nothing but a set of weight matrices called kernels or filters which are used for convolution operation on a feature matrix such as an image.", "Convolution:2D convolution is a fairly simple operation, you start with a kernel and \u2018stride\u2019 (slide) it over the 2D input data, performing an element-wise multiplication with the part of the input it is currently on, and then summing up the results into a single output cell. The kernel repeats this process for every location it slides over, converting a 2D matrix of features into another 2D matrix of features.The step size by which the kernel slides on the input feature matrix is called stride. In the below animation, the input matrix has been added with an extra stripe of zeros from all four sides to ensure that the output matrix is of the same size as the input matrix. This is called (zero)padding.", "Image segmentation is the task of partitioning a digital image into multiple segments (sets of pixels) based on some characteristics. The objective is to simplify or change the image into a representation that is more meaningful and easier to analyze.Semantic Segmentation refers to assigning a class label to each pixel in the given image. See the below example.", "Note that segmentation is different from classification. In classification, complete image is assigned a class label whereas in segmentation, each pixel in an image is classified into one of the classes.", "Having a fair idea about convolutional networks and semantic image segmentation, let\u2019s jump into the problem we need to solve.", "Severstal is among the top 50 producers of steel in the world and Russia\u2019s biggest player in efficient steel mining and production. One of the key products of Severstal is steel sheets. The production process of flat sheet steel is delicate. From heating and rolling, to drying and cutting, several machines touch flat steel by the time it\u2019s ready to ship. To ensure quality in the production of steel sheets, today, Severstal uses images from high-frequency cameras to power a defect detection algorithm.Through this competition, Severstal expects the AI community to improve the algorithm by localizing and classifying surface defects on a steel sheet.", "To put it together, it is a semantic image segmentation problem.", "The evaluation metric used is the mean Dice coefficient. The Dice coefficient can be used to compare the pixel-wise agreement between a predicted segmentation and its corresponding ground truth. The formula is given by:", "where X is the predicted set of pixels and Y is the ground truth.Read more about Dice Coefficient here.", "We have been given a zip folder of size 2GB which contains the following:", "More details about data have been discussed in the next section.", "The first step in solving any machine learning problem should be a thorough study of the raw data. This gives a fair idea about what our approaches to solving the problem should be. Very often, it also helps us find some latent aspects of the data which might be useful to our models.Let\u2019s analyze the data and try to draw some meaningful conclusions.", "train.csv tells which type of defect is present at what pixel location in an image. It contains the following columns:", "Number of train and test imagesLet\u2019s get some idea about the proportion of train and test images and check how many train images contain defects.", "Sizes of train and test imagesLet\u2019s check if all images in train and test are of the same size. If not, we must make them of the same size.", "Let\u2019s see how train data is distributed among various classes.", "Note that the Sum of percentage values in the above analysis is more than 100, which means some images have defects belonging to more than one class.", "Number of labels tagged per image", "Before we move ahead to training deep learning models, we need to convert the raw data into a form that can be fed to the models. Also, we need to build a data pipeline, which would perform the required pre-processing and generate batches of input and output images for training.", "As the first step, we create a pandas dataframe containing filenames of train images under the column ImageId, and EncodedPixels under one or more of the columns Defect_1, Defect_2, Defect_3, Defect_4 depending on the ClassId of the image in train.csv. The images that do not have any defects have all these 4 columns blank. Below is a sample of the dataframe:", "I would train my models on 85% of train images and validate on 15%.", "Let\u2019s visualize some images from each class along with their masks. The pixels belonging to the defective area in the steel sheet image are indicated by yellow color in the mask image.", "Our deep learning model would take steel sheet image as input (X) and return four masks (Y)(corresponding to 4 classes) as output. This implies, for training our model we would need to feed batches of train images and their corresponding masks to the model.I have generated masks for all the images in the train_images folder and stored them into a folder called train_masks.", "The below code is data pipeline for applying pre-processing, augmentation to input images and generating batches for training.", "I have used a hybrid loss function which is a combination of binary cross-entropy (BCE) and dice loss. BCE corresponds to binary classification of each pixel (0 indicating false prediction of defect at that pixel when compared to the ground truth mask and 1 indicating correct prediction). Dice loss is given by (1- dice coefficient).BCE dice loss = BCE + dice loss", "There are several models/architectures that are used for semantic image segmentation. I have tried two of them in this case study: i)U-Net and ii) Google\u2019s DeepLabV3+.", "This model is based on the research paper U-Net: Convolutional Networks for Biomedical Image Segmentation, published in 2015 by Olaf Ronneberger, Philipp Fischer, and Thomas Brox of University of Freiburg, Germany. In this paper, the authors build upon an elegant architecture, called \u201cFully Convolutional Network\u201d. They have used this for segmentation of neuronal structures in electron microscopic stacks and few other biomedical image segmentation datasets.", "5.1.1. Architecture The Architecture of the network is shown in the image below. It consists of a contracting path (left side) and an expansive path (right side). The expanding path is symmetric to the contracting path giving the network a shape resembling the English letter \u2018U\u2019. Due to this reason, the network is called U-Net.", "The contracting path follows the typical architecture of a convolutional network. It consists of the repeated application of two 3x3 convolutions (unpadded convolutions), each followed by a rectified linear unit (ReLU) and a 2x2 max pooling operation with stride 2 for downsampling. At each downsampling step, the number of feature channels is doubled. In this path, the model captures the important features (similar to defects in steel sheet) from the image and discards the unimportant features, reducing the resolution of the image at each convolution+maxpool layer.  In the expansive path, every step consists of an upsampling of the feature map followed by a 2x2 convolution (\u201cup-convolution\u201d) that halves the number of feature channels, a concatenation with the correspondingly cropped feature map from the contracting path, and two 3x3 convolutions, each followed by a ReLU. The cropping is necessary due to the loss of border pixels in every convolution. At the final layer, a 1x1 convolution is used to map each 64- component feature vector to the desired number of classes(4 in our case).  In order to localize precisely, high-resolution features from the contracting path are cropped and combined with the upsampled output and fed to a successive convolution layer which will learn to assemble more precise output.", "The code for U-Net model is available in my GitHub repository.", "5.1.2. Training I have trained the model using Keras Adam optimizer with the default learning rate for 50 epochs. The loss function that the optimizer tries to minimize is bce_dice_loss, defined earlier in section 4.4.", "I have used Keras model checkpoint to monitor the validation dice coefficient as the training progresses and save the model with the best validation dice coefficient score. TensorBoard has been used to dynamically plot the loss and score while training.", "5.1.4. TestingThe figure below shows a sample image from validation data alongside its ground truth mask and predicted mask.", "Since Kaggle requires us to submit predictions on original size and not on half size images, I have rebuilt the model with input size = (256, 1600, 3) and loaded it with the weights of the model trained on 128\u00d7800 images. I have taken this liberty because CNNs are fairly invariant to different input sizes.", "DeepLab is a state-of-the-art semantic segmentation model designed and open-sourced by Google in 2016. Since then, multiple improvements have been made to the model, including DeepLab V2, DeepLab V3, and the latest DeepLab V3+.DeepLab V3+ is based on the paper Encoder-Decoder with Atrous Separable Convolution for Semantic Image Segmentation, published in 2018 by Google.", "5.2.1. ArchitectureSimilar to U-Net discussed earlier, DeepLab V3+ is also an encoder-decoder architecture. The major difference is that it uses Atrous convolution instead of simple convolution. We would learn more about Atrous convolution later in this section.", "The encoder module encodes multi-scale contextual information by applying atrous convolution at multiple scales, while the simple yet e\ufb00ective decoder module re\ufb01nes the segmentation results along object boundaries.", "Atrous ConvolutionAtrous convolution is a generalized form of standard convolution operation that allows us to explicitly control \ufb01lter\u2019s \ufb01eld-of-view in order to capture multi-scale information. In the case of two-dimensional signals, for each location i on the output feature map y and a convolution \ufb01lter w, atrous convolution is applied over the input feature map x as follows:", "where the atrous rate r determines the stride with which we sample the input signal. Note that standard convolution is a special case in which rate r = 1. The \ufb01lter\u2019s \ufb01eld-of-view is adaptively modi\ufb01ed by changing the dilation/atrous rate value.", "Depth-wise Separable ConvolutionDepth-wise separable convolution drastically reduces computation complexity by dividing a standard convolution into two sub-parts \u2014 i. Depth-wise convolutionii. Point-wise convolution.", "The first part is depth-wise convolution that performs a spatial convolution independently for each input channel. It is followed by a point-wise convolution (i.e., 1\u00d71 convolution), which is employed to combine the output from the depth-wise convolution.", "Let us understand this with the help of an example. Suppose we have an image of size 12\u00d712 composed of 3 channels. We want to apply a convolution of 5\u00d75 on this input and get an output of 8\u00d78\u00d7256.", "In the first part, depth-wise convolution, we give the input image a convolution without changing the depth. We do so by using 3 kernels of shape 5\u00d75\u00d71.", "The point-wise convolution is so named because it uses a 1\u00d71 kernel or a kernel that iterates through every single point. This kernel has a depth of however many channels the input image has; 3 in our case. Therefore, we iterate a 1\u00d71\u00d73 kernel through our 8\u00d78\u00d73 image, to get an 8\u00d78\u00d71 image.", "Encoder ArchitectureDeepLab V3+ encoder uses Xception architecture with the following modifications \u2014", "The output of the encoder is a feature map of size 16 times smaller than the input feature map. This is compensated by the decoder which has a provision to up-sample the encoder feature map by 4x twice (refer to the model architecture diagram).", "5.2.2. TrainingI have trained the model using Keras Adam optimizer with the default learning rate for 47 epochs. The loss function that the optimizer tries to minimize is bce_dice_loss, defined earlier in section 4.4", "As in the case of U-Net, I have saved the weights of the model with the best validation dice_coefficient.", "5.2.4. TestingThe figure below shows some sample images from validation data alongside their ground truth mask and predicted mask.", "Rebuilding the model with original input size(256, 1600,3) and loading the weights of the model trained on half size did not work well in this case. I had to use a different strategy \u2014I used the trained model to predict on 128\u00d7800 images and resized the predicted masks to 256\u00d71600. This approach worked very well for DeepLab V3+.", "My final submission was DeepLab V3+, which gave a decent score in both Private and Public.", "This Kaggle competition was a popular one and many people have solved this problem using different approaches. However, most of them have used some or the other variant of U-Net or similar encoder-decoder architectures.", "I have used simple U-Net as my first cut solution, which gives a decent performance on test data, thanks to the train on half-size and predict on full-size strategy.", "I have implemented DeepLab V3+, which is a state of the art technique for semantic image segmentation from scratch. It helped me improve my score from 0.809 to 0.838.", "Thank you for reading such a long blog, I appreciate your patience. I thoroughly enjoyed writing it, hope you enjoyed reading it too.", "I have skipped most of the code as I didn\u2019t want to overwhelm the readers with code. Please refer to my GitHub repository for the complete Keras code.", "If you have any queries, suggestions or discussions, please feel free to drop them in the comments section below. I will try to address them to the best of my knowledge.You can connect with me on LinkedIn, here\u2019s my profile.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fbf0189fa3eb8&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@aruns2120?source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@aruns2120?source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": "Arun Kumar"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdb6511ed68f1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&user=Arun+Kumar&userId=db6511ed68f1&source=post_page-db6511ed68f1----bf0189fa3eb8---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbf0189fa3eb8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbf0189fa3eb8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.pyimagesearch.com/2018/12/31/keras-conv2d-and-convolutional-layers/", "anchor_text": "pyimagesearch"}, {"url": "https://commons.wikimedia.org/wiki/File:Image-segmentation-example-segmented.png", "anchor_text": "MartinThoma / CC0"}, {"url": "https://www.kaggle.com/c/severstal-steel-defect-detection", "anchor_text": "Kaggle"}, {"url": "https://www.severstal.com/eng/", "anchor_text": "Severstal"}, {"url": "https://en.wikipedia.org/wiki/S%C3%B8rensen%E2%80%93Dice_coefficient", "anchor_text": "Read more about Dice Coefficient here"}, {"url": "https://arxiv.org/abs/1505.04597v1", "anchor_text": "U-Net: Convolutional Networks for Biomedical Image Segmentation"}, {"url": "https://lmb.informatik.uni-freiburg.de/people/ronneber/u-net/", "anchor_text": "University of Freiburg"}, {"url": "https://github.com/aruns2120/Semantic-Segmentation-Severstal/tree/master/U-Net", "anchor_text": "GitHub repository"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/Adam", "anchor_text": "Keras Adam optimizer"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/callbacks/ModelCheckpoint", "anchor_text": "Keras model checkpoint"}, {"url": "https://arxiv.org/abs/1802.02611", "anchor_text": "Encoder-Decoder with Atrous Separable Convolution for Semantic Image Segmentation"}, {"url": "https://arxiv.org/abs/1802.02611v3", "anchor_text": "Original research paper"}, {"url": "https://towardsdatascience.com/@sh.tsang?source=post_page-----d527e1a8fb5----------------------", "anchor_text": "Sik-Ho Tsang"}, {"url": "https://towardsdatascience.com/review-drn-dilated-residual-networks-image-classification-semantic-segmentation-d527e1a8fb5", "anchor_text": "Towards Data Science"}, {"url": "https://www.researchgate.net/figure/Atrous-convolution-kernel-green-dilated-with-different-rates_fig6_329213875", "anchor_text": "ResearchGate/CC"}, {"url": "https://towardsdatascience.com/@reina.wang?source=post_page-----b99ec3102728----------------------", "anchor_text": "Chi-Feng Wang"}, {"url": "https://towardsdatascience.com/a-basic-introduction-to-separable-convolutions-b99ec3102728", "anchor_text": "Towards Data Science"}, {"url": "https://towardsdatascience.com/@reina.wang?source=post_page-----b99ec3102728----------------------", "anchor_text": "Chi-Feng Wang"}, {"url": "https://towardsdatascience.com/a-basic-introduction-to-separable-convolutions-b99ec3102728", "anchor_text": "Towards Data Science"}, {"url": "https://arxiv.org/abs/1610.02357", "anchor_text": "Xception architecture"}, {"url": "https://arxiv.org/abs/1802.02611v3", "anchor_text": "Original research paper"}, {"url": "https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/Adam", "anchor_text": "Keras Adam optimizer"}, {"url": "https://github.com/aruns2120/Semantic-Segmentation-Severstal", "anchor_text": "GitHub repository"}, {"url": "https://www.linkedin.com/in/arunsingh314", "anchor_text": "here\u2019s my profile"}, {"url": "https://www.kaggle.com/c/severstal-steel-defect-detection/", "anchor_text": "https://www.kaggle.com/c/severstal-steel-defect-detection/"}, {"url": "https://arxiv.org/abs/1505.04597v1", "anchor_text": "https://arxiv.org/abs/1505.04597v1"}, {"url": "https://arxiv.org/abs/1802.02611v3", "anchor_text": "https://arxiv.org/abs/1802.02611v3"}, {"url": "https://www.analyticsvidhya.com/blog/2019/02/tutorial-semantic-segmentation-google-deeplab/", "anchor_text": "https://www.analyticsvidhya.com/blog/2019/02/tutorial-semantic-segmentation-google-deeplab/"}, {"url": "https://arxiv.org/abs/1610.02357", "anchor_text": "https://arxiv.org/abs/1610.02357"}, {"url": "https://github.com/MLearing/Keras-Deeplab-v3-plus/blob/master/model.py", "anchor_text": "https://github.com/MLearing/Keras-Deeplab-v3-plus/blob/master/model.py"}, {"url": "https://www.appliedaicourse.com/", "anchor_text": "https://www.appliedaicourse.com/"}, {"url": "https://medium.com/tag/semantic-segmentation?source=post_page-----bf0189fa3eb8---------------semantic_segmentation-----------------", "anchor_text": "Semantic Segmentation"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----bf0189fa3eb8---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/computer-vision?source=post_page-----bf0189fa3eb8---------------computer_vision-----------------", "anchor_text": "Computer Vision"}, {"url": "https://medium.com/tag/convolutional-network?source=post_page-----bf0189fa3eb8---------------convolutional_network-----------------", "anchor_text": "Convolutional Network"}, {"url": "https://medium.com/tag/dilated-convolution?source=post_page-----bf0189fa3eb8---------------dilated_convolution-----------------", "anchor_text": "Dilated Convolution"}, {"url": "https://creativecommons.org/licenses/by-nc/4.0/", "anchor_text": "Some rights reserved"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbf0189fa3eb8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&user=Arun+Kumar&userId=db6511ed68f1&source=-----bf0189fa3eb8---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fbf0189fa3eb8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&user=Arun+Kumar&userId=db6511ed68f1&source=-----bf0189fa3eb8---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fbf0189fa3eb8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fbf0189fa3eb8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----bf0189fa3eb8---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----bf0189fa3eb8--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@aruns2120?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@aruns2120?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Arun Kumar"}, {"url": "https://medium.com/@aruns2120/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "40 Followers"}, {"url": "https://www.linkedin.com/in/arunsingh314/", "anchor_text": "https://www.linkedin.com/in/arunsingh314/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fdb6511ed68f1&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&user=Arun+Kumar&userId=db6511ed68f1&source=post_page-db6511ed68f1--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2Fdb6511ed68f1%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fsemantic-image-segmentation-using-fully-convolutional-networks-bf0189fa3eb8&user=Arun+Kumar&userId=db6511ed68f1&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}