{"url": "https://towardsdatascience.com/generating-chirps-with-neural-networks-41628e72efb2", "time": 1683011972.244411, "path": "towardsdatascience.com/generating-chirps-with-neural-networks-41628e72efb2/", "webpage": {"metadata": {"title": "Generating Chirps with Neural Networks | by Jason O. Jensen | Towards Data Science", "h1": "Generating Chirps with Neural Networks", "description": "The sound of birdsong is varied, beautiful, and relaxing. In the pre-Covid times, I made a focus timer which would play some recorded bird sounds during breaks, and I always wondered whether such\u2026"}, "outgoing_paragraph_urls": [{"url": "https://tomatotimer.app/", "anchor_text": "focus timer", "paragraph_index": 0}, {"url": "https://jovian.ml/jason-o-jensen/generating-bird-sounds-proof-of-concept", "anchor_text": "here", "paragraph_index": 1}, {"url": "https://towardsdatascience.com/deep-inside-autoencoders-7e41f319999f", "anchor_text": "autoencoder", "paragraph_index": 5}, {"url": "https://www.macaulaylibrary.org/cornell-guide-to-bird-sounds-essential-set/", "anchor_text": "Cornell Guide to Bird Sounds: Essential Set for North America", "paragraph_index": 7}, {"url": "https://experiments.withgoogle.com/bird-sounds", "anchor_text": "Birds Sounds Chrome Experiment", "paragraph_index": 7}, {"url": "https://nicolovaligi.com/history-inception-deep-learning-architecture.html", "anchor_text": "inception-net blocks", "paragraph_index": 10}, {"url": "https://towardsdatascience.com/was-that-a-chirp-making-a-bird-audio-detection-convnet-on-pytorch-88400450bb19", "anchor_text": "these lines", "paragraph_index": 25}], "all_paragraphs": ["The sound of birdsong is varied, beautiful, and relaxing. In the pre-Covid times, I made a focus timer which would play some recorded bird sounds during breaks, and I always wondered whether such sounds could be generated. After some trial and error, I landed on a proof-of-concept architecture which can both successfully reproduce a single chirp and has parameters which can be adjusted to alter the generated sound.", "Since generating bird sounds seems like a somewhat novel application, I think it is worth sharing this approach. Along the way, I also learned how to take TensorFlow models apart and graft parts of them together. The code blocks below show how this is done. The full code can be found here.", "The generator will be composed two parts. The first part will take the entire sounds and encode key pieces of information about its overall shape in a small number of parameters.", "The second part will take a small bit of sound, along with the information about the overall shape, and predict the next little bit of sound.", "The second part can be called iteratively on itself with adjusted parameters to produce an entirely new chirp!", "An autoencoder structure is used for deriving the key parameters of the sound. This structure takes the entire soundwave and reduces it, through a series of (encoding) layers, down to a small number of components (the waist), before reproducing the sound in full from a series of expanding (decoding) layers. Once trained, the autoencoder model is cut off at the waist so that all it does is reduce the full sound down to the key parameters.", "For the proof of concept, a single chirp was used; this chirp:", "It comes from the Cornell Guide to Bird Sounds: Essential Set for North America. The same set used for the Birds Sounds Chrome Experiment.", "One problem with using just a single sound is that the autoencoder might simply hide all the information about the sound in the biases of the decoding layers, leaving the waist with all zero weights. To mitigate this, the sounds was morphed during training by altering its amplitude and shifting it around a little.", "The encoder portion of the autoencoder consists of a series of convolutional layers which compress a 3000-ish long sounds wave down to around 20 numbers, hopefully retaining important information along the way. Since sounds are composed of many different sine waves, allowing many convolutional filters of different sizes to pass over the sound can in theory capture key information about the composite waves. A waist size of 20 was chosen mainly because this seems like a somewhat surmountable number of adjustable parameters.", "In this first approach, the layers are stacked sequentially. In a future version, it may be advantageous to use a structure akin to inception-net blocks to run convolutions of different sizes in parallel.", "The decoder portion of the model consists of two dense layers, one of length 400, and one of length 3000 \u2014 the same length as the input sound. The activation function of the final layer is tanh, as the sound wave representations have values between -1 and 1.", "Here is what this looks like visualized:", "The structure of the generator begins with the encoding portion of the autoencoder network. The output at the waist is combined with some fresh input representing the bit of the sound wave immediately preceding that which is to be predicted. In this case, the previous 200 values of the sound wave are used as input, and the next 10 are predicted.", "The combined inputs are fed into a series of dense layers. The sequential dense layers allow the network to learn the relationship between the previous values, information on the overall shape of the sound, and the following values. The final dense layer is of length 10 and activated with a tanh function.", "Here is what this network looks like:", "The layers coming from the autoencoder network are frozen so that additional training resources are not spent on them.", "Training this network takes only a couple of minutes as the data is not very varied and therefore relatively easy to learn, particularly for the autoencoder network. One final flourish is to produce two new networks from the trained models.", "The first is simply the encoder portion of the autoencoder, but now separated. We need this part to produce some initial good parameters.", "The second model is same as the generator network, but with the parts from the autoencoder network replaced with a new input source. This is done so that the trained generator no longer requires the entire soundwave as input, but only the encoded parameters capturing the key information about the sound. With these separated out as a new input, we can freely manipulate them when generating chirps.", "The following sounds were generated without modifying the parameters, they are very close to the original sound, but are not perfect reproductions. The generator network is only able to reach an accuracy of between 60% and 70%, so some variability is to be expected.", "The advantage of generating bird sounds is in part that new variations on a theme can be produced. This can be done by modifying the parameters produced by the encoder network. In the above case, the encoder produced these parameters:", "Not all of the 20 nodes produced non-zero parameters, but there are enough of them to experiment with. There is a lot of complexity to be explored with 12 adjustable parameters that all can be adjusted to arbitrary degrees in both directions. Since this is a proof of concept, it will suffice to present some choice sounds generated by adjusting just a single parameter in each case:", "Here are the soundwave representations of the three examples:", "It seems that generating bird sounds using a neural networks is possible, although it remains to be seen how practicable it is. The above approach uses just a single sound, so a nearby next step would be to attempt to train the model on multiple different sounds. It is not clear from the outset that this would work. However, if the model as constructed fails on multiple sounds, it would still be possible to train different models on different sounds and simply stack them to produce different sounds.", "A larger problem is that not all produced sounds are viable, particularly when modifying the parameters. A fair share of produced sounds are more akin to computer beeps than bird song. Some sound like an angry computer that really doesn\u2019t want you to do what you just tried to do. One way to mitigate this would be to train a separate model to detect bird sounds (perhaps along these lines), and use that to reject or accept generated output.", "Computational costs are also a constraint with the current approach; generating a chirp takes an order of magnitude longer than playing the sound, which is not ideal if the idea is to generate beautiful soundscapes on the fly. The main mitigation which comes to mind here is to increase the length of each prediction, possibly at the cost of accuracy. One could also, of course, simply spend the time to pre-generate acceptable soundscapes.", "A combination of an autoencoder network, and a short-term prediction network can be grafted together to produce a bird sound generator with some adjustable parameters which can be manipulated to create new and interesting bird sounds.", "As with many projects, part of the motivation is to learn in the process. In particular, I did not know how to pull apart trained models and graft parts of them together. The models used above can be used as an example to guide other learners who want to experiment with such approaches.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F41628e72efb2&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----41628e72efb2--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----41628e72efb2--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@Jason_Jensen?source=post_page-----41628e72efb2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@Jason_Jensen?source=post_page-----41628e72efb2--------------------------------", "anchor_text": "Jason O. Jensen"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F76b25870b7c9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&user=Jason+O.+Jensen&userId=76b25870b7c9&source=post_page-76b25870b7c9----41628e72efb2---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F41628e72efb2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F41628e72efb2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://tomatotimer.app/", "anchor_text": "focus timer"}, {"url": "https://jovian.ml/jason-o-jensen/generating-bird-sounds-proof-of-concept", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/deep-inside-autoencoders-7e41f319999f", "anchor_text": "autoencoder"}, {"url": "https://www.macaulaylibrary.org/cornell-guide-to-bird-sounds-essential-set/", "anchor_text": "Cornell Guide to Bird Sounds: Essential Set for North America"}, {"url": "https://experiments.withgoogle.com/bird-sounds", "anchor_text": "Birds Sounds Chrome Experiment"}, {"url": "https://nicolovaligi.com/history-inception-deep-learning-architecture.html", "anchor_text": "inception-net blocks"}, {"url": "https://github.com/HarisIqbal88/PlotNeuralNet", "anchor_text": "PlotNeuralNet"}, {"url": "https://github.com/HarisIqbal88/PlotNeuralNet", "anchor_text": "PlotNeuralNet"}, {"url": "https://towardsdatascience.com/was-that-a-chirp-making-a-bird-audio-detection-convnet-on-pytorch-88400450bb19", "anchor_text": "these lines"}, {"url": "https://medium.com/tag/generative-model?source=post_page-----41628e72efb2---------------generative_model-----------------", "anchor_text": "Generative Model"}, {"url": "https://medium.com/tag/bird-sounds?source=post_page-----41628e72efb2---------------bird_sounds-----------------", "anchor_text": "Bird Sounds"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----41628e72efb2---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/convolutional-network?source=post_page-----41628e72efb2---------------convolutional_network-----------------", "anchor_text": "Convolutional Network"}, {"url": "https://medium.com/tag/editors-pick?source=post_page-----41628e72efb2---------------editors_pick-----------------", "anchor_text": "Editors Pick"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F41628e72efb2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&user=Jason+O.+Jensen&userId=76b25870b7c9&source=-----41628e72efb2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F41628e72efb2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&user=Jason+O.+Jensen&userId=76b25870b7c9&source=-----41628e72efb2---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F41628e72efb2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----41628e72efb2--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F41628e72efb2&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----41628e72efb2---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----41628e72efb2--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----41628e72efb2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----41628e72efb2--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----41628e72efb2--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----41628e72efb2--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----41628e72efb2--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----41628e72efb2--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----41628e72efb2--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@Jason_Jensen?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@Jason_Jensen?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Jason O. Jensen"}, {"url": "https://medium.com/@Jason_Jensen/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "33 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F76b25870b7c9&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&user=Jason+O.+Jensen&userId=76b25870b7c9&source=post_page-76b25870b7c9--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F9bdea056ddcc&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fgenerating-chirps-with-neural-networks-41628e72efb2&newsletterV3=76b25870b7c9&newsletterV3Id=9bdea056ddcc&user=Jason+O.+Jensen&userId=76b25870b7c9&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}