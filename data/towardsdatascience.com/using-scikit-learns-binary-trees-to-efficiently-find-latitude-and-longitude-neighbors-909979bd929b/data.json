{"url": "https://towardsdatascience.com/using-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b", "time": 1683013333.240159, "path": "towardsdatascience.com/using-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b/", "webpage": {"metadata": {"title": "Using Scikit-learn\u2019s Binary Trees to Efficiently Find Latitude and Longitude Neighbors | by Corey Hanson | Towards Data Science", "h1": "Using Scikit-learn\u2019s Binary Trees to Efficiently Find Latitude and Longitude Neighbors", "description": "Engineering features from latitude and longitude data can seem like a messy task that may tempt novices into creating their own apply function (or even worse: an enormous for loop). However, these\u2026"}, "outgoing_paragraph_urls": [{"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html", "anchor_text": "apply function", "paragraph_index": 0}, {"url": "https://www.w3schools.com/python/python_for_loops.asp", "anchor_text": "for loop", "paragraph_index": 0}, {"url": "https://www.freecodecamp.org/news/brute-force-algorithms-explained/", "anchor_text": "brute force", "paragraph_index": 0}, {"url": "https://scikit-learn.org/", "anchor_text": "scikit-learn", "paragraph_index": 2}, {"url": "https://algs4.cs.princeton.edu/24pq/", "anchor_text": "priority queues", "paragraph_index": 2}, {"url": "https://scikit-learn.org/stable/modules/neighbors.html#nearest-neighbor-algorithms", "anchor_text": "within the neighbors module", "paragraph_index": 3}, {"url": "https://www.ncdc.noaa.gov/data-access/land-based-station-data", "anchor_text": "National Oceanic and Atmospheric Administration", "paragraph_index": 5}, {"url": "https://scikit-learn.org/stable/modules/neighbors.html#nearest-neighbor-algorithms", "anchor_text": "The documentation", "paragraph_index": 6}, {"url": "https://en.wikipedia.org/wiki/K-d_tree", "anchor_text": "k-d tree", "paragraph_index": 7}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.map.html", "anchor_text": "mapped", "paragraph_index": 9}, {"url": "https://pandas.pydata.org/docs/user_guide/merging.html", "anchor_text": "merged", "paragraph_index": 9}, {"url": "https://en.wikipedia.org/wiki/Haversine_formula", "anchor_text": "Haversine distance", "paragraph_index": 11}, {"url": "https://en.wikipedia.org/wiki/Ball_tree", "anchor_text": "ball tree", "paragraph_index": 12}, {"url": "https://en.wikipedia.org/wiki/Unit_sphere", "anchor_text": "unit sphere", "paragraph_index": 15}], "all_paragraphs": ["Engineering features from latitude and longitude data can seem like a messy task that may tempt novices into creating their own apply function (or even worse: an enormous for loop). However, these types of brute force approaches are potential pitfalls that will unravel quickly when the size of the dataset increases.", "For example: Imagine you have a single dataset of n items. The time it takes to explicitly compare these n items against n-1 other items essentially approaches n\u00b2. Meaning that with each doubling of rows in your dataset, the time it takes to find all nearest neighbors will increase by a factor of 4!", "Fortunately, you do not need to calculate the distance between every point. There are a few data structures to efficiently determine neighbors right in scikit-learn that leverage the power of priority queues.", "They can be found within the neighbors module and this guide will show you how to use two of these incredible classes to tackle this problem with ease.", "To begin we load the libraries.", "Then we\u2019ll make two sample DataFrames based on weather station locations that are publicly available from the National Oceanic and Atmospheric Administration.", "This creates two DataFrames of a minuscule size: one with seven rows and one with four. For datasets this small, the data structures we are about to use will not offer any help in performance (and would actually be a hindrance). The documentation provides more information on when it would be more advantageous to choose one algorithm over another.", "We will start by demonstrating with a k-d tree. It will partition the datapoints into binary trees evaluating a single dimension at a time and splitting on the median. Then a query will be executed against it with another set of points and a value k to determine for each point how many neighbors you would like to return.", "The result is two arrays. One for the distances and one containing the indices of the neighboring locations (referring to the DataFrame that was used to construct the tree).", "The indices can be then be mapped to useful values and both arrays easily merged with the rest of the data.", "A k-d tree performs great in situations where there are not a large amount of dimensions. While this may seem fitting for the data here; in the case of latitude and longitude, evaluating based on differences in Euclidean distance will come with a cost in accuracy.", "To more closely approximate the actual distance between coordinates we can use the Haversine distance. Unfortunately, the k-d tree algorithm will not work with this since it has a somewhat rigid approach in respect to each dimension. To see what available distance metrics can work with the k-d tree data structure, use this command:", "A ball tree is similar to a k-d tree except that instead of making partitions across a single dimension, it will divide points based on radial distances to a center. It handles higher dimensional data better and will also permit the use of the Haversine metric.", "To use a ball tree with the Haversine distance in scikit-learn, you must first convert the coordinates from degrees to radians.", "Aside from that, the two APIs are almost identical and most of the process will be repeated with minimal modifications.", "One final note: the distance returned will be based on the unit sphere with a radius of 1. If you\u2019d like to see values that reflect typical measurements, it is an easy conversion.", "With only 12 datapoints in this example, the advantage in using a ball tree with the Haversine metric cannot be shown. But in a larger dataset with less sparsity, it will be the choice you want to make when you are evaluating with latitude and longitude.", "Of course, neither algorithm is limited to this use case alone and the steps shown here can be extended to any set of features that can be ordered by one of the many distance metrics.", "The complex systems that we model have a myriad of influences contributing to the level of error that Data Scientists perpetually strive to reduce. With these tools at your disposal, you will be more equipped to efficiently discover additional factors and take feature engineering to a new level.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Motion graphics artist turned data scientist."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F909979bd929b&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----909979bd929b--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----909979bd929b--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@coreyhanson?source=post_page-----909979bd929b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@coreyhanson?source=post_page-----909979bd929b--------------------------------", "anchor_text": "Corey Hanson"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcb9fb014fff8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&user=Corey+Hanson&userId=cb9fb014fff8&source=post_page-cb9fb014fff8----909979bd929b---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F909979bd929b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F909979bd929b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://pixabay.com/users/mohamed_hassan-5229782/", "anchor_text": "Mohamed Hassan"}, {"url": "https://pixabay.com/illustrations/car-trip-road-trip-travel-map-3880508/", "anchor_text": "Pixabay"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.apply.html", "anchor_text": "apply function"}, {"url": "https://www.w3schools.com/python/python_for_loops.asp", "anchor_text": "for loop"}, {"url": "https://www.freecodecamp.org/news/brute-force-algorithms-explained/", "anchor_text": "brute force"}, {"url": "https://scikit-learn.org/", "anchor_text": "scikit-learn"}, {"url": "https://algs4.cs.princeton.edu/24pq/", "anchor_text": "priority queues"}, {"url": "https://scikit-learn.org/stable/modules/neighbors.html#nearest-neighbor-algorithms", "anchor_text": "within the neighbors module"}, {"url": "https://www.ncdc.noaa.gov/data-access/land-based-station-data", "anchor_text": "National Oceanic and Atmospheric Administration"}, {"url": "https://scikit-learn.org/stable/modules/neighbors.html#nearest-neighbor-algorithms", "anchor_text": "The documentation"}, {"url": "https://en.wikipedia.org/wiki/K-d_tree", "anchor_text": "k-d tree"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Series.map.html", "anchor_text": "mapped"}, {"url": "https://pandas.pydata.org/docs/user_guide/merging.html", "anchor_text": "merged"}, {"url": "https://pixabay.com/users/geralt-9301/", "anchor_text": "Gerd Altmann"}, {"url": "https://pixabay.com/illustrations/globe-earth-magnifying-glass-hand-71443/", "anchor_text": "Pixabay"}, {"url": "https://en.wikipedia.org/wiki/Haversine_formula", "anchor_text": "Haversine distance"}, {"url": "https://en.wikipedia.org/wiki/Ball_tree", "anchor_text": "ball tree"}, {"url": "https://en.wikipedia.org/wiki/Unit_sphere", "anchor_text": "unit sphere"}, {"url": "https://medium.com/tag/data-science?source=post_page-----909979bd929b---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/scikit-learn?source=post_page-----909979bd929b---------------scikit_learn-----------------", "anchor_text": "Scikit Learn"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----909979bd929b---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/python?source=post_page-----909979bd929b---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/knn?source=post_page-----909979bd929b---------------knn-----------------", "anchor_text": "Knn"}, {"url": "http://creativecommons.org/licenses/by/4.0/", "anchor_text": "Some rights reserved"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F909979bd929b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&user=Corey+Hanson&userId=cb9fb014fff8&source=-----909979bd929b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F909979bd929b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&user=Corey+Hanson&userId=cb9fb014fff8&source=-----909979bd929b---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F909979bd929b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----909979bd929b--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F909979bd929b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----909979bd929b---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----909979bd929b--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----909979bd929b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----909979bd929b--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----909979bd929b--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----909979bd929b--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----909979bd929b--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----909979bd929b--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----909979bd929b--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@coreyhanson?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@coreyhanson?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Corey Hanson"}, {"url": "https://medium.com/@coreyhanson/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "25 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fcb9fb014fff8&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&user=Corey+Hanson&userId=cb9fb014fff8&source=post_page-cb9fb014fff8--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fc50029bea9a7&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fusing-scikit-learns-binary-trees-to-efficiently-find-latitude-and-longitude-neighbors-909979bd929b&newsletterV3=cb9fb014fff8&newsletterV3Id=c50029bea9a7&user=Corey+Hanson&userId=cb9fb014fff8&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}