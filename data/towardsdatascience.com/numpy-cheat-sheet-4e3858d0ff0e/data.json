{"url": "https://towardsdatascience.com/numpy-cheat-sheet-4e3858d0ff0e", "time": 1683011424.9867039, "path": "towardsdatascience.com/numpy-cheat-sheet-4e3858d0ff0e/", "webpage": {"metadata": {"title": "Numpy Cheat Sheet. A quick guide to the basics of the\u2026 | by XuanKhanh Nguyen | Towards Data Science", "h1": "Numpy Cheat Sheet", "description": "NumPy is the library that gives Python its ability to work with data at speed. Numpy has several advantages over data cleaning and manipulation. It allows for efficient operations on the data\u2026"}, "outgoing_paragraph_urls": [{"url": "https://numpy.org/", "anchor_text": "NumPy", "paragraph_index": 0}, {"url": "https://en.wikipedia.org/wiki/Array_data_structure", "anchor_text": "Arrays", "paragraph_index": 4}, {"url": "https://www.mathsisfun.com/algebra/vectors.html", "anchor_text": "vector", "paragraph_index": 8}, {"url": "https://en.wikipedia.org/wiki/Matrix_(mathematics)", "anchor_text": "matrix", "paragraph_index": 9}, {"url": "https://en.wikipedia.org/wiki/Sparse_matrix", "anchor_text": "sparse matrix", "paragraph_index": 10}, {"url": "https://en.wikipedia.org/wiki/Transpose", "anchor_text": "Transposing", "paragraph_index": 32}, {"url": "https://en.wikipedia.org/wiki/Invertible_matrix", "anchor_text": "inverse", "paragraph_index": 36}, {"url": "https://en.wikipedia.org/wiki/Trace_(linear_algebra)", "anchor_text": "trace", "paragraph_index": 42}, {"url": "https://www.mathsisfun.com/algebra/matrix-determinant.html", "anchor_text": "Determinants", "paragraph_index": 43}, {"url": "https://en.wikipedia.org/wiki/Eigenvalues_and_eigenvectors", "anchor_text": "eigenvalues and eigenvectors", "paragraph_index": 45}, {"url": "https://github.com/Nothingaholic/Python-Cheat-Sheet/blob/master/numpy.ipynb", "anchor_text": "Github", "paragraph_index": 69}], "all_paragraphs": ["NumPy is the library that gives Python its ability to work with data at speed. Numpy has several advantages over data cleaning and manipulation. It allows for efficient operations on the data structures often used in machine learning: vectors, matrices, and tensors.", "When I first learned NumPy, I had trouble remembering all the functions and methods that needed. So I put together the most frequently used Numpy operations. I sometimes come back to this note to refresh my memory. And I am glad if it helps you on your journey too.", "This is a long note, make yourself a cup of tea, and let\u2019s get started!", "As always, we need to import NumPy library:", "Arrays are a data structure for storing elements of the same type. Each item stored in an array is called an element. Each location of an element in an array has a numerical index, which is used to identify the element.", "1D array (i.e., single dimensional array) stores a list of variables of the same data type. It is possible to access each variable using the index.", "2D array (i.e, multi-dimensional array) stores data in a format consisting of rows and columns.", "NumPy is used to work with arrays. The array object in NumPy is called ndarray.", "To create a vector, we simply create a one-dimensional array. Just like vectors, these arrays can be represented horizontally (i.e., rows) or vertically (i.e., columns).", "To create a matrix, we can use a NumPy two-dimensional array. In our solution, the matrix contains three rows and two columns.", "A sparse matrix is a matrix in which most of the elements are zero. Sparse matrices only store nonzero elements and assume all other values will be zero, leading to significant computational savings.", "Imagine a matrix where the columns are every article on Medium, the rows are every Medium reader, and the values are how long (minutes) a person has read that particular article. This matrix would have tens of thousands of columns and millions of rows! However, since most readers do not read all articles, the vast majority of elements would be zero.", "Let\u2019 say, we want to create a NumPy array with two nonzero values, then converted it into a sparse matrix. If we view the sparse matrix, we can see that only the nonzero values are stored:", "In the example above, (1, 1) and (2, 0) represent the indices of the non-zero values 1 and 3, respectively. For example, the element 1 is in the second row and second column.", "np.zeros() function returns a new array of given shape and type, filled with zero.", "np.ones() function returns a new array of given shape and type, filled with one.", "np.eye() function returns a matrix having 1\u2019s on the diagonal and 0\u2019s elsewhere.", "np.linspace() function returns an evenly spaced sequence in a specified interval.", "np.arange(start, stop, step) function returns the ndarray object containing evenly spaced values within the given range.", "The parameters determine the range of values:", "Note:step can\u2019t be zero. Otherwise, we will get a ZeroDivisionError. We can\u2019t move away anywhere from start if the increment or decrement is 0.", "np.full(shape, fill_value) function returns a new array of a specified shape, fills with fill_value.", "np.random.rand() function returns an array of specified shape and fills it with random values.", "It will be valuable to check the shape and size of an array both for further calculations and simply as a gut check after some operation.", "NumPy arrays have an attribute called shape that returns a tuple with each index having the number of corresponding elements.", "In the example above, (2, 3) means that the array has 2 dimensions, and each dimension has 3 elements.", "It is important to know how to reshape the NumPy arrays so that our data meets the expectation of specific Python libraries. For example, Scikit- learn requires a one-dimensional array of output variables yto be shaped like a two-dimensional array with one column and outcomes for each row.", "Some algorithms, like the Long Short-Term Memory recurrent neural network in Keras, require input to be specified as a three-dimensional array comprised of samples, timesteps, and features.", "reshape() allows us to restructure an array so that we maintain the same data but it is organized as a different number of rows and columns.", "Note: The shape of the original and new matrix contains the same number of elements (i.e, same size)", "We can usereshape() method to reshape our array to a 2 by 5 dimensional array.", "If we want NumPy to automatically determine what size/length a particular dimension should be, specify the dimension as -1 which effectively means \u201cas many as needed.\u201d For example, reshape(2, -1) means two rows and as many columns as needed.", "Transposing is a common operation in linear algebra where the column and row indices of each element are swapped.", "From the last example, arr1_2d is a 2 by 5 dimensional array, we want to switch its rows with its columns.", "flatten() is a simple method to transform a matrix into a one-dimensional array.", "resize(arr, new_shape) function returns a new array with the specified shape.If the new array is larger than the original array, then the new array is filled with repeated copies of arr.", "The inverse of a matrix A is a matrix that, when multiplied by A results in the identity. A good example is in finding the vector of coefficient values in linear regression.", "Use NumPy\u2019s linear algebra inv method:", "When I was first learning Python, one of the errors that I ran into quite often \u2014 and sometimes still run into now \u2014 looked like this:", "Arrays need to be declared whereas lists do not need declaration because they are a part of Python\u2019s syntax. This is the reason lists are more often used than arrays. But in case of performing some arithmetic function to our list, we should go with arrays instead.", "In case we want to store a large amount of data, we should consider arrays because they can store data very compactly and efficiently.", "Other useful functions to describe the array:", "The trace is the sum of all the diagonal elements of a square matrix.", "Determinants a matrix is a special number that can be calculated from a square matrix. It can sometimes be useful to calculate the determinant of a matrix. NumPy makes this easy with det().", "The rank of a matrix is the estimate of the number of linearly independent rows or columns in a matrix. Knowing the rank of a matrix is important. While solving systems of linear equations, the rank can tell us whether Ax = 0has a single solution or multiple solutions.", "Many machine learning problems can be modeled with linear algebra with solutions derived from eigenvalues and eigenvectors.", "In NumPy\u2019s linear algebra toolset, eig lets us calculate the eigenvalues, and eigenvectors of any square matrix.", "When we add, subtract, multiply or divide a matrix by a number, this is called the scalar operation. During scalar operations, the scalar value is applied to each element in the array, therefore, the function returns a new matrix with the same number of rows and columns.", "Similarly, we can subtract, multiply, or divide a matrix by a number using functions below:", "A matrix can only be added to (or subtracted from) another matrix if the two matrices have the same dimensions, that is, they must have the same number of rows and columns.", "When multiplying matrices, we take rows of the first matrix and multiply them by the corresponding columns of the second matrix.", "Note: Remember \u201crows first, columns second.\u201d", "It is important to know the shape of matrics. Then the matrics operations are simple using the NumPy library.", "append() function is used to append values to the end of a given array.", "The axis along which values are appended. If the axis is not given, both array and values are flattened before use.", "insert(): is used to insert the element before the given index of the array.", "delete()we can delete any row and column from the ndarray", "sort()function can be used to sort the list in both ascending and descending order.", "Joining means putting contents of two or more arrays in a single array. In NumPy, we join arrays by axes. We pass a sequence of arrays that we want to join to the concatenate() function, along with the axis. If the axis is not explicitly passed, it is taken as 0.", "Cool, now we know how to merges multiple arrays into one. How to break one array into multiple? We use array_split() for splitting arrays, we pass it the array we want to split and the number of splits.", "Note: If the array has fewer elements than required, it will adjust from the end accordingly.", "NumPy offers a wide variety of methods for indexing and slicing elements or groups of elements in arrays.", "Note: NumPy arrays are zero-indexed, meaning that the index of the first element is 0, not 1.", "Suppose we have two arrays, one contains user_name, and the other stores the number of articles that the person has read.", "We use similar methods for selecting elements in multi-dimensional arrays:", "Often we want to know the maximum and minimum value in an array or subset of an array. This can be accomplished with the max and min methods. Using the axis parameter we can also apply the operation along a certain axis:", "Suppose we store the number of articles a person per month in an array.", "We can use similar methods to find the minimum elements:", "Just like with max() and min(), we can easily get descriptive statistics about the whole matrix or do calculations along a single axis.", "The code in this note is available on Github.", "I consider this note as the basics of NumPy. You probably come across these functions repeatedly when reading existing code at work or doing tutorials online. I will try to continuously update this as I find more useful Numpy functions.", "All learning activities are undertaken throughout time and experience. It is impossible to learn Python in a couple of hours. Remember that the hardest part of any endeavor is the beginning, and you have passed that, keep on, keeping on!!!", "Numpy is a very important library on which almost every data science or machine learning Python packages such as SciPy, Matplotlib, Scikit-learn depends on to a reasonable extent. It is important to have a strong understanding of the fundamentals. Conveniently, there are some great resources to help with this task. I have listed some of my favorites below, some of which get deeper into aspects of linear algebra; check them out if you are eager to learn more!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Interests: Data Science, Machine Learning, AI, Stats, Python | Minimalist | A fan of odd things."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F4e3858d0ff0e&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://xknguyen.medium.com/?source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": ""}, {"url": "https://xknguyen.medium.com/?source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": "XuanKhanh Nguyen"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5048143ff687&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&user=XuanKhanh+Nguyen&userId=5048143ff687&source=post_page-5048143ff687----4e3858d0ff0e---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4e3858d0ff0e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4e3858d0ff0e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://unsplash.com/@charlesdeluvio?utm_source=medium&utm_medium=referral", "anchor_text": "Charles Deluvio"}, {"url": "https://unsplash.com?utm_source=medium&utm_medium=referral", "anchor_text": "Unsplash"}, {"url": "https://numpy.org/", "anchor_text": "NumPy"}, {"url": "https://me.me/i/import-pandas-as-np-import-numpy-as-p-15191942", "anchor_text": "me.me"}, {"url": "https://en.wikipedia.org/wiki/Array_data_structure", "anchor_text": "Arrays"}, {"url": "https://www.mathsisfun.com/algebra/vectors.html", "anchor_text": "vector"}, {"url": "https://en.wikipedia.org/wiki/Matrix_(mathematics)", "anchor_text": "matrix"}, {"url": "https://en.wikipedia.org/wiki/Sparse_matrix", "anchor_text": "sparse matrix"}, {"url": "https://en.wikipedia.org/wiki/Transpose", "anchor_text": "Transposing"}, {"url": "https://en.wikipedia.org/wiki/Invertible_matrix", "anchor_text": "inverse"}, {"url": "https://en.wikipedia.org/wiki/Trace_(linear_algebra)", "anchor_text": "trace"}, {"url": "https://www.mathsisfun.com/algebra/matrix-determinant.html", "anchor_text": "Determinants"}, {"url": "https://en.wikipedia.org/wiki/Eigenvalues_and_eigenvectors", "anchor_text": "eigenvalues and eigenvectors"}, {"url": "https://github.com/Nothingaholic/Python-Cheat-Sheet/blob/master/numpy.ipynb", "anchor_text": "Github"}, {"url": "https://www.kindpng.com/imgv/TJTwob_meme-linear-algebra-funny-hd-png-download/", "anchor_text": "Meme"}, {"url": "https://ocw.mit.edu/courses/mathematics/18-06-linear-algebra-spring-2010/", "anchor_text": "Linear Algebra, MIT"}, {"url": "https://towardsdatascience.com/linear-algebra-for-deep-learning-f21d7e7d7f23", "anchor_text": "Basic Linear Algebra for Deep Learning"}, {"url": "https://stackoverflow.com/questions/4151128/what-are-the-differences-between-numpy-arrays-and-matrices-which-one-should-i-u", "anchor_text": "The difference between NumPy array and matrics"}, {"url": "https://docs.scipy.org/doc/scipy/reference/sparse.html", "anchor_text": "Sparse matrics, SciPy document"}, {"url": "https://towardsdatascience.com/reshaping-numpy-arrays-in-python-a-step-by-step-pictorial-tutorial-aed5f471cf0b", "anchor_text": "np.reshape() steps by steps"}, {"url": "https://medium.com/fintechexplained/what-are-eigenvalues-and-eigenvectors-a-must-know-concept-for-machine-learning-80d0fd330e47", "anchor_text": "Machine Learning \u2014 Eigenvalue and eigenvector"}, {"url": "https://medium.com/tag/data-science?source=post_page-----4e3858d0ff0e---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----4e3858d0ff0e---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/python?source=post_page-----4e3858d0ff0e---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/programming?source=post_page-----4e3858d0ff0e---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----4e3858d0ff0e---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4e3858d0ff0e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&user=XuanKhanh+Nguyen&userId=5048143ff687&source=-----4e3858d0ff0e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F4e3858d0ff0e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&user=XuanKhanh+Nguyen&userId=5048143ff687&source=-----4e3858d0ff0e---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F4e3858d0ff0e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F4e3858d0ff0e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----4e3858d0ff0e---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----4e3858d0ff0e--------------------------------", "anchor_text": ""}, {"url": "https://xknguyen.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://xknguyen.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "XuanKhanh Nguyen"}, {"url": "https://xknguyen.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "629 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F5048143ff687&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&user=XuanKhanh+Nguyen&userId=5048143ff687&source=post_page-5048143ff687--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Fe3631088c12e&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fnumpy-cheat-sheet-4e3858d0ff0e&newsletterV3=5048143ff687&newsletterV3Id=e3631088c12e&user=XuanKhanh+Nguyen&userId=5048143ff687&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}