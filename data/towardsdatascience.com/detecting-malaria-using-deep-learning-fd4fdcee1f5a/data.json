{"url": "https://towardsdatascience.com/detecting-malaria-using-deep-learning-fd4fdcee1f5a", "time": 1682994736.437162, "path": "towardsdatascience.com/detecting-malaria-using-deep-learning-fd4fdcee1f5a/", "webpage": {"metadata": {"title": "Detecting malaria using deep learning. | by Gracelyn Shi | Towards Data Science", "h1": "Detecting malaria using deep learning.", "description": "Although the malaria virus doesn\u2019t take the form of a mutant mosquito, it sure feels like a mutant problem. The deadly disease has reached epidemic, even endemic proportions in different parts of the\u2026"}, "outgoing_paragraph_urls": [{"url": "http://www.wpro.who.int/mvp/lab_quality/2096_oms_gmp_sop_09_rev1.pdf", "anchor_text": "WHO protocol", "paragraph_index": 5}, {"url": "https://www.pyimagesearch.com/2016/11/14/installing-keras-with-tensorflow-backend/", "anchor_text": "install", "paragraph_index": 7}, {"url": "https://github.com/jrosebr1/imutils", "anchor_text": "imutils", "paragraph_index": 7}, {"url": "https://ceb.nlm.nih.gov/repositories/malaria-datasets/", "anchor_text": "here", "paragraph_index": 8}, {"url": "https://www.pyimagesearch.com/2018/12/03/deep-learning-and-medical-image-analysis-with-keras/", "anchor_text": "here", "paragraph_index": 9}, {"url": "https://github.com/gracelynxs/malaria-detection-model", "anchor_text": "here", "paragraph_index": 9}, {"url": "https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/", "anchor_text": "Deep Learning for Computer Vision with Python", "paragraph_index": 27}, {"url": "https://arxiv.org/abs/1512.03385", "anchor_text": "Deep Residual Learning for Image Recognition by He et. al.", "paragraph_index": 27}, {"url": "https://github.com/gracelynxs/malaria-detection-model/blob/master/CNN/resnet.py", "anchor_text": "here", "paragraph_index": 30}, {"url": "https://towardsdatascience.com/implementing-a-resnet-model-from-scratch-971be7193718", "anchor_text": "here", "paragraph_index": 30}, {"url": "https://keras.io/preprocessing/image/", "anchor_text": "flow_from_directory", "paragraph_index": 42}, {"url": "https://towardsdatascience.com/implementing-a-resnet-model-from-scratch-971be7193718", "anchor_text": "here", "paragraph_index": 48}, {"url": "https://medium.com/singlestone/keras-callbacks-monitor-and-improve-your-deep-learning-205a8a27e91c", "anchor_text": "callbacks", "paragraph_index": 51}, {"url": "https://github.com/gracelynxs/malaria-detection-model", "anchor_text": "my repository", "paragraph_index": 56}, {"url": "https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/", "anchor_text": "Deep Learning for Computer Vision with Python", "paragraph_index": 63}, {"url": "http://gracelynshi.com/", "anchor_text": "http://gracelynshi.com/", "paragraph_index": 65}], "all_paragraphs": ["Although the malaria virus doesn\u2019t take the form of a mutant mosquito, it sure feels like a mutant problem. The deadly disease has reached epidemic, even endemic proportions in different parts of the world \u2014 killing around 400,000 people annually [1]. In other areas of the world, it\u2019s virtually nonexistent. Some areas are just particularly prone to a disease outbreak \u2014 there are certain factors that make an area more likely to be infected by malaria [2].", "With this mixture of these problems, we must keep some things in mind when building our model:", "While we want to obtain the highest level of accuracy as possible, we must also consider making the model as small and computationally efficient as possible \u2014 and also able to be deployed to edge and Internet of Things devices.", "Current diagnosing methods of this disease are tedious and time-consuming.", "The most widely used method (so far) is examining thin blood smears under a microscope, and visually searching for infected cells. The patients\u2019 blood is smeared on a glass slide and stained with contrasting agents to better identify infected parasites in their red blood cells.", "Then, a clinician manually counts the number of parasitic red blood cells \u2014 sometimes up to 5,000 cells (according to WHO protocol) [3].", "Convolutional neural networks have the ability to automatically extract features and learn filters. In previous machine learning solutions, features had to be manually programmed in \u2014 for example, size, color, the morphology of the cells. Utilizing convolutional neural networks (CNN) will greatly speed up prediction time while mirroring (or even exceeding) the accuracy of clinicians.", "We\u2019re going to be using Keras, with a Tensorflow backend so go ahead and install that if you haven\u2019t. Be sure to also install Numpy, Scikit-learn, Matplotlib, and imutils (a package of image processing and deep learning convenience functions created by Adrian Rosebrock).", "Thankfully, we have a great dataset of labeled and preprocessed images to train and evaluate our model. NIH has a malaria dataset of 27,558 cell images with an equal number of parasitized and uninfected cells. A level-set based algorithm was applied to detect and segment the red blood cells. The images were collected and annotated by medical professionals; more information can be found here. Also, download the data from the page: the file is named cell_images.zip", "I replicated Adrian Rosebrock\u2019s blog post Deep Learning and Medical Image Analysis with Keras, which can be found here. Following his code, I posted my version on GitHub. You can download the source code to the project here to follow along or create your own.", "First, create a folder/directory to store the project. Then, create a directory inside that called malaria, download the dataset into the directory and open it up.", "We\u2019re going to switch back to our parent directory and make another directory called cnn where we store our configuration file and network architecture.", "Create a module inside cnn and name it config.py. This is our configuration file, and it will store all our constant variables.", "Our configuration file initializes all the paths to our", "80% of the data is set aside for training out of the original dataset (Line 16). Then, out of the training data, another 10% percent will be used as validation data (Line 20).", "Create a module named build_dataset.py which should be located in your original directory. build_dataset.py will be used to create the paths in your filesystem. Open it up and insert the following code.", "After importing all the necessary packages (Line 3\u20135), we\u2019re going to shuffle all the images in our original dataset (Line 8\u201310).", "First, let\u2019s split the training data and the testing data using the index we defined from values set in our configuration file (Line 2\u20134); we then use the index to perform array slicing.", "Set aside some of the training data for validation (Line 7\u20139) by over writing the index with another value, and repeating the same process.", "Afterward, we\u2019re are going to define our newly separated training, validation and testing datasets. The list datasets contain 3-tuples, of which contain:", "Now, we can loop over the datasets.", "Line 4 will print which data split it\u2019s creating, and Lines 7\u20139 will create an output directory if it doesn\u2019t exist.", "On Line 12, we begin to loop over the input image paths. Line 14 will extract the filename of the input image and Line 15 will extract the corresponding class label (Parasitized, Unparasitized).", "Then, build the paths to the subdirectories (Line 18) and create them if they don\u2019t exist (Line 21\u201323). Each subdirectory (testing, validation, and training) is split into Parasitized and Unparasitized images.", "Finally, we\u2019re going to construct the path to the actual image and copy that into the subdirectory (Lines 27\u201328).", "We can build our directory now! Open up a terminal, and execute the following command:", "The output should look like this:", "Now that we\u2019ve dealt with the data, let\u2019s start training our model. Before we get to that, let\u2019s take a quick look at the network architecture we\u2019ll be using: a ResNet model replicated by Adrian Rosebrock in his book Deep Learning for Computer Vision with Python [7]. His model was based on the 2015 academic publication Deep Residual Learning for Image Recognition by He et. al. [6], but smaller and more compact (we\u2019re trying to reduce the storage size for our model).", "First of all, why did we choose ResNet? In a study done by Rajaraman et al., they used pre-trained convolutional neural networks to classify images in the same dataset we are using. They compared six models: AlexNet, VGG-16, ResNet-50, Xception, DenseNet-121, and a custom model they built. Their results showed that the ResNet-50 model consistently showed the most accurate results on this specific database \u2014 it also had the highest performance in metrics such as MCC and the F-1 score (which are important in healthcare applications) [4].", "However, DenseNet-121 outperformed it in sensitivity (which is arguably one of the most important metrics in a healthcare setting) when they ran it on the most optimal layer (with feature extraction) rather than the final layer.", "You can download the code from here, but if you already have the source code it\u2019s included in the folder under cnn. For a detailed explanation on how to implement it from scratch (as well as a basic explanation of why it is so effective), you can check out my article here.", "Create a file called train_model.py within your original directory.", "Take a look at the packages we\u2019re going to importing:", "Notice that we\u2019re using the \u201cAgg\u201d backend for matplotlib, as we\u2019re saving our plot to disk.", "The only command line argument we need to parse is \u201c \u2014 plot\u201d. It will default to being placed in the current working directory (in this case it would be your parent directory) and named \u201cplot.png\u201d. You can rename the file at the command line when you execute the program.", "First, let\u2019s set our number of epochs we want to train for as 50 (Line 2). Our learning rate will be initialized as 0.1 (Line 3) which will decay according to our decay function (poly_decay on Lines 9\u201320). Batch size will be set as 32 (Line 4), which is a good number if you\u2019re running it on a CPU, but you can increase this to 64 if you\u2019re using a GPU.", "Our polynomial decay function will make our learning rate decay after each epoch (Line 9). We initialized the power to be 1.0 (Line 14), which turns our polynomial decay into a linear decay. This is to reduce overfitting on our model.", "Next, let\u2019s grab the total amount of image paths in the testing/validation/testing sets (Lines 2\u20134) to determine the total number of steps per epoch for validation & training.", "Applying data augmentation to our images helps with regularization (which helps mitigate overfitting). Our network will generalize better to the validation data (which could mean performing worse on the training set).", "First, let\u2019s perform data augmentation on our training data by initializing ImageDataGenerator. We\u2019re going to rescale our pixel values to the range [0, 1] (Line 4), and perform random transformations to each training example(Lines 5\u201311).", "For our validation and training data, we\u2019re simply going to rescale the pixel values to the range [0, 1].", "Now let\u2019s initialize our training generators which will load images from our input directory.", "The Keras flow_from_directory function has two prerequisites: a base input directory for the data split, and N subdirectories inside the base input directory where each subdirectory corresponds to a class label (in our case N=2; Parasitized and Unparasitized).", "Take a look at the parameters inputted into each generator:", "On Lines 2\u20133, we initialize ResNet with the following parameters.", "This implies that the first CONV layer (before reducing spatial dimensions) will have 64 total filters.", "First, we will stack 3 sets of residual modules, the 3 CONV layers in each residual module will learn 32, 32 and 128 filters respectively. Dimensionality reduction is applied.", "Then, 4 sets of residual modules are applied. The three CONV layers will learn 64, 64 and 256 filters \u2014 dimensionality reduction is applied again.", "Finally, 6 sets of residual modules are stacked again where each CONV layer learns 128, 128 and 512 filters. Spatial dimensions are reduced a final time (Check out my article here for an explanation of stages and filters).", "The optimizer we\u2019ll be using is stochastic gradient descent (Line 4). Our learning rate is set to 0.1 and the momentum term as 0.9.", "Finally, we compile our model on Lines 5\u20139. Our loss function is set as binary_crossentropy as we\u2019re performing binary, 2-class classification.", "Now, let\u2019s define our set of callbacks \u2014 which are executed at the end of each epoch. To decay our learning rate after each epoch, we\u2019re applying poly_decay LearningRateScheduler (Line 2).", "The model.fit_generator call on Lines 3\u20139 tells our script to start our training process. The trainGen generator automatically loads our images from disk and parse the class labels from the image path. valGen does the same for the validation data.", "Now that we\u2019re finished the training part, we can evaluate it on our test set. We\u2019ll make predictions on test data (Line 4\u20135) and find the label with the largest probability for each image in the dataset (Line 10).", "Then, we\u2019re going to print a classification_report in the terminal (Lines 13\u201314).", "Finally, we\u2019ll plot a graph of our testing and validation loss, as well as our validation and testing accuracy to see how well we did.", "Make sure your project is in the right structure by referring to my repository on GitHub. Now, open up a terminal and execute the following command:", "After your model is done training, take a look at the classification report.", "Overall, the serialized model file is only 17.7MB. Quantizing the weights in the model themselves would allow us to obtain a model < 10MB.", "And now you have it a complete end-to-end malaria classification system!", "Now you can save this model to your disk and load new images for prediction. You can also deploy this on your website or on your app.", "If you have any questions, feel free to reach out in the comments or through the following:", "Special thanks to Dr. Adrian Rosebrock at PyImageSearch\u2019s for his blog post on this and his code accompanying it [6].", "[7] A. Rosebrock, Deep Learning for Computer Vision with Python (2017)", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Diving into deep learning, computer vision, and entrepreneurship. Is occasionally lost in thought. http://gracelynshi.com/"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ffd4fdcee1f5a&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@gracelyn.shi?source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@gracelyn.shi?source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": "Gracelyn Shi"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6a4ff1c46c8b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&user=Gracelyn+Shi&userId=6a4ff1c46c8b&source=post_page-6a4ff1c46c8b----fd4fdcee1f5a---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffd4fdcee1f5a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffd4fdcee1f5a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://www.youtube.com/watch?v=uugoIC5sfQs", "anchor_text": "Source"}, {"url": "http://www.southsudanmedicaljournal.com/archive/february-2011/malaria-in-south-sudan-3.-laboratory-diagnosis.html", "anchor_text": "(Source)"}, {"url": "http://www.wpro.who.int/mvp/lab_quality/2096_oms_gmp_sop_09_rev1.pdf", "anchor_text": "WHO protocol"}, {"url": "https://www.pyimagesearch.com/2016/11/14/installing-keras-with-tensorflow-backend/", "anchor_text": "install"}, {"url": "https://github.com/jrosebr1/imutils", "anchor_text": "imutils"}, {"url": "https://ceb.nlm.nih.gov/repositories/malaria-datasets/", "anchor_text": "here"}, {"url": "https://www.pyimagesearch.com/2018/12/03/deep-learning-and-medical-image-analysis-with-keras/", "anchor_text": "here"}, {"url": "https://github.com/gracelynxs/malaria-detection-model", "anchor_text": "here"}, {"url": "https://ceb.nlm.nih.gov/proj/malaria/cell_images.zip", "anchor_text": "https://ceb.nlm.nih.gov/proj/malaria/cell_images.zip"}, {"url": "https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/", "anchor_text": "Deep Learning for Computer Vision with Python"}, {"url": "https://arxiv.org/abs/1512.03385", "anchor_text": "Deep Residual Learning for Image Recognition by He et. al."}, {"url": "https://github.com/gracelynxs/malaria-detection-model/blob/master/CNN/resnet.py", "anchor_text": "here"}, {"url": "https://towardsdatascience.com/implementing-a-resnet-model-from-scratch-971be7193718", "anchor_text": "here"}, {"url": "https://keras.io/preprocessing/image/", "anchor_text": "flow_from_directory"}, {"url": "https://towardsdatascience.com/implementing-a-resnet-model-from-scratch-971be7193718", "anchor_text": "here"}, {"url": "https://medium.com/singlestone/keras-callbacks-monitor-and-improve-your-deep-learning-205a8a27e91c", "anchor_text": "callbacks"}, {"url": "https://github.com/gracelynxs/malaria-detection-model", "anchor_text": "my repository"}, {"url": "https://www.linkedin.com/in/gracelynshi/", "anchor_text": "https://www.linkedin.com/in/gracelynshi/"}, {"url": "https://www.who.int/malaria/media/world-malaria-report-2016/en/", "anchor_text": "https://www.who.int/malaria/media/world-malaria-report-2016/en/"}, {"url": "https://www.who.int/news-room/fact-sheets/detail/malaria", "anchor_text": "https://www.who.int/news-room/fact-sheets/detail/malaria"}, {"url": "https://blog.insightdatascience.com/@datico", "anchor_text": "Carlos Atico Ariza"}, {"url": "https://blog.insightdatascience.com/https-blog-insightdatascience-com-malaria-hero-a47d3d5fc4bb", "anchor_text": "https://blog.insightdatascience.com/https-blog-insightdatascience-com-malaria-hero-a47d3d5fc4bb"}, {"url": "https://arxiv.org/abs/1512.03385", "anchor_text": "Deep Residual Learning for Image Recognition"}, {"url": "https://arxiv.org/abs/1512.03385", "anchor_text": "https://arxiv.org/abs/1512.03385"}, {"url": "https://www.pyimagesearch.com/2018/12/03/deep-learning-and-medical-image-analysis-with-keras/", "anchor_text": "https://www.pyimagesearch.com/2018/12/03/deep-learning-and-medical-image-analysis-with-keras/"}, {"url": "https://www.pyimagesearch.com/deep-learning-computer-vision-python-book/", "anchor_text": "Deep Learning for Computer Vision with Python"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----fd4fdcee1f5a---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----fd4fdcee1f5a---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/tag/malaria?source=post_page-----fd4fdcee1f5a---------------malaria-----------------", "anchor_text": "Malaria"}, {"url": "https://medium.com/tag/convolutional-network?source=post_page-----fd4fdcee1f5a---------------convolutional_network-----------------", "anchor_text": "Convolutional Network"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----fd4fdcee1f5a---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffd4fdcee1f5a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&user=Gracelyn+Shi&userId=6a4ff1c46c8b&source=-----fd4fdcee1f5a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ffd4fdcee1f5a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&user=Gracelyn+Shi&userId=6a4ff1c46c8b&source=-----fd4fdcee1f5a---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ffd4fdcee1f5a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ffd4fdcee1f5a&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----fd4fdcee1f5a---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----fd4fdcee1f5a--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@gracelyn.shi?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@gracelyn.shi?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Gracelyn Shi"}, {"url": "https://medium.com/@gracelyn.shi/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "262 Followers"}, {"url": "http://gracelynshi.com/", "anchor_text": "http://gracelynshi.com/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F6a4ff1c46c8b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&user=Gracelyn+Shi&userId=6a4ff1c46c8b&source=post_page-6a4ff1c46c8b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F264b3e23c838&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fdetecting-malaria-using-deep-learning-fd4fdcee1f5a&newsletterV3=6a4ff1c46c8b&newsletterV3Id=264b3e23c838&user=Gracelyn+Shi&userId=6a4ff1c46c8b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}