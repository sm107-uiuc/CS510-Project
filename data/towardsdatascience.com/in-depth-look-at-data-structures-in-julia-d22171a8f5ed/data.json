{"url": "https://towardsdatascience.com/in-depth-look-at-data-structures-in-julia-d22171a8f5ed", "time": 1683015503.9507442, "path": "towardsdatascience.com/in-depth-look-at-data-structures-in-julia-d22171a8f5ed/", "webpage": {"metadata": {"title": "In-Depth Look At Data Structures In Julia | by Emma Boudreau | Towards Data Science", "h1": "In-Depth Look At Data Structures In Julia", "description": "In the previous iteration of the comprehensive Julia tutorials, we went over how to use Julia\u2019s multiple dispatch with types and functions. Multiple dispatch is a simple system used to apply\u2026"}, "outgoing_paragraph_urls": [], "all_paragraphs": ["In the previous iteration of the comprehensive Julia tutorials, we went over how to use Julia\u2019s multiple dispatch with types and functions. Multiple dispatch is a simple system used to apply different types to different function calls under the same method argument. The key component in that structure is types, and more specifically, data types.", "Datatypes are the bread and butter of computer programming. Any programming work is going to involve manipulating, moving, and working with basic datatypes. Types themselves that are created in the language are simply containers for other types that are usually data types.", "The first kind of data we can store inside of the Julia programming language is a basic datatype. Basic datatypes include data such as numbers, text, characters, and boolean.", "A boolean, or bool type is a type that indicates whether or not a condition is true. Booleans can be represented with both a true/false value that ultimately condenses into a 1 or a 0, or just an integer (1 or 0) that represents the condition of the type.", "Likewise, we can also assert booleans to integers representing true or false in the Julia language:", "The integer datatype in programming parallels the integer datatype in mathematics. An integer is a whole number with no fractional value. Typically, whenever we are working with integers in Julia, we will be working with the Int64 datatype. This means that the integer has 64-bits. Alternatively, there are also Int32s and BigInts.", "Floats are integers with a second number beyond the decimal point, or a fractional value. Floats can be thought of as two separate pieces of data, the integer before the fractional value, and the fractional value coming in after the integer.", "Complex floats come into play quite frequently inside of the Julia language. A complex float is simply a float that has values that are both imaginary as well as real. It is important to note that this means that these types are not real. Often scientific computing is going to require a real datatype, as a result you might need to assert some complexes to floats.", "The \u201c im\u201d in the second part of this datatype denotes that the numbers prior are imaginary.", "Big datatypes on the other hand, are real numbers but go beyond the capabilities of most 64-bit applications with integers and floats and are accurate. This is a significant exclusivity to the Julia language, as it allows for enormous integer and float datatypes to be passed through multiple functions without a problem \u2014 something that few languages are capable of.", "The symbol datatype is another great thing that the Julia language has pulled from the functional paradigm. Symbols can be used to represent everything from parameters to dictionary keys \u2014 and they are reasonably good at their job. In general, the symbol datatype is a great thing to have in a programming language because it can be used as a representation for essentially anything, hence the name: Symbol. Symbols can be written in Julia by simply placing a colon in front of a key-word, for example:", "Strings are a fairly simple concept to wrap ones head around \u2014 a string is a set of consecutive unicode/ascii characters that make up a composition of chars. As demonstrated in part 3 \u2014 Loops, strings can be looped through to reveal the next datatype, chars. If you have yet to read part 3, you can check it out here:", "Strings are delimited with quotation marks. Chars, on the other hand are delimited with apostrophes.", "Floats are used to represent characters in ASCII. As a result, we can always asset chars into floats:", "Fun fact: This is how LabelEncoding works", "All categorical, vector and matrix data is simply going to act as a container for other types. Consider the example of an array which is comprised of multiple datatypes, such as integers, floats, booleans, or strings.", "This new array is an array containing 4 Int64s. We can index them with numbers based on their position in the array:", "We can also see this demonstrated in the type:", "You might have noticed that whenever an array is created, it is typically within the bounds of square brackets. Without these brackets, the type of this collection of data would be a Tuple. Although I didn\u2019t go into depth on tuples, they are a datatype that is quite valid \u2014 but certainly not what you want to have if you need an array.", "Furthermore, a lack of using brackets can make it impossible for a function to understand which parameters are corresponding to which variable. Consider the append!() method. The append! method takes two parameters, firstly whatever data you would like to append to, and secondly the data you would like to append to it. This works if we were to use brackets, as the array is seen as one argument. However, using comma will present an ArgumentError.", "In Julia, dictionaries need to be explicitly defined as such \u2014 otherwise it will return a tuple. This is a very valuable and dynamic type, and that is further exemplified when working with data-sets or JSON data.", "Using a dictionary, we can call data by calling corresponding symbol keys, in this example:", "Pairs are actually tuple types, but it is important to realize that a pair is a tuple, but a tuple is not a pair. A pair is the same exact thing that we used to access parts of our dictionary a second ago, and can be created in the same way:", "Sets are simply unique values extracted from a type. For example, if we were to assert the set type to an array, we would get each of the unique values in that array:", "Tuples are generalized structures for datatypes that don\u2019t necessarily have a defined structure. Tuples can be thought of as a less-organized array.", "Sometimes working with raw datatypes can be tedious and exhausting, especially whenever a function needs to work with many parameters. This is where structs come in. Creating a struct will make a new type that can hold arbitrary and predefined data structures. We can create a struct by using the struct keyword, followed by a definition and data.", "With this type, we can now assign a new variable to it, providing the necessary data as parameters for the constructor:", "In this instance, the struct typer is our new type that holds the data h and v. We can access this data by calling struct.data:", "We can also pass this new type through a function, for example adding our h and v data from our typer struct:", "It is important to note that the data in constructed types in the Julia language will be immutable. This can be changed by placing the keyword mutable before the type:", "Datatypes are consistently a very important thing in programming, and this issue is felt further in the world of data science. Most of programming is simply using data structures and constructed types to work with datatypes. That being said, understanding datatypes is very important to a programmer. There are lots of types in Julia, and some that you can construct yourself, but learning how to utilize and manipulate these types is going to be the key to being a great programmer.", "Your home for data science. A Medium publication sharing concepts, ideas and codes."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Fd22171a8f5ed&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://emmettgb.medium.com/?source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": "Emma Boudreau"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c----d22171a8f5ed---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd22171a8f5ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd22171a8f5ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://github.com/emmettgb/JuliaLessons", "anchor_text": "Github repository"}, {"url": "https://github.com/emmettgb/JuliaLessons/blob/master/5/Comprehensive%20Julia%20Tutorials%205.ipynb", "anchor_text": "Notebook"}, {"url": "https://towardsdatascience.com/getting-familiar-with-loops-in-julia-cfbcc344728c", "anchor_text": "Getting Familiar With Loops In JuliaAn introduction to using loops in tandem with conditionals in the Julia programming language.towardsdatascience.com"}, {"url": "https://medium.com/tag/programming?source=post_page-----d22171a8f5ed---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/julia?source=post_page-----d22171a8f5ed---------------julia-----------------", "anchor_text": "Julia"}, {"url": "https://medium.com/tag/tutorial?source=post_page-----d22171a8f5ed---------------tutorial-----------------", "anchor_text": "Tutorial"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----d22171a8f5ed---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/tag/data-science?source=post_page-----d22171a8f5ed---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd22171a8f5ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&user=Emma+Boudreau&userId=ea170050148c&source=-----d22171a8f5ed---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Fd22171a8f5ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&user=Emma+Boudreau&userId=ea170050148c&source=-----d22171a8f5ed---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Fd22171a8f5ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Fd22171a8f5ed&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----d22171a8f5ed---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----d22171a8f5ed--------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://emmettgb.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Emma Boudreau"}, {"url": "https://emmettgb.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "4.6K Followers"}, {"url": "https://twitter.com/emmettboudgie", "anchor_text": "https://twitter.com/emmettboudgie"}, {"url": "https://github.com/emmettgb", "anchor_text": "https://github.com/emmettgb"}, {"url": "https://ems.computer/", "anchor_text": "https://ems.computer/"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fea170050148c&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&user=Emma+Boudreau&userId=ea170050148c&source=post_page-ea170050148c--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff16bf42bb45f&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fin-depth-look-at-data-structures-in-julia-d22171a8f5ed&newsletterV3=ea170050148c&newsletterV3Id=f16bf42bb45f&user=Emma+Boudreau&userId=ea170050148c&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}