{"url": "https://towardsdatascience.com/the-art-of-recursion-a-connection-to-infinity-622292be0089", "time": 1683015360.182314, "path": "towardsdatascience.com/the-art-of-recursion-a-connection-to-infinity-622292be0089/", "webpage": {"metadata": {"title": "The Art of Recursion; a connection to infinity. | by LeAnne Chan | Towards Data Science", "h1": "The Art of Recursion; a connection to infinity.", "description": "The beauty and power of recursion in art, maths, and computer science."}, "outgoing_paragraph_urls": [{"url": "https://en.wikipedia.org/wiki/Niklaus_Wirth", "anchor_text": "Niklaus Wirth", "paragraph_index": 13}, {"url": "https://en.wikipedia.org/wiki/Niklaus_Wirth", "anchor_text": "Niklaus Wirth", "paragraph_index": 21}, {"url": "https://www.youtube.com/watch?v=PXwStduNw14", "anchor_text": "https://www.youtube.com/watch?v=PXwStduNw14", "paragraph_index": 28}], "all_paragraphs": ["A while ago, I was installing some python packages into a new environment using PIP. As the name suggests, PIP is the standard package for installing and managing packages in Python. Out of curiosity, I decided to google what PIP stood for\u2026PIP = PIP Installs Python. This lead me down a spiral of recursive acronyms \u2014 acronyms that refer to itself. Though earlier examples of recursive acronyms seem to be from the field of computer science, there are also organisations now with recursive names (see: VISA and FARM).", "Recursion can also appear visually, such as in the Droste cocoa tin above. The idea of recursion is quite magical because even though it is beyond what we see, or even what is drawn, in theory, the recursive entity is being extended for infinity. It\u2019s not unlike standing in-between two mirrors, seeing the same image of yourself extending down an endless non-existent (to our visible eye at least) hallway.", "The power of recursion evidently lies in the possibility of defining an infinite set of objects by a finite statement. In the same manner, an infinite number of computations can be described by a finite recursive program, even if this program contains no explicit repetitions.", "Recursion is an important subfield in Mathematics and Computer Science. The Standford Encyclopedia of Philosophy defines recursive functions as one whose \u201cvalue is defined by the application of the same function applied to smaller arguments\u201d. The power and beauty of recursion lies in the power this one function. The function itself may not be trivial, but once you crack that code, it is a powerful one.", "Recursion in action \u2014 The application of recursion in Mathematics and Computer Science.", "A. In Mathematics: Recursive functions provide a scope for mathematical induction, a neat proof technique in mathematics. (And the outcome of recursive functions can be aesthetically pleasing e.g. the Fibonacci spiral.) B. In computer science: Recursion is a powerful algorithmic tool to solve problems which otherwise have to be solved iteratively, requiring one to keep track of states at each instance of the iteration.", "A sequence in mathematics refers to a list of numbers A\u2081, A\u2082, A\u2083\u2026An.A recursive sequence is one where each entry in the list is defined by previous entries in the list. E.g. A\u2083 = 3A\u2082-2A\u2081. Where A\u2081 and A\u2082 would need to first be assigned a number.", "Stated more generally, the example above will be defined as: Xn=3Xn-\u2081 -2Xn-\u2082 for all n>2 and X\u2081 = some number A, and X\u2082 = some number B. (the first two entries in the sequence must be defined as the recursive formula depends on these two numbers.)", "The Fibonacci Sequence is a famous recursive sequence, defined as :Fn = Fn-\u2081 + Fn-\u2082, for all n>2. Where F\u2081 = 1, and F\u2082 =1.", "Here\u2019s where the power of recursion comes in: How would you go about finding the value of A\u2083\u2080\u2080\u2080\u2080\u2080\u2080\u2080? Well, you could first calculate the values of A\u2081 all the way to A\u2082\u2089\u2089\u2089\u2089\u2089\u2089\u2089. Not ideal, unless you\u2019re a supercomputer? Even supercomputers have a limit in theory. Introducing the Closed Form of recursive sequences. This is a way of representing a value of an entry of a sequence without depending on preceding values!", "Finding the closed form of a recurrence relation is a topic for a whole other day. It should be noted that not all recursive sequences have a closed form (and if you do manage to find one, that\u2019d make you pretty famous!!). So let\u2019s assume first that we have identified an expression for the closed form.", "We need to prove that this expression indeed holds for all values in the sequence, and will do so using mathematical induction. This proof is elegant because you only need to prove that it holds for some value k, and viola, you\u2019ve shown that this holds for all values in the sequence!", "Basically, the logic flows as such \u20141. First assume that the expression holds true for all entries up to the k\u1d57\u02b0 entry (k is any arbitrary number) 2. Then prove that it holds true for the entry just after; i.e. the (k+1)\u1d57\u02b0 entry3. Since k is chosen arbitrarily, it can be any integer number. Before we started the proof, we also showed that it held true for the first two entries (n=1, n=2) on which the sequence is built on. The logic flows recursively throughout the sequence, hence by mathematical induction, the closed form holds true for all values of n (i.e. for all entries in the sequence).", "In the words of Niklaus Wirth, we have \u201cdefin[ed] an infinite set of objects by a finite statement\u201d.", "In some programming problems, we know the goal we want to achieve, but might not know the number of steps required, or the correct path to take. This is because the environments change and robust algorithm should work even regardless of environment. This is where recursion can help us solve these big problems.", "Recursion in programming is not unlike branches we see in nature \u2014 each branch branches out into more branches, going outward, eventually covering a large area (e.g. trees, roots, lighting, river deltas). At each step, a decision must be made, based on a fixed set of rules that is applied at each step. For example in roots, the new branch might grow towards areas of richer soil. This occurs recursively, until the roots of the plant stretch to give the plant sufficient nutrients, or there is no space left to grow.", "The same logic applies to recursive functions. The code to crack is thus this: \u2018what is the set of rules to apply at each step; and when do we stop branching out\u2019?", "This itself is not a trivial problem. However, once you can figure out the answer to that question, most programming languages allow recursive functions, that is a function that can call itself. This helps to execute the rule you have identified to solve the problem neatly. (I\u2019ll caveat here that recursion may not always be the best way to solve a programming problem, and in fact may be more time complex but that\u2019s another story.)", "Let\u2019s take an example \u2014 the MergeSort algorithm in Python. MergeSort is an algorithm to sort numbers in ascending order.", "This can at first be a lot to wrap one\u2019s head round and I\u2019ll leave the specifics of the algorithm for another time. But the basic concept remains \u2014 1. The rule: At each step, divide the list into two halves and sort each half. Then, combine each sorted half using the Merge rule. Merge itself is a function defined to merge two sorted lists in ascending order.2. Recursively divide the given list into two halves until the list only contains one element. 3. Then recursively combine the sorted halves, until the entire list is sorted.", "Notice that we did not need to define the number of times to divide the list, nor a specific set of fixed steps to take. This makes the algorithm applicable to a list with any combination of numbers or any length.", "Again, in the words of Niklaus Wirth, an \u201cinfinite number of computations can be described by a finite recursive program, even if this program contains no explicit repetitions\u201d.", "Recursion can be observed in nature, in the way trees spread their branches or streams in the river delta. Recursion is also in art, both explicitly (e.g. in the Droste tin design) and implicitly (e.g. the Fibonacci spiral and ratio in art).", "In Mathematics and Computer Science, recursion is a powerful way to reach into infinity by defining a finite set of rules or providing a finite proof.", "In recursive sequences in Mathematics, recursion allows us to prove that the expression holds for infinite entries of the sequence, by proving that it holds for some entry.", "In programming, recursive functions allows us to solve problems that may not be fully defined, with a finite set of rules.", "Recursion helps us reach into the infinite, with the finite time we have.", "This article is dedicated to my lower secondary teacher, Mrs Wong, who taught us that maths is beautiful.", "Other resources: This awesome TedTalk by Eddie Woo on how mathematics is a sense: https://www.youtube.com/watch?v=PXwStduNw14.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Passionate about the elegance of mathematics, infiniteness of data science, and practicality of economics. From Singapore \ud83c\uddf8\ud83c\uddec"], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F622292be0089&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----622292be0089--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----622292be0089--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@leannechannie?source=post_page-----622292be0089--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@leannechannie?source=post_page-----622292be0089--------------------------------", "anchor_text": "LeAnne Chan"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3984a193c444&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&user=LeAnne+Chan&userId=3984a193c444&source=post_page-3984a193c444----622292be0089---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F622292be0089&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F622292be0089&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://commons.wikimedia.org/wiki/File:Droste_Cacao_Alcalinise_blikje,_foto4.JPG", "anchor_text": "Wikipedia"}, {"url": "https://en.wikipedia.org/wiki/Niklaus_Wirth", "anchor_text": "Niklaus Wirth"}, {"url": "https://en.wikipedia.org/wiki/Recursion_(computer_science)#cite_note-3", "anchor_text": "[3]"}, {"url": "https://en.wikipedia.org/wiki/Niklaus_Wirth", "anchor_text": "Niklaus Wirth"}, {"url": "https://introcs.cs.princeton.edu/java/23recursion/", "anchor_text": "https://introcs.cs.princeton.edu/java/23recursion/"}, {"url": "https://en.wikipedia.org/wiki/Niklaus_Wirth", "anchor_text": "Niklaus Wirth"}, {"url": "https://plato.stanford.edu/entries/recursive-functions/", "anchor_text": "https://plato.stanford.edu/entries/recursive-functions/"}, {"url": "https://www.youtube.com/watch?v=PXwStduNw14", "anchor_text": "https://www.youtube.com/watch?v=PXwStduNw14"}, {"url": "https://medium.com/tag/mathematics?source=post_page-----622292be0089---------------mathematics-----------------", "anchor_text": "Mathematics"}, {"url": "https://medium.com/tag/recursion?source=post_page-----622292be0089---------------recursion-----------------", "anchor_text": "Recursion"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----622292be0089---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/tag/algorithms?source=post_page-----622292be0089---------------algorithms-----------------", "anchor_text": "Algorithms"}, {"url": "https://medium.com/tag/art?source=post_page-----622292be0089---------------art-----------------", "anchor_text": "Art"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F622292be0089&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&user=LeAnne+Chan&userId=3984a193c444&source=-----622292be0089---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F622292be0089&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&user=LeAnne+Chan&userId=3984a193c444&source=-----622292be0089---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F622292be0089&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----622292be0089--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F622292be0089&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----622292be0089---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----622292be0089--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----622292be0089--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----622292be0089--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----622292be0089--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----622292be0089--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----622292be0089--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----622292be0089--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----622292be0089--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@leannechannie?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@leannechannie?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "LeAnne Chan"}, {"url": "https://medium.com/@leannechannie/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "199 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2F3984a193c444&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&user=LeAnne+Chan&userId=3984a193c444&source=post_page-3984a193c444--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Ff7a40a3ed4e0&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fthe-art-of-recursion-a-connection-to-infinity-622292be0089&newsletterV3=3984a193c444&newsletterV3Id=f7a40a3ed4e0&user=LeAnne+Chan&userId=3984a193c444&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}