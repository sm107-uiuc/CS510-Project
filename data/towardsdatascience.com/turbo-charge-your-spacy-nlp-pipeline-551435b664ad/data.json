{"url": "https://towardsdatascience.com/turbo-charge-your-spacy-nlp-pipeline-551435b664ad", "time": 1683006667.755608, "path": "towardsdatascience.com/turbo-charge-your-spacy-nlp-pipeline-551435b664ad/", "webpage": {"metadata": {"title": "Turbo-charge your spaCy NLP pipeline | by Prashanth Rao | Towards Data Science", "h1": "Turbo-charge your spaCy NLP pipeline", "description": "Consider you have a large text dataset on which you want to apply some non-trivial NLP transformations, such as stopword removal followed by lemmatizing the words (i.e. reducing them to root form) in\u2026"}, "outgoing_paragraph_urls": [{"url": "https://spacy.io/usage", "anchor_text": "spaCy", "paragraph_index": 0}, {"url": "https://www.kaggle.com/nzalake52/new-york-times-articles", "anchor_text": "New York Times dataset", "paragraph_index": 1}, {"url": "https://github.com/prrao87/blog/tree/master/_notebooks/data/spacy_multiprocess", "anchor_text": "preprocessing notebook", "paragraph_index": 2}, {"url": "https://github.com/prrao87/blog/tree/master/_notebooks/data/spacy_multiprocess", "anchor_text": "the same directory", "paragraph_index": 2}, {"url": "https://prrao87.github.io/blog/images/copied_from_nb/clean", "anchor_text": "clean", "paragraph_index": 10}, {"url": "https://spacy.io/usage/spacy-101#annotations", "anchor_text": "Doc", "paragraph_index": 10}, {"url": "https://spacy.io/usage/spacy-101#annotations", "anchor_text": "representation", "paragraph_index": 10}, {"url": "https://prrao87.github.io/blog/images/copied_from_nb/clean", "anchor_text": "clean", "paragraph_index": 12}, {"url": "https://spacy.io/api/language#pipe", "anchor_text": "spaCy documentation", "paragraph_index": 13}, {"url": "https://prrao87.github.io/blog/images/copied_from_nb/clean", "anchor_text": "clean", "paragraph_index": 15}, {"url": "https://spacy.io/usage/processing-pipelines#disabling", "anchor_text": "See the spaCy docs", "paragraph_index": 34}], "all_paragraphs": ["Consider you have a large text dataset on which you want to apply some non-trivial NLP transformations, such as stopword removal followed by lemmatizing the words (i.e. reducing them to root form) in the text. spaCy is an industrial-strength NLP library designed for just such a task.", "In this post, the New York Times dataset is used to showcase how to significantly speed up a spaCy NLP pipeline. The goal is to take in an article\u2019s text, and speedily return a list of lemmas as well as unnecessary words, i.e. stopwords, removed.", "Pandas DataFrames provide a convenient interface to work with tabular data of this nature \u2014 the spaCy NLP methods can be conveniently applied directly to the relevant column of the DataFrame. First, the news data is obtained by running the preprocessing notebook (./data/preprocessing.ipynb), which processes the raw text file downloaded from Kaggle and performs some basic cleaning on it. This step generates a file that contains the tabular data (stored as nytimes.tsv). A curated stopword file is also provided in the same directory.", "Since we will not be doing any specialized tasks such as dependency parsing and named entity recognition in this exercise, these components are disabled when loading the spaCy model.", "Tip: spaCy has a sentencizer component that can be plugged into a blank pipeline.", "The sentencizer pipeline simply performs tokenization and sentence boundary detection, following which lemmas can be extracted as token properties.", "A method is defined to read in stopwords from a text file and convert it to a set in Python (for efficient lookup).", "The pre-processed version of the NYT news dataset is read in as a Pandas DataFrame. The columns are named date, headline and content - the text present in the content column is what will be preprocessed to remove stopwords and generate token lemmas.", "Since the news article data comes from a raw HTML dump, it is very messy and contains a host of unnecessary symbols, social media handles, URLs and other artifacts. An easy way to clean it up is to use a regex that parses only alphanumeric strings and hyphens (so as to include hyphenated words) that are between a given length (3 and 50). This filters each document down to only meaningful text for the lemmatizer.", "Now that we have just the clean, alphanumeric tokens left over, these can be further cleaned up by removing stopwords before proceeding to lemmatization.", "The straightforward way to process this text is to use an existing method, in this case, the lemmatize method shown below, and apply it to the clean column of the DataFrame using pandas.Series.apply. Lemmatization is done using the spaCy's underlying Doc representation of each token, which contains a lemma_ property. Stopwords are removed simultaneously with the lemmatization process, as each of these steps involves iterating through the same list of tokens.", "The resulting lemmas are stored as a list in a separate column preproc as shown below.", "Applying this method to the clean column of the DataFrame and timing it shows that it takes almost a minute to run on 8,800 news articles.", "Can we do better? in the spaCy documentation, it is stated that \u201cprocessing texts as a stream is usually more efficient than processing them one-by-one\u201d. This is done by calling a language pipe, which internally divides the data into batches to reduce the number of pure-Python function calls. This means that the larger the data, the better the performance gain that can be obtained by nlp.pipe.", "To use the language pipe to stream texts, a new lemmatizer method is defined that directly works on a spaCy Doc object. This method is then called in batches to work on a sequence of Doc objects that are streamed through the pipe as shown below.", "Just as before, a new column is created by passing data from the clean column of the existing DataFrame. Note that unlike in workflow #1 above, we do not use the apply method here - instead, the column of data (an iterable) is directly passed as an argument to the preprocessor pipe method.", "Timing this workflow doesn\u2019t seem to show improvement over the previous workflow, but as per the spaCy documentation, one would expect that as we work on bigger and bigger datasets, this approach should show some timing improvement (on average).", "We can do still better! The previous workflows sequentially worked through each news document to produce the lemma lists, which were then appended to the DataFrame as a new column. Because each row\u2019s output is completely independent of the other, this is an embarrassingly parallel problem, making it ideal for using multiple cores.", "The joblib library is recommended by spaCy for processing blocks of an NLP pipeline in parallel. Make sure that you pip install joblib before running the below section.", "To parallelize the workflow, a few more helper methods must be defined.", "In addition to the above methods, a similar nlp.pipe method is used as in workflow #2, on each chunk of texts. Each of these methods is wrapped into a preprocess_parallel method that defines the number of worker processes to be used (7 in this case), breaks the input data into chunks and returns a flattened result that can then be appended to the DataFrame. For machines with a higher number of physical cores, the number of worker processes can be increased further.", "The parallelized workflow using joblib is shown below.", "Timing this parallelized workflow shows significant performance gains (almost 3x reduction in run time)! As the number of documents becomes larger, the additional overhead of starting multiple worker processes with joblib is quickly paid for, and this method can significantly outperform the sequential methods.", "Note that in the parallelized workflow, two parameters need to be specified \u2014 the optimum number can vary depending on the dataset. The chunksize controls the size of each chunk being worked on by each process. In this example, for 8,800 documents, a chunksize of 1000 is used. Too small a chunksize would mean that a large number of workers would spawn to deal with the large number of chunks overall, which can slow down execution. Generally, a chunksize of several hundred documents to a few thousand is a good starting point (of course, this depends on how big each document in the data is so that the chunks can fit into memory).", "The batch size is parameter specific to nlp.pipe, and again, a good value depends on the data being worked on. For reasonably long-sized text such as news articles, it makes sense to keep the batch size reasonably small (so that each batch doesn't contain really long texts), so in this case 20 was chosen for the batch size. For other cases (e.g. Tweets) where each document is much shorter in length, a larger batch size can be used.", "It is recommended to experiment with either parameter to see which combination produces the best performance.", "Important: Use sets over lists for lookups wherever possible.", "Note that in the get_stopwords() method defined earlier on, the list of stopwords read in from the stopword file was converted to a set before using it in the lemmatizer method for stopword removal via lookups. This is a very useful trick in general, but specifically for stopword removal, the use of sets becomes all the more important. Why?", "In any realistic stopword list, such as this one for a news dataset, it\u2019s reasonable to expect several hundred stopwords. This is because for downstream tasks such as topic modelling or sentiment analysis, there are a number of domain-specific words that need to be removed (very common verbs, useless abbreviations such as timezones, days of the week, etc.). Each word in each and every document needs to be compared against every word in the stopword list, which is an expensive operation over tens of thousands of documents.", "It\u2019s well known that sets have O(1) (i.e. constant) lookup time as opposed to lists, which have O(n) lookup time. In the lemmatize() method, since we're checking each word for membership in the set of stopwords, we would expect sets to be much better than lists. To test this, we can rerun workflow #1 but this time, use a stopword list instead.", "With a stopword list, producing the same result now takes ~ 50% longer than it did before (with the set), which is a 1.5x increase in run time! This makes sense because in this case, the stopword list is about 500 words long, and each and every word in the corpus needs to be checked for membership in this reasonable-sized list.", "In this exercise, a news article dataset (NY Times) was processed using a spaCy pipeline to output a list of lemmas representing the useful tokens present in each article\u2019s content. Because real-world news datasets are almost certainly bigger than this one, and can be unbounded in size, a fast, efficient NLP pipeline is necessary to perform any meaningful analysis on the data. The following steps are very useful in speeding up the spaCy pipeline.", "Disable unnecessary components in spaCy model: The standard spaCy model\u2019s pipeline contains the tagger (to assign part-of-speech tags), the parser (to generate a dependency parse) and named entity recognition components. If any or none of these actions are desired, these components must be disabled immediately after loading the model (as shown above).", "Use sets over lists for lookups: When performing lookups to compare one set of tokens against another, always perform membership checks using sets \u2014 lists are significantly slower for lookups! The larger the list/set of stopwords, the bigger the performance gain seen when using sets.", "Use custom language pipes when possible: Setting up a language pipe using nlp.pipe is an extremely flexible and efficient way to process large blocks of text. Even better, spaCy allows you to individually disable components for each specific sub-task, for example, when you need to separately perform part-of-speech tagging and named entity recognition (NER). See the spaCy docs for examples on how to disable pipeline components during model loading, processing or handling custom blocks.", "Use multiple cores when possible: When processing individual documents completely independent of one another, consider parallelizing the workflow by dividing the computation across multiple cores. As the number of documents becomes larger and larger, the performance gains can be tremendous. One just needs to ensure that the documents are divided up into chunks, all of which must fit into memory at any given time.", "I hope this was useful \u2014 have fun testing these out in your next NLP project!", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Engineer by training. Machine Learning practitioner. I like writing about science, technology and computing."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2F551435b664ad&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----551435b664ad--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----551435b664ad--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://medium.com/@tech_optimist?source=post_page-----551435b664ad--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@tech_optimist?source=post_page-----551435b664ad--------------------------------", "anchor_text": "Prashanth Rao"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fefdb4f4a0d1b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&user=Prashanth+Rao&userId=efdb4f4a0d1b&source=post_page-efdb4f4a0d1b----551435b664ad---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F551435b664ad&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F551435b664ad&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://pixabay.com/illustrations/space-rocket-night-cartoon-3262811/", "anchor_text": "Pixabay"}, {"url": "https://spacy.io/usage", "anchor_text": "spaCy"}, {"url": "https://www.kaggle.com/nzalake52/new-york-times-articles", "anchor_text": "New York Times dataset"}, {"url": "https://github.com/prrao87/blog/tree/master/_notebooks/data/spacy_multiprocess", "anchor_text": "preprocessing notebook"}, {"url": "https://github.com/prrao87/blog/tree/master/_notebooks/data/spacy_multiprocess", "anchor_text": "the same directory"}, {"url": "https://prrao87.github.io/blog/images/copied_from_nb/clean", "anchor_text": "clean"}, {"url": "https://spacy.io/usage/spacy-101#annotations", "anchor_text": "Doc"}, {"url": "https://spacy.io/usage/spacy-101#annotations", "anchor_text": "representation"}, {"url": "https://prrao87.github.io/blog/images/copied_from_nb/clean", "anchor_text": "clean"}, {"url": "https://spacy.io/api/language#pipe", "anchor_text": "spaCy documentation"}, {"url": "https://prrao87.github.io/blog/images/copied_from_nb/clean", "anchor_text": "clean"}, {"url": "https://spacy.io/usage/processing-pipelines#disabling", "anchor_text": "See the spaCy docs"}, {"url": "https://prrao87.github.io/blog/spacy/nlp/performance/2020/05/02/spacy-multiprocess.html", "anchor_text": "https://prrao87.github.io"}, {"url": "https://medium.com/tag/nlp?source=post_page-----551435b664ad---------------nlp-----------------", "anchor_text": "NLP"}, {"url": "https://medium.com/tag/spacy?source=post_page-----551435b664ad---------------spacy-----------------", "anchor_text": "Spacy"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----551435b664ad---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/data-science?source=post_page-----551435b664ad---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/programming?source=post_page-----551435b664ad---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F551435b664ad&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&user=Prashanth+Rao&userId=efdb4f4a0d1b&source=-----551435b664ad---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2F551435b664ad&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&user=Prashanth+Rao&userId=efdb4f4a0d1b&source=-----551435b664ad---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2F551435b664ad&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----551435b664ad--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2F551435b664ad&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----551435b664ad---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----551435b664ad--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----551435b664ad--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----551435b664ad--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----551435b664ad--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----551435b664ad--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----551435b664ad--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----551435b664ad--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----551435b664ad--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@tech_optimist?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@tech_optimist?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Prashanth Rao"}, {"url": "https://medium.com/@tech_optimist/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "473 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fefdb4f4a0d1b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&user=Prashanth+Rao&userId=efdb4f4a0d1b&source=post_page-efdb4f4a0d1b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F5aedbeec5972&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fturbo-charge-your-spacy-nlp-pipeline-551435b664ad&newsletterV3=efdb4f4a0d1b&newsletterV3Id=5aedbeec5972&user=Prashanth+Rao&userId=efdb4f4a0d1b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}