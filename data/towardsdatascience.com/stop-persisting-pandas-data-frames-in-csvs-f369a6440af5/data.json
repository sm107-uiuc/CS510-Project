{"url": "https://towardsdatascience.com/stop-persisting-pandas-data-frames-in-csvs-f369a6440af5", "time": 1683012761.008002, "path": "towardsdatascience.com/stop-persisting-pandas-data-frames-in-csvs-f369a6440af5/", "webpage": {"metadata": {"title": "Stop persisting pandas data frames in CSVs | by Vaclav Dekanovsky | Towards Data Science", "h1": "Stop persisting pandas data frames in CSVs", "description": "CSV is a great format for data exchange. It\u2019s understood all around the world and editable in a regular notepad. That doesn\u2019t mean that it\u2019s suitable for persisting all DataFrames. CSVs can be slow\u2026"}, "outgoing_paragraph_urls": [{"url": "https://towardsdatascience.com/the-best-format-to-save-pandas-data-414dca023e0d", "anchor_text": "Ilia Zaitsev", "paragraph_index": 1}, {"url": "https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html", "anchor_text": "Reading Pandas\u2019s IO tools", "paragraph_index": 6}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Pandas/Persistance/Stop%20Persisting%20Pandas%20to%20CSV.ipynb", "anchor_text": "GitHub", "paragraph_index": 7}, {"url": "https://docs.python.org/3/library/pickle.html", "anchor_text": "python native format", "paragraph_index": 8}, {"url": "https://www.python.org/dev/peps/pep-0574/", "anchor_text": "PEP574", "paragraph_index": 8}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_pickle.html", "anchor_text": "pickle them", "paragraph_index": 9}, {"url": "https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#parquet", "anchor_text": "Pandas IO page", "paragraph_index": 14}, {"url": "https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#excel-files", "anchor_text": "Pandas IO page", "paragraph_index": 16}, {"url": "https://arrow.apache.org/docs/python/feather.html", "anchor_text": "Feather", "paragraph_index": 20}, {"url": "https://numpy.org/doc/stable/user/basics.types.html", "anchor_text": "numpy data types overview", "paragraph_index": 25}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Pandas/Persistance/Stop%20Persisting%20Pandas%20to%20CSV.ipynb", "anchor_text": "GitHub", "paragraph_index": 27}, {"url": "https://towardsdatascience.com/visualization-with-plotly-express-comprehensive-guide-eb5ee4b50b57", "anchor_text": "Plotly.Express", "paragraph_index": 32}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Pandas/Persistance/Stop%20Persisting%20Pandas%20to%20CSV.ipynb", "anchor_text": "code (GitHub)", "paragraph_index": 35}], "all_paragraphs": ["CSV is a great format for data exchange. It\u2019s understood all around the world and editable in a regular notepad. That doesn\u2019t mean that it\u2019s suitable for persisting all DataFrames. CSVs can be slow to read and write, they take more disk space, and most importantly CSVs don\u2019t store information about data types.", "Ilia Zaitsev did a great analysis of speed and memory usage of various pandas persistence methods. I\u2019ll touch the performance at the end when we will program an automated performance test. First, I want to focus on a different thing \u2014 how do these file formats handle various data types.", "Pandas support a rich set of data types and some of them have multiple subtypes to make work with big data frames more efficient. The fundamental data types are:", "Since pandas is using numpy arrays as its backend structures, the ints and floats can be differentiated into more memory efficient types like int8 , int16 , int32 , int64 , unit8 , uint16 , uint32 and uint64 as well as float32 and float64.", "CSV doesn\u2019t store information about the data types and you have to specify it with each read_csv(). Without telling CSV reader, it will infer all integer columns as the least efficient int64, floats as float64, categories will be loaded as strings as well as datetimes.", "TimeDeltas are stored as string in CSVs -5 days +18:59:39.000000 and you would have to write a special parser to turn these strings back to timedelta format of pandas.", "Luckily, csv is not the only option to persist the data frames. Reading Pandas\u2019s IO tools you see that a data frame can be written into many formats, databases, or even a clipboard.", "You can run the code yourself using this GitHub notebook. In the end, I\u2019ll describe in detail how the data were created and I\u2019ll guide you through the performance tests and sanity check using a real dataframe.", "Pickle is the python native format for object serialization. It allows the python code to implement any kind of enhancement, like the latest protocol 5 described in PEP574 pickling out-of-band data buffers.", "It also means that pickling outside of the Python ecosystem is difficult. However, if you want to store some pre-processed data for later or you just don\u2019t want to lose hours of analytical work while not having any immediate use for the data, just pickle them.", "Contrary to .to_csv() .to_pickle() method accepts only 3 parameters.", "An error you get when you read a pickle created in the newer version of python:", "Apache Parquet is a compressed binary columnar storage format used in Hadoop ecosystem. It allows serializing complex nested structures, supports column-wise compression and column-wise encoding, and offers fast reads because it\u2019s not necessary to read the whole column is you need only part of the data.", ".to_parquet() method accepts only several parameters.", "More specifics on Pandas IO page.", "Sometimes it\u2019s handy to export your data into an excel. It adds the benefit of easy manipulation, at a cost of the slowest reads and writes. It also ignores many datatypes. Timezones cannot be written into excel at all.", "More information on Pandas IO page.", "Compressed format using an internal file-like structure suitable for huge heterogeneous data. It\u2019s also ideal if we need to randomly access various parts of the dataset. If the data are stored as table (PyTable) you can directly query the hdf store using store.select(key,where=\"A>0 or B<5\")", "Quite often it\u2019s useful to persist your data into the database. Libraries like sqlalchemy are dedicated to this task.", "If you would like to increase the write time of .to_sql() try Kiran Kumar Chilla\u2019s method described in Speed up Bulk inserts article.", "Feather is a lightweight format for storing data frames and Arrow tables. It\u2019s another option how to store the data, which is relatively fast and results in a small file size. It did not include it in the measurement because the engine locks the files for quite a long time and it\u2019s hard to do several repetitions of the performance test. If you plan to persist a data frame once, feather can be an ideal option.", "Pandas offer even more persistence and reading methods. I\u2019ve omitted json and fix-width-file because they have similar characteristics like csv. You can try to write directly to Google Big Query with .to_gbq() or stata format. New formats will definitely appear to address the need to communicate with a variety of cloud providers.", "Thanks to this article, I started to like .to_clipboard() when I copy one-liners to emails, excel, or google doc.", "Many of the methods have benefits over the CSV, but is it worth using these unusual approaches when CSV is so readily understandable around the world. Let\u2019s have a look at the performance.", "During the performance test I focus on 4 key measures:", "For this reason, I have prepared a dataset with 50K random numbers, strings, categories, datetimes and bools. The ranges of the numerical values come from numpy data types overview.", "Generating random samples is a skill used almost in every test.", "You can check the support function generating random strings and dates in the GitHub notebook, I\u2019ll only mention one here:", "Full code to generate the data frame is described in this gist:", "Once we have some data we want to process them over and over again by different algorithms. You can write each of the tests separately, but let\u2019s squeeze the test into one line:", "The performance_test function accepts a dictionary with the test definition, which looks like:", "The dictionary contains the functions which should be run, e.g. pd.DataFrame.to_parquet and the parameters. We iterate the dict and run one function after another:", "I store the result into a dataframe to leverage Plotly.Express power to display the results with few lines of code:", "Testing things on random samples is useful to get the first impression how good your application or tool is, but once it will have to meet the reality. To avoid any surprise, you should try your code on the real data. I\u2019ve picked my favorite dataset \u2014 US Securities and Exchange Commission quarterly data dump \u2014 and run it through the performance test. I have achieved very similar results which persuaded me that my assumption was not completely wrong.", "Even though pickle clearly won the performance competition there can be use-cases when you would prefer to pick another format. We also had quite a special dataset and on the real data, the performance may differ.", "Feel free to play with the code (GitHub) and try the performance on your favorite dataset. For me personally, .to_pickle() is great when I store a pre-processed dataset because I don\u2019t have to worry about data format, I simply read_pickle() and hours of work materialize back to my notebook.", "Your home for data science. A Medium publication sharing concepts, ideas and codes.", "Data scientist who loves to explore everything and write about the topics from multiple points of view."], "all_outgoing_urls": [{"url": "https://rsci.app.link/?%24canonical_url=https%3A%2F%2Fmedium.com%2Fp%2Ff369a6440af5&%7Efeature=LoOpenInAppButton&%7Echannel=ShowPostUnderCollection&source=---two_column_layout_nav----------------------------------", "anchor_text": "Open in app"}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Fmedium.com%2Fnew-story&source=---two_column_layout_nav-----------------------new_post_sidenav-----------", "anchor_text": "Write"}, {"url": "https://medium.com/search?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign up"}, {"url": "https://medium.com/m/signin?operation=login&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&source=post_page---two_column_layout_nav-----------------------global_nav-----------", "anchor_text": "Sign In"}, {"url": "https://towardsdatascience.com/?source=post_page-----f369a6440af5--------------------------------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f369a6440af5--------------------------------", "anchor_text": "Towards Data Science"}, {"url": "https://vdekanovsky.medium.com/?source=post_page-----f369a6440af5--------------------------------", "anchor_text": ""}, {"url": "https://vdekanovsky.medium.com/?source=post_page-----f369a6440af5--------------------------------", "anchor_text": "Vaclav Dekanovsky"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed473176733b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&user=Vaclav+Dekanovsky&userId=ed473176733b&source=post_page-ed473176733b----f369a6440af5---------------------follow_byline-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff369a6440af5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&source=--------------------------bookmark_header-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff369a6440af5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&source=--------------------------bookmark_header-----------", "anchor_text": "Save"}, {"url": "https://towardsdatascience.com/the-best-format-to-save-pandas-data-414dca023e0d", "anchor_text": "Ilia Zaitsev"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/user_guide/text.html", "anchor_text": "since pandas 1.0.0"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html", "anchor_text": "Reading Pandas\u2019s IO tools"}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Pandas/Persistance/Stop%20Persisting%20Pandas%20to%20CSV.ipynb", "anchor_text": "GitHub"}, {"url": "https://towardsdatascience.com/visualization-with-plotly-express-comprehensive-guide-eb5ee4b50b57", "anchor_text": "Plotly"}, {"url": "https://docs.python.org/3/library/pickle.html", "anchor_text": "python native format"}, {"url": "https://www.python.org/dev/peps/pep-0574/", "anchor_text": "PEP574"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.to_pickle.html", "anchor_text": "pickle them"}, {"url": "https://docs.python.org/3/library/pickle.html#data-stream-format", "anchor_text": "protocol"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#parquet", "anchor_text": "Pandas IO page"}, {"url": "https://pandas.pydata.org/pandas-docs/stable/user_guide/io.html#excel-files", "anchor_text": "Pandas IO page"}, {"url": "https://medium.com/analytics-vidhya/speed-up-bulk-inserts-to-sql-db-using-pandas-and-python-61707ae41990", "anchor_text": "Speed up Bulk inserts to SQL db using Pandas and PythonThis article gives details about 1.different ways of writing data frames to database using pandas and pyodbc 2. How to\u2026medium.com"}, {"url": "https://arrow.apache.org/docs/python/feather.html", "anchor_text": "Feather"}, {"url": "https://numpy.org/doc/stable/user/basics.types.html", "anchor_text": "numpy data types overview"}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Pandas/Persistance/Stop%20Persisting%20Pandas%20to%20CSV.ipynb", "anchor_text": "GitHub"}, {"url": "https://towardsdatascience.com/visualization-with-plotly-express-comprehensive-guide-eb5ee4b50b57", "anchor_text": "Plotly.Express"}, {"url": "https://towardsdatascience.com/visualization-with-plotly-express-comprehensive-guide-eb5ee4b50b57", "anchor_text": "Visualization with Plotly.Express: Comprehensive guideOne dataset and over 70 charts. Interactivity and animation often in a single line of code.towardsdatascience.com"}, {"url": "https://towardsdatascience.com/stock-fundamental-analysis-eda-of-secs-quarterly-data-summary-455e62ff4817", "anchor_text": "Stock Fundamental Analysis: EDA of SEC\u2019s quarterly data summaryExploratory data analysis of 2020 SEC filings in Pandastowardsdatascience.com"}, {"url": "https://github.com/vaclavdekanovsky/data-analysis-in-examples/blob/master/Pandas/Persistance/Stop%20Persisting%20Pandas%20to%20CSV.ipynb", "anchor_text": "code (GitHub)"}, {"url": "https://towardsdatascience.com/complete-guide-to-pythons-cross-validation-with-examples-a9676b5cac12", "anchor_text": "Complete guide to python\u2019s cross-validation with examplesExamples and use cases of sklearn\u2019s cross-validation explaining KFold, shuffling, stratification and how it impacts\u2026towardsdatascience.com"}, {"url": "https://towardsdatascience.com/is-something-better-than-pandas-when-the-dataset-fits-the-memory-7e8e983c4fe5", "anchor_text": "Is something better than pandas when the dataset fits the memory?Explore Vaex, Dask, PySpark, Modin and Juliatowardsdatascience.com"}, {"url": "https://canva.7eqqol.net/WnbXZ", "anchor_text": "canva.com"}, {"url": "https://medium.com/tag/python?source=post_page-----f369a6440af5---------------python-----------------", "anchor_text": "Python"}, {"url": "https://medium.com/tag/plotly-express?source=post_page-----f369a6440af5---------------plotly_express-----------------", "anchor_text": "Plotly Express"}, {"url": "https://medium.com/tag/code-performance?source=post_page-----f369a6440af5---------------code_performance-----------------", "anchor_text": "Code Performance"}, {"url": "https://medium.com/tag/pandas?source=post_page-----f369a6440af5---------------pandas-----------------", "anchor_text": "Pandas"}, {"url": "https://medium.com/tag/dataframes?source=post_page-----f369a6440af5---------------dataframes-----------------", "anchor_text": "Dataframes"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff369a6440af5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&user=Vaclav+Dekanovsky&userId=ed473176733b&source=-----f369a6440af5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fvote%2Ftowards-data-science%2Ff369a6440af5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&user=Vaclav+Dekanovsky&userId=ed473176733b&source=-----f369a6440af5---------------------clap_footer-----------", "anchor_text": ""}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fbookmark%2Fp%2Ff369a6440af5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&source=--------------------------bookmark_footer-----------", "anchor_text": ""}, {"url": "https://towardsdatascience.com/?source=post_page-----f369a6440af5--------------------------------", "anchor_text": "More from Towards Data Science"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fcollection%2Ftowards-data-science%2Ff369a6440af5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&collection=Towards+Data+Science&collectionId=7f60cf5620c9&source=post_page-----f369a6440af5---------------------follow_footer-----------", "anchor_text": "Follow"}, {"url": "https://towardsdatascience.com/?source=post_page-----f369a6440af5--------------------------------", "anchor_text": "Read more from Towards Data Science"}, {"url": "https://medium.com/?source=post_page-----f369a6440af5--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f369a6440af5--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f369a6440af5--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f369a6440af5--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f369a6440af5--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f369a6440af5--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f369a6440af5--------------------------------", "anchor_text": ""}, {"url": "https://vdekanovsky.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://vdekanovsky.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Vaclav Dekanovsky"}, {"url": "https://vdekanovsky.medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "623 Followers"}, {"url": "https://medium.com/m/signin?actionUrl=https%3A%2F%2Fmedium.com%2F_%2Fsubscribe%2Fuser%2Fed473176733b&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&user=Vaclav+Dekanovsky&userId=ed473176733b&source=post_page-ed473176733b--two_column_layout_sidebar-----------------------follow_profile-----------", "anchor_text": "Follow"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F41f38caa0bb5&operation=register&redirect=https%3A%2F%2Ftowardsdatascience.com%2Fstop-persisting-pandas-data-frames-in-csvs-f369a6440af5&newsletterV3=ed473176733b&newsletterV3Id=41f38caa0bb5&user=Vaclav+Dekanovsky&userId=ed473176733b&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}