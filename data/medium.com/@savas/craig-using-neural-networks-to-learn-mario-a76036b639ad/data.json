{"url": "https://medium.com/@savas/craig-using-neural-networks-to-learn-mario-a76036b639ad", "time": 1682988330.798048, "path": "medium.com/@savas/craig-using-neural-networks-to-learn-mario-a76036b639ad/", "webpage": {"metadata": {"title": "CrAIg: Using Neural Networks to learn Mario | by Niko Savas | Medium", "h1": "CrAIg: Using Neural Networks to learn Mario", "description": "Joe Crozier and I recently came back from YHack, a 36-hour, 1500 person hackathon held by Yale University. This is our second year in a row attending, and for the second time we managed to place in\u2026"}, "outgoing_paragraph_urls": [{"url": "http://joecrozier.ca", "anchor_text": "Joe Crozier", "paragraph_index": 0}, {"url": "http://nn.cs.utexas.edu/downloads/papers/stanley.ec02.pdf", "anchor_text": "Evolving Neural Networks through Augmented Topologies", "paragraph_index": 3}, {"url": "http://nn.cs.utexas.edu/downloads/papers/stanley.ec02.pdf", "anchor_text": "the paper that this algorithm is based off", "paragraph_index": 11}, {"url": "http://nn.cs.utexas.edu/downloads/papers/stanley.ec02.pdf", "anchor_text": "original paper", "paragraph_index": 33}, {"url": "https://github.com/joenot443/crAIg/blob/master/NEAT/matingSeason.lua#L41", "anchor_text": "here", "paragraph_index": 33}, {"url": "https://github.com/joenot443/crAIg/blob/master/NEAT/util/calculateCompatibilityDistance.lua", "anchor_text": "here", "paragraph_index": 35}], "all_paragraphs": ["Joe Crozier and I recently came back from YHack, a 36-hour, 1500 person hackathon held by Yale University. This is our second year in a row attending, and for the second time we managed to place in the top 8!", "Our project, named \u201ccrAIg\u201d, is a self-teaching algorithm that learns to play Super Mario Bros. for the Nintendo Entertainment System (NES). It begins with absolutely no knowledge of what Mario is, how to play it, or what winning looks like, and using neuroevolution, slowly builds up a foundation for itself to be able to progress in the game.", "My focus on this project was the gritty details of the implementation of crAIg\u2019s evolution algorithm, so I figured I\u2019d make a relatively indepth blog post about it.", "crAIg\u2019s evolution is based on a paper titled Evolving Neural Networks through Augmented Topologies, specifically an algorithm titled \u201cNEAT\u201d. The rest of the blog post is going to cover my implementation of it, hopefully in relatively layman\u2019s terms.", "Before we jump right into the algorithm, I\u2019m going to lay a foundation for the makeup of crAIg\u2019s brain. His \u201cbrain\u201d at any given point playing the game is made up of a collection of \u201cneurons\u201d and \u201csynapses\u201d, alternatively titled nodes and connections/links. Essentially, his brain is a directed graph.", "Above is the second part of this project, a Node.js server that displays the current state of crAIg\u2019s brain, or what he is \u201cthinking\u201d. Let\u2019s go through it quickly to understand what it\u2019s representing.", "On the left you see a big grid of squares. This is what the game looks like right now, or what crAIg can \u201csee\u201d. He doesn\u2019t know what any of the squares mean, but he knows that an \u201cair\u201d tile is different from a \u201cground\u201d tile in some way. Each of the squares is actually an input neuron.", "On the right side you can see the 4 \u201coutput neurons\u201d, or the buttons that crAIg can press. You can also see a line going from one of the black squares on the left grid to the \u201cR\u201d neuron, labelled \u201c1\u201d. This is a synapse, and when the input neuron fires on the left, it will send a signal down the synapse and tell crAIg to press the \u201cR\u201d button. In this way, crAIg walks right. As crAIg evolves, more neurons and synapses are created until his brain might look something more like this:", "In this one I\u2019ll just point out a couple things. First of all, the green square on the left is a goomba. Second, you can see another neuron at the very bottom (labelled 176). This is called a hidden neuron, and represents a neuron that is neither input nor output. They appear in crAIg\u2019s brain for added complexity as he evolves. You can also see that at his time of death (Mario just died to a goomba), he was trying to press the \u201cR\u201d and \u201cB\u201d buttons.", "While learning Mario is a neat application of neural networks and neuroevolution, it serves mostly as a means to demonstrate the power of these self-evolving neural networks. In reality, the applications for neural networks is endless. While crAIg only learned how to play a simple NES game, the exact same algorithm that was implemented could also be applied to a robot that cleans your house, works in a factory, or even paints beautiful paintings.", "crAIg is a cool peek into the future where machines no longer need to be programmed to complete specific tasks, but are instead given guidelines and can teach themselves and learn from experience. As the tasks we expect machines to complete become more and more complex, it becomes less possible to \u201chard code\u201d their tasks in. We need more versatile machines to work for us, and evolving neural networks are a step in that direction.", "If you\u2019re curious about some history behind the problems encountered by neuroevolution, I highly recommend reading the paper that this algorithm is based off. The first section of the paper covers many different approaches to neuroevolution and their benefits.", "NEAT is a genetic algorithm that puts every iteration of crAIg\u2019s brain to the test and then selectively breeds them in a very similar way to the evolution of species in nature. The hierarchy is as follows:", "Synapse/Neuron: Building blocks of crAIg\u2019s brain.", "Genome: An iteration of crAIg\u2019s brain. Essentially a collection of neurons and synapses.", "Generation: An iteration of the NEAT algorithm. This is repeated over and over to evolve crAIg.", "The first step every generation is to calculate the fitness of every individual genome from the previous generation. This involves running the same function on each genome so that NEAT knows how successful each one is. For crAIg, this means running through a Mario level using a particular genome, or \u201cbrain\u201d. After running through the level, we determine the \u201cfitness\u201d of the genome by this function:", "Once the fitness of every genome has been calculated, we can move on to the next portion of the algorithm.", "This part of the algorithm is probably the least intuitive. The reason for this \u201cadjusted fitness\u201d is to discourage species from growing too big. As the population in a species goes up, their \u201cadjusted fitness\u201d goes down, forcing the genetic algorithm to diversify.", "The proper implementation of this algorithm is relatively intensive, so for crAIg\u2019s implementation we simplified it to the following:", "The important part here is that each genome now has an adjusted fitness value associated with it.", "Here\u2019s where the natural selection part comes in! The \u201cSurvival of the fittest\u201d portion is all about determining how many genomes survive another generation, as well as how many offspring will be born in the species. The algorithms used here aren\u2019t outlined directly in the paper, so most of these algorithms were created through trial and error.", "The first step is to determine how many off a species will die to make room for more babies. This is done proportionally to a species\u2019 adjusted fitness: the higher the adjusted fitness, the more die off to make room for babies.", "The second step is to determine how many children should be born in the species. This is also proportional to the adjusted fitness of the species.", "By the end of these two functions, the species will have a certain number of genomes left as well as a \u201cbaby quota\u201d \u2014 the difference between the number of genomes and the populationSize.", "This algorithm is necessary to allow for species to be left behind. Sometimes a species will go down the completely wrong path, and there\u2019s no point in keeping them around. This algorithm works in a very simple way: If a species is in the bottom __% of the entire generation, it is marked for extinction. If a species is marked for extinction __ times in a row, then all genomes in the species are killed off.", "Now comes the fun genetics part! Each species should have a certain number of genomes as well as a certain number of allotted spots for new offspring. Those spots now need to be populated.", "Each empty population spot needs to be filled, but can be filled through either \u201casexual\u201d or \u201csexual\u201d reproduction. In other words, offspring can result from either two genomes in the species being merged or from a mutation of a single genome in the species. Before I discuss the process of \u201cmerging\u201d two genomes, I\u2019ll first discuss mutations.", "There are three kinds of mutations that can happen to a genome in NEAT. They are as follows:", "This involves a re-distribution of all synapse weights in a genome. They can be either completely re-distributed or simply \u201cperturbed\u201d, meaning changed slightly.", "Adding a synapse means finding two previously unconnected nodes and connecting them with a synapse. This new synapse is given a random weight.", "This is the trickiest of the mutations. When adding a node, you need to split an already existing synapse into two synapses and add a node in between them. The weight of the original synapse is copied on to the second synapse, while the first synapse is given a weight of 1. One important fact to note is that the first synapse (bright red in the above picture) is not actually deleted, but merely \u201cdisabled\u201d. This means that it exists in the genome, but it is marked as inactive.", "Synapses added in either Mutate Add Node or Mutate Add Synapse are given a unique \u201cid\u201d called a \u201chistorical marking\u201d, that is used in the crossover (mating) algorithm.", "When two genomes \u201cmate\u201d to produce an offspring, there is an algorithm detailed in the NEAT paper that must be followed. The intuition behind it is to match up common ancestor synapses (remember we\u2019ve been keeping their \u201chistorical marking\u201ds), then take the mutations that don\u2019t match up and mix and match them to create the child. Once a child has been created in this way, it undergoes the mutation process outlined above. I won\u2019t go into too much detail on this algorithm but if you\u2019re curious about it you can find a more detailed explanation of it in section 3.2 of the original paper, or you can see the code I used to implement it here.", "Once all the babies have been created in every species, we can finally progress to the final stage of the genetic algorithm: Respeciation. Essentially, we first select a \u201ccandidate genome\u201d from each species. This genome is now the representative for the species. All genomes that are not selected as candidates are put into a generic pool and re-organized. The re-organization relies on an equation called the \u201ccompatibility distance equation\u201d.", "This equation determines how similar (or different) any two given genomes are. I won\u2019t go into the gritty details of how the equation works, as it is well explain in section 3.3 of the original paper, as well as here in crAIg\u2019s code.", "If a genome is too different from any of the candidate genomes, it is placed in its own species. Using this process, all of the genomes in the generic pool are re-placed into species.", "Once this process has completed, the generation is done, and we are ready to re-calculate the fitness of each of the genomes.", "While creating crAIg meant getting very little sleep at YHack, it was well worth it for a couple reasons.", "First of all, the NEAT algorithm is a very complex one. Learning how to implement a complex algorithm without losing myself in its complexity was an exercise in code cleanliness, despite being pressed for time because of the hackathon.", "It was also very interesting to create an algorithm that is mostly based off a paper as opposed to one that I have example code to work with. Often this meant carefully looking into the wording used in the paper to determine whether I should be using a > or a >=, for example.", "One of the most difficult parts of this project was that I was unable to test as I was programming. I essentially wrote all of the code blind and then was able to test and debug it once it had all been created. This was for a couple reasons, partially because of the time constraints of a hackathon, and partially because the algorithm as a whole has a lot of interlocking parts, meaning they needed to be in a working state to be able to see if the algorithm worked.", "Overall I\u2019m happy and proud by how Joe and I were able to deal with the stress of creating such a deep and complex project from scratch in a short 36 hour period. Not only did we enjoy ourselves and place well, but we also managed to teach crAIg some cool skills, like jumping over the second pipe in Level 1:"], "all_outgoing_urls": [{"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@savas?source=post_page-----a76036b639ad--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@savas?source=post_page-----a76036b639ad--------------------------------", "anchor_text": "Niko Savas"}, {"url": "http://joecrozier.ca", "anchor_text": "Joe Crozier"}, {"url": "http://nn.cs.utexas.edu/downloads/papers/stanley.ec02.pdf", "anchor_text": "Evolving Neural Networks through Augmented Topologies"}, {"url": "http://nn.cs.utexas.edu/downloads/papers/stanley.ec02.pdf", "anchor_text": "the paper that this algorithm is based off"}, {"url": "http://nn.cs.utexas.edu/downloads/papers/stanley.ec02.pdf", "anchor_text": "original paper"}, {"url": "https://github.com/joenot443/crAIg/blob/master/NEAT/matingSeason.lua#L41", "anchor_text": "here"}, {"url": "https://github.com/joenot443/crAIg/blob/master/NEAT/util/calculateCompatibilityDistance.lua", "anchor_text": "here"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----a76036b639ad---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/neural-networks?source=post_page-----a76036b639ad---------------neural_networks-----------------", "anchor_text": "Neural Networks"}, {"url": "https://medium.com/tag/programming?source=post_page-----a76036b639ad---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/@savas?source=post_page-----a76036b639ad--------------------------------", "anchor_text": "More from Niko Savas"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F85fd0c0a5440&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40savas%2Fcraig-using-neural-networks-to-learn-mario-a76036b639ad&newsletterV3=8214639162eb&newsletterV3Id=85fd0c0a5440&user=Niko+Savas&userId=8214639162eb&source=-----a76036b639ad---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----a76036b639ad--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----a76036b639ad--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----a76036b639ad--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----a76036b639ad--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----a76036b639ad--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----a76036b639ad--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----a76036b639ad--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/plans?source=upgrade_membership---two_column_layout_sidebar----------------------------------", "anchor_text": "Get unlimited access"}, {"url": "https://medium.com/@savas?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@savas?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Niko Savas"}, {"url": "https://medium.com/@savas/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "273 Followers"}, {"url": "http://savas.ca/", "anchor_text": "http://savas.ca/"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F85fd0c0a5440&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40savas%2Fcraig-using-neural-networks-to-learn-mario-a76036b639ad&newsletterV3=8214639162eb&newsletterV3Id=85fd0c0a5440&user=Niko+Savas&userId=8214639162eb&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}