{"url": "https://medium.com/@wolfgarbe/1000x-faster-spelling-correction-algorithm-2012-8701fcd87a5f", "time": 1683019459.5849652, "path": "medium.com/@wolfgarbe/1000x-faster-spelling-correction-algorithm-2012-8701fcd87a5f/", "webpage": {"metadata": {"title": "1000x Faster Spelling Correction algorithm (2012) | by Wolf Garbe | Medium", "h1": "1000x Faster Spelling Correction algorithm (2012)", "description": "Update1: An improved SymSpell implementation is now 1,000,000x faster. Update2: SymSpellCompound with Compound aware spelling correction. Update3: Benchmark of SymSpell, BK-Tree und Norvig\u2019s\u2026"}, "outgoing_paragraph_urls": [{"url": "https://seekstorm.com/blog/fast-approximate-string-matching/", "anchor_text": "1,000,000x faster", "paragraph_index": 0}, {"url": "https://github.com/wolfgarbe/SymSpell#compound-aware-multi-word-spelling-correction", "anchor_text": "Compound aware spelling correction", "paragraph_index": 0}, {"url": "https://seekstorm.com/blog/symspell-vs-bk-tree/", "anchor_text": "Benchmark of SymSpell, BK-Tree und Norvig\u2019s spell-correct", "paragraph_index": 0}, {"url": "http://www.quora.com/String-Searching-Algorithms/What-are-some-algorithms-of-spelling-correction-that-were-used-by-search-engine/answer/Wolf-Garbe", "anchor_text": "spelling correction for search engines", "paragraph_index": 1}, {"url": "http://norvig.com/spell-correct.html", "anchor_text": "Peter Norvig\u2019s page", "paragraph_index": 1}, {"url": "http://en.wikipedia.org/wiki/Edit_distance", "anchor_text": "Edit distance", "paragraph_index": 2}, {"url": "http://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance", "anchor_text": "Damerau-Levenshtein distance", "paragraph_index": 2}, {"url": "http://nlp.stanford.edu/IR-book/html/htmledition/edit-distance-1.html", "anchor_text": "Christopher D. Manning, Prabhakar Raghavan & Hinrich Sch\u00fctze: Introduction to Information Retrieval.", "paragraph_index": 5}, {"url": "http://norvig.com/spell-correct.html", "anchor_text": "Peter Norvig: How to Write a Spelling Corrector", "paragraph_index": 8}, {"url": "http://en.wikipedia.org/wiki/Hash_table", "anchor_text": "Hash Table", "paragraph_index": 22}, {"url": "http://en.wikipedia.org/wiki/BK-tree", "anchor_text": "BK-Trees", "paragraph_index": 23}, {"url": "http://en.wikipedia.org/wiki/Trie", "anchor_text": "Tries", "paragraph_index": 23}, {"url": "https://seekstorm.com/blog/pruning-radix-trie/", "anchor_text": "Pruning Radix Trie", "paragraph_index": 24}, {"url": "https://seekstorm.com", "anchor_text": "search as a service search API", "paragraph_index": 26}, {"url": "https://github.com/wolfgarbe/symspell", "anchor_text": "GitHub", "paragraph_index": 27}, {"url": "https://github.com/wolfgarbe/symspell", "anchor_text": "https://github.com/wolfgarbe/symspell", "paragraph_index": 27}, {"url": "https://github.com/wolfgarbe/SymSpell#ports", "anchor_text": "ports", "paragraph_index": 28}, {"url": "https://seekstorm.com/blog/1000x-spelling-correction/", "anchor_text": "seekstorm.com", "paragraph_index": 29}], "all_paragraphs": ["Update1: An improved SymSpell implementation is now 1,000,000x faster.Update2: SymSpellCompound with Compound aware spelling correction. Update3: Benchmark of SymSpell, BK-Tree und Norvig\u2019s spell-correct.", "Recently I answered a question on Quora about spelling correction for search engines. When I described our SymSpell algorithm I was pointed to Peter Norvig\u2019s page where he outlined his approach.", "Both algorithms are based on Edit distance (Damerau-Levenshtein distance). Both try to find the dictionary entries with smallest edit distance from the query term.", "If the edit distance is 0 the term is spelled correctly, if the edit distance is <=2 the dictionary term is used as spelling suggestion. But SymSpell uses a different way to search the dictionary, resulting in a significant performance gain and language independence. Three ways to search for minimum edit distance in a dictionary:", "1. Naive approachThe obvious way of doing this is to compute the edit distance from the query term to each dictionary term, before selecting the string(s) of minimum edit distance as spelling suggestion. This exhaustive search is inordinately expensive.", "Source: Christopher D. Manning, Prabhakar Raghavan & Hinrich Sch\u00fctze: Introduction to Information Retrieval.", "The performance can be significantly improved by terminating the edit distance calculation as soon as a threshold of 2 or 3 has been reached.", "2. Peter NorvigGenerate all possible terms with an edit distance (deletes + transposes + replaces + inserts) from the query term and search them in the dictionary. For a word of length n, an alphabet size a, an edit distance d=1, there will be n deletions, n-1 transpositions, a*n alterations, and a*(n+1) insertions, for a total of 2n+2an+a-1 terms at search time.", "Source: Peter Norvig: How to Write a Spelling Corrector.", "This is much better than the naive approach, but still expensive at search time (114,324 terms for n=9, a=36, d=2) and language dependent (because the alphabet is used to generate the terms, which is different in many languages and huge in Chinese: a=70,000 Unicode Han characters)", "3. Symmetric Delete Spelling Correction (SymSpell) Generate terms with an edit distance (deletes only) from each dictionary term and add them together with the original term to the dictionary. This has to be done only once during a pre-calculation step. Generate terms with an edit distance (deletes only) from the input term and search them in the dictionary. For a word of length n, an alphabet size of a, an edit distance of 1, there will be just n deletions, for a total of n terms at search time.", "This is three orders of magnitude less expensive (36 terms for n=9 and d=2) and language independent (the alphabet is not required to generate deletes). The cost of this approach is the pre-calculation time and storage space of x deletes for every original dictionary entry, which is acceptable in most cases.", "The number x of deletes for a single dictionary entry depends on the maximum edit distance: x=n for edit distance=1, x=n*(n-1)/2 for edit distance=2, x=n!/d!/(n-d)! for edit distance=d (combinatorics: k out of n combinations without repetitions, and k=n-d), E.g. for a maximum edit distance of 2 and an average word length of 5 and 100,000 dictionary entries we need to additionally store 1,500,000 deletes.", "The Symmetric Delete spelling correction algorithm reduces the complexity of edit candidate generation and dictionary lookup by using deletes only instead of deletes +transposes + replaces + inserts. It is six orders of magnitude faster (for edit distance=3) and language independent.", "Remark 1: During the precalculation, different words in the dictionary might lead to same delete term: delete(sun,1)==delete(sin,1)==sn. While we generate only one new dictionary entry (sn), inside we need to store both original terms as spelling correction suggestion (sun,sin)", "Remark 2: There are four different comparison pair types:", "The last comparison type is required for replaces and transposes only. But we need to check whether the suggested dictionary term is really a replace or an adjacent transpose of the input term to prevent false positives of higher edit distance (bank==bnak and bank==bink, but bank!=kanb and bank!=xban and bank!=baxn).", "Remark 3: Instead of a dedicated spelling dictionary we are using the search engine index itself. This has several benefits:", "Remark 4: We have implemented query suggestions/completion in a similar fashion. This is a good way to prevent spelling errors in the first place. Every newly indexed word, whose frequency is over a certain threshold, is stored as a suggestion to all of its prefixes (they are created in the index if they do not yet exist). As we anyway provide an instant search feature the lookup for suggestions comes also at almost no extra cost. Multiple terms are sorted by the number of results stored in the index.", "ReasoningThe SymSpell algorithm exploits the fact that the edit distance between two terms is symmetrical:", "We are using variant 3, because the delete-only-transformation is language independent and three orders of magnitude less expensive.", "Where does the speed come from?", "Computational Complexity The SymSpell algorithm is constant time ( O(1) time ), i.e. independent of the dictionary size (but depending on the average term length and maximum edit distance), because our index is based on a Hash Table which has an average search time complexity of O(1).", "Comparison to other approaches BK-Trees have a search time of O(log dictionary_size), whereas the SymSpell algorithm is constant time ( O(1) time ), i.e. independent of the dictionary size. Tries have a comparable search performance to our approach. But a Trie is a prefix tree, which requires a common prefix. This makes it suitable for autocomplete or search suggestions, but not applicable for spell checking. If your typing error is e.g. in the first letter, than you have no common prefix, hence the Trie will not work for spelling correction.", "If you need a very fast auto-complete then try my Pruning Radix Trie", "Application Possible application fields of the SymSpell algorithm are those of fast approximate dictionary string matching: spell checkers for word processors and search engines, correction systems for optical character recognition, natural language translation based on translation memory, record linkage, de-duplication, matching DNA sequences, fuzzy string searching and fraud detection.", "For a single user or for small edit distances other algorithms might just be fine. But for search engines and search as a service search API where you have to serve thousands of concurrent users, while still maintaining a latency of a few milliseconds, and where spelling correction is not even the main procession task, but only one of many components in query preprocessing, you need the fastest spelling correction you can get.", "Source codeThe C# implementation of the Symmetric Delete Spelling Correction algorithm is released on GitHub as Open Source under the MIT License:https://github.com/wolfgarbe/symspell", "PortsThere are ports in C++, Crystal, Go, Java, Javascript, Python, Ruby, Rust, Scala, Swift available.", "Originally published at seekstorm.com on June 7, 2012."], "all_outgoing_urls": [{"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----8701fcd87a5f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----8701fcd87a5f--------------------------------", "anchor_text": "Wolf Garbe"}, {"url": "https://www.flickr.com/photos/theredproject/3968278028", "anchor_text": "https://www.flickr.com/photos/theredproject/3968278028"}, {"url": "https://seekstorm.com/blog/fast-approximate-string-matching/", "anchor_text": "1,000,000x faster"}, {"url": "https://github.com/wolfgarbe/SymSpell#compound-aware-multi-word-spelling-correction", "anchor_text": "Compound aware spelling correction"}, {"url": "https://seekstorm.com/blog/symspell-vs-bk-tree/", "anchor_text": "Benchmark of SymSpell, BK-Tree und Norvig\u2019s spell-correct"}, {"url": "http://www.quora.com/String-Searching-Algorithms/What-are-some-algorithms-of-spelling-correction-that-were-used-by-search-engine/answer/Wolf-Garbe", "anchor_text": "spelling correction for search engines"}, {"url": "http://norvig.com/spell-correct.html", "anchor_text": "Peter Norvig\u2019s page"}, {"url": "http://en.wikipedia.org/wiki/Edit_distance", "anchor_text": "Edit distance"}, {"url": "http://en.wikipedia.org/wiki/Damerau%E2%80%93Levenshtein_distance", "anchor_text": "Damerau-Levenshtein distance"}, {"url": "http://nlp.stanford.edu/IR-book/html/htmledition/edit-distance-1.html", "anchor_text": "Christopher D. Manning, Prabhakar Raghavan & Hinrich Sch\u00fctze: Introduction to Information Retrieval."}, {"url": "http://norvig.com/spell-correct.html", "anchor_text": "Peter Norvig: How to Write a Spelling Corrector"}, {"url": "http://en.wikipedia.org/wiki/Hash_table", "anchor_text": "Hash Table"}, {"url": "http://en.wikipedia.org/wiki/BK-tree", "anchor_text": "BK-Trees"}, {"url": "http://en.wikipedia.org/wiki/Trie", "anchor_text": "Tries"}, {"url": "https://seekstorm.com/blog/pruning-radix-trie/", "anchor_text": "Pruning Radix Trie"}, {"url": "https://seekstorm.com", "anchor_text": "search as a service search API"}, {"url": "https://github.com/wolfgarbe/symspell", "anchor_text": "GitHub"}, {"url": "https://github.com/wolfgarbe/symspell", "anchor_text": "https://github.com/wolfgarbe/symspell"}, {"url": "https://github.com/wolfgarbe/SymSpell#ports", "anchor_text": "ports"}, {"url": "https://seekstorm.com/blog/1000x-spelling-correction/", "anchor_text": "seekstorm.com"}, {"url": "https://medium.com/tag/programming?source=post_page-----8701fcd87a5f---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/data-science?source=post_page-----8701fcd87a5f---------------data_science-----------------", "anchor_text": "Data Science"}, {"url": "https://medium.com/tag/computer-science?source=post_page-----8701fcd87a5f---------------computer_science-----------------", "anchor_text": "Computer Science"}, {"url": "https://medium.com/tag/information-retrieval?source=post_page-----8701fcd87a5f---------------information_retrieval-----------------", "anchor_text": "Information Retrieval"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----8701fcd87a5f---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/?source=post_page-----8701fcd87a5f--------------------------------", "anchor_text": "More from Wolf Garbe"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Feff35a084887&operation=register&redirect=https%3A%2F%2Fwolfgarbe.medium.com%2F1000x-faster-spelling-correction-algorithm-2012-8701fcd87a5f&newsletterV3=66bab1f6efa2&newsletterV3Id=eff35a084887&user=Wolf+Garbe&userId=66bab1f6efa2&source=-----8701fcd87a5f---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----8701fcd87a5f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----8701fcd87a5f--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----8701fcd87a5f--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----8701fcd87a5f--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----8701fcd87a5f--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----8701fcd87a5f--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----8701fcd87a5f--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/plans?source=upgrade_membership---two_column_layout_sidebar----------------------------------", "anchor_text": "Get unlimited access"}, {"url": "https://medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Wolf Garbe"}, {"url": "https://medium.com/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "431 Followers"}, {"url": "https://seekstorm.com", "anchor_text": "https://seekstorm.com"}, {"url": "https://github.com/wolfgarbe", "anchor_text": "https://github.com/wolfgarbe"}, {"url": "https://www.quora.com/profile/Wolf-Garbe", "anchor_text": "https://www.quora.com/profile/Wolf-Garbe"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2Feff35a084887&operation=register&redirect=https%3A%2F%2Fwolfgarbe.medium.com%2F1000x-faster-spelling-correction-algorithm-2012-8701fcd87a5f&newsletterV3=66bab1f6efa2&newsletterV3Id=eff35a084887&user=Wolf+Garbe&userId=66bab1f6efa2&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}