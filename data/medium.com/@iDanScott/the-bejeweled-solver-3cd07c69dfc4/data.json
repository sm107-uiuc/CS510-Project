{"url": "https://medium.com/@iDanScott/the-bejeweled-solver-3cd07c69dfc4", "time": 1682988297.2793448, "path": "medium.com/@iDanScott/the-bejeweled-solver-3cd07c69dfc4/", "webpage": {"metadata": {"title": "C# Plays Bejeweled Blitz. As some of you reading this may or may\u2026 | by Dan Scott | Medium", "h1": "C# Plays Bejeweled Blitz", "description": "As some of you reading this may or may not already know; over the past day or so I went from having the idea of creating a computer program that would essentially be able to play the popular arcade\u2026"}, "outgoing_paragraph_urls": [{"url": "https://github.com/iDanScott/BejeweledBotDotNet/blob/master/BejeweledBotDotNet/BejeweledWindowManager.cs#L72", "anchor_text": "this", "paragraph_index": 4}, {"url": "https://github.com/iDanScott/BejeweledBotDotNet", "anchor_text": "Open Source Github Project", "paragraph_index": 4}, {"url": "https://twitter.com/CoderDan", "anchor_text": "CoderDan", "paragraph_index": 5}], "all_paragraphs": ["As some of you reading this may or may not already know; over the past day or so I went from having the idea of creating a computer program that would essentially be able to play the popular arcade game Bejeweled Blitz on Facebook, to actually developing it. Now as hard as this problem sounds, it was surprisingly easy and fairly swift to solve. I broke it down in to 3 main steps:", "The first step was probably the most time consuming of them all as everything from there was just colour management. The Solution I came up with in the end for that was to take a screenshot of the entire screen, and then scan the image from top to bottom using a nested for loop until I found a funny shade of brown that only appears along the Top Edge of the bejeweled grid (for anyone wondering that colour is Color.FromArgb(255, 39, 19, 5)). Once this colour had been found using the bitmap.GetPixel(x, y) function, I broke out of both for loops and knew that was the point where the top left corner of the grid was. I could then use this to construct a rectangle which would extract the bejeweled grid from the full screenshot. The size of the rectangle was calculated using the size of the grid cells (40px\u00b2, found that out using trusty old paint) multiplied by the amount of rows/columns there were (8, found that out using my eye balls). This resulted in the Rectangle size coming out at 320px\u00b2.", "So the next step from here was to identify what colour resides in what square. To do that I started off by creating a 2 dimensional array of colours (Or Color\u2019s to be politically correct) that was 8 rows and 8 columns to match that of the playable grid. I then systematically looped through the 2 dimensional array of colours in a nested for of x and y values assigning the array the colour of the pixel at the Location (x * 40) + 20, (y * 40) + 22. The x value was decided as it was half way through the gem and 22 was chosen for the y value as certain gems have a white center (Green and yellow) so 22 provided a more accurate reading. With this 2 dimensional array I was then able to generate a visual representation of what the computer was seeing when it was trying to figure out what colour was where.", "As you can see from the above screenshot it\u2019s able to identify what gem is what colour depending on what pixel is at that magic 20, 22 of the cell. Another thing I thought about before I finished this project to the state it\u2019s in now is to prevent the application from trying to switch 2 empty cells (because one gem has just been blown up or something), I added all the known color codes to their own array and ask if the colour that\u2019s in the 2d array also resides within the known colours list, if it does it will then evaluate whether it can be moved to a winning square, if not it\u2019s ignored entirely.", "I won\u2019t bore you with the gory details of how I check if a gem can be moved, as instead this is a link to the beginning of the if statement in my Open Source Github Project. From here the full source code can be viewed, commented on and even improved upon if you guys feel like I could do something obviously better.", "Finally all that\u2019s left to do by definition of this application is to actually move the Gems. This is done by making some Windows API calls to set the mouse location and simulate mouse clicks. Again the details of how to exactly do that are within the github project, but if I\u2019ve kept your attention for this long all that\u2019s left to say is thank you and if you have any further questions don\u2019t hesitate to hit me up on here or twitter CoderDan."], "all_outgoing_urls": [{"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@iDanScott?source=post_page-----3cd07c69dfc4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@iDanScott?source=post_page-----3cd07c69dfc4--------------------------------", "anchor_text": "Dan Scott"}, {"url": "https://github.com/iDanScott/BejeweledBotDotNet/blob/master/BejeweledBotDotNet/BejeweledWindowManager.cs#L72", "anchor_text": "this"}, {"url": "https://github.com/iDanScott/BejeweledBotDotNet", "anchor_text": "Open Source Github Project"}, {"url": "https://twitter.com/CoderDan", "anchor_text": "CoderDan"}, {"url": "https://medium.com/tag/programming?source=post_page-----3cd07c69dfc4---------------programming-----------------", "anchor_text": "Programming"}, {"url": "https://medium.com/tag/problem-solving?source=post_page-----3cd07c69dfc4---------------problem_solving-----------------", "anchor_text": "Problem Solving"}, {"url": "https://medium.com/tag/ai?source=post_page-----3cd07c69dfc4---------------ai-----------------", "anchor_text": "AI"}, {"url": "https://medium.com/@iDanScott?source=post_page-----3cd07c69dfc4--------------------------------", "anchor_text": "More from Dan Scott"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F9a5c89fa25a6%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40iDanScott%2Fthe-bejeweled-solver-3cd07c69dfc4&user=Dan+Scott&userId=9a5c89fa25a6&source=-----3cd07c69dfc4---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----3cd07c69dfc4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----3cd07c69dfc4--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----3cd07c69dfc4--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----3cd07c69dfc4--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----3cd07c69dfc4--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----3cd07c69dfc4--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----3cd07c69dfc4--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/plans?source=upgrade_membership---two_column_layout_sidebar----------------------------------", "anchor_text": "Get unlimited access"}, {"url": "https://medium.com/@iDanScott?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@iDanScott?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Dan Scott"}, {"url": "https://medium.com/@iDanScott/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "17 Followers"}, {"url": "https://dan-scott.dev", "anchor_text": "https://dan-scott.dev"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fusers%2F9a5c89fa25a6%2Flazily-enable-writer-subscription&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40iDanScott%2Fthe-bejeweled-solver-3cd07c69dfc4&user=Dan+Scott&userId=9a5c89fa25a6&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}