{"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-3-deep-learning-and-convolutional-neural-networks-f40359318721", "time": 1682988199.6768608, "path": "medium.com/@ageitgey/machine-learning-is-fun-part-3-deep-learning-and-convolutional-neural-networks-f40359318721/", "webpage": {"metadata": {"title": "Machine Learning is Fun! Part 3: Deep Learning and Convolutional Neural Networks | by Adam Geitgey | Medium", "h1": "Machine Learning is Fun! Part 3: Deep Learning and Convolutional Neural Networks", "description": "Update: This article is part of a series. Check out the full series: Part 1, Part 2, Part 3, Part 4, Part 5, Part 6, Part 7 and Part 8! You can also read this article in \u666e\u901a\u8bdd, \u0420\u0443\u0441\u0441\u043a\u0438\u0439, \ud55c\uad6d\uc5b4, Portugu\u00eas\u2026"}, "outgoing_paragraph_urls": [{"url": "https://www.machinelearningisfun.com/get-the-book/", "anchor_text": "I\u2019ve written a new book based on these articles", "paragraph_index": 0}, {"url": "https://www.machinelearningisfun.com/get-the-book/", "anchor_text": "Check it out now", "paragraph_index": 0}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-80ea3ec3c471", "anchor_text": "Part 1", "paragraph_index": 3}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-2-a26a10b68df3#.lbsa5her1", "anchor_text": "Part 2", "paragraph_index": 3}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-80ea3ec3c471", "anchor_text": "part 1", "paragraph_index": 4}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-2-a26a10b68df3#.lbsa5her1", "anchor_text": "part 2", "paragraph_index": 4}, {"url": "http://xkcd.com/1425/", "anchor_text": "this famous xkcd comic", "paragraph_index": 5}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-2-a26a10b68df3#.lbsa5her1", "anchor_text": "Part 2", "paragraph_index": 10}, {"url": "http://yann.lecun.com/exdb/mnist/", "anchor_text": "MNIST data set of handwritten numbers", "paragraph_index": 12}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-2-a26a10b68df3#.lbsa5her1", "anchor_text": "Part 2", "paragraph_index": 13}, {"url": "https://en.wikipedia.org/wiki/Overwatch_(video_game)", "anchor_text": "Overwatch", "paragraph_index": 37}, {"url": "https://en.wikipedia.org/wiki/Convolutional_neural_network#Pooling_layer", "anchor_text": "max pooling", "paragraph_index": 56}, {"url": "https://www.cs.toronto.edu/~kriz/cifar.html", "anchor_text": "CIFAR10 data set", "paragraph_index": 71}, {"url": "http://www.vision.caltech.edu/visipedia/CUB-200-2011.html", "anchor_text": "Caltech-UCSD Birds-200\u20132011 data set", "paragraph_index": 71}, {"url": "http://tflearn.org/", "anchor_text": "TFLearn", "paragraph_index": 74}, {"url": "https://www.tensorflow.org/", "anchor_text": "TensorFlow", "paragraph_index": 74}, {"url": "https://gist.github.com/ageitgey/a40dded08e82e59724c70da23786bbf0", "anchor_text": "Here\u2019s a simple script", "paragraph_index": 79}, {"url": "https://en.wikipedia.org/wiki/Precision_and_recall", "anchor_text": "Precision and Recall", "paragraph_index": 89}, {"url": "https://github.com/tflearn/tflearn/tree/master/examples#tflearn-examples", "anchor_text": "examples that come with tflearn", "paragraph_index": 91}, {"url": "http://karpathy.github.io/2016/05/31/rl/", "anchor_text": "how to use algorithms to train computers how to play Atari games", "paragraph_index": 92}, {"url": "http://eepurl.com/b9fg2T", "anchor_text": "signing up for my Machine Learning is Fun! email list", "paragraph_index": 93}, {"url": "https://twitter.com/ageitgey", "anchor_text": "@ageitgey", "paragraph_index": 94}, {"url": "https://www.linkedin.com/in/ageitgey", "anchor_text": "find me on linkedin", "paragraph_index": 94}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78", "anchor_text": "Machine Learning is Fun Part 4", "paragraph_index": 95}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-5-language-translation-with-deep-learning-and-the-magic-of-sequences-2ace0acca0aa", "anchor_text": "Part 5", "paragraph_index": 95}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-6-how-to-do-speech-recognition-with-deep-learning-28293c162f7a", "anchor_text": "Part 6", "paragraph_index": 95}], "all_paragraphs": ["Giant update: I\u2019ve written a new book based on these articles! It not only expands and updates all my articles, but it has tons of brand new content and lots of hands-on coding projects. Check it out now!", "Are you tired of reading endless news stories about deep learning and not really knowing what that means? Let\u2019s change that!", "This time, we are going to learn how to write programs that recognize objects in images using deep learning. In other words, we\u2019re going to explain the black magic that allows Google Photos to search your photos based on what is in the picture:", "Just like Part 1 and Part 2, this guide is for anyone who is curious about machine learning but has no idea where to start. The goal is be accessible to anyone \u2014 which means that there\u2019s a lot of generalizations and we skip lots of details. But who cares? If this gets anyone more interested in ML, then mission accomplished!", "(If you haven\u2019t already read part 1 and part 2, read them now!)", "You might have seen this famous xkcd comic before.", "The goof is based on the idea that any 3-year-old child can recognize a photo of a bird, but figuring out how to make a computer recognize objects has puzzled the very best computer scientists for over 50 years.", "In the last few years, we\u2019ve finally found a good approach to object recognition using deep convolutional neural networks. That sounds like a a bunch of made up words from a William Gibson Sci-Fi novel, but the ideas are totally understandable if you break them down one by one.", "So let\u2019s do it \u2014 let\u2019s write a program that can recognize birds!", "Before we learn how to recognize pictures of birds, let\u2019s learn how to recognize something much simpler \u2014 the handwritten number \u201c8\u201d.", "In Part 2, we learned about how neural networks can solve complex problems by chaining together lots of simple neurons. We created a small neural network to estimate the price of a house based on how many bedrooms it had, how big it was, and which neighborhood it was in:", "We also know that the idea of machine learning is that the same generic algorithms can be reused with different data to solve different problems. So let\u2019s modify this same neural network to recognize handwritten text. But to make the job really simple, we\u2019ll only try to recognize one letter \u2014 the numeral \u201c8\u201d.", "Machine learning only works when you have data \u2014 preferably a lot of data. So we need lots and lots of handwritten \u201c8\u201ds to get started. Luckily, researchers created the MNIST data set of handwritten numbers for this very purpose. MNIST provides 60,000 images of handwritten digits, each as an 18x18 image. Here are some \u201c8\u201ds from the data set:", "The neural network we made in Part 2 only took in a three numbers as the input (\u201c3\u201d bedrooms, \u201c2000\u201d sq. feet , etc.). But now we want to process images with our neural network. How in the world do we feed images into a neural network instead of just numbers?", "The answer is incredible simple. A neural network takes numbers as input. To a computer, an image is really just a grid of numbers that represent how dark each pixel is:", "To feed an image into our neural network, we simply treat the 18x18 pixel image as an array of 324 numbers:", "The handle 324 inputs, we\u2019ll just enlarge our neural network to have 324 input nodes:", "Notice that our neural network also has two outputs now (instead of just one). The first output will predict the likelihood that the image is an \u201c8\u201d and thee second output will predict the likelihood it isn\u2019t an \u201c8\u201d. By having a separate output for each type of object we want to recognize, we can use a neural network to classify objects into groups.", "Our neural network is a lot bigger than last time (324 inputs instead of 3!). But any modern computer can handle a neural network with a few hundred nodes without blinking. This would even work fine on your cell phone.", "All that\u2019s left is to train the neural network with images of \u201c8\u201ds and not-\u201c8\"s so it learns to tell them apart. When we feed in an \u201c8\u201d, we\u2019ll tell it the probability the image is an \u201c8\u201d is 100% and the probability it\u2019s not an \u201c8\u201d is 0%. Vice versa for the counter-example images.", "Here\u2019s some of our training data:", "We can train this kind of neural network in a few minutes on a modern laptop. When it\u2019s done, we\u2019ll have a neural network that can recognize pictures of \u201c8\u201ds with a pretty high accuracy. Welcome to the world of (late 1980\u2019s-era) image recognition!", "It\u2019s really neat that simply feeding pixels into a neural network actually worked to build image recognition! Machine learning is magic! \u2026right?", "Well, of course it\u2019s not that simple.", "First, the good news is that our \u201c8\u201d recognizer really does work well on simple images where the letter is right in the middle of the image:", "But now the really bad news:", "Our \u201c8\u201d recognizer totally fails to work when the letter isn\u2019t perfectly centered in the image. Just the slightest position change ruins everything:", "This is because our network only learned the pattern of a perfectly-centered \u201c8\u201d. It has absolutely no idea what an off-center \u201c8\u201d is. It knows exactly one pattern and one pattern only.", "That\u2019s not very useful in the real world. Real world problems are never that clean and simple. So we need to figure out how to make our neural network work in cases where the \u201c8\u201d isn\u2019t perfectly centered.", "We already created a really good program for finding an \u201c8\u201d centered in an image. What if we just scan all around the image for possible \u201c8\u201ds in smaller sections, one section at a time, until we find one?", "This approach called a sliding window. It\u2019s the brute force solution. It works well in some limited cases, but it\u2019s really inefficient. You have to check the same image over and over looking for objects of different sizes. We can do better than this!", "When we trained our network, we only showed it \u201c8\u201ds that were perfectly centered. What if we train it with more data, including \u201c8\u201ds in all different positions and sizes all around the image?", "We don\u2019t even need to collect new training data. We can just write a script to generate new images with the \u201c8\u201ds in all kinds of different positions in the image:", "Using this technique, we can easily create an endless supply of training data.", "More data makes the problem harder for our neural network to solve, but we can compensate for that by making our network bigger and thus able to learn more complicated patterns.", "To make the network bigger, we just stack up layer upon layer of nodes:", "We call this a \u201cdeep neural network\u201d because it has more layers than a traditional neural network.", "This idea has been around since the late 1960s. But until recently, training this large of a neural network was just too slow to be useful. But once we figured out how to use 3d graphics cards (which were designed to do matrix multiplication really fast) instead of normal computer processors, working with large neural networks suddenly became practical. In fact, the exact same NVIDIA GeForce GTX 1080 video card that you use to play Overwatch can be used to train neural networks incredibly quickly.", "But even though we can make our neural network really big and train it quickly with a 3d graphics card, that still isn\u2019t going to get us all the way to a solution. We need to be smarter about how we process images into our neural network.", "Think about it. It doesn\u2019t make sense to train a network to recognize an \u201c8\u201d at the top of a picture separately from training it to recognize an \u201c8\u201d at the bottom of a picture as if those were two totally different objects.", "There should be some way to make the neural network smart enough to know that an \u201c8\u201d anywhere in the picture is the same thing without all that extra training. Luckily\u2026 there is!", "As a human, you intuitively know that pictures have a hierarchy or conceptual structure. Consider this picture:", "As a human, you instantly recognize the hierarchy in this picture:", "Most importantly, we recognize the idea of a child no matter what surface the child is on. We don\u2019t have to re-learn the idea of child for every possible surface it could appear on.", "But right now, our neural network can\u2019t do this. It thinks that an \u201c8\u201d in a different part of the image is an entirely different thing. It doesn\u2019t understand that moving an object around in the picture doesn\u2019t make it something different. This means it has to re-learn the identify of each object in every possible position. That sucks.", "We need to give our neural network understanding of translation invariance \u2014 an \u201c8\u201d is an \u201c8\u201d no matter where in the picture it shows up.", "We\u2019ll do this using a process called Convolution. The idea of convolution is inspired partly by computer science and partly by biology (i.e. mad scientists literally poking cat brains with weird probes to figure out how cats process images).", "Instead of feeding entire images into our neural network as one grid of numbers, we\u2019re going to do something a lot smarter that takes advantage of the idea that an object is the same no matter where it appears in a picture.", "Here\u2019s how it\u2019s going to work, step by step \u2014", "Similar to our sliding window search above, let\u2019s pass a sliding window over the entire original image and save each result as a separate, tiny picture tile:", "By doing this, we turned our original image into 77 equally-sized tiny image tiles.", "Earlier, we fed a single image into a neural network to see if it was an \u201c8\u201d. We\u2019ll do the exact same thing here, but we\u2019ll do it for each individual image tile:", "However, there\u2019s one big twist: We\u2019ll keep the same neural network weights for every single tile in the same original image. In other words, we are treating every image tile equally. If something interesting appears in any given tile, we\u2019ll mark that tile as interesting.", "We don\u2019t want to lose track of the arrangement of the original tiles. So we save the result from processing each tile into a grid in the same arrangement as the original image. It looks like this:", "In other words, we\u2019ve started with a large image and we ended with a slightly smaller array that records which sections of our original image were the most interesting.", "The result of Step 3 was an array that maps out which parts of the original image are the most interesting. But that array is still pretty big:", "To reduce the size of the array, we downsample it using an algorithm called max pooling. It sounds fancy, but it isn\u2019t at all!", "We\u2019ll just look at each 2x2 square of the array and keep the biggest number:", "The idea here is that if we found something interesting in any of the four input tiles that makes up each 2x2 grid square, we\u2019ll just keep the most interesting bit. This reduces the size of our array while keeping the most important bits.", "So far, we\u2019ve reduced a giant image down into a fairly small array.", "Guess what? That array is just a bunch of numbers, so we can use that small array as input into another neural network. This final neural network will decide if the image is or isn\u2019t a match. To differentiate it from the convolution step, we call it a \u201cfully connected\u201d network.", "So from start to finish, our whole five-step pipeline looks like this:", "Our image processing pipeline is a series of steps: convolution, max-pooling, and finally a fully-connected network.", "When solving problems in the real world, these steps can be combined and stacked as many times as you want! You can have two, three or even ten convolution layers. You can throw in max pooling wherever you want to reduce the size of your data.", "The basic idea is to start with a large image and continually boil it down, step-by-step, until you finally have a single result. The more convolution steps you have, the more complicated features your network will be able to learn to recognize.", "For example, the first convolution step might learn to recognize sharp edges, the second convolution step might recognize beaks using it\u2019s knowledge of sharp edges, the third step might recognize entire birds using it\u2019s knowledge of beaks, etc.", "Here\u2019s what a more realistic deep convolutional network (like you would find in a research paper) looks like:", "In this case, they start a 224 x 224 pixel image, apply convolution and max pooling twice, apply convolution 3 more times, apply max pooling and then have two fully-connected layers. The end result is that the image is classified into one of 1000 categories!", "So how do you know which steps you need to combine to make your image classifier work?", "Honestly, you have to answer this by doing a lot of experimentation and testing. You might have to train 100 networks before you find the optimal structure and parameters for the problem you are solving. Machine learning involves a lot of trial and error!", "Now finally we know enough to write a program that can decide if a picture is a bird or not.", "As always, we need some data to get started. The free CIFAR10 data set contains 6,000 pictures of birds and 52,000 pictures of things that are not birds. But to get even more data we\u2019ll also add in the Caltech-UCSD Birds-200\u20132011 data set that has another 12,000 bird pics.", "Here\u2019s a few of the birds from our combined data set:", "This data set will work fine for our purposes, but 72,000 low-res images is still pretty small for real-world applications. If you want Google-level performance, you need millions of large images. In machine learning, having more data is almost always more important that having better algorithms. Now you know why Google is so happy to offer you unlimited photo storage. They want your sweet, sweet data!", "To build our classifier, we\u2019ll use TFLearn. TFlearn is a wrapper around Google\u2019s TensorFlow deep learning library that exposes a simplified API. It makes building convolutional neural networks as easy as writing a few lines of code to define the layers of our network.", "Here\u2019s the code to define and train the network:", "If you are training with a good video card with enough RAM (like an Nvidia GeForce GTX 980 Ti or better), this will be done in less than an hour. If you are training with a normal cpu, it might take a lot longer.", "As it trains, the accuracy will increase. After the first pass, I got 75.4% accuracy. After just 10 passes, it was already up to 91.7%. After 50 or so passes, it capped out around 95.5% accuracy and additional training didn\u2019t help, so I stopped it there.", "Congrats! Our program can now recognize birds in images!", "Now that we have a trained neural network, we can use it! Here\u2019s a simple script that takes in a single image file and predicts if it is a bird or not.", "But to really see how effective our network is, we need to test it with lots of images. The data set I created held back 15,000 images for validation. When I ran those 15,000 images through the network, it predicted the correct answer 95% of the time.", "That seems pretty good, right? Well\u2026 it depends!", "Our network claims to be 95% accurate. But the devil is in the details. That could mean all sorts of different things.", "For example, what if 5% of our training images were birds and the other 95% were not birds? A program that guessed \u201cnot a bird\u201d every single time would be 95% accurate! But it would also be 100% useless.", "We need to look more closely at the numbers than just the overall accuracy. To judge how good a classification system really is, we need to look closely at how it failed, not just the percentage of the time that it failed.", "Instead of thinking about our predictions as \u201cright\u201d and \u201cwrong\u201d, let\u2019s break them down into four separate categories \u2014", "Using our validation set of 15,000 images, here\u2019s how many times our predictions fell into each category:", "Why do we break our results down like this? Because not all mistakes are created equal.", "Imagine if we were writing a program to detect cancer from an MRI image. If we were detecting cancer, we\u2019d rather have false positives than false negatives. False negatives would be the worse possible case \u2014 that\u2019s when the program told someone they definitely didn\u2019t have cancer but they actually did.", "Instead of just looking at overall accuracy, we calculate Precision and Recall metrics. Precision and Recall metrics give us a clearer picture of how well we did:", "This tells us that 97% of the time we guessed \u201cBird\u201d, we were right! But it also tells us that we only found 90% of the actual birds in the data set. In other words, we might not find every bird but we are pretty sure about it when we do find one!", "Now that you know the basics of deep convolutional networks, you can try out some of the examples that come with tflearn to get your hands dirty with different neural network architectures. It even comes with built-in data sets so you don\u2019t even have to find your own images.", "You also know enough now to start branching and learning about other areas of machine learning. Why not learn how to use algorithms to train computers how to play Atari games next?", "If you liked this article, please consider signing up for my Machine Learning is Fun! email list. I\u2019ll only email you when I have something new and awesome to share. It\u2019s the best way to find out when I write more articles like this.", "You can also follow me on Twitter at @ageitgey, email me directly or find me on linkedin. I\u2019d love to hear from you if I can help you or your team with machine learning.", "Now continue on to Machine Learning is Fun Part 4, Part 5 and Part 6!", "Interested in computers and machine learning. Likes to write about it.", "Interested in computers and machine learning. Likes to write about it."], "all_outgoing_urls": [{"url": "https://medium.com/?source=---two_column_layout_nav----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ageitgey?source=post_page-----f40359318721--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ageitgey?source=post_page-----f40359318721--------------------------------", "anchor_text": "Adam Geitgey"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-80ea3ec3c471", "anchor_text": "Part 1"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-2-a26a10b68df3", "anchor_text": "Part 2"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-3-deep-learning-and-convolutional-neural-networks-f40359318721", "anchor_text": "Part 3"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78", "anchor_text": "Part 4"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-5-language-translation-with-deep-learning-and-the-magic-of-sequences-2ace0acca0aa", "anchor_text": "Part 5"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-6-how-to-do-speech-recognition-with-deep-learning-28293c162f7a", "anchor_text": "Part 6"}, {"url": "https://medium.com/@ageitgey/abusing-generative-adversarial-networks-to-make-8-bit-pixel-art-e45d9b96cee7", "anchor_text": "Part 7"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-8-how-to-intentionally-trick-neural-networks-b55da32b7196", "anchor_text": "Part 8"}, {"url": "https://zhuanlan.zhihu.com/p/24524583", "anchor_text": "\u666e\u901a\u8bdd"}, {"url": "http://algotravelling.com/ru/%D0%BC%D0%B0%D1%88%D0%B8%D0%BD%D0%BD%D0%BE%D0%B5-%D0%BE%D0%B1%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D1%8D%D1%82%D0%BE-%D0%B2%D0%B5%D1%81%D0%B5%D0%BB%D0%BE-3/", "anchor_text": "\u0420\u0443\u0441\u0441\u043a\u0438\u0439"}, {"url": "https://medium.com/@jongdae.lim/\uae30\uacc4-\ud559\uc2b5-machine-learning-\uc740-\uc990\uac81\ub2e4-part-3-928a841a3aa", "anchor_text": "\ud55c\uad6d\uc5b4"}, {"url": "https://medium.com/machina-sapiens/aprendizagem-de-m\u00e1quina-\u00e9-divertido-parte-3-deep-learning-e-redes-neuronais-convolutivas-879e0ee7ba48", "anchor_text": "Portugu\u00eas"}, {"url": "https://viblo.asia/p/machine-learning-that-thu-vi-3-tim-kiem-anh-chua-chim-vyDZOX1xlwj", "anchor_text": "Ti\u1ebfng Vi\u1ec7t"}, {"url": "https://shahaab-co.ir/mag/edu/ml/machine-learning-is-fun-part-3/", "anchor_text": "\u0641\u0627\u0631\u0633\u06cc"}, {"url": "https://medium.com/botsupply/il-machine-learning-\u00e8-divertente-parte-3-deep-learning-e-convolutional-neural-network-cnns-cc106559ffa9", "anchor_text": "Italiano"}, {"url": "https://www.machinelearningisfun.com/get-the-book/", "anchor_text": "I\u2019ve written a new book based on these articles"}, {"url": "https://www.machinelearningisfun.com/get-the-book/", "anchor_text": "Check it out now"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-80ea3ec3c471", "anchor_text": "Part 1"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-2-a26a10b68df3#.lbsa5her1", "anchor_text": "Part 2"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-80ea3ec3c471", "anchor_text": "part 1"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-2-a26a10b68df3#.lbsa5her1", "anchor_text": "part 2"}, {"url": "http://xkcd.com/1425/", "anchor_text": "View original here"}, {"url": "http://xkcd.com/1425/", "anchor_text": "this famous xkcd comic"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-2-a26a10b68df3#.lbsa5her1", "anchor_text": "Part 2"}, {"url": "http://yann.lecun.com/exdb/mnist/", "anchor_text": "MNIST data set of handwritten numbers"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-2-a26a10b68df3#.lbsa5her1", "anchor_text": "Part 2"}, {"url": "https://en.wikipedia.org/wiki/Overwatch_(video_game)", "anchor_text": "Overwatch"}, {"url": "https://en.wikipedia.org/wiki/Convolutional_neural_network#Pooling_layer", "anchor_text": "max pooling"}, {"url": "https://www.cs.toronto.edu/~kriz/cifar.html", "anchor_text": "CIFAR10 data set"}, {"url": "http://www.vision.caltech.edu/visipedia/CUB-200-2011.html", "anchor_text": "Caltech-UCSD Birds-200\u20132011 data set"}, {"url": "http://tflearn.org/", "anchor_text": "TFLearn"}, {"url": "https://www.tensorflow.org/", "anchor_text": "TensorFlow"}, {"url": "https://gist.github.com/ageitgey/a40dded08e82e59724c70da23786bbf0", "anchor_text": "Here\u2019s a simple script"}, {"url": "https://en.wikipedia.org/wiki/Precision_and_recall", "anchor_text": "Precision and Recall"}, {"url": "https://github.com/tflearn/tflearn/tree/master/examples#tflearn-examples", "anchor_text": "examples that come with tflearn"}, {"url": "http://karpathy.github.io/2016/05/31/rl/", "anchor_text": "how to use algorithms to train computers how to play Atari games"}, {"url": "http://eepurl.com/b9fg2T", "anchor_text": "signing up for my Machine Learning is Fun! email list"}, {"url": "https://twitter.com/ageitgey", "anchor_text": "@ageitgey"}, {"url": "https://www.linkedin.com/in/ageitgey", "anchor_text": "find me on linkedin"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-4-modern-face-recognition-with-deep-learning-c3cffc121d78", "anchor_text": "Machine Learning is Fun Part 4"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-5-language-translation-with-deep-learning-and-the-magic-of-sequences-2ace0acca0aa", "anchor_text": "Part 5"}, {"url": "https://medium.com/@ageitgey/machine-learning-is-fun-part-6-how-to-do-speech-recognition-with-deep-learning-28293c162f7a", "anchor_text": "Part 6"}, {"url": "https://medium.com/tag/machine-learning?source=post_page-----f40359318721---------------machine_learning-----------------", "anchor_text": "Machine Learning"}, {"url": "https://medium.com/tag/artificial-intelligence?source=post_page-----f40359318721---------------artificial_intelligence-----------------", "anchor_text": "Artificial Intelligence"}, {"url": "https://medium.com/tag/deep-learning?source=post_page-----f40359318721---------------deep_learning-----------------", "anchor_text": "Deep Learning"}, {"url": "https://medium.com/@ageitgey?source=post_page-----f40359318721--------------------------------", "anchor_text": "More from Adam Geitgey"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F19392547c94f&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40ageitgey%2Fmachine-learning-is-fun-part-3-deep-learning-and-convolutional-neural-networks-f40359318721&newsletterV3=ba4c55e4aa3d&newsletterV3Id=19392547c94f&user=Adam+Geitgey&userId=ba4c55e4aa3d&source=-----f40359318721---------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://medium.com/?source=post_page-----f40359318721--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/about?autoplay=1&source=post_page-----f40359318721--------------------------------", "anchor_text": "About"}, {"url": "https://help.medium.com/hc/en-us?source=post_page-----f40359318721--------------------------------", "anchor_text": "Help"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=post_page-----f40359318721--------------------------------", "anchor_text": "Terms"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=post_page-----f40359318721--------------------------------", "anchor_text": "Privacy"}, {"url": "https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8&ct=post_page&source=post_page-----f40359318721--------------------------------", "anchor_text": ""}, {"url": "https://play.google.com/store/apps/details?id=com.medium.reader&source=post_page-----f40359318721--------------------------------", "anchor_text": ""}, {"url": "https://medium.com/plans?source=upgrade_membership---two_column_layout_sidebar----------------------------------", "anchor_text": "Get unlimited access"}, {"url": "https://medium.com/@ageitgey?source=---two_column_layout_sidebar----------------------------------", "anchor_text": ""}, {"url": "https://medium.com/@ageitgey?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Adam Geitgey"}, {"url": "https://medium.com/@ageitgey/followers?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "56K Followers"}, {"url": "https://medium.com/m/signin?actionUrl=%2F_%2Fapi%2Fsubscriptions%2Fnewsletters%2F19392547c94f&operation=register&redirect=https%3A%2F%2Fmedium.com%2F%40ageitgey%2Fmachine-learning-is-fun-part-3-deep-learning-and-convolutional-neural-networks-f40359318721&newsletterV3=ba4c55e4aa3d&newsletterV3Id=19392547c94f&user=Adam+Geitgey&userId=ba4c55e4aa3d&source=---two_column_layout_sidebar-----------------------subscribe_user-----------", "anchor_text": ""}, {"url": "https://help.medium.com/hc/en-us?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Help"}, {"url": "https://medium.statuspage.io/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Status"}, {"url": "https://about.medium.com/creators/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Writers"}, {"url": "https://blog.medium.com/?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Blog"}, {"url": "https://medium.com/jobs-at-medium/work-at-medium-959d1a85284e?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Careers"}, {"url": "https://policy.medium.com/medium-privacy-policy-f03bf92035c9?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Privacy"}, {"url": "https://policy.medium.com/medium-terms-of-service-9db0094a1e0f?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Terms"}, {"url": "https://medium.com/about?autoplay=1&source=---two_column_layout_sidebar----------------------------------", "anchor_text": "About"}, {"url": "https://speechify.com/medium?source=---two_column_layout_sidebar----------------------------------", "anchor_text": "Text to speech"}]}, "scrape_status": {"code": "1"}}